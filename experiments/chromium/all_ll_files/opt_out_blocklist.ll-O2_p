; ModuleID = '../../components/blocklist/opt_out_blocklist/opt_out_blocklist.cc'
source_filename = "../../components/blocklist/opt_out_blocklist/opt_out_blocklist.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blocklist::OptOutBlocklist" = type { i32 (...)**, %"class.std::__1::unique_ptr", i8, %"class.std::__1::unique_ptr.46", %"class.std::__1::queue", %"class.base::Clock"*, %"class.blocklist::OptOutBlocklistDelegate"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blocklist::BlocklistData"* }
%"class.blocklist::BlocklistData" = type { %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.0", i64, %"class.std::__1::map", %"class.std::__1::unique_ptr.0", %"class.std::__1::map.23", %"class.std::__1::map.34" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blocklist::OptOutBlocklistItem"* }
%"class.blocklist::OptOutBlocklistItem" = type <{ i64, i32, [4 x i8], %"class.base::TimeDelta", %"class.std::__1::priority_queue", %"class.absl::optional", i32, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::priority_queue" = type <{ %"class.std::__1::vector", %"struct.std::__1::less", [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.std::__1::__compressed_pair.7" }
%"class.blocklist::OptOutBlocklistItem::OptOutRecord" = type <{ %"class.base::Time", i8, [7 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* }
%"struct.std::__1::less" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Time" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.blocklist::BlocklistData::Policy"* }
%"struct.blocklist::BlocklistData::Policy" = type <{ %"class.base::TimeDelta", i64, i32, [4 x i8] }>
%"class.std::__1::map.23" = type { %"class.std::__1::__tree.24" }
%"class.std::__1::__tree.24" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::map.34" = type { %"class.std::__1::__tree.35" }
%"class.std::__1::__tree.35" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blocklist::OptOutStore"* }
%"class.blocklist::OptOutStore" = type { i32 (...)** }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.base::OnceCallback"*, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Clock" = type { i32 (...)** }
%"class.blocklist::OptOutBlocklistDelegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.53 }
%class.scoped_refptr.53 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.54", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.54" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.55" }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i8 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.61 }
%class.scoped_refptr.61 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::OnceCallback.60" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.75" }
%"struct.std::__1::pair.75" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.64 }
%union.anon.64 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { i32*, i32*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::tuple.79" = type { %"struct.std::__1::__tuple_impl.80" }
%"struct.std::__1::__tuple_impl.80" = type { %"class.std::__1::__tuple_leaf.81", %"class.std::__1::__tuple_leaf.82", %"class.std::__1::__tuple_leaf.83", %"class.std::__1::__tuple_leaf.84", %"class.std::__1::__tuple_leaf.85" }
%"class.std::__1::__tuple_leaf.81" = type { %"class.base::internal::UnretainedWrapper" }
%"class.base::internal::UnretainedWrapper" = type { %"class.blocklist::OptOutBlocklist"* }
%"class.std::__1::__tuple_leaf.82" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__tuple_leaf.83" = type { i8 }
%"class.std::__1::__tuple_leaf.84" = type { i32 }
%"class.std::__1::__tuple_leaf.85" = type { %"class.base::Time" }

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_ = comdat any

$_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPN4base12OnceCallbackIFvvEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS3_13BlocklistDataENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_ = comdat any

$_ZN4base8internal9BindStateIMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS2_13BlocklistDataENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS3_13BlocklistDataENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN9blocklist15OptOutBlocklistEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbiNS_4TimeEEJNS0_17UnretainedWrapperIS4_EESB_biSE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN9blocklist15OptOutBlocklistEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEbiNS_4TimeEEJNS0_17UnretainedWrapperIS3_EESA_biSD_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN9blocklist15OptOutBlocklistEFvNS_4TimeES5_EJNS0_17UnretainedWrapperIS4_EES5_S5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN9blocklist15OptOutBlocklistEFvNS_4TimeES4_EJNS0_17UnretainedWrapperIS3_EES4_S4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_ = comdat any

$_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ShrinkCapacityIfNecessaryEv = comdat any

@_ZTVN9blocklist15OptOutBlocklistE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blocklist::OptOutBlocklist"*)* @_ZN9blocklist15OptOutBlocklistD2Ev to i8*), i8* bitcast (void (%"class.blocklist::OptOutBlocklist"*)* @_ZN9blocklist15OptOutBlocklistD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1

@_ZN9blocklist15OptOutBlocklistD1Ev = hidden unnamed_addr alias void (%"class.blocklist::OptOutBlocklist"*), void (%"class.blocklist::OptOutBlocklist"*)* @_ZN9blocklist15OptOutBlocklistD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9blocklist15OptOutBlocklistC2ENSt3__110unique_ptrINS_11OptOutStoreENS1_14default_deleteIS3_EEEEPN4base5ClockEPNS_23OptOutBlocklistDelegateE(%"class.blocklist::OptOutBlocklist"*, %"class.blocklist::OptOutStore"*, %"class.base::Clock"*, %"class.blocklist::OptOutBlocklistDelegate"*) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.blocklist::OptOutStore"* %1 to i64
  %6 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN9blocklist15OptOutBlocklistE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 2
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 3
  %11 = bitcast %"class.std::__1::unique_ptr.46"* %10 to i64*
  store i64 %5, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4
  %13 = bitcast %"class.std::__1::queue"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #13
  %14 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 5
  store %"class.base::Clock"* %2, %"class.base::Clock"** %14, align 8
  %15 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 6
  store %"class.blocklist::OptOutBlocklistDelegate"* %3, %"class.blocklist::OptOutBlocklistDelegate"** %15, align 8
  %16 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 7, i32 0
  %17 = ptrtoint %"class.blocklist::OptOutBlocklist"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %16, i64 %17) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9blocklist15OptOutBlocklistD2Ev(%"class.blocklist::OptOutBlocklist"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN9blocklist15OptOutBlocklistE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #13
  %4 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4, i32 0, i32 2
  %9 = load i64, i64* %8, align 8
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm(%"class.base::circular_deque"* %5, i64 %7, i64 %9) #13
  %10 = bitcast %"class.std::__1::queue"* %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @free(i8* %11) #13
  %12 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.blocklist::OptOutStore"*, %"class.blocklist::OptOutStore"** %12, align 8
  store %"class.blocklist::OptOutStore"* null, %"class.blocklist::OptOutStore"** %12, align 8
  %14 = icmp eq %"class.blocklist::OptOutStore"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blocklist::OptOutStore"* %13 to void (%"class.blocklist::OptOutStore"*)***
  %17 = load void (%"class.blocklist::OptOutStore"*)**, void (%"class.blocklist::OptOutStore"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blocklist::OptOutStore"*)*, void (%"class.blocklist::OptOutStore"*)** %17, i64 1
  %19 = load void (%"class.blocklist::OptOutStore"*)*, void (%"class.blocklist::OptOutStore"*)** %18, align 8
  tail call void %19(%"class.blocklist::OptOutStore"* nonnull %13) #13
  br label %20

20:                                               ; preds = %1, %15
  %21 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.blocklist::BlocklistData"*, %"class.blocklist::BlocklistData"** %21, align 8
  store %"class.blocklist::BlocklistData"* null, %"class.blocklist::BlocklistData"** %21, align 8
  %23 = icmp eq %"class.blocklist::BlocklistData"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  tail call void @_ZN9blocklist13BlocklistDataD1Ev(%"class.blocklist::BlocklistData"* nonnull %22) #13
  %25 = bitcast %"class.blocklist::BlocklistData"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #14
  br label %26

26:                                               ; preds = %20, %24
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN9blocklist15OptOutBlocklistD0Ev(%"class.blocklist::OptOutBlocklist"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9blocklist15OptOutBlocklist4InitEv(%"class.blocklist::OptOutBlocklist"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.std::__1::map.34", align 16
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::__1::map.34", align 16
  %9 = alloca %"class.base::OnceCallback.60", align 8
  %10 = alloca %"class.base::WeakPtr", align 8
  %11 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 0, i64* %12, align 8
  %13 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  store i64 0, i64* %5, align 8
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #13
  store i32 0, i32* %6, align 4
  %15 = bitcast %"class.blocklist::OptOutBlocklist"* %0 to i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)***
  %16 = load i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)**, i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)*, i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)** %16, i64 2
  %18 = load i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)*, i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)** %17, align 8
  %19 = call zeroext i1 %18(%"class.blocklist::OptOutBlocklist"* %0, %"class.base::TimeDelta"* nonnull %4, i64* nonnull %5, i32* nonnull %6) #13
  br i1 %19, label %20, label %31

20:                                               ; preds = %1
  %21 = call i8* @_Znwm(i64 24) #14
  %22 = bitcast i8* %21 to %"struct.blocklist::BlocklistData::Policy"*
  %23 = load i64, i64* %12, align 8
  %24 = load i64, i64* %5, align 8
  %25 = load i32, i32* %6, align 4
  %26 = bitcast i8* %21 to i64*
  store i64 %23, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %21, i64 8
  %28 = bitcast i8* %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %21, i64 16
  %30 = bitcast i8* %29 to i32*
  store i32 %25, i32* %30, align 8
  br label %31

31:                                               ; preds = %20, %1
  %32 = phi %"struct.blocklist::BlocklistData::Policy"* [ %22, %20 ], [ null, %1 ]
  %33 = load i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)**, i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)*** %15, align 8
  %34 = getelementptr inbounds i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)*, i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)** %33, i64 3
  %35 = load i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)*, i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)** %34, align 8
  %36 = call zeroext i1 %35(%"class.blocklist::OptOutBlocklist"* %0, %"class.base::TimeDelta"* nonnull %4, i64* nonnull %5, i32* nonnull %6) #13
  br i1 %36, label %37, label %48

37:                                               ; preds = %31
  %38 = call i8* @_Znwm(i64 24) #14
  %39 = bitcast i8* %38 to %"struct.blocklist::BlocklistData::Policy"*
  %40 = load i64, i64* %12, align 8
  %41 = load i64, i64* %5, align 8
  %42 = load i32, i32* %6, align 4
  %43 = bitcast i8* %38 to i64*
  store i64 %40, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %38, i64 8
  %45 = bitcast i8* %44 to i64*
  store i64 %41, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %38, i64 16
  %47 = bitcast i8* %46 to i32*
  store i32 %42, i32* %47, align 8
  br label %48

48:                                               ; preds = %37, %31
  %49 = phi %"struct.blocklist::BlocklistData::Policy"* [ %39, %37 ], [ null, %31 ]
  %50 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #13
  store i64 0, i64* %7, align 8
  %51 = bitcast %"class.blocklist::OptOutBlocklist"* %0 to i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*, i64*)***
  %52 = load i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*, i64*)**, i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*, i64*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*, i64*)*, i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*, i64*)** %52, i64 4
  %54 = load i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*, i64*)*, i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*, i64*)** %53, align 8
  %55 = call zeroext i1 %54(%"class.blocklist::OptOutBlocklist"* %0, %"class.base::TimeDelta"* nonnull %4, i64* nonnull %5, i32* nonnull %6, i64* nonnull %7) #13
  br i1 %55, label %56, label %67

56:                                               ; preds = %48
  %57 = call i8* @_Znwm(i64 24) #14
  %58 = bitcast i8* %57 to %"struct.blocklist::BlocklistData::Policy"*
  %59 = load i64, i64* %12, align 8
  %60 = load i64, i64* %5, align 8
  %61 = load i32, i32* %6, align 4
  %62 = bitcast i8* %57 to i64*
  store i64 %59, i64* %62, align 8
  %63 = getelementptr inbounds i8, i8* %57, i64 8
  %64 = bitcast i8* %63 to i64*
  store i64 %60, i64* %64, align 8
  %65 = getelementptr inbounds i8, i8* %57, i64 16
  %66 = bitcast i8* %65 to i32*
  store i32 %61, i32* %66, align 8
  br label %67

67:                                               ; preds = %56, %48
  %68 = phi %"struct.blocklist::BlocklistData::Policy"* [ %58, %56 ], [ null, %48 ]
  %69 = load i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)**, i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)*** %15, align 8
  %70 = getelementptr inbounds i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)*, i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)** %69, i64 5
  %71 = load i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)*, i1 (%"class.blocklist::OptOutBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)** %70, align 8
  %72 = call zeroext i1 %71(%"class.blocklist::OptOutBlocklist"* %0, %"class.base::TimeDelta"* nonnull %4, i64* nonnull %5, i32* nonnull %6) #13
  br i1 %72, label %73, label %84

73:                                               ; preds = %67
  %74 = call i8* @_Znwm(i64 24) #14
  %75 = bitcast i8* %74 to %"struct.blocklist::BlocklistData::Policy"*
  %76 = load i64, i64* %12, align 8
  %77 = load i64, i64* %5, align 8
  %78 = load i32, i32* %6, align 4
  %79 = bitcast i8* %74 to i64*
  store i64 %76, i64* %79, align 8
  %80 = getelementptr inbounds i8, i8* %74, i64 8
  %81 = bitcast i8* %80 to i64*
  store i64 %77, i64* %81, align 8
  %82 = getelementptr inbounds i8, i8* %74, i64 16
  %83 = bitcast i8* %82 to i32*
  store i32 %78, i32* %83, align 8
  br label %84

84:                                               ; preds = %73, %67
  %85 = phi %"struct.blocklist::BlocklistData::Policy"* [ %75, %73 ], [ null, %67 ]
  %86 = bitcast %"class.std::__1::map.34"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #13
  %87 = bitcast %"class.blocklist::OptOutBlocklist"* %0 to void (%"class.std::__1::map.34"*, %"class.blocklist::OptOutBlocklist"*)***
  %88 = load void (%"class.std::__1::map.34"*, %"class.blocklist::OptOutBlocklist"*)**, void (%"class.std::__1::map.34"*, %"class.blocklist::OptOutBlocklist"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.std::__1::map.34"*, %"class.blocklist::OptOutBlocklist"*)*, void (%"class.std::__1::map.34"*, %"class.blocklist::OptOutBlocklist"*)** %88, i64 6
  %90 = load void (%"class.std::__1::map.34"*, %"class.blocklist::OptOutBlocklist"*)*, void (%"class.std::__1::map.34"*, %"class.blocklist::OptOutBlocklist"*)** %89, align 8
  call void %90(%"class.std::__1::map.34"* nonnull sret %8, %"class.blocklist::OptOutBlocklist"* %0) #13
  %91 = bitcast %"class.std::__1::map.34"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91)
  %92 = call i8* @_Znwm(i64 128) #14
  %93 = bitcast i8* %92 to %"class.blocklist::BlocklistData"*
  %94 = load i64, i64* %7, align 8
  %95 = bitcast %"class.std::__1::map.34"* %8 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 16
  %97 = bitcast %"class.std::__1::map.34"* %3 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %97, align 16
  %98 = getelementptr inbounds %"class.std::__1::map.34", %"class.std::__1::map.34"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %99 = getelementptr inbounds %"class.std::__1::map.34", %"class.std::__1::map.34"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %100 = load i64, i64* %98, align 16
  store i64 %100, i64* %99, align 16
  %101 = icmp eq i64 %100, 0
  %102 = getelementptr inbounds %"class.std::__1::map.34", %"class.std::__1::map.34"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %101, label %103, label %105

103:                                              ; preds = %84
  %104 = getelementptr inbounds %"class.std::__1::map.34", %"class.std::__1::map.34"* %3, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %102, %"class.std::__1::__tree_end_node"** %104, align 16
  br label %112

105:                                              ; preds = %84
  %106 = extractelement <2 x i64> %96, i32 1
  %107 = inttoptr i64 %106 to %"class.std::__1::__tree_node_base"*
  %108 = getelementptr inbounds %"class.std::__1::map.34", %"class.std::__1::map.34"* %8, i64 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %107, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %102, %"class.std::__1::__tree_end_node"** %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::map.34", %"class.std::__1::map.34"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %110, %"class.std::__1::__tree_end_node"** %108, align 16
  %111 = bitcast %"class.std::__1::__tree_end_node"* %110 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 16, i1 false) #13
  br label %112

112:                                              ; preds = %103, %105
  call void @_ZN9blocklist13BlocklistDataC1ENSt3__110unique_ptrINS0_6PolicyENS1_14default_deleteIS3_EEEES6_S6_S6_mNS1_3mapIiiNS1_4lessIiEENS1_9allocatorINS1_4pairIKiiEEEEEE(%"class.blocklist::BlocklistData"* nonnull %93, %"struct.blocklist::BlocklistData::Policy"* %32, %"struct.blocklist::BlocklistData::Policy"* %49, %"struct.blocklist::BlocklistData::Policy"* %68, %"struct.blocklist::BlocklistData::Policy"* %85, i64 %94, %"class.std::__1::map.34"* nonnull %3) #13
  %113 = getelementptr inbounds %"class.std::__1::map.34", %"class.std::__1::map.34"* %3, i64 0, i32 0
  %114 = bitcast %"class.std::__1::__tree_end_node"* %102 to %"class.std::__1::__tree_node"**
  %115 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %114, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.35"* nonnull %113, %"class.std::__1::__tree_node"* %115) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91)
  %116 = getelementptr inbounds %"class.std::__1::map.34", %"class.std::__1::map.34"* %8, i64 0, i32 0
  %117 = getelementptr inbounds %"class.std::__1::map.34", %"class.std::__1::map.34"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %118 = bitcast %"class.std::__1::__tree_end_node"* %117 to %"class.std::__1::__tree_node"**
  %119 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %118, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.35"* nonnull %116, %"class.std::__1::__tree_node"* %119) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #13
  %120 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %121 = load %"class.blocklist::OptOutStore"*, %"class.blocklist::OptOutStore"** %120, align 8
  %122 = icmp eq %"class.blocklist::OptOutStore"* %121, null
  br i1 %122, label %147, label %123

123:                                              ; preds = %112
  %124 = bitcast %"class.base::WeakPtr"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #13
  %125 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #13, !noalias !2
  %126 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 7, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %126) #13, !noalias !2
  %127 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 7, i32 0, i32 1
  %128 = load i64, i64* %127, align 8, !noalias !2
  %129 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %129, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %128) #13
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #13, !noalias !2
  %130 = call i8* @_Znwm(i64 64) #14, !noalias !5
  %131 = bitcast i8* %130 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %131, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS3_13BlocklistDataENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS2_13BlocklistDataENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS3_13BlocklistDataENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE) #13, !noalias !5
  %132 = getelementptr inbounds i8, i8* %130, i64 32
  %133 = bitcast i8* %132 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blocklist::OptOutBlocklist"*, %"class.blocklist::BlocklistData"*)* @_ZN9blocklist15OptOutBlocklist17LoadBlockListDoneENSt3__110unique_ptrINS_13BlocklistDataENS1_14default_deleteIS3_EEEE to i64), i64 0>, <2 x i64>* %133, align 8, !noalias !5
  %134 = getelementptr inbounds i8, i8* %130, i64 48
  %135 = bitcast i8* %134 to %"class.base::internal::WeakReference"*
  %136 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %135, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %136) #13, !noalias !5
  %137 = getelementptr inbounds i8, i8* %130, i64 56
  %138 = bitcast i8* %137 to i64*
  %139 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8, !noalias !5
  store i64 %140, i64* %138, align 8, !noalias !5
  %141 = bitcast %"class.base::OnceCallback.60"* %9 to i8**
  store i8* %130, i8** %141, align 8, !alias.scope !5
  %142 = bitcast %"class.blocklist::OptOutStore"* %121 to void (%"class.blocklist::OptOutStore"*, %"class.blocklist::BlocklistData"*, %"class.base::OnceCallback.60"*)***
  %143 = load void (%"class.blocklist::OptOutStore"*, %"class.blocklist::BlocklistData"*, %"class.base::OnceCallback.60"*)**, void (%"class.blocklist::OptOutStore"*, %"class.blocklist::BlocklistData"*, %"class.base::OnceCallback.60"*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.blocklist::OptOutStore"*, %"class.blocklist::BlocklistData"*, %"class.base::OnceCallback.60"*)*, void (%"class.blocklist::OptOutStore"*, %"class.blocklist::BlocklistData"*, %"class.base::OnceCallback.60"*)** %143, i64 3
  %145 = load void (%"class.blocklist::OptOutStore"*, %"class.blocklist::BlocklistData"*, %"class.base::OnceCallback.60"*)*, void (%"class.blocklist::OptOutStore"*, %"class.blocklist::BlocklistData"*, %"class.base::OnceCallback.60"*)** %144, align 8
  call void %145(%"class.blocklist::OptOutStore"* nonnull %121, %"class.blocklist::BlocklistData"* nonnull %93, %"class.base::OnceCallback.60"* nonnull %9) #13
  %146 = getelementptr inbounds %"class.base::OnceCallback.60", %"class.base::OnceCallback.60"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %146) #13
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %129) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #13
  br label %148

147:                                              ; preds = %112
  call void @_ZN9blocklist15OptOutBlocklist17LoadBlockListDoneENSt3__110unique_ptrINS_13BlocklistDataENS1_14default_deleteIS3_EEEE(%"class.blocklist::OptOutBlocklist"* %0, %"class.blocklist::BlocklistData"* nonnull %93)
  br label %148

148:                                              ; preds = %123, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9blocklist15OptOutBlocklist17LoadBlockListDoneENSt3__110unique_ptrINS_13BlocklistDataENS1_14default_deleteIS3_EEEE(%"class.blocklist::OptOutBlocklist"*, %"class.blocklist::BlocklistData"*) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = ptrtoint %"class.blocklist::BlocklistData"* %1 to i64
  %5 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 2
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blocklist::BlocklistData"*, %"class.blocklist::BlocklistData"** %7, align 8
  %9 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %4, i64* %9, align 8
  %10 = icmp eq %"class.blocklist::BlocklistData"* %8, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  tail call void @_ZN9blocklist13BlocklistDataD1Ev(%"class.blocklist::BlocklistData"* nonnull %8) #13
  %12 = bitcast %"class.blocklist::BlocklistData"* %8 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  %13 = load %"class.blocklist::BlocklistData"*, %"class.blocklist::BlocklistData"** %7, align 8
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi %"class.blocklist::BlocklistData"* [ %1, %2 ], [ %13, %11 ]
  %16 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 6
  %17 = load %"class.blocklist::OptOutBlocklistDelegate"*, %"class.blocklist::OptOutBlocklistDelegate"** %16, align 8
  %18 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 5
  %19 = load %"class.base::Clock"*, %"class.base::Clock"** %18, align 8
  %20 = bitcast %"class.base::Clock"* %19 to i64 (%"class.base::Clock"*)***
  %21 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %20, align 8
  %22 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %21, i64 2
  %23 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %22, align 8
  %24 = tail call i64 %23(%"class.base::Clock"* %19) #13
  %25 = tail call zeroext i1 @_ZNK9blocklist13BlocklistData23IsUserOptedOutInGeneralEN4base4TimeE(%"class.blocklist::BlocklistData"* %15, i64 %24) #13
  %26 = bitcast %"class.blocklist::OptOutBlocklistDelegate"* %17 to void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)***
  %27 = load void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)**, void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)*, void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)** %27, i64 3
  %29 = load void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)*, void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)** %28, align 8
  tail call void %29(%"class.blocklist::OptOutBlocklistDelegate"* %17, i1 zeroext %25) #13
  %30 = load %"class.blocklist::BlocklistData"*, %"class.blocklist::BlocklistData"** %7, align 8
  %31 = getelementptr inbounds %"class.blocklist::BlocklistData", %"class.blocklist::BlocklistData"* %30, i64 0, i32 6, i32 0, i32 0
  %32 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %31, align 8
  %33 = getelementptr inbounds %"class.blocklist::BlocklistData", %"class.blocklist::BlocklistData"* %30, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %32, %33
  br i1 %34, label %35, label %45

35:                                               ; preds = %100, %14
  %36 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4
  %37 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4, i32 0, i32 1
  %38 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4, i32 0, i32 2
  %39 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %36, i64 0, i32 0, i32 0
  %41 = bitcast %"class.base::OnceCallback"* %3 to i8*
  %42 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %36, i64 0, i32 0
  br label %105

45:                                               ; preds = %14, %103
  %46 = phi %"class.blocklist::BlocklistData"* [ %104, %103 ], [ %30, %14 ]
  %47 = phi %"class.std::__1::__tree_end_node"* [ %101, %103 ], [ %32, %14 ]
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 4
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to %"class.std::__1::basic_string"*
  %50 = load %"class.base::Clock"*, %"class.base::Clock"** %18, align 8
  %51 = bitcast %"class.base::Clock"* %50 to i64 (%"class.base::Clock"*)***
  %52 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %51, align 8
  %53 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %52, i64 2
  %54 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %53, align 8
  %55 = tail call i64 %54(%"class.base::Clock"* %50) #13
  %56 = tail call zeroext i1 @_ZNK9blocklist13BlocklistData17IsHostBlocklistedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base4TimeE(%"class.blocklist::BlocklistData"* %46, %"class.std::__1::basic_string"* dereferenceable(24) %49, i64 %55) #13
  br i1 %56, label %57, label %72

57:                                               ; preds = %45
  %58 = load %"class.blocklist::OptOutBlocklistDelegate"*, %"class.blocklist::OptOutBlocklistDelegate"** %16, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 14
  %60 = bitcast %"class.std::__1::__tree_end_node"* %59 to i8*
  %61 = load i8, i8* %60, align 8
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %57
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #15
  unreachable

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 15
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.blocklist::OptOutBlocklistDelegate"* %58 to void (%"class.blocklist::OptOutBlocklistDelegate"*, %"class.std::__1::basic_string"*, i64)***
  %69 = load void (%"class.blocklist::OptOutBlocklistDelegate"*, %"class.std::__1::basic_string"*, i64)**, void (%"class.blocklist::OptOutBlocklistDelegate"*, %"class.std::__1::basic_string"*, i64)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blocklist::OptOutBlocklistDelegate"*, %"class.std::__1::basic_string"*, i64)*, void (%"class.blocklist::OptOutBlocklistDelegate"*, %"class.std::__1::basic_string"*, i64)** %69, i64 2
  %71 = load void (%"class.blocklist::OptOutBlocklistDelegate"*, %"class.std::__1::basic_string"*, i64)*, void (%"class.blocklist::OptOutBlocklistDelegate"*, %"class.std::__1::basic_string"*, i64)** %70, align 8
  tail call void %71(%"class.blocklist::OptOutBlocklistDelegate"* %58, %"class.std::__1::basic_string"* dereferenceable(24) %49, i64 %67) #13
  br label %72

72:                                               ; preds = %64, %45
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 1, i32 0
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, null
  br i1 %75, label %76, label %84

76:                                               ; preds = %72
  %77 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node_base"*
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 2
  %79 = bitcast %"class.std::__1::__tree_end_node"* %78 to %"class.std::__1::__tree_end_node"**
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %77
  br i1 %83, label %100, label %91

84:                                               ; preds = %72, %84
  %85 = phi %"class.std::__1::__tree_node_base"* [ %87, %84 ], [ %74, %72 ]
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, null
  br i1 %88, label %89, label %84

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %85, i64 0, i32 0
  br label %100

91:                                               ; preds = %76, %91
  %92 = phi %"class.std::__1::__tree_end_node"** [ %95, %91 ], [ %79, %76 ]
  %93 = bitcast %"class.std::__1::__tree_end_node"** %92 to %"class.std::__1::__tree_node_base"**
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %94, i64 0, i32 2
  %96 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, %94
  br i1 %99, label %100, label %91

100:                                              ; preds = %91, %76, %89
  %101 = phi %"class.std::__1::__tree_end_node"* [ %90, %89 ], [ %80, %76 ], [ %96, %91 ]
  %102 = icmp eq %"class.std::__1::__tree_end_node"* %101, %33
  br i1 %102, label %35, label %103

103:                                              ; preds = %100
  %104 = load %"class.blocklist::BlocklistData"*, %"class.blocklist::BlocklistData"** %7, align 8
  br label %45

105:                                              ; preds = %35, %123
  %106 = load i64, i64* %37, align 8
  %107 = load i64, i64* %38, align 8
  %108 = icmp ult i64 %107, %106
  br i1 %108, label %111, label %109

109:                                              ; preds = %105
  %110 = sub i64 %107, %106
  br label %115

111:                                              ; preds = %105
  %112 = load i64, i64* %39, align 8
  %113 = sub i64 %107, %106
  %114 = add i64 %113, %112
  br label %115

115:                                              ; preds = %109, %111
  %116 = phi i64 [ %110, %109 ], [ %114, %111 ]
  %117 = icmp eq i64 %116, 0
  %118 = load i8, i8* %5, align 8, !range !10
  br i1 %117, label %119, label %121

119:                                              ; preds = %115
  %120 = icmp ne i8 %118, 0
  br label %142

121:                                              ; preds = %115
  %122 = icmp eq i8 %118, 0
  br i1 %122, label %142, label %123

123:                                              ; preds = %121
  %124 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %40, i64 %106) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #13
  %125 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %124, i64 0, i32 0, i32 0, i32 0
  %126 = bitcast %"class.base::OnceCallback"* %124 to i64*
  %127 = load i64, i64* %126, align 8
  store i64 %127, i64* %42, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %125, align 8
  %128 = inttoptr i64 %127 to %"class.base::internal::BindStateBase"*
  %129 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %128, i64 0, i32 1
  %130 = bitcast void ()** %129 to void (%"class.base::internal::BindStateBase"*)**
  %131 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %130, align 8
  call void %131(%"class.base::internal::BindStateBase"* %128) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %43) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #13
  %132 = load i64, i64* %37, align 8
  %133 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %40, i64 %132) #13
  %134 = load i64, i64* %37, align 8
  %135 = add i64 %134, 1
  %136 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %40, i64 %135) #13
  call void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %40, %"class.base::OnceCallback"* %133, %"class.base::OnceCallback"* %136) #13
  %137 = load i64, i64* %37, align 8
  %138 = add i64 %137, 1
  %139 = load i64, i64* %39, align 8
  %140 = icmp eq i64 %138, %139
  %141 = select i1 %140, i64 0, i64 %138
  store i64 %141, i64* %37, align 8
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %44) #13
  br label %105

142:                                              ; preds = %121, %119
  %143 = phi i1 [ %120, %119 ], [ false, %121 ]
  %144 = load %"class.blocklist::OptOutBlocklistDelegate"*, %"class.blocklist::OptOutBlocklistDelegate"** %16, align 8
  %145 = bitcast %"class.blocklist::OptOutBlocklistDelegate"* %144 to void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)***
  %146 = load void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)**, void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)*, void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)** %146, i64 4
  %148 = load void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)*, void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)** %147, align 8
  call void %148(%"class.blocklist::OptOutBlocklistDelegate"* %144, i1 zeroext %143) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN9blocklist15OptOutBlocklist8AddEntryERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbi(%"class.blocklist::OptOutBlocklist"*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = zext i1 %2 to i8
  %7 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 5
  %8 = load %"class.base::Clock"*, %"class.base::Clock"** %7, align 8
  %9 = bitcast %"class.base::Clock"* %8 to i64 (%"class.base::Clock"*)***
  %10 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %10, i64 2
  %12 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %11, align 8
  %13 = tail call i64 %12(%"class.base::Clock"* %8) #13
  %14 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 2
  %15 = load i8, i8* %14, align 8, !range !10
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  tail call void @_ZN9blocklist15OptOutBlocklist12AddEntrySyncERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbiN4base4TimeE(%"class.blocklist::OptOutBlocklist"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext %2, i32 %3, i64 %13)
  br label %68

18:                                               ; preds = %4
  %19 = ptrtoint %"class.blocklist::OptOutBlocklist"* %0 to i64
  %20 = tail call i8* @_Znwm(i64 96) #14, !noalias !11
  %21 = bitcast i8* %20 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %21, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN9blocklist15OptOutBlocklistEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbiNS_4TimeEEJNS0_17UnretainedWrapperIS4_EESB_biSE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN9blocklist15OptOutBlocklistEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEbiNS_4TimeEEJNS0_17UnretainedWrapperIS3_EESA_biSD_EE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !11
  %22 = getelementptr inbounds i8, i8* %20, i64 32
  %23 = bitcast i8* %22 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blocklist::OptOutBlocklist"*, %"class.std::__1::basic_string"*, i1, i32, i64)* @_ZN9blocklist15OptOutBlocklist12AddEntrySyncERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbiN4base4TimeE to i64), i64 0>, <2 x i64>* %23, align 8, !noalias !11
  %24 = getelementptr inbounds i8, i8* %20, i64 48
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 8, !noalias !11
  %26 = getelementptr inbounds i8, i8* %20, i64 56
  %27 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1, !noalias !11
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %18
  %32 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %32, i64 24, i1 false) #13, !noalias !11
  br label %39

33:                                               ; preds = %18
  %34 = bitcast i8* %26 to %"class.std::__1::basic_string"*
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8, !noalias !11
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8, !noalias !11
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %36, i64 %38) #13, !noalias !11
  br label %39

39:                                               ; preds = %31, %33
  %40 = getelementptr inbounds i8, i8* %20, i64 80
  store i8 %6, i8* %40, align 1, !noalias !11
  %41 = getelementptr inbounds i8, i8* %20, i64 84
  %42 = bitcast i8* %41 to i32*
  store i32 %3, i32* %42, align 4, !noalias !11
  %43 = getelementptr inbounds i8, i8* %20, i64 88
  %44 = bitcast i8* %43 to i64*
  store i64 %13, i64* %44, align 8, !noalias !11
  %45 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4
  %46 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %45, i64 0, i32 0
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %46, i64 1) #13
  %47 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %45, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4, i32 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %47, i64 %49) #13
  %51 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %52 = ptrtoint i8* %20 to i64
  %53 = bitcast %"class.base::OnceCallback"* %50 to i64*
  store i64 %52, i64* %53, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %51, align 8
  %54 = load i64, i64* %48, align 8
  %55 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, -1
  %58 = icmp eq i64 %54, %57
  br i1 %58, label %59, label %60

59:                                               ; preds = %39
  store i64 0, i64* %48, align 8
  br label %63

60:                                               ; preds = %39
  %61 = add i64 %54, 1
  store i64 %61, i64* %48, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60, %59
  br label %64

64:                                               ; preds = %60, %63
  %65 = phi i64 [ %57, %63 ], [ %54, %60 ]
  %66 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %47, i64 %65) #13
  %67 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %67) #13
  br label %68

68:                                               ; preds = %64, %17
  ret i64 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9blocklist15OptOutBlocklist12AddEntrySyncERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbiN4base4TimeE(%"class.blocklist::OptOutBlocklist"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i32, i64) #0 align 2 {
  %6 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.blocklist::BlocklistData"*, %"class.blocklist::BlocklistData"** %6, align 8
  %8 = tail call zeroext i1 @_ZNK9blocklist13BlocklistData17IsHostBlocklistedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base4TimeE(%"class.blocklist::BlocklistData"* %7, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %4) #13
  %9 = load %"class.blocklist::BlocklistData"*, %"class.blocklist::BlocklistData"** %6, align 8
  %10 = tail call zeroext i1 @_ZNK9blocklist13BlocklistData23IsUserOptedOutInGeneralEN4base4TimeE(%"class.blocklist::BlocklistData"* %9, i64 %4) #13
  %11 = load %"class.blocklist::BlocklistData"*, %"class.blocklist::BlocklistData"** %6, align 8
  tail call void @_ZN9blocklist13BlocklistData8AddEntryERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbiN4base4TimeEb(%"class.blocklist::BlocklistData"* %11, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext %2, i32 %3, i64 %4, i1 zeroext false) #13
  br i1 %8, label %22, label %12

12:                                               ; preds = %5
  %13 = load %"class.blocklist::BlocklistData"*, %"class.blocklist::BlocklistData"** %6, align 8
  %14 = tail call zeroext i1 @_ZNK9blocklist13BlocklistData17IsHostBlocklistedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base4TimeE(%"class.blocklist::BlocklistData"* %13, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %4) #13
  br i1 %14, label %15, label %22

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 6
  %17 = load %"class.blocklist::OptOutBlocklistDelegate"*, %"class.blocklist::OptOutBlocklistDelegate"** %16, align 8
  %18 = bitcast %"class.blocklist::OptOutBlocklistDelegate"* %17 to void (%"class.blocklist::OptOutBlocklistDelegate"*, %"class.std::__1::basic_string"*, i64)***
  %19 = load void (%"class.blocklist::OptOutBlocklistDelegate"*, %"class.std::__1::basic_string"*, i64)**, void (%"class.blocklist::OptOutBlocklistDelegate"*, %"class.std::__1::basic_string"*, i64)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blocklist::OptOutBlocklistDelegate"*, %"class.std::__1::basic_string"*, i64)*, void (%"class.blocklist::OptOutBlocklistDelegate"*, %"class.std::__1::basic_string"*, i64)** %19, i64 2
  %21 = load void (%"class.blocklist::OptOutBlocklistDelegate"*, %"class.std::__1::basic_string"*, i64)*, void (%"class.blocklist::OptOutBlocklistDelegate"*, %"class.std::__1::basic_string"*, i64)** %20, align 8
  tail call void %21(%"class.blocklist::OptOutBlocklistDelegate"* %17, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %4) #13
  br label %22

22:                                               ; preds = %15, %12, %5
  %23 = load %"class.blocklist::BlocklistData"*, %"class.blocklist::BlocklistData"** %6, align 8
  %24 = tail call zeroext i1 @_ZNK9blocklist13BlocklistData23IsUserOptedOutInGeneralEN4base4TimeE(%"class.blocklist::BlocklistData"* %23, i64 %4) #13
  %25 = xor i1 %10, %24
  br i1 %25, label %26, label %35

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 6
  %28 = load %"class.blocklist::OptOutBlocklistDelegate"*, %"class.blocklist::OptOutBlocklistDelegate"** %27, align 8
  %29 = load %"class.blocklist::BlocklistData"*, %"class.blocklist::BlocklistData"** %6, align 8
  %30 = tail call zeroext i1 @_ZNK9blocklist13BlocklistData23IsUserOptedOutInGeneralEN4base4TimeE(%"class.blocklist::BlocklistData"* %29, i64 %4) #13
  %31 = bitcast %"class.blocklist::OptOutBlocklistDelegate"* %28 to void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)***
  %32 = load void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)**, void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)*, void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)** %32, i64 3
  %34 = load void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)*, void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)** %33, align 8
  tail call void %34(%"class.blocklist::OptOutBlocklistDelegate"* %28, i1 zeroext %30) #13
  br label %35

35:                                               ; preds = %26, %22
  %36 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.blocklist::OptOutStore"*, %"class.blocklist::OptOutStore"** %36, align 8
  %38 = icmp eq %"class.blocklist::OptOutStore"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.blocklist::OptOutStore"* %37 to void (%"class.blocklist::OptOutStore"*, i1, %"class.std::__1::basic_string"*, i32, i64)***
  %41 = load void (%"class.blocklist::OptOutStore"*, i1, %"class.std::__1::basic_string"*, i32, i64)**, void (%"class.blocklist::OptOutStore"*, i1, %"class.std::__1::basic_string"*, i32, i64)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blocklist::OptOutStore"*, i1, %"class.std::__1::basic_string"*, i32, i64)*, void (%"class.blocklist::OptOutStore"*, i1, %"class.std::__1::basic_string"*, i32, i64)** %41, i64 2
  %43 = load void (%"class.blocklist::OptOutStore"*, i1, %"class.std::__1::basic_string"*, i32, i64)*, void (%"class.blocklist::OptOutStore"*, i1, %"class.std::__1::basic_string"*, i32, i64)** %42, align 8
  tail call void %43(%"class.blocklist::OptOutStore"* nonnull %37, i1 zeroext %2, %"class.std::__1::basic_string"* dereferenceable(24) %1, i32 %3, i64 %4) #13
  br label %44

44:                                               ; preds = %35, %39
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9blocklist15OptOutBlocklist16QueuePendingTaskEN4base12OnceCallbackIFvvEEE(%"class.blocklist::OptOutBlocklist"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %4, i64 1) #13
  %5 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4, i32 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %5, i64 %7) #13
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = load i64, i64* %6, align 8
  %14 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  %17 = icmp eq i64 %13, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %2
  store i64 0, i64* %6, align 8
  br label %22

19:                                               ; preds = %2
  %20 = add i64 %13, 1
  store i64 %20, i64* %6, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19, %18
  br label %23

23:                                               ; preds = %19, %22
  %24 = phi i64 [ %16, %22 ], [ %13, %19 ]
  %25 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %5, i64 %24) #13
  ret void
}

declare zeroext i1 @_ZNK9blocklist13BlocklistData17IsHostBlocklistedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base4TimeE(%"class.blocklist::BlocklistData"*, %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #5

declare zeroext i1 @_ZNK9blocklist13BlocklistData23IsUserOptedOutInGeneralEN4base4TimeE(%"class.blocklist::BlocklistData"*, i64) local_unnamed_addr #5

declare void @_ZN9blocklist13BlocklistData8AddEntryERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbiN4base4TimeEb(%"class.blocklist::BlocklistData"*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i32, i64, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK9blocklist15OptOutBlocklist18IsLoadedAndAllowedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEibPNS1_6vectorINS_15BlocklistReasonENS5_ISB_EEEE(%"class.blocklist::OptOutBlocklist"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), i32, i1 zeroext, %"class.std::__1::vector.68"*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !10
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %87, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %4, i64 0, i32 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp ult i32* %11, %13
  %15 = ptrtoint i32* %13 to i64
  br i1 %14, label %16, label %20

16:                                               ; preds = %9
  store i32 0, i32* %11, align 4
  %17 = getelementptr inbounds i32, i32* %11, i64 1
  %18 = ptrtoint i32* %17 to i64
  %19 = bitcast i32** %10 to i64*
  store i64 %18, i64* %19, align 8
  br label %76

20:                                               ; preds = %9
  %21 = ptrtoint i32* %11 to i64
  %22 = bitcast i32** %10 to i64*
  %23 = bitcast %"class.std::__1::vector.68"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 2
  %27 = add nsw i64 %26, 1
  %28 = icmp ugt i64 %27, 4611686018427387903
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = bitcast %"class.std::__1::vector.68"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #15
  unreachable

31:                                               ; preds = %20
  %32 = bitcast i32** %12 to i64*
  %33 = sub i64 %15, %24
  %34 = ashr exact i64 %33, 2
  %35 = icmp ult i64 %34, 2305843009213693951
  br i1 %35, label %36, label %44

36:                                               ; preds = %31
  %37 = ashr exact i64 %33, 1
  %38 = icmp ult i64 %37, %27
  %39 = select i1 %38, i64 %27, i64 %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %36
  %42 = icmp ugt i64 %39, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @abort() #15
  unreachable

44:                                               ; preds = %41, %31
  %45 = phi i64 [ %39, %41 ], [ 4611686018427387903, %31 ]
  %46 = shl i64 %45, 2
  %47 = tail call i8* @_Znwm(i64 %46) #14
  %48 = bitcast i8* %47 to i32*
  br label %49

49:                                               ; preds = %44, %36
  %50 = phi i64 [ %45, %44 ], [ 0, %36 ]
  %51 = phi i32* [ %48, %44 ], [ null, %36 ]
  %52 = getelementptr inbounds i32, i32* %51, i64 %26
  %53 = getelementptr inbounds i32, i32* %51, i64 %50
  %54 = ptrtoint i32* %53 to i64
  store i32 0, i32* %52, align 4
  %55 = getelementptr inbounds i32, i32* %52, i64 1
  %56 = ptrtoint i32* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %4, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = load i64, i64* %22, align 8
  %60 = ptrtoint i32* %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 2
  %63 = sub nsw i64 0, %62
  %64 = getelementptr inbounds i32, i32* %52, i64 %63
  %65 = ptrtoint i32* %64 to i64
  %66 = icmp sgt i64 %61, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %49
  %68 = bitcast i32* %64 to i8*
  %69 = bitcast i32* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69, i64 %61, i1 false) #13
  %70 = load i32*, i32** %57, align 8
  br label %71

71:                                               ; preds = %67, %49
  %72 = phi i32* [ %58, %49 ], [ %70, %67 ]
  store i64 %65, i64* %23, align 8
  store i64 %56, i64* %22, align 8
  store i64 %54, i64* %32, align 8
  %73 = icmp eq i32* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = bitcast i32* %72 to i8*
  tail call void @_ZdlPv(i8* %75) #14
  br label %76

76:                                               ; preds = %16, %71, %74
  %77 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %78 = load %"class.blocklist::BlocklistData"*, %"class.blocklist::BlocklistData"** %77, align 8
  %79 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 5
  %80 = load %"class.base::Clock"*, %"class.base::Clock"** %79, align 8
  %81 = bitcast %"class.base::Clock"* %80 to i64 (%"class.base::Clock"*)***
  %82 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %81, align 8
  %83 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %82, i64 2
  %84 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %83, align 8
  %85 = tail call i64 %84(%"class.base::Clock"* %80) #13
  %86 = tail call i32 @_ZNK9blocklist13BlocklistData9IsAllowedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEibN4base4TimeEPNS1_6vectorINS_15BlocklistReasonENS5_ISD_EEEE(%"class.blocklist::BlocklistData"* %78, %"class.std::__1::basic_string"* dereferenceable(24) %1, i32 %2, i1 zeroext %3, i64 %85, %"class.std::__1::vector.68"* %4) #13
  br label %87

87:                                               ; preds = %5, %76
  %88 = phi i32 [ %86, %76 ], [ 0, %5 ]
  ret i32 %88
}

declare i32 @_ZNK9blocklist13BlocklistData9IsAllowedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEibN4base4TimeEPNS1_6vectorINS_15BlocklistReasonENS5_ISD_EEEE(%"class.blocklist::BlocklistData"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, i1 zeroext, i64, %"class.std::__1::vector.68"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9blocklist15OptOutBlocklist14ClearBlockListEN4base4TimeES2_(%"class.blocklist::OptOutBlocklist"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !10
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @_ZN9blocklist15OptOutBlocklist18ClearBlockListSyncEN4base4TimeES2_(%"class.blocklist::OptOutBlocklist"* %0, i64 %1, i64 %2)
  br label %44

9:                                                ; preds = %3
  %10 = ptrtoint %"class.blocklist::OptOutBlocklist"* %0 to i64
  %11 = tail call i8* @_Znwm(i64 72) #14, !noalias !16
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN9blocklist15OptOutBlocklistEFvNS_4TimeES5_EJNS0_17UnretainedWrapperIS4_EES5_S5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN9blocklist15OptOutBlocklistEFvNS_4TimeES4_EJNS0_17UnretainedWrapperIS3_EES4_S4_EE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !16
  %13 = getelementptr inbounds i8, i8* %11, i64 32
  %14 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blocklist::OptOutBlocklist"*, i64, i64)* @_ZN9blocklist15OptOutBlocklist18ClearBlockListSyncEN4base4TimeES2_ to i64), i64 0>, <2 x i64>* %14, align 8, !noalias !16
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 8, !noalias !16
  %17 = getelementptr inbounds i8, i8* %11, i64 56
  %18 = bitcast i8* %17 to i64*
  store i64 %1, i64* %18, align 8, !noalias !16
  %19 = getelementptr inbounds i8, i8* %11, i64 64
  %20 = bitcast i8* %19 to i64*
  store i64 %2, i64* %20, align 8, !noalias !16
  %21 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4
  %22 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %21, i64 0, i32 0
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %22, i64 1) #13
  %23 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %21, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4, i32 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %23, i64 %25) #13
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %28 = ptrtoint i8* %11 to i64
  %29 = bitcast %"class.base::OnceCallback"* %26 to i64*
  store i64 %28, i64* %29, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %27, align 8
  %30 = load i64, i64* %24, align 8
  %31 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, -1
  %34 = icmp eq i64 %30, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %9
  store i64 0, i64* %24, align 8
  br label %39

36:                                               ; preds = %9
  %37 = add i64 %30, 1
  store i64 %37, i64* %24, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36, %35
  br label %40

40:                                               ; preds = %36, %39
  %41 = phi i64 [ %33, %39 ], [ %30, %36 ]
  %42 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %23, i64 %41) #13
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %43) #13
  br label %44

44:                                               ; preds = %40, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9blocklist15OptOutBlocklist18ClearBlockListSyncEN4base4TimeES2_(%"class.blocklist::OptOutBlocklist"*, i64, i64) #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::OnceCallback.60", align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.blocklist::BlocklistData"*, %"class.blocklist::BlocklistData"** %7, align 8
  tail call void @_ZN9blocklist13BlocklistData9ClearDataEv(%"class.blocklist::BlocklistData"* %8) #13
  %9 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 2
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 6
  %11 = load %"class.blocklist::OptOutBlocklistDelegate"*, %"class.blocklist::OptOutBlocklistDelegate"** %10, align 8
  %12 = bitcast %"class.blocklist::OptOutBlocklistDelegate"* %11 to void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)***
  %13 = load void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)**, void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)*, void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)** %13, i64 4
  %15 = load void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)*, void (%"class.blocklist::OptOutBlocklistDelegate"*, i1)** %14, align 8
  tail call void %15(%"class.blocklist::OptOutBlocklistDelegate"* %11, i1 zeroext false) #13
  %16 = load %"class.blocklist::OptOutBlocklistDelegate"*, %"class.blocklist::OptOutBlocklistDelegate"** %10, align 8
  %17 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 5
  %18 = load %"class.base::Clock"*, %"class.base::Clock"** %17, align 8
  %19 = bitcast %"class.base::Clock"* %18 to i64 (%"class.base::Clock"*)***
  %20 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %19, align 8
  %21 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %20, i64 2
  %22 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %21, align 8
  %23 = tail call i64 %22(%"class.base::Clock"* %18) #13
  %24 = bitcast %"class.blocklist::OptOutBlocklistDelegate"* %16 to void (%"class.blocklist::OptOutBlocklistDelegate"*, i64)***
  %25 = load void (%"class.blocklist::OptOutBlocklistDelegate"*, i64)**, void (%"class.blocklist::OptOutBlocklistDelegate"*, i64)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blocklist::OptOutBlocklistDelegate"*, i64)*, void (%"class.blocklist::OptOutBlocklistDelegate"*, i64)** %25, i64 5
  %27 = load void (%"class.blocklist::OptOutBlocklistDelegate"*, i64)*, void (%"class.blocklist::OptOutBlocklistDelegate"*, i64)** %26, align 8
  tail call void %27(%"class.blocklist::OptOutBlocklistDelegate"* %16, i64 %23) #13
  %28 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blocklist::OptOutStore"*, %"class.blocklist::OptOutStore"** %28, align 8
  %30 = icmp eq %"class.blocklist::OptOutStore"* %29, null
  br i1 %30, label %61, label %31

31:                                               ; preds = %3
  %32 = bitcast %"class.blocklist::OptOutStore"* %29 to void (%"class.blocklist::OptOutStore"*, i64, i64)***
  %33 = load void (%"class.blocklist::OptOutStore"*, i64, i64)**, void (%"class.blocklist::OptOutStore"*, i64, i64)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blocklist::OptOutStore"*, i64, i64)*, void (%"class.blocklist::OptOutStore"*, i64, i64)** %33, i64 4
  %35 = load void (%"class.blocklist::OptOutStore"*, i64, i64)*, void (%"class.blocklist::OptOutStore"*, i64, i64)** %34, align 8
  tail call void %35(%"class.blocklist::OptOutStore"* nonnull %29, i64 %1, i64 %2) #13
  %36 = load %"class.blocklist::OptOutStore"*, %"class.blocklist::OptOutStore"** %28, align 8
  %37 = load %"class.blocklist::BlocklistData"*, %"class.blocklist::BlocklistData"** %7, align 8
  store %"class.blocklist::BlocklistData"* null, %"class.blocklist::BlocklistData"** %7, align 8
  %38 = bitcast %"class.base::WeakPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #13
  %39 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13, !noalias !21
  %40 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 7, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %40) #13, !noalias !21
  %41 = getelementptr inbounds %"class.blocklist::OptOutBlocklist", %"class.blocklist::OptOutBlocklist"* %0, i64 0, i32 7, i32 0, i32 1
  %42 = load i64, i64* %41, align 8, !noalias !21
  %43 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %43, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %42) #13
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13, !noalias !21
  %44 = call i8* @_Znwm(i64 64) #14, !noalias !24
  %45 = bitcast i8* %44 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %45, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS3_13BlocklistDataENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS2_13BlocklistDataENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS3_13BlocklistDataENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE) #13, !noalias !24
  %46 = getelementptr inbounds i8, i8* %44, i64 32
  %47 = bitcast i8* %46 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blocklist::OptOutBlocklist"*, %"class.blocklist::BlocklistData"*)* @_ZN9blocklist15OptOutBlocklist17LoadBlockListDoneENSt3__110unique_ptrINS_13BlocklistDataENS1_14default_deleteIS3_EEEE to i64), i64 0>, <2 x i64>* %47, align 8, !noalias !24
  %48 = getelementptr inbounds i8, i8* %44, i64 48
  %49 = bitcast i8* %48 to %"class.base::internal::WeakReference"*
  %50 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %49, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %50) #13, !noalias !24
  %51 = getelementptr inbounds i8, i8* %44, i64 56
  %52 = bitcast i8* %51 to i64*
  %53 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8, !noalias !24
  store i64 %54, i64* %52, align 8, !noalias !24
  %55 = bitcast %"class.base::OnceCallback.60"* %5 to i8**
  store i8* %44, i8** %55, align 8, !alias.scope !24
  %56 = bitcast %"class.blocklist::OptOutStore"* %36 to void (%"class.blocklist::OptOutStore"*, %"class.blocklist::BlocklistData"*, %"class.base::OnceCallback.60"*)***
  %57 = load void (%"class.blocklist::OptOutStore"*, %"class.blocklist::BlocklistData"*, %"class.base::OnceCallback.60"*)**, void (%"class.blocklist::OptOutStore"*, %"class.blocklist::BlocklistData"*, %"class.base::OnceCallback.60"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blocklist::OptOutStore"*, %"class.blocklist::BlocklistData"*, %"class.base::OnceCallback.60"*)*, void (%"class.blocklist::OptOutStore"*, %"class.blocklist::BlocklistData"*, %"class.base::OnceCallback.60"*)** %57, i64 3
  %59 = load void (%"class.blocklist::OptOutStore"*, %"class.blocklist::BlocklistData"*, %"class.base::OnceCallback.60"*)*, void (%"class.blocklist::OptOutStore"*, %"class.blocklist::BlocklistData"*, %"class.base::OnceCallback.60"*)** %58, align 8
  call void %59(%"class.blocklist::OptOutStore"* %36, %"class.blocklist::BlocklistData"* %37, %"class.base::OnceCallback.60"* nonnull %5) #13
  %60 = getelementptr inbounds %"class.base::OnceCallback.60", %"class.base::OnceCallback.60"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %60) #13
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %43) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #13
  br label %63

61:                                               ; preds = %3
  %62 = load %"class.blocklist::BlocklistData"*, %"class.blocklist::BlocklistData"** %7, align 8
  store %"class.blocklist::BlocklistData"* null, %"class.blocklist::BlocklistData"** %7, align 8
  tail call void @_ZN9blocklist15OptOutBlocklist17LoadBlockListDoneENSt3__110unique_ptrINS_13BlocklistDataENS1_14default_deleteIS3_EEEE(%"class.blocklist::OptOutBlocklist"* %0, %"class.blocklist::BlocklistData"* %62)
  br label %63

63:                                               ; preds = %61, %31
  ret void
}

declare void @_ZN9blocklist13BlocklistData9ClearDataEv(%"class.blocklist::BlocklistData"*) local_unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %7, %"class.base::OnceCallback"* %8, %"class.base::OnceCallback"* %12)
  %13 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"class.base::OnceCallback"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %7, %"class.base::OnceCallback"* %15, %"class.base::OnceCallback"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.base::OnceCallback"*, align 8
  %6 = alloca %"class.base::OnceCallback"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"class.base::OnceCallback"* %1, %"class.base::OnceCallback"** %5, align 8
  store %"class.base::OnceCallback"* %2, %"class.base::OnceCallback"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"class.base::OnceCallback"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"class.base::OnceCallback"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN4base12OnceCallbackIFvvEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_) #13
  %17 = bitcast %"class.base::OnceCallback"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN4base12OnceCallbackIFvvEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %26 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %5, align 8
  %27 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  %28 = icmp eq %"class.base::OnceCallback"* %26, %27
  br i1 %28, label %36, label %29

29:                                               ; preds = %25, %29
  %30 = phi %"class.base::OnceCallback"* [ %33, %29 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %30, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %31) #13
  %32 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %5, align 8
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %32, i64 1
  store %"class.base::OnceCallback"* %33, %"class.base::OnceCallback"** %5, align 8
  %34 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  %35 = icmp eq %"class.base::OnceCallback"* %33, %34
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %23, align 8
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %24, i64 %1
  ret %"class.base::OnceCallback"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN4base12OnceCallbackIFvvEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #6 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @_ZN9blocklist13BlocklistDataD1Ev(%"class.blocklist::BlocklistData"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.35"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.35"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.35"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN9blocklist13BlocklistDataC1ENSt3__110unique_ptrINS0_6PolicyENS1_14default_deleteIS3_EEEES6_S6_S6_mNS1_3mapIiiNS1_4lessIiEENS1_9allocatorINS1_4pairIKiiEEEEEE(%"class.blocklist::BlocklistData"*, %"struct.blocklist::BlocklistData::Policy"*, %"struct.blocklist::BlocklistData::Policy"*, %"struct.blocklist::BlocklistData::Policy"*, %"struct.blocklist::BlocklistData::Policy"*, i64, %"class.std::__1::map.34"*) unnamed_addr #5

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #1

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS3_13BlocklistDataENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_(%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  br i1 %7, label %8, label %45

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.blocklist::OptOutBlocklist"**
  %11 = load %"class.blocklist::OptOutBlocklist"*, %"class.blocklist::OptOutBlocklist"** %10, align 8
  %12 = icmp eq %"class.blocklist::OptOutBlocklist"* %11, null
  br i1 %12, label %45, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.blocklist::OptOutBlocklist"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.blocklist::OptOutBlocklist"*, %"class.blocklist::BlocklistData"*)**
  %38 = load void (%"class.blocklist::OptOutBlocklist"*, %"class.blocklist::BlocklistData"*)*, void (%"class.blocklist::OptOutBlocklist"*, %"class.blocklist::BlocklistData"*)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.blocklist::OptOutBlocklist"*, %"class.blocklist::BlocklistData"*)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.blocklist::OptOutBlocklist"*, %"class.blocklist::BlocklistData"*)* [ %38, %32 ], [ %40, %39 ]
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blocklist::BlocklistData"*, %"class.blocklist::BlocklistData"** %43, align 8
  store %"class.blocklist::BlocklistData"* null, %"class.blocklist::BlocklistData"** %43, align 8
  call void %42(%"class.blocklist::OptOutBlocklist"* %29, %"class.blocklist::BlocklistData"* %44) #13
  br label %45

45:                                               ; preds = %2, %8, %41
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS2_13BlocklistDataENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #13
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS3_13BlocklistDataENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #13
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blocklist::OptOutBlocklist"**
  %9 = load %"class.blocklist::OptOutBlocklist"*, %"class.blocklist::OptOutBlocklist"** %8, align 8
  %10 = icmp ne %"class.blocklist::OptOutBlocklist"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #13
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #5

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN9blocklist15OptOutBlocklistEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbiNS_4TimeEEJNS0_17UnretainedWrapperIS4_EESB_biSE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.std::__1::tuple.79"*
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.std::__1::basic_string"*
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 4
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8*
  %11 = getelementptr inbounds %"class.std::__1::tuple.79", %"class.std::__1::tuple.79"* %4, i64 0, i32 0, i32 3, i32 0
  %12 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %15 = bitcast void ()** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds i8, i8* %6, i64 %16
  %18 = bitcast i8* %17 to %"class.blocklist::OptOutBlocklist"*
  %19 = and i64 %13, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %1
  %22 = bitcast i8* %17 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = add i64 %13, -1
  %25 = getelementptr i8, i8* %23, i64 %24
  %26 = bitcast i8* %25 to void (%"class.blocklist::OptOutBlocklist"*, %"class.std::__1::basic_string"*, i1, i32, i64)**
  %27 = load void (%"class.blocklist::OptOutBlocklist"*, %"class.std::__1::basic_string"*, i1, i32, i64)*, void (%"class.blocklist::OptOutBlocklist"*, %"class.std::__1::basic_string"*, i1, i32, i64)** %26, align 8
  br label %30

28:                                               ; preds = %1
  %29 = inttoptr i64 %13 to void (%"class.blocklist::OptOutBlocklist"*, %"class.std::__1::basic_string"*, i1, i32, i64)*
  br label %30

30:                                               ; preds = %21, %28
  %31 = phi void (%"class.blocklist::OptOutBlocklist"*, %"class.std::__1::basic_string"*, i1, i32, i64)* [ %27, %21 ], [ %29, %28 ]
  %32 = load i8, i8* %10, align 1, !range !10
  %33 = icmp ne i8 %32, 0
  %34 = load i32, i32* %11, align 4
  %35 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 5
  %36 = bitcast void (%"class.base::internal::BindStateBase"*)** %35 to i64*
  %37 = load i64, i64* %36, align 8
  tail call void %31(%"class.blocklist::OptOutBlocklist"* %18, %"class.std::__1::basic_string"* dereferenceable(24) %8, i1 zeroext %33, i32 %34, i64 %37) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN9blocklist15OptOutBlocklistEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEbiNS_4TimeEEJNS0_17UnretainedWrapperIS3_EESA_biSD_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #14
  br label %12

12:                                               ; preds = %3, %9
  %13 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %12, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN9blocklist15OptOutBlocklistEFvNS_4TimeES5_EJNS0_17UnretainedWrapperIS4_EES5_S5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.blocklist::OptOutBlocklist"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blocklist::OptOutBlocklist"*, i64, i64)**
  %21 = load void (%"class.blocklist::OptOutBlocklist"*, i64, i64)*, void (%"class.blocklist::OptOutBlocklist"*, i64, i64)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.blocklist::OptOutBlocklist"*, i64, i64)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blocklist::OptOutBlocklist"*, i64, i64)* [ %21, %15 ], [ %23, %22 ]
  %26 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %27 = bitcast void (%"class.base::internal::BindStateBase"*)** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %30 = bitcast void (%"class.base::internal::BindStateBase"*)** %29 to i64*
  %31 = load i64, i64* %30, align 8
  tail call void %25(%"class.blocklist::OptOutBlocklist"* %12, i64 %28, i64 %31) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN9blocklist15OptOutBlocklistEFvNS_4TimeES4_EJNS0_17UnretainedWrapperIS3_EES4_S4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #13
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #13
  br i1 %37, label %38, label %39, !prof !29

38:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #13
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #13
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #13
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %51

13:                                               ; preds = %6
  %14 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %15 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %16 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %17 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %16, align 8
  %18 = ptrtoint %"class.base::OnceCallback"* %14 to i64
  %19 = icmp ult %"class.base::OnceCallback"* %17, %15
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %"class.base::OnceCallback"* %17 to i64
  %22 = ptrtoint %"class.base::OnceCallback"* %15 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %18) #13
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #13
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !29

29:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %18
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0)) #13
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %"class.base::OnceCallback"* %14, %15
  br i1 %37, label %49, label %38

38:                                               ; preds = %36, %38
  %39 = phi %"class.base::OnceCallback"* [ %47, %38 ], [ %17, %36 ]
  %40 = phi %"class.base::OnceCallback"* [ %46, %38 ], [ %14, %36 ]
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.base::OnceCallback"* %40 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.base::OnceCallback"* %39 to i64*
  store i64 %43, i64* %44, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8
  %45 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %40, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %45) #13
  %46 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %40, i64 1
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %39, i64 1
  %48 = icmp eq %"class.base::OnceCallback"* %46, %15
  br i1 %48, label %49, label %38

49:                                               ; preds = %38, %36
  %50 = sub i64 %2, %1
  br label %127

51:                                               ; preds = %6
  %52 = icmp ult i64 %2, %1
  br i1 %52, label %53, label %127

53:                                               ; preds = %51
  %54 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %55 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %11)
  %56 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %57 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %56, align 8
  %58 = ptrtoint %"class.base::OnceCallback"* %54 to i64
  %59 = icmp ult %"class.base::OnceCallback"* %57, %55
  br i1 %59, label %60, label %76

60:                                               ; preds = %53
  %61 = ptrtoint %"class.base::OnceCallback"* %57 to i64
  %62 = ptrtoint %"class.base::OnceCallback"* %55 to i64
  %63 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %62, i64 %58) #13
  %64 = extractvalue { i64, i1 } %63, 1
  %65 = extractvalue { i64, i1 } %63, 0
  %66 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %61, i64 %65) #13
  %67 = extractvalue { i64, i1 } %66, 1
  %68 = or i1 %64, %67
  br i1 %68, label %69, label %70, !prof !29

69:                                               ; preds = %60
  tail call void @llvm.trap() #13
  unreachable

70:                                               ; preds = %60
  %71 = extractvalue { i64, i1 } %66, 0
  %72 = icmp ugt i64 %71, %58
  br i1 %72, label %73, label %76

73:                                               ; preds = %70
  %74 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0)) #13
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #13
  br label %76

76:                                               ; preds = %73, %70, %53
  %77 = icmp eq %"class.base::OnceCallback"* %54, %55
  br i1 %77, label %89, label %78

78:                                               ; preds = %76, %78
  %79 = phi %"class.base::OnceCallback"* [ %87, %78 ], [ %57, %76 ]
  %80 = phi %"class.base::OnceCallback"* [ %86, %78 ], [ %54, %76 ]
  %81 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::OnceCallback"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.base::OnceCallback"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %81, align 8
  %85 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %80, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %85) #13
  %86 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %80, i64 1
  %87 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %79, i64 1
  %88 = icmp eq %"class.base::OnceCallback"* %86, %55
  br i1 %88, label %89, label %78

89:                                               ; preds = %78, %76
  %90 = sub i64 %11, %1
  %91 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %92 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %93 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %90)
  %94 = ptrtoint %"class.base::OnceCallback"* %91 to i64
  %95 = icmp ult %"class.base::OnceCallback"* %93, %92
  br i1 %95, label %96, label %112

96:                                               ; preds = %89
  %97 = ptrtoint %"class.base::OnceCallback"* %93 to i64
  %98 = ptrtoint %"class.base::OnceCallback"* %92 to i64
  %99 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %98, i64 %94) #13
  %100 = extractvalue { i64, i1 } %99, 1
  %101 = extractvalue { i64, i1 } %99, 0
  %102 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %97, i64 %101) #13
  %103 = extractvalue { i64, i1 } %102, 1
  %104 = or i1 %100, %103
  br i1 %104, label %105, label %106, !prof !29

105:                                              ; preds = %96
  call void @llvm.trap() #13
  unreachable

106:                                              ; preds = %96
  %107 = extractvalue { i64, i1 } %102, 0
  %108 = icmp ugt i64 %107, %94
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0)) #13
  %111 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #13
  br label %112

112:                                              ; preds = %109, %106, %89
  %113 = icmp eq %"class.base::OnceCallback"* %91, %92
  br i1 %113, label %125, label %114

114:                                              ; preds = %112, %114
  %115 = phi %"class.base::OnceCallback"* [ %123, %114 ], [ %93, %112 ]
  %116 = phi %"class.base::OnceCallback"* [ %122, %114 ], [ %91, %112 ]
  %117 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.base::OnceCallback"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.base::OnceCallback"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %117, align 8
  %121 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %116, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %121) #13
  %122 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %116, i64 1
  %123 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %115, i64 1
  %124 = icmp eq %"class.base::OnceCallback"* %122, %92
  br i1 %124, label %125, label %114

125:                                              ; preds = %114, %112
  %126 = add i64 %90, %2
  br label %127

127:                                              ; preds = %51, %125, %49
  %128 = phi i64 [ %126, %125 ], [ %50, %49 ], [ 0, %51 ]
  store i64 %128, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #12

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #12

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.base::OnceCallback"* @_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %23, align 8
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %24, i64 %1
  ret %"class.base::OnceCallback"* %25
}

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #13
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #13
  br i1 %31, label %32, label %33, !prof !29

32:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #13
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #13
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #13
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN9blocklist15OptOutBlocklistEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN9blocklist15OptOutBlocklistEE10GetWeakPtrEv"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS3_13BlocklistDataENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS3_13BlocklistDataENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS1_13BlocklistDataENS3_14default_deleteIS5_EEEEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS1_13BlocklistDataENS3_14default_deleteIS5_EEEEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!10 = !{i8 0, i8 2}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN9blocklist15OptOutBlocklistEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbiNS_4TimeEEJNS0_17UnretainedWrapperIS4_EESD_RbRiRSE_EEEDcOT0_DpOT1_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN9blocklist15OptOutBlocklistEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbiNS_4TimeEEJNS0_17UnretainedWrapperIS4_EESD_RbRiRSE_EEEDcOT0_DpOT1_"}
!14 = distinct !{!14, !15, !"_ZN4base8BindOnceIMN9blocklist15OptOutBlocklistEFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbiNS_4TimeEEJNS_8internal17UnretainedWrapperIS2_EESB_RbRiRSC_EEENS_12OnceCallbackINSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8BindOnceIMN9blocklist15OptOutBlocklistEFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbiNS_4TimeEEJNS_8internal17UnretainedWrapperIS2_EESB_RbRiRSC_EEENS_12OnceCallbackINSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN9blocklist15OptOutBlocklistEFvNS_4TimeES5_EJNS0_17UnretainedWrapperIS4_EERS5_SA_EEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN9blocklist15OptOutBlocklistEFvNS_4TimeES5_EJNS0_17UnretainedWrapperIS4_EERS5_SA_EEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base8BindOnceIMN9blocklist15OptOutBlocklistEFvNS_4TimeES3_EJNS_8internal17UnretainedWrapperIS2_EERS3_S9_EEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8BindOnceIMN9blocklist15OptOutBlocklistEFvNS_4TimeES3_EJNS_8internal17UnretainedWrapperIS2_EERS3_S9_EEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK4base14WeakPtrFactoryIN9blocklist15OptOutBlocklistEE10GetWeakPtrEv: argument 0"}
!23 = distinct !{!23, !"_ZNK4base14WeakPtrFactoryIN9blocklist15OptOutBlocklistEE10GetWeakPtrEv"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS3_13BlocklistDataENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS3_13BlocklistDataENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!27 = distinct !{!27, !28, !"_ZN4base8BindOnceIMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS1_13BlocklistDataENS3_14default_deleteIS5_EEEEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8BindOnceIMN9blocklist15OptOutBlocklistEFvNSt3__110unique_ptrINS1_13BlocklistDataENS3_14default_deleteIS5_EEEEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!29 = !{!"branch_weights", i32 1, i32 2000}
