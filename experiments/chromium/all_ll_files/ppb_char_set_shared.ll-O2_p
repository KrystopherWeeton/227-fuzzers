; ModuleID = '../../ppapi/shared_impl/private/ppb_char_set_shared.cc'
source_filename = "../../ppapi/shared_impl/private/ppb_char_set_shared.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.PPB_Memory_Dev_0_1 = type { i8* (i32)*, void (i8*)* }
%struct.UConverter = type opaque
%struct.UConverterFromUnicodeArgs = type { i16, i8, %struct.UConverter*, i16*, i16*, i8*, i8*, i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5ppapi18PPB_CharSet_Shared24UTF16ToCharSetDeprecatedEPKtjPKc26PP_CharSet_ConversionErrorPj(i16*, i32, i8*, i32, i32* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  %7 = icmp eq i32 %3, 2
  %8 = select i1 %7, i32 2, i32 0
  %9 = icmp eq i32 %3, 1
  %10 = select i1 %9, i32 1, i32 %8
  %11 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  store i32 0, i32* %6, align 4
  %12 = call i32 @_ZN5ppapi18PPB_CharSet_Shared14UTF16ToCharSetEPKtjPKc34PP_CharSet_Trusted_ConversionErrorPcPj(i16* %0, i32 %1, i8* %2, i32 %10, i8* null, i32* nonnull %6)
  %13 = call %struct.PPB_Memory_Dev_0_1* @_ZN5ppapi5thunk27GetPPB_Memory_Dev_0_1_ThunkEv() #5
  %14 = getelementptr inbounds %struct.PPB_Memory_Dev_0_1, %struct.PPB_Memory_Dev_0_1* %13, i64 0, i32 0
  %15 = load i8* (i32)*, i8* (i32)** %14, align 8
  %16 = load i32, i32* %6, align 4
  %17 = add i32 %16, 1
  %18 = call i8* %15(i32 %17) #5
  %19 = call i32 @_ZN5ppapi18PPB_CharSet_Shared14UTF16ToCharSetEPKtjPKc34PP_CharSet_Trusted_ConversionErrorPcPj(i16* %0, i32 %1, i8* %2, i32 %10, i8* %18, i32* nonnull %6)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %5
  %22 = call %struct.PPB_Memory_Dev_0_1* @_ZN5ppapi5thunk27GetPPB_Memory_Dev_0_1_ThunkEv() #5
  %23 = getelementptr inbounds %struct.PPB_Memory_Dev_0_1, %struct.PPB_Memory_Dev_0_1* %22, i64 0, i32 1
  %24 = load void (i8*)*, void (i8*)** %23, align 8
  call void %24(i8* %18) #5
  br label %30

25:                                               ; preds = %5
  %26 = load i32, i32* %6, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %18, i64 %27
  store i8 0, i8* %28, align 1
  %29 = load i32, i32* %6, align 4
  store i32 %29, i32* %4, align 4
  br label %30

30:                                               ; preds = %25, %21
  %31 = phi i8* [ null, %21 ], [ %18, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  ret i8* %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5ppapi18PPB_CharSet_Shared14UTF16ToCharSetEPKtjPKc34PP_CharSet_Trusted_ConversionErrorPcPj(i16*, i32, i8*, i32, i8*, i32*) local_unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca [32 x i8], align 16
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = icmp ne i16* %0, null
  %13 = icmp ne i8* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i32* %5, null
  %16 = and i1 %14, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %6
  store i32 0, i32* %5, align 4
  br label %53

18:                                               ; preds = %6
  %19 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #5
  store i32 0, i32* %7, align 4
  %20 = call %struct.UConverter* @ucnv_open_69(i8* nonnull %2, i32* nonnull %7) #5
  %21 = load i32, i32* %7, align 4
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %18
  store i32 0, i32* %5, align 4
  br label %51

24:                                               ; preds = %18
  switch i32 %3, label %38 [
    i32 0, label %25
    i32 1, label %26
    i32 2, label %27
  ]

25:                                               ; preds = %24
  call void @ucnv_setFromUCallBack_69(%struct.UConverter* %20, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)* nonnull @UCNV_FROM_U_CALLBACK_STOP_69, i8* null, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** null, i8** null, i32* nonnull %7) #5
  br label %39

26:                                               ; preds = %24
  call void @ucnv_setFromUCallBack_69(%struct.UConverter* %20, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)* nonnull @UCNV_FROM_U_CALLBACK_SKIP_69, i8* null, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** null, i8** null, i32* nonnull %7) #5
  br label %39

27:                                               ; preds = %24
  %28 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #5
  store i8 32, i8* %9, align 1
  call void @ucnv_getSubstChars_69(%struct.UConverter* %20, i8* nonnull %28, i8* nonnull %9, i32* nonnull %7) #5
  %29 = load i8, i8* %9, align 1
  %30 = icmp eq i8 %29, 1
  %31 = load i8, i8* %28, align 16
  %32 = icmp eq i8 %31, 26
  %33 = and i1 %30, %32
  br i1 %33, label %34, label %37

34:                                               ; preds = %27
  %35 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #5
  store i32 0, i32* %10, align 4
  %36 = bitcast i16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %36) #5
  store i16 63, i16* %11, align 2
  call void @ucnv_setSubstString_69(%struct.UConverter* %20, i16* nonnull %11, i32 1, i32* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %36) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #5
  br label %37

37:                                               ; preds = %34, %27
  call void @ucnv_setFromUCallBack_69(%struct.UConverter* %20, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)* nonnull @UCNV_FROM_U_CALLBACK_SUBSTITUTE_69, i8* null, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** null, i8** null, i32* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #5
  br label %39

38:                                               ; preds = %24
  store i32 0, i32* %5, align 4
  call void @ucnv_close_69(%struct.UConverter* %20) #5
  br label %51

39:                                               ; preds = %37, %26, %25
  %40 = icmp eq i8* %4, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = load i32, i32* %5, align 4
  br label %43

43:                                               ; preds = %39, %41
  %44 = phi i32 [ %42, %41 ], [ 0, %39 ]
  %45 = call i32 @ucnv_fromUChars_69(%struct.UConverter* %20, i8* %4, i32 %44, i16* nonnull %0, i32 %1, i32* nonnull %7) #5
  store i32 %45, i32* %5, align 4
  call void @ucnv_close_69(%struct.UConverter* %20) #5
  %46 = load i32, i32* %7, align 4
  %47 = icmp ne i32 %46, 15
  %48 = icmp sgt i32 %46, 0
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %51

50:                                               ; preds = %43
  store i32 0, i32* %5, align 4
  br label %51

51:                                               ; preds = %43, %50, %38, %23
  %52 = phi i32 [ 0, %38 ], [ 0, %50 ], [ 0, %23 ], [ 1, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #5
  br label %53

53:                                               ; preds = %51, %17
  %54 = phi i32 [ %52, %51 ], [ 0, %17 ]
  ret i32 %54
}

declare %struct.PPB_Memory_Dev_0_1* @_ZN5ppapi5thunk27GetPPB_Memory_Dev_0_1_ThunkEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.UConverter* @ucnv_open_69(i8*, i32*) local_unnamed_addr #2

declare void @ucnv_setFromUCallBack_69(%struct.UConverter*, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, i8*, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)**, i8**, i32*) local_unnamed_addr #2

declare void @UCNV_FROM_U_CALLBACK_STOP_69(i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*) #2

declare void @UCNV_FROM_U_CALLBACK_SKIP_69(i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*) #2

declare void @ucnv_getSubstChars_69(%struct.UConverter*, i8*, i8*, i32*) local_unnamed_addr #2

declare void @ucnv_setSubstString_69(%struct.UConverter*, i16*, i32, i32*) local_unnamed_addr #2

declare void @UCNV_FROM_U_CALLBACK_SUBSTITUTE_69(i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*) #2

declare void @ucnv_close_69(%struct.UConverter*) local_unnamed_addr #2

declare i32 @ucnv_fromUChars_69(%struct.UConverter*, i8*, i32, i16*, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16* @_ZN5ppapi18PPB_CharSet_Shared24CharSetToUTF16DeprecatedEPKcjS2_26PP_CharSet_ConversionErrorPj(i8* readonly, i32, i8*, i32, i32* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  %7 = icmp eq i32 %3, 2
  %8 = select i1 %7, i32 2, i32 0
  %9 = icmp eq i32 %3, 1
  %10 = select i1 %9, i32 1, i32 %8
  %11 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  store i32 0, i32* %6, align 4
  %12 = call i32 @_ZN5ppapi18PPB_CharSet_Shared14CharSetToUTF16EPKcjS2_34PP_CharSet_Trusted_ConversionErrorPtPj(i8* %0, i32 %1, i8* %2, i32 %10, i16* null, i32* nonnull %6)
  %13 = call %struct.PPB_Memory_Dev_0_1* @_ZN5ppapi5thunk27GetPPB_Memory_Dev_0_1_ThunkEv() #5
  %14 = getelementptr inbounds %struct.PPB_Memory_Dev_0_1, %struct.PPB_Memory_Dev_0_1* %13, i64 0, i32 0
  %15 = load i8* (i32)*, i8* (i32)** %14, align 8
  %16 = load i32, i32* %6, align 4
  %17 = shl i32 %16, 1
  %18 = add i32 %17, 2
  %19 = call i8* %15(i32 %18) #5
  %20 = bitcast i8* %19 to i16*
  %21 = call i32 @_ZN5ppapi18PPB_CharSet_Shared14CharSetToUTF16EPKcjS2_34PP_CharSet_Trusted_ConversionErrorPtPj(i8* %0, i32 %1, i8* %2, i32 %10, i16* %20, i32* nonnull %6)
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %5
  %24 = call %struct.PPB_Memory_Dev_0_1* @_ZN5ppapi5thunk27GetPPB_Memory_Dev_0_1_ThunkEv() #5
  %25 = getelementptr inbounds %struct.PPB_Memory_Dev_0_1, %struct.PPB_Memory_Dev_0_1* %24, i64 0, i32 1
  %26 = load void (i8*)*, void (i8*)** %25, align 8
  call void %26(i8* %19) #5
  br label %32

27:                                               ; preds = %5
  %28 = load i32, i32* %6, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i16, i16* %20, i64 %29
  store i16 0, i16* %30, align 2
  %31 = load i32, i32* %6, align 4
  store i32 %31, i32* %4, align 4
  br label %32

32:                                               ; preds = %27, %23
  %33 = phi i16* [ null, %23 ], [ %20, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  ret i16* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5ppapi18PPB_CharSet_Shared14CharSetToUTF16EPKcjS2_34PP_CharSet_Trusted_ConversionErrorPtPj(i8* readonly, i32, i8*, i32, i16*, i32*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string.1", align 8
  %9 = icmp ne i8* %0, null
  %10 = icmp ne i8* %2, null
  %11 = and i1 %9, %10
  %12 = icmp ne i32* %5, null
  %13 = and i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %6
  store i32 0, i32* %5, align 4
  br label %107

15:                                               ; preds = %6
  %16 = icmp ult i32 %3, 3
  br i1 %16, label %18, label %17

17:                                               ; preds = %15
  store i32 0, i32* %5, align 4
  br label %107

18:                                               ; preds = %15
  %19 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #5
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #5
  %21 = bitcast %"class.std::__1::basic_string.1"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #5
  %22 = zext i32 %1 to i64
  %23 = icmp ult i32 %1, 23
  br i1 %23, label %33, label %24

24:                                               ; preds = %18
  %25 = add nuw nsw i64 %22, 16
  %26 = and i64 %25, 8589934576
  %27 = tail call i8* @_Znwm(i64 %26) #6
  %28 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %27, i8** %28, align 8
  %29 = or i64 %26, -9223372036854775808
  %30 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %31, align 8
  %32 = bitcast %"class.std::__1::basic_string.1"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %38

33:                                               ; preds = %18
  %34 = trunc i32 %1 to i8
  %35 = bitcast %"class.std::__1::basic_string.1"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 %34, i8* %36, align 1
  %37 = icmp eq i32 %1, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %33, %24
  %39 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %35, %33 ], [ %32, %24 ]
  %40 = phi i8* [ %21, %33 ], [ %27, %24 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %40, i8* nonnull align 1 %0, i64 %22, i1 false) #5
  br label %41

41:                                               ; preds = %33, %38
  %42 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %35, %33 ], [ %39, %38 ]
  %43 = phi i8* [ %21, %33 ], [ %40, %38 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %22
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = select i1 %47, i8* %49, i8* %21
  %51 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %46 to i64
  %54 = select i1 %47, i64 %52, i64 %53
  %55 = call zeroext i1 @_ZN4base15CodepageToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKcNS_23OnStringConversionError4TypeEPNS1_12basic_stringIDsNS2_IDsEENS1_9allocatorIDsEEEE(i8* %50, i64 %54, i8* nonnull %2, i32 %3, %"class.std::__1::basic_string"* nonnull %7) #5
  %56 = load i8, i8* %45, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %41
  %59 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %59) #6
  br label %60

60:                                               ; preds = %41, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #5
  br i1 %55, label %65, label %61

61:                                               ; preds = %60
  %62 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %62, i64 0, i32 1, i32 1
  %64 = load i8, i8* %63, align 1
  br label %98

65:                                               ; preds = %60
  %66 = icmp eq i16* %4, null
  br i1 %66, label %67, label %73

67:                                               ; preds = %65
  %68 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = load i64, i64* %20, align 8
  %72 = zext i8 %70 to i64
  br label %91

73:                                               ; preds = %65
  %74 = bitcast i16* %4 to i8*
  %75 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %75, i64 0, i32 1, i32 1
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = load i64, i64* %20, align 8
  %82 = zext i8 %77 to i64
  %83 = select i1 %78, i8* %80, i8* %19
  %84 = select i1 %78, i64 %81, i64 %82
  %85 = trunc i64 %84 to i32
  %86 = load i32, i32* %5, align 4
  %87 = icmp ugt i32 %86, %85
  %88 = select i1 %87, i32 %85, i32 %86
  %89 = zext i32 %88 to i64
  %90 = shl nuw nsw i64 %89, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %74, i8* align 2 %83, i64 %90, i1 false)
  br label %91

91:                                               ; preds = %67, %73
  %92 = phi i64 [ %72, %67 ], [ %82, %73 ]
  %93 = phi i64 [ %71, %67 ], [ %81, %73 ]
  %94 = phi i8 [ %70, %67 ], [ %77, %73 ]
  %95 = icmp slt i8 %94, 0
  %96 = select i1 %95, i64 %93, i64 %92
  %97 = trunc i64 %96 to i32
  br label %98

98:                                               ; preds = %61, %91
  %99 = phi i8 [ %94, %91 ], [ %64, %61 ]
  %100 = phi i32 [ %97, %91 ], [ 0, %61 ]
  %101 = phi i32 [ 1, %91 ], [ 0, %61 ]
  store i32 %100, i32* %5, align 4
  %102 = icmp slt i8 %99, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %105 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %105) #6
  br label %106

106:                                              ; preds = %98, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #5
  br label %107

107:                                              ; preds = %17, %106, %14
  %108 = phi i32 [ 0, %14 ], [ %101, %106 ], [ 0, %17 ]
  ret i32 %108
}

declare zeroext i1 @_ZN4base15CodepageToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKcNS_23OnStringConversionError4TypeEPNS1_12basic_stringIDsNS2_IDsEENS1_9allocatorIDsEEEE(i8*, i64, i8*, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
