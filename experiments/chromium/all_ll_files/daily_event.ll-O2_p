; ModuleID = '../../components/metrics/daily_event.cc'
source_filename = "../../components/metrics/daily_event.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.metrics::DailyEvent::Observer" = type { i32 (...)** }
%"class.metrics::DailyEvent" = type { %class.PrefService*, i8*, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.base::Time" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.80"*, %"class.std::__1::unique_ptr.80"*, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.metrics::DailyEvent::Observer"* }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.std::__1::unique_ptr.80"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %class.scoped_refptr.21, %"class.base::RepeatingCallback.22", %class.scoped_refptr.23, %"class.std::__1::unordered_map.51" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map", i8, %"class.std::__1::unique_ptr.12" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.PrefNotifier = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.21 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.22" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.23 = type { %class.PrefRegistry* }
%class.PrefRegistry = type { i32 (...)**, %"class.base::RefCounted.24", %class.scoped_refptr.25, %"class.std::__1::unordered_map", %"class.std::__1::set" }
%"class.base::RefCounted.24" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.25 = type { %class.DefaultPrefStore* }
%class.DefaultPrefStore = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.26", %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.41", [4 x i8] }>
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28", %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree.44" }
%"class.std::__1::__tree.44" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::unordered_map.51" = type { %"class.std::__1::__hash_table.52" }
%"class.std::__1::__hash_table.52" = type <{ %"class.std::__1::unique_ptr.53", %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.68", %"class.std::__1::__compressed_pair.71", [4 x i8] }>
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55", %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::__hash_node_base.56"** }
%"struct.std::__1::__hash_node_base.56" = type { %"struct.std::__1::__hash_node_base.56"* }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::__bucket_list_deallocator.58" }
%"class.std::__1::__bucket_list_deallocator.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::__hash_node_base.56" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.PrefRegistrySimple = type { %class.PrefRegistry }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrIN7metrics10DailyEvent8ObserverENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

@_ZTVN7metrics10DailyEvent8ObserverE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.metrics::DailyEvent::Observer"*)* @_ZN7metrics10DailyEvent8ObserverD2Ev to i8*), i8* bitcast (void (%"class.metrics::DailyEvent::Observer"*)* @_ZN7metrics10DailyEvent8ObserverD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7metrics10DailyEvent8ObserverD1Ev = hidden unnamed_addr alias void (%"class.metrics::DailyEvent::Observer"*), void (%"class.metrics::DailyEvent::Observer"*)* @_ZN7metrics10DailyEvent8ObserverD2Ev
@_ZN7metrics10DailyEventC1EP11PrefServicePKcRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.metrics::DailyEvent"*, %class.PrefService*, i8*, %"class.std::__1::basic_string"*), void (%"class.metrics::DailyEvent"*, %class.PrefService*, i8*, %"class.std::__1::basic_string"*)* @_ZN7metrics10DailyEventC2EP11PrefServicePKcRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE
@_ZN7metrics10DailyEventD1Ev = hidden unnamed_addr alias void (%"class.metrics::DailyEvent"*), void (%"class.metrics::DailyEvent"*)* @_ZN7metrics10DailyEventD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7metrics10DailyEvent8ObserverC2Ev(%"class.metrics::DailyEvent::Observer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.metrics::DailyEvent::Observer", %"class.metrics::DailyEvent::Observer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7metrics10DailyEvent8ObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7metrics10DailyEvent8ObserverD2Ev(%"class.metrics::DailyEvent::Observer"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN7metrics10DailyEvent8ObserverD0Ev(%"class.metrics::DailyEvent::Observer"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7metrics10DailyEventC2EP11PrefServicePKcRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.metrics::DailyEvent"*, %class.PrefService*, i8*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 0
  store %class.PrefService* %1, %class.PrefService** %5, align 8
  %6 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 1
  store i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #14
  br label %20

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %7, i8* %17, i64 %19) #14
  br label %20

20:                                               ; preds = %12, %15
  %21 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 3
  %22 = bitcast %"class.std::__1::vector"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7metrics10DailyEventD2Ev(%"class.metrics::DailyEvent"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.80"*, %"class.std::__1::unique_ptr.80"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.80"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.80"* %4 to i8*
  %8 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.80"*, %"class.std::__1::unique_ptr.80"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.80"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.80"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.metrics::DailyEvent::Observer"*, %"class.metrics::DailyEvent::Observer"** %14, align 8
  store %"class.metrics::DailyEvent::Observer"* null, %"class.metrics::DailyEvent::Observer"** %14, align 8
  %16 = icmp eq %"class.metrics::DailyEvent::Observer"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.metrics::DailyEvent::Observer"* %15 to void (%"class.metrics::DailyEvent::Observer"*)***
  %19 = load void (%"class.metrics::DailyEvent::Observer"*)**, void (%"class.metrics::DailyEvent::Observer"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.metrics::DailyEvent::Observer"*)*, void (%"class.metrics::DailyEvent::Observer"*)** %19, i64 1
  %21 = load void (%"class.metrics::DailyEvent::Observer"*)*, void (%"class.metrics::DailyEvent::Observer"*)** %20, align 8
  tail call void %21(%"class.metrics::DailyEvent::Observer"* nonnull %15) #14
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.80"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.80"* %4, %"class.std::__1::unique_ptr.80"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 2
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #15
  br label %38

38:                                               ; preds = %29, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7metrics10DailyEvent12RegisterPrefEP18PrefRegistrySimpleRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%class.PrefRegistrySimple*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4 align 2 {
  tail call void @_ZN18PrefRegistrySimple17RegisterInt64PrefERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEElj(%class.PrefRegistrySimple* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 0, i32 0) #14
  ret void
}

declare void @_ZN18PrefRegistrySimple17RegisterInt64PrefERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEElj(%class.PrefRegistrySimple*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7metrics10DailyEvent11AddObserverENSt3__110unique_ptrINS0_8ObserverENS1_14default_deleteIS3_EEEE(%"class.metrics::DailyEvent"*, %"class.metrics::DailyEvent::Observer"*) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.80", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.metrics::DailyEvent::Observer"* %1, %"class.metrics::DailyEvent::Observer"** %4, align 8
  %5 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.80"*, %"class.std::__1::unique_ptr.80"** %5, align 8
  %7 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.80"*, %"class.std::__1::unique_ptr.80"** %7, align 8
  %9 = icmp ult %"class.std::__1::unique_ptr.80"* %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = ptrtoint %"class.metrics::DailyEvent::Observer"* %1 to i64
  store %"class.metrics::DailyEvent::Observer"* null, %"class.metrics::DailyEvent::Observer"** %4, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.80"* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %6, i64 1
  %14 = ptrtoint %"class.std::__1::unique_ptr.80"* %13 to i64
  %15 = bitcast %"class.std::__1::unique_ptr.80"** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %18

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN7metrics10DailyEvent8ObserverENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector"* %17, %"class.std::__1::unique_ptr.80"* nonnull dereferenceable(8) %3) #14
  br label %18

18:                                               ; preds = %10, %16
  %19 = load %"class.metrics::DailyEvent::Observer"*, %"class.metrics::DailyEvent::Observer"** %4, align 8
  store %"class.metrics::DailyEvent::Observer"* null, %"class.metrics::DailyEvent::Observer"** %4, align 8
  %20 = icmp eq %"class.metrics::DailyEvent::Observer"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.metrics::DailyEvent::Observer"* %19 to void (%"class.metrics::DailyEvent::Observer"*)***
  %23 = load void (%"class.metrics::DailyEvent::Observer"*)**, void (%"class.metrics::DailyEvent::Observer"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.metrics::DailyEvent::Observer"*)*, void (%"class.metrics::DailyEvent::Observer"*)** %23, i64 1
  %25 = load void (%"class.metrics::DailyEvent::Observer"*)*, void (%"class.metrics::DailyEvent::Observer"*)** %24, align 8
  call void %25(%"class.metrics::DailyEvent::Observer"* nonnull %19) #14
  br label %26

26:                                               ; preds = %18, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7metrics10DailyEvent13CheckIntervalEv(%"class.metrics::DailyEvent"*) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = tail call i64 @_ZN4base4Time3NowEv() #14
  %5 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %64

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 0
  %10 = load %class.PrefService*, %class.PrefService** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i64 @strlen(i8* %13) #14
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #13
  unreachable

18:                                               ; preds = %8
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #15
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

29:                                               ; preds = %18
  %30 = trunc i64 %14 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = icmp eq i64 %14, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29, %20
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %28, %20 ]
  %36 = phi i8* [ %11, %29 ], [ %23, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %13, i64 %14, i1 false) #14
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %35, %34 ]
  %39 = phi i8* [ %11, %29 ], [ %36, %34 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %14
  store i8 0, i8* %40, align 1
  %41 = call i64 @_ZNK11PrefService8GetInt64ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #14
  store i64 %41, i64* %5, align 8
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #15
  %48 = load i64, i64* %5, align 8
  br label %49

49:                                               ; preds = %37, %45
  %50 = phi i64 [ %41, %37 ], [ %48, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 2
  %54 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  %58 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = zext i8 %56 to i64
  %61 = select i1 %57, i64 %59, i64 %60
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %97, label %63

63:                                               ; preds = %52
  call void @_ZN4base23UmaHistogramExactLinearERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEii(%"class.std::__1::basic_string"* dereferenceable(24) %53, i32 0, i32 3) #14
  br label %97

64:                                               ; preds = %49, %1
  %65 = phi i64 [ %50, %49 ], [ %6, %1 ]
  %66 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #14
  %67 = sub nsw i64 %4, %65
  %68 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %67, i64* %68, align 8
  %69 = call i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #14
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 2
  %73 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %75 to i64
  %80 = select i1 %76, i64 %78, i64 %79
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %97, label %82

82:                                               ; preds = %71
  call void @_ZN4base23UmaHistogramExactLinearERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEii(%"class.std::__1::basic_string"* dereferenceable(24) %72, i32 1, i32 3) #14
  br label %97

83:                                               ; preds = %64
  %84 = icmp slt i32 %69, 0
  br i1 %84, label %85, label %99

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 2
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  %91 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = zext i8 %89 to i64
  %94 = select i1 %90, i64 %92, i64 %93
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %97, label %96

96:                                               ; preds = %85
  call void @_ZN4base23UmaHistogramExactLinearERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEii(%"class.std::__1::basic_string"* dereferenceable(24) %86, i32 2, i32 3) #14
  br label %97

97:                                               ; preds = %96, %85, %82, %71, %63, %52
  %98 = phi i32 [ 0, %52 ], [ 0, %63 ], [ 1, %71 ], [ 1, %82 ], [ 2, %85 ], [ 2, %96 ]
  call void @_ZN7metrics10DailyEvent10OnIntervalEN4base4TimeENS0_12IntervalTypeE(%"class.metrics::DailyEvent"* %0, i64 %4, i32 %98)
  br label %99

99:                                               ; preds = %97, %83
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #5

declare i64 @_ZNK11PrefService8GetInt64ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7metrics10DailyEvent10OnIntervalEN4base4TimeENS0_12IntervalTypeE(%"class.metrics::DailyEvent"* nocapture, i64, i32) local_unnamed_addr #4 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 0
  %7 = load %class.PrefService*, %class.PrefService** %6, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = tail call i64 @strlen(i8* %10) #14
  %12 = icmp ugt i64 %11, -17
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %14) #13
  unreachable

15:                                               ; preds = %3
  %16 = icmp ult i64 %11, 23
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = add nuw i64 %11, 16
  %19 = and i64 %18, -16
  %20 = tail call i8* @_Znwm(i64 %19) #15
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = or i64 %19, -9223372036854775808
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %11, i64* %24, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %31

26:                                               ; preds = %15
  %27 = trunc i64 %11 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 %27, i8* %29, align 1
  %30 = icmp eq i64 %11, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %26, %17
  %32 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %26 ], [ %25, %17 ]
  %33 = phi i8* [ %8, %26 ], [ %20, %17 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %33, i8* align 1 %10, i64 %11, i1 false) #14
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %26 ], [ %32, %31 ]
  %36 = phi i8* [ %8, %26 ], [ %33, %31 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 %11
  store i8 0, i8* %37, align 1
  call void @_ZN11PrefService8SetInt64ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEl(%class.PrefService* %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i64 %1) #14
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #15
  br label %44

44:                                               ; preds = %34, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  %45 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.std::__1::unique_ptr.80"*, %"class.std::__1::unique_ptr.80"** %45, align 8
  %47 = getelementptr inbounds %"class.metrics::DailyEvent", %"class.metrics::DailyEvent"* %0, i64 0, i32 3, i32 0, i32 1
  %48 = load %"class.std::__1::unique_ptr.80"*, %"class.std::__1::unique_ptr.80"** %47, align 8
  %49 = icmp eq %"class.std::__1::unique_ptr.80"* %46, %48
  br i1 %49, label %50, label %51

50:                                               ; preds = %51, %44
  ret void

51:                                               ; preds = %44, %51
  %52 = phi %"class.std::__1::unique_ptr.80"* [ %59, %51 ], [ %46, %44 ]
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.metrics::DailyEvent::Observer"*, %"class.metrics::DailyEvent::Observer"** %53, align 8
  %55 = bitcast %"class.metrics::DailyEvent::Observer"* %54 to void (%"class.metrics::DailyEvent::Observer"*, i32)***
  %56 = load void (%"class.metrics::DailyEvent::Observer"*, i32)**, void (%"class.metrics::DailyEvent::Observer"*, i32)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.metrics::DailyEvent::Observer"*, i32)*, void (%"class.metrics::DailyEvent::Observer"*, i32)** %56, i64 2
  %58 = load void (%"class.metrics::DailyEvent::Observer"*, i32)*, void (%"class.metrics::DailyEvent::Observer"*, i32)** %57, align 8
  call void %58(%"class.metrics::DailyEvent::Observer"* %54, i32 %2) #14
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %52, i64 1
  %60 = load %"class.std::__1::unique_ptr.80"*, %"class.std::__1::unique_ptr.80"** %47, align 8
  %61 = icmp eq %"class.std::__1::unique_ptr.80"* %59, %60
  br i1 %61, label %50, label %51
}

declare i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"*) local_unnamed_addr #5

declare void @_ZN11PrefService8SetInt64ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEl(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN4base23UmaHistogramExactLinearERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEii(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN7metrics10DailyEvent8ObserverENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr.80"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.80"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.80"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.80"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.80"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.80"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.80"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.metrics::DailyEvent::Observer"* null, %"class.metrics::DailyEvent::Observer"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.80"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.80"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.80"*, %"class.std::__1::unique_ptr.80"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.80"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.80"*, %"class.std::__1::unique_ptr.80"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.80"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.metrics::DailyEvent::Observer"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.80"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.80"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.80"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.metrics::DailyEvent::Observer"* null, %"class.metrics::DailyEvent::Observer"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.80"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !2

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.80"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.80"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.80"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.80"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.80"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.80"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.metrics::DailyEvent::Observer"* null, %"class.metrics::DailyEvent::Observer"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.80"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.80"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.metrics::DailyEvent::Observer"* null, %"class.metrics::DailyEvent::Observer"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.80"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.80"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.metrics::DailyEvent::Observer"* null, %"class.metrics::DailyEvent::Observer"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.80"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.80"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.metrics::DailyEvent::Observer"* null, %"class.metrics::DailyEvent::Observer"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.80"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.80"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.metrics::DailyEvent::Observer"* null, %"class.metrics::DailyEvent::Observer"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.80"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.80"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.metrics::DailyEvent::Observer"* null, %"class.metrics::DailyEvent::Observer"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.80"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.80"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.metrics::DailyEvent::Observer"* null, %"class.metrics::DailyEvent::Observer"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.80"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.80"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.metrics::DailyEvent::Observer"* null, %"class.metrics::DailyEvent::Observer"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.80"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.80"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.80"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.80"*, %"class.std::__1::unique_ptr.80"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.80"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.80"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.80"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.80"*
  %138 = icmp eq %"class.std::__1::unique_ptr.80"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.80"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.metrics::DailyEvent::Observer"*, %"class.metrics::DailyEvent::Observer"** %142, align 8
  store %"class.metrics::DailyEvent::Observer"* null, %"class.metrics::DailyEvent::Observer"** %142, align 8
  %144 = icmp eq %"class.metrics::DailyEvent::Observer"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.metrics::DailyEvent::Observer"* %143 to void (%"class.metrics::DailyEvent::Observer"*)***
  %147 = load void (%"class.metrics::DailyEvent::Observer"*)**, void (%"class.metrics::DailyEvent::Observer"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.metrics::DailyEvent::Observer"*)*, void (%"class.metrics::DailyEvent::Observer"*)** %147, i64 1
  %149 = load void (%"class.metrics::DailyEvent::Observer"*)*, void (%"class.metrics::DailyEvent::Observer"*)** %148, align 8
  tail call void %149(%"class.metrics::DailyEvent::Observer"* nonnull %143) #14
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.80"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
