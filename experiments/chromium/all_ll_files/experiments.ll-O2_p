; ModuleID = '../../components/dom_distiller/core/experiments.cc'
source_filename = "../../components/dom_distiller/core/experiments.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [13 x i8] c"ReaderModeUI\00", align 1
@_ZN8switches21kReaderModeHeuristicsE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN8switches22reader_mode_heuristics9kAdaBoostE = external constant [0 x i8], align 1
@_ZN8switches22reader_mode_heuristics12kAllArticlesE = external constant [0 x i8], align 1
@_ZN8switches22reader_mode_heuristics10kOGArticleE = external constant [0 x i8], align 1
@_ZN8switches22reader_mode_heuristics11kAlwaysTrueE = external constant [0 x i8], align 1
@_ZN8switches22reader_mode_heuristics5kNoneE = external constant [0 x i8], align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"AdaBoost\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"AllArticles\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"OGArticle\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"Disabled\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13dom_distiller26GetDistillerHeuristicsTypeEv() local_unnamed_addr #0 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #5
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @_ZN4base14FieldTrialList12FindFullNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12) #5
  %7 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #5
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #5
  %12 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches21kReaderModeHeuristicsE, i64 0, i64 0)) #5
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.base::CommandLine"* %11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches21kReaderModeHeuristicsE, i64 0, i64 0), i64 %12) #5
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = load i64, i64* %9, align 8
  %18 = zext i8 %15 to i64
  %19 = select i1 %16, i64 %17, i64 %18
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %0
  %22 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 0) #5
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %99, label %24

24:                                               ; preds = %21
  %25 = load i8, i8* %14, align 1
  %26 = load i64, i64* %9, align 8
  %27 = zext i8 %25 to i64
  br label %28

28:                                               ; preds = %24, %0
  %29 = phi i64 [ %27, %24 ], [ %18, %0 ]
  %30 = phi i64 [ %26, %24 ], [ %17, %0 ]
  %31 = phi i8 [ %25, %24 ], [ %15, %0 ]
  %32 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches22reader_mode_heuristics9kAdaBoostE, i64 0, i64 0)) #5
  %33 = icmp slt i8 %31, 0
  %34 = select i1 %33, i64 %30, i64 %29
  %35 = icmp eq i64 %32, %34
  br i1 %35, label %36, label %43

36:                                               ; preds = %28
  %37 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches22reader_mode_heuristics9kAdaBoostE, i64 0, i64 0), i64 %32) #5
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %138, label %39

39:                                               ; preds = %36
  %40 = load i8, i8* %14, align 1
  %41 = load i64, i64* %9, align 8
  %42 = zext i8 %40 to i64
  br label %43

43:                                               ; preds = %39, %28
  %44 = phi i64 [ %42, %39 ], [ %29, %28 ]
  %45 = phi i64 [ %41, %39 ], [ %30, %28 ]
  %46 = phi i8 [ %40, %39 ], [ %31, %28 ]
  %47 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches22reader_mode_heuristics12kAllArticlesE, i64 0, i64 0)) #5
  %48 = icmp slt i8 %46, 0
  %49 = select i1 %48, i64 %45, i64 %44
  %50 = icmp eq i64 %47, %49
  br i1 %50, label %51, label %58

51:                                               ; preds = %43
  %52 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches22reader_mode_heuristics12kAllArticlesE, i64 0, i64 0), i64 %47) #5
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %138, label %54

54:                                               ; preds = %51
  %55 = load i8, i8* %14, align 1
  %56 = load i64, i64* %9, align 8
  %57 = zext i8 %55 to i64
  br label %58

58:                                               ; preds = %54, %43
  %59 = phi i64 [ %57, %54 ], [ %44, %43 ]
  %60 = phi i64 [ %56, %54 ], [ %45, %43 ]
  %61 = phi i8 [ %55, %54 ], [ %46, %43 ]
  %62 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches22reader_mode_heuristics10kOGArticleE, i64 0, i64 0)) #5
  %63 = icmp slt i8 %61, 0
  %64 = select i1 %63, i64 %60, i64 %59
  %65 = icmp eq i64 %62, %64
  br i1 %65, label %66, label %73

66:                                               ; preds = %58
  %67 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches22reader_mode_heuristics10kOGArticleE, i64 0, i64 0), i64 %62) #5
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %138, label %69

69:                                               ; preds = %66
  %70 = load i8, i8* %14, align 1
  %71 = load i64, i64* %9, align 8
  %72 = zext i8 %70 to i64
  br label %73

73:                                               ; preds = %69, %58
  %74 = phi i64 [ %72, %69 ], [ %59, %58 ]
  %75 = phi i64 [ %71, %69 ], [ %60, %58 ]
  %76 = phi i8 [ %70, %69 ], [ %61, %58 ]
  %77 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches22reader_mode_heuristics11kAlwaysTrueE, i64 0, i64 0)) #5
  %78 = icmp slt i8 %76, 0
  %79 = select i1 %78, i64 %75, i64 %74
  %80 = icmp eq i64 %77, %79
  br i1 %80, label %81, label %88

81:                                               ; preds = %73
  %82 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches22reader_mode_heuristics11kAlwaysTrueE, i64 0, i64 0), i64 %77) #5
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %138, label %84

84:                                               ; preds = %81
  %85 = load i8, i8* %14, align 1
  %86 = load i64, i64* %9, align 8
  %87 = zext i8 %85 to i64
  br label %88

88:                                               ; preds = %84, %73
  %89 = phi i64 [ %87, %84 ], [ %74, %73 ]
  %90 = phi i64 [ %86, %84 ], [ %75, %73 ]
  %91 = phi i8 [ %85, %84 ], [ %76, %73 ]
  %92 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches22reader_mode_heuristics5kNoneE, i64 0, i64 0)) #5
  %93 = icmp slt i8 %91, 0
  %94 = select i1 %93, i64 %90, i64 %89
  %95 = icmp eq i64 %92, %94
  br i1 %95, label %96, label %137

96:                                               ; preds = %88
  %97 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches22reader_mode_heuristics5kNoneE, i64 0, i64 0), i64 %92) #5
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %138, label %137

99:                                               ; preds = %21
  %100 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  %104 = load i8*, i8** %4, align 8
  %105 = select i1 %103, i8* %104, i8* %3
  %106 = load i64, i64* %5, align 8
  %107 = zext i8 %102 to i64
  %108 = select i1 %103, i64 %106, i64 %107
  %109 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %105, i64 %108, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 8, i32 1) #5
  br i1 %109, label %138, label %110

110:                                              ; preds = %99
  %111 = load i8, i8* %101, align 1
  %112 = icmp slt i8 %111, 0
  %113 = load i8*, i8** %4, align 8
  %114 = select i1 %112, i8* %113, i8* %3
  %115 = load i64, i64* %5, align 8
  %116 = zext i8 %111 to i64
  %117 = select i1 %112, i64 %115, i64 %116
  %118 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %114, i64 %117, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i64 11, i32 1) #5
  br i1 %118, label %138, label %119

119:                                              ; preds = %110
  %120 = load i8, i8* %101, align 1
  %121 = icmp slt i8 %120, 0
  %122 = load i8*, i8** %4, align 8
  %123 = select i1 %121, i8* %122, i8* %3
  %124 = load i64, i64* %5, align 8
  %125 = zext i8 %120 to i64
  %126 = select i1 %121, i64 %124, i64 %125
  %127 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %123, i64 %126, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9, i32 1) #5
  br i1 %127, label %138, label %128

128:                                              ; preds = %119
  %129 = load i8, i8* %101, align 1
  %130 = icmp slt i8 %129, 0
  %131 = load i8*, i8** %4, align 8
  %132 = select i1 %130, i8* %131, i8* %3
  %133 = load i64, i64* %5, align 8
  %134 = zext i8 %129 to i64
  %135 = select i1 %130, i64 %133, i64 %134
  %136 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %132, i64 %135, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i64 8, i32 1) #5
  br i1 %136, label %138, label %137

137:                                              ; preds = %88, %128, %96
  br label %138

138:                                              ; preds = %128, %119, %110, %99, %96, %81, %66, %51, %36, %137
  %139 = phi i32 [ 2, %137 ], [ 2, %36 ], [ 3, %51 ], [ 1, %66 ], [ 4, %81 ], [ 0, %96 ], [ 2, %99 ], [ 3, %110 ], [ 1, %119 ], [ 0, %128 ]
  %140 = load i8, i8* %14, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %143) #6
  br label %144

144:                                              ; preds = %138, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #5
  %145 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %144
  %150 = load i8*, i8** %4, align 8
  call void @_ZdlPv(i8* %150) #6
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #5
  ret i32 %139
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base14FieldTrialList12FindFullNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
