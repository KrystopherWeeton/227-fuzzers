; ModuleID = '../../third_party/blink/renderer/modules/webaudio/script_processor_node.cc'
source_filename = "../../third_party/blink/renderer/modules/webaudio/script_processor_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.54" }
%"class.blink::PersistentBase.54" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.59" }
%"class.WTF::HashTable.59" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.61", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.63", i32, [4 x i8], %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.216", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.234", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.241", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.179", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__cxx_atomic_impl.102" }
%"struct.std::__1::__cxx_atomic_impl.102" = type { %"struct.std::__1::__cxx_atomic_base_impl.103" }
%"struct.std::__1::__cxx_atomic_base_impl.103" = type { i64 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.159", %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.173", [4 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161", %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { i64 }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { float }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.182", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.191" }
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"struct.std::__1::pair.209"*, i32, i32 }
%"struct.std::__1::pair.209" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.222" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.110"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.117"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.405" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.240 }
%class.scoped_refptr.240 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.241" = type { %"struct.std::__1::__atomic_base.242" }
%"struct.std::__1::__atomic_base.242" = type { %"struct.std::__1::__cxx_atomic_impl.243" }
%"struct.std::__1::__cxx_atomic_impl.243" = type { %"struct.std::__1::__cxx_atomic_base_impl.244" }
%"struct.std::__1::__cxx_atomic_base_impl.244" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::ScriptProcessorHandler" = type { %"class.blink::AudioHandler.base", %"class.base::SupportsWeakPtr.357", i32, %"class.WTF::Mutex", %"class.WTF::Vector.358", %"class.WTF::Vector.358", i32, i32, i32, i32, %class.scoped_refptr.294, %class.scoped_refptr.258 }
%"class.blink::AudioHandler.base" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.262, %"class.WTF::Vector.345", %"class.WTF::Vector.351", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32 }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::AudioNode"*, %"class.blink::PersistentNodePtr.343" }
%"class.blink::PersistentNodePtr.343" = type { %"class.blink::PersistentNode"* }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::BaseAudioContext"* }
%"class.blink::BaseAudioContext" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration.35", %"class.blink::Member.36", %"class.blink::HeapVector.38", i8, %class.scoped_refptr.258, i8, %"class.blink::Member.260", i8, %class.scoped_refptr.262, i32, %"class.blink::AsyncAudioDecoder", [3 x i8], %"class.blink::HeapHashSet.316", %"class.blink::Member.322", %"class.blink::Member.322", %"class.blink::Member.322", %"class.blink::Member.322", %class.scoped_refptr.324, %"class.blink::Member.325", %"class.blink::WorkerThread"* }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.10"* }
%"class.blink::HeapVector.10" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.11"* }
%"class.WTF::Vector.11" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.26" }
%"class.blink::WeakMember.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.28" }
%"class.blink::HeapHashSet.28" = type { %"class.WTF::HashSet.31" }
%"class.WTF::HashSet.31" = type { %"class.WTF::HashTable.32" }
%"class.WTF::HashTable.32" = type <{ %"class.blink::WeakMember.34"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.34" = type opaque
%"class.blink::InspectorHelperMixin" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.13", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::AudioGraphTracer"* }
%"class.blink::AudioGraphTracer" = type { %"class.blink::Supplement", %"class.blink::Member.19", %"class.blink::HeapHashSet" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.425", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.427", %"class.blink::Member.431", %"class.blink::Member.433", %"class.blink::Member.435", %"class.blink::Member.437", %"class.blink::Member.439", %"class.blink::Member.441", %"class.blink::Member.443", %"class.blink::HeapObserverSet.445", %"class.blink::Member.453", %"class.blink::Member.455", %"class.blink::Member.457", %"class.blink::Member.459", %"class.blink::Member.461", %"class.blink::Member.463", %"class.blink::Member.465", %"class.blink::Member.467", %"class.blink::Member.469", %"class.blink::Member.471", %"class.blink::Member.473", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.504", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.512", %"class.std::__1::unique_ptr.518", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.412" }
%"class.blink::HeapHashMap.412" = type { %"class.WTF::HashMap.415" }
%"class.WTF::HashMap.415" = type { %"class.WTF::HashTable.416" }
%"class.WTF::HashTable.416" = type <{ %"struct.WTF::KeyValuePair.418"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.418" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.419" }
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.17", %"class.blink::Member.526", %"class.blink::Member.528", i8, i32, i8, i32, %"class.blink::Member.709", %"class.blink::Member.530", %"class.blink::FrameLifecycle", %"class.blink::Member.425", %"class.blink::Member.425", %"class.blink::Member.425", %"class.blink::Member.425", %"class.blink::Member.425", %"class.blink::Member.425", %"class.blink::Member.711", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.721", i8, %"class.base::UnguessableToken", %"class.absl::optional.723", %"class.absl::optional.728", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.425", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.425", %"class.blink::Member.530", %"class.blink::Member.532", %"class.blink::Member.534", i8, %"class.WTF::Vector.536" }
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.536" = type { %"class.WTF::VectorBuffer.537" }
%"class.WTF::VectorBuffer.537" = type { %"class.WTF::VectorBufferBase.538" }
%"class.WTF::VectorBufferBase.538" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.539", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType.539" = type { %"class.base::StrongAlias.540" }
%"class.base::StrongAlias.540" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.701" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.541, %"class.std::__1::unique_ptr.656", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.543, i32 }>
%class.scoped_refptr.541 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.543, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.622", %"class.absl::optional.627", %"class.absl::optional.583", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.647", i8, [7 x i8], %class.scoped_refptr.543, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.542" }>
%"class.base::RefCountedThreadSafe.542" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.546 }
%union.anon.546 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.550", %"class.std::__1::unique_ptr.556", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.265 }
%class.scoped_refptr.265 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.266", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.266" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.267" }
%"struct.std::__1::atomic.267" = type { %"struct.std::__1::__atomic_base.268" }
%"struct.std::__1::__atomic_base.268" = type { %"struct.std::__1::__atomic_base.269" }
%"struct.std::__1::__atomic_base.269" = type { %"struct.std::__1::__cxx_atomic_impl.270" }
%"struct.std::__1::__cxx_atomic_impl.270" = type { %"struct.std::__1::__cxx_atomic_base_impl.271" }
%"struct.std::__1::__cxx_atomic_base_impl.271" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.543, %"class.std::__1::unique_ptr.564", %"class.absl::optional.573", %"struct.std::__1::atomic.241", i8, i8, i8, i8, i32, i32, %"class.absl::optional.583", %"class.std::__1::unique_ptr.588", i8, i64, %class.scoped_refptr.618, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.620", %"class.base::WeakPtrFactory.621" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.562 }
%class.scoped_refptr.562 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.563", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.563" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.543, i8, %"class.mojo::ScopedHandleBase.567", %class.scoped_refptr.568, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.569" }
%"class.mojo::ScopedHandleBase.567" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.568 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.569" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.573" = type { %"class.absl::optional_internal::optional_data.574" }
%"class.absl::optional_internal::optional_data.574" = type { %"class.absl::optional_internal::optional_data_base.575" }
%"class.absl::optional_internal::optional_data_base.575" = type { %"class.absl::optional_internal::optional_data_dtor_base.576" }
%"class.absl::optional_internal::optional_data_dtor_base.576" = type { i8, %union.anon.577 }
%union.anon.577 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.578", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.578" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.591", i8, i64, %class.scoped_refptr.592, %class.scoped_refptr.614 }
%"class.base::RepeatingCallback.591" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.592 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.593", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.603", i8, [7 x i8] }>
%"class.base::RefCounted.593" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.594 }
%class.scoped_refptr.594 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.595", %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.std::__1::map.603" = type { %"class.std::__1::__tree.604" }
%"class.std::__1::__tree.604" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.605", %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%class.scoped_refptr.614 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.618 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.619 }
%class.scoped_refptr.619 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1863", [4 x i8], %"class.base::RepeatingCallback.659", %class.scoped_refptr.543, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.5", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1863" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.659" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr.620" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.511 }
%class.scoped_refptr.511 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.621" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.622" = type { %"class.absl::optional_internal::optional_data.623" }
%"class.absl::optional_internal::optional_data.623" = type { %"class.absl::optional_internal::optional_data_base.624" }
%"class.absl::optional_internal::optional_data_base.624" = type { %"class.absl::optional_internal::optional_data_dtor_base.625" }
%"class.absl::optional_internal::optional_data_dtor_base.625" = type { i8, %union.anon.626 }
%union.anon.626 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.627" = type { %"class.absl::optional_internal::optional_data.628" }
%"class.absl::optional_internal::optional_data.628" = type { %"class.absl::optional_internal::optional_data_base.629" }
%"class.absl::optional_internal::optional_data_base.629" = type { %"class.absl::optional_internal::optional_data_dtor_base.630" }
%"class.absl::optional_internal::optional_data_dtor_base.630" = type { i8, [7 x i8], %union.anon.631 }
%union.anon.631 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.583" = type { %"class.absl::optional_internal::optional_data.584" }
%"class.absl::optional_internal::optional_data.584" = type { %"class.absl::optional_internal::optional_data_base.585" }
%"class.absl::optional_internal::optional_data_base.585" = type { %"class.absl::optional_internal::optional_data_dtor_base.586" }
%"class.absl::optional_internal::optional_data_dtor_base.586" = type { i8, %union.anon.587 }
%union.anon.587 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.632 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.632 = type { %"class.std::__1::map.635" }
%"class.std::__1::map.635" = type { %"class.std::__1::__tree.636" }
%"class.std::__1::__tree.636" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.637", %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.646"*, i64 }
%"class.std::__1::unique_ptr.646" = type opaque
%"class.std::__1::map.647" = type { %"class.std::__1::__tree.648" }
%"class.std::__1::__tree.648" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.649", %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.std::__1::unique_ptr.656" = type { %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.659", %"class.base::OnceCallback.660", %"class.absl::optional.493", %"class.absl::optional.661", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.668", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.676", %"class.std::__1::map.687", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.696", i8, %class.scoped_refptr.543, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.697" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.660" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.493" = type { %"class.absl::optional_internal::optional_data.494" }
%"class.absl::optional_internal::optional_data.494" = type { %"class.absl::optional_internal::optional_data_base.495" }
%"class.absl::optional_internal::optional_data_base.495" = type { %"class.absl::optional_internal::optional_data_dtor_base.496" }
%"class.absl::optional_internal::optional_data_dtor_base.496" = type { i8, %union.anon.497 }
%union.anon.497 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.661" = type { %"class.absl::optional_internal::optional_data.662" }
%"class.absl::optional_internal::optional_data.662" = type { %"class.absl::optional_internal::optional_data_base.663" }
%"class.absl::optional_internal::optional_data_base.663" = type { %"class.absl::optional_internal::optional_data_dtor_base.664" }
%"class.absl::optional_internal::optional_data_dtor_base.664" = type { i8, %union.anon.665 }
%union.anon.665 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.543, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.666" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.666" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.667 }
%class.scoped_refptr.667 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.671", %class.scoped_refptr.672 }
%"class.base::RepeatingCallback.671" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.672 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.542", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.676" = type { %"class.std::__1::__tree.677" }
%"class.std::__1::__tree.677" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.678", %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.std::__1::map.687" = type { %"class.std::__1::__tree.688" }
%"class.std::__1::__tree.688" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.689", %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.base::OnceCallback.696" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.697" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.543 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.259" }>
%"class.base::RefCountedThreadSafe.259" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.711" = type { %"class.blink::MemberBase.712" }
%"class.blink::MemberBase.712" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.740", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.748", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.762", %"class.blink::FrameLoader", %"class.blink::Member.789", %"class.blink::Member.791", %"class.blink::Member.820", %"class.blink::Member.822", %"class.blink::Member.824", %"class.blink::Member.826", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.828", %class.scoped_refptr.830, %"class.blink::Member.831", %"class.blink::Member.833", %"class.blink::Member.835", %"class.blink::Member.837", %"class.blink::Member.839", %"class.blink::Member.841", %"class.blink::Member.843", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.847", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.868", %"class.std::__1::unique_ptr.869", %"class.absl::optional.728", i32, [4 x i8], %"class.std::__1::unique_ptr.875", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.883", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.888", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.893", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.896", %"class.blink::Member.898", %"class.blink::Member.900", %"class.blink::Member.902", %"class.mojo::StructPtr.905", %"class.blink::Member.913", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.915", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.740" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.741" }
%"class.blink::HeapHashMap.741" = type { %"class.WTF::HashMap.744" }
%"class.WTF::HashMap.744" = type { %"class.WTF::HashTable.745" }
%"class.WTF::HashTable.745" = type <{ %"struct.WTF::KeyValuePair.747"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.747" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.748" = type { %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.751", %"class.base::WeakPtrFactory.756" }
%"class.WTF::HashMap.751" = type { %"class.WTF::HashTable.752" }
%"class.WTF::HashTable.752" = type <{ %"struct.WTF::KeyValuePair.755"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.755" = type opaque
%"class.base::WeakPtrFactory.756" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.760" }
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.659", %"class.base::RepeatingCallback.1994", i64, %"class.std::__1::map.1995", i8*, i64, %"class.base::WeakPtrFactory.2004" }
%"class.base::RepeatingCallback.1994" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1995" = type { %"class.std::__1::__tree.1996" }
%"class.std::__1::__tree.1996" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1997", %"class.std::__1::__compressed_pair.2001" }
%"class.std::__1::__compressed_pair.1997" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"class.std::__1::__compressed_pair.2001" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.base::WeakPtrFactory.2004" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.762" = type { %"class.WTF::HashSet.765" }
%"class.WTF::HashSet.765" = type { %"class.WTF::HashTable.766" }
%"class.WTF::HashTable.766" = type <{ %"class.blink::WeakMember.768"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.768" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.711", %"class.blink::Member.769", %"class.blink::Member.771", %"class.std::__1::unique_ptr.773", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.785" }
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.771" = type { %"class.blink::MemberBase.772" }
%"class.blink::MemberBase.772" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.773" = type { %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.776" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::KURL"* }
%"class.WTF::HashSet.785" = type { %"class.WTF::HashTable.786" }
%"class.WTF::HashTable.786" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1578", %"class.blink::Member.711", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1583", i8, i32, %"class.blink::Color", %"class.absl::optional.1585", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1590", %"class.blink::Member.1592", %"class.blink::Member.1592", %"class.std::__1::unique_ptr.1595", i32, [4 x i8], %"class.WTF::HashSet.1598", %"class.blink::Member.1605", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1607", %"class.blink::HeapHashSet.1614", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1622", i8, %"class.blink::Member.1628", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1640", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1654", i8, %"class.std::__1::unique_ptr.1660", %"class.std::__1::unique_ptr.1777", %"class.WTF::Vector.1783", i32, %class.scoped_refptr.1788, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1789", %"class.blink::Member.1791", %"class.blink::Member.1793", %"class.blink::HeapHashSet.1795", %"class.blink::HeapHashSet.1802", %"class.std::__1::unique_ptr.1809", %"class.std::__1::unique_ptr.1816", %"class.WTF::Vector.1008" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1578" = type { %"class.WTF::HashTable.1579" }
%"class.WTF::HashTable.1579" = type <{ %class.scoped_refptr.1582*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1582 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1583" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1584", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.258, %"class.base::WeakPtrFactory.1352" }
%"class.base::WeakPtrFactory.1352" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1584" = type { %"class.blink::MemberBase.790" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1585" = type { %"class.absl::optional_internal::optional_data.1586" }
%"class.absl::optional_internal::optional_data.1586" = type { %"class.absl::optional_internal::optional_data_base.1587" }
%"class.absl::optional_internal::optional_data_base.1587" = type { %"class.absl::optional_internal::optional_data_dtor_base.1588" }
%"class.absl::optional_internal::optional_data_dtor_base.1588" = type { i8, %union.anon.1589 }
%union.anon.1589 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::HeapHashSet.1594"* }
%"class.blink::HeapHashSet.1594" = type opaque
%"class.std::__1::unique_ptr.1595" = type { %"class.std::__1::__compressed_pair.1596" }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.WTF::HashSet.1598"* }
%"class.WTF::HashSet.1598" = type { %"class.WTF::HashTable.1599" }
%"class.WTF::HashTable.1599" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1605" = type { %"class.blink::MemberBase.1606" }
%"class.blink::MemberBase.1606" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1607" = type { %"class.WTF::HashSet.1610" }
%"class.WTF::HashSet.1610" = type { %"class.WTF::HashTable.1611" }
%"class.WTF::HashTable.1611" = type <{ %"class.blink::Member.1613"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1613" = type opaque
%"class.blink::HeapHashSet.1614" = type { %"class.WTF::HashSet.1617" }
%"class.WTF::HashSet.1617" = type { %"class.WTF::HashTable.1618" }
%"class.WTF::HashTable.1618" = type <{ %"class.blink::Member.1620"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1850", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1861", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.791" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1850" = type { %"class.blink::MemberBase.1851" }
%"class.blink::MemberBase.1851" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1852", %"class.blink::Member.1853", %"class.blink::Member.1855", %"class.blink::Member.1857", %"class.blink::Member.1859", %"class.WTF::Vector.1008", i16, %class.scoped_refptr.258 }
%"class.blink::ThreadState::PrefinalizerRegistration.1852" = type { i8 }
%"class.blink::Member.1853" = type { %"class.blink::MemberBase.1854" }
%"class.blink::MemberBase.1854" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1855" = type { %"class.blink::MemberBase.1856" }
%"class.blink::MemberBase.1856" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1857" = type { %"class.blink::MemberBase.1858" }
%"class.blink::MemberBase.1858" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1859" = type { %"class.blink::MemberBase.1860" }
%"class.blink::MemberBase.1860" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1861" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1862", { i64, i64 } }
%"class.blink::WeakMember.1862" = type { %"class.blink::MemberBase.1621" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1622" = type { %"class.std::__1::__compressed_pair.1623" }
%"class.std::__1::__compressed_pair.1623" = type { %"struct.std::__1::__compressed_pair_elem.1624" }
%"struct.std::__1::__compressed_pair_elem.1624" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1628" = type { %"class.blink::MemberBase.1629" }
%"class.blink::MemberBase.1629" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1632", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1632" = type { %"class.WTF::HashTable.1633" }
%"class.WTF::HashTable.1633" = type <{ %"struct.WTF::KeyValuePair.1635"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1635" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1636", i32, i32 }
%"class.WTF::Vector.1636" = type { %"class.WTF::VectorBuffer.1637" }
%"class.WTF::VectorBuffer.1637" = type { %"class.WTF::VectorBufferBase.1638" }
%"class.WTF::VectorBufferBase.1638" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1640" = type { %"class.WTF::LinkedHashSet.1643" }
%"class.WTF::LinkedHashSet.1643" = type { %"class.WTF::HashMap.1644", %"class.WTF::VectorBackedLinkedList.1648" }
%"class.WTF::HashMap.1644" = type { %"class.WTF::HashTable.1645" }
%"class.WTF::HashTable.1645" = type <{ %"struct.WTF::KeyValuePair.1647"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1647" = type opaque
%"class.WTF::VectorBackedLinkedList.1648" = type { %"class.WTF::Vector.1649", i32, i32 }
%"class.WTF::Vector.1649" = type { %"class.WTF::VectorBuffer.1650" }
%"class.WTF::VectorBuffer.1650" = type { %"class.WTF::VectorBufferBase.1651" }
%"class.WTF::VectorBufferBase.1651" = type { %"class.WTF::VectorBackedLinkedListNode.1652"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1652" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1654" = type { %"class.std::__1::__compressed_pair.1655" }
%"class.std::__1::__compressed_pair.1655" = type { %"struct.std::__1::__compressed_pair_elem.1656" }
%"struct.std::__1::__compressed_pair_elem.1656" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1660" = type { %"class.std::__1::__compressed_pair.1661" }
%"class.std::__1::__compressed_pair.1661" = type { %"struct.std::__1::__compressed_pair_elem.1662" }
%"struct.std::__1::__compressed_pair_elem.1662" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1663, %class.scoped_refptr.1663, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1754", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1759", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1663 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1664", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1671" }
%"class.WTF::RefCounted.1664" = type { %"class.base::RefCounted.1665" }
%"class.base::RefCounted.1665" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1666", i32, [4 x i8] }>
%"class.WTF::Vector.1666" = type { %"class.WTF::VectorBuffer.1667" }
%"class.WTF::VectorBuffer.1667" = type { %"class.WTF::VectorBufferBase.1668" }
%"class.WTF::VectorBufferBase.1668" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1671" = type { %"class.WTF::VectorBuffer.1672" }
%"class.WTF::VectorBuffer.1672" = type { %"class.WTF::VectorBufferBase.1673" }
%"class.WTF::VectorBufferBase.1673" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1677", %"class.std::__1::unique_ptr.1726", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1674, %class.scoped_refptr.1675, %class.scoped_refptr.1676 }
%class.scoped_refptr.1674 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1690", i8, i8, %class.scoped_refptr.1674, i32, i32 }
%"class.WTF::RefCounted.1690" = type { %"class.base::RefCounted.1691" }
%"class.base::RefCounted.1691" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1675 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1845" }
%"class.blink::PaintPropertyNode.1845" = type { %"class.WTF::RefCounted.1846", i8, i8, %class.scoped_refptr.1675, i32, i32 }
%"class.WTF::RefCounted.1846" = type { %"class.base::RefCounted.1847" }
%"class.base::RefCounted.1847" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1676 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1842" }
%"class.blink::PaintPropertyNode.1842" = type { %"class.WTF::RefCounted.1843", i8, i8, %class.scoped_refptr.1676, i32, i32 }
%"class.WTF::RefCounted.1843" = type { %"class.base::RefCounted.1844" }
%"class.base::RefCounted.1844" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1680", %"class.WTF::Vector.1685", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1680" = type { %"class.WTF::VectorBuffer.1681" }
%"class.WTF::VectorBuffer.1681" = type { %"class.WTF::VectorBufferBase.1682" }
%"class.WTF::VectorBufferBase.1682" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1685" = type { %"class.WTF::VectorBuffer.1686" }
%"class.WTF::VectorBuffer.1686" = type { %"class.WTF::VectorBufferBase.1687" }
%"class.WTF::VectorBufferBase.1687" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1705" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1698, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1699", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1692" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1692" = type { %"class.std::__1::__compressed_pair.1693" }
%"class.std::__1::__compressed_pair.1693" = type { %"struct.std::__1::__compressed_pair_elem.1694" }
%"struct.std::__1::__compressed_pair_elem.1694" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1698 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1827", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1827" = type { %"class.WTF::RefCounted.1828", i8, i8, %class.scoped_refptr.1698, i32, i32 }
%"class.WTF::RefCounted.1828" = type { %"class.base::RefCounted.1829" }
%"class.base::RefCounted.1829" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1830" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1830" = type { %"class.absl::optional_internal::optional_data.1831" }
%"class.absl::optional_internal::optional_data.1831" = type { %"class.absl::optional_internal::optional_data_base.1832" }
%"class.absl::optional_internal::optional_data_base.1832" = type { %"class.absl::optional_internal::optional_data_dtor_base.1833" }
%"class.absl::optional_internal::optional_data_dtor_base.1833" = type { i8, %union.anon.1834 }
%union.anon.1834 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1835", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1835" = type { %"class.std::__1::__vector_base.1836" }
%"class.std::__1::__vector_base.1836" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1837" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1837" = type { %"struct.std::__1::__compressed_pair_elem.1838" }
%"struct.std::__1::__compressed_pair_elem.1838" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1699" = type { %"class.std::__1::__compressed_pair.1700" }
%"class.std::__1::__compressed_pair.1700" = type { %"struct.std::__1::__compressed_pair_elem.1701" }
%"struct.std::__1::__compressed_pair_elem.1701" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1705" = type { %"class.std::__1::__compressed_pair.1706" }
%"class.std::__1::__compressed_pair.1706" = type { %"struct.std::__1::__compressed_pair_elem.1707" }
%"struct.std::__1::__compressed_pair_elem.1707" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1708", %"class.std::__1::unique_ptr.1714", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1708" = type { %"class.std::__1::__compressed_pair.1709" }
%"class.std::__1::__compressed_pair.1709" = type { %"struct.std::__1::__compressed_pair_elem.1710" }
%"struct.std::__1::__compressed_pair_elem.1710" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1714" = type { %"class.std::__1::__compressed_pair.1715" }
%"class.std::__1::__compressed_pair.1715" = type { %"struct.std::__1::__compressed_pair_elem.1716" }
%"struct.std::__1::__compressed_pair_elem.1716" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1726" = type { %"class.std::__1::__compressed_pair.1727" }
%"class.std::__1::__compressed_pair.1727" = type { %"struct.std::__1::__compressed_pair_elem.1728" }
%"struct.std::__1::__compressed_pair_elem.1728" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1729", %"class.absl::optional.1729" }
%"class.absl::optional.1729" = type { %"class.absl::optional_internal::optional_data.1730" }
%"class.absl::optional_internal::optional_data.1730" = type { %"class.absl::optional_internal::optional_data_base.1731" }
%"class.absl::optional_internal::optional_data_base.1731" = type { %"class.absl::optional_internal::optional_data_dtor_base.1732" }
%"class.absl::optional_internal::optional_data_dtor_base.1732" = type { i8, [3 x i8], %union.anon.1733 }
%union.anon.1733 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1671"*, %"class.absl::optional.1739", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1739" = type { %"class.absl::optional_internal::optional_data.1740" }
%"class.absl::optional_internal::optional_data.1740" = type { %"class.absl::optional_internal::optional_data_base.1741" }
%"class.absl::optional_internal::optional_data_base.1741" = type { %"class.absl::optional_internal::optional_data_dtor_base.1742" }
%"class.absl::optional_internal::optional_data_dtor_base.1742" = type { i8, %union.anon.1743 }
%union.anon.1743 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1744", %"class.WTF::Vector.1749" }
%"class.WTF::Vector.1744" = type { %"class.WTF::VectorBuffer.1745" }
%"class.WTF::VectorBuffer.1745" = type { %"class.WTF::VectorBufferBase.1746", [128 x i8] }
%"class.WTF::VectorBufferBase.1746" = type { i32*, i32, i32 }
%"class.WTF::Vector.1749" = type { %"class.WTF::VectorBuffer.1750" }
%"class.WTF::VectorBuffer.1750" = type { %"class.WTF::VectorBufferBase.1751", [128 x i8] }
%"class.WTF::VectorBufferBase.1751" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1754" = type { %"class.WTF::VectorBuffer.1755" }
%"class.WTF::VectorBuffer.1755" = type { %"class.WTF::VectorBufferBase.1756" }
%"class.WTF::VectorBufferBase.1756" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1759" = type { %"class.WTF::HashTable.1760" }
%"class.WTF::HashTable.1760" = type <{ %"struct.WTF::KeyValuePair.1763"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1763" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1764", %"class.WTF::Vector.1769" }
%"class.WTF::HashMap.1764" = type { %"class.WTF::HashTable.1765" }
%"class.WTF::HashTable.1765" = type <{ %"struct.WTF::KeyValuePair.1768"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1768" = type opaque
%"class.WTF::Vector.1769" = type { %"class.WTF::VectorBuffer.1770" }
%"class.WTF::VectorBuffer.1770" = type { %"class.WTF::VectorBufferBase.1771" }
%"class.WTF::VectorBufferBase.1771" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1777" = type { %"class.std::__1::__compressed_pair.1778" }
%"class.std::__1::__compressed_pair.1778" = type { %"struct.std::__1::__compressed_pair_elem.1779" }
%"struct.std::__1::__compressed_pair_elem.1779" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1783" = type { %"class.WTF::VectorBuffer.1784" }
%"class.WTF::VectorBuffer.1784" = type { %"class.WTF::VectorBufferBase.1785" }
%"class.WTF::VectorBufferBase.1785" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1788 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1789" = type { %"class.blink::MemberBase.1790" }
%"class.blink::MemberBase.1790" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1791" = type { %"class.blink::MemberBase.1792" }
%"class.blink::MemberBase.1792" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1793" = type { %"class.blink::MemberBase.1794" }
%"class.blink::MemberBase.1794" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1795" = type { %"class.WTF::HashSet.1798" }
%"class.WTF::HashSet.1798" = type { %"class.WTF::HashTable.1799" }
%"class.WTF::HashTable.1799" = type <{ %"class.blink::WeakMember.1801"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1801" = type opaque
%"class.blink::HeapHashSet.1802" = type { %"class.WTF::HashSet.1805" }
%"class.WTF::HashSet.1805" = type { %"class.WTF::HashTable.1806" }
%"class.WTF::HashTable.1806" = type <{ %"class.blink::WeakMember.1808"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1808" = type opaque
%"class.std::__1::unique_ptr.1809" = type { %"class.std::__1::__compressed_pair.1810" }
%"class.std::__1::__compressed_pair.1810" = type { %"struct.std::__1::__compressed_pair_elem.1811" }
%"struct.std::__1::__compressed_pair_elem.1811" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1812" }
%"class.base::time_internal::TimeBase.1812" = type { i64 }
%"class.std::__1::unique_ptr.1816" = type { %"class.std::__1::__compressed_pair.1817" }
%"class.std::__1::__compressed_pair.1817" = type { %"struct.std::__1::__compressed_pair_elem.1818" }
%"struct.std::__1::__compressed_pair_elem.1818" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1819", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1819" = type { %"class.absl::optional_internal::optional_data.1820" }
%"class.absl::optional_internal::optional_data.1820" = type { %"class.absl::optional_internal::optional_data_base.1821" }
%"class.absl::optional_internal::optional_data_base.1821" = type { %"class.absl::optional_internal::optional_data_dtor_base.1822" }
%"class.absl::optional_internal::optional_data_dtor_base.1822" = type { i8, %union.anon.1823 }
%union.anon.1823 = type { %"class.base::Time" }
%"class.WTF::Vector.1008" = type { %"class.WTF::VectorBuffer.1009" }
%"class.WTF::VectorBuffer.1009" = type { %"class.WTF::VectorBufferBase.1010" }
%"class.WTF::VectorBufferBase.1010" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.804" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.793", %"class.blink::Member.793" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.793", %"class.blink::Member.795", %"class.blink::Member.793", %"class.blink::Member.793", %"class.blink::Member.797" }
%"class.blink::Member.795" = type { %"class.blink::MemberBase.796" }
%"class.blink::MemberBase.796" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.920", %"class.blink::Member.922", %"class.blink::Member.795", %"class.blink::Member.924", %"class.blink::Member.924", %"class.blink::Member.946", %"class.blink::Member.948", %"class.blink::Member.950", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.955", %"class.blink::HeapVector.957" }
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.922" = type { %"class.blink::MemberBase.923" }
%"class.blink::MemberBase.923" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1000", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1008", %"class.WTF::Vector.1008", i8, i32, %"class.blink::Member.1013", %"class.blink::Member.1073", %"class.blink::Member.1329", %"class.blink::Member.1331", %"class.blink::Member.1333", %"class.blink::Member.1335", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1337", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1343", %"class.blink::Member.1345", %"class.blink::Member.963", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1347", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.939", %"class.blink::Member.791", %"class.blink::Member.1304", %"class.blink::Member.791", %"class.blink::Member.791", %"class.blink::Member.791", %"class.blink::UserActionElementSet", %"class.blink::Member.1361", double, double, i64, i64, %"class.blink::HeapHashSet.1363", %"class.blink::HeapHashSet.1370", i16, i8, %"class.blink::Member.1377", %"class.blink::Member.1379", %"class.blink::Member.1381", %"class.blink::Member.1383", %"class.blink::TextLinkColors", %"class.blink::Member.1385", i8, [7 x i8], %"class.blink::HeapHashMap.1387", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.791", %"class.WTF::Vector.1394", %"class.blink::Member.1399", %"class.blink::Member.1401", i8, %"class.blink::Member.791", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1403", %"class.blink::HeapVector.1405", %"class.std::__1::unique_ptr.1413", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1419", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1432", %"class.WTF::Vector.1434", i8, i8, %"class.std::__1::unique_ptr.1439", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.939", %"class.blink::HeapVector.1445", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1453", i8, i32, %"class.blink::Member.1455", %"class.blink::Member.1457", %"class.blink::Member.1459", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1461", %"class.WTF::HashMap.1463", %"class.blink::Member.1468", %"class.blink::Member.1470", %"class.blink::Member.1472", %"class.blink::Member.1474", %"class.blink::Member.922", %"class.blink::Member.922", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1476", i8, i32, %"class.blink::Member.1483", %"class.blink::Member.1485", i32, %"class.blink::Member.1487", %"class.blink::Member.1489", %"class.blink::Member.1491", %"class.std::__1::unique_ptr.1493", i64, %"class.std::__1::unique_ptr.1499", i32, i32, %"class.blink::Member.1505", %"class.blink::Member.1507", %"class.blink::Member.1509", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1511", %"class.WTF::Vector.1315", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1513", %"class.blink::Member.1520", %"class.std::__1::unique_ptr.1522", %"class.blink::Member.1528", i8, i8, %"class.WTF::String", %"class.blink::Member.1530", i8, [7 x i8], %"class.blink::HeapHashMap.1532", %"class.blink::HeapObserverSet.1539", %"class.blink::Member.1547", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1549", i32, i8, i8, %"class.blink::WeakMember.1551", %"class.blink::Member.1552" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.1000" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1001" }
%"class.blink::HeapHashMap.1001" = type { %"class.WTF::HashMap.1004" }
%"class.WTF::HashMap.1004" = type { %"class.WTF::HashTable.1005" }
%"class.WTF::HashTable.1005" = type <{ %"struct.WTF::KeyValuePair.1007"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1007" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1013" = type { %"class.blink::MemberBase.1014" }
%"class.blink::MemberBase.1014" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.1165", %"class.blink::ThreadState::PrefinalizerRegistration.1173", %"class.blink::Member.1174", %"class.blink::Member.922", %"class.blink::Member.1176", i8, %"class.blink::Member.1178", %"class.blink::Member.1180", %"class.blink::Member.1182", %"class.blink::Member.1182", %"class.blink::Member.1182", %"class.blink::Member.1182", %"class.blink::Member.1182", %"class.blink::Member.1182", %"class.blink::Member.1184", %"class.blink::Member.1186", %"class.blink::Member.1188", %"class.blink::Member.1190", %"class.blink::Member.1192", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.1132", %"class.blink::Member.1194", %class.scoped_refptr.1196, %"class.blink::HeapHashSet.1258", %"class.blink::Member.1265", %"class.blink::HeapHashMap.1278", %"class.std::__1::unique_ptr.1285", %"class.blink::Member.1291", %"class.blink::Member.1308", %"class.blink::Member.1310", %"class.blink::Member.1312", %"class.WTF::Vector.1315", %"class.util::TokenType.539", %"class.WTF::HashSet.1320", %"class.WTF::Deque.1324" }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.1015", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1079", i32, i8, [3 x i8], %"class.blink::HeapVector.1081", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1089", %"class.blink::Member.1091", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1100", %"class.blink::Member.1161", %"class.blink::Member.1163", i8 }>
%"class.blink::Supplementable.1015" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1016" }
%"class.blink::HeapHashMap.1016" = type { %"class.WTF::HashMap.1019" }
%"class.WTF::HashMap.1019" = type { %"class.WTF::HashTable.1020" }
%"class.WTF::HashTable.1020" = type <{ %"struct.WTF::KeyValuePair.1022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1022" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1023" }
%"class.blink::Supplementable.1023" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1024" }
%"class.blink::HeapHashMap.1024" = type { %"class.WTF::HashMap.1027" }
%"class.WTF::HashMap.1027" = type { %"class.WTF::HashTable.1028" }
%"class.WTF::HashTable.1028" = type <{ %"struct.WTF::KeyValuePair.1030"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1030" = type { i8*, %"class.blink::Member.1981" }
%"class.blink::Member.1981" = type { %"class.blink::MemberBase.1982" }
%"class.blink::MemberBase.1982" = type { %"class.blink::Supplement.1983"* }
%"class.blink::Supplement.1983" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1984" }
%"class.blink::Member.1984" = type { %"class.blink::MemberBase.1985" }
%"class.blink::MemberBase.1985" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1031, %"class.std::__1::unique_ptr.1040", %"class.std::__1::unique_ptr.1040", %"class.std::__1::unique_ptr.1067", %"class.std::__1::unique_ptr.1067", %"class.blink::Member.1073", i32, [4 x i8], %"class.WTF::HashSet.1075", i32, i32 }
%class.scoped_refptr.1031 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1032", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1034", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1039 }
%"class.WTF::RefCounted.1032" = type { %"class.base::RefCounted.1033" }
%"class.base::RefCounted.1033" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1034" = type { %"class.absl::optional_internal::optional_data.1035" }
%"class.absl::optional_internal::optional_data.1035" = type { %"class.absl::optional_internal::optional_data_base.1036" }
%"class.absl::optional_internal::optional_data_base.1036" = type { %"class.absl::optional_internal::optional_data_dtor_base.1037" }
%"class.absl::optional_internal::optional_data_dtor_base.1037" = type { i8, %union.anon.1038 }
%union.anon.1038 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.1039 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1040" = type { %"class.std::__1::__compressed_pair.1041" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.1042" }
%"struct.std::__1::__compressed_pair_elem.1042" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1043", %"class.std::__1::map.1054", %"class.std::__1::map.1063"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1034" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.1043" = type { %"class.std::__1::__tree.1044" }
%"class.std::__1::__tree.1044" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1045", %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.std::__1::map.1054" = type { %"class.std::__1::__tree.1055" }
%"class.std::__1::__tree.1055" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1056", %"class.std::__1::__compressed_pair.1060" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.std::__1::map.1063" = type opaque
%"class.std::__1::unique_ptr.1067" = type { %"class.std::__1::__compressed_pair.1068" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.1069" }
%"struct.std::__1::__compressed_pair_elem.1069" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1075" = type { %"class.WTF::HashTable.1076" }
%"class.WTF::HashTable.1076" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1081" = type { %"class.WTF::Vector.1084" }
%"class.WTF::Vector.1084" = type { %"class.WTF::VectorBuffer.1085" }
%"class.WTF::VectorBuffer.1085" = type { %"class.WTF::VectorBufferBase.1086" }
%"class.WTF::VectorBufferBase.1086" = type { %"class.blink::Member.1087"*, i32, i32 }
%"class.blink::Member.1087" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1093", i32, i32 }
%"class.blink::HeapHashMap.1093" = type { %"class.WTF::HashMap.1096" }
%"class.WTF::HashMap.1096" = type { %"class.WTF::HashTable.1097" }
%"class.WTF::HashTable.1097" = type <{ %"struct.WTF::KeyValuePair.1099"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1099" = type opaque
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.1103", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.1103" = type { %"class.std::__1::unique_ptr.1104" }
%"class.std::__1::unique_ptr.1104" = type { %"class.std::__1::__compressed_pair.1105" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1107" }
%"class.WTF::Vector.1107" = type { %"class.WTF::VectorBuffer.1108" }
%"class.WTF::VectorBuffer.1108" = type { %"class.WTF::VectorBufferBase.1109" }
%"class.WTF::VectorBufferBase.1109" = type { %"class.mojo::StructPtr.1110"*, i32, i32 }
%"class.mojo::StructPtr.1110" = type { %"class.std::__1::unique_ptr.1111" }
%"class.std::__1::unique_ptr.1111" = type { %"class.std::__1::__compressed_pair.1112" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.1113" }
%"struct.std::__1::__compressed_pair_elem.1113" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1114", %"class.WTF::HashMap.1121", %"class.WTF::HashMap.1126", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1131", i8, %"class.WTF::Vector.1132", i32, %"class.mojo::StructPtr.1137", %"class.WTF::Vector.1132" }
%"class.mojo::StructPtr.1114" = type { %"class.std::__1::unique_ptr.1115" }
%"class.std::__1::unique_ptr.1115" = type { %"class.std::__1::__compressed_pair.1116" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.1117" }
%"struct.std::__1::__compressed_pair_elem.1117" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1121" = type { %"class.WTF::HashTable.1122" }
%"class.WTF::HashTable.1122" = type <{ %"struct.WTF::KeyValuePair.1125"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1125" = type opaque
%"class.WTF::HashMap.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"struct.WTF::KeyValuePair.1130"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1130" = type opaque
%"class.mojo::InlinedStructPtr.1131" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1137" = type { %"class.std::__1::unique_ptr.1138" }
%"class.std::__1::unique_ptr.1138" = type { %"class.std::__1::__compressed_pair.1139" }
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.1140" }
%"struct.std::__1::__compressed_pair_elem.1140" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.1132", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1152" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.656", i32 }>
%"class.std::__1::unique_ptr.1152" = type { %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1161" = type { %"class.blink::MemberBase.1162" }
%"class.blink::MemberBase.1162" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1163" = type { %"class.blink::MemberBase.1164" }
%"class.blink::MemberBase.1164" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Supplementable.1165" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1166" }
%"class.blink::HeapHashMap.1166" = type { %"class.WTF::HashMap.1169" }
%"class.WTF::HashMap.1169" = type { %"class.WTF::HashTable.1170" }
%"class.WTF::HashTable.1170" = type <{ %"struct.WTF::KeyValuePair.1172"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1172" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.1173" = type { i8 }
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.1182" = type { %"class.blink::MemberBase.1183" }
%"class.blink::MemberBase.1183" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.1184" = type { %"class.blink::MemberBase.1185" }
%"class.blink::MemberBase.1185" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.1186" = type { %"class.blink::MemberBase.1187" }
%"class.blink::MemberBase.1187" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.1188" = type { %"class.blink::MemberBase.1189" }
%"class.blink::MemberBase.1189" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.1190" = type { %"class.blink::MemberBase.1191" }
%"class.blink::MemberBase.1191" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.1132" = type { %"class.WTF::VectorBuffer.1133" }
%"class.WTF::VectorBuffer.1133" = type { %"class.WTF::VectorBufferBase.1134" }
%"class.WTF::VectorBufferBase.1134" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.1196 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1197", [4 x i8], %"class.std::__1::unique_ptr.1199", i64, %"class.WTF::Vector.1203", %"class.WTF::Vector.1207", %"class.WTF::Vector.1213", %"class.WTF::Vector.1231", %class.scoped_refptr.1031, %"class.WTF::HashMap.1237", %"class.WTF::Vector.1242", %"class.WTF::Vector.1203", %"class.WTF::Vector.1248", %"class.WTF::HashMap.1253", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1197" = type { %"class.base::RefCountedThreadSafe.1198" }
%"class.base::RefCountedThreadSafe.1198" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1199" = type { %"class.std::__1::__compressed_pair.1200" }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.1201" }
%"struct.std::__1::__compressed_pair_elem.1201" = type { i8* }
%"class.WTF::Vector.1207" = type { %"class.WTF::VectorBuffer.1208" }
%"class.WTF::VectorBuffer.1208" = type { %"class.WTF::VectorBufferBase.1209", [8 x i8] }
%"class.WTF::VectorBufferBase.1209" = type { %class.scoped_refptr.1210*, i32, i32 }
%class.scoped_refptr.1210 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1213" = type { %"class.WTF::VectorBuffer.1214" }
%"class.WTF::VectorBuffer.1214" = type { %"class.WTF::VectorBufferBase.1215" }
%"class.WTF::VectorBufferBase.1215" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1217", %"class.std::__1::unique_ptr.1223" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1216 }
%class.scoped_refptr.1216 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1217" = type { %"class.std::__1::__compressed_pair.1218" }
%"class.std::__1::__compressed_pair.1218" = type { %"struct.std::__1::__compressed_pair_elem.1219" }
%"struct.std::__1::__compressed_pair_elem.1219" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1223" = type { %"class.std::__1::__compressed_pair.1224" }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.1225" }
%"struct.std::__1::__compressed_pair_elem.1225" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1231" = type { %"class.WTF::VectorBuffer.1232" }
%"class.WTF::VectorBuffer.1232" = type { %"class.WTF::VectorBufferBase.1233" }
%"class.WTF::VectorBufferBase.1233" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1234", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1234" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1237" = type { %"class.WTF::HashTable.1238" }
%"class.WTF::HashTable.1238" = type <{ %"struct.WTF::KeyValuePair.1241"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1241" = type opaque
%"class.WTF::Vector.1242" = type { %"class.WTF::VectorBuffer.1243" }
%"class.WTF::VectorBuffer.1243" = type { %"class.WTF::VectorBufferBase.1244" }
%"class.WTF::VectorBufferBase.1244" = type { %"class.mojo::ScopedHandleBase.1245"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1245" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.1203" = type { %"class.WTF::VectorBuffer.1204" }
%"class.WTF::VectorBuffer.1204" = type { %"class.WTF::VectorBufferBase.366", [16 x i8] }
%"class.WTF::VectorBufferBase.366" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1248" = type { %"class.WTF::VectorBuffer.1249" }
%"class.WTF::VectorBuffer.1249" = type { %"class.WTF::VectorBufferBase.1250" }
%"class.WTF::VectorBufferBase.1250" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.1253" = type { %"class.WTF::HashTable.1254" }
%"class.WTF::HashTable.1254" = type <{ %"struct.WTF::KeyValuePair.1257"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1257" = type { i8**, %"class.std::__1::unique_ptr.1986" }
%"class.std::__1::unique_ptr.1986" = type { %"class.std::__1::__compressed_pair.1987" }
%"class.std::__1::__compressed_pair.1987" = type { %"struct.std::__1::__compressed_pair_elem.1988" }
%"struct.std::__1::__compressed_pair_elem.1988" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.1258" = type { %"class.WTF::HashSet.1261" }
%"class.WTF::HashSet.1261" = type { %"class.WTF::HashTable.1262" }
%"class.WTF::HashTable.1262" = type <{ %"class.blink::WeakMember.1264"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1264" = type opaque
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1272", %"class.blink::Member.1272", %"class.blink::Member.1274", %"class.blink::Member.1276", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1267" }
%"class.absl::optional.1267" = type { %"class.absl::optional_internal::optional_data.1268" }
%"class.absl::optional_internal::optional_data.1268" = type { %"class.absl::optional_internal::optional_data_base.1269" }
%"class.absl::optional_internal::optional_data_base.1269" = type { %"class.absl::optional_internal::optional_data_dtor_base.1270" }
%"class.absl::optional_internal::optional_data_dtor_base.1270" = type { i8, %union.anon.1271 }
%union.anon.1271 = type { i64 }
%"class.blink::Member.1272" = type { %"class.blink::MemberBase.1273" }
%"class.blink::MemberBase.1273" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1274" = type { %"class.blink::MemberBase.1275" }
%"class.blink::MemberBase.1275" = type { %"class.blink::Event"* }
%"class.blink::Member.1276" = type { %"class.blink::MemberBase.1277" }
%"class.blink::MemberBase.1277" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1278" = type { %"class.WTF::HashMap.1281" }
%"class.WTF::HashMap.1281" = type { %"class.WTF::HashTable.1282" }
%"class.WTF::HashTable.1282" = type <{ %"struct.WTF::KeyValuePair.1284"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1284" = type opaque
%"class.std::__1::unique_ptr.1285" = type { %"class.std::__1::__compressed_pair.1286" }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.1287" }
%"struct.std::__1::__compressed_pair_elem.1287" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1291" = type { %"class.blink::MemberBase.1292" }
%"class.blink::MemberBase.1292" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.711", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1304", %"class.blink::Member.1306", i8, i32 }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1295", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1297", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1295" = type { %"class.blink::MemberBase.1296" }
%"class.blink::MemberBase.1296" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1297" = type { %"class.WTF::HashMap.1300" }
%"class.WTF::HashMap.1300" = type { %"class.WTF::HashTable.1301" }
%"class.WTF::HashTable.1301" = type <{ %"struct.WTF::KeyValuePair.1303"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1303" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.793", i32, i32 }
%"class.blink::Member.1306" = type { %"class.blink::MemberBase.1307" }
%"class.blink::MemberBase.1307" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1308" = type { %"class.blink::MemberBase.1309" }
%"class.blink::MemberBase.1309" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.1013", %"class.blink::Member.1572", %"class.blink::Member.1574" }
%"class.blink::Member.1572" = type { %"class.blink::MemberBase.1573" }
%"class.blink::MemberBase.1573" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1574" = type { %"class.blink::MemberBase.1575" }
%"class.blink::MemberBase.1575" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1310" = type { %"class.blink::MemberBase.1311" }
%"class.blink::MemberBase.1311" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.1013", %"class.blink::HeapMojoRemote.1567" }
%"class.blink::HeapMojoRemote.1567" = type { %"class.blink::Member.1568" }
%"class.blink::Member.1568" = type { %"class.blink::MemberBase.1569" }
%"class.blink::MemberBase.1569" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1312" = type { %"class.blink::MemberBase.1313" }
%"class.blink::MemberBase.1313" = type { %"class.blink::HeapHashMap.1314"* }
%"class.blink::HeapHashMap.1314" = type opaque
%"class.WTF::HashSet.1320" = type { %"class.WTF::HashTable.1321" }
%"class.WTF::HashTable.1321" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1324" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1327" }
%"class.WTF::VectorBuffer.1327" = type { %"class.WTF::VectorBufferBase.1328" }
%"class.WTF::VectorBufferBase.1328" = type { i64*, i32, i32 }
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1015", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1079", i32, i8, [3 x i8], %"class.blink::HeapVector.1081", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1089", %"class.blink::Member.1091", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1100", %"class.blink::Member.1161", %"class.blink::Member.1163", i8, [7 x i8] }>
%"class.blink::Member.1329" = type { %"class.blink::MemberBase.1330" }
%"class.blink::MemberBase.1330" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1331" = type { %"class.blink::MemberBase.1332" }
%"class.blink::MemberBase.1332" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1333" = type { %"class.blink::MemberBase.1334" }
%"class.blink::MemberBase.1334" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1335" = type { %"class.blink::MemberBase.1336" }
%"class.blink::MemberBase.1336" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1337" = type { %"class.std::__1::__compressed_pair.1338" }
%"class.std::__1::__compressed_pair.1338" = type { %"struct.std::__1::__compressed_pair_elem.1339" }
%"struct.std::__1::__compressed_pair_elem.1339" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1343" = type { %"class.blink::MemberBase.1344" }
%"class.blink::MemberBase.1344" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1345" = type { %"class.blink::MemberBase.1346" }
%"class.blink::MemberBase.1346" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.965", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.967, %"class.WTF::Vector.968", %"class.WTF::Vector.968", %"class.blink::Member.793", %"class.blink::Member.973", %"class.blink::HeapHashSet.977", %"class.blink::Member.922", %"class.WTF::HashSet.984", %"class.WTF::TextPosition", %"class.blink::Member.988", %"class.blink::HeapVector.990", %"class.blink::Member.997" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.967 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.968" = type { %"class.WTF::VectorBuffer.969" }
%"class.WTF::VectorBuffer.969" = type { %"class.WTF::VectorBufferBase.970" }
%"class.WTF::VectorBufferBase.970" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.975" }
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.977" = type { %"class.WTF::HashSet.980" }
%"class.WTF::HashSet.980" = type { %"class.WTF::HashTable.981" }
%"class.WTF::HashTable.981" = type <{ %"class.blink::WeakMember.983"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.983" = type { %"class.blink::MemberBase.796" }
%"class.WTF::HashSet.984" = type { %"class.WTF::HashTable.985" }
%"class.WTF::HashTable.985" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.988" = type { %"class.blink::MemberBase.989" }
%"class.blink::MemberBase.989" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.990" = type { %"class.WTF::Vector.993" }
%"class.WTF::Vector.993" = type { %"class.WTF::VectorBuffer.994" }
%"class.WTF::VectorBuffer.994" = type { %"class.WTF::VectorBufferBase.995" }
%"class.WTF::VectorBufferBase.995" = type { %"class.blink::Member.973"*, i32, i32 }
%"class.blink::Member.997" = type { %"class.blink::MemberBase.998" }
%"class.blink::MemberBase.998" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1347" = type { %"class.WTF::VectorBuffer.1348" }
%"class.WTF::VectorBuffer.1348" = type { %"class.WTF::VectorBufferBase.1349" }
%"class.WTF::VectorBufferBase.1349" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1304" = type { %"class.blink::MemberBase.1305" }
%"class.blink::MemberBase.1305" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.922", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.793", %"class.blink::Member.793", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1354" }
%"class.blink::HeapHashMap.1354" = type { %"class.WTF::HashMap.1357" }
%"class.WTF::HashMap.1357" = type { %"class.WTF::HashTable.1358" }
%"class.WTF::HashTable.1358" = type <{ %"struct.WTF::KeyValuePair.1360"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1360" = type opaque
%"class.blink::Member.1361" = type { %"class.blink::MemberBase.1362" }
%"class.blink::MemberBase.1362" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1363" = type { %"class.WTF::HashSet.1366" }
%"class.WTF::HashSet.1366" = type { %"class.WTF::HashTable.1367" }
%"class.WTF::HashTable.1367" = type <{ %"class.blink::WeakMember.1369"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1369" = type opaque
%"class.blink::HeapHashSet.1370" = type { %"class.WTF::HashSet.1373" }
%"class.WTF::HashSet.1373" = type { %"class.WTF::HashTable.1374" }
%"class.WTF::HashTable.1374" = type <{ %"class.blink::WeakMember.1376"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1376" = type opaque
%"class.blink::Member.1377" = type { %"class.blink::MemberBase.1378" }
%"class.blink::MemberBase.1378" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1379" = type { %"class.blink::MemberBase.1380" }
%"class.blink::MemberBase.1380" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1381" = type { %"class.blink::MemberBase.1382" }
%"class.blink::MemberBase.1382" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.795", %"class.blink::HeapVector.957" }
%"class.blink::Member.1383" = type { %"class.blink::MemberBase.1384" }
%"class.blink::MemberBase.1384" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1387" = type { %"class.WTF::HashMap.1390" }
%"class.WTF::HashMap.1390" = type { %"class.WTF::HashTable.1391" }
%"class.WTF::HashTable.1391" = type <{ %"struct.WTF::KeyValuePair.1393"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1393" = type opaque
%"class.WTF::Vector.1394" = type { %"class.WTF::VectorBuffer.1395" }
%"class.WTF::VectorBuffer.1395" = type { %"class.WTF::VectorBufferBase.1396" }
%"class.WTF::VectorBufferBase.1396" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1401" = type { %"class.blink::MemberBase.1402" }
%"class.blink::MemberBase.1402" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1403" = type { %"class.blink::MemberBase.1404" }
%"class.blink::MemberBase.1404" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1405" = type { %"class.WTF::Vector.1408" }
%"class.WTF::Vector.1408" = type { %"class.WTF::VectorBuffer.1409" }
%"class.WTF::VectorBuffer.1409" = type { %"class.WTF::VectorBufferBase.1410" }
%"class.WTF::VectorBufferBase.1410" = type { %"class.blink::Member.1411"*, i32, i32 }
%"class.blink::Member.1411" = type opaque
%"class.std::__1::unique_ptr.1413" = type { %"class.std::__1::__compressed_pair.1414" }
%"class.std::__1::__compressed_pair.1414" = type { %"struct.std::__1::__compressed_pair_elem.1415" }
%"struct.std::__1::__compressed_pair_elem.1415" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1419" = type { %"class.WTF::HashSet.1422" }
%"class.WTF::HashSet.1422" = type { %"class.WTF::HashTable.1423" }
%"class.WTF::HashTable.1423" = type <{ %"class.blink::WeakMember.1425"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1425" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1426", i32, [4 x i8] }>
%"class.WTF::Vector.1426" = type { %"class.WTF::VectorBuffer.1427" }
%"class.WTF::VectorBuffer.1427" = type { %"class.WTF::VectorBufferBase.1428" }
%"class.WTF::VectorBufferBase.1428" = type { %"struct.std::__1::pair.1429"*, i32, i32 }
%"struct.std::__1::pair.1429" = type opaque
%"class.blink::Member.1432" = type { %"class.blink::MemberBase.1433" }
%"class.blink::MemberBase.1433" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1434" = type { %"class.WTF::VectorBuffer.1435" }
%"class.WTF::VectorBuffer.1435" = type { %"class.WTF::VectorBufferBase.1436" }
%"class.WTF::VectorBufferBase.1436" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1439" = type { %"class.std::__1::__compressed_pair.1440" }
%"class.std::__1::__compressed_pair.1440" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"struct.std::__1::__compressed_pair_elem.1441" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.939" = type { %"class.WTF::Vector.942" }
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"class.blink::Member.791"*, i32, i32 }
%"class.blink::HeapVector.1445" = type { %"class.WTF::Vector.1448" }
%"class.WTF::Vector.1448" = type { %"class.WTF::VectorBuffer.1449" }
%"class.WTF::VectorBuffer.1449" = type { %"class.WTF::VectorBufferBase.1450" }
%"class.WTF::VectorBufferBase.1450" = type { %"class.blink::Member.1451"*, i32, i32 }
%"class.blink::Member.1451" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.922" }
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1459" = type { %"class.blink::MemberBase.1460" }
%"class.blink::MemberBase.1460" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1461" = type { %"class.blink::MemberBase.1462" }
%"class.blink::MemberBase.1462" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1467"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1467" = type opaque
%"class.blink::Member.1468" = type { %"class.blink::MemberBase.1469" }
%"class.blink::MemberBase.1469" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1353", { i64, i64 } }
%"class.blink::WeakMember.1353" = type { %"class.blink::MemberBase.923" }
%"class.blink::HeapHashSet.1476" = type { %"class.WTF::HashSet.1479" }
%"class.WTF::HashSet.1479" = type { %"class.WTF::HashTable.1480" }
%"class.WTF::HashTable.1480" = type <{ %"class.blink::Member.1482"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1482" = type opaque
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1489" = type { %"class.blink::MemberBase.1490" }
%"class.blink::MemberBase.1490" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1491" = type { %"class.blink::MemberBase.1492" }
%"class.blink::MemberBase.1492" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1493" = type { %"class.std::__1::__compressed_pair.1494" }
%"class.std::__1::__compressed_pair.1494" = type { %"struct.std::__1::__compressed_pair_elem.1495" }
%"struct.std::__1::__compressed_pair_elem.1495" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1499" = type { %"class.std::__1::__compressed_pair.1500" }
%"class.std::__1::__compressed_pair.1500" = type { %"struct.std::__1::__compressed_pair_elem.1501" }
%"struct.std::__1::__compressed_pair_elem.1501" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1505" = type { %"class.blink::MemberBase.1506" }
%"class.blink::MemberBase.1506" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1507" = type { %"class.blink::MemberBase.1508" }
%"class.blink::MemberBase.1508" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1509" = type { %"class.blink::MemberBase.1510" }
%"class.blink::MemberBase.1510" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1315" = type { %"class.WTF::VectorBuffer.1316" }
%"class.WTF::VectorBuffer.1316" = type { %"class.WTF::VectorBufferBase.1317" }
%"class.WTF::VectorBufferBase.1317" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1513" = type { %"class.WTF::HashMap.1516" }
%"class.WTF::HashMap.1516" = type { %"class.WTF::HashTable.1517" }
%"class.WTF::HashTable.1517" = type <{ %"struct.WTF::KeyValuePair.1519"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1519" = type opaque
%"class.blink::Member.1520" = type { %"class.blink::MemberBase.1521" }
%"class.blink::MemberBase.1521" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1522" = type { %"class.std::__1::__compressed_pair.1523" }
%"class.std::__1::__compressed_pair.1523" = type { %"struct.std::__1::__compressed_pair_elem.1524" }
%"struct.std::__1::__compressed_pair_elem.1524" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1528" = type { %"class.blink::MemberBase.1529" }
%"class.blink::MemberBase.1529" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1530" = type { %"class.blink::MemberBase.1531" }
%"class.blink::MemberBase.1531" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1532" = type { %"class.WTF::HashMap.1535" }
%"class.WTF::HashMap.1535" = type { %"class.WTF::HashTable.1536" }
%"class.WTF::HashTable.1536" = type <{ %"struct.WTF::KeyValuePair.1538"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1538" = type opaque
%"class.blink::HeapObserverSet.1539" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1540" }
%"class.blink::HeapHashSet.1540" = type { %"class.WTF::HashSet.1543" }
%"class.WTF::HashSet.1543" = type { %"class.WTF::HashTable.1544" }
%"class.WTF::HashTable.1544" = type <{ %"class.blink::WeakMember.1546"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1546" = type opaque
%"class.blink::Member.1547" = type { %"class.blink::MemberBase.1548" }
%"class.blink::MemberBase.1548" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1549" = type { %"class.blink::MemberBase.1550" }
%"class.blink::MemberBase.1550" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.922", %"class.blink::HeapHashSet.1556", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1563", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1556" = type { %"class.WTF::HashSet.1559" }
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ %"class.blink::Member.1562"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1562" = type opaque
%"class.blink::HeapTaskRunnerTimer.1563" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1564", { i64, i64 } }
%"class.blink::WeakMember.1564" = type { %"class.blink::MemberBase.1550" }
%"class.blink::WeakMember.1551" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::Node"* }
%"class.blink::Member.1552" = type { %"class.blink::MemberBase.1553" }
%"class.blink::MemberBase.1553" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.924" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.928" }
%"class.blink::HeapHashMap.928" = type { %"class.WTF::HashMap.931" }
%"class.WTF::HashMap.931" = type { %"class.WTF::HashTable.932" }
%"class.WTF::HashTable.932" = type <{ %"struct.WTF::KeyValuePair.934"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.934" = type { %"class.WTF::AtomicString", %"class.blink::Member.935" }
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.791", i32, %"class.blink::HeapVector.939" }
%"class.blink::Member.946" = type { %"class.blink::MemberBase.947" }
%"class.blink::MemberBase.947" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.948" = type { %"class.blink::MemberBase.949" }
%"class.blink::MemberBase.949" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.950" = type { %"class.blink::MemberBase.951" }
%"class.blink::MemberBase.951" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.952" }
%"class.blink::Member.952" = type { %"class.blink::MemberBase.953" }
%"class.blink::MemberBase.953" = type { %"class.blink::HeapHashMap.954"* }
%"class.blink::HeapHashMap.954" = type opaque
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.957" = type { %"class.WTF::Vector.960" }
%"class.WTF::Vector.960" = type { %"class.WTF::VectorBuffer.961" }
%"class.WTF::VectorBuffer.961" = type { %"class.WTF::VectorBufferBase.962" }
%"class.WTF::VectorBufferBase.962" = type { %"class.blink::Member.963"*, i32, i32 }
%"class.blink::Member.797" = type { %"class.blink::MemberBase.798" }
%"class.blink::MemberBase.798" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.801 }
%class.scoped_refptr.801 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.802", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.802" = type { %"class.base::RefCounted.803" }
%"class.base::RefCounted.803" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.808", %"class.blink::Member.810", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.808" = type { %"class.WTF::SingleThreadedBitField.809" }
%"class.WTF::SingleThreadedBitField.809" = type { i32 }
%"class.blink::Member.810" = type { %"class.blink::MemberBase.811" }
%"class.blink::MemberBase.811" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.812 }
%class.scoped_refptr.812 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.813", %"class.WTF::AtomicString", %"class.WTF::Vector.815" }
%"class.WTF::RefCounted.813" = type { %"class.base::RefCounted.814" }
%"class.base::RefCounted.814" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.815" = type { %"class.WTF::VectorBuffer.816" }
%"class.WTF::VectorBuffer.816" = type { %"class.WTF::VectorBufferBase.817", [32 x i8] }
%"class.WTF::VectorBufferBase.817" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.820" = type { %"class.blink::MemberBase.821" }
%"class.blink::MemberBase.821" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.824" = type { %"class.blink::MemberBase.825" }
%"class.blink::MemberBase.825" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.826" = type { %"class.blink::MemberBase.827" }
%"class.blink::MemberBase.827" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.830 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.831" = type { %"class.blink::MemberBase.832" }
%"class.blink::MemberBase.832" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.833" = type { %"class.blink::MemberBase.834" }
%"class.blink::MemberBase.834" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.837" = type { %"class.blink::MemberBase.838" }
%"class.blink::MemberBase.838" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.839" = type { %"class.blink::MemberBase.840" }
%"class.blink::MemberBase.840" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.841" = type { %"class.blink::MemberBase.842" }
%"class.blink::MemberBase.842" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.843" = type { %"class.blink::MemberBase.844" }
%"class.blink::MemberBase.844" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.845" }
%"class.blink::Member.845" = type { %"class.blink::MemberBase.846" }
%"class.blink::MemberBase.846" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2007" }
%"class.mojo::Remote.2007" = type { %"class.mojo::internal::InterfacePtrState.2008" }
%"class.mojo::internal::InterfacePtrState.2008" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2009" }
%"class.std::__1::unique_ptr.2009" = type { %"class.std::__1::__compressed_pair.2010" }
%"class.std::__1::__compressed_pair.2010" = type { %"struct.std::__1::__compressed_pair_elem.2011" }
%"struct.std::__1::__compressed_pair_elem.2011" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.847" = type { %"class.std::__1::__compressed_pair.848" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.850, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.850 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.851", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.851" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.852" }
%"class.std::__1::vector.852" = type { %"class.std::__1::__vector_base.853" }
%"class.std::__1::__vector_base.853" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.854" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.859, i8, [7 x i8] }>
%class.scoped_refptr.859 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.860", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.860" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.861" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.868" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.869" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.881" }
%"class.blink::Member.881" = type { %"class.blink::MemberBase.882" }
%"class.blink::MemberBase.882" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2017" }
%"class.mojo::AssociatedRemote.2017" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2018" }
%"class.mojo::internal::AssociatedInterfacePtrState.2018" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2019" }
%"class.std::__1::unique_ptr.2019" = type { %"class.std::__1::__compressed_pair.2020" }
%"class.std::__1::__compressed_pair.2020" = type { %"struct.std::__1::__compressed_pair_elem.2021" }
%"struct.std::__1::__compressed_pair_elem.2021" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.883" = type { %"class.blink::Member.884" }
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2027" }
%"class.mojo::AssociatedRemote.2027" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2028" }
%"class.mojo::internal::AssociatedInterfacePtrState.2028" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2029" }
%"class.std::__1::unique_ptr.2029" = type { %"class.std::__1::__compressed_pair.2030" }
%"class.std::__1::__compressed_pair.2030" = type { %"struct.std::__1::__compressed_pair_elem.2031" }
%"struct.std::__1::__compressed_pair_elem.2031" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.886" }
%"class.blink::Member.886" = type { %"class.blink::MemberBase.887" }
%"class.blink::MemberBase.887" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2037", %"class.blink::Member.711", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2037" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2038" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.656" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2038" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.888" = type { %"class.blink::Member.889" }
%"class.blink::Member.889" = type { %"class.blink::MemberBase.890" }
%"class.blink::MemberBase.890" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2041", %"class.blink::Member.711", %"class.mojo::AssociatedReceiver.2042" }
%"class.blink::ThreadState::PrefinalizerRegistration.2041" = type { i8 }
%"class.mojo::AssociatedReceiver.2042" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2043" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2043" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.891" }
%"class.blink::Member.891" = type { %"class.blink::MemberBase.892" }
%"class.blink::MemberBase.892" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2046", %"class.blink::Member.711", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2046" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.541, %"class.std::__1::unique_ptr.656", %"class.base::WeakPtrFactory.2047" }
%"class.base::WeakPtrFactory.2047" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.893" = type { %"class.blink::Member.894" }
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2050", %"class.blink::Member.711", %"class.mojo::AssociatedReceiver.2051" }
%"class.blink::ThreadState::PrefinalizerRegistration.2050" = type { i8 }
%"class.mojo::AssociatedReceiver.2051" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2052" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2052" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.896" = type { %"class.blink::MemberBase.897" }
%"class.blink::MemberBase.897" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.898" = type { %"class.blink::MemberBase.899" }
%"class.blink::MemberBase.899" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.902" = type { %"class.blink::MemberBase.903" }
%"class.blink::MemberBase.903" = type { %"class.blink::HeapHashMap.904"* }
%"class.blink::HeapHashMap.904" = type opaque
%"class.mojo::StructPtr.905" = type { %"class.std::__1::unique_ptr.906" }
%"class.std::__1::unique_ptr.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.909" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.909" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.915" = type { %"class.absl::optional_internal::optional_data.916" }
%"class.absl::optional_internal::optional_data.916" = type { %"class.absl::optional_internal::optional_data_base.917" }
%"class.absl::optional_internal::optional_data_base.917" = type { %"class.absl::optional_internal::optional_data_dtor_base.918" }
%"class.absl::optional_internal::optional_data_dtor_base.918" = type { i8, %union.anon.919 }
%union.anon.919 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.425", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.713" }
%"class.std::__1::vector.713" = type { %"class.std::__1::__vector_base.714" }
%"class.std::__1::__vector_base.714" = type { %"struct.std::__1::pair.715"*, %"struct.std::__1::pair.715"*, %"class.std::__1::__compressed_pair.716" }
%"struct.std::__1::pair.715" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"struct.std::__1::pair.715"* }
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.723" = type { %"class.absl::optional_internal::optional_data.724" }
%"class.absl::optional_internal::optional_data.724" = type { %"class.absl::optional_internal::optional_data_base.725" }
%"class.absl::optional_internal::optional_data_base.725" = type { %"class.absl::optional_internal::optional_data_dtor_base.726" }
%"class.absl::optional_internal::optional_data_dtor_base.726" = type { i8, %union.anon.727 }
%union.anon.727 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.728" = type { %"class.absl::optional_internal::optional_data.729" }
%"class.absl::optional_internal::optional_data.729" = type { %"class.absl::optional_internal::optional_data_base.730" }
%"class.absl::optional_internal::optional_data_base.730" = type { %"class.absl::optional_internal::optional_data_dtor_base.731" }
%"class.absl::optional_internal::optional_data_dtor_base.731" = type { i8, %union.anon.732 }
%union.anon.732 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.733" }
%"class.blink::HeapHashSet.733" = type { %"class.WTF::HashSet.736" }
%"class.WTF::HashSet.736" = type { %"class.WTF::HashTable.737" }
%"class.WTF::HashTable.737" = type <{ %"class.blink::WeakMember.739"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.739" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.17", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.445" = type { i32, [4 x i8], %"class.blink::HeapHashSet.446" }
%"class.blink::HeapHashSet.446" = type { %"class.WTF::HashSet.449" }
%"class.WTF::HashSet.449" = type { %"class.WTF::HashTable.450" }
%"class.WTF::HashTable.450" = type <{ %"class.blink::WeakMember.452"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.452" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.475" }
%"class.WTF::Deque.475" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.478" }
%"class.WTF::VectorBuffer.478" = type { %"class.WTF::VectorBufferBase.479" }
%"class.WTF::VectorBufferBase.479" = type { %"class.std::__1::unique_ptr.480"*, i32, i32 }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.486", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.486" = type { %"class.std::__1::__bitset.487" }
%"class.std::__1::__bitset.487" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.488", i64, %"class.absl::optional.493", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.488" = type { %"class.absl::optional_internal::optional_data.489" }
%"class.absl::optional_internal::optional_data.489" = type { %"class.absl::optional_internal::optional_data_base.490" }
%"class.absl::optional_internal::optional_data_base.490" = type { %"class.absl::optional_internal::optional_data_dtor_base.491" }
%"class.absl::optional_internal::optional_data_dtor_base.491" = type { i8, %union.anon.492 }
%union.anon.492 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.498" }
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.504" = type { %"class.WTF::HashSet.507" }
%"class.WTF::HashSet.507" = type { %"class.WTF::HashTable.508" }
%"class.WTF::HashTable.508" = type <{ %"class.blink::WeakMember.510"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.510" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::InspectorWebAudioAgent"* }
%"class.blink::InspectorWebAudioAgent" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.35" = type { i8 }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::AudioDestinationNode"* }
%"class.blink::AudioDestinationNode" = type { %"class.blink::AudioNode" }
%"class.blink::AudioNode" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.24", %class.scoped_refptr.262, %class.scoped_refptr.276, %"class.blink::HeapVector.327", %"class.blink::HeapVector.335" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::BaseAudioContext"* }
%class.scoped_refptr.276 = type { %"class.blink::AudioHandler"* }
%"class.blink::AudioHandler" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.262, %"class.WTF::Vector.345", %"class.WTF::Vector.351", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.327" = type { %"class.WTF::Vector.330" }
%"class.WTF::Vector.330" = type { %"class.WTF::VectorBuffer.331" }
%"class.WTF::VectorBuffer.331" = type { %"class.WTF::VectorBufferBase.332" }
%"class.WTF::VectorBufferBase.332" = type { %"class.blink::Member.333"*, i32, i32 }
%"class.blink::Member.333" = type opaque
%"class.blink::HeapVector.335" = type { %"class.WTF::Vector.338" }
%"class.WTF::Vector.338" = type { %"class.WTF::VectorBuffer.339" }
%"class.WTF::VectorBuffer.339" = type { %"class.WTF::VectorBufferBase.340" }
%"class.WTF::VectorBufferBase.340" = type { %"class.blink::Member.341"*, i32, i32 }
%"class.blink::Member.341" = type opaque
%"class.blink::HeapVector.38" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.48", i32, %"class.blink::Member.49", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.250", %"class.blink::SelfKeepAlive.254" }
%"class.blink::ThreadState::PrefinalizerRegistration.48" = type { i8 }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.53, %"class.blink::Member.245", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.53 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.247" }
%"class.blink::Persistent.247" = type { %"class.blink::PersistentBase.248" }
%"class.blink::PersistentBase.248" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.49", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.250", %class.scoped_refptr.253 }
%"class.blink::TraceWrapperV8Reference.250" = type { %"class.v8::TracedReference.251" }
%"class.v8::TracedReference.251" = type { %"class.v8::BasicTracedReference.252" }
%"class.v8::BasicTracedReference.252" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.254" = type { %"class.blink::Persistent.255" }
%"class.blink::Persistent.255" = type { %"class.blink::PersistentBase.256" }
%"class.blink::PersistentBase.256" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Member.260" = type { %"class.blink::MemberBase.261" }
%"class.blink::MemberBase.261" = type { %"class.blink::AudioListener"* }
%"class.blink::AudioListener" = type opaque
%"class.blink::AsyncAudioDecoder" = type { i8 }
%"class.blink::HeapHashSet.316" = type { %"class.WTF::HashSet.319" }
%"class.WTF::HashSet.319" = type { %"class.WTF::HashTable.320" }
%"class.WTF::HashTable.320" = type <{ %"class.blink::Member.44"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::PeriodicWave"* }
%"class.blink::PeriodicWave" = type opaque
%class.scoped_refptr.324 = type { %"class.blink::AudioDestinationHandler"* }
%"class.blink::AudioDestinationHandler" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"struct.std::__1::atomic.99", i8, [7 x i8] }>
%"class.blink::Member.325" = type { %"class.blink::MemberBase.326" }
%"class.blink::MemberBase.326" = type { %"class.blink::AudioWorklet"* }
%"class.blink::AudioWorklet" = type opaque
%"class.blink::WorkerThread" = type opaque
%class.scoped_refptr.262 = type { %"class.blink::DeferredTaskHandler"* }
%"class.blink::DeferredTaskHandler" = type <{ %"class.WTF::ThreadSafeRefCounted.263", [4 x i8], %"class.base::SupportsWeakPtr", %"class.WTF::HashSet.272", %"class.WTF::Vector.277", i8, [3 x i8], i32, %"class.WTF::HashSet.282", %"class.WTF::HashSet.282", %"class.WTF::HashSet.286", %"class.WTF::HashSet.290", %"class.WTF::Vector.277", %"class.WTF::Vector.277", %"class.WTF::Vector.277", %"class.WTF::Vector.277", i8, [7 x i8], %"class.WTF::HashSet.272", %"class.WTF::Vector.277", %class.scoped_refptr.258, %"class.WTF::RecursiveMutex", %"class.WTF::Mutex", %"struct.std::__1::atomic", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.263" = type { %"class.base::RefCountedThreadSafe.264" }
%"class.base::RefCountedThreadSafe.264" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.WTF::HashSet.282" = type { %"class.WTF::HashTable.283" }
%"class.WTF::HashTable.283" = type <{ %"class.blink::AudioHandler"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.286" = type { %"class.WTF::HashTable.287" }
%"class.WTF::HashTable.287" = type <{ %"class.blink::AudioSummingJunction"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioSummingJunction" = type <{ i32 (...)**, %class.scoped_refptr.262, %"class.WTF::HashSet.290", %"class.WTF::Vector.376", i8, [7 x i8] }>
%"class.WTF::Vector.376" = type { %"class.WTF::VectorBuffer.377" }
%"class.WTF::VectorBuffer.377" = type { %"class.WTF::VectorBufferBase.378" }
%"class.WTF::VectorBufferBase.378" = type { %"class.blink::AudioNodeOutput"**, i32, i32 }
%"class.blink::AudioNodeOutput" = type { %"class.blink::AudioHandler"*, i32, i32, %class.scoped_refptr.294, %class.scoped_refptr.294, i8, [7 x i8], %"class.WTF::HashSet.308", i8, i8, i32, i32, [4 x i8], %"class.WTF::HashSet.312" }
%"class.WTF::HashSet.308" = type { %"class.WTF::HashTable.309" }
%"class.WTF::HashTable.309" = type <{ %"class.blink::AudioNodeInput"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioNodeInput" = type { %"class.blink::AudioSummingJunction.base", %"class.blink::AudioHandler"*, %"class.WTF::HashSet.290", %class.scoped_refptr.294 }
%"class.blink::AudioSummingJunction.base" = type <{ i32 (...)**, %class.scoped_refptr.262, %"class.WTF::HashSet.290", %"class.WTF::Vector.376", i8 }>
%"class.WTF::HashSet.312" = type { %"class.WTF::HashTable.313" }
%"class.WTF::HashTable.313" = type <{ %"class.blink::AudioParamHandler"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioParamHandler" = type { %"class.blink::AudioSummingJunction.base", %"class.WTF::ThreadSafeRefCounted.374", i32, %"class.WTF::String", %"struct.std::__1::atomic.381", float, i32, i32, float, float, %"class.blink::AudioParamTimeline", %class.scoped_refptr.324, %class.scoped_refptr.294 }
%"class.WTF::ThreadSafeRefCounted.374" = type { %"class.base::RefCountedThreadSafe.375" }
%"class.base::RefCountedThreadSafe.375" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.381" = type { %"struct.std::__1::__atomic_base.382" }
%"struct.std::__1::__atomic_base.382" = type { %"struct.std::__1::__cxx_atomic_impl.383" }
%"struct.std::__1::__cxx_atomic_impl.383" = type { %"struct.std::__1::__cxx_atomic_base_impl.384" }
%"struct.std::__1::__cxx_atomic_base_impl.384" = type { float }
%"class.blink::AudioParamTimeline" = type <{ %"class.WTF::Vector.385", %"class.WTF::HashSet.396", %"class.WTF::Mutex", float, [4 x i8] }>
%"class.WTF::Vector.385" = type { %"class.WTF::VectorBuffer.386" }
%"class.WTF::VectorBuffer.386" = type { %"class.WTF::VectorBufferBase.387" }
%"class.WTF::VectorBufferBase.387" = type { %"class.std::__1::unique_ptr.388"*, i32, i32 }
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.blink::AudioParamTimeline::ParamEvent"* }
%"class.blink::AudioParamTimeline::ParamEvent" = type <{ i32, float, double, float, [4 x i8], double, double, double, %"class.WTF::Vector.400", double, float, [4 x i8], %"class.std::__1::unique_ptr.388", i8, [7 x i8] }>
%"class.WTF::Vector.400" = type { %"class.WTF::VectorBuffer.401" }
%"class.WTF::VectorBuffer.401" = type { %"class.WTF::VectorBufferBase.402" }
%"class.WTF::VectorBufferBase.402" = type { float*, i32, i32 }
%"class.WTF::HashSet.396" = type { %"class.WTF::HashTable.397" }
%"class.WTF::HashTable.397" = type <{ %"class.blink::AudioParamTimeline::ParamEvent"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.290" = type { %"class.WTF::HashTable.291" }
%"class.WTF::HashTable.291" = type <{ %"class.blink::AudioNodeOutput"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.272" = type { %"class.WTF::HashTable.273" }
%"class.WTF::HashTable.273" = type <{ %class.scoped_refptr.276*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.277" = type { %"class.WTF::VectorBuffer.278" }
%"class.WTF::VectorBuffer.278" = type { %"class.WTF::VectorBufferBase.279" }
%"class.WTF::VectorBufferBase.279" = type { %class.scoped_refptr.276*, i32, i32 }
%"class.WTF::RecursiveMutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::Vector.345" = type { %"class.WTF::VectorBuffer.346" }
%"class.WTF::VectorBuffer.346" = type { %"class.WTF::VectorBufferBase.347" }
%"class.WTF::VectorBufferBase.347" = type { %"class.std::__1::unique_ptr.348"*, i32, i32 }
%"class.std::__1::unique_ptr.348" = type opaque
%"class.WTF::Vector.351" = type { %"class.WTF::VectorBuffer.352" }
%"class.WTF::VectorBuffer.352" = type { %"class.WTF::VectorBufferBase.353" }
%"class.WTF::VectorBufferBase.353" = type { %"class.std::__1::unique_ptr.354"*, i32, i32 }
%"class.std::__1::unique_ptr.354" = type opaque
%"class.base::SupportsWeakPtr.357" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.WTF::Vector.358" = type { %"class.WTF::VectorBuffer.359" }
%"class.WTF::VectorBuffer.359" = type { %"class.WTF::VectorBufferBase.360" }
%"class.WTF::VectorBufferBase.360" = type { %"class.std::__1::unique_ptr.361"*, i32, i32 }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.blink::SharedAudioBuffer"* }
%"class.blink::SharedAudioBuffer" = type { float, i32, %"class.WTF::Vector.364" }
%"class.WTF::Vector.364" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366" }
%class.scoped_refptr.294 = type { %"class.blink::AudioBus"* }
%"class.blink::AudioBus" = type { %"class.WTF::ThreadSafeRefCounted.295", i32, %"class.WTF::Vector.297", i32, float }
%"class.WTF::ThreadSafeRefCounted.295" = type { %"class.base::RefCountedThreadSafe.296" }
%"class.base::RefCountedThreadSafe.296" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.297" = type { %"class.WTF::VectorBuffer.298" }
%"class.WTF::VectorBuffer.298" = type { %"class.WTF::VectorBufferBase.299", [64 x i8] }
%"class.WTF::VectorBufferBase.299" = type { %"class.blink::AudioChannel"*, i32, i32 }
%"class.blink::AudioChannel" = type <{ i64, float*, %"class.std::__1::unique_ptr.300", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::AudioArray"* }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%class.scoped_refptr.258 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::HeapVector.1864" = type { %"class.WTF::Vector.1867" }
%"class.WTF::Vector.1867" = type { %"class.WTF::VectorBuffer.1868" }
%"class.WTF::VectorBuffer.1868" = type { %"class.WTF::VectorBufferBase.1869" }
%"class.WTF::VectorBufferBase.1869" = type { %"class.blink::Member.1870"*, i32, i32 }
%"class.blink::Member.1870" = type { %"class.blink::MemberBase.1871" }
%"class.blink::MemberBase.1871" = type { %"class.blink::AudioBuffer"* }
%"class.blink::AudioBuffer" = type { %"class.blink::ScriptWrappable", float, i32, %"class.blink::HeapVector.1872" }
%"class.blink::HeapVector.1872" = type { %"class.WTF::Vector.1875" }
%"class.WTF::Vector.1875" = type { %"class.WTF::VectorBuffer.1876" }
%"class.WTF::VectorBuffer.1876" = type { %"class.WTF::VectorBufferBase.1877" }
%"class.WTF::VectorBufferBase.1877" = type { %"class.blink::Member.1878"*, i32, i32 }
%"class.blink::Member.1878" = type { %"class.blink::MemberBase.1879" }
%"class.blink::MemberBase.1879" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.1880" }
%"class.blink::Member.1880" = type { %"class.blink::MemberBase.1881" }
%"class.blink::MemberBase.1881" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ScriptProcessorNode" = type { %"class.blink::AudioNode", %"class.blink::ActiveScriptWrappable.1911", %"class.blink::HeapVector.1864", %"class.blink::HeapVector.1864", %"class.blink::Member.1870", %"class.blink::Member.1870" }
%"class.blink::ActiveScriptWrappable.1911" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.259", [4 x i8] }>
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.1886", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.1898", %"class.WTF::Vector.1899" }
%"class.std::__1::unique_ptr.1886" = type { %"class.std::__1::__compressed_pair.1887" }
%"class.std::__1::__compressed_pair.1887" = type { %"struct.std::__1::__compressed_pair_elem.1888" }
%"struct.std::__1::__compressed_pair_elem.1888" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.1889", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1889" = type { %"class.std::__1::__compressed_pair.1890" }
%"class.std::__1::__compressed_pair.1890" = type { %"struct.std::__1::__compressed_pair_elem.1891" }
%"struct.std::__1::__compressed_pair_elem.1891" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.1898" = type { %"class.blink::MemberBase.712" }
%"class.WTF::Vector.1899" = type { %"class.WTF::VectorBuffer.1900" }
%"class.WTF::VectorBuffer.1900" = type { %"class.WTF::VectorBufferBase.1746" }
%"class.WTF::ConditionalDestructor.372" = type { i8 }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.base::WeakPtr.1904" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2053", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.2053" = type { %"class.std::__1::__vector_base.2054" }
%"class.std::__1::__vector_base.2054" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2060" }
%"class.std::__1::__compressed_pair.2060" = type { %"struct.std::__1::__compressed_pair_elem.2061" }
%"struct.std::__1::__compressed_pair_elem.2061" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2055", i64, i64 }
%"class.std::__1::unique_ptr.2055" = type { %"class.std::__1::__compressed_pair.2056" }
%"class.std::__1::__compressed_pair.2056" = type { %"struct.std::__1::__compressed_pair_elem.1201" }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.2065" }
%"class.std::__1::list.2065" = type { %"class.std::__1::__list_imp.2066" }
%"class.std::__1::__list_imp.2066" = type { %"struct.std::__1::__list_node_base.2067", %"class.std::__1::__compressed_pair.2068" }
%"struct.std::__1::__list_node_base.2067" = type { %"struct.std::__1::__list_node_base.2067"*, %"struct.std::__1::__list_node_base.2067"* }
%"class.std::__1::__compressed_pair.2068" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.blink::NotShared" = type { %"class.blink::Member.1878" }
%"class.blink::AudioProcessingEvent" = type { %"class.blink::Event", %"class.blink::Member.1870", %"class.blink::Member.1870", double }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.250" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.blink::DeferredTaskHandler::GraphAutoLocker" = type { %"class.blink::DeferredTaskHandler"* }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.1912", %"class.WTF::String" }
%"class.WTF::StringAppend.1912" = type { %"class.WTF::StringAppend.1913", i8* }
%"class.WTF::StringAppend.1913" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringTypeAdapter.2105" = type { %"class.WTF::StringTypeAdapter.2106" }
%"class.WTF::StringTypeAdapter.2106" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.2108" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend.1914" = type { %"class.WTF::StringAppend", i8* }
%"class.blink::RealtimeAudioDestinationHandler" = type <{ %"class.blink::AudioDestinationHandler.base", [7 x i8], %"class.blink::AudioIOCallback", %"class.base::SupportsWeakPtr.1915", %"class.blink::WebAudioLatencyHint", %class.scoped_refptr.1916, %"class.absl::optional.1970", %"struct.std::__1::atomic.241", [7 x i8], %class.scoped_refptr.258, i8, [7 x i8] }>
%"class.blink::AudioDestinationHandler.base" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"struct.std::__1::atomic.99", i8 }>
%"class.blink::AudioIOCallback" = type { i32 (...)** }
%"class.base::SupportsWeakPtr.1915" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.blink::WebAudioLatencyHint" = type { i32, double }
%class.scoped_refptr.1916 = type { %"class.blink::AudioDestination"* }
%"class.blink::AudioDestination" = type <{ %"class.blink::WebAudioDevice::RenderCallback", %"class.WTF::ThreadSafeRefCounted.1917", i32, %"class.std::__1::unique_ptr.1919", i32, i32, %class.scoped_refptr.258, %"class.std::__1::unique_ptr.1925", %class.scoped_refptr.294, %class.scoped_refptr.294, %"class.blink::AudioIOCallback"*, i64, float, [4 x i8], %"class.std::__1::unique_ptr.1931", %"class.std::__1::unique_ptr.1946", %"struct.blink::AudioIOPosition", %"class.blink::AudioCallbackMetricReporter", %"class.WTF::Mutex", i32, [4 x i8] }>
%"class.blink::WebAudioDevice::RenderCallback" = type { i32 (...)** }
%"class.WTF::ThreadSafeRefCounted.1917" = type { %"class.base::RefCountedThreadSafe.1918" }
%"class.base::RefCountedThreadSafe.1918" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1919" = type { %"class.std::__1::__compressed_pair.1920" }
%"class.std::__1::__compressed_pair.1920" = type { %"struct.std::__1::__compressed_pair_elem.1921" }
%"struct.std::__1::__compressed_pair_elem.1921" = type { %"class.blink::WebAudioDevice"* }
%"class.blink::WebAudioDevice" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1925" = type { %"class.std::__1::__compressed_pair.1926" }
%"class.std::__1::__compressed_pair.1926" = type { %"struct.std::__1::__compressed_pair_elem.1927" }
%"struct.std::__1::__compressed_pair_elem.1927" = type { %"class.blink::PushPullFIFO"* }
%"class.blink::PushPullFIFO" = type opaque
%"class.std::__1::unique_ptr.1931" = type { %"class.std::__1::__compressed_pair.1932" }
%"class.std::__1::__compressed_pair.1932" = type { %"struct.std::__1::__compressed_pair_elem.1933" }
%"struct.std::__1::__compressed_pair_elem.1933" = type { %"class.blink::MediaMultiChannelResampler"* }
%"class.blink::MediaMultiChannelResampler" = type { %"class.std::__1::unique_ptr.1934", %"class.std::__1::unique_ptr.1946", %class.scoped_refptr.294, %"class.WTF::CrossThreadFunction" }
%"class.std::__1::unique_ptr.1934" = type { %"class.std::__1::__compressed_pair.1935" }
%"class.std::__1::__compressed_pair.1935" = type { %"struct.std::__1::__compressed_pair_elem.1936" }
%"struct.std::__1::__compressed_pair_elem.1936" = type { %"class.media::MultiChannelResampler"* }
%"class.media::MultiChannelResampler" = type <{ i32 (...)**, %"class.base::RepeatingCallback.1937", %"class.std::__1::vector.1938", %"class.std::__1::unique_ptr.1946", %"class.std::__1::unique_ptr.1946", i32, [4 x i8] }>
%"class.base::RepeatingCallback.1937" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.1938" = type { %"class.std::__1::__vector_base.1939" }
%"class.std::__1::__vector_base.1939" = type { %"class.std::__1::unique_ptr.1940"*, %"class.std::__1::unique_ptr.1940"*, %"class.std::__1::__compressed_pair.1941" }
%"class.std::__1::unique_ptr.1940" = type opaque
%"class.std::__1::__compressed_pair.1941" = type { %"struct.std::__1::__compressed_pair_elem.1942" }
%"struct.std::__1::__compressed_pair_elem.1942" = type { %"class.std::__1::unique_ptr.1940"* }
%"class.WTF::CrossThreadFunction" = type { %"class.base::RepeatingCallback.1966" }
%"class.base::RepeatingCallback.1966" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1946" = type { %"class.std::__1::__compressed_pair.1947" }
%"class.std::__1::__compressed_pair.1947" = type { %"struct.std::__1::__compressed_pair_elem.1948" }
%"struct.std::__1::__compressed_pair_elem.1948" = type { %"class.media::AudioBus"* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.1949", i8, i64, i32, %"class.std::__1::vector.1953", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.1949" = type { %"class.std::__1::__compressed_pair.1950" }
%"class.std::__1::__compressed_pair.1950" = type { %"struct.std::__1::__compressed_pair_elem.1951" }
%"struct.std::__1::__compressed_pair_elem.1951" = type { float* }
%"class.std::__1::vector.1953" = type { %"class.std::__1::__vector_base.1954" }
%"class.std::__1::__vector_base.1954" = type { float**, float**, %"class.std::__1::__compressed_pair.1955" }
%"class.std::__1::__compressed_pair.1955" = type { %"struct.std::__1::__compressed_pair_elem.1956" }
%"struct.std::__1::__compressed_pair_elem.1956" = type { float** }
%"struct.blink::AudioIOPosition" = type { double, double }
%"class.blink::AudioCallbackMetricReporter" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", double, double, double, double, %"struct.blink::AudioCallbackMetric" }
%"struct.blink::AudioCallbackMetric" = type { i64, double, double, double, double }
%"class.absl::optional.1970" = type { %"class.absl::optional_internal::optional_data.1971" }
%"class.absl::optional_internal::optional_data.1971" = type { %"class.absl::optional_internal::optional_data_base.1972" }
%"class.absl::optional_internal::optional_data_base.1972" = type { %"class.absl::optional_internal::optional_data_dtor_base.1973" }
%"class.absl::optional_internal::optional_data_dtor_base.1973" = type { i8, %union.anon.1974 }
%union.anon.1974 = type { float }
%"class.v8::Value" = type { i8 }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.1979", i8, [7 x i8] }>
%"class.blink::Member.1979" = type { %"class.blink::MemberBase.1980" }
%"class.blink::MemberBase.1980" = type { %"class.blink::EventListener"* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__110unique_ptrIN5blink17SharedAudioBufferENS2_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17SharedAudioBufferENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN20trace_event_internal13AddTraceEventIRjEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_ = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink12AudioHandler22ProcessOnlyAudioParamsEj = comdat any

$_ZNK5blink22ScriptProcessorHandler22NumberOfOutputChannelsEv = comdat any

$_ZN5blink12AudioHandler24UpdatePullStatusIfNeededEv = comdat any

$_ZN5blink19ScriptProcessorNodeD2Ev = comdat any

$_ZN5blink19ScriptProcessorNodeD0Ev = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink19ScriptProcessorNode18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZThn168_N5blink19ScriptProcessorNodeD1Ev = comdat any

$_ZThn168_N5blink19ScriptProcessorNodeD0Ev = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_19ScriptProcessorNodeEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_19ScriptProcessorNodeEE26DispatchHasPendingActivityEv = comdat any

$_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22ScriptProcessorHandlerEFvjEJNS_7WeakPtrIS4_EEjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink22ScriptProcessorHandlerEFvjEJNS_7WeakPtrIS3_EEjEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink22ScriptProcessorHandlerEFvjEJNS_7WeakPtrIS4_EEjEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22ScriptProcessorHandlerEFvjPNS_13WaitableEventEEJNS_7WeakPtrIS4_EEjN3WTF28CrossThreadUnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink22ScriptProcessorHandlerEFvjPNS_13WaitableEventEEJNS_7WeakPtrIS3_EEjN3WTF28CrossThreadUnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink22ScriptProcessorHandlerEFvjPNS_13WaitableEventEEJNS_7WeakPtrIS4_EEjN3WTF28CrossThreadUnretainedWrapperIS5_EEEEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE = comdat any

$_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17SharedAudioBufferENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17SharedAudioBufferENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA100_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZNK3WTF6VectorIN5blink19ArrayBufferContentsELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11AudioBufferEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_11AudioBufferEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink22ScriptProcessorHandlerE = hidden unnamed_addr constant { [22 x i8*] } { [22 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ScriptProcessorHandler"*)* @_ZN5blink22ScriptProcessorHandlerD2Ev to i8*), i8* bitcast (void (%"class.blink::ScriptProcessorHandler"*)* @_ZN5blink22ScriptProcessorHandlerD0Ev to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler7DisposeEv to i8*), i8* bitcast (%"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)* @_ZNK5blink12AudioHandler7ContextEv to i8*), i8* bitcast (void (%"class.blink::ScriptProcessorHandler"*, i32)* @_ZN5blink22ScriptProcessorHandler7ProcessEj to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32)* @_ZN5blink12AudioHandler22ProcessOnlyAudioParamsEj to i8*), i8* bitcast (void (%"class.blink::ScriptProcessorHandler"*)* @_ZN5blink22ScriptProcessorHandler10InitializeEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler12UninitializeEv to i8*), i8* bitcast (i32 (%"class.blink::ScriptProcessorHandler"*)* @_ZNK5blink22ScriptProcessorHandler22NumberOfOutputChannelsEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32)* @_ZN5blink12AudioHandler18ProcessIfNecessaryEj to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)* @_ZN5blink12AudioHandler29CheckNumberOfChannelsForInputEPNS_14AudioNodeInputE to i8*), i8* bitcast (i1 (%"class.blink::ScriptProcessorHandler"*)* @_ZNK5blink22ScriptProcessorHandler22RequiresTailProcessingEv to i8*), i8* bitcast (double (%"class.blink::ScriptProcessorHandler"*)* @_ZNK5blink22ScriptProcessorHandler8TailTimeEv to i8*), i8* bitcast (double (%"class.blink::ScriptProcessorHandler"*)* @_ZNK5blink22ScriptProcessorHandler11LatencyTimeEv to i8*), i8* bitcast (i1 (%"class.blink::AudioHandler"*)* @_ZNK5blink12AudioHandler17PropagatesSilenceEv to i8*), i8* bitcast (void (%"class.blink::ScriptProcessorHandler"*, i32, %"class.blink::ExceptionState"*)* @_ZN5blink22ScriptProcessorHandler15SetChannelCountEjRNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::ScriptProcessorHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink22ScriptProcessorHandler19SetChannelCountModeERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink12AudioHandler24SetChannelInterpretationERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler24UpdatePullStatusIfNeededEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32)* @_ZN5blink12AudioHandler10PullInputsEj to i8*)] }, align 8
@.str = private unnamed_addr constant [100 x i8] c"The ScriptProcessorNode is deprecated. Use AudioWorkletNode instead. (https://bit.ly/audio-worklet)\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.1 = private unnamed_addr constant [32 x i8] c"ScriptProcessorHandler::Process\00", align 1
@.str.2 = private unnamed_addr constant [58 x i8] c"ScriptProcessorHandler::Process - tryLock failed (output)\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"ScriptProcessorHandler::Process - data copy under lock\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"double_buffer_index\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"buffer_read_write_index_\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"Process\00", align 1
@.str.7 = private unnamed_addr constant [75 x i8] c"../../third_party/blink/renderer/modules/webaudio/script_processor_node.cc\00", align 1
@.str.8 = private unnamed_addr constant [37 x i8] c"channelCount cannot be changed from \00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"clamped-max\00", align 1
@.str.12 = private unnamed_addr constant [56 x i8] c"channelCountMode cannot be changed from 'explicit' to '\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@_ZTVN5blink19ScriptProcessorNodeE = hidden unnamed_addr constant { [31 x i8*], [5 x i8*], [7 x i8*] } { [31 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptProcessorNode"*)* @_ZN5blink19ScriptProcessorNodeD2Ev to i8*), i8* bitcast (void (%"class.blink::ScriptProcessorNode"*)* @_ZN5blink19ScriptProcessorNodeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptProcessorNode"*)* @_ZNK5blink19ScriptProcessorNode18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptProcessorNode"*, %"class.blink::Visitor"*)* @_ZNK5blink19ScriptProcessorNode5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::ScriptProcessorNode"*)* @_ZNK5blink19ScriptProcessorNode18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AudioNode"*)* @_ZNK5blink9AudioNode13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::AudioNode"*)* @_ZNK5blink9AudioNode19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (void (%"class.blink::ScriptProcessorNode"*)* @_ZN5blink19ScriptProcessorNode15ReportDidCreateEv to i8*), i8* bitcast (void (%"class.blink::ScriptProcessorNode"*)* @_ZN5blink19ScriptProcessorNode21ReportWillBeDestroyedEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::ScriptProcessorNode"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink19ScriptProcessorNode5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ScriptProcessorNode"*)* @_ZThn72_N5blink19ScriptProcessorNode15ReportDidCreateEv to i8*), i8* bitcast (void (%"class.blink::ScriptProcessorNode"*)* @_ZThn72_N5blink19ScriptProcessorNode21ReportWillBeDestroyedEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -168 to i8*), i8* null, i8* bitcast (void (%"class.blink::ScriptProcessorNode"*, %"class.blink::Visitor"*)* @_ZThn168_NK5blink19ScriptProcessorNode5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ScriptProcessorNode"*)* @_ZThn168_N5blink19ScriptProcessorNodeD1Ev to i8*), i8* bitcast (void (%"class.blink::ScriptProcessorNode"*)* @_ZThn168_N5blink19ScriptProcessorNodeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable.1911"*)* @_ZNK5blink21ActiveScriptWrappableINS_19ScriptProcessorNodeEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable.1911"*)* @_ZNK5blink21ActiveScriptWrappableINS_19ScriptProcessorNodeEE26DispatchHasPendingActivityEv to i8*)] }, align 8
@.str.14 = private unnamed_addr constant [66 x i8] c"number of input channels and output channels cannot both be zero.\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"number of input channels (\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c") exceeds maximum (\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c").\00", align 1
@.str.18 = private unnamed_addr constant [28 x i8] c"number of output channels (\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"buffer size (\00", align 1
@.str.20 = private unnamed_addr constant [53 x i8] c") must be 0 or a power of two between 256 and 16384.\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"ScriptProcessorNode::DispatchEvent\00", align 1
@.str.22 = private unnamed_addr constant [59 x i8] c"ScriptProcessorNode::DispatchEvent (copy input under lock)\00", align 1
@.str.23 = private unnamed_addr constant [62 x i8] c"ScriptProcessorNode::DispatchEvent (create input AudioBuffer)\00", align 1
@.str.24 = private unnamed_addr constant [60 x i8] c"ScriptProcessorNode::DispatchEvent (copy output under lock)\00", align 1
@.str.25 = private unnamed_addr constant [63 x i8] c"ScriptProcessorNode::DispatchEvent (create output AudioBuffer)\00", align 1
@_ZN5blink16event_type_names13kAudioprocessE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.26 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.27 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink19ScriptProcessorNode18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.30 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.31 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.32 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.33 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.34 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17SharedAudioBufferENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [147 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::SharedAudioBuffer, std::__1::default_delete<blink::SharedAudioBuffer> >]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.36 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.37 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.38 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.39 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.40 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.41 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.42 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.43 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11AudioBufferEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [163 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::AudioBuffer>, WTF::VectorTraits<blink::Member<blink::AudioBuffer> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink22ScriptProcessorHandlerC1ERNS_9AudioNodeEfjjjRKNS_10HeapVectorINS_6MemberINS_11AudioBufferEEELj0EEES9_ = hidden unnamed_addr alias void (%"class.blink::ScriptProcessorHandler"*, %"class.blink::AudioNode"*, float, i32, i32, i32, %"class.blink::HeapVector.1864"*, %"class.blink::HeapVector.1864"*), void (%"class.blink::ScriptProcessorHandler"*, %"class.blink::AudioNode"*, float, i32, i32, i32, %"class.blink::HeapVector.1864"*, %"class.blink::HeapVector.1864"*)* @_ZN5blink22ScriptProcessorHandlerC2ERNS_9AudioNodeEfjjjRKNS_10HeapVectorINS_6MemberINS_11AudioBufferEEELj0EEES9_
@_ZN5blink22ScriptProcessorHandlerD1Ev = hidden unnamed_addr alias void (%"class.blink::ScriptProcessorHandler"*), void (%"class.blink::ScriptProcessorHandler"*)* @_ZN5blink22ScriptProcessorHandlerD2Ev
@_ZN5blink19ScriptProcessorNodeC1ERNS_16BaseAudioContextEfjjj = hidden unnamed_addr alias void (%"class.blink::ScriptProcessorNode"*, %"class.blink::BaseAudioContext"*, float, i32, i32, i32), void (%"class.blink::ScriptProcessorNode"*, %"class.blink::BaseAudioContext"*, float, i32, i32, i32)* @_ZN5blink19ScriptProcessorNodeC2ERNS_16BaseAudioContextEfjjj

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ScriptProcessorHandlerC2ERNS_9AudioNodeEfjjjRKNS_10HeapVectorINS_6MemberINS_11AudioBufferEEELj0EEES9_(%"class.blink::ScriptProcessorHandler"*, %"class.blink::AudioNode"* dereferenceable(168), float, i32, i32, i32, %"class.blink::HeapVector.1864"* dereferenceable(16), %"class.blink::HeapVector.1864"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %9 = alloca %"class.std::__1::unique_ptr.361", align 8
  %10 = alloca %"class.std::__1::unique_ptr.361", align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = bitcast %"class.blink::ScriptProcessorHandler"* %0 to %"class.blink::AudioHandler"*
  tail call void @_ZN5blink12AudioHandlerC2ENS0_8NodeTypeERNS_9AudioNodeEf(%"class.blink::AudioHandler"* %13, i32 7, %"class.blink::AudioNode"* dereferenceable(168) %1, float %2) #12
  %14 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %14) #12
  %15 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN5blink22ScriptProcessorHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 2
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %17, i1 zeroext false) #12
  %18 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 4
  %19 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 5
  %20 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 6
  %21 = bitcast %"class.WTF::Vector.358"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false)
  store i32 %3, i32* %20, align 8
  %22 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 7
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 8
  store i32 %4, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 9
  store i32 %5, i32* %24, align 4
  %25 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink9AudioNode7contextEv(%"class.blink::AudioNode"* %1) #12
  %26 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %25, i64 0, i32 12, i32 0
  %27 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %27, i64 0, i32 7
  %29 = load i32, i32* %28, align 4
  %30 = tail call %"class.blink::AudioBus"* @_ZN5blink8AudioBus6CreateEjjb(i32 %4, i32 %29, i1 zeroext false) #12
  %31 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 10, i32 0
  store %"class.blink::AudioBus"* %30, %"class.blink::AudioBus"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 11
  %33 = getelementptr inbounds %class.scoped_refptr.258, %class.scoped_refptr.258* %32, i64 0, i32 0
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %33, align 8
  tail call void @_ZN5blink12AudioHandler8AddInputEv(%"class.blink::AudioHandler"* %13) #12
  tail call void @_ZN5blink12AudioHandler9AddOutputEj(%"class.blink::AudioHandler"* %13, i32 %5) #12
  %34 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 0, i32 19
  store i32 %4, i32* %34, align 8
  tail call void @_ZN5blink12AudioHandler27SetInternalChannelCountModeENS0_16ChannelCountModeE(%"class.blink::AudioHandler"* %13, i32 2) #12
  %35 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %13) #12
  %36 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv(%"class.blink::BaseAudioContext"* %35) #12
  %37 = icmp eq %"class.blink::ExecutionContext"* %36, null
  br i1 %37, label %59, label %38

38:                                               ; preds = %8
  %39 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %13) #12
  %40 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv(%"class.blink::BaseAudioContext"* %39) #12
  %41 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %40, i64 0, i32 1
  %42 = bitcast %"class.blink::MojoBindingContext"* %41 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %43 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %42, align 8
  %44 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %43, i64 6
  %45 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %44, align 8
  %46 = tail call %"class.base::SingleThreadTaskRunner"* %45(%"class.blink::MojoBindingContext"* %41, i8 zeroext 7) #12
  %47 = ptrtoint %"class.base::SingleThreadTaskRunner"* %46 to i64
  %48 = bitcast %class.scoped_refptr.258* %32 to i64*
  %49 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %33, align 8
  store i64 %47, i64* %48, align 8
  %50 = icmp eq %"class.base::SingleThreadTaskRunner"* %49, null
  br i1 %50, label %59, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %49, i64 0, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.259", %"class.base::RefCountedThreadSafe.259"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw sub i32* %53, i32 1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe.259", %"class.base::RefCountedThreadSafe.259"* %52, i64 -2
  %58 = bitcast %"class.base::RefCountedThreadSafe.259"* %57 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %58) #12
  br label %59

59:                                               ; preds = %56, %51, %38, %8
  %60 = bitcast %"class.std::__1::unique_ptr.361"* %9 to i8*
  %61 = getelementptr inbounds %"class.blink::HeapVector.1864", %"class.blink::HeapVector.1864"* %6, i64 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.361"* %9, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::unique_ptr.361"* %9 to i64*
  %64 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %65 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %18, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::unique_ptr.361"* %10 to i8*
  %68 = getelementptr inbounds %"class.blink::HeapVector.1864", %"class.blink::HeapVector.1864"* %7, i64 0, i32 0
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.361"* %10, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::unique_ptr.361"* %10 to i64*
  %71 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %72 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %19, i64 0, i32 0, i32 0, i32 0
  br label %86

74:                                               ; preds = %191
  %75 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 0, i32 5
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %74
  call void @_ZN5blink12AudioHandler10InitializeEv(%"class.blink::AudioHandler"* %13) #12
  br label %79

79:                                               ; preds = %74, %78
  %80 = call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %13) #12
  %81 = call %"class.blink::ExecutionContext"* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv(%"class.blink::BaseAudioContext"* %80) #12
  %82 = icmp eq %"class.blink::ExecutionContext"* %81, null
  %83 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %81, i64 -1, i32 8
  %84 = icmp eq i32* %83, null
  %85 = or i1 %82, %84
  br i1 %85, label %204, label %194

86:                                               ; preds = %191, %59
  %87 = phi i32 [ 0, %59 ], [ %192, %191 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #12
  %88 = call dereferenceable(8) %"class.blink::Member.1870"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1867"* %61, i32 %87) #12
  %89 = getelementptr inbounds %"class.blink::Member.1870", %"class.blink::Member.1870"* %88, i64 0, i32 0, i32 0
  %90 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %89, align 8
  %91 = icmp eq %"class.blink::AudioBuffer"* %90, null
  br i1 %91, label %98, label %92

92:                                               ; preds = %86
  %93 = call dereferenceable(8) %"class.blink::Member.1870"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1867"* %61, i32 %87) #12
  %94 = getelementptr inbounds %"class.blink::Member.1870", %"class.blink::Member.1870"* %93, i64 0, i32 0, i32 0
  %95 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %94, align 8
  %96 = call %"class.blink::SharedAudioBuffer"* @_ZN5blink11AudioBuffer23CreateSharedAudioBufferEv(%"class.blink::AudioBuffer"* %95) #12
  store %"class.blink::SharedAudioBuffer"* %96, %"class.blink::SharedAudioBuffer"** %62, align 8
  %97 = ptrtoint %"class.blink::SharedAudioBuffer"* %96 to i64
  br label %99

98:                                               ; preds = %86
  store i64 0, i64* %63, align 8
  br label %99

99:                                               ; preds = %98, %92
  %100 = phi i64 [ 0, %98 ], [ %97, %92 ]
  %101 = load i32, i32* %64, align 4
  %102 = load i32, i32* %65, align 8
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %111, label %104, !prof !3

104:                                              ; preds = %99
  %105 = load %"class.std::__1::unique_ptr.361"*, %"class.std::__1::unique_ptr.361"** %66, align 8
  %106 = zext i32 %101 to i64
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.361"* %105, i64 %106
  store %"class.blink::SharedAudioBuffer"* null, %"class.blink::SharedAudioBuffer"** %62, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.361"* %107 to i64*
  store i64 %100, i64* %108, align 8
  %109 = load i32, i32* %64, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %64, align 4
  br label %112

111:                                              ; preds = %99
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17SharedAudioBufferENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.358"* %18, %"class.std::__1::unique_ptr.361"* nonnull dereferenceable(8) %9) #12
  br label %112

112:                                              ; preds = %104, %111
  %113 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %62, align 8
  store %"class.blink::SharedAudioBuffer"* null, %"class.blink::SharedAudioBuffer"** %62, align 8
  %114 = icmp eq %"class.blink::SharedAudioBuffer"* %113, null
  br i1 %114, label %139, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %113, i64 0, i32 2
  %117 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %117, align 8
  %119 = icmp eq %"class.blink::ArrayBufferContents"* %118, null
  br i1 %119, label %137, label %120, !prof !4

120:                                              ; preds = %115
  %121 = bitcast %"class.blink::ArrayBufferContents"* %118 to i8*
  %122 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %113, i64 0, i32 2, i32 0, i32 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %135, label %125, !prof !3

125:                                              ; preds = %120
  %126 = zext i32 %123 to i64
  %127 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %118, i64 %126
  br label %128

128:                                              ; preds = %128, %125
  %129 = phi %"class.blink::ArrayBufferContents"* [ %130, %128 ], [ %118, %125 ]
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %129) #12
  %130 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %129, i64 1
  %131 = icmp eq %"class.blink::ArrayBufferContents"* %130, %127
  br i1 %131, label %132, label %128

132:                                              ; preds = %128
  store i32 0, i32* %122, align 4
  %133 = bitcast %"class.WTF::Vector.364"* %116 to i8**
  %134 = load i8*, i8** %133, align 8
  br label %135

135:                                              ; preds = %132, %120
  %136 = phi i8* [ %134, %132 ], [ %121, %120 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %136) #12
  br label %137

137:                                              ; preds = %135, %115
  %138 = bitcast %"class.blink::SharedAudioBuffer"* %113 to i8*
  call void @free(i8* %138) #12
  br label %139

139:                                              ; preds = %112, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #12
  %140 = call dereferenceable(8) %"class.blink::Member.1870"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1867"* %68, i32 %87) #12
  %141 = getelementptr inbounds %"class.blink::Member.1870", %"class.blink::Member.1870"* %140, i64 0, i32 0, i32 0
  %142 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %141, align 8
  %143 = icmp eq %"class.blink::AudioBuffer"* %142, null
  br i1 %143, label %150, label %144

144:                                              ; preds = %139
  %145 = call dereferenceable(8) %"class.blink::Member.1870"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1867"* %68, i32 %87) #12
  %146 = getelementptr inbounds %"class.blink::Member.1870", %"class.blink::Member.1870"* %145, i64 0, i32 0, i32 0
  %147 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %146, align 8
  %148 = call %"class.blink::SharedAudioBuffer"* @_ZN5blink11AudioBuffer23CreateSharedAudioBufferEv(%"class.blink::AudioBuffer"* %147) #12
  store %"class.blink::SharedAudioBuffer"* %148, %"class.blink::SharedAudioBuffer"** %69, align 8
  %149 = ptrtoint %"class.blink::SharedAudioBuffer"* %148 to i64
  br label %151

150:                                              ; preds = %139
  store i64 0, i64* %70, align 8
  br label %151

151:                                              ; preds = %150, %144
  %152 = phi i64 [ 0, %150 ], [ %149, %144 ]
  %153 = load i32, i32* %71, align 4
  %154 = load i32, i32* %72, align 8
  %155 = icmp eq i32 %153, %154
  br i1 %155, label %163, label %156, !prof !3

156:                                              ; preds = %151
  %157 = load %"class.std::__1::unique_ptr.361"*, %"class.std::__1::unique_ptr.361"** %73, align 8
  %158 = zext i32 %153 to i64
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.361"* %157, i64 %158
  store %"class.blink::SharedAudioBuffer"* null, %"class.blink::SharedAudioBuffer"** %69, align 8
  %160 = bitcast %"class.std::__1::unique_ptr.361"* %159 to i64*
  store i64 %152, i64* %160, align 8
  %161 = load i32, i32* %71, align 4
  %162 = add i32 %161, 1
  store i32 %162, i32* %71, align 4
  br label %164

163:                                              ; preds = %151
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17SharedAudioBufferENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.358"* %19, %"class.std::__1::unique_ptr.361"* nonnull dereferenceable(8) %10) #12
  br label %164

164:                                              ; preds = %156, %163
  %165 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %69, align 8
  store %"class.blink::SharedAudioBuffer"* null, %"class.blink::SharedAudioBuffer"** %69, align 8
  %166 = icmp eq %"class.blink::SharedAudioBuffer"* %165, null
  br i1 %166, label %191, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %165, i64 0, i32 2
  %169 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %168, i64 0, i32 0, i32 0, i32 0
  %170 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %169, align 8
  %171 = icmp eq %"class.blink::ArrayBufferContents"* %170, null
  br i1 %171, label %189, label %172, !prof !4

172:                                              ; preds = %167
  %173 = bitcast %"class.blink::ArrayBufferContents"* %170 to i8*
  %174 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %165, i64 0, i32 2, i32 0, i32 0, i32 2
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %187, label %177, !prof !3

177:                                              ; preds = %172
  %178 = zext i32 %175 to i64
  %179 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %170, i64 %178
  br label %180

180:                                              ; preds = %180, %177
  %181 = phi %"class.blink::ArrayBufferContents"* [ %182, %180 ], [ %170, %177 ]
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %181) #12
  %182 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %181, i64 1
  %183 = icmp eq %"class.blink::ArrayBufferContents"* %182, %179
  br i1 %183, label %184, label %180

184:                                              ; preds = %180
  store i32 0, i32* %174, align 4
  %185 = bitcast %"class.WTF::Vector.364"* %168 to i8**
  %186 = load i8*, i8** %185, align 8
  br label %187

187:                                              ; preds = %184, %172
  %188 = phi i8* [ %186, %184 ], [ %173, %172 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %188) #12
  br label %189

189:                                              ; preds = %187, %167
  %190 = bitcast %"class.blink::SharedAudioBuffer"* %165 to i8*
  call void @free(i8* %190) #12
  br label %191

191:                                              ; preds = %164, %189
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #12
  %192 = add nuw nsw i32 %87, 1
  %193 = icmp eq i32 %192, 2
  br i1 %193, label %74, label %86

194:                                              ; preds = %79
  %195 = getelementptr inbounds i32, i32* %83, i64 32
  %196 = bitcast i32* %195 to %"class.blink::ExecutionContext"*
  %197 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %197) #12
  store i32 9, i32* %11, align 4
  %198 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %198) #12
  store i32 2, i32* %12, align 4
  %199 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA100_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %11, i32* nonnull dereferenceable(4) %12, [100 x i8]* nonnull dereferenceable(100) @.str) #12
  %200 = bitcast i32* %195 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %201 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %200, align 8
  %202 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %201, i64 52
  %203 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %202, align 8
  call void %203(%"class.blink::ExecutionContext"* %196, %"class.blink::ConsoleMessage"* %199, i1 zeroext false) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %198) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %197) #12
  br label %204

204:                                              ; preds = %79, %194
  ret void
}

declare void @_ZN5blink12AudioHandlerC2ENS0_8NodeTypeERNS_9AudioNodeEf(%"class.blink::AudioHandler"*, i32, %"class.blink::AudioNode"* dereferenceable(168), float) unnamed_addr #1

declare %"class.blink::AudioBus"* @_ZN5blink8AudioBus6CreateEjjb(i32, i32, i1 zeroext) local_unnamed_addr #1

declare %"class.blink::BaseAudioContext"* @_ZNK5blink9AudioNode7contextEv(%"class.blink::AudioNode"*) local_unnamed_addr #1

declare void @_ZN5blink12AudioHandler8AddInputEv(%"class.blink::AudioHandler"*) local_unnamed_addr #1

declare void @_ZN5blink12AudioHandler9AddOutputEj(%"class.blink::AudioHandler"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12AudioHandler27SetInternalChannelCountModeENS0_16ChannelCountModeE(%"class.blink::AudioHandler"*, i32) local_unnamed_addr #1

declare %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv(%"class.blink::BaseAudioContext"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::SharedAudioBuffer"* @_ZN5blink11AudioBuffer23CreateSharedAudioBufferEv(%"class.blink::AudioBuffer"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ScriptProcessorHandler10InitializeEv(%"class.blink::ScriptProcessorHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ScriptProcessorHandler"* %0 to %"class.blink::AudioHandler"*
  tail call void @_ZN5blink12AudioHandler10InitializeEv(%"class.blink::AudioHandler"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ScriptProcessorHandler"* @_ZN5blink22ScriptProcessorHandler6CreateERNS_9AudioNodeEfjjjRKNS_10HeapVectorINS_6MemberINS_11AudioBufferEEELj0EEES9_(%"class.blink::AudioNode"* dereferenceable(168), float, i32, i32, i32, %"class.blink::HeapVector.1864"* dereferenceable(16), %"class.blink::HeapVector.1864"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %8 = tail call noalias i8* @malloc(i64 256) #12
  %9 = bitcast i8* %8 to %"class.blink::ScriptProcessorHandler"*
  tail call void @_ZN5blink22ScriptProcessorHandlerC2ERNS_9AudioNodeEfjjjRKNS_10HeapVectorINS_6MemberINS_11AudioBufferEEELj0EEES9_(%"class.blink::ScriptProcessorHandler"* %9, %"class.blink::AudioNode"* dereferenceable(168) %0, float %1, i32 %2, i32 %3, i32 %4, %"class.blink::HeapVector.1864"* dereferenceable(16) %5, %"class.blink::HeapVector.1864"* dereferenceable(16) %6)
  ret %"class.blink::ScriptProcessorHandler"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ScriptProcessorHandlerD2Ev(%"class.blink::ScriptProcessorHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN5blink22ScriptProcessorHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"class.blink::ScriptProcessorHandler"* %0 to %"class.blink::AudioHandler"*
  tail call void @_ZN5blink12AudioHandler12UninitializeEv(%"class.blink::AudioHandler"* %3) #12
  %4 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 11, i32 0
  %5 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe.259", %"class.base::RefCountedThreadSafe.259"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.259", %"class.base::RefCountedThreadSafe.259"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe.259"* %13 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %14) #12
  br label %15

15:                                               ; preds = %1, %7, %12
  %16 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 10, i32 0
  %17 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %16, align 8
  %18 = icmp eq %"class.blink::AudioBus"* %17, null
  br i1 %18, label %56, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %17, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %56

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %20, i64 2
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %20, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  %29 = bitcast %"class.base::RefCountedThreadSafe.296"* %25 to %"class.blink::AudioChannel"**
  br i1 %28, label %47, label %30, !prof !3

30:                                               ; preds = %24
  %31 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %29, align 8
  %32 = zext i32 %27 to i64
  %33 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %31, i64 %32
  br label %34

34:                                               ; preds = %43, %30
  %35 = phi %"class.blink::AudioChannel"* [ %44, %43 ], [ %31, %30 ]
  %36 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %35, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %36, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %36, align 8
  %38 = icmp eq %"class.blink::AudioArray"* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::AudioArray"* %37 to i8**
  %41 = load i8*, i8** %40, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %41) #12
  %42 = bitcast %"class.blink::AudioArray"* %37 to i8*
  tail call void @free(i8* %42) #12
  br label %43

43:                                               ; preds = %39, %34
  %44 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %35, i64 1
  %45 = icmp eq %"class.blink::AudioChannel"* %44, %33
  br i1 %45, label %46, label %34

46:                                               ; preds = %43
  store i32 0, i32* %26, align 4
  br label %47

47:                                               ; preds = %46, %24
  %48 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %29, align 8
  %49 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %20, i64 6
  %50 = bitcast %"class.base::RefCountedThreadSafe.296"* %49 to %"class.blink::AudioChannel"*
  %51 = icmp eq %"class.blink::AudioChannel"* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = bitcast %"class.base::RefCountedThreadSafe.296"* %25 to %"class.WTF::VectorBuffer.298"*
  tail call void @_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.298"* %53, %"class.blink::AudioChannel"* %48) #12
  br label %54

54:                                               ; preds = %52, %47
  %55 = bitcast %"class.blink::AudioBus"* %17 to i8*
  tail call void @free(i8* %55) #12
  br label %56

56:                                               ; preds = %15, %19, %54
  %57 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 5
  %58 = bitcast %"class.WTF::Vector.358"* %57 to %"class.WTF::ConditionalDestructor.372"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__110unique_ptrIN5blink17SharedAudioBufferENS2_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.372"* %58) #12
  %59 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 4
  %60 = bitcast %"class.WTF::Vector.358"* %59 to %"class.WTF::ConditionalDestructor.372"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__110unique_ptrIN5blink17SharedAudioBufferENS2_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.372"* %60) #12
  %61 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %61) #12
  %62 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %62) #12
  tail call void @_ZN5blink12AudioHandlerD2Ev(%"class.blink::AudioHandler"* %3) #12
  ret void
}

declare void @_ZN5blink12AudioHandler12UninitializeEv(%"class.blink::AudioHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__110unique_ptrIN5blink17SharedAudioBufferENS2_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.372"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.372"* %0 to %"class.std::__1::unique_ptr.361"**
  %3 = load %"class.std::__1::unique_ptr.361"*, %"class.std::__1::unique_ptr.361"** %2, align 8
  %4 = icmp eq %"class.std::__1::unique_ptr.361"* %3, null
  br i1 %4, label %51, label %5, !prof !4

5:                                                ; preds = %1
  %6 = bitcast %"class.std::__1::unique_ptr.361"* %3 to i8*
  %7 = getelementptr inbounds %"class.WTF::ConditionalDestructor.372", %"class.WTF::ConditionalDestructor.372"* %0, i64 12
  %8 = bitcast %"class.WTF::ConditionalDestructor.372"* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %49, label %11, !prof !3

11:                                               ; preds = %5
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.361"* %3, i64 %12
  br label %14

14:                                               ; preds = %11, %43
  %15 = phi %"class.std::__1::unique_ptr.361"* [ %44, %43 ], [ %3, %11 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.361"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %16, align 8
  store %"class.blink::SharedAudioBuffer"* null, %"class.blink::SharedAudioBuffer"** %16, align 8
  %18 = icmp eq %"class.blink::SharedAudioBuffer"* %17, null
  br i1 %18, label %43, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %17, i64 0, i32 2
  %21 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %21, align 8
  %23 = icmp eq %"class.blink::ArrayBufferContents"* %22, null
  br i1 %23, label %41, label %24, !prof !4

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::ArrayBufferContents"* %22 to i8*
  %26 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %17, i64 0, i32 2, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %39, label %29, !prof !3

29:                                               ; preds = %24
  %30 = zext i32 %27 to i64
  %31 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %22, i64 %30
  br label %32

32:                                               ; preds = %32, %29
  %33 = phi %"class.blink::ArrayBufferContents"* [ %34, %32 ], [ %22, %29 ]
  tail call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %33) #12
  %34 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %33, i64 1
  %35 = icmp eq %"class.blink::ArrayBufferContents"* %34, %31
  br i1 %35, label %36, label %32

36:                                               ; preds = %32
  store i32 0, i32* %26, align 4
  %37 = bitcast %"class.WTF::Vector.364"* %20 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %24
  %40 = phi i8* [ %38, %36 ], [ %25, %24 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #12
  br label %41

41:                                               ; preds = %39, %19
  %42 = bitcast %"class.blink::SharedAudioBuffer"* %17 to i8*
  tail call void @free(i8* %42) #12
  br label %43

43:                                               ; preds = %41, %14
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.361"* %15, i64 1
  %45 = icmp eq %"class.std::__1::unique_ptr.361"* %44, %13
  br i1 %45, label %46, label %14

46:                                               ; preds = %43
  store i32 0, i32* %8, align 4
  %47 = bitcast %"class.WTF::ConditionalDestructor.372"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %5
  %50 = phi i8* [ %48, %46 ], [ %6, %5 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  store %"class.std::__1::unique_ptr.361"* null, %"class.std::__1::unique_ptr.361"** %2, align 8
  br label %51

51:                                               ; preds = %1, %49
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink12AudioHandlerD2Ev(%"class.blink::AudioHandler"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ScriptProcessorHandlerD0Ev(%"class.blink::ScriptProcessorHandler"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink22ScriptProcessorHandlerD2Ev(%"class.blink::ScriptProcessorHandler"* %0) #12
  %2 = bitcast %"class.blink::ScriptProcessorHandler"* %0 to i8*
  tail call void @free(i8* %2) #12
  ret void
}

declare void @_ZN5blink12AudioHandler10InitializeEv(%"class.blink::AudioHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ScriptProcessorHandler7ProcessEj(%"class.blink::ScriptProcessorHandler"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::WeakPtr.1904", align 8
  %9 = alloca %"class.base::internal::WeakReference", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = alloca %"class.base::OnceCallback", align 8
  %12 = alloca %"class.base::WeakPtr.1904", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = alloca %"class.base::TimeTicks", align 8
  %15 = alloca %"class.base::OnceCallback", align 8
  %16 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %17 = alloca %"class.base::TimeTicks", align 8
  %18 = alloca %"class.base::TimeTicks", align 8
  %19 = alloca i32, align 4
  %20 = alloca %"class.base::Location", align 8
  %21 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %22 = alloca %"class.base::WeakPtr.1904", align 8
  %23 = alloca %"class.base::Location", align 8
  %24 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %25 = alloca %"class.base::WeakPtr.1904", align 8
  %26 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), align 16
  %27 = and i8 %26, 25
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %35, label %29, !prof !4

29:                                               ; preds = %2
  %30 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %31 = bitcast %"class.base::TimeTicks"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %18, i64 0, i32 0, i32 0
  %33 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %33, i64* %32, align 8
  %34 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 66, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %30, %"class.base::TimeTicks"* nonnull dereferenceable(8) %18, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %35

35:                                               ; preds = %2, %29
  %36 = bitcast %"class.blink::ScriptProcessorHandler"* %0 to %"class.blink::AudioHandler"*
  %37 = call dereferenceable(104) %"class.blink::AudioNodeInput"* @_ZN5blink12AudioHandler5InputEj(%"class.blink::AudioHandler"* %36, i32 0) #12
  %38 = call %"class.blink::AudioBus"* @_ZN5blink14AudioNodeInput3BusEv(%"class.blink::AudioNodeInput"* %37) #12
  %39 = call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %36, i32 0) #12
  %40 = call %"class.blink::AudioBus"* @_ZNK5blink15AudioNodeOutput3BusEv(%"class.blink::AudioNodeOutput"* %39) #12
  %41 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #12
  %42 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  store i32 %43, i32* %19, align 4
  %44 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 4
  %45 = call dereferenceable(8) %"class.std::__1::unique_ptr.361"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17SharedAudioBufferENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.358"* %44, i32 %43)
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.361"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 5
  %49 = load i32, i32* %19, align 4
  %50 = call dereferenceable(8) %"class.std::__1::unique_ptr.361"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17SharedAudioBufferENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.358"* %48, i32 %49)
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.361"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 10, i32 0
  %54 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %54, i64 0, i32 2, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %40, i64 0, i32 2, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 3
  %60 = call zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"* %59) #12
  %61 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), align 16
  %62 = and i8 %61, 25
  %63 = icmp eq i8 %62, 0
  br i1 %60, label %83, label %64

64:                                               ; preds = %35
  br i1 %63, label %80, label %65, !prof !4

65:                                               ; preds = %64
  %66 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %67 = bitcast %"class.base::TimeTicks"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #12
  %68 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %14, i64 0, i32 0, i32 0
  %69 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %69, i64* %68, align 8
  %70 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %66, %"class.base::TimeTicks"* nonnull dereferenceable(8) %14, %"class.base::trace_event::TraceArguments"* null, i32 8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #12
  %71 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), align 16
  %72 = and i8 %71, 25
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %80, label %74, !prof !4

74:                                               ; preds = %65
  %75 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %76 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #12
  %77 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %78 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %78, i64* %77, align 8
  %79 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 69, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %75, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #12
  br label %80

80:                                               ; preds = %64, %74, %65
  %81 = call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %36, i32 0) #12
  %82 = call %"class.blink::AudioBus"* @_ZNK5blink15AudioNodeOutput3BusEv(%"class.blink::AudioNodeOutput"* %81) #12
  call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %82) #12
  br label %302

83:                                               ; preds = %35
  br i1 %63, label %86, label %84, !prof !4

84:                                               ; preds = %83
  %85 = call i64 @_ZN20trace_event_internal13AddTraceEventIRjEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i32* nonnull dereferenceable(4) %19)
  br label %86

86:                                               ; preds = %83, %84
  %87 = phi i8* [ null, %83 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), %84 ]
  %88 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %83 ], [ getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), %84 ]
  %89 = phi i64 [ -6148914691236517206, %83 ], [ %85, %84 ]
  %90 = icmp eq i32 %56, 0
  br i1 %90, label %114, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %47, i64 0, i32 2
  %93 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 7
  br label %95

94:                                               ; preds = %104
  br i1 %90, label %114, label %112

95:                                               ; preds = %104, %91
  %96 = phi i32 [ 0, %91 ], [ %110, %104 ]
  %97 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %53, align 8
  %98 = call dereferenceable(16) %"class.blink::ArrayBufferContents"* @_ZNK3WTF6VectorIN5blink19ArrayBufferContentsELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.364"* %92, i32 %96) #12
  %99 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %99, align 8
  %101 = icmp eq %"class.v8::BackingStore"* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %95
  %103 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %100) #12
  br label %104

104:                                              ; preds = %95, %102
  %105 = phi i8* [ %103, %102 ], [ null, %95 ]
  %106 = bitcast i8* %105 to float*
  %107 = load i32, i32* %93, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds float, float* %106, i64 %108
  call void @_ZN5blink8AudioBus16SetChannelMemoryEjPfj(%"class.blink::AudioBus"* %97, i32 %96, float* %109, i32 %1) #12
  %110 = add nuw i32 %96, 1
  %111 = icmp eq i32 %110, %56
  br i1 %111, label %94, label %95

112:                                              ; preds = %94
  %113 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %53, align 8
  call void @_ZN5blink8AudioBus8CopyFromERKS0_NS0_21ChannelInterpretationE(%"class.blink::AudioBus"* %113, %"class.blink::AudioBus"* dereferenceable(96) %38, i32 0) #12
  br label %114

114:                                              ; preds = %86, %94, %112
  %115 = icmp eq i32 %58, 0
  br i1 %115, label %122, label %116

116:                                              ; preds = %114
  %117 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %40, i64 0, i32 2
  %118 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %52, i64 0, i32 2
  %119 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 7
  %120 = zext i32 %1 to i64
  %121 = shl nuw nsw i64 %120, 2
  br label %139

122:                                              ; preds = %159, %114
  %123 = icmp eq i8* %87, null
  br i1 %123, label %128, label %124

124:                                              ; preds = %122
  %125 = load i8, i8* %87, align 1
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %128, label %127

127:                                              ; preds = %124
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %87, i8* %88, i64 %89) #12
  br label %128

128:                                              ; preds = %122, %124, %127
  %129 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %59, i64 0, i32 0
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %129) #12
  %130 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 7
  %131 = load i32, i32* %130, align 4
  %132 = add i32 %131, %1
  %133 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 6
  %134 = load i32, i32* %133, align 8
  %135 = urem i32 %132, %134
  store i32 %135, i32* %130, align 4
  %136 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), align 16
  %137 = and i8 %136, 25
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %172, label %169, !prof !4

139:                                              ; preds = %159, %116
  %140 = phi i32 [ 0, %116 ], [ %167, %159 ]
  %141 = call dereferenceable(32) %"class.blink::AudioChannel"* @_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.297"* %117, i32 %140) #12
  %142 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %141, i64 0, i32 3
  store i8 0, i8* %142, align 8
  %143 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %141, i64 0, i32 1
  %144 = load float*, float** %143, align 8
  %145 = icmp eq float* %144, null
  br i1 %145, label %146, label %151

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %141, i64 0, i32 2, i32 0, i32 0, i32 0
  %148 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %148, i64 0, i32 1
  %150 = load float*, float** %149, align 8
  br label %151

151:                                              ; preds = %139, %146
  %152 = phi float* [ %150, %146 ], [ %144, %139 ]
  %153 = call dereferenceable(16) %"class.blink::ArrayBufferContents"* @_ZNK3WTF6VectorIN5blink19ArrayBufferContentsELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.364"* %118, i32 %140) #12
  %154 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %153, i64 0, i32 0, i32 0
  %155 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %154, align 8
  %156 = icmp eq %"class.v8::BackingStore"* %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %151
  %158 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %155) #12
  br label %159

159:                                              ; preds = %151, %157
  %160 = phi i8* [ %158, %157 ], [ null, %151 ]
  %161 = bitcast i8* %160 to float*
  %162 = load i32, i32* %119, align 4
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds float, float* %161, i64 %163
  %165 = bitcast float* %152 to i8*
  %166 = bitcast float* %164 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %165, i8* align 4 %166, i64 %121, i1 false)
  %167 = add nuw i32 %140, 1
  %168 = icmp eq i32 %167, %58
  br i1 %168, label %122, label %139

169:                                              ; preds = %128
  %170 = call i64 @_ZN20trace_event_internal13AddTraceEventIRjEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i32* dereferenceable(4) %130)
  %171 = load i32, i32* %130, align 4
  br label %172

172:                                              ; preds = %128, %169
  %173 = phi i32 [ %135, %128 ], [ %171, %169 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %292

175:                                              ; preds = %172
  %176 = call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %36) #12
  %177 = bitcast %"class.blink::BaseAudioContext"* %176 to i1 (%"class.blink::BaseAudioContext"*)***
  %178 = load i1 (%"class.blink::BaseAudioContext"*)**, i1 (%"class.blink::BaseAudioContext"*)*** %177, align 8
  %179 = getelementptr inbounds i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %178, i64 30
  %180 = load i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %179, align 8
  %181 = call zeroext i1 %180(%"class.blink::BaseAudioContext"* %176) #12
  br i1 %181, label %182, label %233

182:                                              ; preds = %175
  %183 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 11, i32 0
  %184 = bitcast %"class.base::SingleThreadTaskRunner"** %183 to %"class.base::SequencedTaskRunner"**
  %185 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %184, align 8
  %186 = bitcast %"class.base::Location"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %186) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.7, i64 0, i64 0), i32 250) #12
  %187 = bitcast %"class.base::WeakPtr.1904"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %187) #12
  %188 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 1
  %189 = bitcast %"class.base::internal::WeakReference"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #12, !noalias !5
  %190 = getelementptr inbounds %"class.base::SupportsWeakPtr.357", %"class.base::SupportsWeakPtr.357"* %188, i64 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %9, %"class.base::internal::WeakReferenceOwner"* %190) #12, !noalias !5
  %191 = getelementptr inbounds %"class.base::SupportsWeakPtr.357", %"class.base::SupportsWeakPtr.357"* %188, i64 -17
  %192 = getelementptr inbounds %"class.base::WeakPtr.1904", %"class.base::WeakPtr.1904"* %22, i64 0, i32 0
  %193 = ptrtoint %"class.base::SupportsWeakPtr.357"* %191 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %192, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %9, i64 %193) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #12, !noalias !5
  %194 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %194)
  %195 = bitcast %"class.base::WeakPtr.1904"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %195) #12, !noalias !8
  %196 = getelementptr inbounds %"class.base::WeakPtr.1904", %"class.base::WeakPtr.1904"* %8, i64 0, i32 0, i32 0
  %197 = getelementptr inbounds %"class.base::WeakPtr.1904", %"class.base::WeakPtr.1904"* %22, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %196, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %197) #12, !noalias !8
  %198 = getelementptr inbounds %"class.base::WeakPtr.1904", %"class.base::WeakPtr.1904"* %8, i64 0, i32 0, i32 1
  %199 = getelementptr inbounds %"class.base::WeakPtr.1904", %"class.base::WeakPtr.1904"* %22, i64 0, i32 0, i32 1
  %200 = load i64, i64* %199, align 8, !noalias !11
  store i64 %200, i64* %198, align 8, !alias.scope !14, !noalias !8
  %201 = load i32, i32* %42, align 4, !noalias !8
  %202 = call i8* @_Znwm(i64 72) #14, !noalias !15
  %203 = bitcast i8* %202 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %203, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22ScriptProcessorHandlerEFvjEJNS_7WeakPtrIS4_EEjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink22ScriptProcessorHandlerEFvjEJNS_7WeakPtrIS3_EEjEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink22ScriptProcessorHandlerEFvjEJNS_7WeakPtrIS4_EEjEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #12, !noalias !15
  %204 = getelementptr inbounds i8, i8* %202, i64 32
  %205 = bitcast i8* %204 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ScriptProcessorHandler"*, i32)* @_ZN5blink22ScriptProcessorHandler16FireProcessEventEj to i64), i64 0>, <2 x i64>* %205, align 8, !noalias !15
  %206 = getelementptr inbounds i8, i8* %202, i64 48
  %207 = bitcast i8* %206 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %207, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %196) #12, !noalias !15
  %208 = getelementptr inbounds i8, i8* %202, i64 56
  %209 = bitcast i8* %208 to i64*
  %210 = load i64, i64* %198, align 8, !noalias !15
  store i64 %210, i64* %209, align 8, !noalias !15
  %211 = getelementptr inbounds i8, i8* %202, i64 64
  %212 = bitcast i8* %211 to i32*
  store i32 %201, i32* %212, align 4, !noalias !15
  %213 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213) #12, !noalias !8
  %214 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %215 = ptrtoint i8* %202 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %214, align 8, !noalias !20
  %216 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %216, align 8, !noalias !20
  %217 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %217) #12, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213) #12, !noalias !8
  %218 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %218) #12, !noalias !8
  %219 = getelementptr inbounds %"class.base::WeakPtr.1904", %"class.base::WeakPtr.1904"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %219) #12, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %195) #12, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194)
  %220 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220)
  %221 = bitcast %"class.WTF::CrossThreadOnceFunction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %221)
  %222 = bitcast %"class.base::SequencedTaskRunner"* %185 to %"class.base::TaskRunner"*
  %223 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %223, align 8
  %224 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %225 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %215, i64* %225, align 8, !alias.scope !23
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %224, align 8, !noalias !23
  %226 = bitcast %"class.base::SequencedTaskRunner"* %185 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %227 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %226, align 8
  %228 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %227, align 8
  %229 = call zeroext i1 %228(%"class.base::TaskRunner"* %222, %"class.base::Location"* nonnull dereferenceable(32) %20, %"class.base::OnceCallback"* nonnull %4, i64 0) #12
  %230 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %230) #12
  %231 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %231) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %221)
  %232 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %21, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %232) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %192) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %187) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %186) #12
  br label %289

233:                                              ; preds = %175
  %234 = call i8* @_Znwm(i64 16) #14
  %235 = bitcast i8* %234 to %"class.base::WaitableEvent"*
  call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* nonnull %235, i32 0, i32 1) #12
  %236 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 11, i32 0
  %237 = bitcast %"class.base::SingleThreadTaskRunner"** %236 to %"class.base::SequencedTaskRunner"**
  %238 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %237, align 8
  %239 = bitcast %"class.base::Location"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %239) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %23, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.7, i64 0, i64 0), i32 258) #12
  %240 = bitcast %"class.base::WeakPtr.1904"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %240) #12
  %241 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 1
  %242 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242) #12, !noalias !26
  %243 = getelementptr inbounds %"class.base::SupportsWeakPtr.357", %"class.base::SupportsWeakPtr.357"* %241, i64 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %243) #12, !noalias !26
  %244 = getelementptr inbounds %"class.base::SupportsWeakPtr.357", %"class.base::SupportsWeakPtr.357"* %241, i64 -17
  %245 = getelementptr inbounds %"class.base::WeakPtr.1904", %"class.base::WeakPtr.1904"* %25, i64 0, i32 0
  %246 = ptrtoint %"class.base::SupportsWeakPtr.357"* %244 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %245, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %246) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242) #12, !noalias !26
  %247 = ptrtoint i8* %234 to i64
  %248 = bitcast %"class.base::OnceCallback"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248)
  %249 = bitcast %"class.base::WeakPtr.1904"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %249) #12, !noalias !29
  %250 = getelementptr inbounds %"class.base::WeakPtr.1904", %"class.base::WeakPtr.1904"* %12, i64 0, i32 0, i32 0
  %251 = getelementptr inbounds %"class.base::WeakPtr.1904", %"class.base::WeakPtr.1904"* %25, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %250, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %251) #12, !noalias !29
  %252 = getelementptr inbounds %"class.base::WeakPtr.1904", %"class.base::WeakPtr.1904"* %12, i64 0, i32 0, i32 1
  %253 = getelementptr inbounds %"class.base::WeakPtr.1904", %"class.base::WeakPtr.1904"* %25, i64 0, i32 0, i32 1
  %254 = load i64, i64* %253, align 8, !noalias !32
  store i64 %254, i64* %252, align 8, !alias.scope !35, !noalias !29
  %255 = load i32, i32* %42, align 4, !noalias !29
  %256 = call i8* @_Znwm(i64 80) #14, !noalias !36
  %257 = bitcast i8* %256 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %257, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22ScriptProcessorHandlerEFvjPNS_13WaitableEventEEJNS_7WeakPtrIS4_EEjN3WTF28CrossThreadUnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink22ScriptProcessorHandlerEFvjPNS_13WaitableEventEEJNS_7WeakPtrIS3_EEjN3WTF28CrossThreadUnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink22ScriptProcessorHandlerEFvjPNS_13WaitableEventEEJNS_7WeakPtrIS4_EEjN3WTF28CrossThreadUnretainedWrapperIS5_EEEEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE) #12, !noalias !36
  %258 = getelementptr inbounds i8, i8* %256, i64 32
  %259 = bitcast i8* %258 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ScriptProcessorHandler"*, i32, %"class.base::WaitableEvent"*)* @_ZN5blink22ScriptProcessorHandler38FireProcessEventForOfflineAudioContextEjPN4base13WaitableEventE to i64), i64 0>, <2 x i64>* %259, align 8, !noalias !36
  %260 = getelementptr inbounds i8, i8* %256, i64 48
  %261 = bitcast i8* %260 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %261, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %250) #12, !noalias !36
  %262 = getelementptr inbounds i8, i8* %256, i64 56
  %263 = bitcast i8* %262 to i64*
  %264 = load i64, i64* %252, align 8, !noalias !36
  store i64 %264, i64* %263, align 8, !noalias !36
  %265 = getelementptr inbounds i8, i8* %256, i64 64
  %266 = bitcast i8* %265 to i32*
  store i32 %255, i32* %266, align 4, !noalias !36
  %267 = getelementptr inbounds i8, i8* %256, i64 72
  %268 = bitcast i8* %267 to i64*
  store i64 %247, i64* %268, align 8, !noalias !36
  %269 = bitcast %"class.base::OnceCallback"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %269) #12, !noalias !29
  %270 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0, i32 0, i32 0
  %271 = ptrtoint i8* %256 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %270, align 8, !noalias !41
  %272 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %272, align 8, !noalias !41
  %273 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %273) #12, !noalias !41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %269) #12, !noalias !29
  %274 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %274) #12, !noalias !29
  %275 = getelementptr inbounds %"class.base::WeakPtr.1904", %"class.base::WeakPtr.1904"* %12, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %275) #12, !noalias !29
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %249) #12, !noalias !29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248)
  %276 = bitcast %"class.base::OnceCallback"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276)
  %277 = bitcast %"class.WTF::CrossThreadOnceFunction"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %277)
  %278 = bitcast %"class.base::SequencedTaskRunner"* %238 to %"class.base::TaskRunner"*
  %279 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %279, align 8
  %280 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %281 = bitcast %"class.base::OnceCallback"* %15 to i64*
  store i64 %271, i64* %281, align 8, !alias.scope !44
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %280, align 8, !noalias !44
  %282 = bitcast %"class.base::SequencedTaskRunner"* %238 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %283 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %282, align 8
  %284 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %283, align 8
  %285 = call zeroext i1 %284(%"class.base::TaskRunner"* %278, %"class.base::Location"* nonnull dereferenceable(32) %23, %"class.base::OnceCallback"* nonnull %15, i64 0) #12
  %286 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %15, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %286) #12
  %287 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %16, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %287) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %277)
  %288 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %24, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %288) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %245) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %240) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %239) #12
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* nonnull %235) #12
  call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* nonnull %235) #12
  call void @_ZdlPv(i8* nonnull %234) #14
  br label %289

289:                                              ; preds = %233, %182
  %290 = load i32, i32* %42, align 8
  %291 = sub i32 1, %290
  store i32 %291, i32* %42, align 8
  br label %292

292:                                              ; preds = %172, %289
  %293 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), align 16
  %294 = and i8 %293, 25
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %302, label %296, !prof !4

296:                                              ; preds = %292
  %297 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %298 = bitcast %"class.base::TimeTicks"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %298) #12
  %299 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %17, i64 0, i32 0, i32 0
  %300 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %300, i64* %299, align 8
  %301 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 69, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %297, %"class.base::TimeTicks"* nonnull dereferenceable(8) %17, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %298) #12
  br label %302

302:                                              ; preds = %296, %292, %80
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #12
  %303 = icmp eq %"class.blink::AudioBus"* %38, null
  br i1 %303, label %341, label %304

304:                                              ; preds = %302
  %305 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %38, i64 0, i32 0, i32 0
  %306 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = atomicrmw sub i32* %306, i32 1 acq_rel
  %308 = icmp eq i32 %307, 1
  br i1 %308, label %309, label %341

309:                                              ; preds = %304
  %310 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %305, i64 2
  %311 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %305, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i32, i32* %311, align 4
  %313 = icmp eq i32 %312, 0
  %314 = bitcast %"class.base::RefCountedThreadSafe.296"* %310 to %"class.blink::AudioChannel"**
  br i1 %313, label %332, label %315, !prof !3

315:                                              ; preds = %309
  %316 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %314, align 8
  %317 = zext i32 %312 to i64
  %318 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %316, i64 %317
  br label %319

319:                                              ; preds = %328, %315
  %320 = phi %"class.blink::AudioChannel"* [ %329, %328 ], [ %316, %315 ]
  %321 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %320, i64 0, i32 2, i32 0, i32 0, i32 0
  %322 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %321, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %321, align 8
  %323 = icmp eq %"class.blink::AudioArray"* %322, null
  br i1 %323, label %328, label %324

324:                                              ; preds = %319
  %325 = bitcast %"class.blink::AudioArray"* %322 to i8**
  %326 = load i8*, i8** %325, align 8
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %326) #12
  %327 = bitcast %"class.blink::AudioArray"* %322 to i8*
  call void @free(i8* %327) #12
  br label %328

328:                                              ; preds = %324, %319
  %329 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %320, i64 1
  %330 = icmp eq %"class.blink::AudioChannel"* %329, %318
  br i1 %330, label %331, label %319

331:                                              ; preds = %328
  store i32 0, i32* %311, align 4
  br label %332

332:                                              ; preds = %331, %309
  %333 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %314, align 8
  %334 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %305, i64 6
  %335 = bitcast %"class.base::RefCountedThreadSafe.296"* %334 to %"class.blink::AudioChannel"*
  %336 = icmp eq %"class.blink::AudioChannel"* %333, %335
  br i1 %336, label %339, label %337, !prof !4

337:                                              ; preds = %332
  %338 = bitcast %"class.base::RefCountedThreadSafe.296"* %310 to %"class.WTF::VectorBuffer.298"*
  call void @_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.298"* %338, %"class.blink::AudioChannel"* %333) #12
  br label %339

339:                                              ; preds = %337, %332
  %340 = bitcast %"class.blink::AudioBus"* %38 to i8*
  call void @free(i8* %340) #12
  br label %341

341:                                              ; preds = %302, %304, %339
  ret void
}

declare dereferenceable(104) %"class.blink::AudioNodeInput"* @_ZN5blink12AudioHandler5InputEj(%"class.blink::AudioHandler"*, i32) local_unnamed_addr #1

declare %"class.blink::AudioBus"* @_ZN5blink14AudioNodeInput3BusEv(%"class.blink::AudioNodeInput"*) local_unnamed_addr #1

declare dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"*, i32) local_unnamed_addr #1

declare %"class.blink::AudioBus"* @_ZNK5blink15AudioNodeOutput3BusEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.361"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17SharedAudioBufferENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.358"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.27, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.361"*, %"class.std::__1::unique_ptr.361"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.361"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.361"* %26
}

declare void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRjEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4)) local_unnamed_addr #4 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #12
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 2, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i32, i32* %8, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #12
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #12
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #12
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #12
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #12
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #14
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  ret i64 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN5blink8AudioBus16SetChannelMemoryEjPfj(%"class.blink::AudioBus"*, i32, float*, i32) local_unnamed_addr #1

declare void @_ZN5blink8AudioBus8CopyFromERKS0_NS0_21ChannelInterpretationE(%"class.blink::AudioBus"*, %"class.blink::AudioBus"* dereferenceable(96), i32) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ScriptProcessorHandler16FireProcessEventEj(%"class.blink::ScriptProcessorHandler"*, i32) #0 align 2 {
  %3 = bitcast %"class.blink::ScriptProcessorHandler"* %0 to %"class.blink::AudioHandler"*
  %4 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %3) #12
  %5 = icmp eq %"class.blink::BaseAudioContext"* %4, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %3) #12
  %8 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv(%"class.blink::BaseAudioContext"* %7) #12
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %6
  %11 = tail call %"class.blink::AudioNode"* @_ZNK5blink12AudioHandler7GetNodeEv(%"class.blink::AudioHandler"* %3) #12
  %12 = icmp eq %"class.blink::AudioNode"* %11, null
  br i1 %12, label %37, label %13

13:                                               ; preds = %10
  %14 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %3) #12
  %15 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %14, i64 0, i32 21, i32 0
  %16 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i64, i64* %17 acquire, align 8
  %19 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 6
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = add i64 %18, %21
  %23 = uitofp i64 %22 to double
  %24 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %3) #12
  %25 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %24, i64 0, i32 21, i32 0
  %26 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %25, align 8
  %27 = bitcast %"class.blink::AudioDestinationHandler"* %26 to double (%"class.blink::AudioDestinationHandler"*)***
  %28 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %27, align 8
  %29 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %28, i64 25
  %30 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %29, align 8
  %31 = tail call double %30(%"class.blink::AudioDestinationHandler"* %26) #12
  %32 = fptrunc double %31 to float
  %33 = fpext float %32 to double
  %34 = fdiv double %23, %33
  %35 = tail call %"class.blink::AudioNode"* @_ZNK5blink12AudioHandler7GetNodeEv(%"class.blink::AudioHandler"* %3) #12
  %36 = bitcast %"class.blink::AudioNode"* %35 to %"class.blink::ScriptProcessorNode"*
  tail call void @_ZN5blink19ScriptProcessorNode13DispatchEventEdj(%"class.blink::ScriptProcessorNode"* %36, double %34, i32 %1)
  br label %37

37:                                               ; preds = %10, %6, %2, %13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ScriptProcessorHandler38FireProcessEventForOfflineAudioContextEjPN4base13WaitableEventE(%"class.blink::ScriptProcessorHandler"*, i32, %"class.base::WaitableEvent"*) #0 align 2 {
  %4 = bitcast %"class.blink::ScriptProcessorHandler"* %0 to %"class.blink::AudioHandler"*
  %5 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %4) #12
  %6 = icmp eq %"class.blink::BaseAudioContext"* %5, null
  br i1 %6, label %42, label %7

7:                                                ; preds = %3
  %8 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %4) #12
  %9 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv(%"class.blink::BaseAudioContext"* %8) #12
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  br i1 %10, label %42, label %11

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 1
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %2) #12
  br label %42

14:                                               ; preds = %11
  %15 = tail call %"class.blink::AudioNode"* @_ZNK5blink12AudioHandler7GetNodeEv(%"class.blink::AudioHandler"* %4) #12
  %16 = icmp eq %"class.blink::AudioNode"* %15, null
  br i1 %16, label %41, label %17

17:                                               ; preds = %14
  %18 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %4) #12
  %19 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %18, i64 0, i32 21, i32 0
  %20 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i64, i64* %21 acquire, align 8
  %23 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 6
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = add i64 %22, %25
  %27 = uitofp i64 %26 to double
  %28 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %4) #12
  %29 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %28, i64 0, i32 21, i32 0
  %30 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %29, align 8
  %31 = bitcast %"class.blink::AudioDestinationHandler"* %30 to double (%"class.blink::AudioDestinationHandler"*)***
  %32 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %31, align 8
  %33 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %32, i64 25
  %34 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %33, align 8
  %35 = tail call double %34(%"class.blink::AudioDestinationHandler"* %30) #12
  %36 = fptrunc double %35 to float
  %37 = fpext float %36 to double
  %38 = fdiv double %27, %37
  %39 = tail call %"class.blink::AudioNode"* @_ZNK5blink12AudioHandler7GetNodeEv(%"class.blink::AudioHandler"* %4) #12
  %40 = bitcast %"class.blink::AudioNode"* %39 to %"class.blink::ScriptProcessorNode"*
  tail call void @_ZN5blink19ScriptProcessorNode13DispatchEventEdj(%"class.blink::ScriptProcessorNode"* %40, double %38, i32 %1)
  br label %41

41:                                               ; preds = %14, %17
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %2) #12
  br label %42

42:                                               ; preds = %7, %3, %41, %13
  ret void
}

declare void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

declare %"class.blink::AudioNode"* @_ZNK5blink12AudioHandler7GetNodeEv(%"class.blink::AudioHandler"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScriptProcessorNode13DispatchEventEdj(%"class.blink::ScriptProcessorNode"*, double, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::NotShared", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.blink::NotShared", align 8
  %8 = alloca %"class.base::TimeTicks", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.blink::NotShared", align 8
  %11 = alloca %"class.blink::NotShared", align 8
  %12 = alloca %"class.blink::NotShared", align 8
  %13 = alloca %"class.blink::NotShared", align 8
  store i32 %2, i32* %9, align 4
  %14 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), align 16
  %15 = and i8 %14, 25
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %23, label %17, !prof !4

17:                                               ; preds = %3
  %18 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %19 = bitcast %"class.base::TimeTicks"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %8, i64 0, i32 0, i32 0
  %21 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %21, i64* %20, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %18, %"class.base::TimeTicks"* nonnull dereferenceable(8) %8, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  br label %23

23:                                               ; preds = %3, %17
  %24 = phi i64 [ -6148914691236517206, %3 ], [ %22, %17 ]
  %25 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i64 0, i64 0), %17 ]
  %26 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), %17 ]
  %27 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 0
  %28 = call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %27) #12
  %29 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %28, i64 1, i32 3
  %30 = bitcast double* %29 to %"class.WTF::MutexBase"*
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %30) #12
  %31 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), align 16
  %32 = and i8 %31, 25
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34, !prof !4

34:                                               ; preds = %23
  %35 = call i64 @_ZN20trace_event_internal13AddTraceEventIRjEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i32* nonnull dereferenceable(4) %9)
  br label %36

36:                                               ; preds = %23, %34
  %37 = phi i64 [ -6148914691236517206, %23 ], [ %35, %34 ]
  %38 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %23 ], [ getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), %34 ]
  %39 = phi i8* [ null, %23 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), %34 ]
  %40 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 2, i32 0
  %41 = load i32, i32* %9, align 4
  %42 = call dereferenceable(8) %"class.blink::Member.1870"* @_ZN3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1867"* %40, i32 %41)
  %43 = getelementptr inbounds %"class.blink::Member.1870", %"class.blink::Member.1870"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %43, align 8
  %45 = icmp eq %"class.blink::AudioBuffer"* %44, null
  br i1 %45, label %163, label %46

46:                                               ; preds = %36
  %47 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 4
  %48 = getelementptr inbounds %"class.blink::Member.1870", %"class.blink::Member.1870"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %48, align 8
  %50 = bitcast %"class.blink::NotShared"* %7 to i8*
  %51 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %49, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %72, label %54

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %7, i64 0, i32 0, i32 0, i32 0
  br label %59

56:                                               ; preds = %59
  %57 = load i32, i32* %51, align 4
  %58 = icmp ult i32 %67, %57
  br i1 %58, label %59, label %68

59:                                               ; preds = %56, %54
  %60 = phi i32 [ 0, %54 ], [ %67, %56 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #12
  call void @_ZN5blink11AudioBuffer14getChannelDataEj(%"class.blink::NotShared"* nonnull sret %7, %"class.blink::AudioBuffer"* %49, i32 %60) #12
  %61 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %55, align 8
  %62 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %61, i64 0, i32 0, i32 3, i32 0, i32 0
  %63 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %63, i64 0, i32 2
  %65 = load i8, i8* %64, align 8, !range !2
  %66 = icmp eq i8 %65, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #12
  %67 = add nuw i32 %60, 1
  br i1 %66, label %56, label %90

68:                                               ; preds = %56
  %69 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %48, align 8
  %70 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %69, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  br label %72

72:                                               ; preds = %68, %46
  %73 = phi i32 [ %71, %68 ], [ 0, %46 ]
  %74 = phi %"class.blink::AudioBuffer"* [ %69, %68 ], [ %49, %46 ]
  %75 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %44, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, %73
  br i1 %77, label %78, label %90

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %44, i64 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %74, i64 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %80, %82
  br i1 %83, label %84, label %90

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %44, i64 0, i32 1
  %86 = load float, float* %85, align 8
  %87 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %74, i64 0, i32 1
  %88 = load float, float* %87, align 8
  %89 = fcmp oeq float %86, %88
  br i1 %89, label %124, label %90

90:                                               ; preds = %59, %72, %78, %84
  %91 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), align 16
  %92 = and i8 %91, 25
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %100, label %94, !prof !4

94:                                               ; preds = %90
  %95 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %96 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #12
  %97 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %98 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %98, i64* %97, align 8
  %99 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.23, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %95, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #12
  br label %100

100:                                              ; preds = %90, %94
  %101 = phi i64 [ -6148914691236517206, %90 ], [ %99, %94 ]
  %102 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %90 ], [ getelementptr inbounds ([62 x i8], [62 x i8]* @.str.23, i64 0, i64 0), %94 ]
  %103 = phi i8* [ null, %90 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), %94 ]
  %104 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %44, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %44, i64 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %44, i64 0, i32 1
  %109 = load float, float* %108, align 8
  %110 = call %"class.blink::AudioBuffer"* @_ZN5blink11AudioBuffer6CreateEjjf(i32 %105, i32 %107, float %109) #12
  %111 = ptrtoint %"class.blink::AudioBuffer"* %110 to i64
  %112 = bitcast %"class.blink::Member.1870"* %47 to i64*
  store atomic i64 %111, i64* %112 monotonic, align 8
  %113 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %118, label %115

115:                                              ; preds = %100
  %116 = bitcast %"class.blink::AudioBuffer"* %110 to i8*
  %117 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %116) #12
  br label %118

118:                                              ; preds = %100, %115
  %119 = icmp eq i8* %103, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %118
  %121 = load i8, i8* %103, align 1
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %124, label %123

123:                                              ; preds = %120
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %103, i8* %102, i64 %101) #12
  br label %124

124:                                              ; preds = %123, %120, %118, %84
  %125 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %44, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %163, label %128

128:                                              ; preds = %124
  %129 = bitcast %"class.blink::NotShared"* %10 to i8*
  %130 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %10, i64 0, i32 0, i32 0, i32 0
  %131 = bitcast %"class.blink::NotShared"* %11 to i8*
  %132 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %11, i64 0, i32 0, i32 0, i32 0
  %133 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %44, i64 0, i32 2
  br label %134

134:                                              ; preds = %128, %155
  %135 = phi i32 [ 0, %128 ], [ %160, %155 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #12
  call void @_ZN5blink11AudioBuffer14getChannelDataEj(%"class.blink::NotShared"* nonnull sret %10, %"class.blink::AudioBuffer"* nonnull %44, i32 %135) #12
  %136 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %130, align 8
  %137 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %136, i64 0, i32 0, i32 3, i32 0, i32 0
  %138 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %138, i64 0, i32 1, i32 0, i32 0
  %140 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %139, align 8
  %141 = icmp eq %"class.v8::BackingStore"* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %134
  %143 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %140) #12
  br label %144

144:                                              ; preds = %134, %142
  %145 = phi i8* [ %143, %142 ], [ null, %134 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #12
  %146 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %48, align 8
  call void @_ZN5blink11AudioBuffer14getChannelDataEj(%"class.blink::NotShared"* nonnull sret %11, %"class.blink::AudioBuffer"* %146, i32 %135) #12
  %147 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %132, align 8
  %148 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %147, i64 0, i32 0, i32 3, i32 0, i32 0
  %149 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %149, i64 0, i32 1, i32 0, i32 0
  %151 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %150, align 8
  %152 = icmp eq %"class.v8::BackingStore"* %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %144
  %154 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %151) #12
  br label %155

155:                                              ; preds = %144, %153
  %156 = phi i8* [ %154, %153 ], [ null, %144 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #12
  %157 = load i32, i32* %133, align 4
  %158 = zext i32 %157 to i64
  %159 = shl nuw nsw i64 %158, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %156, i8* align 4 %145, i64 %159, i1 false)
  %160 = add nuw i32 %135, 1
  %161 = load i32, i32* %125, align 4
  %162 = icmp ult i32 %160, %161
  br i1 %162, label %134, label %163

163:                                              ; preds = %155, %124, %36
  %164 = icmp eq i8* %39, null
  br i1 %164, label %169, label %165

165:                                              ; preds = %163
  %166 = load i8, i8* %39, align 1
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %169, label %168

168:                                              ; preds = %165
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %39, i8* %38, i64 %37) #12
  br label %169

169:                                              ; preds = %163, %165, %168
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %30) #12
  %170 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 5
  %171 = getelementptr inbounds %"class.blink::Member.1870", %"class.blink::Member.1870"* %170, i64 0, i32 0, i32 0
  %172 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %171, align 8
  call void @_ZN5blink11AudioBuffer4ZeroEv(%"class.blink::AudioBuffer"* %172) #12
  %173 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 4, i32 0, i32 0
  %175 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %174, align 8
  %176 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %171, align 8
  %177 = call %"class.blink::AudioProcessingEvent"* @_ZN5blink20AudioProcessingEvent6CreateEPNS_11AudioBufferES2_d(%"class.blink::AudioBuffer"* %175, %"class.blink::AudioBuffer"* %176, double %1) #12
  %178 = getelementptr inbounds %"class.blink::AudioProcessingEvent", %"class.blink::AudioProcessingEvent"* %177, i64 0, i32 0
  %179 = call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %173, %"class.blink::Event"* dereferenceable(104) %178) #12
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %30) #12
  %180 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), align 16
  %181 = and i8 %180, 25
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %185, label %183, !prof !4

183:                                              ; preds = %169
  %184 = call i64 @_ZN20trace_event_internal13AddTraceEventIRjEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.24, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i32* nonnull dereferenceable(4) %9)
  br label %185

185:                                              ; preds = %169, %183
  %186 = phi i64 [ -6148914691236517206, %169 ], [ %184, %183 ]
  %187 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %169 ], [ getelementptr inbounds ([60 x i8], [60 x i8]* @.str.24, i64 0, i64 0), %183 ]
  %188 = phi i8* [ null, %169 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), %183 ]
  %189 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 3, i32 0
  %190 = load i32, i32* %9, align 4
  %191 = call dereferenceable(8) %"class.blink::Member.1870"* @_ZN3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1867"* %189, i32 %190)
  %192 = getelementptr inbounds %"class.blink::Member.1870", %"class.blink::Member.1870"* %191, i64 0, i32 0, i32 0
  %193 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %192, align 8
  %194 = icmp eq %"class.blink::AudioBuffer"* %193, null
  br i1 %194, label %310, label %195

195:                                              ; preds = %185
  %196 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %171, align 8
  %197 = bitcast %"class.blink::NotShared"* %4 to i8*
  %198 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %196, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %219, label %201

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %4, i64 0, i32 0, i32 0, i32 0
  br label %206

203:                                              ; preds = %206
  %204 = load i32, i32* %198, align 4
  %205 = icmp ult i32 %214, %204
  br i1 %205, label %206, label %215

206:                                              ; preds = %203, %201
  %207 = phi i32 [ 0, %201 ], [ %214, %203 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %197) #12
  call void @_ZN5blink11AudioBuffer14getChannelDataEj(%"class.blink::NotShared"* nonnull sret %4, %"class.blink::AudioBuffer"* %196, i32 %207) #12
  %208 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %202, align 8
  %209 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %208, i64 0, i32 0, i32 3, i32 0, i32 0
  %210 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %209, align 8
  %211 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %210, i64 0, i32 2
  %212 = load i8, i8* %211, align 8, !range !2
  %213 = icmp eq i8 %212, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #12
  %214 = add nuw i32 %207, 1
  br i1 %213, label %203, label %237

215:                                              ; preds = %203
  %216 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %171, align 8
  %217 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %216, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %218 = load i32, i32* %217, align 4
  br label %219

219:                                              ; preds = %215, %195
  %220 = phi i32 [ %218, %215 ], [ 0, %195 ]
  %221 = phi %"class.blink::AudioBuffer"* [ %216, %215 ], [ %196, %195 ]
  %222 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %193, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, %220
  br i1 %224, label %225, label %237

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %193, i64 0, i32 2
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %221, i64 0, i32 2
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %227, %229
  br i1 %230, label %231, label %237

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %193, i64 0, i32 1
  %233 = load float, float* %232, align 8
  %234 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %221, i64 0, i32 1
  %235 = load float, float* %234, align 8
  %236 = fcmp oeq float %233, %235
  br i1 %236, label %271, label %237

237:                                              ; preds = %206, %219, %225, %231
  %238 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), align 16
  %239 = and i8 %238, 25
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %247, label %241, !prof !4

241:                                              ; preds = %237
  %242 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %243 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243) #12
  %244 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %245 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %245, i64* %244, align 8
  %246 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.25, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %242, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243) #12
  br label %247

247:                                              ; preds = %237, %241
  %248 = phi i64 [ -6148914691236517206, %237 ], [ %246, %241 ]
  %249 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %237 ], [ getelementptr inbounds ([63 x i8], [63 x i8]* @.str.25, i64 0, i64 0), %241 ]
  %250 = phi i8* [ null, %237 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), %241 ]
  %251 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %193, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %252 = load i32, i32* %251, align 4
  %253 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %193, i64 0, i32 2
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %193, i64 0, i32 1
  %256 = load float, float* %255, align 8
  %257 = call %"class.blink::AudioBuffer"* @_ZN5blink11AudioBuffer6CreateEjjf(i32 %252, i32 %254, float %256) #12
  %258 = ptrtoint %"class.blink::AudioBuffer"* %257 to i64
  %259 = bitcast %"class.blink::Member.1870"* %170 to i64*
  store atomic i64 %258, i64* %259 monotonic, align 8
  %260 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %265, label %262

262:                                              ; preds = %247
  %263 = bitcast %"class.blink::AudioBuffer"* %257 to i8*
  %264 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %263) #12
  br label %265

265:                                              ; preds = %247, %262
  %266 = icmp eq i8* %250, null
  br i1 %266, label %271, label %267

267:                                              ; preds = %265
  %268 = load i8, i8* %250, align 1
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %271, label %270

270:                                              ; preds = %267
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %250, i8* %249, i64 %248) #12
  br label %271

271:                                              ; preds = %270, %267, %265, %231
  %272 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %193, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %273 = load i32, i32* %272, align 4
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %310, label %275

275:                                              ; preds = %271
  %276 = bitcast %"class.blink::NotShared"* %12 to i8*
  %277 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %12, i64 0, i32 0, i32 0, i32 0
  %278 = bitcast %"class.blink::NotShared"* %13 to i8*
  %279 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %13, i64 0, i32 0, i32 0, i32 0
  %280 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %193, i64 0, i32 2
  br label %281

281:                                              ; preds = %275, %302
  %282 = phi i32 [ 0, %275 ], [ %307, %302 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #12
  %283 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %171, align 8
  call void @_ZN5blink11AudioBuffer14getChannelDataEj(%"class.blink::NotShared"* nonnull sret %12, %"class.blink::AudioBuffer"* %283, i32 %282) #12
  %284 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %277, align 8
  %285 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %284, i64 0, i32 0, i32 3, i32 0, i32 0
  %286 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %285, align 8
  %287 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %286, i64 0, i32 1, i32 0, i32 0
  %288 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %287, align 8
  %289 = icmp eq %"class.v8::BackingStore"* %288, null
  br i1 %289, label %292, label %290

290:                                              ; preds = %281
  %291 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %288) #12
  br label %292

292:                                              ; preds = %281, %290
  %293 = phi i8* [ %291, %290 ], [ null, %281 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #12
  call void @_ZN5blink11AudioBuffer14getChannelDataEj(%"class.blink::NotShared"* nonnull sret %13, %"class.blink::AudioBuffer"* nonnull %193, i32 %282) #12
  %294 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %279, align 8
  %295 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %294, i64 0, i32 0, i32 3, i32 0, i32 0
  %296 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %295, align 8
  %297 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %296, i64 0, i32 1, i32 0, i32 0
  %298 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %297, align 8
  %299 = icmp eq %"class.v8::BackingStore"* %298, null
  br i1 %299, label %302, label %300

300:                                              ; preds = %292
  %301 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %298) #12
  br label %302

302:                                              ; preds = %292, %300
  %303 = phi i8* [ %301, %300 ], [ null, %292 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #12
  %304 = load i32, i32* %280, align 4
  %305 = zext i32 %304 to i64
  %306 = shl nuw nsw i64 %305, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %303, i8* align 4 %293, i64 %306, i1 false)
  %307 = add nuw i32 %282, 1
  %308 = load i32, i32* %272, align 4
  %309 = icmp ult i32 %307, %308
  br i1 %309, label %281, label %310

310:                                              ; preds = %302, %271, %185
  %311 = icmp eq i8* %188, null
  br i1 %311, label %316, label %312

312:                                              ; preds = %310
  %313 = load i8, i8* %188, align 1
  %314 = icmp eq i8 %313, 0
  br i1 %314, label %316, label %315

315:                                              ; preds = %312
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %188, i8* %187, i64 %186) #12
  br label %316

316:                                              ; preds = %310, %312, %315
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %30) #12
  %317 = icmp eq i8* %26, null
  br i1 %317, label %322, label %318

318:                                              ; preds = %316
  %319 = load i8, i8* %26, align 1
  %320 = icmp eq i8 %319, 0
  br i1 %320, label %322, label %321

321:                                              ; preds = %318
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %26, i8* %25, i64 %24) #12
  br label %322

322:                                              ; preds = %316, %318, %321
  ret void
}

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink22ScriptProcessorHandler22RequiresTailProcessingEv(%"class.blink::ScriptProcessorHandler"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden double @_ZNK5blink22ScriptProcessorHandler8TailTimeEv(%"class.blink::ScriptProcessorHandler"* nocapture readnone) unnamed_addr #5 align 2 {
  ret double 0x7FF0000000000000
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden double @_ZNK5blink22ScriptProcessorHandler11LatencyTimeEv(%"class.blink::ScriptProcessorHandler"* nocapture readnone) unnamed_addr #5 align 2 {
  ret double 0x7FF0000000000000
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ScriptProcessorHandler15SetChannelCountEjRNS_14ExceptionStateE(%"class.blink::ScriptProcessorHandler"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.WTF::StringAppend.1912", align 8
  %10 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %6, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %11, align 8
  %12 = bitcast %"class.blink::ScriptProcessorHandler"* %0 to %"class.blink::AudioHandler"*
  %13 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %12) #12
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %6, %"class.blink::BaseAudioContext"* %13) #12
  %14 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 0, i32 19
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, %1
  br i1 %16, label %304, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #12
  %20 = bitcast %"class.WTF::StringAppend.1912"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %23 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %24 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %25 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 32, i1 false) #12
  store i8* %22, i8** %23, align 8
  %26 = urem i32 %15, 10
  %27 = udiv i32 %15, 10
  %28 = trunc i32 %26 to i8
  %29 = or i8 %28, 48
  store i8 %29, i8* %22, align 1
  %30 = icmp ugt i32 %15, 9
  br i1 %30, label %31, label %46

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %32, i8** %23, align 8
  %33 = urem i32 %27, 10
  %34 = trunc i32 %33 to i8
  %35 = or i8 %34, 48
  store i8 %35, i8* %32, align 2
  %36 = icmp ugt i32 %15, 99
  br i1 %36, label %37, label %44

37:                                               ; preds = %31
  %38 = udiv i32 %15, 100
  %39 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %39, i8** %23, align 8
  %40 = urem i32 %38, 10
  %41 = trunc i32 %40 to i8
  %42 = or i8 %41, 48
  store i8 %42, i8* %39, align 1
  %43 = icmp ugt i32 %15, 999
  br i1 %43, label %48, label %57

44:                                               ; preds = %31
  %45 = ptrtoint i8* %32 to i64
  br label %60

46:                                               ; preds = %17
  %47 = ptrtoint i8* %22 to i64
  br label %60

48:                                               ; preds = %37, %48
  %49 = phi i32 [ %51, %48 ], [ %38, %37 ]
  %50 = load i8*, i8** %23, align 8
  %51 = udiv i32 %49, 10
  %52 = getelementptr inbounds i8, i8* %50, i64 -1
  store i8* %52, i8** %23, align 8
  %53 = urem i32 %51, 10
  %54 = trunc i32 %53 to i8
  %55 = or i8 %54, 48
  store i8 %55, i8* %52, align 1
  %56 = icmp ugt i32 %49, 99
  br i1 %56, label %48, label %57

57:                                               ; preds = %48, %37
  %58 = bitcast i8** %23 to i64*
  %59 = load i64, i64* %58, align 8
  br label %60

60:                                               ; preds = %57, %44, %46
  %61 = phi i64 [ %47, %46 ], [ %59, %57 ], [ %45, %44 ]
  %62 = ptrtoint i8* %25 to i64
  %63 = sub i64 %62, %61
  %64 = trunc i64 %63 to i32
  store i32 %64, i32* %24, align 8
  %65 = inttoptr i64 %61 to i8*
  %66 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %65, i32 %64) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #12
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %143, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #12
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %75
  call void @llvm.trap() #12
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %83, %68
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = load atomic i32, i32* %69 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %100

90:                                               ; preds = %85
  %91 = zext i32 %86 to i33
  %92 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #12
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %90
  call void @llvm.trap() #12
  unreachable

98:                                               ; preds = %90
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %73, align 4
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i32 [ %99, %98 ], [ %86, %85 ]
  %102 = load atomic i32, i32* %69 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %100
  %106 = add i32 %101, -1
  store i32 %106, i32* %73, align 4
  br label %107

107:                                              ; preds = %105, %100
  %108 = phi i32 [ %106, %105 ], [ %101, %100 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #12
  br label %111

111:                                              ; preds = %107, %110
  %112 = load atomic i32, i32* %69 monotonic, align 4, !noalias !47
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = load i32, i32* %73, align 4
  br i1 %114, label %116, label %126

116:                                              ; preds = %111
  %117 = zext i32 %115 to i33
  %118 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %117, i33 1) #12
  %119 = extractvalue { i33, i1 } %118, 1
  %120 = extractvalue { i33, i1 } %118, 0
  %121 = icmp slt i33 %120, 0
  %122 = or i1 %119, %121
  br i1 %122, label %123, label %124, !prof !3

123:                                              ; preds = %116
  call void @llvm.trap() #12, !noalias !47
  unreachable

124:                                              ; preds = %116
  %125 = trunc i33 %120 to i32
  store i32 %125, i32* %73, align 4, !noalias !47
  br label %126

126:                                              ; preds = %111, %124
  %127 = phi i32 [ %125, %124 ], [ %115, %111 ]
  %128 = bitcast %"class.WTF::StringAppend.1912"* %9 to i64*
  store i64 ptrtoint ([37 x i8]* @.str.8 to i64), i64* %128, align 8, !alias.scope !47
  %129 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %129, align 8, !alias.scope !47
  %130 = load atomic i32, i32* %69 monotonic, align 4, !noalias !47
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %147

133:                                              ; preds = %126
  %134 = zext i32 %127 to i33
  %135 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %134, i33 1) #12
  %136 = extractvalue { i33, i1 } %135, 1
  %137 = extractvalue { i33, i1 } %135, 0
  %138 = icmp slt i33 %137, 0
  %139 = or i1 %136, %138
  br i1 %139, label %140, label %141, !prof !3

140:                                              ; preds = %133
  call void @llvm.trap() #12, !noalias !47
  unreachable

141:                                              ; preds = %133
  %142 = trunc i33 %137 to i32
  store i32 %142, i32* %73, align 4, !noalias !47
  br label %147

143:                                              ; preds = %60
  %144 = bitcast %"class.WTF::StringAppend.1912"* %9 to i64*
  store i64 ptrtoint ([37 x i8]* @.str.8 to i64), i64* %144, align 8, !alias.scope !47
  %145 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %145, align 8, !alias.scope !47
  %146 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8** %146, align 8, !alias.scope !47
  br label %159

147:                                              ; preds = %141, %126
  %148 = phi i32 [ %142, %141 ], [ %127, %126 ]
  %149 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8** %149, align 8, !alias.scope !47
  %150 = load atomic i32, i32* %69 monotonic, align 4, !noalias !47
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %147
  %154 = add i32 %148, -1
  store i32 %154, i32* %73, align 4, !noalias !47
  br label %155

155:                                              ; preds = %153, %147
  %156 = phi i32 [ %154, %153 ], [ %148, %147 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #12, !noalias !47
  br label %159

159:                                              ; preds = %143, %155, %158
  %160 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %160) #12
  %161 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 11
  %162 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 2
  %163 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 3
  %164 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 32, i1 false) #12
  store i8* %161, i8** %162, align 8
  %165 = urem i32 %1, 10
  %166 = udiv i32 %1, 10
  %167 = trunc i32 %165 to i8
  %168 = or i8 %167, 48
  store i8 %168, i8* %161, align 1
  %169 = icmp ugt i32 %1, 9
  br i1 %169, label %170, label %185

170:                                              ; preds = %159
  %171 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 10
  store i8* %171, i8** %162, align 8
  %172 = urem i32 %166, 10
  %173 = trunc i32 %172 to i8
  %174 = or i8 %173, 48
  store i8 %174, i8* %171, align 2
  %175 = icmp ugt i32 %1, 99
  br i1 %175, label %176, label %183

176:                                              ; preds = %170
  %177 = udiv i32 %1, 100
  %178 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 9
  store i8* %178, i8** %162, align 8
  %179 = urem i32 %177, 10
  %180 = trunc i32 %179 to i8
  %181 = or i8 %180, 48
  store i8 %181, i8* %178, align 1
  %182 = icmp ugt i32 %1, 999
  br i1 %182, label %187, label %196

183:                                              ; preds = %170
  %184 = ptrtoint i8* %171 to i64
  br label %199

185:                                              ; preds = %159
  %186 = ptrtoint i8* %161 to i64
  br label %199

187:                                              ; preds = %176, %187
  %188 = phi i32 [ %190, %187 ], [ %177, %176 ]
  %189 = load i8*, i8** %162, align 8
  %190 = udiv i32 %188, 10
  %191 = getelementptr inbounds i8, i8* %189, i64 -1
  store i8* %191, i8** %162, align 8
  %192 = urem i32 %190, 10
  %193 = trunc i32 %192 to i8
  %194 = or i8 %193, 48
  store i8 %194, i8* %191, align 1
  %195 = icmp ugt i32 %188, 99
  br i1 %195, label %187, label %196

196:                                              ; preds = %187, %176
  %197 = bitcast i8** %162 to i64*
  %198 = load i64, i64* %197, align 8
  br label %199

199:                                              ; preds = %196, %183, %185
  %200 = phi i64 [ %186, %185 ], [ %198, %196 ], [ %184, %183 ]
  %201 = ptrtoint i8* %164 to i64
  %202 = sub i64 %201, %200
  %203 = trunc i64 %202 to i32
  store i32 %203, i32* %163, align 8
  %204 = inttoptr i64 %200 to i8*
  %205 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %204, i32 %203) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %160) #12
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* nonnull sret %8, %"class.WTF::StringAppend.1912"* nonnull dereferenceable(24) %9, %"class.WTF::StringImpl"* %205)
  %206 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %8)
  %207 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %207, align 8
  %208 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %209 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %208, align 8
  %210 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %209, align 8
  call void %210(%"class.blink::ExceptionState"* %2, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %7) #12
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %199
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #12
  br label %226

226:                                              ; preds = %199, %222, %225
  %227 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1, i32 0, i32 0
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %243, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  br i1 %234, label %237, label %239

237:                                              ; preds = %230
  %238 = add i32 %236, -1
  store i32 %238, i32* %235, align 4
  br label %239

239:                                              ; preds = %237, %230
  %240 = phi i32 [ %238, %237 ], [ %236, %230 ]
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %239
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %228) #12
  br label %243

243:                                              ; preds = %242, %239, %226
  %244 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %244, align 8
  %246 = icmp eq %"class.WTF::StringImpl"* %245, null
  br i1 %246, label %260, label %247

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  br i1 %251, label %254, label %256

254:                                              ; preds = %247
  %255 = add i32 %253, -1
  store i32 %255, i32* %252, align 4
  br label %256

256:                                              ; preds = %254, %247
  %257 = phi i32 [ %255, %254 ], [ %253, %247 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %256
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %245) #12
  br label %260

260:                                              ; preds = %243, %256, %259
  %261 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %261, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  br i1 %268, label %271, label %273

271:                                              ; preds = %264
  %272 = add i32 %270, -1
  store i32 %272, i32* %269, align 4
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %270, %264 ]
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #12
  br label %277

277:                                              ; preds = %260, %273, %276
  br i1 %67, label %303, label %278

278:                                              ; preds = %277
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = and i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  br i1 %282, label %285, label %287

285:                                              ; preds = %278
  %286 = add i32 %284, -1
  store i32 %286, i32* %283, align 4
  br label %287

287:                                              ; preds = %285, %278
  %288 = phi i32 [ %286, %285 ], [ %284, %278 ]
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %292

290:                                              ; preds = %287
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #12
  %291 = load i32, i32* %283, align 4
  br label %292

292:                                              ; preds = %287, %290
  %293 = phi i32 [ %288, %287 ], [ %291, %290 ]
  %294 = load atomic i32, i32* %279 monotonic, align 4
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = add i32 %293, -1
  store i32 %298, i32* %283, align 4
  br label %299

299:                                              ; preds = %297, %292
  %300 = phi i32 [ %298, %297 ], [ %293, %292 ]
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %303

302:                                              ; preds = %299
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #12
  br label %303

303:                                              ; preds = %277, %299, %302
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %304

304:                                              ; preds = %3, %303
  %305 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %11, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %305) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  ret void
}

declare void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"*, %"class.blink::BaseAudioContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.1912"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.1912", align 8
  %5 = bitcast %"class.WTF::StringAppend.1912"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.1912"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #12
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #12
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #12
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringAppend.1912"* nonnull byval(%"class.WTF::StringAppend.1912") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringAppend.1912"* nonnull byval(%"class.WTF::StringAppend.1912") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2105", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2105", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2108", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2108", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %11 = bitcast %"class.WTF::StringTypeAdapter.2108"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %13 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"* nonnull %5, i8* %13) #12
  %14 = bitcast %"class.WTF::StringTypeAdapter.2108"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #12
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"* nonnull %4, i8* %16) #12
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %21 = select i1 %19, %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"* %18
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  br i1 %25, label %92, label %26

26:                                               ; preds = %1
  %27 = icmp eq %"class.WTF::StringImpl"* %9, null
  %28 = select i1 %27, %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"* %9
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %92, label %33

33:                                               ; preds = %26
  %34 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %35 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %36 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %35, i8** nonnull dereferenceable(8) %6) #12
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %39 = bitcast %"class.WTF::StringTypeAdapter.2105"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %3, i64 0, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false) #12
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %33
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %52

46:                                               ; preds = %33
  %47 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  %51 = bitcast %"class.WTF::StringImpl"* %50 to i8*
  br label %52

52:                                               ; preds = %44, %46
  %53 = phi i8* [ null, %44 ], [ %51, %46 ]
  %54 = phi i64 [ %45, %44 ], [ %47, %46 ]
  %55 = phi i32 [ 0, %44 ], [ %49, %46 ]
  %56 = bitcast %"class.WTF::StringTypeAdapter.2105"* %3 to i64*
  store i64 %54, i64* %56, align 8
  store i8* %53, i8** %40, align 8
  store i32 %55, i32* %41, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1912"* %38, i8* %37) #12
  %57 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %3, i64 0, i32 0
  %58 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1912"* %38) #12
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %37, i64 %59
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2106"* nonnull %57, i8* %60) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #12
  %61 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %61, label %151, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %79

69:                                               ; preds = %62
  %70 = zext i32 %68 to i33
  %71 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #12
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !3

76:                                               ; preds = %69
  call void @llvm.trap() #12
  unreachable

77:                                               ; preds = %69
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %67, align 4
  br label %79

79:                                               ; preds = %62, %77
  %80 = phi i32 [ %78, %77 ], [ %68, %62 ]
  %81 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %82 = load atomic i32, i32* %63 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %87 = add i32 %80, -1
  store i32 %87, i32* %86, align 4
  br label %88

88:                                               ; preds = %85, %79
  %89 = phi i32 [ %87, %85 ], [ %80, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %151

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #12
  br label %151

92:                                               ; preds = %26, %1
  %93 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %94 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %95 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %94, i16** nonnull dereferenceable(8) %7) #12
  %96 = load i16*, i16** %7, align 8
  %97 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %98 = bitcast %"class.WTF::StringTypeAdapter.2105"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #12
  %99 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %2, i64 0, i32 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 24, i1 false) #12
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %92
  %104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %111

105:                                              ; preds = %92
  %106 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 1
  %110 = bitcast %"class.WTF::StringImpl"* %109 to i8*
  br label %111

111:                                              ; preds = %103, %105
  %112 = phi i8* [ null, %103 ], [ %110, %105 ]
  %113 = phi i64 [ %104, %103 ], [ %106, %105 ]
  %114 = phi i32 [ 0, %103 ], [ %108, %105 ]
  %115 = bitcast %"class.WTF::StringTypeAdapter.2105"* %2 to i64*
  store i64 %113, i64* %115, align 8
  store i8* %112, i8** %99, align 8
  store i32 %114, i32* %100, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1912"* %97, i16* %96) #12
  %116 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %2, i64 0, i32 0
  %117 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1912"* %97) #12
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds i16, i16* %96, i64 %118
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2106"* nonnull %116, i16* %119) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #12
  %120 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %120, label %151, label %121

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %138

128:                                              ; preds = %121
  %129 = zext i32 %127 to i33
  %130 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #12
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !3

135:                                              ; preds = %128
  call void @llvm.trap() #12
  unreachable

136:                                              ; preds = %128
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %126, align 4
  br label %138

138:                                              ; preds = %121, %136
  %139 = phi i32 [ %137, %136 ], [ %127, %121 ]
  %140 = ptrtoint %"class.WTF::StringImpl"* %95 to i64
  %141 = load atomic i32, i32* %122 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %146 = add i32 %139, -1
  store i32 %146, i32* %145, align 4
  br label %147

147:                                              ; preds = %144, %138
  %148 = phi i32 [ %146, %144 ], [ %139, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #12
  br label %151

151:                                              ; preds = %150, %147, %111, %91, %88, %52
  %152 = phi i8* [ %34, %52 ], [ %34, %88 ], [ %34, %91 ], [ %93, %111 ], [ %93, %147 ], [ %93, %150 ]
  %153 = phi i64 [ 0, %52 ], [ %81, %88 ], [ %81, %91 ], [ 0, %111 ], [ %140, %147 ], [ %140, %150 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #12
  %154 = inttoptr i64 %153 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %154
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ScriptProcessorHandler19SetChannelCountModeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::ScriptProcessorHandler"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend.1912", align 8
  %11 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %8, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %12, align 8
  %13 = bitcast %"class.blink::ScriptProcessorHandler"* %0 to %"class.blink::AudioHandler"*
  %14 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %13) #12
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %8, %"class.blink::BaseAudioContext"* %14) #12
  %15 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %20, align 8
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %22 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %21, i64* %22, align 8
  br label %31

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 1
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %29 = bitcast i8** %28 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %29, align 8
  %30 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %31

31:                                               ; preds = %23, %19
  %32 = phi i64 [ %30, %23 ], [ %21, %19 ]
  %33 = phi i32 [ %26, %23 ], [ 0, %19 ]
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %33, i32* %34, align 8
  %35 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #12
  %36 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %32, i64* %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i8** %37, align 8
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 3, i32* %38, align 8
  %39 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br i1 %39, label %65, label %40

40:                                               ; preds = %31
  %41 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #12
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %45, align 8
  %46 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %47 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %46, i64* %47, align 8
  br label %56

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %54 = bitcast i8** %53 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %54, align 8
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %56

56:                                               ; preds = %48, %44
  %57 = phi i64 [ %55, %48 ], [ %46, %44 ]
  %58 = phi i32 [ %51, %48 ], [ 0, %44 ]
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %58, i32* %59, align 8
  %60 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #12
  %61 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %57, i64* %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i8** %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 11, i32* %63, align 8
  %64 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #12
  br i1 %64, label %65, label %214

65:                                               ; preds = %56, %31
  %66 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #12
  %67 = bitcast %"class.WTF::StringAppend.1912"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #12
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %145, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %87

77:                                               ; preds = %70
  %78 = zext i32 %76 to i33
  %79 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %78, i33 1) #12
  %80 = extractvalue { i33, i1 } %79, 1
  %81 = extractvalue { i33, i1 } %79, 0
  %82 = icmp slt i33 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %84, label %85, !prof !3

84:                                               ; preds = %77
  call void @llvm.trap() #12
  unreachable

85:                                               ; preds = %77
  %86 = trunc i33 %81 to i32
  store i32 %86, i32* %75, align 4
  br label %87

87:                                               ; preds = %85, %70
  %88 = phi i32 [ %86, %85 ], [ %76, %70 ]
  %89 = load atomic i32, i32* %71 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %102

92:                                               ; preds = %87
  %93 = zext i32 %88 to i33
  %94 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %93, i33 1) #12
  %95 = extractvalue { i33, i1 } %94, 1
  %96 = extractvalue { i33, i1 } %94, 0
  %97 = icmp slt i33 %96, 0
  %98 = or i1 %95, %97
  br i1 %98, label %99, label %100, !prof !3

99:                                               ; preds = %92
  call void @llvm.trap() #12
  unreachable

100:                                              ; preds = %92
  %101 = trunc i33 %96 to i32
  store i32 %101, i32* %75, align 4
  br label %102

102:                                              ; preds = %100, %87
  %103 = phi i32 [ %101, %100 ], [ %88, %87 ]
  %104 = load atomic i32, i32* %71 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %102
  %108 = add i32 %103, -1
  store i32 %108, i32* %75, align 4
  br label %109

109:                                              ; preds = %107, %102
  %110 = phi i32 [ %108, %107 ], [ %103, %102 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #12
  br label %113

113:                                              ; preds = %109, %112
  %114 = load atomic i32, i32* %71 monotonic, align 4, !noalias !50
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = load i32, i32* %75, align 4
  br i1 %116, label %118, label %128

118:                                              ; preds = %113
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #12
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !3

125:                                              ; preds = %118
  call void @llvm.trap() #12, !noalias !50
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %75, align 4, !noalias !50
  br label %128

128:                                              ; preds = %113, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %113 ]
  %130 = bitcast %"class.WTF::StringAppend.1912"* %10 to i64*
  store i64 ptrtoint ([56 x i8]* @.str.12 to i64), i64* %130, align 8, !alias.scope !50
  %131 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %131, align 8, !alias.scope !50
  %132 = load atomic i32, i32* %71 monotonic, align 4, !noalias !50
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %149

135:                                              ; preds = %128
  %136 = zext i32 %129 to i33
  %137 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %136, i33 1) #12
  %138 = extractvalue { i33, i1 } %137, 1
  %139 = extractvalue { i33, i1 } %137, 0
  %140 = icmp slt i33 %139, 0
  %141 = or i1 %138, %140
  br i1 %141, label %142, label %143, !prof !3

142:                                              ; preds = %135
  call void @llvm.trap() #12, !noalias !50
  unreachable

143:                                              ; preds = %135
  %144 = trunc i33 %139 to i32
  store i32 %144, i32* %75, align 4, !noalias !50
  br label %149

145:                                              ; preds = %65
  %146 = bitcast %"class.WTF::StringAppend.1912"* %10 to i64*
  store i64 ptrtoint ([56 x i8]* @.str.12 to i64), i64* %146, align 8, !alias.scope !50
  %147 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %147, align 8, !alias.scope !50
  %148 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i8** %148, align 8, !alias.scope !50
  br label %161

149:                                              ; preds = %143, %128
  %150 = phi i32 [ %144, %143 ], [ %129, %128 ]
  %151 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i8** %151, align 8, !alias.scope !50
  %152 = load atomic i32, i32* %71 monotonic, align 4, !noalias !50
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %149
  %156 = add i32 %150, -1
  store i32 %156, i32* %75, align 4, !noalias !50
  br label %157

157:                                              ; preds = %155, %149
  %158 = phi i32 [ %156, %155 ], [ %150, %149 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #12, !noalias !50
  br label %161

161:                                              ; preds = %145, %157, %160
  %162 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.1912"* nonnull %10)
  %163 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %162, %"class.WTF::StringImpl"** %163, align 8
  %164 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %165 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %164, align 8
  %166 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %165, align 8
  call void %166(%"class.blink::ExceptionState"* %2, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %9) #12
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %161
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #12
  br label %182

182:                                              ; preds = %161, %178, %181
  %183 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #12
  br label %199

199:                                              ; preds = %182, %195, %198
  br i1 %69, label %213, label %200

200:                                              ; preds = %199
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #12
  br label %213

213:                                              ; preds = %199, %209, %212
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #12
  br label %214

214:                                              ; preds = %213, %56
  %215 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %12, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %215) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.1912"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2108", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2108", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.2108"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #12
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"* nonnull %3, i8* %8) #12
  %9 = bitcast %"class.WTF::StringTypeAdapter.2108"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #12
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"* nonnull %2, i8* %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1912"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #12
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1912"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #12
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %34
  call void @llvm.trap() #12
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1912"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #12
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1912"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %70
  call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #12
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScriptProcessorNodeC2ERNS_16BaseAudioContextEfjjj(%"class.blink::ScriptProcessorNode"*, %"class.blink::BaseAudioContext"* dereferenceable(304), float, i32, i32, i32) unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::AudioBuffer"*, align 8
  %8 = alloca %"class.blink::AudioBuffer"*, align 8
  %9 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink9AudioNodeC2ERNS_16BaseAudioContextE(%"class.blink::AudioNode"* %9, %"class.blink::BaseAudioContext"* dereferenceable(304) %1) #12
  %10 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [5 x i8*], [7 x i8*] }, { [31 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN5blink19ScriptProcessorNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [5 x i8*], [7 x i8*] }, { [31 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN5blink19ScriptProcessorNodeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [5 x i8*], [7 x i8*] }, { [31 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN5blink19ScriptProcessorNodeE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %1, i64 0, i32 12, i32 0
  %18 = bitcast %"class.blink::HeapVector.1864"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 48, i1 false)
  %19 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %17, align 8
  %20 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %19, i64 0, i32 7
  %21 = load i32, i32* %20, align 4
  %22 = icmp ugt i32 %21, %3
  %23 = select i1 %22, i32 %21, i32 %3
  %24 = bitcast %"class.blink::AudioBuffer"** %7 to i8*
  %25 = icmp eq i32 %4, 0
  %26 = bitcast %"class.blink::AudioBuffer"** %8 to i8*
  %27 = icmp eq i32 %5, 0
  %28 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.blink::HeapVector.1864", %"class.blink::HeapVector.1864"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.blink::AudioBuffer"** %7 to i64*
  %32 = getelementptr inbounds %"class.blink::HeapVector.1864", %"class.blink::HeapVector.1864"* %13, i64 0, i32 0
  %33 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %34 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.blink::HeapVector.1864", %"class.blink::HeapVector.1864"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.blink::AudioBuffer"** %8 to i64*
  %37 = getelementptr inbounds %"class.blink::HeapVector.1864", %"class.blink::HeapVector.1864"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  store %"class.blink::AudioBuffer"* inttoptr (i64 -6148914691236517206 to %"class.blink::AudioBuffer"*), %"class.blink::AudioBuffer"** %7, align 8
  br i1 %25, label %56, label %54

38:                                               ; preds = %145
  %39 = bitcast %"class.blink::AudioBuffer"* %146 to i8*
  %40 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #12
  br label %41

41:                                               ; preds = %145, %38
  %42 = call %"class.blink::AudioBuffer"* @_ZN5blink11AudioBuffer6CreateEjjf(i32 %5, i32 %23, float %2) #12
  %43 = ptrtoint %"class.blink::AudioBuffer"* %42 to i64
  %44 = bitcast %"class.blink::Member.1870"* %16 to i64*
  store atomic i64 %43, i64* %44 monotonic, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = bitcast %"class.blink::AudioBuffer"* %42 to i8*
  %49 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %41
  %51 = call noalias i8* @malloc(i64 256) #12
  %52 = bitcast i8* %51 to %"class.blink::ScriptProcessorHandler"*
  call void @_ZN5blink22ScriptProcessorHandlerC2ERNS_9AudioNodeEfjjjRKNS_10HeapVectorINS_6MemberINS_11AudioBufferEEELj0EEES9_(%"class.blink::ScriptProcessorHandler"* %52, %"class.blink::AudioNode"* dereferenceable(168) %9, float %2, i32 %23, i32 %4, i32 %5, %"class.blink::HeapVector.1864"* dereferenceable(16) %13, %"class.blink::HeapVector.1864"* dereferenceable(16) %14) #12
  %53 = bitcast i8* %51 to %"class.blink::AudioHandler"*
  call void @_ZN5blink9AudioNode10SetHandlerE13scoped_refptrINS_12AudioHandlerEE(%"class.blink::AudioNode"* %9, %"class.blink::AudioHandler"* %53) #12
  ret void

54:                                               ; preds = %6
  %55 = tail call %"class.blink::AudioBuffer"* @_ZN5blink11AudioBuffer6CreateEjjf(i32 %4, i32 %23, float %2) #12
  br label %56

56:                                               ; preds = %6, %54
  %57 = phi %"class.blink::AudioBuffer"* [ %55, %54 ], [ null, %6 ]
  store %"class.blink::AudioBuffer"* %57, %"class.blink::AudioBuffer"** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  store %"class.blink::AudioBuffer"* inttoptr (i64 -6148914691236517206 to %"class.blink::AudioBuffer"*), %"class.blink::AudioBuffer"** %8, align 8
  %58 = ptrtoint %"class.blink::AudioBuffer"* %57 to i64
  br i1 %27, label %61, label %59

59:                                               ; preds = %56
  %60 = tail call %"class.blink::AudioBuffer"* @_ZN5blink11AudioBuffer6CreateEjjf(i32 %5, i32 %23, float %2) #12
  br label %61

61:                                               ; preds = %56, %59
  %62 = phi %"class.blink::AudioBuffer"* [ %60, %59 ], [ null, %56 ]
  store %"class.blink::AudioBuffer"* %62, %"class.blink::AudioBuffer"** %8, align 8
  %63 = load i32, i32* %28, align 4
  %64 = load i32, i32* %29, align 8
  %65 = icmp eq i32 %63, %64
  br i1 %65, label %79, label %66, !prof !3

66:                                               ; preds = %61
  %67 = load %"class.blink::Member.1870"*, %"class.blink::Member.1870"** %30, align 8
  %68 = zext i32 %63 to i64
  %69 = getelementptr inbounds %"class.blink::Member.1870", %"class.blink::Member.1870"* %67, i64 %68
  %70 = bitcast %"class.blink::Member.1870"* %69 to i64*
  store atomic i64 %58, i64* %70 monotonic, align 8
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %66
  %74 = bitcast %"class.blink::AudioBuffer"* %57 to i8*
  %75 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #12
  br label %76

76:                                               ; preds = %73, %66
  %77 = load i32, i32* %28, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %28, align 4
  br label %80

79:                                               ; preds = %61
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1867"* %32, %"class.blink::AudioBuffer"** nonnull dereferenceable(8) %7) #12
  br label %80

80:                                               ; preds = %76, %79
  %81 = load i32, i32* %33, align 4
  %82 = load i32, i32* %34, align 8
  %83 = icmp eq i32 %81, %82
  br i1 %83, label %98, label %84, !prof !3

84:                                               ; preds = %80
  %85 = load %"class.blink::Member.1870"*, %"class.blink::Member.1870"** %35, align 8
  %86 = zext i32 %81 to i64
  %87 = getelementptr inbounds %"class.blink::Member.1870", %"class.blink::Member.1870"* %85, i64 %86
  %88 = load i64, i64* %36, align 8
  %89 = bitcast %"class.blink::Member.1870"* %87 to i64*
  store atomic i64 %88, i64* %89 monotonic, align 8
  %90 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %84
  %93 = inttoptr i64 %88 to i8*
  %94 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %93) #12
  br label %95

95:                                               ; preds = %92, %84
  %96 = load i32, i32* %33, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %33, align 4
  br label %99

98:                                               ; preds = %80
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1867"* %37, %"class.blink::AudioBuffer"** nonnull dereferenceable(8) %8) #12
  br label %99

99:                                               ; preds = %95, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  store %"class.blink::AudioBuffer"* inttoptr (i64 -6148914691236517206 to %"class.blink::AudioBuffer"*), %"class.blink::AudioBuffer"** %7, align 8
  br i1 %25, label %102, label %100

100:                                              ; preds = %99
  %101 = call %"class.blink::AudioBuffer"* @_ZN5blink11AudioBuffer6CreateEjjf(i32 %4, i32 %23, float %2) #12
  br label %102

102:                                              ; preds = %100, %99
  %103 = phi %"class.blink::AudioBuffer"* [ %101, %100 ], [ null, %99 ]
  store %"class.blink::AudioBuffer"* %103, %"class.blink::AudioBuffer"** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  store %"class.blink::AudioBuffer"* inttoptr (i64 -6148914691236517206 to %"class.blink::AudioBuffer"*), %"class.blink::AudioBuffer"** %8, align 8
  br i1 %27, label %106, label %104

104:                                              ; preds = %102
  %105 = call %"class.blink::AudioBuffer"* @_ZN5blink11AudioBuffer6CreateEjjf(i32 %5, i32 %23, float %2) #12
  br label %106

106:                                              ; preds = %104, %102
  %107 = phi %"class.blink::AudioBuffer"* [ %105, %104 ], [ null, %102 ]
  store %"class.blink::AudioBuffer"* %107, %"class.blink::AudioBuffer"** %8, align 8
  %108 = load i32, i32* %28, align 4
  %109 = load i32, i32* %29, align 8
  %110 = icmp eq i32 %108, %109
  br i1 %110, label %125, label %111, !prof !3

111:                                              ; preds = %106
  %112 = load %"class.blink::Member.1870"*, %"class.blink::Member.1870"** %30, align 8
  %113 = zext i32 %108 to i64
  %114 = getelementptr inbounds %"class.blink::Member.1870", %"class.blink::Member.1870"* %112, i64 %113
  %115 = load i64, i64* %31, align 8
  %116 = bitcast %"class.blink::Member.1870"* %114 to i64*
  store atomic i64 %115, i64* %116 monotonic, align 8
  %117 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %111
  %120 = inttoptr i64 %115 to i8*
  %121 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %120) #12
  br label %122

122:                                              ; preds = %119, %111
  %123 = load i32, i32* %28, align 4
  %124 = add i32 %123, 1
  store i32 %124, i32* %28, align 4
  br label %126

125:                                              ; preds = %106
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1867"* %32, %"class.blink::AudioBuffer"** nonnull dereferenceable(8) %7) #12
  br label %126

126:                                              ; preds = %125, %122
  %127 = load i32, i32* %33, align 4
  %128 = load i32, i32* %34, align 8
  %129 = icmp eq i32 %127, %128
  br i1 %129, label %144, label %130, !prof !3

130:                                              ; preds = %126
  %131 = load %"class.blink::Member.1870"*, %"class.blink::Member.1870"** %35, align 8
  %132 = zext i32 %127 to i64
  %133 = getelementptr inbounds %"class.blink::Member.1870", %"class.blink::Member.1870"* %131, i64 %132
  %134 = load i64, i64* %36, align 8
  %135 = bitcast %"class.blink::Member.1870"* %133 to i64*
  store atomic i64 %134, i64* %135 monotonic, align 8
  %136 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %141, label %138

138:                                              ; preds = %130
  %139 = inttoptr i64 %134 to i8*
  %140 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %139) #12
  br label %141

141:                                              ; preds = %138, %130
  %142 = load i32, i32* %33, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %33, align 4
  br label %145

144:                                              ; preds = %126
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1867"* %37, %"class.blink::AudioBuffer"** nonnull dereferenceable(8) %8) #12
  br label %145

145:                                              ; preds = %144, %141
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %146 = call %"class.blink::AudioBuffer"* @_ZN5blink11AudioBuffer6CreateEjjf(i32 %4, i32 %23, float %2) #12
  %147 = ptrtoint %"class.blink::AudioBuffer"* %146 to i64
  %148 = bitcast %"class.blink::Member.1870"* %15 to i64*
  store atomic i64 %147, i64* %148 monotonic, align 8
  %149 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %41, label %38
}

declare void @_ZN5blink9AudioNodeC2ERNS_16BaseAudioContextE(%"class.blink::AudioNode"*, %"class.blink::BaseAudioContext"* dereferenceable(304)) unnamed_addr #1

declare %"class.blink::AudioBuffer"* @_ZN5blink11AudioBuffer6CreateEjjf(i32, i32, float) local_unnamed_addr #1

declare void @_ZN5blink9AudioNode10SetHandlerE13scoped_refptrINS_12AudioHandlerEE(%"class.blink::AudioNode"*, %"class.blink::AudioHandler"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ScriptProcessorNode"* @_ZN5blink19ScriptProcessorNode6CreateERNS_16BaseAudioContextERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* dereferenceable(304), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::ScriptProcessorNode"* @_ZN5blink19ScriptProcessorNode6CreateERNS_16BaseAudioContextEjjjRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* dereferenceable(304) %0, i32 0, i32 2, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %1)
  ret %"class.blink::ScriptProcessorNode"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ScriptProcessorNode"* @_ZN5blink19ScriptProcessorNode6CreateERNS_16BaseAudioContextEjjjRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* dereferenceable(304), i32, i32, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %9 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %10 = alloca %"class.WTF::StringAppend", align 8
  %11 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %12 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::StringAppend.1914", align 8
  %15 = alloca %"class.WTF::StringAppend", align 8
  %16 = alloca %"class.WTF::StringAppend.1912", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::StringAppend.1914", align 8
  %19 = alloca %"class.WTF::StringAppend", align 8
  %20 = alloca %"class.WTF::StringAppend.1912", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::StringAppend.1912", align 8
  %23 = or i32 %3, %2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %5
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 1, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.14, i64 0, i64 0)) #12
  br label %939

26:                                               ; preds = %5
  %27 = icmp ugt i32 %2, 32
  br i1 %27, label %28, label %357

28:                                               ; preds = %26
  %29 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  %30 = bitcast %"class.WTF::StringAppend.1914"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #12
  %31 = bitcast %"class.WTF::StringAppend"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #12
  %32 = bitcast %"class.WTF::StringAppend.1912"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 11
  %35 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 2
  %36 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 3
  %37 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 32, i1 false) #12
  %38 = urem i32 %2, 10
  %39 = trunc i32 %38 to i8
  %40 = or i8 %39, 48
  store i8 %40, i8* %34, align 1
  %41 = udiv i32 %2, 10
  %42 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 10
  store i8* %42, i8** %35, align 8
  %43 = urem i32 %41, 10
  %44 = trunc i32 %43 to i8
  %45 = or i8 %44, 48
  store i8 %45, i8* %42, align 2
  %46 = icmp ugt i32 %2, 99
  br i1 %46, label %47, label %54

47:                                               ; preds = %28
  %48 = udiv i32 %2, 100
  %49 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 9
  store i8* %49, i8** %35, align 8
  %50 = urem i32 %48, 10
  %51 = trunc i32 %50 to i8
  %52 = or i8 %51, 48
  store i8 %52, i8* %49, align 1
  %53 = icmp ugt i32 %2, 999
  br i1 %53, label %56, label %65

54:                                               ; preds = %28
  %55 = ptrtoint i8* %42 to i64
  br label %68

56:                                               ; preds = %47, %56
  %57 = phi i32 [ %59, %56 ], [ %48, %47 ]
  %58 = load i8*, i8** %35, align 8
  %59 = udiv i32 %57, 10
  %60 = getelementptr inbounds i8, i8* %58, i64 -1
  store i8* %60, i8** %35, align 8
  %61 = urem i32 %59, 10
  %62 = trunc i32 %61 to i8
  %63 = or i8 %62, 48
  store i8 %63, i8* %60, align 1
  %64 = icmp ugt i32 %57, 99
  br i1 %64, label %56, label %65

65:                                               ; preds = %56, %47
  %66 = bitcast i8** %35 to i64*
  %67 = load i64, i64* %66, align 8
  br label %68

68:                                               ; preds = %54, %65
  %69 = phi i64 [ %67, %65 ], [ %55, %54 ]
  %70 = ptrtoint i8* %37 to i64
  %71 = sub i64 %70, %69
  %72 = trunc i64 %71 to i32
  store i32 %72, i32* %36, align 8
  %73 = inttoptr i64 %69 to i8*
  %74 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %73, i32 %72) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #12
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %151, label %76

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %93

83:                                               ; preds = %76
  %84 = zext i32 %82 to i33
  %85 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %84, i33 1) #12
  %86 = extractvalue { i33, i1 } %85, 1
  %87 = extractvalue { i33, i1 } %85, 0
  %88 = icmp slt i33 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %91, !prof !3

90:                                               ; preds = %83
  call void @llvm.trap() #12
  unreachable

91:                                               ; preds = %83
  %92 = trunc i33 %87 to i32
  store i32 %92, i32* %81, align 4
  br label %93

93:                                               ; preds = %91, %76
  %94 = phi i32 [ %92, %91 ], [ %82, %76 ]
  %95 = load atomic i32, i32* %77 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %108

98:                                               ; preds = %93
  %99 = zext i32 %94 to i33
  %100 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #12
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !3

105:                                              ; preds = %98
  call void @llvm.trap() #12
  unreachable

106:                                              ; preds = %98
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %81, align 4
  br label %108

108:                                              ; preds = %106, %93
  %109 = phi i32 [ %107, %106 ], [ %94, %93 ]
  %110 = load atomic i32, i32* %77 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %108
  %114 = add i32 %109, -1
  store i32 %114, i32* %81, align 4
  br label %115

115:                                              ; preds = %113, %108
  %116 = phi i32 [ %114, %113 ], [ %109, %108 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #12
  br label %119

119:                                              ; preds = %115, %118
  %120 = load atomic i32, i32* %77 monotonic, align 4, !noalias !53
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = load i32, i32* %81, align 4
  br i1 %122, label %124, label %134

124:                                              ; preds = %119
  %125 = zext i32 %123 to i33
  %126 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %125, i33 1) #12
  %127 = extractvalue { i33, i1 } %126, 1
  %128 = extractvalue { i33, i1 } %126, 0
  %129 = icmp slt i33 %128, 0
  %130 = or i1 %127, %129
  br i1 %130, label %131, label %132, !prof !3

131:                                              ; preds = %124
  call void @llvm.trap() #12, !noalias !53
  unreachable

132:                                              ; preds = %124
  %133 = trunc i33 %128 to i32
  store i32 %133, i32* %81, align 4, !noalias !53
  br label %134

134:                                              ; preds = %119, %132
  %135 = phi i32 [ %133, %132 ], [ %123, %119 ]
  %136 = bitcast %"class.WTF::StringAppend.1912"* %16 to i64*
  store i64 ptrtoint ([27 x i8]* @.str.15 to i64), i64* %136, align 8, !alias.scope !53
  %137 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %137, align 8, !alias.scope !53
  %138 = load atomic i32, i32* %77 monotonic, align 4, !noalias !53
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %155

141:                                              ; preds = %134
  %142 = zext i32 %135 to i33
  %143 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %142, i33 1) #12
  %144 = extractvalue { i33, i1 } %143, 1
  %145 = extractvalue { i33, i1 } %143, 0
  %146 = icmp slt i33 %145, 0
  %147 = or i1 %144, %146
  br i1 %147, label %148, label %149, !prof !3

148:                                              ; preds = %141
  call void @llvm.trap() #12, !noalias !53
  unreachable

149:                                              ; preds = %141
  %150 = trunc i33 %145 to i32
  store i32 %150, i32* %81, align 4, !noalias !53
  br label %155

151:                                              ; preds = %68
  %152 = bitcast %"class.WTF::StringAppend.1912"* %16 to i64*
  store i64 ptrtoint ([27 x i8]* @.str.15 to i64), i64* %152, align 8, !alias.scope !53
  %153 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %153, align 8, !alias.scope !53
  %154 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i8** %154, align 8, !alias.scope !53
  br label %167

155:                                              ; preds = %149, %134
  %156 = phi i32 [ %150, %149 ], [ %135, %134 ]
  %157 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i8** %157, align 8, !alias.scope !53
  %158 = load atomic i32, i32* %77 monotonic, align 4, !noalias !53
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %155
  %162 = add i32 %156, -1
  store i32 %162, i32* %81, align 4, !noalias !53
  br label %163

163:                                              ; preds = %161, %155
  %164 = phi i32 [ %162, %161 ], [ %156, %155 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #12, !noalias !53
  br label %167

167:                                              ; preds = %151, %163, %166
  %168 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %168) #12
  %169 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 11
  %170 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 2
  %171 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 32, i1 false) #12
  store i8 50, i8* %169, align 1
  %172 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 10
  store i8* %172, i8** %170, align 8
  store i8 51, i8* %172, align 2
  store i32 2, i32* %171, align 8
  %173 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %172, i32 2) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %168) #12
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* nonnull sret %15, %"class.WTF::StringAppend.1912"* nonnull dereferenceable(24) %16, %"class.WTF::StringImpl"* %173)
  %174 = bitcast %"class.WTF::StringAppend"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %174)
  %175 = bitcast %"class.WTF::StringAppend"* %15 to i64*
  %176 = load i64, i64* %175, align 8, !noalias !56
  %177 = bitcast %"class.WTF::StringAppend"* %10 to i64*
  store i64 %176, i64* %177, align 8, !noalias !56
  %178 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8, !noalias !56
  %180 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %179, %"class.WTF::StringImpl"** %180, align 8, !noalias !56
  %181 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %181, label %199, label %182

182:                                              ; preds = %167
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %199

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i33
  %191 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %190, i33 1) #12
  %192 = extractvalue { i33, i1 } %191, 1
  %193 = extractvalue { i33, i1 } %191, 0
  %194 = icmp slt i33 %193, 0
  %195 = or i1 %192, %194
  br i1 %195, label %196, label %197, !prof !3

196:                                              ; preds = %187
  call void @llvm.trap() #12
  unreachable

197:                                              ; preds = %187
  %198 = trunc i33 %193 to i32
  store i32 %198, i32* %188, align 4
  br label %199

199:                                              ; preds = %197, %182, %167
  %200 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1
  %201 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %15, i64 0, i32 0, i32 1
  %202 = bitcast i8** %201 to i64*
  %203 = load i64, i64* %202, align 8, !noalias !56
  %204 = bitcast i8** %200 to i64*
  store i64 %203, i64* %204, align 8, !noalias !56
  %205 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %15, i64 0, i32 1, i32 0, i32 0
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8, !noalias !56
  %207 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %207, align 8, !noalias !56
  %208 = icmp eq %"class.WTF::StringImpl"* %206, null
  br i1 %208, label %226, label %209

209:                                              ; preds = %199
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %226

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  %217 = zext i32 %216 to i33
  %218 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %217, i33 1) #12
  %219 = extractvalue { i33, i1 } %218, 1
  %220 = extractvalue { i33, i1 } %218, 0
  %221 = icmp slt i33 %220, 0
  %222 = or i1 %219, %221
  br i1 %222, label %223, label %224, !prof !3

223:                                              ; preds = %214
  call void @llvm.trap() #12
  unreachable

224:                                              ; preds = %214
  %225 = trunc i33 %220 to i32
  store i32 %225, i32* %215, align 4
  br label %226

226:                                              ; preds = %199, %209, %224
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.1914"* nonnull %14, %"class.WTF::StringAppend"* nonnull byval(%"class.WTF::StringAppend") align 8 %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0)) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %174)
  %227 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.1914"* nonnull %14)
  %228 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %227, %"class.WTF::StringImpl"** %228, align 8
  %229 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %230 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %229, align 8
  %231 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %230, align 8
  call void %231(%"class.blink::ExceptionState"* %4, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %13) #12
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %228, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %247, label %234

234:                                              ; preds = %226
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = and i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  br i1 %238, label %241, label %243

241:                                              ; preds = %234
  %242 = add i32 %240, -1
  store i32 %242, i32* %239, align 4
  br label %243

243:                                              ; preds = %241, %234
  %244 = phi i32 [ %242, %241 ], [ %240, %234 ]
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %243
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %232) #12
  br label %247

247:                                              ; preds = %226, %243, %246
  %248 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #12
  br label %264

264:                                              ; preds = %263, %260, %247
  %265 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %266 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %265, align 8
  %267 = icmp eq %"class.WTF::StringImpl"* %266, null
  br i1 %267, label %281, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load atomic i32, i32* %269 monotonic, align 4
  %271 = and i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 0
  %274 = load i32, i32* %273, align 4
  br i1 %272, label %275, label %277

275:                                              ; preds = %268
  %276 = add i32 %274, -1
  store i32 %276, i32* %273, align 4
  br label %277

277:                                              ; preds = %275, %268
  %278 = phi i32 [ %276, %275 ], [ %274, %268 ]
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %281

280:                                              ; preds = %277
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %266) #12
  br label %281

281:                                              ; preds = %264, %277, %280
  %282 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %283 = icmp eq %"class.WTF::StringImpl"* %282, null
  br i1 %283, label %297, label %284

284:                                              ; preds = %281
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = load atomic i32, i32* %285 monotonic, align 4
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 0
  %290 = load i32, i32* %289, align 4
  br i1 %288, label %291, label %293

291:                                              ; preds = %284
  %292 = add i32 %290, -1
  store i32 %292, i32* %289, align 4
  br label %293

293:                                              ; preds = %291, %284
  %294 = phi i32 [ %292, %291 ], [ %290, %284 ]
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %293
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %282) #12
  br label %297

297:                                              ; preds = %296, %293, %281
  %298 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %299 = icmp eq %"class.WTF::StringImpl"* %298, null
  br i1 %299, label %313, label %300

300:                                              ; preds = %297
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = load atomic i32, i32* %301 monotonic, align 4
  %303 = and i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 0
  %306 = load i32, i32* %305, align 4
  br i1 %304, label %307, label %309

307:                                              ; preds = %300
  %308 = add i32 %306, -1
  store i32 %308, i32* %305, align 4
  br label %309

309:                                              ; preds = %307, %300
  %310 = phi i32 [ %308, %307 ], [ %306, %300 ]
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %313

312:                                              ; preds = %309
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %298) #12
  br label %313

313:                                              ; preds = %297, %309, %312
  %314 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %314, align 8
  %316 = icmp eq %"class.WTF::StringImpl"* %315, null
  br i1 %316, label %330, label %317

317:                                              ; preds = %313
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load atomic i32, i32* %318 monotonic, align 4
  %320 = and i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 0
  %323 = load i32, i32* %322, align 4
  br i1 %321, label %324, label %326

324:                                              ; preds = %317
  %325 = add i32 %323, -1
  store i32 %325, i32* %322, align 4
  br label %326

326:                                              ; preds = %324, %317
  %327 = phi i32 [ %325, %324 ], [ %323, %317 ]
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %326
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %315) #12
  br label %330

330:                                              ; preds = %313, %326, %329
  br i1 %75, label %356, label %331

331:                                              ; preds = %330
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %345

343:                                              ; preds = %340
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #12
  %344 = load i32, i32* %336, align 4
  br label %345

345:                                              ; preds = %340, %343
  %346 = phi i32 [ %341, %340 ], [ %344, %343 ]
  %347 = load atomic i32, i32* %332 monotonic, align 4
  %348 = and i32 %347, 2
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %352

350:                                              ; preds = %345
  %351 = add i32 %346, -1
  store i32 %351, i32* %336, align 4
  br label %352

352:                                              ; preds = %350, %345
  %353 = phi i32 [ %351, %350 ], [ %346, %345 ]
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %356

355:                                              ; preds = %352
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #12
  br label %356

356:                                              ; preds = %330, %352, %355
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  br label %939

357:                                              ; preds = %26
  %358 = icmp ugt i32 %3, 32
  br i1 %358, label %359, label %688

359:                                              ; preds = %357
  %360 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %360) #12
  %361 = bitcast %"class.WTF::StringAppend.1914"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %361) #12
  %362 = bitcast %"class.WTF::StringAppend"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %362) #12
  %363 = bitcast %"class.WTF::StringAppend.1912"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %363) #12
  %364 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %364) #12
  %365 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 11
  %366 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 2
  %367 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 3
  %368 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %364, i8 -86, i64 32, i1 false) #12
  %369 = urem i32 %3, 10
  %370 = trunc i32 %369 to i8
  %371 = or i8 %370, 48
  store i8 %371, i8* %365, align 1
  %372 = udiv i32 %3, 10
  %373 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 10
  store i8* %373, i8** %366, align 8
  %374 = urem i32 %372, 10
  %375 = trunc i32 %374 to i8
  %376 = or i8 %375, 48
  store i8 %376, i8* %373, align 2
  %377 = icmp ugt i32 %3, 99
  br i1 %377, label %378, label %385

378:                                              ; preds = %359
  %379 = udiv i32 %3, 100
  %380 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 9
  store i8* %380, i8** %366, align 8
  %381 = urem i32 %379, 10
  %382 = trunc i32 %381 to i8
  %383 = or i8 %382, 48
  store i8 %383, i8* %380, align 1
  %384 = icmp ugt i32 %3, 999
  br i1 %384, label %387, label %396

385:                                              ; preds = %359
  %386 = ptrtoint i8* %373 to i64
  br label %399

387:                                              ; preds = %378, %387
  %388 = phi i32 [ %390, %387 ], [ %379, %378 ]
  %389 = load i8*, i8** %366, align 8
  %390 = udiv i32 %388, 10
  %391 = getelementptr inbounds i8, i8* %389, i64 -1
  store i8* %391, i8** %366, align 8
  %392 = urem i32 %390, 10
  %393 = trunc i32 %392 to i8
  %394 = or i8 %393, 48
  store i8 %394, i8* %391, align 1
  %395 = icmp ugt i32 %388, 99
  br i1 %395, label %387, label %396

396:                                              ; preds = %387, %378
  %397 = bitcast i8** %366 to i64*
  %398 = load i64, i64* %397, align 8
  br label %399

399:                                              ; preds = %385, %396
  %400 = phi i64 [ %398, %396 ], [ %386, %385 ]
  %401 = ptrtoint i8* %368 to i64
  %402 = sub i64 %401, %400
  %403 = trunc i64 %402 to i32
  store i32 %403, i32* %367, align 8
  %404 = inttoptr i64 %400 to i8*
  %405 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %404, i32 %403) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %364) #12
  %406 = icmp eq %"class.WTF::StringImpl"* %405, null
  br i1 %406, label %482, label %407

407:                                              ; preds = %399
  %408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %409 = load atomic i32, i32* %408 monotonic, align 4
  %410 = and i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 0
  %413 = load i32, i32* %412, align 4
  br i1 %411, label %414, label %424

414:                                              ; preds = %407
  %415 = zext i32 %413 to i33
  %416 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %415, i33 1) #12
  %417 = extractvalue { i33, i1 } %416, 1
  %418 = extractvalue { i33, i1 } %416, 0
  %419 = icmp slt i33 %418, 0
  %420 = or i1 %417, %419
  br i1 %420, label %421, label %422, !prof !3

421:                                              ; preds = %414
  call void @llvm.trap() #12
  unreachable

422:                                              ; preds = %414
  %423 = trunc i33 %418 to i32
  store i32 %423, i32* %412, align 4
  br label %424

424:                                              ; preds = %422, %407
  %425 = phi i32 [ %423, %422 ], [ %413, %407 ]
  %426 = load atomic i32, i32* %408 monotonic, align 4
  %427 = and i32 %426, 2
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %439

429:                                              ; preds = %424
  %430 = zext i32 %425 to i33
  %431 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %430, i33 1) #12
  %432 = extractvalue { i33, i1 } %431, 1
  %433 = extractvalue { i33, i1 } %431, 0
  %434 = icmp slt i33 %433, 0
  %435 = or i1 %432, %434
  br i1 %435, label %436, label %437, !prof !3

436:                                              ; preds = %429
  call void @llvm.trap() #12
  unreachable

437:                                              ; preds = %429
  %438 = trunc i33 %433 to i32
  store i32 %438, i32* %412, align 4
  br label %439

439:                                              ; preds = %437, %424
  %440 = phi i32 [ %438, %437 ], [ %425, %424 ]
  %441 = load atomic i32, i32* %408 monotonic, align 4
  %442 = and i32 %441, 2
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %444, label %446

444:                                              ; preds = %439
  %445 = add i32 %440, -1
  store i32 %445, i32* %412, align 4
  br label %446

446:                                              ; preds = %444, %439
  %447 = phi i32 [ %445, %444 ], [ %440, %439 ]
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %449, label %450

449:                                              ; preds = %446
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %405) #12
  br label %450

450:                                              ; preds = %446, %449
  %451 = load atomic i32, i32* %408 monotonic, align 4, !noalias !59
  %452 = and i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = load i32, i32* %412, align 4
  br i1 %453, label %455, label %465

455:                                              ; preds = %450
  %456 = zext i32 %454 to i33
  %457 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %456, i33 1) #12
  %458 = extractvalue { i33, i1 } %457, 1
  %459 = extractvalue { i33, i1 } %457, 0
  %460 = icmp slt i33 %459, 0
  %461 = or i1 %458, %460
  br i1 %461, label %462, label %463, !prof !3

462:                                              ; preds = %455
  call void @llvm.trap() #12, !noalias !59
  unreachable

463:                                              ; preds = %455
  %464 = trunc i33 %459 to i32
  store i32 %464, i32* %412, align 4, !noalias !59
  br label %465

465:                                              ; preds = %450, %463
  %466 = phi i32 [ %464, %463 ], [ %454, %450 ]
  %467 = bitcast %"class.WTF::StringAppend.1912"* %20 to i64*
  store i64 ptrtoint ([28 x i8]* @.str.18 to i64), i64* %467, align 8, !alias.scope !59
  %468 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %20, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %405, %"class.WTF::StringImpl"** %468, align 8, !alias.scope !59
  %469 = load atomic i32, i32* %408 monotonic, align 4, !noalias !59
  %470 = and i32 %469, 2
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %472, label %486

472:                                              ; preds = %465
  %473 = zext i32 %466 to i33
  %474 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %473, i33 1) #12
  %475 = extractvalue { i33, i1 } %474, 1
  %476 = extractvalue { i33, i1 } %474, 0
  %477 = icmp slt i33 %476, 0
  %478 = or i1 %475, %477
  br i1 %478, label %479, label %480, !prof !3

479:                                              ; preds = %472
  call void @llvm.trap() #12, !noalias !59
  unreachable

480:                                              ; preds = %472
  %481 = trunc i33 %476 to i32
  store i32 %481, i32* %412, align 4, !noalias !59
  br label %486

482:                                              ; preds = %399
  %483 = bitcast %"class.WTF::StringAppend.1912"* %20 to i64*
  store i64 ptrtoint ([28 x i8]* @.str.18 to i64), i64* %483, align 8, !alias.scope !59
  %484 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %20, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %484, align 8, !alias.scope !59
  %485 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i8** %485, align 8, !alias.scope !59
  br label %498

486:                                              ; preds = %480, %465
  %487 = phi i32 [ %481, %480 ], [ %466, %465 ]
  %488 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i8** %488, align 8, !alias.scope !59
  %489 = load atomic i32, i32* %408 monotonic, align 4, !noalias !59
  %490 = and i32 %489, 2
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %492, label %494

492:                                              ; preds = %486
  %493 = add i32 %487, -1
  store i32 %493, i32* %412, align 4, !noalias !59
  br label %494

494:                                              ; preds = %492, %486
  %495 = phi i32 [ %493, %492 ], [ %487, %486 ]
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %497, label %498

497:                                              ; preds = %494
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %405) #12, !noalias !59
  br label %498

498:                                              ; preds = %482, %494, %497
  %499 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %499) #12
  %500 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 11
  %501 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 2
  %502 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %499, i8 -86, i64 32, i1 false) #12
  store i8 50, i8* %500, align 1
  %503 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 10
  store i8* %503, i8** %501, align 8
  store i8 51, i8* %503, align 2
  store i32 2, i32* %502, align 8
  %504 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %503, i32 2) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %499) #12
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* nonnull sret %19, %"class.WTF::StringAppend.1912"* nonnull dereferenceable(24) %20, %"class.WTF::StringImpl"* %504)
  %505 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %505)
  %506 = bitcast %"class.WTF::StringAppend"* %19 to i64*
  %507 = load i64, i64* %506, align 8, !noalias !62
  %508 = bitcast %"class.WTF::StringAppend"* %7 to i64*
  store i64 %507, i64* %508, align 8, !noalias !62
  %509 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %510 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %509, align 8, !noalias !62
  %511 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %510, %"class.WTF::StringImpl"** %511, align 8, !noalias !62
  %512 = icmp eq %"class.WTF::StringImpl"* %510, null
  br i1 %512, label %530, label %513

513:                                              ; preds = %498
  %514 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %515 = load atomic i32, i32* %514 monotonic, align 4
  %516 = and i32 %515, 2
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %518, label %530

518:                                              ; preds = %513
  %519 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 0
  %520 = load i32, i32* %519, align 4
  %521 = zext i32 %520 to i33
  %522 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %521, i33 1) #12
  %523 = extractvalue { i33, i1 } %522, 1
  %524 = extractvalue { i33, i1 } %522, 0
  %525 = icmp slt i33 %524, 0
  %526 = or i1 %523, %525
  br i1 %526, label %527, label %528, !prof !3

527:                                              ; preds = %518
  call void @llvm.trap() #12
  unreachable

528:                                              ; preds = %518
  %529 = trunc i33 %524 to i32
  store i32 %529, i32* %519, align 4
  br label %530

530:                                              ; preds = %528, %513, %498
  %531 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1
  %532 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 0, i32 1
  %533 = bitcast i8** %532 to i64*
  %534 = load i64, i64* %533, align 8, !noalias !62
  %535 = bitcast i8** %531 to i64*
  store i64 %534, i64* %535, align 8, !noalias !62
  %536 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 1, i32 0, i32 0
  %537 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %536, align 8, !noalias !62
  %538 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %537, %"class.WTF::StringImpl"** %538, align 8, !noalias !62
  %539 = icmp eq %"class.WTF::StringImpl"* %537, null
  br i1 %539, label %557, label %540

540:                                              ; preds = %530
  %541 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %542 = load atomic i32, i32* %541 monotonic, align 4
  %543 = and i32 %542, 2
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %545, label %557

545:                                              ; preds = %540
  %546 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 0
  %547 = load i32, i32* %546, align 4
  %548 = zext i32 %547 to i33
  %549 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %548, i33 1) #12
  %550 = extractvalue { i33, i1 } %549, 1
  %551 = extractvalue { i33, i1 } %549, 0
  %552 = icmp slt i33 %551, 0
  %553 = or i1 %550, %552
  br i1 %553, label %554, label %555, !prof !3

554:                                              ; preds = %545
  call void @llvm.trap() #12
  unreachable

555:                                              ; preds = %545
  %556 = trunc i33 %551 to i32
  store i32 %556, i32* %546, align 4
  br label %557

557:                                              ; preds = %530, %540, %555
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.1914"* nonnull %18, %"class.WTF::StringAppend"* nonnull byval(%"class.WTF::StringAppend") align 8 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0)) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %505)
  %558 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.1914"* nonnull %18)
  %559 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %558, %"class.WTF::StringImpl"** %559, align 8
  %560 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %561 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %560, align 8
  %562 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %561, align 8
  call void %562(%"class.blink::ExceptionState"* %4, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %17) #12
  %563 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %559, align 8
  %564 = icmp eq %"class.WTF::StringImpl"* %563, null
  br i1 %564, label %578, label %565

565:                                              ; preds = %557
  %566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = load atomic i32, i32* %566 monotonic, align 4
  %568 = and i32 %567, 2
  %569 = icmp eq i32 %568, 0
  %570 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 0
  %571 = load i32, i32* %570, align 4
  br i1 %569, label %572, label %574

572:                                              ; preds = %565
  %573 = add i32 %571, -1
  store i32 %573, i32* %570, align 4
  br label %574

574:                                              ; preds = %572, %565
  %575 = phi i32 [ %573, %572 ], [ %571, %565 ]
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %577, label %578

577:                                              ; preds = %574
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %563) #12
  br label %578

578:                                              ; preds = %557, %574, %577
  %579 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %18, i64 0, i32 0, i32 1, i32 0, i32 0
  %580 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %579, align 8
  %581 = icmp eq %"class.WTF::StringImpl"* %580, null
  br i1 %581, label %595, label %582

582:                                              ; preds = %578
  %583 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %584 = load atomic i32, i32* %583 monotonic, align 4
  %585 = and i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 0
  %588 = load i32, i32* %587, align 4
  br i1 %586, label %589, label %591

589:                                              ; preds = %582
  %590 = add i32 %588, -1
  store i32 %590, i32* %587, align 4
  br label %591

591:                                              ; preds = %589, %582
  %592 = phi i32 [ %590, %589 ], [ %588, %582 ]
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %594, label %595

594:                                              ; preds = %591
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %580) #12
  br label %595

595:                                              ; preds = %594, %591, %578
  %596 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %597 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %596, align 8
  %598 = icmp eq %"class.WTF::StringImpl"* %597, null
  br i1 %598, label %612, label %599

599:                                              ; preds = %595
  %600 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %597, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %601 = load atomic i32, i32* %600 monotonic, align 4
  %602 = and i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %597, i64 0, i32 0
  %605 = load i32, i32* %604, align 4
  br i1 %603, label %606, label %608

606:                                              ; preds = %599
  %607 = add i32 %605, -1
  store i32 %607, i32* %604, align 4
  br label %608

608:                                              ; preds = %606, %599
  %609 = phi i32 [ %607, %606 ], [ %605, %599 ]
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %611, label %612

611:                                              ; preds = %608
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %597) #12
  br label %612

612:                                              ; preds = %595, %608, %611
  %613 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %536, align 8
  %614 = icmp eq %"class.WTF::StringImpl"* %613, null
  br i1 %614, label %628, label %615

615:                                              ; preds = %612
  %616 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %617 = load atomic i32, i32* %616 monotonic, align 4
  %618 = and i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 0
  %621 = load i32, i32* %620, align 4
  br i1 %619, label %622, label %624

622:                                              ; preds = %615
  %623 = add i32 %621, -1
  store i32 %623, i32* %620, align 4
  br label %624

624:                                              ; preds = %622, %615
  %625 = phi i32 [ %623, %622 ], [ %621, %615 ]
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %627, label %628

627:                                              ; preds = %624
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %613) #12
  br label %628

628:                                              ; preds = %627, %624, %612
  %629 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %509, align 8
  %630 = icmp eq %"class.WTF::StringImpl"* %629, null
  br i1 %630, label %644, label %631

631:                                              ; preds = %628
  %632 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %629, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %633 = load atomic i32, i32* %632 monotonic, align 4
  %634 = and i32 %633, 2
  %635 = icmp eq i32 %634, 0
  %636 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %629, i64 0, i32 0
  %637 = load i32, i32* %636, align 4
  br i1 %635, label %638, label %640

638:                                              ; preds = %631
  %639 = add i32 %637, -1
  store i32 %639, i32* %636, align 4
  br label %640

640:                                              ; preds = %638, %631
  %641 = phi i32 [ %639, %638 ], [ %637, %631 ]
  %642 = icmp eq i32 %641, 0
  br i1 %642, label %643, label %644

643:                                              ; preds = %640
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %629) #12
  br label %644

644:                                              ; preds = %628, %640, %643
  %645 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %20, i64 0, i32 0, i32 1, i32 0, i32 0
  %646 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %645, align 8
  %647 = icmp eq %"class.WTF::StringImpl"* %646, null
  br i1 %647, label %661, label %648

648:                                              ; preds = %644
  %649 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %646, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %650 = load atomic i32, i32* %649 monotonic, align 4
  %651 = and i32 %650, 2
  %652 = icmp eq i32 %651, 0
  %653 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %646, i64 0, i32 0
  %654 = load i32, i32* %653, align 4
  br i1 %652, label %655, label %657

655:                                              ; preds = %648
  %656 = add i32 %654, -1
  store i32 %656, i32* %653, align 4
  br label %657

657:                                              ; preds = %655, %648
  %658 = phi i32 [ %656, %655 ], [ %654, %648 ]
  %659 = icmp eq i32 %658, 0
  br i1 %659, label %660, label %661

660:                                              ; preds = %657
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %646) #12
  br label %661

661:                                              ; preds = %644, %657, %660
  br i1 %406, label %687, label %662

662:                                              ; preds = %661
  %663 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %664 = load atomic i32, i32* %663 monotonic, align 4
  %665 = and i32 %664, 2
  %666 = icmp eq i32 %665, 0
  %667 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 0
  %668 = load i32, i32* %667, align 4
  br i1 %666, label %669, label %671

669:                                              ; preds = %662
  %670 = add i32 %668, -1
  store i32 %670, i32* %667, align 4
  br label %671

671:                                              ; preds = %669, %662
  %672 = phi i32 [ %670, %669 ], [ %668, %662 ]
  %673 = icmp eq i32 %672, 0
  br i1 %673, label %674, label %676

674:                                              ; preds = %671
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %405) #12
  %675 = load i32, i32* %667, align 4
  br label %676

676:                                              ; preds = %671, %674
  %677 = phi i32 [ %672, %671 ], [ %675, %674 ]
  %678 = load atomic i32, i32* %663 monotonic, align 4
  %679 = and i32 %678, 2
  %680 = icmp eq i32 %679, 0
  br i1 %680, label %681, label %683

681:                                              ; preds = %676
  %682 = add i32 %677, -1
  store i32 %682, i32* %667, align 4
  br label %683

683:                                              ; preds = %681, %676
  %684 = phi i32 [ %682, %681 ], [ %677, %676 ]
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %686, label %687

686:                                              ; preds = %683
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %405) #12
  br label %687

687:                                              ; preds = %661, %683, %686
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %363) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %362) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %361) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %360) #12
  br label %939

688:                                              ; preds = %357
  switch i32 %1, label %715 [
    i32 0, label %689
    i32 256, label %921
    i32 512, label %921
    i32 1024, label %921
    i32 2048, label %921
    i32 4096, label %921
    i32 8192, label %921
    i32 16384, label %921
  ]

689:                                              ; preds = %688
  %690 = bitcast %"class.blink::BaseAudioContext"* %0 to i1 (%"class.blink::BaseAudioContext"*)***
  %691 = load i1 (%"class.blink::BaseAudioContext"*)**, i1 (%"class.blink::BaseAudioContext"*)*** %690, align 8
  %692 = getelementptr inbounds i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %691, i64 30
  %693 = load i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %692, align 8
  %694 = tail call zeroext i1 %693(%"class.blink::BaseAudioContext"* %0) #12
  br i1 %694, label %695, label %921

695:                                              ; preds = %689
  %696 = load i1 (%"class.blink::BaseAudioContext"*)**, i1 (%"class.blink::BaseAudioContext"*)*** %690, align 8
  %697 = getelementptr inbounds i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %696, i64 34
  %698 = load i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %697, align 8
  %699 = tail call zeroext i1 %698(%"class.blink::BaseAudioContext"* %0) #12
  br i1 %699, label %921, label %700

700:                                              ; preds = %695
  %701 = tail call %"class.blink::AudioDestinationNode"* @_ZNK5blink16BaseAudioContext11destinationEv(%"class.blink::BaseAudioContext"* %0) #12
  %702 = tail call dereferenceable(152) %"class.blink::AudioDestinationHandler"* @_ZNK5blink20AudioDestinationNode26GetAudioDestinationHandlerEv(%"class.blink::AudioDestinationNode"* %701) #12
  %703 = bitcast %"class.blink::AudioDestinationHandler"* %702 to %"class.blink::RealtimeAudioDestinationHandler"*
  %704 = tail call i32 @_ZNK5blink31RealtimeAudioDestinationHandler21GetCallbackBufferSizeEv(%"class.blink::RealtimeAudioDestinationHandler"* %703) #12
  %705 = shl i32 %704, 2
  %706 = uitofp i32 %705 to double
  %707 = tail call double @log2(double %706) #12
  %708 = fadd double %707, 5.000000e-01
  %709 = fptoui double %708 to i32
  %710 = shl i32 1, %709
  %711 = icmp ult i32 %709, 8
  %712 = icmp ugt i32 %709, 14
  %713 = select i1 %712, i32 16384, i32 %710
  %714 = select i1 %711, i32 256, i32 %713
  br label %921

715:                                              ; preds = %688
  %716 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %716) #12
  %717 = bitcast %"class.WTF::StringAppend.1912"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %717) #12
  %718 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %718) #12
  %719 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 11
  %720 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 2
  %721 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 3
  %722 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %718, i8 -86, i64 32, i1 false) #12
  store i8* %719, i8** %720, align 8
  %723 = urem i32 %1, 10
  %724 = udiv i32 %1, 10
  %725 = trunc i32 %723 to i8
  %726 = or i8 %725, 48
  store i8 %726, i8* %719, align 1
  %727 = icmp ugt i32 %1, 9
  br i1 %727, label %728, label %743

728:                                              ; preds = %715
  %729 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 10
  store i8* %729, i8** %720, align 8
  %730 = urem i32 %724, 10
  %731 = trunc i32 %730 to i8
  %732 = or i8 %731, 48
  store i8 %732, i8* %729, align 2
  %733 = icmp ugt i32 %1, 99
  br i1 %733, label %734, label %741

734:                                              ; preds = %728
  %735 = udiv i32 %1, 100
  %736 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 9
  store i8* %736, i8** %720, align 8
  %737 = urem i32 %735, 10
  %738 = trunc i32 %737 to i8
  %739 = or i8 %738, 48
  store i8 %739, i8* %736, align 1
  %740 = icmp ugt i32 %1, 999
  br i1 %740, label %745, label %754

741:                                              ; preds = %728
  %742 = ptrtoint i8* %729 to i64
  br label %757

743:                                              ; preds = %715
  %744 = ptrtoint i8* %719 to i64
  br label %757

745:                                              ; preds = %734, %745
  %746 = phi i32 [ %748, %745 ], [ %735, %734 ]
  %747 = load i8*, i8** %720, align 8
  %748 = udiv i32 %746, 10
  %749 = getelementptr inbounds i8, i8* %747, i64 -1
  store i8* %749, i8** %720, align 8
  %750 = urem i32 %748, 10
  %751 = trunc i32 %750 to i8
  %752 = or i8 %751, 48
  store i8 %752, i8* %749, align 1
  %753 = icmp ugt i32 %746, 99
  br i1 %753, label %745, label %754

754:                                              ; preds = %745, %734
  %755 = bitcast i8** %720 to i64*
  %756 = load i64, i64* %755, align 8
  br label %757

757:                                              ; preds = %754, %741, %743
  %758 = phi i64 [ %744, %743 ], [ %756, %754 ], [ %742, %741 ]
  %759 = ptrtoint i8* %722 to i64
  %760 = sub i64 %759, %758
  %761 = trunc i64 %760 to i32
  store i32 %761, i32* %721, align 8
  %762 = inttoptr i64 %758 to i8*
  %763 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %762, i32 %761) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %718) #12
  %764 = icmp eq %"class.WTF::StringImpl"* %763, null
  br i1 %764, label %840, label %765

765:                                              ; preds = %757
  %766 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %763, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %767 = load atomic i32, i32* %766 monotonic, align 4
  %768 = and i32 %767, 2
  %769 = icmp eq i32 %768, 0
  %770 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %763, i64 0, i32 0
  %771 = load i32, i32* %770, align 4
  br i1 %769, label %772, label %782

772:                                              ; preds = %765
  %773 = zext i32 %771 to i33
  %774 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %773, i33 1) #12
  %775 = extractvalue { i33, i1 } %774, 1
  %776 = extractvalue { i33, i1 } %774, 0
  %777 = icmp slt i33 %776, 0
  %778 = or i1 %775, %777
  br i1 %778, label %779, label %780, !prof !3

779:                                              ; preds = %772
  call void @llvm.trap() #12
  unreachable

780:                                              ; preds = %772
  %781 = trunc i33 %776 to i32
  store i32 %781, i32* %770, align 4
  br label %782

782:                                              ; preds = %780, %765
  %783 = phi i32 [ %781, %780 ], [ %771, %765 ]
  %784 = load atomic i32, i32* %766 monotonic, align 4
  %785 = and i32 %784, 2
  %786 = icmp eq i32 %785, 0
  br i1 %786, label %787, label %797

787:                                              ; preds = %782
  %788 = zext i32 %783 to i33
  %789 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %788, i33 1) #12
  %790 = extractvalue { i33, i1 } %789, 1
  %791 = extractvalue { i33, i1 } %789, 0
  %792 = icmp slt i33 %791, 0
  %793 = or i1 %790, %792
  br i1 %793, label %794, label %795, !prof !3

794:                                              ; preds = %787
  call void @llvm.trap() #12
  unreachable

795:                                              ; preds = %787
  %796 = trunc i33 %791 to i32
  store i32 %796, i32* %770, align 4
  br label %797

797:                                              ; preds = %795, %782
  %798 = phi i32 [ %796, %795 ], [ %783, %782 ]
  %799 = load atomic i32, i32* %766 monotonic, align 4
  %800 = and i32 %799, 2
  %801 = icmp eq i32 %800, 0
  br i1 %801, label %802, label %804

802:                                              ; preds = %797
  %803 = add i32 %798, -1
  store i32 %803, i32* %770, align 4
  br label %804

804:                                              ; preds = %802, %797
  %805 = phi i32 [ %803, %802 ], [ %798, %797 ]
  %806 = icmp eq i32 %805, 0
  br i1 %806, label %807, label %808

807:                                              ; preds = %804
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %763) #12
  br label %808

808:                                              ; preds = %804, %807
  %809 = load atomic i32, i32* %766 monotonic, align 4, !noalias !65
  %810 = and i32 %809, 2
  %811 = icmp eq i32 %810, 0
  %812 = load i32, i32* %770, align 4
  br i1 %811, label %813, label %823

813:                                              ; preds = %808
  %814 = zext i32 %812 to i33
  %815 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %814, i33 1) #12
  %816 = extractvalue { i33, i1 } %815, 1
  %817 = extractvalue { i33, i1 } %815, 0
  %818 = icmp slt i33 %817, 0
  %819 = or i1 %816, %818
  br i1 %819, label %820, label %821, !prof !3

820:                                              ; preds = %813
  call void @llvm.trap() #12, !noalias !65
  unreachable

821:                                              ; preds = %813
  %822 = trunc i33 %817 to i32
  store i32 %822, i32* %770, align 4, !noalias !65
  br label %823

823:                                              ; preds = %808, %821
  %824 = phi i32 [ %822, %821 ], [ %812, %808 ]
  %825 = bitcast %"class.WTF::StringAppend.1912"* %22 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.19 to i64), i64* %825, align 8, !alias.scope !65
  %826 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %22, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %763, %"class.WTF::StringImpl"** %826, align 8, !alias.scope !65
  %827 = load atomic i32, i32* %766 monotonic, align 4, !noalias !65
  %828 = and i32 %827, 2
  %829 = icmp eq i32 %828, 0
  br i1 %829, label %830, label %844

830:                                              ; preds = %823
  %831 = zext i32 %824 to i33
  %832 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %831, i33 1) #12
  %833 = extractvalue { i33, i1 } %832, 1
  %834 = extractvalue { i33, i1 } %832, 0
  %835 = icmp slt i33 %834, 0
  %836 = or i1 %833, %835
  br i1 %836, label %837, label %838, !prof !3

837:                                              ; preds = %830
  call void @llvm.trap() #12, !noalias !65
  unreachable

838:                                              ; preds = %830
  %839 = trunc i33 %834 to i32
  store i32 %839, i32* %770, align 4, !noalias !65
  br label %844

840:                                              ; preds = %757
  %841 = bitcast %"class.WTF::StringAppend.1912"* %22 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.19 to i64), i64* %841, align 8, !alias.scope !65
  %842 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %22, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %842, align 8, !alias.scope !65
  %843 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %22, i64 0, i32 1
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.20, i64 0, i64 0), i8** %843, align 8, !alias.scope !65
  br label %856

844:                                              ; preds = %838, %823
  %845 = phi i32 [ %839, %838 ], [ %824, %823 ]
  %846 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %22, i64 0, i32 1
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.20, i64 0, i64 0), i8** %846, align 8, !alias.scope !65
  %847 = load atomic i32, i32* %766 monotonic, align 4, !noalias !65
  %848 = and i32 %847, 2
  %849 = icmp eq i32 %848, 0
  br i1 %849, label %850, label %852

850:                                              ; preds = %844
  %851 = add i32 %845, -1
  store i32 %851, i32* %770, align 4, !noalias !65
  br label %852

852:                                              ; preds = %850, %844
  %853 = phi i32 [ %851, %850 ], [ %845, %844 ]
  %854 = icmp eq i32 %853, 0
  br i1 %854, label %855, label %856

855:                                              ; preds = %852
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %763) #12, !noalias !65
  br label %856

856:                                              ; preds = %840, %852, %855
  %857 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.1912"* nonnull %22)
  %858 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %857, %"class.WTF::StringImpl"** %858, align 8
  %859 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %860 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %859, align 8
  %861 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %860, align 8
  call void %861(%"class.blink::ExceptionState"* %4, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %21) #12
  %862 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %858, align 8
  %863 = icmp eq %"class.WTF::StringImpl"* %862, null
  br i1 %863, label %877, label %864

864:                                              ; preds = %856
  %865 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %862, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %866 = load atomic i32, i32* %865 monotonic, align 4
  %867 = and i32 %866, 2
  %868 = icmp eq i32 %867, 0
  %869 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %862, i64 0, i32 0
  %870 = load i32, i32* %869, align 4
  br i1 %868, label %871, label %873

871:                                              ; preds = %864
  %872 = add i32 %870, -1
  store i32 %872, i32* %869, align 4
  br label %873

873:                                              ; preds = %871, %864
  %874 = phi i32 [ %872, %871 ], [ %870, %864 ]
  %875 = icmp eq i32 %874, 0
  br i1 %875, label %876, label %877

876:                                              ; preds = %873
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %862) #12
  br label %877

877:                                              ; preds = %856, %873, %876
  %878 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %22, i64 0, i32 0, i32 1, i32 0, i32 0
  %879 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %878, align 8
  %880 = icmp eq %"class.WTF::StringImpl"* %879, null
  br i1 %880, label %894, label %881

881:                                              ; preds = %877
  %882 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %879, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %883 = load atomic i32, i32* %882 monotonic, align 4
  %884 = and i32 %883, 2
  %885 = icmp eq i32 %884, 0
  %886 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %879, i64 0, i32 0
  %887 = load i32, i32* %886, align 4
  br i1 %885, label %888, label %890

888:                                              ; preds = %881
  %889 = add i32 %887, -1
  store i32 %889, i32* %886, align 4
  br label %890

890:                                              ; preds = %888, %881
  %891 = phi i32 [ %889, %888 ], [ %887, %881 ]
  %892 = icmp eq i32 %891, 0
  br i1 %892, label %893, label %894

893:                                              ; preds = %890
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %879) #12
  br label %894

894:                                              ; preds = %877, %890, %893
  br i1 %764, label %920, label %895

895:                                              ; preds = %894
  %896 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %763, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %897 = load atomic i32, i32* %896 monotonic, align 4
  %898 = and i32 %897, 2
  %899 = icmp eq i32 %898, 0
  %900 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %763, i64 0, i32 0
  %901 = load i32, i32* %900, align 4
  br i1 %899, label %902, label %904

902:                                              ; preds = %895
  %903 = add i32 %901, -1
  store i32 %903, i32* %900, align 4
  br label %904

904:                                              ; preds = %902, %895
  %905 = phi i32 [ %903, %902 ], [ %901, %895 ]
  %906 = icmp eq i32 %905, 0
  br i1 %906, label %907, label %909

907:                                              ; preds = %904
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %763) #12
  %908 = load i32, i32* %900, align 4
  br label %909

909:                                              ; preds = %904, %907
  %910 = phi i32 [ %905, %904 ], [ %908, %907 ]
  %911 = load atomic i32, i32* %896 monotonic, align 4
  %912 = and i32 %911, 2
  %913 = icmp eq i32 %912, 0
  br i1 %913, label %914, label %916

914:                                              ; preds = %909
  %915 = add i32 %910, -1
  store i32 %915, i32* %900, align 4
  br label %916

916:                                              ; preds = %914, %909
  %917 = phi i32 [ %915, %914 ], [ %910, %909 ]
  %918 = icmp eq i32 %917, 0
  br i1 %918, label %919, label %920

919:                                              ; preds = %916
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %763) #12
  br label %920

920:                                              ; preds = %894, %916, %919
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %717) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %716) #12
  br label %939

921:                                              ; preds = %688, %688, %688, %688, %688, %688, %688, %689, %695, %700
  %922 = phi i32 [ %714, %700 ], [ 256, %695 ], [ 256, %689 ], [ %1, %688 ], [ %1, %688 ], [ %1, %688 ], [ %1, %688 ], [ %1, %688 ], [ %1, %688 ], [ %1, %688 ]
  %923 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %0, i64 0, i32 21, i32 0
  %924 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %923, align 8
  %925 = bitcast %"class.blink::AudioDestinationHandler"* %924 to double (%"class.blink::AudioDestinationHandler"*)***
  %926 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %925, align 8
  %927 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %926, i64 25
  %928 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %927, align 8
  %929 = tail call double %928(%"class.blink::AudioDestinationHandler"* %924) #12
  %930 = fptrunc double %929 to float
  %931 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 224) #12
  %932 = bitcast i8* %931 to %"class.blink::ScriptProcessorNode"*
  tail call void @_ZN5blink19ScriptProcessorNodeC2ERNS_16BaseAudioContextEfjjj(%"class.blink::ScriptProcessorNode"* %932, %"class.blink::BaseAudioContext"* dereferenceable(304) %0, float %930, i32 %922, i32 %2, i32 %3) #12
  %933 = getelementptr inbounds i8, i8* %931, i64 -4
  %934 = bitcast i8* %933 to i16*
  %935 = load atomic i16, i16* %934 monotonic, align 2
  %936 = or i16 %935, 1
  store atomic i16 %936, i16* %934 release, align 2
  %937 = getelementptr inbounds i8, i8* %931, i64 168
  %938 = bitcast i8* %937 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %938) #12
  br label %939

939:                                              ; preds = %920, %921, %687, %356, %25
  %940 = phi %"class.blink::ScriptProcessorNode"* [ null, %25 ], [ null, %356 ], [ null, %687 ], [ null, %920 ], [ %932, %921 ]
  ret %"class.blink::ScriptProcessorNode"* %940
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ScriptProcessorNode"* @_ZN5blink19ScriptProcessorNode6CreateERNS_16BaseAudioContextEjRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* dereferenceable(304), i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::ScriptProcessorNode"* @_ZN5blink19ScriptProcessorNode6CreateERNS_16BaseAudioContextEjjjRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* dereferenceable(304) %0, i32 %1, i32 2, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::ScriptProcessorNode"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ScriptProcessorNode"* @_ZN5blink19ScriptProcessorNode6CreateERNS_16BaseAudioContextEjjRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* dereferenceable(304), i32, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.blink::ScriptProcessorNode"* @_ZN5blink19ScriptProcessorNode6CreateERNS_16BaseAudioContextEjjjRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* dereferenceable(304) %0, i32 %1, i32 %2, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  ret %"class.blink::ScriptProcessorNode"* %5
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.1914"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2108", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2108", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2108", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.2108"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #12
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"* nonnull %4, i8* %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.2108"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #12
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"* nonnull %3, i8* %15) #12
  %16 = bitcast %"class.WTF::StringTypeAdapter.2108"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #12
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"* nonnull %2, i8* %18) #12
  %19 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #12
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1914"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #12
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.1914"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #12
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !3

56:                                               ; preds = %49
  call void @llvm.trap() #12
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #12
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1914"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #12
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.1914"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #12
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %85
  call void @llvm.trap() #12
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #12
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #12
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

declare %"class.blink::AudioDestinationNode"* @_ZNK5blink16BaseAudioContext11destinationEv(%"class.blink::BaseAudioContext"*) local_unnamed_addr #1

declare dereferenceable(152) %"class.blink::AudioDestinationHandler"* @_ZNK5blink20AudioDestinationNode26GetAudioDestinationHandlerEv(%"class.blink::AudioDestinationNode"*) local_unnamed_addr #1

declare i32 @_ZNK5blink31RealtimeAudioDestinationHandler21GetCallbackBufferSizeEv(%"class.blink::RealtimeAudioDestinationHandler"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink19ScriptProcessorNode10bufferSizeEv(%"class.blink::ScriptProcessorNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 0
  %3 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %2) #12
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %3, i64 1, i32 12
  %5 = bitcast %"class.WTF::Vector.351"* %4 to i32*
  %6 = load i32, i32* %5, align 8
  ret i32 %6
}

declare dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.1870"* @_ZN3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1867"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1867", %"class.WTF::Vector.1867"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.27, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.1867", %"class.WTF::Vector.1867"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.1870"*, %"class.blink::Member.1870"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.1870", %"class.blink::Member.1870"* %24, i64 %25
  ret %"class.blink::Member.1870"* %26
}

declare void @_ZN5blink11AudioBuffer14getChannelDataEj(%"class.blink::NotShared"* sret, %"class.blink::AudioBuffer"*, i32) local_unnamed_addr #1

declare void @_ZN5blink11AudioBuffer4ZeroEv(%"class.blink::AudioBuffer"*) local_unnamed_addr #1

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #1

declare %"class.blink::AudioProcessingEvent"* @_ZN5blink20AudioProcessingEvent6CreateEPNS_11AudioBufferES2_d(%"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"*, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19ScriptProcessorNode18HasPendingActivityEv(%"class.blink::ScriptProcessorNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink9AudioNode7contextEv(%"class.blink::AudioNode"* %2) #12
  %4 = bitcast %"class.blink::BaseAudioContext"* %3 to i1 (%"class.blink::BaseAudioContext"*)***
  %5 = load i1 (%"class.blink::BaseAudioContext"*)**, i1 (%"class.blink::BaseAudioContext"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %5, i64 34
  %7 = load i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::BaseAudioContext"* %3) #12
  br i1 %8, label %21, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kAudioprocessE, align 8
  %12 = bitcast %"class.blink::ScriptProcessorNode"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %13 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %13, i64 25
  %15 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %14, align 8
  %16 = tail call %"class.blink::EventTargetData"* %15(%"class.blink::EventTarget"* %10) #12
  %17 = icmp eq %"class.blink::EventTargetData"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %16, i64 0, i32 0
  %20 = tail call zeroext i1 @_ZNK5blink16EventListenerMap8ContainsERKN3WTF12AtomicStringE(%"class.blink::EventListenerMap"* %19, %"class.WTF::AtomicString"* dereferenceable(8) %11) #12
  ret i1 %20

21:                                               ; preds = %9, %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19ScriptProcessorNode5TraceEPNS_7VisitorE(%"class.blink::ScriptProcessorNode"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::HeapVector.1864"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector.1864"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #12
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 3
  %20 = bitcast %"class.blink::HeapVector.1864"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp eq i64 %21, 0
  %23 = bitcast %"class.blink::HeapVector.1864"* %19 to i8**
  %24 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %25 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, i64 11
  %26 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %25, align 8
  tail call void %26(%"class.blink::Visitor"* %1, i8** %23) #12
  br i1 %22, label %33, label %27

27:                                               ; preds = %18
  %28 = inttoptr i64 %21 to i8*
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %30 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, i64 5
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %1, i8* nonnull %28, i8* nonnull %28, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %33

33:                                               ; preds = %18, %27
  %34 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 4
  %35 = bitcast %"class.blink::Member.1870"* %34 to i64*
  %36 = load atomic i64, i64* %35 monotonic, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %33
  %39 = inttoptr i64 %36 to i8*
  %40 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, i64 5
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %1, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11AudioBufferEE5TraceEPNS_7VisitorEPKv) #12
  br label %44

44:                                               ; preds = %33, %38
  %45 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 5
  %46 = bitcast %"class.blink::Member.1870"* %45 to i64*
  %47 = load atomic i64, i64* %46 monotonic, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %44
  %50 = inttoptr i64 %47 to i8*
  %51 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %52, i64 5
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, align 8
  tail call void %54(%"class.blink::Visitor"* %1, i8* nonnull %50, i8* nonnull %50, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11AudioBufferEE5TraceEPNS_7VisitorEPKv) #12
  br label %55

55:                                               ; preds = %44, %49
  %56 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 0
  tail call void @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"* %56, %"class.blink::Visitor"* %1) #12
  ret void
}

declare void @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink19ScriptProcessorNode5TraceEPNS_7VisitorE(%"class.blink::ScriptProcessorNode"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 -1, i32 0, i32 7
  %4 = bitcast %"class.blink::HeapVector.335"* %3 to %"class.blink::ScriptProcessorNode"*
  tail call void @_ZNK5blink19ScriptProcessorNode5TraceEPNS_7VisitorE(%"class.blink::ScriptProcessorNode"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn168_NK5blink19ScriptProcessorNode5TraceEPNS_7VisitorE(%"class.blink::ScriptProcessorNode"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 -1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 24
  %4 = bitcast i8* %3 to %"class.blink::ScriptProcessorNode"*
  tail call void @_ZNK5blink19ScriptProcessorNode5TraceEPNS_7VisitorE(%"class.blink::ScriptProcessorNode"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScriptProcessorNode15ReportDidCreateEv(%"class.blink::ScriptProcessorNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %3 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink16AudioGraphTracer18DidCreateAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"* %3, %"class.blink::AudioNode"* %4) #12
  ret void
}

declare void @_ZN5blink16AudioGraphTracer18DidCreateAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioNode"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink19ScriptProcessorNode15ReportDidCreateEv(%"class.blink::ScriptProcessorNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 -1, i32 0, i32 7
  %3 = getelementptr inbounds %"class.blink::HeapVector.335", %"class.blink::HeapVector.335"* %2, i64 5
  %4 = bitcast %"class.blink::HeapVector.335"* %3 to %"class.blink::AudioGraphTracer"**
  %5 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %4, align 8
  %6 = bitcast %"class.blink::HeapVector.335"* %2 to %"class.blink::AudioNode"*
  tail call void @_ZN5blink16AudioGraphTracer18DidCreateAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"* %5, %"class.blink::AudioNode"* %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScriptProcessorNode21ReportWillBeDestroyedEv(%"class.blink::ScriptProcessorNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %3 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink16AudioGraphTracer20WillDestroyAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"* %3, %"class.blink::AudioNode"* %4) #12
  ret void
}

declare void @_ZN5blink16AudioGraphTracer20WillDestroyAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioNode"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink19ScriptProcessorNode21ReportWillBeDestroyedEv(%"class.blink::ScriptProcessorNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 -1, i32 0, i32 7
  %3 = getelementptr inbounds %"class.blink::HeapVector.335", %"class.blink::HeapVector.335"* %2, i64 5
  %4 = bitcast %"class.blink::HeapVector.335"* %3 to %"class.blink::AudioGraphTracer"**
  %5 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %4, align 8
  %6 = bitcast %"class.blink::HeapVector.335"* %2 to %"class.blink::AudioNode"*
  tail call void @_ZN5blink16AudioGraphTracer20WillDestroyAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"* %5, %"class.blink::AudioNode"* %6) #12
  ret void
}

declare void @_ZN5blink12AudioHandler7DisposeEv(%"class.blink::AudioHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12AudioHandler22ProcessOnlyAudioParamsEj(%"class.blink::AudioHandler"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink22ScriptProcessorHandler22NumberOfOutputChannelsEv(%"class.blink::ScriptProcessorHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptProcessorHandler", %"class.blink::ScriptProcessorHandler"* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare void @_ZN5blink12AudioHandler18ProcessIfNecessaryEj(%"class.blink::AudioHandler"*, i32) unnamed_addr #1

declare void @_ZN5blink12AudioHandler29CheckNumberOfChannelsForInputEPNS_14AudioNodeInputE(%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AudioHandler17PropagatesSilenceEv(%"class.blink::AudioHandler"*) unnamed_addr #1

declare void @_ZN5blink12AudioHandler24SetChannelInterpretationERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::AudioHandler"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12AudioHandler24UpdatePullStatusIfNeededEv(%"class.blink::AudioHandler"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12AudioHandler10PullInputsEj(%"class.blink::AudioHandler"*, i32) unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19ScriptProcessorNodeD2Ev(%"class.blink::ScriptProcessorNode"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"* %2) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19ScriptProcessorNodeD0Ev(%"class.blink::ScriptProcessorNode"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"* %2) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #12
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink19ScriptProcessorNode18GetWrapperTypeInfoEv(%"class.blink::ScriptProcessorNode"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink19ScriptProcessorNode18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink9AudioNode13InterfaceNameEv(%"class.blink::AudioNode"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink9AudioNode19GetExecutionContextEv(%"class.blink::AudioNode"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.31, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.31, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn168_N5blink19ScriptProcessorNodeD1Ev(%"class.blink::ScriptProcessorNode"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 -1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 24
  %3 = bitcast i8* %2 to %"class.blink::AudioNode"*
  tail call void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn168_N5blink19ScriptProcessorNodeD0Ev(%"class.blink::ScriptProcessorNode"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %0, i64 -1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 24
  %3 = bitcast i8* %2 to %"class.blink::AudioNode"*
  tail call void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_19ScriptProcessorNodeEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable.1911"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable.1911", %"class.blink::ActiveScriptWrappable.1911"* %0, i64 -21
  %3 = bitcast %"class.blink::ActiveScriptWrappable.1911"* %2 to %"class.blink::AudioNode"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink9AudioNode19GetExecutionContextEv(%"class.blink::AudioNode"* %3) #12
  %5 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %4) #12
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_19ScriptProcessorNodeEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable.1911"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable.1911", %"class.blink::ActiveScriptWrappable.1911"* %0, i64 -21
  %3 = bitcast %"class.blink::ActiveScriptWrappable.1911"* %2 to %"class.blink::AudioNode"*
  %4 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink9AudioNode7contextEv(%"class.blink::AudioNode"* %3) #12
  %5 = bitcast %"class.blink::BaseAudioContext"* %4 to i1 (%"class.blink::BaseAudioContext"*)***
  %6 = load i1 (%"class.blink::BaseAudioContext"*)**, i1 (%"class.blink::BaseAudioContext"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %6, i64 34
  %8 = load i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::BaseAudioContext"* %4) #12
  br i1 %9, label %22, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::ActiveScriptWrappable.1911"* %2 to %"class.blink::EventTarget"*
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kAudioprocessE, align 8
  %13 = bitcast %"class.blink::ActiveScriptWrappable.1911"* %2 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %14 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %14, i64 25
  %16 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %15, align 8
  %17 = tail call %"class.blink::EventTargetData"* %16(%"class.blink::EventTarget"* %11) #12
  %18 = icmp eq %"class.blink::EventTargetData"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %17, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZNK5blink16EventListenerMap8ContainsERKN3WTF12AtomicStringE(%"class.blink::EventListenerMap"* %20, %"class.WTF::AtomicString"* dereferenceable(8) %12) #12
  br label %22

22:                                               ; preds = %1, %10, %19
  %23 = phi i1 [ %21, %19 ], [ false, %10 ], [ false, %1 ]
  ret i1 %23
}

declare void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #1

declare void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"*, i1 zeroext) unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #3

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"*) local_unnamed_addr #1

declare i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::AudioChannel"* @_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.297"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.297", %"class.WTF::Vector.297"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.27, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.297", %"class.WTF::Vector.297"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %24, i64 %25
  ret %"class.blink::AudioChannel"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22ScriptProcessorHandlerEFvjEJNS_7WeakPtrIS4_EEjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i32*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #12
  br i1 %8, label %9, label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.blink::ScriptProcessorHandler"**
  %12 = load %"class.blink::ScriptProcessorHandler"*, %"class.blink::ScriptProcessorHandler"** %11, align 8
  %13 = icmp eq %"class.blink::ScriptProcessorHandler"* %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #12
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #12
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #12
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.blink::ScriptProcessorHandler"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.blink::ScriptProcessorHandler"*, i32)**
  %39 = load void (%"class.blink::ScriptProcessorHandler"*, i32)*, void (%"class.blink::ScriptProcessorHandler"*, i32)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.blink::ScriptProcessorHandler"*, i32)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.blink::ScriptProcessorHandler"*, i32)* [ %39, %33 ], [ %41, %40 ]
  %44 = load i32, i32* %6, align 4
  call void %43(%"class.blink::ScriptProcessorHandler"* %30, i32 %44) #12
  br label %45

45:                                               ; preds = %1, %9, %42
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink22ScriptProcessorHandlerEFvjEJNS_7WeakPtrIS3_EEjEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink22ScriptProcessorHandlerEFvjEJNS_7WeakPtrIS4_EEjEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::ScriptProcessorHandler"**
  %9 = load %"class.blink::ScriptProcessorHandler"*, %"class.blink::ScriptProcessorHandler"** %8, align 8
  %10 = icmp ne %"class.blink::ScriptProcessorHandler"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #12
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22ScriptProcessorHandlerEFvjPNS_13WaitableEventEEJNS_7WeakPtrIS4_EEjN3WTF28CrossThreadUnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i32*
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 3
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::WaitableEvent"**
  %9 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %8, align 8
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #12
  br i1 %11, label %12, label %48

12:                                               ; preds = %1
  %13 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to %"class.blink::ScriptProcessorHandler"**
  %15 = load %"class.blink::ScriptProcessorHandler"*, %"class.blink::ScriptProcessorHandler"** %14, align 8
  %16 = icmp eq %"class.blink::ScriptProcessorHandler"* %15, null
  br i1 %16, label %48, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %21 = bitcast void ()** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #12
  br i1 %23, label %27, label %24

24:                                               ; preds = %17
  %25 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #12
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  br label %27

27:                                               ; preds = %24, %17
  %28 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #12
  %29 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = select i1 %28, i8* %30, i8* null
  %32 = getelementptr inbounds i8, i8* %31, i64 %22
  %33 = bitcast i8* %32 to %"class.blink::ScriptProcessorHandler"*
  %34 = and i64 %19, 1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %27
  %37 = bitcast i8* %32 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = add i64 %19, -1
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = bitcast i8* %40 to void (%"class.blink::ScriptProcessorHandler"*, i32, %"class.base::WaitableEvent"*)**
  %42 = load void (%"class.blink::ScriptProcessorHandler"*, i32, %"class.base::WaitableEvent"*)*, void (%"class.blink::ScriptProcessorHandler"*, i32, %"class.base::WaitableEvent"*)** %41, align 8
  br label %45

43:                                               ; preds = %27
  %44 = inttoptr i64 %19 to void (%"class.blink::ScriptProcessorHandler"*, i32, %"class.base::WaitableEvent"*)*
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi void (%"class.blink::ScriptProcessorHandler"*, i32, %"class.base::WaitableEvent"*)* [ %42, %36 ], [ %44, %43 ]
  %47 = load i32, i32* %6, align 4
  call void %46(%"class.blink::ScriptProcessorHandler"* %33, i32 %47, %"class.base::WaitableEvent"* %9) #12
  br label %48

48:                                               ; preds = %1, %12, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink22ScriptProcessorHandlerEFvjPNS_13WaitableEventEEJNS_7WeakPtrIS3_EEjN3WTF28CrossThreadUnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink22ScriptProcessorHandlerEFvjPNS_13WaitableEventEEJNS_7WeakPtrIS4_EEjN3WTF28CrossThreadUnretainedWrapperIS5_EEEEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::ScriptProcessorHandler"**
  %9 = load %"class.blink::ScriptProcessorHandler"*, %"class.blink::ScriptProcessorHandler"** %8, align 8
  %10 = icmp ne %"class.blink::ScriptProcessorHandler"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #12
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare double @log2(double) local_unnamed_addr #11

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16EventListenerMap8ContainsERKN3WTF12AtomicStringE(%"class.blink::EventListenerMap"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"*) unnamed_addr #3

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #12

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.298"*, %"class.blink::AudioChannel"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"class.blink::AudioChannel"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.1870"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1867"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1867", %"class.WTF::Vector.1867"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.27, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.1867", %"class.WTF::Vector.1867"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.1870"*, %"class.blink::Member.1870"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.1870", %"class.blink::Member.1870"* %24, i64 %25
  ret %"class.blink::Member.1870"* %26
}

; Function Attrs: nounwind
declare void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"*) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17SharedAudioBufferENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.358"*, %"class.std::__1::unique_ptr.361"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.361"*, %"class.std::__1::unique_ptr.361"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.361"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.361"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.361"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.361"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17SharedAudioBufferENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17SharedAudioBufferENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.358"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.361"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.361"*, %"class.std::__1::unique_ptr.361"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.361"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.361"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.358"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.358"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.361"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.361"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.361"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.358", %"class.WTF::Vector.358"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.361"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17SharedAudioBufferENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17SharedAudioBufferENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.358"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.361"*, %"class.std::__1::unique_ptr.361"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.361"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.361"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.358"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.358"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.361"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.361"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.361"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.361"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.361"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.361"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.361"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.361"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::SharedAudioBuffer"* null, %"class.blink::SharedAudioBuffer"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.361"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17SharedAudioBufferENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.33, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.34, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA100_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [100 x i8]* dereferenceable(100)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #12
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds [100 x i8], [100 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [100 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #15
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #12
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #12
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #12
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #12
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.5"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.5"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.36, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.5"*) local_unnamed_addr #1

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #3

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::ArrayBufferContents"* @_ZNK3WTF6VectorIN5blink19ArrayBufferContentsELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.364"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.27, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %24, i64 %25
  ret %"class.blink::ArrayBufferContents"* %26
}

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.1912"* byval(%"class.WTF::StringAppend.1912") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1912"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #12
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #12
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #12
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %43
  tail call void @llvm.trap() #12
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #12
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1912"* %8) #12
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1912"* %8) #12
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.38, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.39, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.40, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.39, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  ret i32 %18
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1912"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2108", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2108"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2108", %"class.WTF::StringTypeAdapter.2108"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2108"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1913"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1913"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.38, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.39, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.40, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.39, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1913"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2108", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2108"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2108", %"class.WTF::StringTypeAdapter.2108"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1913", %"class.WTF::StringAppend.1913"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2108"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"* nonnull %4, i8* %13) #12
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1913", %"class.WTF::StringAppend.1913"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.38, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.39, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.40, i64 0, i64 0), i8* %45, i8* %46) #12
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.39, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2106"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1912"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2108", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2105", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2108", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2108"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2108"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.2108"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2108", %"class.WTF::StringTypeAdapter.2108"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.2105"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2105"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2108"* nonnull %3, i8* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2106"* nonnull %34, i8* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1913"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2108"* nonnull %5, i8* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2108"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2106"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1912"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2108", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2105", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2108", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2108"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2108"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.2108"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2108", %"class.WTF::StringTypeAdapter.2108"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.2105"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.1912", %"class.WTF::StringAppend.1912"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2105"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2108"* nonnull %3, i16* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2106"* nonnull %34, i16* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1913"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2108"* nonnull %5, i16* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2108"*, i16*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1867"*, %"class.blink::AudioBuffer"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1867", %"class.WTF::Vector.1867"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1867", %"class.WTF::Vector.1867"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1867"* %0, i32 %14) #12
  %15 = getelementptr inbounds %"class.WTF::Vector.1867", %"class.WTF::Vector.1867"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.1870"*, %"class.blink::Member.1870"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.1870", %"class.blink::Member.1870"* %16, i64 %18
  %20 = bitcast %"class.blink::AudioBuffer"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.1870"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #12
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1867"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1867", %"class.WTF::Vector.1867"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1867", %"class.WTF::Vector.1867"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.1870"*, %"class.blink::Member.1870"** %8, align 8
  %10 = icmp eq %"class.blink::Member.1870"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11AudioBufferEEEEEmm(i64 %11) #12
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #12
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1867"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.1870"*, %"class.blink::Member.1870"** %8, align 8
  %26 = icmp eq %"class.blink::Member.1870"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.1870"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #12
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #12
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #12
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.27, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.32, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1867"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11AudioBufferEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1867"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1867"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1867", %"class.WTF::Vector.1867"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1867"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1867", %"class.WTF::Vector.1867"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #12
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #12
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11AudioBufferEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1867", %"class.WTF::Vector.1867"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.1870"*, %"class.blink::Member.1870"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1867", %"class.WTF::Vector.1867"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.1870"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.1870"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1867"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #12
  %33 = bitcast %"class.WTF::Vector.1867"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #12
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #12
  %42 = bitcast %"class.WTF::Vector.1867"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1867", %"class.WTF::Vector.1867"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11AudioBufferEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.33, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.41, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.43, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.5"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.5"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([163 x i8], [163 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11AudioBufferEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1870"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.1870", %"class.blink::Member.1870"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1870"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11AudioBufferEE5TraceEPNS_7VisitorEPKv) #12
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11AudioBufferEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.1914"*, %"class.WTF::StringAppend"* byval(%"class.WTF::StringAppend") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.1914"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #12
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #12
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #12
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #12
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #12
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #12
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1914"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2108", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2108"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2108", %"class.WTF::StringTypeAdapter.2108"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2108"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.38, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.39, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.40, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.39, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.1914"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2105", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2108", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2108"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.2108"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"* nonnull %4, i8* %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2105"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2105"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1912"* %10, i8* %1) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1912"* %10) #12
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2106"* nonnull %30, i8* %33) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %5) #12
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2108"* nonnull %4, i8* %36) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.1914"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2105", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2108", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2108"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.2108"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2108"* nonnull %4, i8* %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2105"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1914", %"class.WTF::StringAppend.1914"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2105"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1912"* %10, i16* %1) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2105", %"class.WTF::StringTypeAdapter.2105"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1912"* %10) #12
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2106"* nonnull %30, i16* %33) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %5) #12
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2108"* nonnull %4, i16* %36) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.5"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.5"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11AudioBufferEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast i8* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #12
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %0, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %18

18:                                               ; preds = %2, %12
  %19 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %19, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1878"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.1878", %"class.blink::Member.1878"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1878"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEE5TraceEPNS_7VisitorEPKv) #12
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4base15SupportsWeakPtrIN5blink22ScriptProcessorHandlerEE9AsWeakPtrEv: argument 0"}
!7 = distinct !{!7, !"_ZN4base15SupportsWeakPtrIN5blink22ScriptProcessorHandlerEE9AsWeakPtrEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3WTF19CrossThreadBindOnceIMN5blink22ScriptProcessorHandlerEFvjEJN4base7WeakPtrIS2_EERjEEEDaOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZN3WTF19CrossThreadBindOnceIMN5blink22ScriptProcessorHandlerEFvjEJN4base7WeakPtrIS2_EERjEEEDaOT_DpOT0_"}
!11 = !{!12, !9}
!12 = distinct !{!12, !13, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink22ScriptProcessorHandlerEEEE4CopyERKS5_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink22ScriptProcessorHandlerEEEE4CopyERKS5_"}
!14 = !{!12}
!15 = !{!16, !18, !9}
!16 = distinct !{!16, !17, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink22ScriptProcessorHandlerEFvjEJNS_7WeakPtrIS4_EEjEEEDcOT0_DpOT1_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink22ScriptProcessorHandlerEFvjEJNS_7WeakPtrIS4_EEjEEEDcOT0_DpOT1_"}
!18 = distinct !{!18, !19, !"_ZN4base8BindOnceIMN5blink22ScriptProcessorHandlerEFvjEJNS_7WeakPtrIS2_EEjEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8BindOnceIMN5blink22ScriptProcessorHandlerEFvjEJNS_7WeakPtrIS2_EEjEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!20 = !{!21, !9}
!21 = distinct !{!21, !22, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!22 = distinct !{!22, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!25 = distinct !{!25, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN4base15SupportsWeakPtrIN5blink22ScriptProcessorHandlerEE9AsWeakPtrEv: argument 0"}
!28 = distinct !{!28, !"_ZN4base15SupportsWeakPtrIN5blink22ScriptProcessorHandlerEE9AsWeakPtrEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN3WTF19CrossThreadBindOnceIMN5blink22ScriptProcessorHandlerEFvjPN4base13WaitableEventEEJNS3_7WeakPtrIS2_EERjNS_28CrossThreadUnretainedWrapperIS4_EEEEEDaOT_DpOT0_: argument 0"}
!31 = distinct !{!31, !"_ZN3WTF19CrossThreadBindOnceIMN5blink22ScriptProcessorHandlerEFvjPN4base13WaitableEventEEJNS3_7WeakPtrIS2_EERjNS_28CrossThreadUnretainedWrapperIS4_EEEEEDaOT_DpOT0_"}
!32 = !{!33, !30}
!33 = distinct !{!33, !34, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink22ScriptProcessorHandlerEEEE4CopyERKS5_: argument 0"}
!34 = distinct !{!34, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink22ScriptProcessorHandlerEEEE4CopyERKS5_"}
!35 = !{!33}
!36 = !{!37, !39, !30}
!37 = distinct !{!37, !38, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink22ScriptProcessorHandlerEFvjPNS_13WaitableEventEEJNS_7WeakPtrIS4_EEjN3WTF28CrossThreadUnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!38 = distinct !{!38, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink22ScriptProcessorHandlerEFvjPNS_13WaitableEventEEJNS_7WeakPtrIS4_EEjN3WTF28CrossThreadUnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!39 = distinct !{!39, !40, !"_ZN4base8BindOnceIMN5blink22ScriptProcessorHandlerEFvjPNS_13WaitableEventEEJNS_7WeakPtrIS2_EEjN3WTF28CrossThreadUnretainedWrapperIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!40 = distinct !{!40, !"_ZN4base8BindOnceIMN5blink22ScriptProcessorHandlerEFvjPNS_13WaitableEventEEJNS_7WeakPtrIS2_EEjN3WTF28CrossThreadUnretainedWrapperIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!41 = !{!42, !30}
!42 = distinct !{!42, !43, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!43 = distinct !{!43, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!46 = distinct !{!46, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!49 = distinct !{!49, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!52 = distinct !{!52, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!55 = distinct !{!55, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!58 = distinct !{!58, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!61 = distinct !{!61, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!64 = distinct !{!64, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!67 = distinct !{!67, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
