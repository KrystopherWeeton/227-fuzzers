; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/hashtable_lookup.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/hashtable_lookup.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, {}*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"class.tflite::DynamicBuffer" = type { %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i32* }
%"struct.tflite::StringRef" = type { i8*, i32 }

@_ZZN6tflite3ops7builtin25Register_HASHTABLE_LOOKUPEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.1 = private unnamed_addr constant [73 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/hashtable_lookup.cc\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"NumDimensions(lookup)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"lookup->type\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"kTfLiteInt32\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"NumDimensions(key)\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"key->type\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"NumDimensions(value) >= 1\00", align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"SizeOfDimension(key, 0)\00", align 1
@.str.15 = private unnamed_addr constant [26 x i8] c"SizeOfDimension(value, 0)\00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c"NumDimensions(value)\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"hits->type\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"kTfLiteUInt8\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"value->type\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"output->type\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin25Register_HASHTABLE_LOOKUPEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin25Register_HASHTABLE_LOOKUPEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i32 54, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i32 %6, i32 3) #6
  br label %188

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i32 55, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %15, i32 2) #6
  br label %188

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %20, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %20 ]
  %31 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %38 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %37, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %38(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %34, i32 1) #6
  br label %188

39:                                               ; preds = %29
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %45 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %44, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %45(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i32 %41, i32 2) #6
  br label %188

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %52 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %51, align 8
  %53 = sext i32 %48 to i64
  %54 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 %53
  br label %55

55:                                               ; preds = %46, %50
  %56 = phi %struct.TfLiteTensor* [ %54, %50 ], [ null, %46 ]
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 2
  %58 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %57, align 8
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %65, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %64 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %63, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %64(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i32 62, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %60, i32 1) #6
  br label %188

65:                                               ; preds = %55
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 2
  br i1 %68, label %72, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %71 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %70, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %71(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i32 63, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i32 %67, i32 2) #6
  br label %188

72:                                               ; preds = %65
  %73 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %74, 0
  br i1 %75, label %81, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %78 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %77, align 8
  %79 = sext i32 %74 to i64
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %78, i64 %79
  br label %81

81:                                               ; preds = %72, %76
  %82 = phi %struct.TfLiteTensor* [ %80, %76 ], [ null, %72 ]
  %83 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %82, i64 0, i32 2
  %84 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %83, align 8
  %85 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %84, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp sgt i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %90 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %89, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %90(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i32 66, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0)) #6
  br label %188

91:                                               ; preds = %81
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %58, i64 0, i32 1, i64 0
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %84, i64 0, i32 1, i64 0
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %93, %95
  br i1 %96, label %100, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %99 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %98, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %99(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i32 68, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0), i32 %93, i32 %95) #6
  br label %188

100:                                              ; preds = %91
  %101 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %82, i64 0, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = icmp ne i32 %102, 5
  %104 = icmp eq i32 %86, 1
  %105 = or i1 %104, %103
  br i1 %105, label %109, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %108 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %107, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %108(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i32 70, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %86, i32 1) #6
  br label %188

109:                                              ; preds = %100
  %110 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 1
  %111 = load i32, i32* %110, align 4
  %112 = icmp slt i32 %111, 0
  br i1 %112, label %118, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %115 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %114, align 8
  %116 = sext i32 %111 to i64
  %117 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %115, i64 %116
  br label %118

118:                                              ; preds = %109, %113
  %119 = phi %struct.TfLiteTensor* [ %117, %113 ], [ null, %109 ]
  %120 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %119, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 3
  br i1 %122, label %126, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %125 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %124, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %125(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i32 74, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i32 %121, i32 3) #6
  br label %188

126:                                              ; preds = %118
  %127 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #6
  %128 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %129 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %128, i64 0, i32 1, i64 0
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %127, i64 0, i32 1, i64 0
  store i32 %130, i32* %131, align 4
  %132 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %133 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %132, i64 0, i32 1, i64 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp slt i32 %134, 0
  br i1 %135, label %141, label %136

136:                                              ; preds = %126
  %137 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %138 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %137, align 8
  %139 = sext i32 %134 to i64
  %140 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %138, i64 %139
  br label %141

141:                                              ; preds = %126, %136
  %142 = phi %struct.TfLiteTensor* [ %140, %136 ], [ null, %126 ]
  %143 = load i32, i32* %101, align 8
  %144 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %142, i64 0, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = icmp eq i32 %143, %145
  br i1 %146, label %150, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %149 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %148, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %149(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i32 %143, i32 %145) #6
  br label %188

150:                                              ; preds = %141
  %151 = icmp eq i32 %143, 5
  br i1 %151, label %181, label %152

152:                                              ; preds = %150
  %153 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %83, align 8
  %154 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %153, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %155) #6
  %157 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %158 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %157, i64 0, i32 1, i64 0
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %156, i64 0, i32 1, i64 0
  store i32 %159, i32* %160, align 4
  %161 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %83, align 8
  %162 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %161, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  %164 = icmp sgt i32 %163, 1
  br i1 %164, label %169, label %165

165:                                              ; preds = %169, %152
  %166 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %167 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %166, align 8
  %168 = tail call i32 %167(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %142, %struct.TfLiteIntArray* %156) #6
  br label %181

169:                                              ; preds = %152, %169
  %170 = phi i64 [ %175, %169 ], [ 1, %152 ]
  %171 = phi %struct.TfLiteIntArray* [ %176, %169 ], [ %161, %152 ]
  %172 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %171, i64 0, i32 1, i64 %170
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %156, i64 0, i32 1, i64 %170
  store i32 %173, i32* %174, align 4
  %175 = add nuw nsw i64 %170, 1
  %176 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %83, align 8
  %177 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %176, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = sext i32 %178 to i64
  %180 = icmp slt i64 %175, %179
  br i1 %180, label %169, label %165

181:                                              ; preds = %150, %165
  %182 = phi i32 [ %168, %165 ], [ 0, %150 ]
  %183 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %184 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %183, align 8
  %185 = tail call i32 %184(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %119, %struct.TfLiteIntArray* %127) #6
  %186 = icmp eq i32 %185, 0
  %187 = select i1 %186, i32 %182, i32 1
  br label %188

188:                                              ; preds = %36, %43, %88, %97, %106, %147, %181, %123, %69, %62, %17, %8
  %189 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 1, %36 ], [ 1, %43 ], [ 1, %62 ], [ 1, %69 ], [ 1, %97 ], [ 1, %106 ], [ 1, %88 ], [ 1, %123 ], [ 1, %147 ], [ %187, %181 ]
  ret i32 %189
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* nocapture readonly, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = alloca %"class.tflite::DynamicBuffer", align 8
  %4 = alloca %"struct.tflite::StringRef", align 8
  %5 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %12 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 %13
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi %struct.TfLiteTensor* [ %14, %10 ], [ null, %2 ]
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %15, %20
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %15 ]
  %27 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %28 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %27, align 8
  %29 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %28, i64 0, i32 1, i64 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %34 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %33, align 8
  %35 = sext i32 %30 to i64
  %36 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 %35
  br label %37

37:                                               ; preds = %25, %32
  %38 = phi %struct.TfLiteTensor* [ %36, %32 ], [ null, %25 ]
  %39 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %28, i64 0, i32 1, i64 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %44 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %43, align 8
  %45 = sext i32 %40 to i64
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 %45
  br label %47

47:                                               ; preds = %37, %42
  %48 = phi %struct.TfLiteTensor* [ %46, %42 ], [ null, %37 ]
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %28, i64 0, i32 1, i64 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %54 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %53, align 8
  %55 = sext i32 %50 to i64
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 %55
  br label %57

57:                                               ; preds = %47, %52
  %58 = phi %struct.TfLiteTensor* [ %56, %52 ], [ null, %47 ]
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 2
  %60 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %59, align 8
  %61 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %60, i64 0, i32 1, i64 0
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 5
  %64 = load i64, i64* %63, align 8
  %65 = sext i32 %62 to i64
  %66 = udiv i64 %64, %65
  %67 = bitcast %"class.tflite::DynamicBuffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %67) #6
  %68 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %3, i64 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %3, i64 0, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %3, i64 0, i32 1, i32 0, i32 0
  %71 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %3, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 24, i1 false) #6
  %74 = tail call i8* @_Znwm(i64 4) #7
  %75 = bitcast %"class.std::__1::vector.1"* %73 to i8**
  store i8* %74, i8** %75, align 8
  %76 = getelementptr inbounds i8, i8* %74, i64 4
  %77 = bitcast i32** %72 to i8**
  store i8* %76, i8** %77, align 8
  %78 = bitcast i32** %71 to i64*
  %79 = bitcast i8* %74 to i32*
  store i32 0, i32* %79, align 4
  %80 = ptrtoint i8* %76 to i64
  store i64 %80, i64* %78, align 8
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 2
  %82 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %81, align 8
  %83 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %82, i64 0, i32 1, i64 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %86, label %105

86:                                               ; preds = %57
  %87 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 0, i32 1, i32 0
  %88 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 1
  %89 = bitcast %union.TfLitePtrUnion* %88 to i8**
  %90 = icmp eq i32 %62, 0
  %91 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 0
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i8**
  %94 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 1
  %95 = bitcast %union.TfLitePtrUnion* %94 to i8**
  %96 = shl i64 %66, 32
  %97 = ashr exact i64 %96, 32
  %98 = bitcast %"struct.tflite::StringRef"* %4 to i8*
  %99 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %4, i64 0, i32 0
  %100 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %4, i64 0, i32 1
  %101 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %102 = bitcast %union.TfLitePtrUnion* %101 to i8**
  %103 = shl i64 %66, 32
  %104 = ashr exact i64 %103, 32
  br label %109

105:                                              ; preds = %167, %57
  %106 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = icmp eq i32 %107, 5
  br i1 %108, label %177, label %178

109:                                              ; preds = %86, %167
  %110 = phi i64 [ 0, %86 ], [ %171, %167 ]
  %111 = load i8*, i8** %89, align 8
  br i1 %90, label %137, label %112

112:                                              ; preds = %109
  %113 = load i32*, i32** %87, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 %110
  %115 = load i32, i32* %114, align 4
  br label %116

116:                                              ; preds = %112, %131
  %117 = phi i64 [ %133, %131 ], [ %65, %112 ]
  %118 = phi i64 [ %132, %131 ], [ 0, %112 ]
  %119 = add i64 %118, %117
  %120 = lshr i64 %119, 1
  %121 = shl i64 %120, 2
  %122 = getelementptr inbounds i8, i8* %111, i64 %121
  %123 = bitcast i8* %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = sub nsw i32 %115, %124
  %126 = icmp slt i32 %125, 0
  br i1 %126, label %131, label %127

127:                                              ; preds = %116
  %128 = icmp eq i32 %125, 0
  br i1 %128, label %135, label %129

129:                                              ; preds = %127
  %130 = add nuw i64 %120, 1
  br label %131

131:                                              ; preds = %129, %116
  %132 = phi i64 [ %130, %129 ], [ %118, %116 ]
  %133 = phi i64 [ %117, %129 ], [ %120, %116 ]
  %134 = icmp ult i64 %132, %133
  br i1 %134, label %116, label %137

135:                                              ; preds = %127
  %136 = icmp eq i8* %122, null
  br i1 %136, label %137, label %140

137:                                              ; preds = %131, %135, %109
  %138 = load i32, i32* %91, align 8
  %139 = icmp eq i32 %138, 5
  br i1 %139, label %149, label %150

140:                                              ; preds = %135
  %141 = and i64 %120, 4611686018427387903
  %142 = trunc i64 %120 to i32
  %143 = icmp sle i32 %62, %142
  %144 = icmp slt i32 %142, 0
  %145 = or i1 %143, %144
  %146 = load i32, i32* %91, align 8
  %147 = icmp eq i32 %146, 5
  br i1 %145, label %148, label %154

148:                                              ; preds = %140
  br i1 %147, label %149, label %150

149:                                              ; preds = %137, %148
  call void @_ZN6tflite13DynamicBuffer9AddStringEPKcm(%"class.tflite::DynamicBuffer"* nonnull %3, i8* null, i64 0) #6
  br label %167

150:                                              ; preds = %137, %148
  %151 = load i8*, i8** %93, align 8
  %152 = mul nsw i64 %110, %104
  %153 = getelementptr inbounds i8, i8* %151, i64 %152
  call void @llvm.memset.p0i8.i64(i8* align 1 %153, i8 0, i64 %97, i1 false)
  br label %167

154:                                              ; preds = %140
  br i1 %147, label %155, label %159

155:                                              ; preds = %154
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #6
  %156 = call { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor* %58, i32 %142) #6
  %157 = extractvalue { i8*, i32 } %156, 0
  store i8* %157, i8** %99, align 8
  %158 = extractvalue { i8*, i32 } %156, 1
  store i32 %158, i32* %100, align 8
  call void @_ZN6tflite13DynamicBuffer9AddStringERKNS_9StringRefE(%"class.tflite::DynamicBuffer"* nonnull %3, %"struct.tflite::StringRef"* nonnull dereferenceable(16) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #6
  br label %167

159:                                              ; preds = %154
  %160 = load i8*, i8** %93, align 8
  %161 = mul nsw i64 %110, %104
  %162 = getelementptr inbounds i8, i8* %160, i64 %161
  %163 = load i8*, i8** %95, align 8
  %164 = mul i64 %96, %141
  %165 = ashr exact i64 %164, 32
  %166 = getelementptr inbounds i8, i8* %163, i64 %165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %162, i8* align 1 %166, i64 %97, i1 false)
  br label %167

167:                                              ; preds = %155, %159, %149, %150
  %168 = phi i8 [ 0, %150 ], [ 0, %149 ], [ 1, %159 ], [ 1, %155 ]
  %169 = load i8*, i8** %102, align 8
  %170 = getelementptr inbounds i8, i8* %169, i64 %110
  store i8 %168, i8* %170, align 1
  %171 = add nuw nsw i64 %110, 1
  %172 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %81, align 8
  %173 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %172, i64 0, i32 1, i64 0
  %174 = load i32, i32* %173, align 4
  %175 = sext i32 %174 to i64
  %176 = icmp slt i64 %171, %175
  br i1 %176, label %109, label %105

177:                                              ; preds = %105
  call void @_ZN6tflite13DynamicBuffer21WriteToTensorAsVectorEP12TfLiteTensor(%"class.tflite::DynamicBuffer"* nonnull %3, %struct.TfLiteTensor* %16) #6
  br label %178

178:                                              ; preds = %177, %105
  %179 = load i32*, i32** %70, align 8
  %180 = icmp eq i32* %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %178
  %182 = ptrtoint i32* %179 to i64
  store i64 %182, i64* %78, align 8
  %183 = bitcast i32* %179 to i8*
  call void @_ZdlPv(i8* %183) #7
  br label %184

184:                                              ; preds = %181, %178
  %185 = load i8*, i8** %68, align 8
  %186 = icmp eq i8* %185, null
  br i1 %186, label %190, label %187

187:                                              ; preds = %184
  %188 = ptrtoint i8* %185 to i64
  %189 = bitcast i8** %69 to i64*
  store i64 %188, i64* %189, align 8
  call void @_ZdlPv(i8* nonnull %185) #7
  br label %190

190:                                              ; preds = %184, %187
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %67) #6
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN6tflite13DynamicBuffer9AddStringEPKcm(%"class.tflite::DynamicBuffer"*, i8*, i64) local_unnamed_addr #3

declare void @_ZN6tflite13DynamicBuffer9AddStringERKNS_9StringRefE(%"class.tflite::DynamicBuffer"*, %"struct.tflite::StringRef"* dereferenceable(16)) local_unnamed_addr #3

declare { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN6tflite13DynamicBuffer21WriteToTensorAsVectorEP12TfLiteTensor(%"class.tflite::DynamicBuffer"*, %struct.TfLiteTensor*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
