; ModuleID = '../../third_party/blink/renderer/core/frame/ad_tracker.cc'
source_filename = "../../third_party/blink/renderer/core/frame/ad_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.1155", i32, [4 x i8], %"class.std::__1::unique_ptr.1293", %"class.std::__1::unique_ptr.1293", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.1299", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.1305", %"class.std::__1::unique_ptr.1311", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.1323", %"class.std::__1::unique_ptr.1329", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.299", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1155" = type { %"class.std::__1::__compressed_pair.1156" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.1157" }
%"struct.std::__1::__compressed_pair_elem.1157" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.1158", %"class.std::__1::unique_ptr.1164", %"class.std::__1::unique_ptr.1170", %"class.std::__1::unique_ptr.1176", %"class.std::__1::unique_ptr.1182", %"class.std::__1::unique_ptr.1188", %"class.std::__1::unique_ptr.1199", %"class.std::__1::unique_ptr.1206", %"class.std::__1::unique_ptr.1206", %"class.std::__1::unique_ptr.1213", %"class.std::__1::unique_ptr.1220", %"class.std::__1::unique_ptr.1227", %"class.std::__1::unique_ptr.1227", %"class.std::__1::unique_ptr.1234", %"class.std::__1::unique_ptr.1241", %"class.std::__1::unique_ptr.1248", %"class.std::__1::unique_ptr.1273", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.1170" = type { %"class.std::__1::__compressed_pair.1171" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.1176" = type { %"class.std::__1::__compressed_pair.1177" }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.1178" }
%"struct.std::__1::__compressed_pair_elem.1178" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.1182" = type { %"class.std::__1::__compressed_pair.1183" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.1184" }
%"struct.std::__1::__compressed_pair_elem.1184" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.1188" = type { %"class.std::__1::__compressed_pair.1189" }
%"class.std::__1::__compressed_pair.1189" = type { %"struct.std::__1::__compressed_pair_elem.1190" }
%"struct.std::__1::__compressed_pair_elem.1190" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.1191" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.1191" = type { %"struct.std::__1::__atomic_base.1192" }
%"struct.std::__1::__atomic_base.1192" = type { %"struct.std::__1::__atomic_base.1193" }
%"struct.std::__1::__atomic_base.1193" = type { %"struct.std::__1::__cxx_atomic_impl.1194" }
%"struct.std::__1::__cxx_atomic_impl.1194" = type { %"struct.std::__1::__cxx_atomic_base_impl.1195" }
%"struct.std::__1::__cxx_atomic_base_impl.1195" = type { i64 }
%"class.std::__1::unique_ptr.1199" = type { %"class.std::__1::__compressed_pair.1200" }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.1201" }
%"struct.std::__1::__compressed_pair_elem.1201" = type { %"class.blink::Worklist.1202"* }
%"class.blink::Worklist.1202" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.1191" }
%"class.std::__1::unique_ptr.1206" = type { %"class.std::__1::__compressed_pair.1207" }
%"class.std::__1::__compressed_pair.1207" = type { %"struct.std::__1::__compressed_pair_elem.1208" }
%"struct.std::__1::__compressed_pair_elem.1208" = type { %"class.blink::Worklist.1209"* }
%"class.blink::Worklist.1209" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1191" }
%"class.std::__1::unique_ptr.1213" = type { %"class.std::__1::__compressed_pair.1214" }
%"class.std::__1::__compressed_pair.1214" = type { %"struct.std::__1::__compressed_pair_elem.1215" }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"class.blink::Worklist.1216"* }
%"class.blink::Worklist.1216" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1191" }
%"class.std::__1::unique_ptr.1220" = type { %"class.std::__1::__compressed_pair.1221" }
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"class.blink::Worklist.1223"* }
%"class.blink::Worklist.1223" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.1191" }
%"class.std::__1::unique_ptr.1227" = type { %"class.std::__1::__compressed_pair.1228" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.1229" }
%"struct.std::__1::__compressed_pair_elem.1229" = type { %"class.blink::Worklist.1230"* }
%"class.blink::Worklist.1230" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1191" }
%"class.std::__1::unique_ptr.1234" = type { %"class.std::__1::__compressed_pair.1235" }
%"class.std::__1::__compressed_pair.1235" = type { %"struct.std::__1::__compressed_pair_elem.1236" }
%"struct.std::__1::__compressed_pair_elem.1236" = type { %"class.blink::Worklist.1237"* }
%"class.blink::Worklist.1237" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1191" }
%"class.std::__1::unique_ptr.1241" = type { %"class.std::__1::__compressed_pair.1242" }
%"class.std::__1::__compressed_pair.1242" = type { %"struct.std::__1::__compressed_pair_elem.1243" }
%"struct.std::__1::__compressed_pair_elem.1243" = type { %"class.blink::Worklist.1244"* }
%"class.blink::Worklist.1244" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1191" }
%"class.std::__1::unique_ptr.1248" = type { %"class.std::__1::__compressed_pair.1249" }
%"class.std::__1::__compressed_pair.1249" = type { %"struct.std::__1::__compressed_pair_elem.1250" }
%"struct.std::__1::__compressed_pair_elem.1250" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1251", %"class.std::__1::__compressed_pair.1259", %"class.std::__1::__compressed_pair.1264", %"class.std::__1::__compressed_pair.1266", [4 x i8] }>
%"class.std::__1::unique_ptr.1251" = type { %"class.std::__1::__compressed_pair.1252" }
%"class.std::__1::__compressed_pair.1252" = type { %"struct.std::__1::__compressed_pair_elem.1253", %"struct.std::__1::__compressed_pair_elem.1254" }
%"struct.std::__1::__compressed_pair_elem.1253" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1254" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1255" }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i64 }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.1260" }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.1266" = type { %"struct.std::__1::__compressed_pair_elem.1267" }
%"struct.std::__1::__compressed_pair_elem.1267" = type { float }
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.1276", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1276" = type { %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.1278" }
%"struct.std::__1::__compressed_pair_elem.1278" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.1285" }
%"class.WTF::Vector.1285" = type { %"class.WTF::VectorBuffer.1286" }
%"class.WTF::VectorBuffer.1286" = type { %"class.WTF::VectorBufferBase.1287" }
%"class.WTF::VectorBufferBase.1287" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.1293" = type { %"class.std::__1::__compressed_pair.1294" }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.1295" }
%"struct.std::__1::__compressed_pair_elem.1295" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.1299" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1302" }
%"class.WTF::VectorBuffer.1302" = type { %"class.WTF::VectorBufferBase.1303" }
%"class.WTF::VectorBufferBase.1303" = type { %"struct.std::__1::pair.1304"*, i32, i32 }
%"struct.std::__1::pair.1304" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.1305" = type { %"class.std::__1::__compressed_pair.1306" }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.1307" }
%"struct.std::__1::__compressed_pair_elem.1307" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.1311" = type { %"class.std::__1::__compressed_pair.1312" }
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.1313" }
%"struct.std::__1::__compressed_pair_elem.1313" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.1317" }
%"class.std::__1::unique_ptr.1317" = type { %"class.std::__1::__compressed_pair.1318" }
%"class.std::__1::__compressed_pair.1318" = type { %"struct.std::__1::__compressed_pair_elem.1319" }
%"struct.std::__1::__compressed_pair_elem.1319" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.1202"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.1209"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1216"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.1223"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1230"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1554", i64 }
%"class.std::__1::vector.1554" = type { %"class.std::__1::__vector_base.1555" }
%"class.std::__1::__vector_base.1555" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1556" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1556" = type { %"struct.std::__1::__compressed_pair_elem.1557" }
%"struct.std::__1::__compressed_pair_elem.1557" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.1323" = type { %"class.std::__1::__compressed_pair.1324" }
%"class.std::__1::__compressed_pair.1324" = type { %"struct.std::__1::__compressed_pair_elem.1325" }
%"struct.std::__1::__compressed_pair_elem.1325" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.1329" = type { %"class.std::__1::__compressed_pair.1330" }
%"class.std::__1::__compressed_pair.1330" = type { %"struct.std::__1::__compressed_pair_elem.1331" }
%"struct.std::__1::__compressed_pair_elem.1331" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.1335 }
%class.scoped_refptr.1335 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.299" = type { %"struct.std::__1::__atomic_base.300" }
%"struct.std::__1::__atomic_base.300" = type { %"struct.std::__1::__cxx_atomic_impl.301" }
%"struct.std::__1::__cxx_atomic_impl.301" = type { %"struct.std::__1::__cxx_atomic_base_impl.302" }
%"struct.std::__1::__cxx_atomic_base_impl.302" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.139" }
%"struct.std::__1::atomic.139" = type { %"struct.std::__1::__atomic_base.140" }
%"struct.std::__1::__atomic_base.140" = type { %"struct.std::__1::__atomic_base.141" }
%"struct.std::__1::__atomic_base.141" = type { %"struct.std::__1::__cxx_atomic_impl.142" }
%"struct.std::__1::__cxx_atomic_impl.142" = type { %"struct.std::__1::__cxx_atomic_base_impl.143" }
%"struct.std::__1::__cxx_atomic_base_impl.143" = type { i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member", %"class.WTF::Vector", i32, [4 x i8], %"class.blink::HeapHashMap", i32, i8, [3 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::LocalFrame"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.WTF::HashSet" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.65", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.74", %"class.blink::Member.76", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.85", %"class.blink::Member.226", %"class.blink::Member.228", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.8" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.8" = type { %"class.WTF::HashMap.11" }
%"class.WTF::HashMap.11" = type { %"class.WTF::HashTable.12" }
%"class.WTF::HashTable.12" = type <{ %"struct.WTF::KeyValuePair.14"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.14" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.21" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.17" }
%"class.WTF::HashSet.17" = type { %"class.WTF::HashTable.18" }
%"class.WTF::HashTable.18" = type <{ %"class.blink::WeakMember.20"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.20" = type opaque
%"class.blink::Supplementable.21" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.22" }
%"class.blink::HeapHashMap.22" = type { %"class.WTF::HashMap.25" }
%"class.WTF::HashMap.25" = type { %"class.WTF::HashTable.26" }
%"class.WTF::HashTable.26" = type <{ %"struct.WTF::KeyValuePair.28"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.28" = type { i8*, %"class.blink::Member.1866" }
%"class.blink::Member.1866" = type { %"class.blink::MemberBase.1867" }
%"class.blink::MemberBase.1867" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1868" }
%"class.blink::Member.1868" = type { %"class.blink::MemberBase.1869" }
%"class.blink::MemberBase.1869" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.29, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54", %"class.blink::Member.60", i32, [4 x i8], %"class.WTF::HashSet.61", i32, i32 }
%class.scoped_refptr.29 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.30 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.30 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.43", %"class.std::__1::map.52"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.33 }
%union.anon.33 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::map.43" = type { %"class.std::__1::__tree.44" }
%"class.std::__1::__tree.44" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::map.52" = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.60" = type { %"class.blink::MemberBase.3" }
%"class.WTF::HashSet.61" = type { %"class.WTF::HashTable.62" }
%"class.WTF::HashTable.62" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.69" }
%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %"class.blink::Member.72"*, i32, i32 }
%"class.blink::Member.72" = type opaque
%"class.blink::Member.74" = type { %"class.blink::MemberBase.75" }
%"class.blink::MemberBase.75" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.76" = type { %"class.blink::MemberBase.77" }
%"class.blink::MemberBase.77" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.78", i32, i32 }
%"class.blink::HeapHashMap.78" = type { %"class.WTF::HashMap.81" }
%"class.WTF::HashMap.81" = type { %"class.WTF::HashTable.82" }
%"class.WTF::HashTable.82" = type <{ %"struct.WTF::KeyValuePair.84"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.84" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.91" }
%"class.WTF::Vector.91" = type { %"class.WTF::VectorBuffer.92" }
%"class.WTF::VectorBuffer.92" = type { %"class.WTF::VectorBufferBase.93" }
%"class.WTF::VectorBufferBase.93" = type { %"class.mojo::StructPtr.94"*, i32, i32 }
%"class.mojo::StructPtr.94" = type { %"class.std::__1::unique_ptr.95" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.98", %"class.WTF::HashMap.105", %"class.WTF::HashMap.110", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.115", i32, %"class.mojo::StructPtr.120", %"class.WTF::Vector.115" }
%"class.mojo::StructPtr.98" = type { %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.105" = type { %"class.WTF::HashTable.106" }
%"class.WTF::HashTable.106" = type <{ %"struct.WTF::KeyValuePair.109"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.109" = type opaque
%"class.WTF::HashMap.110" = type { %"class.WTF::HashTable.111" }
%"class.WTF::HashTable.111" = type <{ %"struct.WTF::KeyValuePair.114"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.114" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.120" = type { %"class.std::__1::unique_ptr.121" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.115", i8, i8, [6 x i8] }>
%"class.WTF::Vector.115" = type { %"class.WTF::VectorBuffer.116" }
%"class.WTF::VectorBuffer.116" = type { %"class.WTF::VectorBufferBase.117" }
%"class.WTF::VectorBufferBase.117" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.217" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.135", i32 }>
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.144", %"class.absl::optional.149", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.170", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.192", %"class.std::__1::map.203", i64, %"class.base::OnceCallback.163", %"class.base::OnceCallback.212", i8, %class.scoped_refptr.154, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.213" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.138 }
%class.scoped_refptr.138 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.139" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.144" = type { %"class.absl::optional_internal::optional_data.145" }
%"class.absl::optional_internal::optional_data.145" = type { %"class.absl::optional_internal::optional_data_base.146" }
%"class.absl::optional_internal::optional_data_base.146" = type { %"class.absl::optional_internal::optional_data_dtor_base.147" }
%"class.absl::optional_internal::optional_data_dtor_base.147" = type { i8, %union.anon.148 }
%union.anon.148 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.149" = type { %"class.absl::optional_internal::optional_data.150" }
%"class.absl::optional_internal::optional_data.150" = type { %"class.absl::optional_internal::optional_data_base.151" }
%"class.absl::optional_internal::optional_data_base.151" = type { %"class.absl::optional_internal::optional_data_dtor_base.152" }
%"class.absl::optional_internal::optional_data_dtor_base.152" = type { i8, %union.anon.153 }
%union.anon.153 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.163" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.154, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.156 }
%class.scoped_refptr.156 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.157", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.157" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.158" }
%"struct.std::__1::atomic.158" = type { %"struct.std::__1::__atomic_base.159" }
%"struct.std::__1::__atomic_base.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__cxx_atomic_impl.161" }
%"struct.std::__1::__cxx_atomic_impl.161" = type { %"struct.std::__1::__cxx_atomic_base_impl.162" }
%"struct.std::__1::__cxx_atomic_base_impl.162" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.168 }
%class.scoped_refptr.168 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.240", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.154, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.240" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.169 }
%class.scoped_refptr.169 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.173", %class.scoped_refptr.174 }
%"class.base::RepeatingCallback.173" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.174 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.175", [4 x i8] }>
%"class.base::RefCountedThreadSafe.175" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.191" }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.191" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.192" = type { %"class.std::__1::__tree.193" }
%"class.std::__1::__tree.193" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.194", %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::map.203" = type { %"class.std::__1::__tree.204" }
%"class.std::__1::__tree.204" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.205", %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.base::OnceCallback.163" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.212" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.154 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.155" }>
%"class.base::RefCountedThreadSafe.155" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.163" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.213" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.226" = type { %"class.blink::MemberBase.227" }
%"class.blink::MemberBase.227" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.228" = type { %"class.blink::MemberBase.229" }
%"class.blink::MemberBase.229" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.76", i8, [7 x i8], %"class.WTF::Vector.91", %"class.blink::HeapVector.232", i8, [7 x i8], %"class.WTF::HashSet.61", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.232" = type { %"class.WTF::Vector.235" }
%"class.WTF::Vector.235" = type { %"class.WTF::VectorBuffer.236" }
%"class.WTF::VectorBuffer.236" = type { %"class.WTF::VectorBufferBase.237" }
%"class.WTF::VectorBufferBase.237" = type { %"class.blink::Member.238"*, i32, i32 }
%"class.blink::Member.238" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.4" }
%"class.WTF::HashTable.4" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.414", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.422", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.436", %"class.blink::FrameLoader", %"class.blink::Member.459", %"class.blink::Member.461", %"class.blink::Member.490", %"class.blink::Member.492", %"class.blink::Member.494", %"class.blink::Member.496", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.498", %class.scoped_refptr.718, %"class.blink::Member.719", %"class.blink::Member.721", %"class.blink::Member.723", %"class.blink::Member.725", %"class.blink::Member.727", %"class.blink::Member.729", %"class.blink::Member.731", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.735", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.741", %"class.std::__1::unique_ptr.742", %"class.absl::optional.401", i32, [4 x i8], %"class.std::__1::unique_ptr.748", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.756", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.761", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.766", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.769", %"class.blink::Member.771", %"class.blink::Member.773", %"class.blink::Member.775", %"class.mojo::StructPtr.778", %"class.blink::Member.787", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.789", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.245", %"class.blink::Member.247", %"class.blink::Member.249", i8, i32, i8, i32, %"class.blink::Member.386", %"class.blink::Member.273", %"class.blink::FrameLifecycle", %"class.blink::Member.243", %"class.blink::Member.243", %"class.blink::Member.243", %"class.blink::Member.243", %"class.blink::Member.243", %"class.blink::Member.243", %"class.blink::Member", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.394", i8, %"class.base::UnguessableToken", %"class.absl::optional.396", %"class.absl::optional.401", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.243", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.247" = type { %"class.blink::MemberBase.248" }
%"class.blink::MemberBase.248" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.243", %"class.blink::Member.273", %"class.blink::Member.275", %"class.blink::Member.277", i8, %"class.WTF::Vector.279" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.266" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.255" }
%"class.blink::HeapVector.255" = type { %"class.WTF::Vector.258" }
%"class.WTF::Vector.258" = type { %"class.WTF::VectorBuffer.259" }
%"class.WTF::VectorBuffer.259" = type { %"class.WTF::VectorBufferBase.260", [32 x i8] }
%"class.WTF::VectorBufferBase.260" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.261" }
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::HeapVector.263"* }
%"class.blink::HeapVector.263" = type opaque
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.WTF::Vector.269"* }
%"class.WTF::Vector.269" = type opaque
%"class.blink::Member.275" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.277" = type { %"class.blink::MemberBase.278" }
%"class.blink::MemberBase.278" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.279" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.378" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.282, %"class.std::__1::unique_ptr.135", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.154, i32 }>
%class.scoped_refptr.282 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.154, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.344", %"class.absl::optional.349", %"class.absl::optional.303", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.369", i8, [7 x i8], %class.scoped_refptr.154, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.175" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.163", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.154, %"class.std::__1::unique_ptr.283", %"class.absl::optional.293", %"struct.std::__1::atomic.299", i8, i8, i8, i8, i32, i32, %"class.absl::optional.303", %"class.std::__1::unique_ptr.308", i8, i64, %class.scoped_refptr.341, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.343" }
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.154, i8, %"class.mojo::ScopedHandleBase.286", %class.scoped_refptr.287, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.288", i8*, %"class.base::WeakPtrFactory.289" }
%"class.mojo::ScopedHandleBase.286" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.287 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.288" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.289" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.293" = type { %"class.absl::optional_internal::optional_data.294" }
%"class.absl::optional_internal::optional_data.294" = type { %"class.absl::optional_internal::optional_data_base.295" }
%"class.absl::optional_internal::optional_data_base.295" = type { %"class.absl::optional_internal::optional_data_dtor_base.296" }
%"class.absl::optional_internal::optional_data_dtor_base.296" = type { i8, %union.anon.297 }
%union.anon.297 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.298", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.298" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.311", i8, i64, %class.scoped_refptr.312, %class.scoped_refptr.337 }
%"class.base::RepeatingCallback.311" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.312 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.313", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.315", %"class.std::__1::map.326", i8, [7 x i8] }>
%"class.base::RefCounted.313" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.314 }
%class.scoped_refptr.314 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.315" = type { %"class.std::__1::__tree.316" }
%"class.std::__1::__tree.316" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.317", %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::map.326" = type { %"class.std::__1::__tree.327" }
%"class.std::__1::__tree.327" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.328", %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%class.scoped_refptr.337 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.341 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.342 }
%class.scoped_refptr.342 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.343" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.344" = type { %"class.absl::optional_internal::optional_data.345" }
%"class.absl::optional_internal::optional_data.345" = type { %"class.absl::optional_internal::optional_data_base.346" }
%"class.absl::optional_internal::optional_data_base.346" = type { %"class.absl::optional_internal::optional_data_dtor_base.347" }
%"class.absl::optional_internal::optional_data_dtor_base.347" = type { i8, %union.anon.348 }
%union.anon.348 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.349" = type { %"class.absl::optional_internal::optional_data.350" }
%"class.absl::optional_internal::optional_data.350" = type { %"class.absl::optional_internal::optional_data_base.351" }
%"class.absl::optional_internal::optional_data_base.351" = type { %"class.absl::optional_internal::optional_data_dtor_base.352" }
%"class.absl::optional_internal::optional_data_dtor_base.352" = type { i8, [7 x i8], %union.anon.353 }
%union.anon.353 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.303" = type { %"class.absl::optional_internal::optional_data.304" }
%"class.absl::optional_internal::optional_data.304" = type { %"class.absl::optional_internal::optional_data_base.305" }
%"class.absl::optional_internal::optional_data_base.305" = type { %"class.absl::optional_internal::optional_data_dtor_base.306" }
%"class.absl::optional_internal::optional_data_dtor_base.306" = type { i8, %union.anon.307 }
%union.anon.307 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.354 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.354 = type { %"class.std::__1::map.357" }
%"class.std::__1::map.357" = type { %"class.std::__1::__tree.358" }
%"class.std::__1::__tree.358" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.359", %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.368"*, i64 }
%"class.std::__1::unique_ptr.368" = type opaque
%"class.std::__1::map.369" = type { %"class.std::__1::__tree.370" }
%"class.std::__1::__tree.370" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.371", %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.273" = type { %"class.blink::MemberBase.274" }
%"class.blink::MemberBase.274" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.243" = type { %"class.blink::MemberBase.244" }
%"class.blink::MemberBase.244" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.243", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.388"*, %"struct.std::__1::pair.388"*, %"class.std::__1::__compressed_pair.389" }
%"struct.std::__1::pair.388" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"struct.std::__1::pair.388"* }
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.396" = type { %"class.absl::optional_internal::optional_data.397" }
%"class.absl::optional_internal::optional_data.397" = type { %"class.absl::optional_internal::optional_data_base.398" }
%"class.absl::optional_internal::optional_data_base.398" = type { %"class.absl::optional_internal::optional_data_dtor_base.399" }
%"class.absl::optional_internal::optional_data_dtor_base.399" = type { i8, %union.anon.400 }
%union.anon.400 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.406 }
%class.scoped_refptr.406 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.407" }
%"class.blink::HeapHashSet.407" = type { %"class.WTF::HashSet.410" }
%"class.WTF::HashSet.410" = type { %"class.WTF::HashTable.411" }
%"class.WTF::HashTable.411" = type <{ %"class.blink::WeakMember.413"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.413" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.414" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.415" }
%"class.blink::HeapHashMap.415" = type { %"class.WTF::HashMap.418" }
%"class.WTF::HashMap.418" = type { %"class.WTF::HashTable.419" }
%"class.WTF::HashTable.419" = type <{ %"struct.WTF::KeyValuePair.421"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.421" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.425", %"class.base::WeakPtrFactory.430" }
%"class.WTF::HashMap.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"struct.WTF::KeyValuePair.429"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.429" = type opaque
%"class.base::WeakPtrFactory.430" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.434" }
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1090" }
%"class.blink::WeakMember.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1878", i64, %"class.std::__1::map.1879", i8*, i64, %"class.base::WeakPtrFactory.1888" }
%"class.base::RepeatingCallback.1878" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1879" = type { %"class.std::__1::__tree.1880" }
%"class.std::__1::__tree.1880" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1881", %"class.std::__1::__compressed_pair.1885" }
%"class.std::__1::__compressed_pair.1881" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.1885" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.base::WeakPtrFactory.1888" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.436" = type { %"class.WTF::HashSet.439" }
%"class.WTF::HashSet.439" = type { %"class.WTF::HashTable.440" }
%"class.WTF::HashTable.440" = type <{ %"class.blink::WeakMember.442"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.442" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member", %"class.blink::Member.443", %"class.blink::Member.445", %"class.std::__1::unique_ptr.447", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet" }
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.450" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1574", %"class.blink::Member", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1579", i8, i32, %"class.blink::Color", %"class.absl::optional.1581", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1586", %"class.blink::Member.1588", %"class.blink::Member.1588", %"class.std::__1::unique_ptr.1591", i32, [4 x i8], %"class.WTF::HashSet.1594", %"class.blink::Member.1601", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1603", %"class.blink::HeapHashSet.1610", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1618", i8, %"class.blink::Member.1624", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1636", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1650", i8, %"class.std::__1::unique_ptr.1656", %"class.std::__1::unique_ptr.1773", %"class.WTF::Vector.1779", i32, %class.scoped_refptr.1784, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1785", %"class.blink::Member.1787", %"class.blink::Member.1789", %"class.blink::HeapHashSet.1791", %"class.blink::HeapHashSet.1798", %"class.std::__1::unique_ptr.1805", %"class.std::__1::unique_ptr.1812", %"class.WTF::Vector.954" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1574" = type { %"class.WTF::HashTable.1575" }
%"class.WTF::HashTable.1575" = type <{ %class.scoped_refptr.1578*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1578 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1579" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1580", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1338, %"class.base::WeakPtrFactory.1339" }
%class.scoped_refptr.1338 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1339" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1580" = type { %"class.blink::MemberBase.460" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1581" = type { %"class.absl::optional_internal::optional_data.1582" }
%"class.absl::optional_internal::optional_data.1582" = type { %"class.absl::optional_internal::optional_data_base.1583" }
%"class.absl::optional_internal::optional_data_base.1583" = type { %"class.absl::optional_internal::optional_data_dtor_base.1584" }
%"class.absl::optional_internal::optional_data_dtor_base.1584" = type { i8, %union.anon.1585 }
%union.anon.1585 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1586" = type { %"class.blink::MemberBase.1587" }
%"class.blink::MemberBase.1587" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1588" = type { %"class.blink::MemberBase.1589" }
%"class.blink::MemberBase.1589" = type { %"class.blink::HeapHashSet.1590"* }
%"class.blink::HeapHashSet.1590" = type opaque
%"class.std::__1::unique_ptr.1591" = type { %"class.std::__1::__compressed_pair.1592" }
%"class.std::__1::__compressed_pair.1592" = type { %"struct.std::__1::__compressed_pair_elem.1593" }
%"struct.std::__1::__compressed_pair_elem.1593" = type { %"class.WTF::HashSet.1594"* }
%"class.WTF::HashSet.1594" = type { %"class.WTF::HashTable.1595" }
%"class.WTF::HashTable.1595" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1603" = type { %"class.WTF::HashSet.1606" }
%"class.WTF::HashSet.1606" = type { %"class.WTF::HashTable.1607" }
%"class.WTF::HashTable.1607" = type <{ %"class.blink::Member.1609"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1609" = type opaque
%"class.blink::HeapHashSet.1610" = type { %"class.WTF::HashSet.1613" }
%"class.WTF::HashSet.1613" = type { %"class.WTF::HashTable.1614" }
%"class.WTF::HashTable.1614" = type <{ %"class.blink::Member.1616"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1616" = type { %"class.blink::MemberBase.1617" }
%"class.blink::MemberBase.1617" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1846", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1857", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.461" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1846" = type { %"class.blink::MemberBase.1847" }
%"class.blink::MemberBase.1847" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1848", %"class.blink::Member.1849", %"class.blink::Member.1851", %"class.blink::Member.1853", %"class.blink::Member.1855", %"class.WTF::Vector.954", i16, %class.scoped_refptr.1338 }
%"class.blink::ThreadState::PrefinalizerRegistration.1848" = type { i8 }
%"class.blink::Member.1849" = type { %"class.blink::MemberBase.1850" }
%"class.blink::MemberBase.1850" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1851" = type { %"class.blink::MemberBase.1852" }
%"class.blink::MemberBase.1852" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1853" = type { %"class.blink::MemberBase.1854" }
%"class.blink::MemberBase.1854" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1855" = type { %"class.blink::MemberBase.1856" }
%"class.blink::MemberBase.1856" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1857" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1858", { i64, i64 } }
%"class.blink::WeakMember.1858" = type { %"class.blink::MemberBase.1617" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1618" = type { %"class.std::__1::__compressed_pair.1619" }
%"class.std::__1::__compressed_pair.1619" = type { %"struct.std::__1::__compressed_pair_elem.1620" }
%"struct.std::__1::__compressed_pair_elem.1620" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1624" = type { %"class.blink::MemberBase.1625" }
%"class.blink::MemberBase.1625" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1628", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1628" = type { %"class.WTF::HashTable.1629" }
%"class.WTF::HashTable.1629" = type <{ %"struct.WTF::KeyValuePair.1631"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1631" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1632", i32, i32 }
%"class.WTF::Vector.1632" = type { %"class.WTF::VectorBuffer.1633" }
%"class.WTF::VectorBuffer.1633" = type { %"class.WTF::VectorBufferBase.1634" }
%"class.WTF::VectorBufferBase.1634" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1636" = type { %"class.WTF::LinkedHashSet.1639" }
%"class.WTF::LinkedHashSet.1639" = type { %"class.WTF::HashMap.1640", %"class.WTF::VectorBackedLinkedList.1644" }
%"class.WTF::HashMap.1640" = type { %"class.WTF::HashTable.1641" }
%"class.WTF::HashTable.1641" = type <{ %"struct.WTF::KeyValuePair.1643"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1643" = type opaque
%"class.WTF::VectorBackedLinkedList.1644" = type { %"class.WTF::Vector.1645", i32, i32 }
%"class.WTF::Vector.1645" = type { %"class.WTF::VectorBuffer.1646" }
%"class.WTF::VectorBuffer.1646" = type { %"class.WTF::VectorBufferBase.1647" }
%"class.WTF::VectorBufferBase.1647" = type { %"class.WTF::VectorBackedLinkedListNode.1648"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1648" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1650" = type { %"class.std::__1::__compressed_pair.1651" }
%"class.std::__1::__compressed_pair.1651" = type { %"struct.std::__1::__compressed_pair_elem.1652" }
%"struct.std::__1::__compressed_pair_elem.1652" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1656" = type { %"class.std::__1::__compressed_pair.1657" }
%"class.std::__1::__compressed_pair.1657" = type { %"struct.std::__1::__compressed_pair_elem.1658" }
%"struct.std::__1::__compressed_pair_elem.1658" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1659, %class.scoped_refptr.1659, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1750", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1755", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1659 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1660", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1667" }
%"class.WTF::RefCounted.1660" = type { %"class.base::RefCounted.1661" }
%"class.base::RefCounted.1661" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1662", i32, [4 x i8] }>
%"class.WTF::Vector.1662" = type { %"class.WTF::VectorBuffer.1663" }
%"class.WTF::VectorBuffer.1663" = type { %"class.WTF::VectorBufferBase.1664" }
%"class.WTF::VectorBufferBase.1664" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1667" = type { %"class.WTF::VectorBuffer.1668" }
%"class.WTF::VectorBuffer.1668" = type { %"class.WTF::VectorBufferBase.1669" }
%"class.WTF::VectorBufferBase.1669" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1673", %"class.std::__1::unique_ptr.1722", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1670, %class.scoped_refptr.1671, %class.scoped_refptr.1672 }
%class.scoped_refptr.1670 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1686", i8, i8, %class.scoped_refptr.1670, i32, i32 }
%"class.WTF::RefCounted.1686" = type { %"class.base::RefCounted.1687" }
%"class.base::RefCounted.1687" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1671 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1841" }
%"class.blink::PaintPropertyNode.1841" = type { %"class.WTF::RefCounted.1842", i8, i8, %class.scoped_refptr.1671, i32, i32 }
%"class.WTF::RefCounted.1842" = type { %"class.base::RefCounted.1843" }
%"class.base::RefCounted.1843" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1672 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1838" }
%"class.blink::PaintPropertyNode.1838" = type { %"class.WTF::RefCounted.1839", i8, i8, %class.scoped_refptr.1672, i32, i32 }
%"class.WTF::RefCounted.1839" = type { %"class.base::RefCounted.1840" }
%"class.base::RefCounted.1840" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1673" = type { %"class.std::__1::__compressed_pair.1674" }
%"class.std::__1::__compressed_pair.1674" = type { %"struct.std::__1::__compressed_pair_elem.1675" }
%"struct.std::__1::__compressed_pair_elem.1675" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1676", %"class.WTF::Vector.1681", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1676" = type { %"class.WTF::VectorBuffer.1677" }
%"class.WTF::VectorBuffer.1677" = type { %"class.WTF::VectorBufferBase.1678" }
%"class.WTF::VectorBufferBase.1678" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683" }
%"class.WTF::VectorBufferBase.1683" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1701" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1694, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1695", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1688" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1688" = type { %"class.std::__1::__compressed_pair.1689" }
%"class.std::__1::__compressed_pair.1689" = type { %"struct.std::__1::__compressed_pair_elem.1690" }
%"struct.std::__1::__compressed_pair_elem.1690" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1694 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1823", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1823" = type { %"class.WTF::RefCounted.1824", i8, i8, %class.scoped_refptr.1694, i32, i32 }
%"class.WTF::RefCounted.1824" = type { %"class.base::RefCounted.1825" }
%"class.base::RefCounted.1825" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1826" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1826" = type { %"class.absl::optional_internal::optional_data.1827" }
%"class.absl::optional_internal::optional_data.1827" = type { %"class.absl::optional_internal::optional_data_base.1828" }
%"class.absl::optional_internal::optional_data_base.1828" = type { %"class.absl::optional_internal::optional_data_dtor_base.1829" }
%"class.absl::optional_internal::optional_data_dtor_base.1829" = type { i8, %union.anon.1830 }
%union.anon.1830 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1831", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1831" = type { %"class.std::__1::__vector_base.1832" }
%"class.std::__1::__vector_base.1832" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1833" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1833" = type { %"struct.std::__1::__compressed_pair_elem.1834" }
%"struct.std::__1::__compressed_pair_elem.1834" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1695" = type { %"class.std::__1::__compressed_pair.1696" }
%"class.std::__1::__compressed_pair.1696" = type { %"struct.std::__1::__compressed_pair_elem.1697" }
%"struct.std::__1::__compressed_pair_elem.1697" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1701" = type { %"class.std::__1::__compressed_pair.1702" }
%"class.std::__1::__compressed_pair.1702" = type { %"struct.std::__1::__compressed_pair_elem.1703" }
%"struct.std::__1::__compressed_pair_elem.1703" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1704", %"class.std::__1::unique_ptr.1710", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1704" = type { %"class.std::__1::__compressed_pair.1705" }
%"class.std::__1::__compressed_pair.1705" = type { %"struct.std::__1::__compressed_pair_elem.1706" }
%"struct.std::__1::__compressed_pair_elem.1706" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1710" = type { %"class.std::__1::__compressed_pair.1711" }
%"class.std::__1::__compressed_pair.1711" = type { %"struct.std::__1::__compressed_pair_elem.1712" }
%"struct.std::__1::__compressed_pair_elem.1712" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1722" = type { %"class.std::__1::__compressed_pair.1723" }
%"class.std::__1::__compressed_pair.1723" = type { %"struct.std::__1::__compressed_pair_elem.1724" }
%"struct.std::__1::__compressed_pair_elem.1724" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1725", %"class.absl::optional.1725" }
%"class.absl::optional.1725" = type { %"class.absl::optional_internal::optional_data.1726" }
%"class.absl::optional_internal::optional_data.1726" = type { %"class.absl::optional_internal::optional_data_base.1727" }
%"class.absl::optional_internal::optional_data_base.1727" = type { %"class.absl::optional_internal::optional_data_dtor_base.1728" }
%"class.absl::optional_internal::optional_data_dtor_base.1728" = type { i8, [3 x i8], %union.anon.1729 }
%union.anon.1729 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1667"*, %"class.absl::optional.1735", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1735" = type { %"class.absl::optional_internal::optional_data.1736" }
%"class.absl::optional_internal::optional_data.1736" = type { %"class.absl::optional_internal::optional_data_base.1737" }
%"class.absl::optional_internal::optional_data_base.1737" = type { %"class.absl::optional_internal::optional_data_dtor_base.1738" }
%"class.absl::optional_internal::optional_data_dtor_base.1738" = type { i8, %union.anon.1739 }
%union.anon.1739 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1740", %"class.WTF::Vector.1745" }
%"class.WTF::Vector.1740" = type { %"class.WTF::VectorBuffer.1741" }
%"class.WTF::VectorBuffer.1741" = type { %"class.WTF::VectorBufferBase.1742", [128 x i8] }
%"class.WTF::VectorBufferBase.1742" = type { i32*, i32, i32 }
%"class.WTF::Vector.1745" = type { %"class.WTF::VectorBuffer.1746" }
%"class.WTF::VectorBuffer.1746" = type { %"class.WTF::VectorBufferBase.1747", [128 x i8] }
%"class.WTF::VectorBufferBase.1747" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1750" = type { %"class.WTF::VectorBuffer.1751" }
%"class.WTF::VectorBuffer.1751" = type { %"class.WTF::VectorBufferBase.1752" }
%"class.WTF::VectorBufferBase.1752" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1755" = type { %"class.WTF::HashTable.1756" }
%"class.WTF::HashTable.1756" = type <{ %"struct.WTF::KeyValuePair.1759"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1759" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1760", %"class.WTF::Vector.1765" }
%"class.WTF::HashMap.1760" = type { %"class.WTF::HashTable.1761" }
%"class.WTF::HashTable.1761" = type <{ %"struct.WTF::KeyValuePair.1764"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1764" = type opaque
%"class.WTF::Vector.1765" = type { %"class.WTF::VectorBuffer.1766" }
%"class.WTF::VectorBuffer.1766" = type { %"class.WTF::VectorBufferBase.1767" }
%"class.WTF::VectorBufferBase.1767" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1773" = type { %"class.std::__1::__compressed_pair.1774" }
%"class.std::__1::__compressed_pair.1774" = type { %"struct.std::__1::__compressed_pair_elem.1775" }
%"struct.std::__1::__compressed_pair_elem.1775" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1779" = type { %"class.WTF::VectorBuffer.1780" }
%"class.WTF::VectorBuffer.1780" = type { %"class.WTF::VectorBufferBase.1781" }
%"class.WTF::VectorBufferBase.1781" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1784 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1785" = type { %"class.blink::MemberBase.1786" }
%"class.blink::MemberBase.1786" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1787" = type { %"class.blink::MemberBase.1788" }
%"class.blink::MemberBase.1788" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1789" = type { %"class.blink::MemberBase.1790" }
%"class.blink::MemberBase.1790" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1791" = type { %"class.WTF::HashSet.1794" }
%"class.WTF::HashSet.1794" = type { %"class.WTF::HashTable.1795" }
%"class.WTF::HashTable.1795" = type <{ %"class.blink::WeakMember.1797"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1797" = type opaque
%"class.blink::HeapHashSet.1798" = type { %"class.WTF::HashSet.1801" }
%"class.WTF::HashSet.1801" = type { %"class.WTF::HashTable.1802" }
%"class.WTF::HashTable.1802" = type <{ %"class.blink::WeakMember.1804"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1804" = type opaque
%"class.std::__1::unique_ptr.1805" = type { %"class.std::__1::__compressed_pair.1806" }
%"class.std::__1::__compressed_pair.1806" = type { %"struct.std::__1::__compressed_pair_elem.1807" }
%"struct.std::__1::__compressed_pair_elem.1807" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1808" }
%"class.base::time_internal::TimeBase.1808" = type { i64 }
%"class.std::__1::unique_ptr.1812" = type { %"class.std::__1::__compressed_pair.1813" }
%"class.std::__1::__compressed_pair.1813" = type { %"struct.std::__1::__compressed_pair_elem.1814" }
%"struct.std::__1::__compressed_pair_elem.1814" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1815", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1815" = type { %"class.absl::optional_internal::optional_data.1816" }
%"class.absl::optional_internal::optional_data.1816" = type { %"class.absl::optional_internal::optional_data_base.1817" }
%"class.absl::optional_internal::optional_data_base.1817" = type { %"class.absl::optional_internal::optional_data_dtor_base.1818" }
%"class.absl::optional_internal::optional_data_dtor_base.1818" = type { i8, %union.anon.1819 }
%union.anon.1819 = type { %"class.base::Time" }
%"class.WTF::Vector.954" = type { %"class.WTF::VectorBuffer.955" }
%"class.WTF::VectorBuffer.955" = type { %"class.WTF::VectorBufferBase.956" }
%"class.WTF::VectorBufferBase.956" = type { %"class.base::OnceCallback.163"*, i32, i32 }
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.474" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.463", %"class.blink::Member.463" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.463", %"class.blink::Member.465", %"class.blink::Member.463", %"class.blink::Member.463", %"class.blink::Member.467" }
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.866", %"class.blink::Member.868", %"class.blink::Member.465", %"class.blink::Member.870", %"class.blink::Member.870", %"class.blink::Member.892", %"class.blink::Member.894", %"class.blink::Member.896", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.901", %"class.blink::HeapVector.903" }
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.868" = type { %"class.blink::MemberBase.869" }
%"class.blink::MemberBase.869" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.946", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.954", %"class.WTF::Vector.954", i8, i32, %"class.blink::Member.959", %"class.blink::Member.60", %"class.blink::Member.1120", %"class.blink::Member.1122", %"class.blink::Member.1124", %"class.blink::Member.1126", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1128", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1134", %"class.blink::Member.1136", %"class.blink::Member.909", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1138", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.885", %"class.blink::Member.461", %"class.blink::Member.1101", %"class.blink::Member.461", %"class.blink::Member.461", %"class.blink::Member.461", %"class.blink::UserActionElementSet", %"class.blink::Member.1348", double, double, i64, i64, %"class.blink::HeapHashSet.1350", %"class.blink::HeapHashSet.1357", i16, i8, %"class.blink::Member.1364", %"class.blink::Member.1366", %"class.blink::Member.1368", %"class.blink::Member.1370", %"class.blink::TextLinkColors", %"class.blink::Member.1372", i8, [7 x i8], %"class.blink::HeapHashMap.1374", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.461", %"class.WTF::Vector.1381", %"class.blink::Member.1386", %"class.blink::Member.1390", i8, %"class.blink::Member.461", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1392", %"class.blink::HeapVector.1394", %"class.std::__1::unique_ptr.1402", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1408", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1421", %"class.WTF::Vector.1423", i8, i8, %"class.std::__1::unique_ptr.1428", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.885", %"class.blink::HeapVector.1434", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1442", i8, i32, %"class.blink::Member.1444", %"class.blink::Member.1446", %"class.blink::Member.1448", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1450", %"class.WTF::HashMap.1452", %"class.blink::Member.1457", %"class.blink::Member.1459", %"class.blink::Member.1461", %"class.blink::Member.1463", %"class.blink::Member.868", %"class.blink::Member.868", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1465", i8, i32, %"class.blink::Member.1472", %"class.blink::Member.1474", i32, %"class.blink::Member.1476", %"class.blink::Member.1478", %"class.blink::Member.1480", %"class.std::__1::unique_ptr.1482", i64, %"class.std::__1::unique_ptr.1488", i32, i32, %"class.blink::Member.1494", %"class.blink::Member.1496", %"class.blink::Member.1498", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1500", %"class.WTF::Vector", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1502", %"class.blink::Member.1509", %"class.std::__1::unique_ptr.1511", %"class.blink::Member.1517", i8, i8, %"class.WTF::String", %"class.blink::Member.1519", i8, [7 x i8], %"class.blink::HeapHashMap.1521", %"class.blink::HeapObserverSet.1528", %"class.blink::Member.1536", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1538", i32, i8, i8, %"class.blink::WeakMember.1540", %"class.blink::Member.1541" }
%"class.blink::Supplementable.946" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.947" }
%"class.blink::HeapHashMap.947" = type { %"class.WTF::HashMap.950" }
%"class.WTF::HashMap.950" = type { %"class.WTF::HashTable.951" }
%"class.WTF::HashTable.951" = type <{ %"struct.WTF::KeyValuePair.953"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.953" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.961", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.969", %"class.blink::Member.868", %"class.blink::Member.971", i8, %"class.blink::Member.973", %"class.blink::Member.975", %"class.blink::Member.977", %"class.blink::Member.977", %"class.blink::Member.977", %"class.blink::Member.977", %"class.blink::Member.977", %"class.blink::Member.977", %"class.blink::Member.979", %"class.blink::Member.981", %"class.blink::Member.983", %"class.blink::Member.985", %"class.blink::Member.987", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.115", %"class.blink::Member.989", %class.scoped_refptr.991, %"class.blink::HeapHashSet.1053", %"class.blink::Member.1060", %"class.blink::HeapHashMap.1073", %"class.std::__1::unique_ptr.1080", %"class.blink::Member.1086", %"class.blink::Member.1105", %"class.blink::Member.1107", %"class.blink::Member.1109", %"class.WTF::Vector", %"class.util::TokenType", %"class.WTF::HashSet.1112", %"class.WTF::Deque" }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.65", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.74", %"class.blink::Member.76", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.85", %"class.blink::Member.226", %"class.blink::Member.228", i8 }>
%"class.blink::Supplementable.961" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.962" }
%"class.blink::HeapHashMap.962" = type { %"class.WTF::HashMap.965" }
%"class.WTF::HashMap.965" = type { %"class.WTF::HashTable.966" }
%"class.WTF::HashTable.966" = type <{ %"struct.WTF::KeyValuePair.968"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.968" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.969" = type { %"class.blink::MemberBase.970" }
%"class.blink::MemberBase.970" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.971" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.981" = type { %"class.blink::MemberBase.982" }
%"class.blink::MemberBase.982" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.983" = type { %"class.blink::MemberBase.984" }
%"class.blink::MemberBase.984" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.985" = type { %"class.blink::MemberBase.986" }
%"class.blink::MemberBase.986" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.987" = type { %"class.blink::MemberBase.988" }
%"class.blink::MemberBase.988" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.989" = type { %"class.blink::MemberBase.990" }
%"class.blink::MemberBase.990" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.991 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.993", i64, %"class.WTF::Vector.997", %"class.WTF::Vector.1002", %"class.WTF::Vector.1008", %"class.WTF::Vector.1026", %class.scoped_refptr.29, %"class.WTF::HashMap.1032", %"class.WTF::Vector.1037", %"class.WTF::Vector.997", %"class.WTF::Vector.1043", %"class.WTF::HashMap.1048", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.992" }
%"class.base::RefCountedThreadSafe.992" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.993" = type { %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { i8* }
%"class.WTF::Vector.1002" = type { %"class.WTF::VectorBuffer.1003" }
%"class.WTF::VectorBuffer.1003" = type { %"class.WTF::VectorBufferBase.1004", [8 x i8] }
%"class.WTF::VectorBufferBase.1004" = type { %class.scoped_refptr.1005*, i32, i32 }
%class.scoped_refptr.1005 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1008" = type { %"class.WTF::VectorBuffer.1009" }
%"class.WTF::VectorBuffer.1009" = type { %"class.WTF::VectorBufferBase.1010" }
%"class.WTF::VectorBufferBase.1010" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1012", %"class.std::__1::unique_ptr.1018" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1011 }
%class.scoped_refptr.1011 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1012" = type { %"class.std::__1::__compressed_pair.1013" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1026" = type { %"class.WTF::VectorBuffer.1027" }
%"class.WTF::VectorBuffer.1027" = type { %"class.WTF::VectorBufferBase.1028" }
%"class.WTF::VectorBufferBase.1028" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1029", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1029" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1032" = type { %"class.WTF::HashTable.1033" }
%"class.WTF::HashTable.1033" = type <{ %"struct.WTF::KeyValuePair.1036"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1036" = type opaque
%"class.WTF::Vector.1037" = type { %"class.WTF::VectorBuffer.1038" }
%"class.WTF::VectorBuffer.1038" = type { %"class.WTF::VectorBufferBase.1039" }
%"class.WTF::VectorBufferBase.1039" = type { %"class.mojo::ScopedHandleBase.1040"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1040" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.997" = type { %"class.WTF::VectorBuffer.998" }
%"class.WTF::VectorBuffer.998" = type { %"class.WTF::VectorBufferBase.999", [16 x i8] }
%"class.WTF::VectorBufferBase.999" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1043" = type { %"class.WTF::VectorBuffer.1044" }
%"class.WTF::VectorBuffer.1044" = type { %"class.WTF::VectorBufferBase.1045" }
%"class.WTF::VectorBufferBase.1045" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.1048" = type { %"class.WTF::HashTable.1049" }
%"class.WTF::HashTable.1049" = type <{ %"struct.WTF::KeyValuePair.1052"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1052" = type { i8**, %"class.std::__1::unique_ptr.1870" }
%"class.std::__1::unique_ptr.1870" = type { %"class.std::__1::__compressed_pair.1871" }
%"class.std::__1::__compressed_pair.1871" = type { %"struct.std::__1::__compressed_pair_elem.1872" }
%"struct.std::__1::__compressed_pair_elem.1872" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.1053" = type { %"class.WTF::HashSet.1056" }
%"class.WTF::HashSet.1056" = type { %"class.WTF::HashTable.1057" }
%"class.WTF::HashTable.1057" = type <{ %"class.blink::WeakMember.1059"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1059" = type opaque
%"class.blink::Member.1060" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1067", %"class.blink::Member.1067", %"class.blink::Member.1069", %"class.blink::Member.1071", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1062" }
%"class.absl::optional.1062" = type { %"class.absl::optional_internal::optional_data.1063" }
%"class.absl::optional_internal::optional_data.1063" = type { %"class.absl::optional_internal::optional_data_base.1064" }
%"class.absl::optional_internal::optional_data_base.1064" = type { %"class.absl::optional_internal::optional_data_dtor_base.1065" }
%"class.absl::optional_internal::optional_data_dtor_base.1065" = type { i8, %union.anon.1066 }
%union.anon.1066 = type { i64 }
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.1070" }
%"class.blink::MemberBase.1070" = type { %"class.blink::Event"* }
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1073" = type { %"class.WTF::HashMap.1076" }
%"class.WTF::HashMap.1076" = type { %"class.WTF::HashTable.1077" }
%"class.WTF::HashTable.1077" = type <{ %"struct.WTF::KeyValuePair.1079"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1079" = type opaque
%"class.std::__1::unique_ptr.1080" = type { %"class.std::__1::__compressed_pair.1081" }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.1082" }
%"struct.std::__1::__compressed_pair_elem.1082" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1086" = type { %"class.blink::MemberBase.1087" }
%"class.blink::MemberBase.1087" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1101", %"class.blink::Member.1103", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1092", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1094", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1094" = type { %"class.WTF::HashMap.1097" }
%"class.WTF::HashMap.1097" = type { %"class.WTF::HashTable.1098" }
%"class.WTF::HashTable.1098" = type <{ %"struct.WTF::KeyValuePair.1100"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1100" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.463", i32, i32 }
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1105" = type { %"class.blink::MemberBase.1106" }
%"class.blink::MemberBase.1106" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.959", %"class.blink::Member.1568", %"class.blink::Member.1570" }
%"class.blink::Member.1568" = type { %"class.blink::MemberBase.1569" }
%"class.blink::MemberBase.1569" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1570" = type { %"class.blink::MemberBase.1571" }
%"class.blink::MemberBase.1571" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1107" = type { %"class.blink::MemberBase.1108" }
%"class.blink::MemberBase.1108" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.959", %"class.blink::HeapMojoRemote.1563" }
%"class.blink::HeapMojoRemote.1563" = type { %"class.blink::Member.1564" }
%"class.blink::Member.1564" = type { %"class.blink::MemberBase.1565" }
%"class.blink::MemberBase.1565" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::HeapHashMap.1111"* }
%"class.blink::HeapHashMap.1111" = type opaque
%"class.WTF::HashSet.1112" = type { %"class.WTF::HashTable.1113" }
%"class.WTF::HashTable.1113" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1118" }
%"class.WTF::VectorBuffer.1118" = type { %"class.WTF::VectorBufferBase.1119" }
%"class.WTF::VectorBufferBase.1119" = type { i64*, i32, i32 }
%"class.blink::Member.1120" = type { %"class.blink::MemberBase.1121" }
%"class.blink::MemberBase.1121" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1122" = type { %"class.blink::MemberBase.1123" }
%"class.blink::MemberBase.1123" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1124" = type { %"class.blink::MemberBase.1125" }
%"class.blink::MemberBase.1125" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1126" = type { %"class.blink::MemberBase.1127" }
%"class.blink::MemberBase.1127" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1128" = type { %"class.std::__1::__compressed_pair.1129" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1134" = type { %"class.blink::MemberBase.1135" }
%"class.blink::MemberBase.1135" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.909" = type { %"class.blink::MemberBase.910" }
%"class.blink::MemberBase.910" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.911", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.913, %"class.WTF::Vector.914", %"class.WTF::Vector.914", %"class.blink::Member.463", %"class.blink::Member.919", %"class.blink::HeapHashSet.923", %"class.blink::Member.868", %"class.WTF::HashSet.930", %"class.WTF::TextPosition", %"class.blink::Member.934", %"class.blink::HeapVector.936", %"class.blink::Member.943" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.911" = type { %"class.blink::MemberBase.912" }
%"class.blink::MemberBase.912" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.913 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.914" = type { %"class.WTF::VectorBuffer.915" }
%"class.WTF::VectorBuffer.915" = type { %"class.WTF::VectorBufferBase.916" }
%"class.WTF::VectorBufferBase.916" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.921" }
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.923" = type { %"class.WTF::HashSet.926" }
%"class.WTF::HashSet.926" = type { %"class.WTF::HashTable.927" }
%"class.WTF::HashTable.927" = type <{ %"class.blink::WeakMember.929"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.929" = type { %"class.blink::MemberBase.466" }
%"class.WTF::HashSet.930" = type { %"class.WTF::HashTable.931" }
%"class.WTF::HashTable.931" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.934" = type { %"class.blink::MemberBase.935" }
%"class.blink::MemberBase.935" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.936" = type { %"class.WTF::Vector.939" }
%"class.WTF::Vector.939" = type { %"class.WTF::VectorBuffer.940" }
%"class.WTF::VectorBuffer.940" = type { %"class.WTF::VectorBufferBase.941" }
%"class.WTF::VectorBufferBase.941" = type { %"class.blink::Member.919"*, i32, i32 }
%"class.blink::Member.943" = type { %"class.blink::MemberBase.944" }
%"class.blink::MemberBase.944" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1138" = type { %"class.WTF::VectorBuffer.1139" }
%"class.WTF::VectorBuffer.1139" = type { %"class.WTF::VectorBufferBase.1140" }
%"class.WTF::VectorBufferBase.1140" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1141 }
%class.scoped_refptr.1141 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1142", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.1142" = type { %"class.base::RefCounted.1143" }
%"class.base::RefCounted.1143" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1146" }
%"class.blink::HeapHashMap.1146" = type { %"class.WTF::HashMap.1149" }
%"class.WTF::HashMap.1149" = type { %"class.WTF::HashTable.1150" }
%"class.WTF::HashTable.1150" = type <{ %"struct.WTF::KeyValuePair.1152"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1152" = type { %"class.blink::WeakMember.1153", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.1101" = type { %"class.blink::MemberBase.1102" }
%"class.blink::MemberBase.1102" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.868", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.463", %"class.blink::Member.463", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1341" }
%"class.blink::HeapHashMap.1341" = type { %"class.WTF::HashMap.1344" }
%"class.WTF::HashMap.1344" = type { %"class.WTF::HashTable.1345" }
%"class.WTF::HashTable.1345" = type <{ %"struct.WTF::KeyValuePair.1347"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1347" = type opaque
%"class.blink::Member.1348" = type { %"class.blink::MemberBase.1349" }
%"class.blink::MemberBase.1349" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1350" = type { %"class.WTF::HashSet.1353" }
%"class.WTF::HashSet.1353" = type { %"class.WTF::HashTable.1354" }
%"class.WTF::HashTable.1354" = type <{ %"class.blink::WeakMember.1356"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1356" = type opaque
%"class.blink::HeapHashSet.1357" = type { %"class.WTF::HashSet.1360" }
%"class.WTF::HashSet.1360" = type { %"class.WTF::HashTable.1361" }
%"class.WTF::HashTable.1361" = type <{ %"class.blink::WeakMember.1363"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1363" = type opaque
%"class.blink::Member.1364" = type { %"class.blink::MemberBase.1365" }
%"class.blink::MemberBase.1365" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1366" = type { %"class.blink::MemberBase.1367" }
%"class.blink::MemberBase.1367" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1368" = type { %"class.blink::MemberBase.1369" }
%"class.blink::MemberBase.1369" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.465", %"class.blink::HeapVector.903" }
%"class.blink::Member.1370" = type { %"class.blink::MemberBase.1371" }
%"class.blink::MemberBase.1371" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1372" = type { %"class.blink::MemberBase.1373" }
%"class.blink::MemberBase.1373" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1374" = type { %"class.WTF::HashMap.1377" }
%"class.WTF::HashMap.1377" = type { %"class.WTF::HashTable.1378" }
%"class.WTF::HashTable.1378" = type <{ %"struct.WTF::KeyValuePair.1380"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1380" = type opaque
%"class.WTF::Vector.1381" = type { %"class.WTF::VectorBuffer.1382" }
%"class.WTF::VectorBuffer.1382" = type { %"class.WTF::VectorBufferBase.1383" }
%"class.WTF::VectorBufferBase.1383" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1386" = type { %"class.blink::MemberBase.1387" }
%"class.blink::MemberBase.1387" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1394" = type { %"class.WTF::Vector.1397" }
%"class.WTF::Vector.1397" = type { %"class.WTF::VectorBuffer.1398" }
%"class.WTF::VectorBuffer.1398" = type { %"class.WTF::VectorBufferBase.1399" }
%"class.WTF::VectorBufferBase.1399" = type { %"class.blink::Member.1400"*, i32, i32 }
%"class.blink::Member.1400" = type opaque
%"class.std::__1::unique_ptr.1402" = type { %"class.std::__1::__compressed_pair.1403" }
%"class.std::__1::__compressed_pair.1403" = type { %"struct.std::__1::__compressed_pair_elem.1404" }
%"struct.std::__1::__compressed_pair_elem.1404" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1408" = type { %"class.WTF::HashSet.1411" }
%"class.WTF::HashSet.1411" = type { %"class.WTF::HashTable.1412" }
%"class.WTF::HashTable.1412" = type <{ %"class.blink::WeakMember.1414"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1414" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1415", i32, [4 x i8] }>
%"class.WTF::Vector.1415" = type { %"class.WTF::VectorBuffer.1416" }
%"class.WTF::VectorBuffer.1416" = type { %"class.WTF::VectorBufferBase.1417" }
%"class.WTF::VectorBufferBase.1417" = type { %"struct.std::__1::pair.1418"*, i32, i32 }
%"struct.std::__1::pair.1418" = type opaque
%"class.blink::Member.1421" = type { %"class.blink::MemberBase.1422" }
%"class.blink::MemberBase.1422" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1423" = type { %"class.WTF::VectorBuffer.1424" }
%"class.WTF::VectorBuffer.1424" = type { %"class.WTF::VectorBufferBase.1425" }
%"class.WTF::VectorBufferBase.1425" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1428" = type { %"class.std::__1::__compressed_pair.1429" }
%"class.std::__1::__compressed_pair.1429" = type { %"struct.std::__1::__compressed_pair_elem.1430" }
%"struct.std::__1::__compressed_pair_elem.1430" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.885" = type { %"class.WTF::Vector.888" }
%"class.WTF::Vector.888" = type { %"class.WTF::VectorBuffer.889" }
%"class.WTF::VectorBuffer.889" = type { %"class.WTF::VectorBufferBase.890" }
%"class.WTF::VectorBufferBase.890" = type { %"class.blink::Member.461"*, i32, i32 }
%"class.blink::HeapVector.1434" = type { %"class.WTF::Vector.1437" }
%"class.WTF::Vector.1437" = type { %"class.WTF::VectorBuffer.1438" }
%"class.WTF::VectorBuffer.1438" = type { %"class.WTF::VectorBufferBase.1439" }
%"class.WTF::VectorBufferBase.1439" = type { %"class.blink::Member.1440"*, i32, i32 }
%"class.blink::Member.1440" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.868" }
%"class.blink::Member.1442" = type { %"class.blink::MemberBase.1443" }
%"class.blink::MemberBase.1443" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1444" = type { %"class.blink::MemberBase.1445" }
%"class.blink::MemberBase.1445" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1446" = type { %"class.blink::MemberBase.1447" }
%"class.blink::MemberBase.1447" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1448" = type { %"class.blink::MemberBase.1449" }
%"class.blink::MemberBase.1449" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1450" = type { %"class.blink::MemberBase.1451" }
%"class.blink::MemberBase.1451" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1452" = type { %"class.WTF::HashTable.1453" }
%"class.WTF::HashTable.1453" = type <{ %"struct.WTF::KeyValuePair.1456"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1456" = type opaque
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1459" = type { %"class.blink::MemberBase.1460" }
%"class.blink::MemberBase.1460" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1461" = type { %"class.blink::MemberBase.1462" }
%"class.blink::MemberBase.1462" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1340", { i64, i64 } }
%"class.blink::WeakMember.1340" = type { %"class.blink::MemberBase.869" }
%"class.blink::HeapHashSet.1465" = type { %"class.WTF::HashSet.1468" }
%"class.WTF::HashSet.1468" = type { %"class.WTF::HashTable.1469" }
%"class.WTF::HashTable.1469" = type <{ %"class.blink::Member.1471"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1471" = type opaque
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1476" = type { %"class.blink::MemberBase.1477" }
%"class.blink::MemberBase.1477" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1478" = type { %"class.blink::MemberBase.1479" }
%"class.blink::MemberBase.1479" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1480" = type { %"class.blink::MemberBase.1481" }
%"class.blink::MemberBase.1481" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1482" = type { %"class.std::__1::__compressed_pair.1483" }
%"class.std::__1::__compressed_pair.1483" = type { %"struct.std::__1::__compressed_pair_elem.1484" }
%"struct.std::__1::__compressed_pair_elem.1484" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1488" = type { %"class.std::__1::__compressed_pair.1489" }
%"class.std::__1::__compressed_pair.1489" = type { %"struct.std::__1::__compressed_pair_elem.1490" }
%"struct.std::__1::__compressed_pair_elem.1490" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1494" = type { %"class.blink::MemberBase.1495" }
%"class.blink::MemberBase.1495" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1502" = type { %"class.WTF::HashMap.1505" }
%"class.WTF::HashMap.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"struct.WTF::KeyValuePair.1508"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1508" = type opaque
%"class.blink::Member.1509" = type { %"class.blink::MemberBase.1510" }
%"class.blink::MemberBase.1510" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1511" = type { %"class.std::__1::__compressed_pair.1512" }
%"class.std::__1::__compressed_pair.1512" = type { %"struct.std::__1::__compressed_pair_elem.1513" }
%"struct.std::__1::__compressed_pair_elem.1513" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1519" = type { %"class.blink::MemberBase.1520" }
%"class.blink::MemberBase.1520" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1521" = type { %"class.WTF::HashMap.1524" }
%"class.WTF::HashMap.1524" = type { %"class.WTF::HashTable.1525" }
%"class.WTF::HashTable.1525" = type <{ %"struct.WTF::KeyValuePair.1527"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1527" = type opaque
%"class.blink::HeapObserverSet.1528" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1529" }
%"class.blink::HeapHashSet.1529" = type { %"class.WTF::HashSet.1532" }
%"class.WTF::HashSet.1532" = type { %"class.WTF::HashTable.1533" }
%"class.WTF::HashTable.1533" = type <{ %"class.blink::WeakMember.1535"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1535" = type opaque
%"class.blink::Member.1536" = type { %"class.blink::MemberBase.1537" }
%"class.blink::MemberBase.1537" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1538" = type { %"class.blink::MemberBase.1539" }
%"class.blink::MemberBase.1539" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.868", %"class.blink::HeapHashSet.1545", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1552", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1545" = type { %"class.WTF::HashSet.1548" }
%"class.WTF::HashSet.1548" = type { %"class.WTF::HashTable.1549" }
%"class.WTF::HashTable.1549" = type <{ %"class.blink::Member.1551"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1551" = type opaque
%"class.blink::HeapTaskRunnerTimer.1552" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1553", { i64, i64 } }
%"class.blink::WeakMember.1553" = type { %"class.blink::MemberBase.1539" }
%"class.blink::WeakMember.1540" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::Node"* }
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.874" }
%"class.blink::HeapHashMap.874" = type { %"class.WTF::HashMap.877" }
%"class.WTF::HashMap.877" = type { %"class.WTF::HashTable.878" }
%"class.WTF::HashTable.878" = type <{ %"struct.WTF::KeyValuePair.880"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.880" = type { %"class.WTF::AtomicString", %"class.blink::Member.881" }
%"class.blink::Member.881" = type { %"class.blink::MemberBase.882" }
%"class.blink::MemberBase.882" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.461", i32, %"class.blink::HeapVector.885" }
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.896" = type { %"class.blink::MemberBase.897" }
%"class.blink::MemberBase.897" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.898" }
%"class.blink::Member.898" = type { %"class.blink::MemberBase.899" }
%"class.blink::MemberBase.899" = type { %"class.blink::HeapHashMap.900"* }
%"class.blink::HeapHashMap.900" = type opaque
%"class.blink::Member.901" = type { %"class.blink::MemberBase.902" }
%"class.blink::MemberBase.902" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.903" = type { %"class.WTF::Vector.906" }
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.blink::Member.909"*, i32, i32 }
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.471 }
%class.scoped_refptr.471 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.472", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.472" = type { %"class.base::RefCounted.473" }
%"class.base::RefCounted.473" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.478", %"class.blink::Member.480", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.478" = type { %"class.WTF::SingleThreadedBitField.479" }
%"class.WTF::SingleThreadedBitField.479" = type { i32 }
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.482 }
%class.scoped_refptr.482 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.483", %"class.WTF::AtomicString", %"class.WTF::Vector.485" }
%"class.WTF::RefCounted.483" = type { %"class.base::RefCounted.484" }
%"class.base::RefCounted.484" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.485" = type { %"class.WTF::VectorBuffer.486" }
%"class.WTF::VectorBuffer.486" = type { %"class.WTF::VectorBufferBase.487", [32 x i8] }
%"class.WTF::VectorBufferBase.487" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.509", %"class.blink::HeapListHashSet.520", %"class.blink::HeapListHashSet.531", %"class.blink::HeapListHashSet.542", %"class.blink::HeapListHashSet.553", %"class.blink::HeapListHashSet.564", %"class.blink::HeapListHashSet.575", %"class.blink::HeapListHashSet.586", %"class.blink::HeapListHashSet.597", %"class.blink::HeapListHashSet.608", %"class.blink::HeapListHashSet.619", %"class.blink::HeapListHashSet.630", %"class.blink::HeapListHashSet.641", %"class.blink::HeapListHashSet.652", %"class.blink::HeapListHashSet.663", %"class.blink::HeapListHashSet.674", %"class.blink::HeapListHashSet.685", %"class.blink::HeapListHashSet.696", %"class.blink::HeapListHashSet.707" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.505", %"class.blink::Member.507", %"class.blink::Member.507", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.505" = type <{ %"class.blink::Member.507"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.721", %"class.blink::Member.507", %"class.blink::Member.507" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.509" = type { %"class.WTF::ListHashSet.base.519", [7 x i8] }
%"class.WTF::ListHashSet.base.519" = type <{ %"class.WTF::HashTable.514", %"class.blink::Member.516", %"class.blink::Member.516", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.514" = type <{ %"class.blink::Member.516"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::HeapListHashSetNode.518"* }
%"class.blink::HeapListHashSetNode.518" = type { %"class.blink::Member.862", %"class.blink::Member.516", %"class.blink::Member.516" }
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.520" = type { %"class.WTF::ListHashSet.base.530", [7 x i8] }
%"class.WTF::ListHashSet.base.530" = type <{ %"class.WTF::HashTable.525", %"class.blink::Member.527", %"class.blink::Member.527", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.525" = type <{ %"class.blink::Member.527"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::HeapListHashSetNode.529"* }
%"class.blink::HeapListHashSetNode.529" = type { %"class.blink::Member.858", %"class.blink::Member.527", %"class.blink::Member.527" }
%"class.blink::Member.858" = type { %"class.blink::MemberBase.859" }
%"class.blink::MemberBase.859" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.531" = type { %"class.WTF::ListHashSet.base.541", [7 x i8] }
%"class.WTF::ListHashSet.base.541" = type <{ %"class.WTF::HashTable.536", %"class.blink::Member.538", %"class.blink::Member.538", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.536" = type <{ %"class.blink::Member.538"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::HeapListHashSetNode.540"* }
%"class.blink::HeapListHashSetNode.540" = type { %"class.blink::Member.854", %"class.blink::Member.538", %"class.blink::Member.538" }
%"class.blink::Member.854" = type { %"class.blink::MemberBase.855" }
%"class.blink::MemberBase.855" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.542" = type { %"class.WTF::ListHashSet.base.552", [7 x i8] }
%"class.WTF::ListHashSet.base.552" = type <{ %"class.WTF::HashTable.547", %"class.blink::Member.549", %"class.blink::Member.549", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.547" = type <{ %"class.blink::Member.549"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::HeapListHashSetNode.551"* }
%"class.blink::HeapListHashSetNode.551" = type { %"class.blink::Member.850", %"class.blink::Member.549", %"class.blink::Member.549" }
%"class.blink::Member.850" = type { %"class.blink::MemberBase.851" }
%"class.blink::MemberBase.851" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.553" = type { %"class.WTF::ListHashSet.base.563", [7 x i8] }
%"class.WTF::ListHashSet.base.563" = type <{ %"class.WTF::HashTable.558", %"class.blink::Member.560", %"class.blink::Member.560", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.558" = type <{ %"class.blink::Member.560"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::HeapListHashSetNode.562"* }
%"class.blink::HeapListHashSetNode.562" = type { %"class.blink::Member.846", %"class.blink::Member.560", %"class.blink::Member.560" }
%"class.blink::Member.846" = type { %"class.blink::MemberBase.847" }
%"class.blink::MemberBase.847" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.564" = type { %"class.WTF::ListHashSet.base.574", [7 x i8] }
%"class.WTF::ListHashSet.base.574" = type <{ %"class.WTF::HashTable.569", %"class.blink::Member.571", %"class.blink::Member.571", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.569" = type <{ %"class.blink::Member.571"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::HeapListHashSetNode.573"* }
%"class.blink::HeapListHashSetNode.573" = type { %"class.blink::Member.842", %"class.blink::Member.571", %"class.blink::Member.571" }
%"class.blink::Member.842" = type { %"class.blink::MemberBase.843" }
%"class.blink::MemberBase.843" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.575" = type { %"class.WTF::ListHashSet.base.585", [7 x i8] }
%"class.WTF::ListHashSet.base.585" = type <{ %"class.WTF::HashTable.580", %"class.blink::Member.582", %"class.blink::Member.582", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.580" = type <{ %"class.blink::Member.582"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::HeapListHashSetNode.584"* }
%"class.blink::HeapListHashSetNode.584" = type { %"class.blink::Member.838", %"class.blink::Member.582", %"class.blink::Member.582" }
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.586" = type { %"class.WTF::ListHashSet.base.596", [7 x i8] }
%"class.WTF::ListHashSet.base.596" = type <{ %"class.WTF::HashTable.591", %"class.blink::Member.593", %"class.blink::Member.593", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.591" = type <{ %"class.blink::Member.593"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.593" = type { %"class.blink::MemberBase.594" }
%"class.blink::MemberBase.594" = type { %"class.blink::HeapListHashSetNode.595"* }
%"class.blink::HeapListHashSetNode.595" = type { %"class.blink::Member.834", %"class.blink::Member.593", %"class.blink::Member.593" }
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.597" = type { %"class.WTF::ListHashSet.base.607", [7 x i8] }
%"class.WTF::ListHashSet.base.607" = type <{ %"class.WTF::HashTable.602", %"class.blink::Member.604", %"class.blink::Member.604", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.602" = type <{ %"class.blink::Member.604"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::HeapListHashSetNode.606"* }
%"class.blink::HeapListHashSetNode.606" = type { %"class.blink::Member.830", %"class.blink::Member.604", %"class.blink::Member.604" }
%"class.blink::Member.830" = type { %"class.blink::MemberBase.831" }
%"class.blink::MemberBase.831" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.608" = type { %"class.WTF::ListHashSet.base.618", [7 x i8] }
%"class.WTF::ListHashSet.base.618" = type <{ %"class.WTF::HashTable.613", %"class.blink::Member.615", %"class.blink::Member.615", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.613" = type <{ %"class.blink::Member.615"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::HeapListHashSetNode.617"* }
%"class.blink::HeapListHashSetNode.617" = type { %"class.blink::Member.725", %"class.blink::Member.615", %"class.blink::Member.615" }
%"class.blink::HeapListHashSet.619" = type { %"class.WTF::ListHashSet.base.629", [7 x i8] }
%"class.WTF::ListHashSet.base.629" = type <{ %"class.WTF::HashTable.624", %"class.blink::Member.626", %"class.blink::Member.626", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.624" = type <{ %"class.blink::Member.626"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::HeapListHashSetNode.628"* }
%"class.blink::HeapListHashSetNode.628" = type { %"class.blink::Member.824", %"class.blink::Member.626", %"class.blink::Member.626" }
%"class.blink::Member.824" = type { %"class.blink::MemberBase.825" }
%"class.blink::MemberBase.825" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.630" = type { %"class.WTF::ListHashSet.base.640", [7 x i8] }
%"class.WTF::ListHashSet.base.640" = type <{ %"class.WTF::HashTable.635", %"class.blink::Member.637", %"class.blink::Member.637", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.635" = type <{ %"class.blink::Member.637"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::HeapListHashSetNode.639"* }
%"class.blink::HeapListHashSetNode.639" = type { %"class.blink::Member.820", %"class.blink::Member.637", %"class.blink::Member.637" }
%"class.blink::Member.820" = type { %"class.blink::MemberBase.821" }
%"class.blink::MemberBase.821" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.641" = type { %"class.WTF::ListHashSet.base.651", [7 x i8] }
%"class.WTF::ListHashSet.base.651" = type <{ %"class.WTF::HashTable.646", %"class.blink::Member.648", %"class.blink::Member.648", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.646" = type <{ %"class.blink::Member.648"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.648" = type { %"class.blink::MemberBase.649" }
%"class.blink::MemberBase.649" = type { %"class.blink::HeapListHashSetNode.650"* }
%"class.blink::HeapListHashSetNode.650" = type { %"class.blink::Member.816", %"class.blink::Member.648", %"class.blink::Member.648" }
%"class.blink::Member.816" = type { %"class.blink::MemberBase.817" }
%"class.blink::MemberBase.817" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.652" = type { %"class.WTF::ListHashSet.base.662", [7 x i8] }
%"class.WTF::ListHashSet.base.662" = type <{ %"class.WTF::HashTable.657", %"class.blink::Member.659", %"class.blink::Member.659", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.657" = type <{ %"class.blink::Member.659"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.659" = type { %"class.blink::MemberBase.660" }
%"class.blink::MemberBase.660" = type { %"class.blink::HeapListHashSetNode.661"* }
%"class.blink::HeapListHashSetNode.661" = type { %"class.blink::Member.812", %"class.blink::Member.659", %"class.blink::Member.659" }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.663" = type { %"class.WTF::ListHashSet.base.673", [7 x i8] }
%"class.WTF::ListHashSet.base.673" = type <{ %"class.WTF::HashTable.668", %"class.blink::Member.670", %"class.blink::Member.670", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.668" = type <{ %"class.blink::Member.670"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::HeapListHashSetNode.672"* }
%"class.blink::HeapListHashSetNode.672" = type { %"class.blink::Member.808", %"class.blink::Member.670", %"class.blink::Member.670" }
%"class.blink::Member.808" = type { %"class.blink::MemberBase.809" }
%"class.blink::MemberBase.809" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.674" = type { %"class.WTF::ListHashSet.base.684", [7 x i8] }
%"class.WTF::ListHashSet.base.684" = type <{ %"class.WTF::HashTable.679", %"class.blink::Member.681", %"class.blink::Member.681", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.679" = type <{ %"class.blink::Member.681"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::HeapListHashSetNode.683"* }
%"class.blink::HeapListHashSetNode.683" = type { %"class.blink::Member.804", %"class.blink::Member.681", %"class.blink::Member.681" }
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.685" = type { %"class.WTF::ListHashSet.base.695", [7 x i8] }
%"class.WTF::ListHashSet.base.695" = type <{ %"class.WTF::HashTable.690", %"class.blink::Member.692", %"class.blink::Member.692", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.690" = type <{ %"class.blink::Member.692"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.692" = type { %"class.blink::MemberBase.693" }
%"class.blink::MemberBase.693" = type { %"class.blink::HeapListHashSetNode.694"* }
%"class.blink::HeapListHashSetNode.694" = type { %"class.blink::Member.800", %"class.blink::Member.692", %"class.blink::Member.692" }
%"class.blink::Member.800" = type { %"class.blink::MemberBase.801" }
%"class.blink::MemberBase.801" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.696" = type { %"class.WTF::ListHashSet.base.706", [7 x i8] }
%"class.WTF::ListHashSet.base.706" = type <{ %"class.WTF::HashTable.701", %"class.blink::Member.703", %"class.blink::Member.703", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.701" = type <{ %"class.blink::Member.703"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.703" = type { %"class.blink::MemberBase.704" }
%"class.blink::MemberBase.704" = type { %"class.blink::HeapListHashSetNode.705"* }
%"class.blink::HeapListHashSetNode.705" = type { %"class.blink::Member.727", %"class.blink::Member.703", %"class.blink::Member.703" }
%"class.blink::HeapListHashSet.707" = type { %"class.WTF::ListHashSet.base.717", [7 x i8] }
%"class.WTF::ListHashSet.base.717" = type <{ %"class.WTF::HashTable.712", %"class.blink::Member.714", %"class.blink::Member.714", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.712" = type <{ %"class.blink::Member.714"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.714" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::HeapListHashSetNode.716"* }
%"class.blink::HeapListHashSetNode.716" = type { %"class.blink::Member.719", %"class.blink::Member.714", %"class.blink::Member.714" }
%class.scoped_refptr.718 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.719" = type { %"class.blink::MemberBase.720" }
%"class.blink::MemberBase.720" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::AdTracker"* }
%"class.blink::Member.723" = type { %"class.blink::MemberBase.724" }
%"class.blink::MemberBase.724" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.725" = type { %"class.blink::MemberBase.726" }
%"class.blink::MemberBase.726" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.727" = type { %"class.blink::MemberBase.728" }
%"class.blink::MemberBase.728" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.729" = type { %"class.blink::MemberBase.730" }
%"class.blink::MemberBase.730" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.733" }
%"class.blink::Member.733" = type { %"class.blink::MemberBase.734" }
%"class.blink::MemberBase.734" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1891" }
%"class.mojo::Remote.1891" = type { %"class.mojo::internal::InterfacePtrState.1892" }
%"class.mojo::internal::InterfacePtrState.1892" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1893" }
%"class.std::__1::unique_ptr.1893" = type { %"class.std::__1::__compressed_pair.1894" }
%"class.std::__1::__compressed_pair.1894" = type { %"struct.std::__1::__compressed_pair_elem.1895" }
%"struct.std::__1::__compressed_pair_elem.1895" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.741" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.401" = type { %"class.absl::optional_internal::optional_data.402" }
%"class.absl::optional_internal::optional_data.402" = type { %"class.absl::optional_internal::optional_data_base.403" }
%"class.absl::optional_internal::optional_data_base.403" = type { %"class.absl::optional_internal::optional_data_dtor_base.404" }
%"class.absl::optional_internal::optional_data_dtor_base.404" = type { i8, %union.anon.405 }
%union.anon.405 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.748" = type { %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.754" }
%"class.blink::Member.754" = type { %"class.blink::MemberBase.755" }
%"class.blink::MemberBase.755" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1901" }
%"class.mojo::AssociatedRemote.1901" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1902" }
%"class.mojo::internal::AssociatedInterfacePtrState.1902" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1903" }
%"class.std::__1::unique_ptr.1903" = type { %"class.std::__1::__compressed_pair.1904" }
%"class.std::__1::__compressed_pair.1904" = type { %"struct.std::__1::__compressed_pair_elem.1905" }
%"struct.std::__1::__compressed_pair_elem.1905" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.756" = type { %"class.blink::Member.757" }
%"class.blink::Member.757" = type { %"class.blink::MemberBase.758" }
%"class.blink::MemberBase.758" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1911" }
%"class.mojo::AssociatedRemote.1911" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1912" }
%"class.mojo::internal::AssociatedInterfacePtrState.1912" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1913" }
%"class.std::__1::unique_ptr.1913" = type { %"class.std::__1::__compressed_pair.1914" }
%"class.std::__1::__compressed_pair.1914" = type { %"struct.std::__1::__compressed_pair_elem.1915" }
%"struct.std::__1::__compressed_pair_elem.1915" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.759" }
%"class.blink::Member.759" = type { %"class.blink::MemberBase.760" }
%"class.blink::MemberBase.760" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1921", %"class.blink::Member", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1921" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1922" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.135" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1922" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.761" = type { %"class.blink::Member.762" }
%"class.blink::Member.762" = type { %"class.blink::MemberBase.763" }
%"class.blink::MemberBase.763" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1925", %"class.blink::Member", %"class.mojo::AssociatedReceiver.1926" }
%"class.blink::ThreadState::PrefinalizerRegistration.1925" = type { i8 }
%"class.mojo::AssociatedReceiver.1926" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1927" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1927" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.764" }
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1930", %"class.blink::Member", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1930" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.282, %"class.std::__1::unique_ptr.135", %"class.base::WeakPtrFactory.1931" }
%"class.base::WeakPtrFactory.1931" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.766" = type { %"class.blink::Member.767" }
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1934", %"class.blink::Member", %"class.mojo::AssociatedReceiver.1935" }
%"class.blink::ThreadState::PrefinalizerRegistration.1934" = type { i8 }
%"class.mojo::AssociatedReceiver.1935" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1936" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1936" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.771" = type { %"class.blink::MemberBase.772" }
%"class.blink::MemberBase.772" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.773" = type { %"class.blink::MemberBase.774" }
%"class.blink::MemberBase.774" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.775" = type { %"class.blink::MemberBase.776" }
%"class.blink::MemberBase.776" = type { %"class.blink::HeapHashMap.777"* }
%"class.blink::HeapHashMap.777" = type opaque
%"class.mojo::StructPtr.778" = type { %"class.std::__1::unique_ptr.779" }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.782", %"class.mojo::InlinedStructPtr.783" }
%"class.mojo::InlinedStructPtr.782" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.783" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.789" = type { %"class.absl::optional_internal::optional_data.790" }
%"class.absl::optional_internal::optional_data.790" = type { %"class.absl::optional_internal::optional_data_base.791" }
%"class.absl::optional_internal::optional_data_base.791" = type { %"class.absl::optional_internal::optional_data_dtor_base.792" }
%"class.absl::optional_internal::optional_data_dtor_base.792" = type { i8, %union.anon.793 }
%union.anon.793 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.v8::StackTrace" = type { i8 }
%"class.v8::StackFrame" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.blink::probe::ExecuteScript" = type <{ %"class.blink::probe::ProbeBase", %"class.blink::CoreProbeSink"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, i32, [4 x i8] }>
%"class.blink::probe::ProbeBase" = type { %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::probe::CallFunction" = type <{ %"class.blink::probe::ProbeBase", %"class.blink::CoreProbeSink"*, %"class.blink::ExecutionContext"*, %"class.v8::Local.1862", i32, [4 x i8] }>
%"class.v8::Local.1862" = type { %"class.v8::Function"* }
%"class.v8::Function" = type { i8 }
%"class.v8::ScriptOrigin" = type { %"class.v8::Isolate"*, %"class.v8::Local.1863", i32, i32, %"class.v8::ScriptOriginOptions", i32, %"class.v8::Local.1863", %"class.v8::Local.1864" }
%"class.v8::ScriptOriginOptions" = type { i32 }
%"class.v8::Local.1863" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.v8::Local.1864" = type { %"class.v8::PrimitiveArray"* }
%"class.v8::PrimitiveArray" = type { i8 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.1954", %"class.blink::FreeList", %"class.WTF::Vector.1959" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.WTF::Vector.1954" = type { %"class.WTF::VectorBuffer.1955" }
%"class.WTF::VectorBuffer.1955" = type { %"class.WTF::VectorBufferBase.1956" }
%"class.WTF::VectorBufferBase.1956" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.1959" = type { %"class.WTF::VectorBuffer.1960" }
%"class.WTF::VectorBuffer.1960" = type { %"class.WTF::VectorBufferBase.1961" }
%"class.WTF::VectorBufferBase.1961" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }

$_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRbEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm = comdat any

$_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISK_SG_SL_EEPS3_SC_EENS_18HashTableAddResultISM_SD_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE6ExpandEPSD_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE6RehashEjPSD_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_16ExecutionContextEEENS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS8_EENS2_18PartitionAllocatorEEEEENS2_18HashMapValueTraitsINSA_IS6_EENSA_ISD_EEEEEEvPT_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE12ExpandBufferEjPSD_Rb = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE8RehashToEPSD_jSN_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairIN5blink10WeakMemberINS2_16ExecutionContextEEENS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINS9_IS5_EENS9_ISC_EEEELb1EE4MoveEOSD_RSD_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS1_12KeyValuePairIS5_NS1_7HashSetINS1_6StringENS1_10StringHashENS1_10HashTraitsIS8_EENS1_18PartitionAllocatorEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINSA_IS5_EENSA_ISD_EEEESJ_NS_13HeapAllocatorEEEE14AllocateObjectISO_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS3_12KeyValuePairIS7_NS3_7HashSetINS3_6StringENS3_10StringHashENS3_10HashTraitsISA_EENS3_18PartitionAllocatorEEEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS6_EENS3_18HashMapValueTraitsINSC_IS7_EENSC_ISF_EEEESL_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberINS3_16ExecutionContextEEENS_12KeyValuePairIS6_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS9_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_16ExecutionContextEEENS_12KeyValuePairIS5_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS8_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINSA_IS5_EENSA_ISD_EEEESJ_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv = comdat any

$_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_16ExecutionContextEEEbPKT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [20 x i8] c"AsyncStackAdTagging\00", align 1
@_ZN5blink8features20kAsyncStackAdTaggingE = hidden constant %"struct.base::Feature" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i32 1 }, align 8
@_ZTVN5blink9AdTrackerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.blink::AdTracker"*, %"class.blink::ExecutionContext"*, %"class.blink::KURL"*, i8, %"struct.blink::FetchInitiatorInfo"*, i1)* @_ZN5blink9AdTracker24CalculateIfAdSubresourceEPNS_16ExecutionContextERKNS_4KURLENS_12ResourceTypeERKNS_18FetchInitiatorInfoEb to i8*), i8* bitcast (void (%"class.blink::AdTracker"*, %"class.blink::Visitor"*)* @_ZNK5blink9AdTracker5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AdTracker"*)* @_ZN5blink9AdTrackerD2Ev to i8*), i8* bitcast (void (%"class.blink::AdTracker"*)* @_ZN5blink9AdTrackerD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AdTracker"*)* @_ZN5blink9AdTracker18ScriptAtTopOfStackEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)* @_ZN5blink9AdTracker26GetCurrentExecutionContextEv to i8*)] }, align 8
@_ZN5blink26fetch_initiator_type_names4kCSSE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink26fetch_initiator_type_names6kUacssE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.1 = private unnamed_addr constant [10 x i8] c"{ id %d }\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv = private unnamed_addr constant [52 x i8] c"const char *WTF::GetStringWithTypeName() [T = bool]\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.9 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.10 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS3_12KeyValuePairIS7_NS3_7HashSetINS3_6StringENS3_10StringHashENS3_10HashTraitsISA_EENS3_18PartitionAllocatorEEEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS6_EENS3_18HashMapValueTraitsINSC_IS7_EENSC_ISF_EEEESL_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.13 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

@_ZN5blink9AdTrackerC1EPNS_10LocalFrameE = hidden unnamed_addr alias void (%"class.blink::AdTracker"*, %"class.blink::LocalFrame"*), void (%"class.blink::AdTracker"*, %"class.blink::LocalFrame"*)* @_ZN5blink9AdTrackerC2EPNS_10LocalFrameE
@_ZN5blink9AdTrackerD1Ev = hidden unnamed_addr alias void (%"class.blink::AdTracker"*), void (%"class.blink::AdTracker"*)* @_ZN5blink9AdTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AdTracker"* @_ZN5blink9AdTracker20FromExecutionContextEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::ExecutionContext"* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.blink::ExecutionContext"* %0 to i1 (%"class.blink::ExecutionContext"*)***
  %5 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %5, i64 1
  %7 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ExecutionContext"* nonnull %0) #8
  br i1 %8, label %9, label %20

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 8
  %11 = icmp eq i32* %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds i32, i32* %10, i64 18
  %14 = bitcast i32* %13 to %"class.blink::LocalFrame"**
  %15 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %14, align 8
  %16 = icmp eq %"class.blink::LocalFrame"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %15, i64 0, i32 26, i32 0, i32 0
  %19 = load %"class.blink::AdTracker"*, %"class.blink::AdTracker"** %18, align 8
  br label %20

20:                                               ; preds = %1, %12, %3, %9, %17
  %21 = phi %"class.blink::AdTracker"* [ %19, %17 ], [ null, %9 ], [ null, %3 ], [ null, %12 ], [ null, %1 ]
  ret %"class.blink::AdTracker"* %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9AdTracker29IsAdScriptExecutingInDocumentEPNS_8DocumentENS0_9StackTypeE(%"class.blink::Document"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %0) #8
  %5 = icmp eq %"class.blink::LocalFrame"* %4, null
  br i1 %5, label %47, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %0) #8
  %8 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %7, i64 0, i32 26, i32 0, i32 0
  %9 = load %"class.blink::AdTracker"*, %"class.blink::AdTracker"** %8, align 8
  %10 = icmp eq %"class.blink::AdTracker"* %9, null
  br i1 %10, label %47, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %9, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %47

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %9, i64 0, i32 6
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %47

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::AdTracker"* %9 to %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)***
  %21 = load %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)**, %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)*, %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)** %21, i64 5
  %23 = load %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)*, %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)** %22, align 8
  %24 = tail call %"class.blink::ExecutionContext"* %23(%"class.blink::AdTracker"* nonnull %9) #8
  %25 = icmp eq %"class.blink::ExecutionContext"* %24, null
  br i1 %25, label %47, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.blink::ExecutionContext"* %24 to i1 (%"class.blink::ExecutionContext"*)***
  %28 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %28, i64 1
  %30 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::ExecutionContext"* nonnull %24) #8
  br i1 %31, label %32, label %41

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %24, i64 -1, i32 8
  %34 = getelementptr inbounds i32, i32* %33, i64 18
  %35 = bitcast i32* %34 to %"class.blink::LocalFrame"**
  %36 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %35, align 8
  %37 = icmp eq %"class.blink::LocalFrame"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %36, i64 0, i32 0
  %40 = tail call zeroext i1 @_ZNK5blink5Frame12IsAdSubframeEv(%"class.blink::Frame"* %39) #8
  br i1 %40, label %47, label %41

41:                                               ; preds = %38, %32, %26
  %42 = icmp eq i32 %1, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %41
  %44 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #8
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  %46 = call zeroext i1 @_ZN5blink9AdTracker32IsKnownAdScriptForCheckedContextERNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::AdTracker"* nonnull %9, %"class.blink::ExecutionContext"* nonnull dereferenceable(376) %24, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #8
  br label %47

47:                                               ; preds = %2, %43, %41, %38, %19, %15, %11, %6
  %48 = phi i1 [ false, %6 ], [ true, %15 ], [ true, %11 ], [ %46, %43 ], [ false, %19 ], [ false, %41 ], [ true, %38 ], [ false, %2 ]
  ret i1 %48
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9AdTracker17IsAdScriptInStackENS0_9StackTypeE(%"class.blink::AdTracker"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %39

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %39

11:                                               ; preds = %7
  %12 = bitcast %"class.blink::AdTracker"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)***
  %13 = load %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)**, %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)*, %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)** %13, i64 5
  %15 = load %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)*, %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)** %14, align 8
  %16 = tail call %"class.blink::ExecutionContext"* %15(%"class.blink::AdTracker"* %0) #8
  %17 = icmp eq %"class.blink::ExecutionContext"* %16, null
  br i1 %17, label %39, label %18

18:                                               ; preds = %11
  %19 = bitcast %"class.blink::ExecutionContext"* %16 to i1 (%"class.blink::ExecutionContext"*)***
  %20 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %20, i64 1
  %22 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::ExecutionContext"* nonnull %16) #8
  br i1 %23, label %24, label %33

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %16, i64 -1, i32 8
  %26 = getelementptr inbounds i32, i32* %25, i64 18
  %27 = bitcast i32* %26 to %"class.blink::LocalFrame"**
  %28 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %27, align 8
  %29 = icmp eq %"class.blink::LocalFrame"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %28, i64 0, i32 0
  %32 = tail call zeroext i1 @_ZNK5blink5Frame12IsAdSubframeEv(%"class.blink::Frame"* %31) #8
  br i1 %32, label %39, label %33

33:                                               ; preds = %24, %30, %18
  %34 = icmp eq i32 %1, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %33
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %37, align 8
  %38 = call zeroext i1 @_ZN5blink9AdTracker32IsKnownAdScriptForCheckedContextERNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::AdTracker"* %0, %"class.blink::ExecutionContext"* nonnull dereferenceable(376) %16, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %39

39:                                               ; preds = %30, %35, %11, %33, %2, %7
  %40 = phi i1 [ true, %7 ], [ true, %2 ], [ %38, %35 ], [ false, %11 ], [ false, %33 ], [ true, %30 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AdTrackerC2EPNS_10LocalFrameE(%"class.blink::AdTracker"*, %"class.blink::LocalFrame"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink9AdTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::LocalFrame"* %1, %"class.blink::LocalFrame"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 5
  %7 = bitcast %"class.blink::HeapHashMap"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #8
  %8 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 6
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 7
  %10 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false)
  %11 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features20kAsyncStackAdTaggingE) #8
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %9, align 4
  %13 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %4, align 8
  %14 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %13, i64 0, i32 23, i32 0, i32 0
  %15 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %14, align 8
  tail call void @_ZN5blink13CoreProbeSink12AddAdTrackerEPNS_9AdTrackerE(%"class.blink::CoreProbeSink"* %15, %"class.blink::AdTracker"* %0) #8
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink13CoreProbeSink12AddAdTrackerEPNS_9AdTrackerE(%"class.blink::CoreProbeSink"*, %"class.blink::AdTracker"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AdTrackerD2Ev(%"class.blink::AdTracker"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink9AdTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %4) #8
  store i8* null, i8** %3, align 8
  br label %12

12:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AdTrackerD0Ev(%"class.blink::AdTracker"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink9AdTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %4) #8
  store i8* null, i8** %3, align 8
  br label %12

12:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AdTracker8ShutdownEv(%"class.blink::AdTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %3, align 8
  %5 = icmp eq %"class.blink::LocalFrame"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %4, i64 0, i32 23, i32 0, i32 0
  %8 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %7, align 8
  tail call void @_ZN5blink13CoreProbeSink15RemoveAdTrackerEPNS_9AdTrackerE(%"class.blink::CoreProbeSink"* %8, %"class.blink::AdTracker"* %0) #8
  %9 = bitcast %"class.blink::Member"* %2 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

declare void @_ZN5blink13CoreProbeSink15RemoveAdTrackerEPNS_9AdTrackerE(%"class.blink::CoreProbeSink"*, %"class.blink::AdTracker"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink9AdTracker18ScriptAtTopOfStackEv(%"class.blink::AdTracker"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #8
  %3 = tail call %"class.v8::StackTrace"* @_ZN2v810StackTrace17CurrentStackTraceEPNS_7IsolateEiNS0_17StackTraceOptionsE(%"class.v8::Isolate"* %2, i32 1, i32 127) #8
  %4 = icmp eq %"class.v8::StackTrace"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @_ZNK2v810StackTrace13GetFrameCountEv(%"class.v8::StackTrace"* nonnull %3) #8
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %24, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.v8::StackFrame"* @_ZNK2v810StackTrace8GetFrameEPNS_7IsolateEj(%"class.v8::StackTrace"* nonnull %3, %"class.v8::Isolate"* %2, i32 0) #8
  %10 = tail call %"class.v8::String"* @_ZNK2v810StackFrame13GetScriptNameEv(%"class.v8::StackFrame"* %9) #8
  %11 = icmp eq %"class.v8::String"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = tail call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* nonnull %10) #8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %12, %8
  %16 = tail call i32 @_ZNK2v810StackFrame11GetScriptIdEv(%"class.v8::StackFrame"* %9) #8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %15
  %19 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %16) #8
  %20 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  br label %24

21:                                               ; preds = %12
  %22 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %10, i32 0) #8
  %23 = ptrtoint %"class.WTF::StringImpl"* %22 to i64
  br label %24

24:                                               ; preds = %18, %15, %21, %1, %5
  %25 = phi i64 [ 0, %5 ], [ 0, %1 ], [ %23, %21 ], [ %20, %18 ], [ 0, %15 ]
  %26 = inttoptr i64 %25 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %26
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #2

declare %"class.v8::StackTrace"* @_ZN2v810StackTrace17CurrentStackTraceEPNS_7IsolateEiNS0_17StackTraceOptionsE(%"class.v8::Isolate"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK2v810StackTrace13GetFrameCountEv(%"class.v8::StackTrace"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.v8::StackFrame"* @_ZNK2v810StackTrace8GetFrameEPNS_7IsolateEj(%"class.v8::StackTrace"*, %"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v810StackFrame13GetScriptNameEv(%"class.v8::StackFrame"*) local_unnamed_addr #2

declare i32 @_ZNK2v86String6LengthEv(%"class.v8::String"*) local_unnamed_addr #2

declare i32 @_ZNK2v810StackFrame11GetScriptIdEv(%"class.v8::StackFrame"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZN5blink9AdTracker26GetCurrentExecutionContextEv(%"class.blink::AdTracker"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #8
  %3 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #8
  %4 = icmp eq %"class.v8::Context"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* nonnull %3) #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi %"class.blink::ExecutionContext"* [ %6, %5 ], [ null, %1 ]
  ret %"class.blink::ExecutionContext"* %8
}

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AdTracker17WillExecuteScriptEPNS_16ExecutionContextERKN3WTF6StringEi(%"class.blink::AdTracker"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.WTF::String", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 0, i8* %6, align 1
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br label %15

15:                                               ; preds = %4, %11
  %16 = phi i1 [ true, %4 ], [ %14, %11 ]
  %17 = icmp ne i32 %3, 0
  %18 = and i1 %17, %16
  br i1 %18, label %19, label %94

19:                                               ; preds = %15
  %20 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %22 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %3) #8
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.blink::ExecutionContext"* %1, null
  br i1 %23, label %42, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::ExecutionContext"* %1 to i1 (%"class.blink::ExecutionContext"*)***
  %26 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %26, i64 1
  %28 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::ExecutionContext"* nonnull %1) #8
  br i1 %29, label %30, label %39

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 -1, i32 8
  %32 = getelementptr inbounds i32, i32* %31, i64 18
  %33 = bitcast i32* %32 to %"class.blink::LocalFrame"**
  %34 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %33, align 8
  %35 = icmp eq %"class.blink::LocalFrame"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %34, i64 0, i32 0
  %38 = tail call zeroext i1 @_ZNK5blink5Frame12IsAdSubframeEv(%"class.blink::Frame"* %37) #8
  br i1 %38, label %41, label %39

39:                                               ; preds = %24, %30, %36
  %40 = call zeroext i1 @_ZN5blink9AdTracker32IsKnownAdScriptForCheckedContextERNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::AdTracker"* %0, %"class.blink::ExecutionContext"* nonnull dereferenceable(376) %1, %"class.WTF::String"* nonnull dereferenceable(8) %7) #8
  br i1 %40, label %41, label %42

41:                                               ; preds = %36, %39
  store i8 1, i8* %6, align 1
  br label %77

42:                                               ; preds = %19, %39
  %43 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %76

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 6
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %76

50:                                               ; preds = %46
  %51 = bitcast %"class.blink::AdTracker"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)***
  %52 = load %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)**, %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)*, %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)** %52, i64 5
  %54 = load %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)*, %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)** %53, align 8
  %55 = tail call %"class.blink::ExecutionContext"* %54(%"class.blink::AdTracker"* %0) #8
  %56 = icmp eq %"class.blink::ExecutionContext"* %55, null
  br i1 %56, label %77, label %57

57:                                               ; preds = %50
  %58 = bitcast %"class.blink::ExecutionContext"* %55 to i1 (%"class.blink::ExecutionContext"*)***
  %59 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %58, align 8
  %60 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %59, i64 1
  %61 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %60, align 8
  %62 = tail call zeroext i1 %61(%"class.blink::ExecutionContext"* nonnull %55) #8
  br i1 %62, label %63, label %72

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %55, i64 -1, i32 8
  %65 = getelementptr inbounds i32, i32* %64, i64 18
  %66 = bitcast i32* %65 to %"class.blink::LocalFrame"**
  %67 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %66, align 8
  %68 = icmp eq %"class.blink::LocalFrame"* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %67, i64 0, i32 0
  %71 = tail call zeroext i1 @_ZNK5blink5Frame12IsAdSubframeEv(%"class.blink::Frame"* %70) #8
  br i1 %71, label %76, label %72

72:                                               ; preds = %57, %63, %69
  %73 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #8
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %74, align 8
  %75 = call zeroext i1 @_ZN5blink9AdTracker32IsKnownAdScriptForCheckedContextERNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::AdTracker"* %0, %"class.blink::ExecutionContext"* nonnull dereferenceable(376) %55, %"class.WTF::String"* nonnull dereferenceable(8) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #8
  br i1 %75, label %76, label %77

76:                                               ; preds = %69, %42, %46, %72
  call void @_ZN5blink9AdTracker22AppendToKnownAdScriptsERNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::AdTracker"* %0, %"class.blink::ExecutionContext"* dereferenceable(376) %1, %"class.WTF::String"* nonnull dereferenceable(8) %7)
  store i8 1, i8* %6, align 1
  br label %77

77:                                               ; preds = %50, %72, %76, %41
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #8
  br label %93

93:                                               ; preds = %77, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %116

94:                                               ; preds = %15
  %95 = icmp eq %"class.blink::ExecutionContext"* %1, null
  br i1 %95, label %114, label %96

96:                                               ; preds = %94
  %97 = bitcast %"class.blink::ExecutionContext"* %1 to i1 (%"class.blink::ExecutionContext"*)***
  %98 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %97, align 8
  %99 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %98, i64 1
  %100 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %99, align 8
  %101 = tail call zeroext i1 %100(%"class.blink::ExecutionContext"* nonnull %1) #8
  br i1 %101, label %102, label %111

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 -1, i32 8
  %104 = getelementptr inbounds i32, i32* %103, i64 18
  %105 = bitcast i32* %104 to %"class.blink::LocalFrame"**
  %106 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %105, align 8
  %107 = icmp eq %"class.blink::LocalFrame"* %106, null
  br i1 %107, label %111, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %106, i64 0, i32 0
  %110 = tail call zeroext i1 @_ZNK5blink5Frame12IsAdSubframeEv(%"class.blink::Frame"* %109) #8
  br i1 %110, label %114, label %111

111:                                              ; preds = %108, %102, %96
  %112 = tail call zeroext i1 @_ZN5blink9AdTracker32IsKnownAdScriptForCheckedContextERNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::AdTracker"* %0, %"class.blink::ExecutionContext"* nonnull dereferenceable(376) %1, %"class.WTF::String"* dereferenceable(8) %2) #8
  %113 = zext i1 %112 to i8
  br label %114

114:                                              ; preds = %94, %108, %111
  %115 = phi i8 [ %113, %111 ], [ 0, %94 ], [ 1, %108 ]
  store i8 %115, i8* %6, align 1
  br label %116

116:                                              ; preds = %93, %114
  %117 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 2
  %118 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %119, %121
  br i1 %122, label %131, label %123, !prof !3

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %117, i64 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = zext i32 %119 to i64
  %127 = getelementptr inbounds i8, i8* %125, i64 %126
  %128 = load i8, i8* %6, align 1, !range !4
  store i8 %128, i8* %127, align 1
  %129 = load i32, i32* %118, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %118, align 4
  br label %132

131:                                              ; preds = %116
  call void @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRbEEvOT_(%"class.WTF::Vector"* %117, i8* nonnull dereferenceable(1) %6) #8
  br label %132

132:                                              ; preds = %123, %131
  %133 = load i8, i8* %6, align 1, !range !4
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %139, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 8
  br label %139

139:                                              ; preds = %132, %135
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9AdTracker15IsKnownAdScriptEPNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::AdTracker"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::ExecutionContext"* %1, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.blink::ExecutionContext"* %1 to i1 (%"class.blink::ExecutionContext"*)***
  %7 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %7, i64 1
  %9 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ExecutionContext"* nonnull %1) #8
  br i1 %10, label %11, label %20

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 -1, i32 8
  %13 = getelementptr inbounds i32, i32* %12, i64 18
  %14 = bitcast i32* %13 to %"class.blink::LocalFrame"**
  %15 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %14, align 8
  %16 = icmp eq %"class.blink::LocalFrame"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %15, i64 0, i32 0
  %19 = tail call zeroext i1 @_ZNK5blink5Frame12IsAdSubframeEv(%"class.blink::Frame"* %18) #8
  br i1 %19, label %22, label %20

20:                                               ; preds = %11, %17, %5
  %21 = tail call zeroext i1 @_ZN5blink9AdTracker32IsKnownAdScriptForCheckedContextERNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::AdTracker"* %0, %"class.blink::ExecutionContext"* nonnull dereferenceable(376) %1, %"class.WTF::String"* dereferenceable(8) %2)
  br label %22

22:                                               ; preds = %17, %3, %20
  %23 = phi i1 [ %21, %20 ], [ false, %3 ], [ true, %17 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AdTracker22AppendToKnownAdScriptsERNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::AdTracker"*, %"class.blink::ExecutionContext"* dereferenceable(376), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ExecutionContext"*, align 8
  %5 = alloca %"class.WTF::HashSet", align 8
  %6 = bitcast %"class.blink::ExecutionContext"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  store %"class.blink::ExecutionContext"* %1, %"class.blink::ExecutionContext"** %4, align 8
  %7 = bitcast %"class.WTF::HashSet"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 20, i1 false) #8
  %8 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 5, i32 0, i32 0
  %9 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISK_SG_SL_EEPS3_SC_EENS_18HashTableAddResultISM_SD_EEOT0_OT1_(%"class.WTF::HashTable"* %8, %"class.blink::ExecutionContext"** nonnull dereferenceable(8) %4, %"class.WTF::HashSet"* nonnull dereferenceable(24) %5) #8
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %9, 0
  %11 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %5, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = icmp eq %"class.WTF::String"* %12, null
  br i1 %13, label %46, label %14, !prof !2

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %5, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %44, label %18

18:                                               ; preds = %14
  %19 = zext i32 %16 to i64
  br label %20

20:                                               ; preds = %41, %18
  %21 = phi i64 [ 0, %18 ], [ %42, %41 ]
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %21
  %23 = bitcast %"class.WTF::String"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast i8* %24 to %"class.WTF::StringImpl"*
  %26 = ptrtoint i8* %24 to i64
  switch i64 %26, label %27 [
    i64 -1, label %41
    i64 0, label %41
  ]

27:                                               ; preds = %20
  %28 = getelementptr inbounds i8, i8* %24, i64 8
  %29 = bitcast i8* %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = bitcast i8* %24 to i32*
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %27
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %27
  %38 = phi i32 [ %36, %35 ], [ %34, %27 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #8
  br label %41

41:                                               ; preds = %40, %37, %20, %20
  %42 = add nuw nsw i64 %21, 1
  %43 = icmp eq i64 %42, %19
  br i1 %43, label %44, label %20

44:                                               ; preds = %41, %14
  %45 = bitcast %"class.WTF::String"* %12 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %45) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %11, align 8
  br label %46

46:                                               ; preds = %3, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0
  %48 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.4"* %47, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AdTracker16DidExecuteScriptEv(%"class.blink::AdTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, -1
  %6 = tail call dereferenceable(1) i8* @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 %5) #8
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, -1
  store i32 %12, i32* %10, align 8
  br label %13

13:                                               ; preds = %1, %9
  %14 = load i32, i32* %3, align 4
  %15 = add i32 %14, -1
  store i32 %15, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AdTracker4WillERKNS_5probe13ExecuteScriptE(%"class.blink::AdTracker"*, %"class.blink::probe::ExecuteScript"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::probe::ExecuteScript", %"class.blink::probe::ExecuteScript"* %1, i64 0, i32 2
  %4 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::probe::ExecuteScript", %"class.blink::probe::ExecuteScript"* %1, i64 0, i32 3
  %6 = load %"class.WTF::String"*, %"class.WTF::String"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::probe::ExecuteScript", %"class.blink::probe::ExecuteScript"* %1, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  tail call void @_ZN5blink9AdTracker17WillExecuteScriptEPNS_16ExecutionContextERKN3WTF6StringEi(%"class.blink::AdTracker"* %0, %"class.blink::ExecutionContext"* %4, %"class.WTF::String"* dereferenceable(8) %6, i32 %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AdTracker3DidERKNS_5probe13ExecuteScriptE(%"class.blink::AdTracker"*, %"class.blink::probe::ExecuteScript"* nocapture readnone dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, -1
  %7 = tail call dereferenceable(1) i8* @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %6) #8
  %8 = load i8, i8* %7, align 1, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, -1
  store i32 %13, i32* %11, align 8
  br label %14

14:                                               ; preds = %2, %10
  %15 = load i32, i32* %4, align 4
  %16 = add i32 %15, -1
  store i32 %16, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AdTracker4WillERKNS_5probe12CallFunctionE(%"class.blink::AdTracker"*, %"class.blink::probe::CallFunction"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::ScriptOrigin", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::probe::CallFunction", %"class.blink::probe::CallFunction"* %1, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %49

8:                                                ; preds = %2
  %9 = bitcast %"class.v8::ScriptOrigin"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.blink::probe::CallFunction", %"class.blink::probe::CallFunction"* %1, i64 0, i32 3, i32 0
  %11 = load %"class.v8::Function"*, %"class.v8::Function"** %10, align 8
  call void @_ZNK2v88Function15GetScriptOriginEv(%"class.v8::ScriptOrigin"* nonnull sret %3, %"class.v8::Function"* %11) #8
  %12 = getelementptr inbounds %"class.v8::ScriptOrigin", %"class.v8::ScriptOrigin"* %3, i64 0, i32 1, i32 0
  %13 = load %"class.v8::Value"*, %"class.v8::Value"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #8
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  %16 = icmp eq %"class.v8::Value"* %13, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %18, align 8
  %20 = call %"class.v8::Isolate"* @_ZN5blink9ToIsolateEPKNS_10LocalFrameE(%"class.blink::LocalFrame"* %19) #8
  %21 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %20) #8
  %22 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* nonnull %13, %"class.v8::Context"* %21) #8
  %23 = icmp eq %"class.v8::String"* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %17
  %25 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %22, i32 0) #8
  %26 = ptrtoint %"class.WTF::StringImpl"* %25 to i64
  %27 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %26, i64* %27, align 8
  br label %28

28:                                               ; preds = %17, %24, %8
  %29 = phi %"class.WTF::StringImpl"* [ %25, %24 ], [ null, %8 ], [ null, %17 ]
  %30 = getelementptr inbounds %"class.blink::probe::CallFunction", %"class.blink::probe::CallFunction"* %1, i64 0, i32 2
  %31 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %30, align 8
  %32 = load %"class.v8::Function"*, %"class.v8::Function"** %10, align 8
  %33 = call i32 @_ZNK2v88Function8ScriptIdEv(%"class.v8::Function"* %32) #8
  call void @_ZN5blink9AdTracker17WillExecuteScriptEPNS_16ExecutionContextERKN3WTF6StringEi(%"class.blink::AdTracker"* %0, %"class.blink::ExecutionContext"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 %33)
  %34 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #8
  br label %48

48:                                               ; preds = %28, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  br label %49

49:                                               ; preds = %2, %48
  ret void
}

declare void @_ZNK2v88Function15GetScriptOriginEv(%"class.v8::ScriptOrigin"* sret, %"class.v8::Function"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN5blink9ToIsolateEPKNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare i32 @_ZNK2v88Function8ScriptIdEv(%"class.v8::Function"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AdTracker3DidERKNS_5probe12CallFunctionE(%"class.blink::AdTracker"*, %"class.blink::probe::CallFunction"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::probe::CallFunction", %"class.blink::probe::CallFunction"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, -1
  %11 = tail call dereferenceable(1) i8* @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 %10) #8
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, -1
  store i32 %17, i32* %15, align 8
  br label %18

18:                                               ; preds = %6, %14
  %19 = load i32, i32* %8, align 4
  %20 = add i32 %19, -1
  store i32 %20, i32* %8, align 4
  br label %21

21:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9AdTracker24CalculateIfAdSubresourceEPNS_16ExecutionContextERKNS_4KURLENS_12ResourceTypeERKNS_18FetchInitiatorInfoEb(%"class.blink::AdTracker"*, %"class.blink::ExecutionContext"*, %"class.blink::KURL"* dereferenceable(112), i8 zeroext, %"struct.blink::FetchInitiatorInfo"* nocapture readonly dereferenceable(32), i1 zeroext) unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::String", align 8
  %8 = icmp eq %"class.blink::ExecutionContext"* %1, null
  br i1 %8, label %25, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.blink::ExecutionContext"* %1 to i1 (%"class.blink::ExecutionContext"*)***
  %11 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %11, i64 1
  %13 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::ExecutionContext"* nonnull %1) #8
  br i1 %14, label %15, label %25

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 -1, i32 8
  %17 = getelementptr inbounds i32, i32* %16, i64 18
  %18 = bitcast i32* %17 to %"class.blink::LocalFrame"**
  %19 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %18, align 8
  %20 = icmp eq %"class.blink::LocalFrame"* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %19, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZNK5blink5Frame12IsAdSubframeEv(%"class.blink::Frame"* %22) #8
  br i1 %23, label %25, label %24

24:                                               ; preds = %21, %15
  br label %25

25:                                               ; preds = %6, %9, %21, %24
  %26 = phi i1 [ true, %21 ], [ false, %24 ], [ false, %9 ], [ false, %6 ]
  %27 = or i1 %26, %5
  %28 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names4kCSSE, align 8
  %29 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %28, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %30, %32
  br i1 %33, label %82, label %34

34:                                               ; preds = %25
  %35 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names6kUacssE, align 8
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %30, %37
  br i1 %38, label %82, label %39

39:                                               ; preds = %34
  br i1 %27, label %74, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %74

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 6
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %74

48:                                               ; preds = %44
  %49 = bitcast %"class.blink::AdTracker"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)***
  %50 = load %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)**, %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)*, %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)** %50, i64 5
  %52 = load %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)*, %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)** %51, align 8
  %53 = tail call %"class.blink::ExecutionContext"* %52(%"class.blink::AdTracker"* %0) #8
  %54 = icmp eq %"class.blink::ExecutionContext"* %53, null
  br i1 %54, label %82, label %55

55:                                               ; preds = %48
  %56 = bitcast %"class.blink::ExecutionContext"* %53 to i1 (%"class.blink::ExecutionContext"*)***
  %57 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %56, align 8
  %58 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %57, i64 1
  %59 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.blink::ExecutionContext"* nonnull %53) #8
  br i1 %60, label %61, label %70

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %53, i64 -1, i32 8
  %63 = getelementptr inbounds i32, i32* %62, i64 18
  %64 = bitcast i32* %63 to %"class.blink::LocalFrame"**
  %65 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %64, align 8
  %66 = icmp eq %"class.blink::LocalFrame"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %65, i64 0, i32 0
  %69 = tail call zeroext i1 @_ZNK5blink5Frame12IsAdSubframeEv(%"class.blink::Frame"* %68) #8
  br i1 %69, label %74, label %70

70:                                               ; preds = %67, %61, %55
  %71 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #8
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %72, align 8
  %73 = call zeroext i1 @_ZN5blink9AdTracker32IsKnownAdScriptForCheckedContextERNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::AdTracker"* %0, %"class.blink::ExecutionContext"* nonnull dereferenceable(376) %53, %"class.WTF::String"* nonnull dereferenceable(8) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #8
  br label %74

74:                                               ; preds = %70, %67, %44, %40, %39
  %75 = phi i1 [ true, %39 ], [ true, %44 ], [ true, %40 ], [ %73, %70 ], [ true, %67 ]
  %76 = icmp ne i8 %3, 3
  %77 = xor i1 %75, true
  %78 = or i1 %76, %77
  %79 = or i1 %26, %78
  br i1 %79, label %82, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 4
  tail call void @_ZN5blink9AdTracker22AppendToKnownAdScriptsERNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::AdTracker"* %0, %"class.blink::ExecutionContext"* dereferenceable(376) %1, %"class.WTF::String"* dereferenceable(8) %81)
  br label %82

82:                                               ; preds = %48, %80, %74, %25, %34
  %83 = phi i1 [ %27, %34 ], [ %27, %25 ], [ %75, %74 ], [ %75, %80 ], [ false, %48 ]
  ret i1 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AdTracker18DidCreateAsyncTaskEPNS_5probe11AsyncTaskIdE(%"class.blink::AdTracker"*, %"class.blink::probe::AsyncTaskId"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 7
  %5 = load i8, i8* %4, align 4, !range !4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %43, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %41

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %41

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::AdTracker"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)***
  %17 = load %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)**, %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)*, %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)** %17, i64 5
  %19 = load %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)*, %"class.blink::ExecutionContext"* (%"class.blink::AdTracker"*)** %18, align 8
  %20 = tail call %"class.blink::ExecutionContext"* %19(%"class.blink::AdTracker"* %0) #8
  %21 = icmp eq %"class.blink::ExecutionContext"* %20, null
  br i1 %21, label %43, label %22

22:                                               ; preds = %15
  %23 = bitcast %"class.blink::ExecutionContext"* %20 to i1 (%"class.blink::ExecutionContext"*)***
  %24 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %24, i64 1
  %26 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::ExecutionContext"* nonnull %20) #8
  br i1 %27, label %28, label %37

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %20, i64 -1, i32 8
  %30 = getelementptr inbounds i32, i32* %29, i64 18
  %31 = bitcast i32* %30 to %"class.blink::LocalFrame"**
  %32 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %31, align 8
  %33 = icmp eq %"class.blink::LocalFrame"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %32, i64 0, i32 0
  %36 = tail call zeroext i1 @_ZNK5blink5Frame12IsAdSubframeEv(%"class.blink::Frame"* %35) #8
  br i1 %36, label %41, label %37

37:                                               ; preds = %22, %28, %34
  %38 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #8
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %39, align 8
  %40 = call zeroext i1 @_ZN5blink9AdTracker32IsKnownAdScriptForCheckedContextERNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::AdTracker"* %0, %"class.blink::ExecutionContext"* nonnull dereferenceable(376) %20, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #8
  br i1 %40, label %41, label %43

41:                                               ; preds = %34, %7, %11, %37
  %42 = getelementptr inbounds %"class.blink::probe::AsyncTaskId", %"class.blink::probe::AsyncTaskId"* %1, i64 0, i32 0
  store i8 1, i8* %42, align 8
  br label %43

43:                                               ; preds = %15, %2, %41, %37
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9AdTracker17DidStartAsyncTaskEPNS_5probe11AsyncTaskIdE(%"class.blink::AdTracker"* nocapture, %"class.blink::probe::AsyncTaskId"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 7
  %4 = load i8, i8* %3, align 4, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::probe::AsyncTaskId", %"class.blink::probe::AsyncTaskId"* %1, i64 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 6
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, 1
  store i32 %13, i32* %11, align 8
  br label %14

14:                                               ; preds = %6, %2, %10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9AdTracker18DidFinishAsyncTaskEPNS_5probe11AsyncTaskIdE(%"class.blink::AdTracker"* nocapture, %"class.blink::probe::AsyncTaskId"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 7
  %4 = load i8, i8* %3, align 4, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::probe::AsyncTaskId", %"class.blink::probe::AsyncTaskId"* %1, i64 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 6
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, -1
  store i32 %13, i32* %11, align 8
  br label %14

14:                                               ; preds = %6, %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9AdTracker32IsKnownAdScriptForCheckedContextERNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::AdTracker"*, %"class.blink::ExecutionContext"* dereferenceable(376), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 5, i32 0
  %5 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0
  %6 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"* %5, %"class.blink::ExecutionContext"* %1) #8
  %7 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %12
  %14 = icmp eq %"struct.WTF::KeyValuePair"* %7, %13
  br i1 %14, label %125, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 0, i32 1, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %125, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %47

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #8
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !3

37:                                               ; preds = %28
  tail call void @llvm.trap() #8
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %47

40:                                               ; preds = %19
  %41 = bitcast %"class.blink::AdTracker"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AdTracker"*)***
  %42 = load %"class.WTF::StringImpl"* (%"class.blink::AdTracker"*)**, %"class.WTF::StringImpl"* (%"class.blink::AdTracker"*)*** %41, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AdTracker"*)*, %"class.WTF::StringImpl"* (%"class.blink::AdTracker"*)** %42, i64 4
  %44 = load %"class.WTF::StringImpl"* (%"class.blink::AdTracker"*)*, %"class.WTF::StringImpl"* (%"class.blink::AdTracker"*)** %43, align 8
  %45 = tail call %"class.WTF::StringImpl"* %44(%"class.blink::AdTracker"* %0) #8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %125, label %47

47:                                               ; preds = %38, %23, %40
  %48 = phi %"class.WTF::StringImpl"* [ %45, %40 ], [ %21, %23 ], [ %21, %38 ]
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %111, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.WTF::String"*, %"class.WTF::String"** %53, align 8
  %55 = icmp eq %"class.WTF::String"* %54, null
  br i1 %55, label %108, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 0, i32 1, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = add i32 %58, -1
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = lshr i32 %62, 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %56
  %66 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* nonnull %48) #8
  br label %67

67:                                               ; preds = %65, %56
  %68 = phi i32 [ %66, %65 ], [ %63, %56 ]
  %69 = and i32 %68, %59
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 %70
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %108, label %75

75:                                               ; preds = %67
  %76 = xor i32 %68, -1
  %77 = lshr i32 %68, 23
  %78 = add i32 %77, %76
  %79 = shl i32 %78, 12
  %80 = xor i32 %79, %78
  %81 = lshr i32 %80, 7
  %82 = xor i32 %81, %80
  %83 = shl i32 %82, 2
  %84 = xor i32 %83, %82
  %85 = lshr i32 %84, 20
  %86 = xor i32 %85, %84
  %87 = or i32 %86, 1
  %88 = zext i32 %87 to i64
  br label %89

89:                                               ; preds = %99, %75
  %90 = phi %"class.WTF::StringImpl"* [ %73, %75 ], [ %106, %99 ]
  %91 = phi %"class.WTF::String"* [ %71, %75 ], [ %104, %99 ]
  %92 = phi i64 [ %70, %75 ], [ %103, %99 ]
  %93 = phi i64 [ 0, %75 ], [ %101, %99 ]
  %94 = bitcast %"class.WTF::String"* %91 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = icmp eq i8* %95, inttoptr (i64 -1 to i8*)
  br i1 %96, label %99, label %97

97:                                               ; preds = %89
  %98 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %90, %"class.WTF::StringImpl"* %48) #8
  br i1 %98, label %108, label %99

99:                                               ; preds = %97, %89
  %100 = icmp eq i64 %93, 0
  %101 = select i1 %100, i64 %88, i64 %93
  %102 = add i64 %101, %92
  %103 = and i64 %102, %60
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %108, label %89

108:                                              ; preds = %97, %99, %52, %67
  %109 = phi %"class.WTF::String"* [ null, %52 ], [ null, %67 ], [ null, %99 ], [ %91, %97 ]
  %110 = icmp ne %"class.WTF::String"* %109, null
  br label %111

111:                                              ; preds = %47, %108
  %112 = phi i1 [ %110, %108 ], [ false, %47 ]
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %111
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %111
  %122 = phi i32 [ %120, %119 ], [ %118, %111 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #8
  br label %125

125:                                              ; preds = %40, %124, %121, %15, %3
  %126 = phi i1 [ false, %3 ], [ false, %15 ], [ %112, %121 ], [ %112, %124 ], [ false, %40 ]
  ret i1 %126
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9AdTracker5TraceEPNS_7VisitorE(%"class.blink::AdTracker"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::Member"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv) #8
  br label %14

14:                                               ; preds = %2, %8
  %15 = getelementptr inbounds %"class.blink::AdTracker", %"class.blink::AdTracker"* %0, i64 0, i32 5
  %16 = bitcast %"class.blink::HeapHashMap"* %15 to i8*
  %17 = bitcast %"class.blink::HeapHashMap"* %15 to i64*
  %18 = load atomic i64, i64* %17 monotonic, align 8
  %19 = inttoptr i64 %18 to %"struct.WTF::KeyValuePair"*
  %20 = bitcast %"class.blink::HeapHashMap"* %15 to i8**
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %22 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %22, i64 11
  %24 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8** %20) #8
  %25 = inttoptr i64 %18 to i8*
  %26 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8
  %27 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"struct.WTF::KeyValuePair"**
  store %"struct.WTF::KeyValuePair"* %19, %"struct.WTF::KeyValuePair"** %27, align 8
  %28 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %28, align 8
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %30 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %30, i64 10
  %32 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %1, i8* %25, i8** %20, i8* %25, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_16ExecutionContextEEENS_12KeyValuePairIS5_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS8_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINSA_IS5_EENSA_ISD_EEEESJ_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %16) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Frame12IsAdSubframeEv(%"class.blink::Frame"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::LocalFrame"*
  tail call void @_ZNK5blink10LocalFrame5TraceEPNS_7VisitorE(%"class.blink::LocalFrame"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZNK5blink10LocalFrame5TraceEPNS_7VisitorE(%"class.blink::LocalFrame"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRbEEvOT_(%"class.WTF::Vector"*, i8* dereferenceable(1)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %46, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %83, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq i8* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #8
  %29 = ptrtoint i8* %28 to i64
  br i1 %25, label %30, label %33

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %29, i64* %31 monotonic, align 8
  %32 = trunc i64 %27 to i32
  store i32 %32, i32* %14, align 8
  br label %83

33:                                               ; preds = %24
  %34 = load i8*, i8** %6, align 8
  %35 = icmp ne i8* %28, null
  %36 = icmp ne i8* %34, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %42, !prof !2

38:                                               ; preds = %33
  %39 = load i32, i32* %3, align 4
  %40 = zext i32 %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %34, i64 %40, i1 false) #8
  %41 = load i8*, i8** %6, align 8
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i8* [ %34, %33 ], [ %41, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #8
  %44 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %29, i64* %44 monotonic, align 8
  %45 = trunc i64 %27 to i32
  store i32 %45, i32* %14, align 8
  br label %83

46:                                               ; preds = %9
  %47 = ptrtoint i8* %1 to i64
  %48 = ptrtoint i8* %7 to i64
  %49 = sub i64 %47, %48
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = lshr i32 %51, 2
  %53 = add i32 %51, 1
  %54 = add i32 %53, %52
  %55 = icmp ugt i32 %54, 4
  %56 = select i1 %55, i32 %54, i32 4
  %57 = icmp ugt i32 %56, %5
  %58 = select i1 %57, i32 %56, i32 %5
  %59 = icmp ult i32 %51, %58
  br i1 %59, label %60, label %80, !prof !2

60:                                               ; preds = %46
  %61 = icmp eq i8* %7, null
  %62 = zext i32 %58 to i64
  %63 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %62) #8
  %64 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %63, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #8
  %65 = ptrtoint i8* %64 to i64
  br i1 %61, label %77, label %66

66:                                               ; preds = %60
  %67 = load i8*, i8** %6, align 8
  %68 = icmp ne i8* %64, null
  %69 = icmp ne i8* %67, null
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %75, !prof !2

71:                                               ; preds = %66
  %72 = load i32, i32* %3, align 4
  %73 = zext i32 %72 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* nonnull align 1 %67, i64 %73, i1 false) #8
  %74 = load i8*, i8** %6, align 8
  br label %75

75:                                               ; preds = %71, %66
  %76 = phi i8* [ %67, %66 ], [ %74, %71 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #8
  br label %77

77:                                               ; preds = %60, %75
  %78 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %65, i64* %78 monotonic, align 8
  %79 = trunc i64 %63 to i32
  store i32 %79, i32* %50, align 8
  br label %80

80:                                               ; preds = %77, %46
  %81 = phi i8* [ %7, %46 ], [ %64, %77 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 %49
  br label %83

83:                                               ; preds = %42, %30, %13, %80
  %84 = phi i8* [ %81, %80 ], [ %7, %13 ], [ %28, %30 ], [ %28, %42 ]
  %85 = phi i8* [ %82, %80 ], [ %1, %13 ], [ %1, %30 ], [ %1, %42 ]
  %86 = load i32, i32* %3, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %84, i64 %87
  %89 = load i8, i8* %85, align 1, !range !4
  store i8 %89, i8* %88, align 1
  %90 = load i32, i32* %3, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %3, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #8
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  ret i8* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ExecutionContext"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %34, align 8
  %36 = icmp eq %"class.blink::ExecutionContext"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %54, align 8
  %56 = icmp eq %"class.blink::ExecutionContext"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %63, align 8
  %65 = icmp eq %"class.blink::ExecutionContext"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISK_SG_SL_EEPS3_SC_EENS_18HashTableAddResultISM_SD_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::ExecutionContext"** dereferenceable(8), %"class.WTF::HashSet"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE6ExpandEPSD_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::ExecutionContext"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %40 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %39, i64 0, i32 1
  %41 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %40) #8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45, !prof !3

43:                                               ; preds = %10
  %44 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %40, i8* %44) #8
  br label %45

45:                                               ; preds = %10, %43
  %46 = phi i8* [ %44, %43 ], [ %41, %10 ]
  %47 = bitcast i8* %46 to %"class.blink::ThreadState"**
  %48 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 16
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 1
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %53, align 8
  %55 = icmp eq %"class.blink::ExecutionContext"* %54, null
  br i1 %55, label %92, label %56

56:                                               ; preds = %45
  %57 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %1, align 8
  %58 = xor i32 %36, -1
  %59 = lshr i32 %36, 23
  %60 = add i32 %59, %58
  %61 = shl i32 %60, 12
  %62 = xor i32 %61, %60
  %63 = lshr i32 %62, 7
  %64 = xor i32 %63, %62
  %65 = shl i32 %64, 2
  %66 = xor i32 %65, %64
  %67 = lshr i32 %66, 20
  %68 = xor i32 %67, %66
  %69 = or i32 %68, 1
  %70 = zext i32 %69 to i64
  br label %71

71:                                               ; preds = %56, %78
  %72 = phi %"class.blink::ExecutionContext"* [ %54, %56 ], [ %88, %78 ]
  %73 = phi %"struct.WTF::KeyValuePair"* [ %52, %56 ], [ %86, %78 ]
  %74 = phi %"struct.WTF::KeyValuePair"* [ null, %56 ], [ %81, %78 ]
  %75 = phi i64 [ %38, %56 ], [ %85, %78 ]
  %76 = phi i64 [ 0, %56 ], [ %83, %78 ]
  %77 = icmp eq %"class.blink::ExecutionContext"* %72, %57
  br i1 %77, label %185, label %78

78:                                               ; preds = %71
  %79 = icmp eq %"class.blink::ExecutionContext"* %72, inttoptr (i64 -1 to %"class.blink::ExecutionContext"*)
  %80 = select i1 %51, %"struct.WTF::KeyValuePair"* %74, %"struct.WTF::KeyValuePair"* %73
  %81 = select i1 %79, %"struct.WTF::KeyValuePair"* %80, %"struct.WTF::KeyValuePair"* %74
  %82 = icmp eq i64 %76, 0
  %83 = select i1 %82, i64 %70, i64 %76
  %84 = add i64 %83, %75
  %85 = and i64 %84, %15
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %85
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %87, align 8
  %89 = icmp eq %"class.blink::ExecutionContext"* %88, null
  br i1 %89, label %90, label %71

90:                                               ; preds = %78
  %91 = icmp eq %"struct.WTF::KeyValuePair"* %81, null
  br i1 %91, label %92, label %95

92:                                               ; preds = %45, %90
  %93 = phi %"struct.WTF::KeyValuePair"* [ %86, %90 ], [ %52, %45 ]
  %94 = bitcast %"struct.WTF::KeyValuePair"* %93 to i64*
  br label %108

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1, i32 0, i32 1
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1, i32 0, i32 2
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1, i32 0, i32 3
  %100 = bitcast %"class.WTF::HashSet"* %96 to i64*
  %101 = bitcast %"struct.WTF::KeyValuePair"* %81 to i64*
  store i64 0, i64* %101, align 8
  store atomic i64 0, i64* %100 monotonic, align 8
  store i32 0, i32* %97, align 4
  store i32 0, i32* %98, align 4
  store i32 0, i32* %99, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_16ExecutionContextEEENS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS8_EENS2_18PartitionAllocatorEEEEENS2_18HashMapValueTraitsINSA_IS6_EENSA_ISD_EEEEEEvPT_(%"struct.WTF::KeyValuePair"* nonnull %81) #8
  %102 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %103 = load i32, i32* %102, align 8
  %104 = add i32 %103, 2147483647
  %105 = and i32 %104, 2147483647
  %106 = and i32 %103, -2147483648
  %107 = or i32 %105, %106
  store i32 %107, i32* %102, align 8
  br label %108

108:                                              ; preds = %92, %95
  %109 = phi i64* [ %94, %92 ], [ %101, %95 ]
  %110 = phi %"struct.WTF::KeyValuePair"* [ %93, %92 ], [ %81, %95 ]
  %111 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %1, align 8
  %112 = ptrtoint %"class.blink::ExecutionContext"* %111 to i64
  store atomic i64 %112, i64* %109 monotonic, align 8
  %113 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %118, label %115

115:                                              ; preds = %108
  %116 = bitcast %"class.blink::ExecutionContext"* %111 to i8*
  %117 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %116) #8
  br label %118

118:                                              ; preds = %108, %115
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %110, i64 0, i32 1
  %120 = bitcast %"class.WTF::HashSet"* %2 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.WTF::HashSet"* %119 to i64*
  %123 = load i64, i64* %122, align 8
  store atomic i64 %123, i64* %120 monotonic, align 8
  store atomic i64 %121, i64* %122 monotonic, align 8
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %110, i64 0, i32 1, i32 0, i32 1
  %125 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %2, i64 0, i32 0, i32 1
  %126 = load i32, i32* %124, align 4
  %127 = load i32, i32* %125, align 4
  store i32 %127, i32* %124, align 4
  store i32 %126, i32* %125, align 4
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %110, i64 0, i32 1, i32 0, i32 2
  %129 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %2, i64 0, i32 0, i32 2
  %130 = load i32, i32* %128, align 4
  %131 = load i32, i32* %129, align 4
  store i32 %131, i32* %128, align 4
  store i32 %130, i32* %129, align 4
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %110, i64 0, i32 1, i32 0, i32 3
  %133 = load i32, i32* %132, align 8
  %134 = and i32 %133, 2147483647
  %135 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %2, i64 0, i32 0, i32 3
  %136 = load i32, i32* %135, align 8
  %137 = and i32 %136, 2147483647
  %138 = and i32 %133, -2147483648
  %139 = or i32 %137, %138
  store i32 %139, i32* %132, align 8
  %140 = load i32, i32* %135, align 8
  %141 = and i32 %140, -2147483648
  %142 = or i32 %141, %134
  store i32 %142, i32* %135, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_16ExecutionContextEEENS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS8_EENS2_18PartitionAllocatorEEEEENS2_18HashMapValueTraitsINSA_IS6_EENSA_ISD_EEEEEEvPT_(%"struct.WTF::KeyValuePair"* %110) #8
  %143 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %144 = load i32, i32* %143, align 4
  %145 = add i32 %144, 1
  store i32 %145, i32* %143, align 4
  %146 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = add i32 %147, %145
  %149 = shl i32 %148, 1
  %150 = load i32, i32* %12, align 8
  %151 = icmp ult i32 %149, %150
  br i1 %151, label %154, label %152

152:                                              ; preds = %118
  %153 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE6ExpandEPSD_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %110)
  br label %185

154:                                              ; preds = %118
  %155 = mul i32 %145, 6
  %156 = icmp ult i32 %155, %150
  %157 = icmp ugt i32 %150, 8
  %158 = and i1 %156, %157
  br i1 %158, label %159, label %185

159:                                              ; preds = %154
  %160 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %161 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %160, i64 0, i32 1
  %162 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %161) #8
  %163 = icmp eq i8* %162, null
  br i1 %163, label %164, label %166, !prof !3

164:                                              ; preds = %159
  %165 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %161, i8* %165) #8
  br label %166

166:                                              ; preds = %164, %159
  %167 = phi i8* [ %165, %164 ], [ %162, %159 ]
  %168 = bitcast i8* %167 to %"class.blink::ThreadState"**
  %169 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %169, i64 0, i32 6
  %171 = load i8, i8* %170, align 8, !range !4
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %177, label %173

173:                                              ; preds = %166
  %174 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %169, i64 0, i32 16
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i32 %175, 1
  br i1 %176, label %185, label %177

177:                                              ; preds = %166, %173
  %178 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %169, i64 0, i32 13
  %179 = load i64, i64* %178, align 8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %185

181:                                              ; preds = %177
  %182 = load i32, i32* %12, align 8
  %183 = lshr i32 %182, 1
  %184 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE6RehashEjPSD_(%"class.WTF::HashTable"* %0, i32 %183, %"struct.WTF::KeyValuePair"* %110)
  br label %185

185:                                              ; preds = %71, %173, %154, %152, %181, %177
  %186 = phi i8 [ 1, %177 ], [ 1, %181 ], [ 1, %152 ], [ 1, %154 ], [ 1, %173 ], [ 0, %71 ]
  %187 = phi %"struct.WTF::KeyValuePair"* [ %110, %177 ], [ %184, %181 ], [ %153, %152 ], [ %110, %154 ], [ %110, %173 ], [ %73, %71 ]
  %188 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %187, 0
  %189 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %188, i8 %186, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %189
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE6ExpandEPSD_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE6RehashEjPSD_(%"class.WTF::HashTable"* %0, i32 %32, %"struct.WTF::KeyValuePair"* %1)
  ret %"struct.WTF::KeyValuePair"* %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE6RehashEjPSD_(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp ult i32 %6, %1
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 -86, i8* %4, align 1
  %9 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE12ExpandBufferEjPSD_Rb(%"class.WTF::HashTable"* %0, i32 %1, %"struct.WTF::KeyValuePair"* %2, i8* nonnull dereferenceable(1) %4)
  %10 = load i8, i8* %4, align 1, !range !4
  %11 = icmp eq i8 %10, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  br i1 %11, label %12, label %38

12:                                               ; preds = %8
  %13 = zext i32 %1 to i64
  %14 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE4CallEm(i64 %13) #8
  %15 = bitcast %"class.blink::HeapHashTableBacking"* %14 to %"struct.WTF::KeyValuePair"*
  br label %21

16:                                               ; preds = %3
  %17 = zext i32 %1 to i64
  %18 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE4CallEm(i64 %17) #8
  %19 = bitcast %"class.blink::HeapHashTableBacking"* %18 to %"struct.WTF::KeyValuePair"*
  %20 = icmp eq i32 %1, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %12, %16
  %22 = phi %"struct.WTF::KeyValuePair"* [ %15, %12 ], [ %19, %16 ]
  %23 = phi i64 [ %13, %12 ], [ %17, %16 ]
  br label %24

24:                                               ; preds = %21, %24
  %25 = phi i64 [ %33, %24 ], [ 0, %21 ]
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25, i32 1
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25, i32 1, i32 0, i32 1
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25, i32 1, i32 0, i32 2
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25, i32 1, i32 0, i32 3
  %31 = bitcast %"class.WTF::HashSet"* %27 to i64*
  %32 = bitcast %"struct.WTF::KeyValuePair"* %26 to i64*
  store i64 0, i64* %32, align 8
  store atomic i64 0, i64* %31 monotonic, align 8
  store i32 0, i32* %28, align 4
  store i32 0, i32* %29, align 4
  store i32 0, i32* %30, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_16ExecutionContextEEENS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS8_EENS2_18PartitionAllocatorEEEEENS2_18HashMapValueTraitsINSA_IS6_EENSA_ISD_EEEEEEvPT_(%"struct.WTF::KeyValuePair"* %26) #8
  %33 = add nuw nsw i64 %25, 1
  %34 = icmp eq i64 %33, %23
  br i1 %34, label %35, label %24

35:                                               ; preds = %24, %16
  %36 = phi %"struct.WTF::KeyValuePair"* [ %19, %16 ], [ %22, %24 ]
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE8RehashToEPSD_jSN_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %1, %"struct.WTF::KeyValuePair"* %2)
  br label %38

38:                                               ; preds = %8, %35
  %39 = phi %"struct.WTF::KeyValuePair"* [ %37, %35 ], [ %9, %8 ]
  ret %"struct.WTF::KeyValuePair"* %39
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_16ExecutionContextEEENS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS8_EENS2_18PartitionAllocatorEEEEENS2_18HashMapValueTraitsINSA_IS6_EENSA_ISD_EEEEEEvPT_(%"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %97, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %97, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %94, label %28

28:                                               ; preds = %18
  %29 = inttoptr i64 %26 to i8*
  %30 = and i64 %26, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4138
  %33 = load i8, i8* %32, align 2
  %34 = icmp eq i8 %33, 1
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = getelementptr inbounds i8, i8* %31, i64 4160
  br label %74

37:                                               ; preds = %28
  %38 = getelementptr inbounds i8, i8* %31, i64 4400
  %39 = bitcast i8* %38 to %"class.blink::ObjectStartBitmap"*
  %40 = bitcast i8* %38 to i8**
  %41 = bitcast i8* %38 to i64*
  %42 = load i64, i64* %41, align 16
  %43 = sub i64 %26, %42
  %44 = lshr i64 %43, 3
  %45 = lshr i64 %43, 6
  %46 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %39, i64 0, i32 1, i64 %45
  %47 = load atomic i8, i8* %46 acquire, align 1
  %48 = trunc i64 %44 to i32
  %49 = and i32 %48, 7
  %50 = shl i32 2, %49
  %51 = trunc i32 %50 to i8
  %52 = add i8 %51, -1
  %53 = and i8 %52, %47
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %61

55:                                               ; preds = %37, %55
  %56 = phi i64 [ %57, %55 ], [ %45, %37 ]
  %57 = add i64 %56, -1
  %58 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %39, i64 0, i32 1, i64 %57
  %59 = load atomic i8, i8* %58 acquire, align 1
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %55, label %61

61:                                               ; preds = %55, %37
  %62 = phi i64 [ %45, %37 ], [ %57, %55 ]
  %63 = phi i8 [ %53, %37 ], [ %59, %55 ]
  %64 = zext i8 %63 to i32
  %65 = tail call i32 @llvm.ctlz.i32(i32 %64, i1 true) #8, !range !5
  %66 = add nsw i32 %65, -24
  %67 = shl i64 %62, 3
  %68 = or i64 %67, 7
  %69 = sext i32 %66 to i64
  %70 = sub i64 %68, %69
  %71 = shl i64 %70, 3
  %72 = load i8*, i8** %40, align 16
  %73 = getelementptr inbounds i8, i8* %72, i64 %71
  br label %74

74:                                               ; preds = %35, %61
  %75 = phi i8* [ %36, %35 ], [ %73, %61 ]
  %76 = getelementptr inbounds i8, i8* %75, i64 8
  %77 = getelementptr inbounds i8, i8* %75, i64 4
  %78 = bitcast i8* %77 to i16*
  %79 = load atomic i16, i16* %78 acquire, align 2
  %80 = lshr i16 %79, 2
  %81 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %82 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %81, i64 0, i32 0
  %83 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %82, align 8
  %84 = zext i16 %80 to i64
  %85 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %83, i64 %84
  %86 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %85, align 8
  %87 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %86, i64 0, i32 0
  %88 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %87, align 8
  %89 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %90 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %90, i64 5
  %92 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %91, align 8
  tail call void %92(%"class.blink::Visitor"* %24, i8* nonnull %29, i8* %76, void (%"class.blink::Visitor"*, i8*)* %88) #8
  %93 = load i64, i64* %19, align 8
  br label %94

94:                                               ; preds = %18, %74
  %95 = phi i64 [ %21, %18 ], [ %93, %74 ]
  %96 = add i64 %95, -1
  store i64 %96, i64* %19, align 8
  br label %97

97:                                               ; preds = %1, %11, %94
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE12ExpandBufferEjPSD_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #8
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0)) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %139, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 5
  %37 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #8
  br i1 %38, label %39, label %139

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #8
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %59, label %47

47:                                               ; preds = %39, %47
  %48 = phi i64 [ %56, %47 ], [ 0, %39 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48, i32 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48, i32 1, i32 0, i32 1
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48, i32 1, i32 0, i32 2
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48, i32 1, i32 0, i32 3
  %54 = bitcast %"class.WTF::HashSet"* %50 to i64*
  %55 = bitcast %"struct.WTF::KeyValuePair"* %49 to i64*
  store i64 0, i64* %55, align 8
  store atomic i64 0, i64* %54 monotonic, align 8
  store i32 0, i32* %51, align 4
  store i32 0, i32* %52, align 4
  store i32 0, i32* %53, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_16ExecutionContextEEENS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS8_EENS2_18PartitionAllocatorEEEEENS2_18HashMapValueTraitsINSA_IS6_EENSA_ISD_EEEEEEvPT_(%"struct.WTF::KeyValuePair"* %49) #8
  %56 = add nuw nsw i64 %48, 1
  %57 = icmp eq i64 %56, %43
  br i1 %57, label %58, label %47

58:                                               ; preds = %47
  br i1 %46, label %59, label %69

59:                                               ; preds = %123, %39, %58
  %60 = phi %"struct.WTF::KeyValuePair"* [ null, %58 ], [ null, %39 ], [ %76, %123 ]
  %61 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %61, align 8
  %62 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %66 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %65) #8
  br label %67

67:                                               ; preds = %59, %64
  %68 = icmp eq i32 %1, 0
  br i1 %68, label %126, label %128

69:                                               ; preds = %58, %123
  %70 = phi i64 [ %124, %123 ], [ 0, %58 ]
  %71 = phi %"struct.WTF::KeyValuePair"* [ %76, %123 ], [ null, %58 ]
  %72 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 %70
  %74 = icmp eq %"struct.WTF::KeyValuePair"* %73, %2
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %70
  %76 = select i1 %74, %"struct.WTF::KeyValuePair"* %75, %"struct.WTF::KeyValuePair"* %71
  %77 = bitcast %"struct.WTF::KeyValuePair"* %73 to i64*
  %78 = load i64, i64* %77, align 8
  switch i64 %78, label %86 [
    i64 -1, label %79
    i64 0, label %79
  ]

79:                                               ; preds = %69, %69
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %70, i32 1
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %70, i32 1, i32 0, i32 1
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %70, i32 1, i32 0, i32 2
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %70, i32 1, i32 0, i32 3
  %84 = bitcast %"class.WTF::HashSet"* %80 to i64*
  %85 = bitcast %"struct.WTF::KeyValuePair"* %75 to i64*
  store i64 0, i64* %85, align 8
  store atomic i64 0, i64* %84 monotonic, align 8
  store i32 0, i32* %81, align 4
  store i32 0, i32* %82, align 4
  store i32 0, i32* %83, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_16ExecutionContextEEENS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS8_EENS2_18PartitionAllocatorEEEEENS2_18HashMapValueTraitsINSA_IS6_EENSA_ISD_EEEEEEvPT_(%"struct.WTF::KeyValuePair"* %75) #8
  br label %123

86:                                               ; preds = %69
  call void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink10WeakMemberINS2_16ExecutionContextEEENS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINS9_IS5_EENS9_ISC_EEEELb1EE4MoveEOSD_RSD_(%"struct.WTF::KeyValuePair"* dereferenceable(32) %73, %"struct.WTF::KeyValuePair"* dereferenceable(32) %75)
  %87 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 %70, i32 1, i32 0, i32 0
  %89 = load %"class.WTF::String"*, %"class.WTF::String"** %88, align 8
  %90 = icmp eq %"class.WTF::String"* %89, null
  br i1 %90, label %123, label %91, !prof !2

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 %70, i32 1, i32 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %121, label %95

95:                                               ; preds = %91
  %96 = zext i32 %93 to i64
  br label %97

97:                                               ; preds = %118, %95
  %98 = phi i64 [ 0, %95 ], [ %119, %118 ]
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %89, i64 %98
  %100 = bitcast %"class.WTF::String"* %99 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = bitcast i8* %101 to %"class.WTF::StringImpl"*
  %103 = ptrtoint i8* %101 to i64
  switch i64 %103, label %104 [
    i64 -1, label %118
    i64 0, label %118
  ]

104:                                              ; preds = %97
  %105 = getelementptr inbounds i8, i8* %101, i64 8
  %106 = bitcast i8* %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = bitcast i8* %101 to i32*
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %104
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %104
  %115 = phi i32 [ %113, %112 ], [ %111, %104 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #8
  br label %118

118:                                              ; preds = %117, %114, %97, %97
  %119 = add nuw nsw i64 %98, 1
  %120 = icmp eq i64 %119, %96
  br i1 %120, label %121, label %97

121:                                              ; preds = %118, %91
  %122 = bitcast %"class.WTF::String"* %89 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %122) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %88, align 8
  br label %123

123:                                              ; preds = %121, %86, %79
  %124 = add nuw nsw i64 %70, 1
  %125 = icmp eq i64 %124, %43
  br i1 %125, label %59, label %69

126:                                              ; preds = %128, %67
  %127 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE8RehashToEPSD_jSN_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %42, i32 %1, %"struct.WTF::KeyValuePair"* %60)
  br label %139

128:                                              ; preds = %67, %128
  %129 = phi i64 [ %137, %128 ], [ 0, %67 ]
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 %129
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 %129, i32 1
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 %129, i32 1, i32 0, i32 1
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 %129, i32 1, i32 0, i32 2
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 %129, i32 1, i32 0, i32 3
  %135 = bitcast %"class.WTF::HashSet"* %131 to i64*
  %136 = bitcast %"struct.WTF::KeyValuePair"* %130 to i64*
  store i64 0, i64* %136, align 8
  store atomic i64 0, i64* %135 monotonic, align 8
  store i32 0, i32* %132, align 4
  store i32 0, i32* %133, align 4
  store i32 0, i32* %134, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_16ExecutionContextEEENS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS8_EENS2_18PartitionAllocatorEEEEENS2_18HashMapValueTraitsINSA_IS6_EENSA_ISD_EEEEEEvPT_(%"struct.WTF::KeyValuePair"* %130) #8
  %137 = add nuw nsw i64 %129, 1
  %138 = icmp eq i64 %137, %35
  br i1 %138, label %126, label %128

139:                                              ; preds = %34, %30, %126
  %140 = phi %"struct.WTF::KeyValuePair"* [ %127, %126 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair"* %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE8RehashToEPSD_jSN_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  br label %114

21:                                               ; preds = %132
  %22 = bitcast %"class.WTF::HashTable"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %133, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair"* [ null, %15 ], [ %135, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #8
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #8
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %110, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %108, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %105, %54
  %57 = phi i64 [ 0, %54 ], [ %106, %105 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 %57
  %59 = bitcast %"struct.WTF::KeyValuePair"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  switch i64 %60, label %61 [
    i64 -1, label %105
    i64 0, label %105
  ]

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 %57, i32 1, i32 0, i32 0
  %63 = load %"class.WTF::String"*, %"class.WTF::String"** %62, align 8
  %64 = icmp eq %"class.WTF::String"* %63, null
  br i1 %64, label %97, label %65, !prof !2

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 %57, i32 1, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %95, label %69

69:                                               ; preds = %65
  %70 = zext i32 %67 to i64
  br label %71

71:                                               ; preds = %92, %69
  %72 = phi i64 [ 0, %69 ], [ %93, %92 ]
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 %72
  %74 = bitcast %"class.WTF::String"* %73 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast i8* %75 to %"class.WTF::StringImpl"*
  %77 = ptrtoint i8* %75 to i64
  switch i64 %77, label %78 [
    i64 -1, label %92
    i64 0, label %92
  ]

78:                                               ; preds = %71
  %79 = getelementptr inbounds i8, i8* %75, i64 8
  %80 = bitcast i8* %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = bitcast i8* %75 to i32*
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %78
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %78
  %89 = phi i32 [ %87, %86 ], [ %85, %78 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #8
  br label %92

92:                                               ; preds = %91, %88, %71, %71
  %93 = add nuw nsw i64 %72, 1
  %94 = icmp eq i64 %93, %70
  br i1 %94, label %95, label %71

95:                                               ; preds = %92, %65
  %96 = bitcast %"class.WTF::String"* %63 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %96) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %62, align 8
  br label %97

97:                                               ; preds = %95, %61
  store atomic i64 -1, i64* %59 monotonic, align 8
  %98 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %97
  %101 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #8
  br label %102

102:                                              ; preds = %97, %100
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 %57, i32 1
  %104 = bitcast %"class.WTF::HashSet"* %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %104, i8 0, i64 24, i1 false) #8
  br label %105

105:                                              ; preds = %102, %56, %56
  %106 = add nuw nsw i64 %57, 1
  %107 = icmp eq i64 %106, %55
  br i1 %107, label %108, label %56

108:                                              ; preds = %105, %52
  %109 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %109) #8
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %110

110:                                              ; preds = %49, %108
  %111 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = and i32 %112, -2147483648
  store i32 %113, i32* %111, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair"* %29

114:                                              ; preds = %18, %132
  %115 = phi i32 [ %13, %18 ], [ %133, %132 ]
  %116 = phi %"struct.WTF::KeyValuePair"* [ %20, %18 ], [ %134, %132 ]
  %117 = phi %"struct.WTF::KeyValuePair"* [ null, %18 ], [ %135, %132 ]
  %118 = phi i32 [ 0, %18 ], [ %136, %132 ]
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 %119
  %121 = bitcast %"struct.WTF::KeyValuePair"* %120 to i64*
  %122 = load i64, i64* %121, align 8
  switch i64 %122, label %123 [
    i64 -1, label %132
    i64 0, label %132
  ]

123:                                              ; preds = %114
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %120, i64 0, i32 0
  %125 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::WeakMember"* dereferenceable(8) %124) #8
  %126 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %125, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink10WeakMemberINS2_16ExecutionContextEEENS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINS9_IS5_EENS9_ISC_EEEELb1EE4MoveEOSD_RSD_(%"struct.WTF::KeyValuePair"* dereferenceable(32) %120, %"struct.WTF::KeyValuePair"* dereferenceable(32) %126) #8
  %127 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 %119
  %129 = icmp eq %"struct.WTF::KeyValuePair"* %128, %3
  %130 = select i1 %129, %"struct.WTF::KeyValuePair"* %126, %"struct.WTF::KeyValuePair"* %117
  %131 = load i32, i32* %12, align 8
  br label %132

132:                                              ; preds = %114, %114, %123
  %133 = phi i32 [ %115, %114 ], [ %131, %123 ], [ %115, %114 ]
  %134 = phi %"struct.WTF::KeyValuePair"* [ %116, %114 ], [ %127, %123 ], [ %116, %114 ]
  %135 = phi %"struct.WTF::KeyValuePair"* [ %117, %114 ], [ %130, %123 ], [ %117, %114 ]
  %136 = add i32 %118, 1
  %137 = icmp eq i32 %136, %133
  br i1 %137, label %21, label %114
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink10WeakMemberINS2_16ExecutionContextEEENS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINS9_IS5_EENS9_ISC_EEEELb1EE4MoveEOSD_RSD_(%"struct.WTF::KeyValuePair"* dereferenceable(32), %"struct.WTF::KeyValuePair"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %4 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %3, i64 0, i32 1
  %5 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %4) #8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9, !prof !3

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %4, i8* %8) #8
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i8* [ %8, %7 ], [ %5, %2 ]
  %11 = bitcast i8* %10 to %"class.blink::ThreadState"**
  %12 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %12, i64 0, i32 14
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %18 = icmp eq %"class.WTF::String"* %17, null
  br i1 %18, label %51, label %19, !prof !2

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %49, label %23

23:                                               ; preds = %19
  %24 = zext i32 %21 to i64
  br label %25

25:                                               ; preds = %46, %23
  %26 = phi i64 [ 0, %23 ], [ %47, %46 ]
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 %26
  %28 = bitcast %"class.WTF::String"* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast i8* %29 to %"class.WTF::StringImpl"*
  %31 = ptrtoint i8* %29 to i64
  switch i64 %31, label %32 [
    i64 -1, label %46
    i64 0, label %46
  ]

32:                                               ; preds = %25
  %33 = getelementptr inbounds i8, i8* %29, i64 8
  %34 = bitcast i8* %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = bitcast i8* %29 to i32*
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %32
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %32
  %43 = phi i32 [ %41, %40 ], [ %39, %32 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #8
  br label %46

46:                                               ; preds = %45, %42, %25, %25
  %47 = add nuw nsw i64 %26, 1
  %48 = icmp eq i64 %47, %24
  br i1 %48, label %49, label %25

49:                                               ; preds = %46, %19
  %50 = bitcast %"class.WTF::String"* %17 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %16, align 8
  br label %51

51:                                               ; preds = %9, %49
  %52 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 1
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 2
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 3
  %60 = bitcast %"class.WTF::HashSet"* %56 to i64*
  %61 = bitcast %"class.WTF::HashSet"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 20, i1 false) #8
  %62 = load i64, i64* %60, align 8
  %63 = bitcast %"class.WTF::HashSet"* %55 to i64*
  store atomic i64 0, i64* %60 monotonic, align 8
  store atomic i64 %62, i64* %63 monotonic, align 8
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 1
  %65 = load i32, i32* %57, align 4
  %66 = load i32, i32* %64, align 4
  store i32 %66, i32* %57, align 4
  store i32 %65, i32* %64, align 4
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 2
  %68 = load i32, i32* %58, align 4
  %69 = load i32, i32* %67, align 4
  store i32 %69, i32* %58, align 4
  store i32 %68, i32* %67, align 4
  %70 = load i32, i32* %59, align 8
  %71 = and i32 %70, 2147483647
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = and i32 %73, 2147483647
  %75 = and i32 %70, -2147483648
  %76 = or i32 %74, %75
  store i32 %76, i32* %59, align 8
  %77 = load i32, i32* %72, align 8
  %78 = and i32 %77, -2147483648
  %79 = or i32 %78, %71
  store i32 %79, i32* %72, align 8
  %80 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %81 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %80, i64 0, i32 1
  %82 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %81) #8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %84, label %86, !prof !3

84:                                               ; preds = %51
  %85 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %81, i8* %85) #8
  br label %86

86:                                               ; preds = %51, %84
  %87 = phi i8* [ %85, %84 ], [ %82, %51 ]
  %88 = bitcast i8* %87 to %"class.blink::ThreadState"**
  %89 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %89, i64 0, i32 14
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, -1
  store i64 %92, i64* %90, align 8
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.10, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 5
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS1_12KeyValuePairIS5_NS1_7HashSetINS1_6StringENS1_10StringHashENS1_10HashTraitsIS8_EENS1_18PartitionAllocatorEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINSA_IS5_EENSA_ISD_EEEESJ_NS_13HeapAllocatorEEEE14AllocateObjectISO_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS1_12KeyValuePairIS5_NS1_7HashSetINS1_6StringENS1_10StringHashENS1_10HashTraitsIS8_EENS1_18PartitionAllocatorEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINSA_IS5_EENSA_ISD_EEEESJ_NS_13HeapAllocatorEEEE14AllocateObjectISO_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 5
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #8
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %34, i8* %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #8
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !3

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #8
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberINS3_16ExecutionContextEEENS_12KeyValuePairIS6_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS9_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS3_12KeyValuePairIS7_NS3_7HashSetINS3_6StringENS3_10StringHashENS3_10HashTraitsISA_EENS3_18PartitionAllocatorEEEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS6_EENS3_18HashMapValueTraitsINSC_IS7_EENSC_ISF_EEEESL_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 5
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %70, label %24

24:                                               ; preds = %18, %66
  %25 = phi i64 [ %68, %66 ], [ 0, %18 ]
  %26 = phi i32 [ %67, %66 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25
  %28 = bitcast %"struct.WTF::KeyValuePair"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  switch i64 %29, label %30 [
    i64 -1, label %66
    i64 0, label %66
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::String"*, %"class.WTF::String"** %31, align 8
  %33 = icmp eq %"class.WTF::String"* %32, null
  br i1 %33, label %66, label %34, !prof !2

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25, i32 1, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %64, label %38

38:                                               ; preds = %34
  %39 = zext i32 %36 to i64
  br label %40

40:                                               ; preds = %61, %38
  %41 = phi i64 [ 0, %38 ], [ %62, %61 ]
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 %41
  %43 = bitcast %"class.WTF::String"* %42 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast i8* %44 to %"class.WTF::StringImpl"*
  %46 = ptrtoint i8* %44 to i64
  switch i64 %46, label %47 [
    i64 -1, label %61
    i64 0, label %61
  ]

47:                                               ; preds = %40
  %48 = getelementptr inbounds i8, i8* %44, i64 8
  %49 = bitcast i8* %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = bitcast i8* %44 to i32*
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %47
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %47
  %58 = phi i32 [ %56, %55 ], [ %54, %47 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #8
  br label %61

61:                                               ; preds = %60, %57, %40, %40
  %62 = add nuw nsw i64 %41, 1
  %63 = icmp eq i64 %62, %39
  br i1 %63, label %64, label %40

64:                                               ; preds = %61, %34
  %65 = bitcast %"class.WTF::String"* %32 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %65) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %31, align 8
  br label %66

66:                                               ; preds = %64, %30, %24, %24
  %67 = add i32 %26, 1
  %68 = zext i32 %67 to i64
  %69 = icmp ugt i64 %21, %68
  br i1 %69, label %24, label %70

70:                                               ; preds = %66, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_16ExecutionContextEEENS2_12KeyValuePairIS6_NS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS9_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberINS3_16ExecutionContextEEENS_12KeyValuePairIS6_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS9_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINSB_IS6_EENSB_ISE_EEEESK_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 5
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #8
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %174, %20
  ret void

33:                                               ; preds = %174, %30
  %34 = phi i64 [ 0, %30 ], [ %175, %174 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair"* %35 to i64*
  br i1 %28, label %37, label %104

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %174
    i64 0, label %174
  ]

39:                                               ; preds = %37
  %40 = inttoptr i64 %38 to i8*
  %41 = and i64 %38, -131072
  %42 = inttoptr i64 %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 4138
  %44 = load i8, i8* %43, align 2
  %45 = icmp eq i8 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %39
  %47 = getelementptr inbounds i8, i8* %42, i64 4160
  br label %86

48:                                               ; preds = %39
  %49 = getelementptr inbounds i8, i8* %42, i64 4096
  %50 = bitcast i8* %49 to %"class.blink::NormalPage"*
  %51 = getelementptr inbounds i8, i8* %42, i64 4400
  %52 = bitcast i8* %51 to i8**
  %53 = bitcast i8* %51 to i64*
  %54 = load i64, i64* %53, align 16
  %55 = sub i64 %38, %54
  %56 = lshr i64 %55, 3
  %57 = lshr i64 %55, 6
  %58 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %50, i64 0, i32 2, i32 0, i32 1, i64 %57
  %59 = load atomic i8, i8* %58 acquire, align 1
  %60 = trunc i64 %56 to i32
  %61 = and i32 %60, 7
  %62 = shl i32 2, %61
  %63 = trunc i32 %62 to i8
  %64 = add i8 %63, -1
  %65 = and i8 %64, %59
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %48, %67
  %68 = phi i64 [ %69, %67 ], [ %57, %48 ]
  %69 = add i64 %68, -1
  %70 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %50, i64 0, i32 2, i32 0, i32 1, i64 %69
  %71 = load atomic i8, i8* %70 acquire, align 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %67, label %73

73:                                               ; preds = %67, %48
  %74 = phi i64 [ %57, %48 ], [ %69, %67 ]
  %75 = phi i8 [ %65, %48 ], [ %71, %67 ]
  %76 = zext i8 %75 to i32
  %77 = tail call i32 @llvm.ctlz.i32(i32 %76, i1 true) #8, !range !5
  %78 = add nsw i32 %77, -24
  %79 = shl i64 %74, 3
  %80 = or i64 %79, 7
  %81 = sext i32 %78 to i64
  %82 = sub i64 %80, %81
  %83 = shl i64 %82, 3
  %84 = load i8*, i8** %52, align 16
  %85 = getelementptr inbounds i8, i8* %84, i64 %83
  br label %86

86:                                               ; preds = %73, %46
  %87 = phi i8* [ %47, %46 ], [ %85, %73 ]
  %88 = getelementptr inbounds i8, i8* %87, i64 8
  %89 = getelementptr inbounds i8, i8* %87, i64 4
  %90 = bitcast i8* %89 to i16*
  %91 = load atomic i16, i16* %90 acquire, align 2
  %92 = lshr i16 %91, 2
  %93 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %94 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %93, i64 0, i32 0
  %95 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %94, align 8
  %96 = zext i16 %92 to i64
  %97 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %95, i64 %96
  %98 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %97, align 8
  %99 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %98, i64 0, i32 0
  %100 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %99, align 8
  %101 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %102 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %101, i64 5
  %103 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %102, align 8
  tail call void %103(%"class.blink::Visitor"* %0, i8* nonnull %40, i8* %88, void (%"class.blink::Visitor"*, i8*)* %100) #8
  br label %174

104:                                              ; preds = %33
  %105 = load i64, i64* %36, align 8
  switch i64 %105, label %106 [
    i64 -1, label %174
    i64 0, label %174
  ]

106:                                              ; preds = %104
  %107 = load atomic i64, i64* %36 monotonic, align 8
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %174, label %109

109:                                              ; preds = %106
  %110 = inttoptr i64 %107 to i8*
  %111 = and i64 %107, -131072
  %112 = inttoptr i64 %111 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 4138
  %114 = load i8, i8* %113, align 2
  %115 = icmp eq i8 %114, 1
  br i1 %115, label %116, label %118

116:                                              ; preds = %109
  %117 = getelementptr inbounds i8, i8* %112, i64 4160
  br label %156

118:                                              ; preds = %109
  %119 = getelementptr inbounds i8, i8* %112, i64 4096
  %120 = bitcast i8* %119 to %"class.blink::NormalPage"*
  %121 = getelementptr inbounds i8, i8* %112, i64 4400
  %122 = bitcast i8* %121 to i8**
  %123 = bitcast i8* %121 to i64*
  %124 = load i64, i64* %123, align 16
  %125 = sub i64 %107, %124
  %126 = lshr i64 %125, 3
  %127 = lshr i64 %125, 6
  %128 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %120, i64 0, i32 2, i32 0, i32 1, i64 %127
  %129 = load atomic i8, i8* %128 acquire, align 1
  %130 = trunc i64 %126 to i32
  %131 = and i32 %130, 7
  %132 = shl i32 2, %131
  %133 = trunc i32 %132 to i8
  %134 = add i8 %133, -1
  %135 = and i8 %134, %129
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %143

137:                                              ; preds = %118, %137
  %138 = phi i64 [ %139, %137 ], [ %127, %118 ]
  %139 = add i64 %138, -1
  %140 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %120, i64 0, i32 2, i32 0, i32 1, i64 %139
  %141 = load atomic i8, i8* %140 acquire, align 1
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %137, label %143

143:                                              ; preds = %137, %118
  %144 = phi i64 [ %127, %118 ], [ %139, %137 ]
  %145 = phi i8 [ %135, %118 ], [ %141, %137 ]
  %146 = zext i8 %145 to i32
  %147 = tail call i32 @llvm.ctlz.i32(i32 %146, i1 true) #8, !range !5
  %148 = add nsw i32 %147, -24
  %149 = shl i64 %144, 3
  %150 = or i64 %149, 7
  %151 = sext i32 %148 to i64
  %152 = sub i64 %150, %151
  %153 = shl i64 %152, 3
  %154 = load i8*, i8** %122, align 16
  %155 = getelementptr inbounds i8, i8* %154, i64 %153
  br label %156

156:                                              ; preds = %143, %116
  %157 = phi i8* [ %117, %116 ], [ %155, %143 ]
  %158 = getelementptr inbounds i8, i8* %157, i64 8
  %159 = getelementptr inbounds i8, i8* %157, i64 4
  %160 = bitcast i8* %159 to i16*
  %161 = load atomic i16, i16* %160 acquire, align 2
  %162 = lshr i16 %161, 2
  %163 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %164 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %163, i64 0, i32 0
  %165 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %164, align 8
  %166 = zext i16 %162 to i64
  %167 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %165, i64 %166
  %168 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %167, align 8
  %169 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %168, i64 0, i32 0
  %170 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %169, align 8
  %171 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %172 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %171, i64 5
  %173 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %172, align 8
  tail call void %173(%"class.blink::Visitor"* %0, i8* nonnull %110, i8* %158, void (%"class.blink::Visitor"*, i8*)* %170) #8
  br label %174

174:                                              ; preds = %104, %104, %37, %37, %156, %106, %86
  %175 = add nuw nsw i64 %34, 1
  %176 = icmp eq i64 %175, %23
  br i1 %176, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_16ExecutionContextEEENS_12KeyValuePairIS4_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS7_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS9_IS4_EENS9_ISC_EEEESI_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"*, %"class.blink::WeakMember"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::WeakMember"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %34, align 8
  %36 = icmp eq %"class.blink::ExecutionContext"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::ExecutionContext"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::ExecutionContext"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %67, align 8
  %69 = icmp eq %"class.blink::ExecutionContext"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::ExecutionContext"* %63, inttoptr (i64 -1 to %"class.blink::ExecutionContext"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %79, align 8
  %81 = icmp eq %"class.blink::ExecutionContext"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %87
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.4"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.4", %"class.WTF::HashTable.4"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.4"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.4", %"class.WTF::HashTable.4"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #8
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #8
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.4", %"class.WTF::HashTable.4"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #8
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %88
  tail call void @llvm.trap() #8
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #8
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.4", %"class.WTF::HashTable.4"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.4", %"class.WTF::HashTable.4"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.4"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.4"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.4", %"class.WTF::HashTable.4"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.4", %"class.WTF::HashTable.4"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.4"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #8
  ret %"class.WTF::String"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.4"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.4", align 8
  %6 = bitcast %"class.WTF::HashTable.4"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable.4", %"class.WTF::HashTable.4"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.4", %"class.WTF::HashTable.4"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.4", %"class.WTF::HashTable.4"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.4", %"class.WTF::HashTable.4"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.4"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.4", %"class.WTF::HashTable.4"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.4", %"class.WTF::HashTable.4"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.4"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.4"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable.4"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.4"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #8
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #8
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.4", %"class.WTF::HashTable.4"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.4"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #8
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #8
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.4"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.4", %"class.WTF::HashTable.4"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.4", %"class.WTF::HashTable.4"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #8
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #8
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_16ExecutionContextEEENS_12KeyValuePairIS5_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS8_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINSA_IS5_EENSA_ISD_EEEESJ_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"**
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %83, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %10
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 -1
  %13 = icmp ult %"struct.WTF::KeyValuePair"* %12, %4
  br i1 %13, label %83, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %79
  %20 = phi %"struct.WTF::KeyValuePair"* [ %12, %14 ], [ %80, %79 ]
  %21 = phi %"struct.WTF::KeyValuePair"* [ %11, %14 ], [ %20, %79 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %22, align 8
  %24 = ptrtoint %"class.blink::ExecutionContext"* %23 to i64
  switch i64 %24, label %25 [
    i64 -1, label %79
    i64 0, label %79
  ]

25:                                               ; preds = %19
  %26 = tail call zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_16ExecutionContextEEEbPKT_(%"class.blink::LivenessBroker"* %0, %"class.blink::ExecutionContext"* nonnull %23) #8
  br i1 %26, label %79, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 -1, i32 1, i32 0, i32 0
  %29 = load %"class.WTF::String"*, %"class.WTF::String"** %28, align 8
  %30 = icmp eq %"class.WTF::String"* %29, null
  br i1 %30, label %63, label %31, !prof !2

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 -1, i32 1, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %61, label %35

35:                                               ; preds = %31
  %36 = zext i32 %33 to i64
  br label %37

37:                                               ; preds = %58, %35
  %38 = phi i64 [ 0, %35 ], [ %59, %58 ]
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 %38
  %40 = bitcast %"class.WTF::String"* %39 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast i8* %41 to %"class.WTF::StringImpl"*
  %43 = ptrtoint i8* %41 to i64
  switch i64 %43, label %44 [
    i64 -1, label %58
    i64 0, label %58
  ]

44:                                               ; preds = %37
  %45 = getelementptr inbounds i8, i8* %41, i64 8
  %46 = bitcast i8* %45 to i32*
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = bitcast i8* %41 to i32*
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %44
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %44
  %55 = phi i32 [ %53, %52 ], [ %51, %44 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #8
  br label %58

58:                                               ; preds = %57, %54, %37, %37
  %59 = add nuw nsw i64 %38, 1
  %60 = icmp eq i64 %59, %36
  br i1 %60, label %61, label %37

61:                                               ; preds = %58, %31
  %62 = bitcast %"class.WTF::String"* %29 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %62) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %28, align 8
  br label %63

63:                                               ; preds = %61, %27
  %64 = bitcast %"struct.WTF::KeyValuePair"* %20 to i64*
  store atomic i64 -1, i64* %64 monotonic, align 8
  %65 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #8
  br label %69

69:                                               ; preds = %63, %67
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 -1, i32 1
  %71 = bitcast %"class.WTF::HashSet"* %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %71, i8 0, i64 24, i1 false) #8
  %72 = load i32, i32* %16, align 8
  %73 = add i32 %72, 1
  %74 = and i32 %73, 2147483647
  %75 = and i32 %72, -2147483648
  %76 = or i32 %74, %75
  store i32 %76, i32* %16, align 8
  %77 = load i32, i32* %18, align 4
  %78 = add i32 %77, -1
  store i32 %78, i32* %18, align 4
  br label %79

79:                                               ; preds = %19, %19, %69, %25
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 -1
  %81 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %82 = icmp ult %"struct.WTF::KeyValuePair"* %80, %81
  br i1 %82, label %83, label %19

83:                                               ; preds = %79, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_16ExecutionContextEEEbPKT_(%"class.blink::LivenessBroker"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::ExecutionContext"* %1, null
  br i1 %3, label %73, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %73, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"class.blink::ExecutionContext"* %1 to i64
  %18 = and i64 %17, -131072
  %19 = inttoptr i64 %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 4138
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8, i8* %19, i64 4160
  br label %63

25:                                               ; preds = %16
  %26 = getelementptr inbounds i8, i8* %19, i64 4096
  %27 = bitcast i8* %26 to %"class.blink::NormalPage"*
  %28 = getelementptr inbounds i8, i8* %19, i64 4400
  %29 = bitcast i8* %28 to i8**
  %30 = bitcast i8* %28 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = sub i64 %17, %31
  %33 = lshr i64 %32, 3
  %34 = lshr i64 %32, 6
  %35 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %34
  %36 = load atomic i8, i8* %35 acquire, align 1
  %37 = trunc i64 %33 to i32
  %38 = and i32 %37, 7
  %39 = shl i32 2, %38
  %40 = trunc i32 %39 to i8
  %41 = add i8 %40, -1
  %42 = and i8 %41, %36
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %25, %44
  %45 = phi i64 [ %46, %44 ], [ %34, %25 ]
  %46 = add i64 %45, -1
  %47 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %44, label %50

50:                                               ; preds = %44, %25
  %51 = phi i64 [ %34, %25 ], [ %46, %44 ]
  %52 = phi i8 [ %42, %25 ], [ %48, %44 ]
  %53 = zext i8 %52 to i32
  %54 = tail call i32 @llvm.ctlz.i32(i32 %53, i1 true) #8, !range !5
  %55 = add nsw i32 %54, -24
  %56 = shl i64 %51, 3
  %57 = or i64 %56, 7
  %58 = sext i32 %55 to i64
  %59 = sub i64 %57, %58
  %60 = shl i64 %59, 3
  %61 = load i8*, i8** %29, align 16
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  br label %63

63:                                               ; preds = %23, %50
  %64 = phi i8* [ %24, %23 ], [ %62, %50 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 acquire, align 2
  %68 = getelementptr inbounds i8, i8* %64, i64 6
  %69 = bitcast i8* %68 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = and i16 %70, 1
  %72 = icmp ne i16 %71, 0
  br label %73

73:                                               ; preds = %11, %2, %63
  %74 = phi i1 [ %72, %63 ], [ true, %2 ], [ true, %11 ]
  ret i1 %74
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{i32 24, i32 33}
