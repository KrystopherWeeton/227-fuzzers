; ModuleID = '../../third_party/blink/renderer/modules/accessibility/ax_list_box_option.cc'
source_filename = "../../third_party/blink/renderer/modules/accessibility/ax_list_box_option.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.443 }
%class.scoped_refptr.443 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.444", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.444" = type { %"class.base::RefCounted.445" }
%"class.base::RefCounted.445" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.88 }
%class.scoped_refptr.88 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.131" }
%"struct.std::__1::atomic.131" = type { %"struct.std::__1::__atomic_base.132" }
%"struct.std::__1::__atomic_base.132" = type { %"struct.std::__1::__atomic_base.133" }
%"struct.std::__1::__atomic_base.133" = type { %"struct.std::__1::__cxx_atomic_impl.134" }
%"struct.std::__1::__cxx_atomic_impl.134" = type { %"struct.std::__1::__cxx_atomic_base_impl.135" }
%"struct.std::__1::__cxx_atomic_base_impl.135" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.152", i32, [4 x i8], %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.290", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.306", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.324", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.331", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.270", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__atomic_base.190" }
%"struct.std::__1::__atomic_base.190" = type { %"struct.std::__1::__cxx_atomic_impl.191" }
%"struct.std::__1::__cxx_atomic_impl.191" = type { %"struct.std::__1::__cxx_atomic_base_impl.192" }
%"struct.std::__1::__cxx_atomic_base_impl.192" = type { i64 }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::Worklist.199"* }
%"class.blink::Worklist.199" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::Worklist.206"* }
%"class.blink::Worklist.206" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::Worklist.213"* }
%"class.blink::Worklist.213" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::Worklist.220"* }
%"class.blink::Worklist.220" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::Worklist.227"* }
%"class.blink::Worklist.227" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::Worklist.234"* }
%"class.blink::Worklist.234" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::Worklist.241"* }
%"class.blink::Worklist.241" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.248", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.262", %"class.std::__1::__compressed_pair.264", [4 x i8] }>
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250", %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { i64 }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { float }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.273", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.282" }
%"class.WTF::Vector.282" = type { %"class.WTF::VectorBuffer.283" }
%"class.WTF::VectorBuffer.283" = type { %"class.WTF::VectorBufferBase.284" }
%"class.WTF::VectorBufferBase.284" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.298" }
%"class.WTF::VectorBuffer.298" = type { %"class.WTF::VectorBufferBase.299" }
%"class.WTF::VectorBufferBase.299" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.312" }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.199"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.206"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.213"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.220"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.227"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.980", i64 }
%"class.std::__1::vector.980" = type { %"class.std::__1::__vector_base.981" }
%"class.std::__1::__vector_base.981" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.982" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.330 }
%class.scoped_refptr.330 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.331" = type { %"struct.std::__1::__atomic_base.332" }
%"struct.std::__1::__atomic_base.332" = type { %"struct.std::__1::__cxx_atomic_impl.333" }
%"struct.std::__1::__cxx_atomic_impl.333" = type { %"struct.std::__1::__cxx_atomic_base_impl.334" }
%"struct.std::__1::__cxx_atomic_base_impl.334" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AXListBoxOption" = type { %"class.blink::AXLayoutObject" }
%"class.blink::AXLayoutObject" = type { %"class.blink::AXNodeObject", %"class.blink::LayoutObject"* }
%"class.blink::AXNodeObject" = type { %"class.blink::AXObject", i32, i32, %"class.blink::Member.82" }
%"class.blink::AXObject" = type { i32 (...)**, i32, %"class.blink::Member", %"class.blink::HeapVector", i8, i32, %"class.blink::LayoutRect", i32, i32, i8, %"class.blink::Member", i32, i32, %"class.blink::FloatRect", %"class.blink::Member.2" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::AXObject"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::AXObjectCacheImpl"* }
%"class.blink::Member.82" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.82", %"class.blink::Member.420", %"class.blink::Member.82", %"class.blink::Member.82", %"class.blink::Member.422" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.416", %"class.blink::Member.6", %"class.blink::Member.420", %"class.blink::Member.426", %"class.blink::Member.426", %"class.blink::Member.468", %"class.blink::Member.470", %"class.blink::Member.472", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.477", %"class.blink::HeapVector.479" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.82", %"class.blink::Member.82" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.996", %"class.WTF::Vector.996", i8, i32, %"class.blink::Member.1003", %"class.blink::Member.1005", %"class.blink::Member.1007", %"class.blink::Member.1009", %"class.blink::Member.1011", %"class.blink::Member.1013", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1021", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1027", %"class.blink::Member.1029", %"class.blink::Member.485", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1032", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.461", %"class.blink::Member.441", %"class.blink::Member.1056", %"class.blink::Member.441", %"class.blink::Member.441", %"class.blink::Member.441", %"class.blink::UserActionElementSet", %"class.blink::Member.1065", double, double, i64, i64, %"class.blink::HeapHashSet.1067", %"class.blink::HeapHashSet.1074", i16, i8, %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1085", %"class.blink::Member.1087", %"class.blink::TextLinkColors", %"class.blink::Member.1089", i8, [7 x i8], %"class.blink::HeapHashMap.1091", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.441", %"class.WTF::Vector.1098", %"class.blink::Member.1103", %"class.blink::Member.1105", i8, %"class.blink::Member.441", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1107", %"class.blink::HeapVector.1109", %"class.std::__1::unique_ptr.1117", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1123", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1136", %"class.WTF::Vector.1138", i8, i8, %"class.std::__1::unique_ptr.1143", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.461", %"class.blink::HeapVector.1149", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1157", i8, i32, %"class.blink::Member.1159", %"class.blink::Member.1161", %"class.blink::Member.1163", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1165", %"class.WTF::HashMap.1167", %"class.blink::Member.1172", %"class.blink::Member.1174", %"class.blink::Member.1176", %"class.blink::Member.1178", %"class.blink::Member.6", %"class.blink::Member.6", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1180", i8, i32, %"class.blink::Member.1187", %"class.blink::Member.1189", i32, %"class.blink::Member.1191", %"class.blink::Member.1193", %"class.blink::Member.1195", %"class.std::__1::unique_ptr.1197", i64, %"class.std::__1::unique_ptr.1203", i32, i32, %"class.blink::Member.1214", %"class.blink::Member.1216", %"class.blink::Member.1218", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1220", %"class.WTF::Vector.1222", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1227", %"class.blink::Member.1234", %"class.std::__1::unique_ptr.1236", %"class.blink::Member.1242", i8, i8, %"class.WTF::String", %"class.blink::Member.1244", i8, [7 x i8], %"class.blink::HeapHashMap.1246", %"class.blink::HeapObserverSet", %"class.blink::Member.1260", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1262", i32, i8, i8, %"class.blink::WeakMember.70", %"class.blink::Member.1264" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.989" }
%"class.blink::HeapHashMap.989" = type { %"class.WTF::HashMap.992" }
%"class.WTF::HashMap.992" = type { %"class.WTF::HashTable.993" }
%"class.WTF::HashTable.993" = type <{ %"struct.WTF::KeyValuePair.995"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.995" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.996" = type { %"class.WTF::VectorBuffer.997" }
%"class.WTF::VectorBuffer.997" = type { %"class.WTF::VectorBufferBase.998" }
%"class.WTF::VectorBufferBase.998" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.999 }
%class.scoped_refptr.999 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.1000", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.1000" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.131" }
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1005" = type { %"class.blink::MemberBase.1006" }
%"class.blink::MemberBase.1006" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1277", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1318", i32, i8, [3 x i8], %"class.blink::HeapVector.1320", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1328", %"class.blink::Member.1330", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1339", %"class.blink::Member.1345", %"class.blink::Member.1347", i8, [7 x i8] }>
%"class.blink::Supplementable.1277" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1278" }
%"class.blink::HeapHashMap.1278" = type { %"class.WTF::HashMap.1281" }
%"class.WTF::HashMap.1281" = type { %"class.WTF::HashTable.1282" }
%"class.WTF::HashTable.1282" = type <{ %"struct.WTF::KeyValuePair.1284"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1284" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1293" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1285" }
%"class.blink::HeapObserverSet.1285" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1286" }
%"class.blink::HeapHashSet.1286" = type { %"class.WTF::HashSet.1289" }
%"class.WTF::HashSet.1289" = type { %"class.WTF::HashTable.1290" }
%"class.WTF::HashTable.1290" = type <{ %"class.blink::WeakMember.1292"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1292" = type opaque
%"class.blink::Supplementable.1293" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1294" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { i8*, %"class.blink::Member.1553" }
%"class.blink::Member.1553" = type { %"class.blink::MemberBase.1554" }
%"class.blink::MemberBase.1554" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1555" }
%"class.blink::Member.1555" = type { %"class.blink::MemberBase.1556" }
%"class.blink::MemberBase.1556" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1301, %"class.std::__1::unique_ptr.1302", %"class.std::__1::unique_ptr.1302", %"class.std::__1::unique_ptr.1308", %"class.std::__1::unique_ptr.1308", %"class.blink::Member.1005", i32, [4 x i8], %"class.WTF::HashSet.1314", i32, i32 }
%class.scoped_refptr.1301 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1302" = type { %"class.std::__1::__compressed_pair.1303" }
%"class.std::__1::__compressed_pair.1303" = type { %"struct.std::__1::__compressed_pair_elem.1304" }
%"struct.std::__1::__compressed_pair_elem.1304" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1308" = type { %"class.std::__1::__compressed_pair.1309" }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.1310" }
%"struct.std::__1::__compressed_pair_elem.1310" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1320" = type { %"class.WTF::Vector.1323" }
%"class.WTF::Vector.1323" = type { %"class.WTF::VectorBuffer.1324" }
%"class.WTF::VectorBuffer.1324" = type { %"class.WTF::VectorBufferBase.1325" }
%"class.WTF::VectorBufferBase.1325" = type { %"class.blink::Member.1326"*, i32, i32 }
%"class.blink::Member.1326" = type opaque
%"class.blink::Member.1328" = type { %"class.blink::MemberBase.1329" }
%"class.blink::MemberBase.1329" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1330" = type { %"class.blink::MemberBase.1331" }
%"class.blink::MemberBase.1331" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1332", i32, i32 }
%"class.blink::HeapHashMap.1332" = type { %"class.WTF::HashMap.1335" }
%"class.WTF::HashMap.1335" = type { %"class.WTF::HashTable.1336" }
%"class.WTF::HashTable.1336" = type <{ %"struct.WTF::KeyValuePair.1338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1338" = type opaque
%"class.std::__1::unique_ptr.1339" = type { %"class.std::__1::__compressed_pair.1340" }
%"class.std::__1::__compressed_pair.1340" = type { %"struct.std::__1::__compressed_pair_elem.1341" }
%"struct.std::__1::__compressed_pair_elem.1341" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1345" = type { %"class.blink::MemberBase.1346" }
%"class.blink::MemberBase.1346" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1347" = type { %"class.blink::MemberBase.1348" }
%"class.blink::MemberBase.1348" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1007" = type { %"class.blink::MemberBase.1008" }
%"class.blink::MemberBase.1008" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1009" = type { %"class.blink::MemberBase.1010" }
%"class.blink::MemberBase.1010" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1011" = type { %"class.blink::MemberBase.1012" }
%"class.blink::MemberBase.1012" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1013" = type { %"class.blink::MemberBase.1014" }
%"class.blink::MemberBase.1014" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1015" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1015" = type { %"class.std::__1::__compressed_pair.1016" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.1017" }
%"struct.std::__1::__compressed_pair_elem.1017" = type { %"class.blink::KURL"* }
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1029" = type { %"class.blink::MemberBase.1030" }
%"class.blink::MemberBase.1030" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.487", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.489, %"class.WTF::Vector.490", %"class.WTF::Vector.490", %"class.blink::Member.82", %"class.blink::Member.495", %"class.blink::HeapHashSet.499", %"class.blink::Member.6", %"class.WTF::HashSet.506", %"class.WTF::TextPosition", %"class.blink::Member.510", %"class.blink::HeapVector.512", %"class.blink::Member.519" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.489 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.490" = type { %"class.WTF::VectorBuffer.491" }
%"class.WTF::VectorBuffer.491" = type { %"class.WTF::VectorBufferBase.492" }
%"class.WTF::VectorBufferBase.492" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.497" }
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.499" = type { %"class.WTF::HashSet.502" }
%"class.WTF::HashSet.502" = type { %"class.WTF::HashTable.503" }
%"class.WTF::HashTable.503" = type <{ %"class.blink::WeakMember.505"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.505" = type { %"class.blink::MemberBase.421" }
%"class.WTF::HashSet.506" = type { %"class.WTF::HashTable.507" }
%"class.WTF::HashTable.507" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.512" = type { %"class.WTF::Vector.515" }
%"class.WTF::Vector.515" = type { %"class.WTF::VectorBuffer.516" }
%"class.WTF::VectorBuffer.516" = type { %"class.WTF::VectorBufferBase.517" }
%"class.WTF::VectorBufferBase.517" = type { %"class.blink::Member.495"*, i32, i32 }
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1031 }
%class.scoped_refptr.1031 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1032" = type { %"class.WTF::VectorBuffer.1033" }
%"class.WTF::VectorBuffer.1033" = type { %"class.WTF::VectorBufferBase.1034" }
%"class.WTF::VectorBufferBase.1034" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1035 }
%class.scoped_refptr.1035 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1036", i32, i32, %"class.blink::Persistent.1038" }
%"class.WTF::RefCounted.1036" = type { %"class.base::RefCounted.1037" }
%"class.base::RefCounted.1037" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1038" = type { %"class.blink::PersistentBase.1039" }
%"class.blink::PersistentBase.1039" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.368" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1042" }
%"class.blink::HeapHashMap.1042" = type { %"class.WTF::HashMap.1045" }
%"class.WTF::HashMap.1045" = type { %"class.WTF::HashTable.1046" }
%"class.WTF::HashTable.1046" = type <{ %"struct.WTF::KeyValuePair.1048"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1048" = type { %"class.blink::WeakMember.1049", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.368" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.6", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.82", %"class.blink::Member.82", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1058" }
%"class.blink::HeapHashMap.1058" = type { %"class.WTF::HashMap.1061" }
%"class.WTF::HashMap.1061" = type { %"class.WTF::HashTable.1062" }
%"class.WTF::HashTable.1062" = type <{ %"struct.WTF::KeyValuePair.1064"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1064" = type opaque
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1067" = type { %"class.WTF::HashSet.1070" }
%"class.WTF::HashSet.1070" = type { %"class.WTF::HashTable.1071" }
%"class.WTF::HashTable.1071" = type <{ %"class.blink::WeakMember.1073"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1073" = type opaque
%"class.blink::HeapHashSet.1074" = type { %"class.WTF::HashSet.1077" }
%"class.WTF::HashSet.1077" = type { %"class.WTF::HashTable.1078" }
%"class.WTF::HashTable.1078" = type <{ %"class.blink::WeakMember.1080"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1080" = type opaque
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1085" = type { %"class.blink::MemberBase.1086" }
%"class.blink::MemberBase.1086" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.420", %"class.blink::HeapVector.479" }
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1091" = type { %"class.WTF::HashMap.1094" }
%"class.WTF::HashMap.1094" = type { %"class.WTF::HashTable.1095" }
%"class.WTF::HashTable.1095" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type opaque
%"class.WTF::Vector.1098" = type { %"class.WTF::VectorBuffer.1099" }
%"class.WTF::VectorBuffer.1099" = type { %"class.WTF::VectorBufferBase.1100" }
%"class.WTF::VectorBufferBase.1100" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1105" = type { %"class.blink::MemberBase.1106" }
%"class.blink::MemberBase.1106" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.446" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.450", %"class.blink::Member.452", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.450" = type { %"class.WTF::SingleThreadedBitField.451" }
%"class.WTF::SingleThreadedBitField.451" = type { i32 }
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.454 }
%class.scoped_refptr.454 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.455", %"class.WTF::AtomicString", %"class.WTF::Vector.457" }
%"class.WTF::RefCounted.455" = type { %"class.base::RefCounted.456" }
%"class.base::RefCounted.456" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.457" = type { %"class.WTF::VectorBuffer.458" }
%"class.WTF::VectorBuffer.458" = type { %"class.WTF::VectorBufferBase.388", [32 x i8] }
%"class.WTF::VectorBufferBase.388" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1107" = type { %"class.blink::MemberBase.1108" }
%"class.blink::MemberBase.1108" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1109" = type { %"class.WTF::Vector.1112" }
%"class.WTF::Vector.1112" = type { %"class.WTF::VectorBuffer.1113" }
%"class.WTF::VectorBuffer.1113" = type { %"class.WTF::VectorBufferBase.1114" }
%"class.WTF::VectorBufferBase.1114" = type { %"class.blink::Member.1115"*, i32, i32 }
%"class.blink::Member.1115" = type opaque
%"class.std::__1::unique_ptr.1117" = type { %"class.std::__1::__compressed_pair.1118" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.1119" }
%"struct.std::__1::__compressed_pair_elem.1119" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1123" = type { %"class.WTF::HashSet.1126" }
%"class.WTF::HashSet.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"class.blink::WeakMember.1129"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1129" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1130", i32, [4 x i8] }>
%"class.WTF::Vector.1130" = type { %"class.WTF::VectorBuffer.1131" }
%"class.WTF::VectorBuffer.1131" = type { %"class.WTF::VectorBufferBase.1132" }
%"class.WTF::VectorBufferBase.1132" = type { %"struct.std::__1::pair.1133"*, i32, i32 }
%"struct.std::__1::pair.1133" = type opaque
%"class.blink::Member.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1138" = type { %"class.WTF::VectorBuffer.1139" }
%"class.WTF::VectorBuffer.1139" = type { %"class.WTF::VectorBufferBase.1140" }
%"class.WTF::VectorBufferBase.1140" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.461" = type { %"class.WTF::Vector.464" }
%"class.WTF::Vector.464" = type { %"class.WTF::VectorBuffer.465" }
%"class.WTF::VectorBuffer.465" = type { %"class.WTF::VectorBufferBase.466" }
%"class.WTF::VectorBufferBase.466" = type { %"class.blink::Member.441"*, i32, i32 }
%"class.blink::HeapVector.1149" = type { %"class.WTF::Vector.1152" }
%"class.WTF::Vector.1152" = type { %"class.WTF::VectorBuffer.1153" }
%"class.WTF::VectorBuffer.1153" = type { %"class.WTF::VectorBufferBase.1154" }
%"class.WTF::VectorBufferBase.1154" = type { %"class.blink::Member.1155"*, i32, i32 }
%"class.blink::Member.1155" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.6" }
%"class.blink::Member.1157" = type { %"class.blink::MemberBase.1158" }
%"class.blink::MemberBase.1158" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1159" = type { %"class.blink::MemberBase.1160" }
%"class.blink::MemberBase.1160" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1161" = type { %"class.blink::MemberBase.1162" }
%"class.blink::MemberBase.1162" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1163" = type { %"class.blink::MemberBase.1164" }
%"class.blink::MemberBase.1164" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1165" = type { %"class.blink::MemberBase.1166" }
%"class.blink::MemberBase.1166" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1167" = type { %"class.WTF::HashTable.1168" }
%"class.WTF::HashTable.1168" = type <{ %"struct.WTF::KeyValuePair.1171"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1171" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.55", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1053, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1053 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1054" }>
%"class.base::RefCountedThreadSafe.1054" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1055 }
%class.scoped_refptr.1055 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.136" }
%"struct.std::__1::atomic.136" = type { %"struct.std::__1::__atomic_base.137" }
%"struct.std::__1::__atomic_base.137" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__cxx_atomic_impl.139" }
%"struct.std::__1::__cxx_atomic_impl.139" = type { %"struct.std::__1::__cxx_atomic_base_impl.140" }
%"struct.std::__1::__cxx_atomic_base_impl.140" = type { i8 }
%"class.blink::WeakMember.55" = type { %"class.blink::MemberBase.7" }
%"class.blink::HeapHashSet.1180" = type { %"class.WTF::HashSet.1183" }
%"class.WTF::HashSet.1183" = type { %"class.WTF::HashTable.1184" }
%"class.WTF::HashTable.1184" = type <{ %"class.blink::Member.1186"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1186" = type opaque
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1188" }
%"class.blink::MemberBase.1188" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1193" = type { %"class.blink::MemberBase.1194" }
%"class.blink::MemberBase.1194" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1195" = type { %"class.blink::MemberBase.1196" }
%"class.blink::MemberBase.1196" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1197" = type { %"class.std::__1::__compressed_pair.1198" }
%"class.std::__1::__compressed_pair.1198" = type { %"struct.std::__1::__compressed_pair_elem.1199" }
%"struct.std::__1::__compressed_pair_elem.1199" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1203" = type { %"class.std::__1::__compressed_pair.1204" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.1205" }
%"struct.std::__1::__compressed_pair_elem.1205" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.506", %"class.WTF::HashSet.506", %"class.WTF::HashSet.506", %"class.WTF::HashSet.506", %"class.WTF::HashSet.506", %"class.WTF::HashSet.506", i32, [4 x i8], %"class.WTF::HashMap.1206", %"class.WTF::HashMap.1206", %"class.WTF::HashMap.1206", %"class.WTF::HashMap.1206", %"class.WTF::HashMap.1206", %"class.WTF::HashMap.1206", %"class.WTF::HashMap.1206", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1206" = type { %"class.WTF::HashTable.1207" }
%"class.WTF::HashTable.1207" = type <{ %"struct.WTF::KeyValuePair.1210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1210" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1214" = type { %"class.blink::MemberBase.1215" }
%"class.blink::MemberBase.1215" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1216" = type { %"class.blink::MemberBase.1217" }
%"class.blink::MemberBase.1217" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1218" = type { %"class.blink::MemberBase.1219" }
%"class.blink::MemberBase.1219" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1220" = type { %"class.blink::MemberBase.1221" }
%"class.blink::MemberBase.1221" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1222" = type { %"class.WTF::VectorBuffer.1223" }
%"class.WTF::VectorBuffer.1223" = type { %"class.WTF::VectorBufferBase.1224" }
%"class.WTF::VectorBufferBase.1224" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1227" = type { %"class.WTF::HashMap.1230" }
%"class.WTF::HashMap.1230" = type { %"class.WTF::HashTable.1231" }
%"class.WTF::HashTable.1231" = type <{ %"struct.WTF::KeyValuePair.1233"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1233" = type opaque
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1236" = type { %"class.std::__1::__compressed_pair.1237" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.1238" }
%"struct.std::__1::__compressed_pair_elem.1238" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1244" = type { %"class.blink::MemberBase.1245" }
%"class.blink::MemberBase.1245" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1246" = type { %"class.WTF::HashMap.1249" }
%"class.WTF::HashMap.1249" = type { %"class.WTF::HashTable.1250" }
%"class.WTF::HashTable.1250" = type <{ %"struct.WTF::KeyValuePair.1252"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1252" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1253" }
%"class.blink::HeapHashSet.1253" = type { %"class.WTF::HashSet.1256" }
%"class.WTF::HashSet.1256" = type { %"class.WTF::HashTable.1257" }
%"class.WTF::HashTable.1257" = type <{ %"class.blink::WeakMember.1259"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1259" = type opaque
%"class.blink::Member.1260" = type { %"class.blink::MemberBase.1261" }
%"class.blink::MemberBase.1261" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1262" = type { %"class.blink::MemberBase.1263" }
%"class.blink::MemberBase.1263" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.6", %"class.blink::HeapHashSet.1268", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1275", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1268" = type { %"class.WTF::HashSet.1271" }
%"class.WTF::HashSet.1271" = type { %"class.WTF::HashTable.1272" }
%"class.WTF::HashTable.1272" = type <{ %"class.blink::Member.1274"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1274" = type opaque
%"class.blink::HeapTaskRunnerTimer.1275" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1276", { i64, i64 } }
%"class.blink::WeakMember.1276" = type { %"class.blink::MemberBase.1263" }
%"class.blink::WeakMember.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::Member.1264" = type { %"class.blink::MemberBase.1265" }
%"class.blink::MemberBase.1265" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.430" }
%"class.blink::HeapHashMap.430" = type { %"class.WTF::HashMap.433" }
%"class.WTF::HashMap.433" = type { %"class.WTF::HashTable.434" }
%"class.WTF::HashTable.434" = type <{ %"struct.WTF::KeyValuePair.436"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.436" = type { %"class.WTF::AtomicString", %"class.blink::Member.437" }
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.441", i32, %"class.blink::HeapVector.461" }
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.474" }
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::HeapHashMap.476"* }
%"class.blink::HeapHashMap.476" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.479" = type { %"class.WTF::Vector.482" }
%"class.WTF::Vector.482" = type { %"class.WTF::VectorBuffer.483" }
%"class.WTF::VectorBuffer.483" = type { %"class.WTF::VectorBufferBase.484" }
%"class.WTF::VectorBufferBase.484" = type { %"class.blink::Member.485"*, i32, i32 }
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.812", %"class.std::__1::unique_ptr.814" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.337", %"class.blink::DataRef.524", %"class.blink::DataRef.528", %"class.blink::DataRef.728", %"class.blink::DataRef.795", %"class.blink::DataRef.799", %"class.blink::DataRef.803", %"class.blink::DataRef.807", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.83 }
%class.scoped_refptr.83 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.84", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.84" = type { %class.scoped_refptr.85 }
%class.scoped_refptr.85 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.86", %"class.blink::Font" }
%"class.WTF::RefCounted.86" = type { %"class.base::RefCounted.87" }
%"class.base::RefCounted.87" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.119 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.91, %class.scoped_refptr.99, %class.scoped_refptr.109, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.118 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.90 }
%class.scoped_refptr.90 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.987", [4 x i8] }>
%"class.WTF::RefCounted.987" = type { %"class.base::RefCounted.988" }
%"class.base::RefCounted.988" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.91 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.97", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.92" }
%"class.WTF::Vector.92" = type { %"class.WTF::VectorBuffer.93" }
%"class.WTF::VectorBuffer.93" = type { %"class.WTF::VectorBufferBase.94" }
%"class.WTF::VectorBufferBase.94" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.97" = type { %"class.base::RefCounted.98" }
%"class.base::RefCounted.98" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.99 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.100", %"class.WTF::RefCounted.107", [4 x i8] }>
%"class.blink::FontSettings.100" = type { %"class.WTF::Vector.101" }
%"class.WTF::Vector.101" = type { %"class.WTF::VectorBuffer.102" }
%"class.WTF::VectorBuffer.102" = type { %"class.WTF::VectorBufferBase.103" }
%"class.WTF::VectorBufferBase.103" = type { %"class.blink::FontTagValuePair.104"*, i32, i32 }
%"class.blink::FontTagValuePair.104" = type { i32, float }
%"class.WTF::RefCounted.107" = type { %"class.base::RefCounted.108" }
%"class.base::RefCounted.108" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.109 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.110", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.115, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.110" = type { %"class.base::RefCounted.111" }
%"class.base::RefCounted.111" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.115 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.116", [4 x i8] }>
%"class.WTF::RefCounted.116" = type { %"class.base::RefCounted.117" }
%"class.base::RefCounted.117" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.118 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.119 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.120", %"class.WTF::Vector.122", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.120" = type { %"class.base::RefCounted.121" }
%"class.base::RefCounted.121" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.122" = type { %"class.WTF::VectorBuffer.123" }
%"class.WTF::VectorBuffer.123" = type { %"class.WTF::VectorBufferBase.124", [8 x i8] }
%"class.WTF::VectorBufferBase.124" = type { %class.scoped_refptr.125*, i32, i32 }
%class.scoped_refptr.125 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.126", [4 x i8] }>
%"class.WTF::RefCounted.126" = type { %"class.base::RefCounted.127" }
%"class.base::RefCounted.127" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.142", %class.scoped_refptr.149, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.126" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.130 }
%union.anon.130 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.141, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.131" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.131" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.136" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.141 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.145, %class.scoped_refptr.145 }
%class.scoped_refptr.145 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.149 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.150", [4 x i8] }>
%"class.WTF::RefCounted.150" = type { %"class.base::RefCounted.151" }
%"class.base::RefCounted.151" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.335 }
%class.scoped_refptr.335 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.336, i8, i8, i8, i8 }>
%union.anon.336 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.337" = type { %class.scoped_refptr.338 }
%class.scoped_refptr.338 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.339", [4 x i8], %"class.blink::DataRef.341", %"class.blink::DataRef.382", %"class.WTF::Vector.386", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.391, %class.scoped_refptr.400, %"class.blink::Persistent.408", %"class.blink::Persistent.410", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.339" = type { %"class.base::RefCounted.340" }
%"class.base::RefCounted.340" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.341" = type { %class.scoped_refptr.342 }
%class.scoped_refptr.342 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.343", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.345, %class.scoped_refptr.352, %"class.blink::Persistent.369", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.343" = type { %"class.base::RefCounted.344" }
%"class.base::RefCounted.344" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.345 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.346", %"class.WTF::Vector.347" }
%"class.base::RefCountedThreadSafe.346" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.347" = type { %"class.WTF::VectorBuffer.348" }
%"class.WTF::VectorBuffer.348" = type { %"class.WTF::VectorBufferBase.349" }
%"class.WTF::VectorBufferBase.349" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.352 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.353", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.353" = type { %"class.base::RefCounted.354" }
%"class.base::RefCounted.354" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.355", %"class.blink::Persistent" }
%"class.WTF::HashMap.355" = type { %"class.WTF::HashTable.356" }
%"class.WTF::HashTable.356" = type <{ %"struct.WTF::KeyValuePair.359"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.359" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1567 }
%class.scoped_refptr.1567 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1568", %"class.WTF::Vector.711", %"class.WTF::Vector.1570", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1568" = type { %"class.base::RefCounted.1569" }
%"class.base::RefCounted.1569" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.711" = type { %"class.WTF::VectorBuffer.712" }
%"class.WTF::VectorBuffer.712" = type { %"class.WTF::VectorBufferBase.713" }
%"class.WTF::VectorBufferBase.713" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1570" = type { %"class.WTF::VectorBuffer.1571" }
%"class.WTF::VectorBuffer.1571" = type { %"class.WTF::VectorBufferBase.1572" }
%"class.WTF::VectorBufferBase.1572" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1573 }
%union.anon.1573 = type { double }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.360" }
%"class.blink::PersistentBase.360" = type { %"class.blink::HeapHashMap.361"*, %"class.blink::PersistentNodePtr.368" }
%"class.blink::HeapHashMap.361" = type { %"class.WTF::HashMap.364" }
%"class.WTF::HashMap.364" = type { %"class.WTF::HashTable.365" }
%"class.WTF::HashTable.365" = type <{ %"struct.WTF::KeyValuePair.367"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.367" = type opaque
%"class.blink::Persistent.369" = type { %"class.blink::PersistentBase.370" }
%"class.blink::PersistentBase.370" = type { %"class.blink::HeapVector.371"*, %"class.blink::PersistentNodePtr.368" }
%"class.blink::HeapVector.371" = type { %"class.WTF::Vector.374" }
%"class.WTF::Vector.374" = type { %"class.WTF::VectorBuffer.375" }
%"class.WTF::VectorBuffer.375" = type { %"class.WTF::VectorBufferBase.376" }
%"class.WTF::VectorBufferBase.376" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.377", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.382" = type { %class.scoped_refptr.383 }
%class.scoped_refptr.383 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.384", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.384" = type { %"class.base::RefCounted.385" }
%"class.base::RefCounted.385" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%class.scoped_refptr.391 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.392", %"class.WTF::Vector.394" }
%"class.WTF::RefCounted.392" = type { %"class.base::RefCounted.393" }
%"class.base::RefCounted.393" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.394" = type { %"class.WTF::VectorBuffer.395" }
%"class.WTF::VectorBuffer.395" = type { %"class.WTF::VectorBufferBase.396" }
%"class.WTF::VectorBufferBase.396" = type { %"struct.std::__1::pair.397"*, i32, i32 }
%"struct.std::__1::pair.397" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.400 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.401", [4 x i8], %"class.WTF::Vector.403" }
%"class.WTF::RefCounted.401" = type { %"class.base::RefCounted.402" }
%"class.base::RefCounted.402" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.403" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.405", [28 x i8] }>
%"class.WTF::VectorBufferBase.405" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.408" = type { %"class.blink::PersistentBase.409" }
%"class.blink::PersistentBase.409" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.368" }
%"class.blink::Persistent.410" = type { %"class.blink::PersistentBase.411" }
%"class.blink::PersistentBase.411" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.368" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.414", %"class.blink::Member.522" }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.524" = type { %class.scoped_refptr.525 }
%class.scoped_refptr.525 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.526", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.526" = type { %"class.base::RefCounted.527" }
%"class.base::RefCounted.527" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.528" = type { %class.scoped_refptr.529 }
%class.scoped_refptr.529 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.530", [4 x i8], %"class.blink::DataRef.532", %"class.blink::DataRef.598", %"class.blink::TransformOperations", %class.scoped_refptr.400, %"class.blink::Persistent.722", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.530" = type { %"class.base::RefCounted.531" }
%"class.base::RefCounted.531" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.532" = type { %class.scoped_refptr.533 }
%class.scoped_refptr.533 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.534", [4 x i8], %"class.blink::DataRef.536", %"class.blink::Persistent.574", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.534" = type { %"class.base::RefCounted.535" }
%"class.base::RefCounted.535" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.536" = type { %class.scoped_refptr.537 }
%class.scoped_refptr.537 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.538", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.556, %class.scoped_refptr.559, %class.scoped_refptr.562, %class.scoped_refptr.565, %class.scoped_refptr.566, %class.scoped_refptr.567, %"class.blink::Persistent.574", %"class.blink::Persistent.589", %"class.absl::optional.593", %"class.absl::optional.593", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.538" = type { %"class.base::RefCounted.539" }
%"class.base::RefCounted.539" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.540", %"class.std::__1::unique_ptr.545" }
%"class.WTF::Vector.540" = type { %"class.WTF::VectorBuffer.541" }
%"class.WTF::VectorBuffer.541" = type { %"class.WTF::VectorBufferBase.542" }
%"class.WTF::VectorBufferBase.542" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.548", %"class.WTF::Vector.540", i32, i32 }
%"class.WTF::Vector.548" = type { %"class.WTF::VectorBuffer.549" }
%"class.WTF::VectorBuffer.549" = type { %"class.WTF::VectorBufferBase.550" }
%"class.WTF::VectorBufferBase.550" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.556 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.557", [4 x i8] }>
%"class.WTF::RefCounted.557" = type { %"class.base::RefCounted.558" }
%"class.base::RefCounted.558" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.559 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.560", [4 x i8] }>
%"class.WTF::RefCounted.560" = type { %"class.base::RefCounted.561" }
%"class.base::RefCounted.561" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.562 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.563" }>
%"class.WTF::RefCounted.563" = type { %"class.base::RefCounted.564" }
%"class.base::RefCounted.564" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.565 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.566 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.567 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.568", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.568" = type { %"class.base::RefCounted.569" }
%"class.base::RefCounted.569" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.570" }
%"class.blink::DataRef.570" = type { %class.scoped_refptr.571 }
%class.scoped_refptr.571 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.408", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.572" }
%"class.WTF::RefCounted.572" = type { %"class.base::RefCounted.573" }
%"class.base::RefCounted.573" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.589" = type { %"class.blink::PersistentBase.590" }
%"class.blink::PersistentBase.590" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.368" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.559, %"class.blink::Member.377", i32, [4 x i8] }>
%"class.absl::optional.593" = type { %"class.absl::optional_internal::optional_data.594" }
%"class.absl::optional_internal::optional_data.594" = type { %"class.absl::optional_internal::optional_data_base.595" }
%"class.absl::optional_internal::optional_data_base.595" = type { %"class.absl::optional_internal::optional_data_dtor_base.596" }
%"class.absl::optional_internal::optional_data_dtor_base.596" = type { i8, [3 x i8], %union.anon.597 }
%union.anon.597 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.574" = type { %"class.blink::PersistentBase.575" }
%"class.blink::PersistentBase.575" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.368" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.578" }
%"class.blink::HeapVector.578" = type { %"class.WTF::Vector.581" }
%"class.WTF::Vector.581" = type { %"class.WTF::VectorBuffer.582" }
%"class.WTF::VectorBuffer.582" = type { %"class.WTF::VectorBufferBase.583" }
%"class.WTF::VectorBufferBase.583" = type { %"class.blink::Member.584"*, i32, i32 }
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.598" = type { %class.scoped_refptr.599 }
%class.scoped_refptr.599 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.600", %"class.blink::DataRef.602", %"class.blink::DataRef.606", %"class.blink::DataRef.615", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.634", %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.683", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.705", %"class.WTF::Vector.711", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.600" = type { %"class.base::RefCounted.601" }
%"class.base::RefCounted.601" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.602" = type { %class.scoped_refptr.603 }
%class.scoped_refptr.603 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.604", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.604" = type { %"class.base::RefCounted.605" }
%"class.base::RefCounted.605" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.606" = type { %class.scoped_refptr.607 }
%class.scoped_refptr.607 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.608", [4 x i8], %"class.WTF::Vector.610", i8, [7 x i8] }>
%"class.WTF::RefCounted.608" = type { %"class.base::RefCounted.609" }
%"class.base::RefCounted.609" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.610" = type { %"class.WTF::VectorBuffer.611" }
%"class.WTF::VectorBuffer.611" = type { %"class.WTF::VectorBufferBase.612" }
%"class.WTF::VectorBufferBase.612" = type { i32*, i32, i32 }
%"class.blink::DataRef.615" = type { %class.scoped_refptr.616 }
%class.scoped_refptr.616 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.617", [4 x i8], %"class.WTF::HashMap.619", %"class.WTF::HashMap.619", %"class.WTF::HashMap.619", %"class.WTF::HashMap.619", %"class.WTF::HashMap.619", %"class.WTF::HashMap.619", %"class.WTF::HashMap.624", %"class.WTF::HashMap.624", %"class.WTF::HashMap.624", %"class.WTF::HashMap.624", %"class.WTF::HashMap.629", %"class.WTF::Vector.540", %"class.WTF::Vector.540", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.617" = type { %"class.base::RefCounted.618" }
%"class.base::RefCounted.618" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.619" = type { %"class.WTF::HashTable.620" }
%"class.WTF::HashTable.620" = type <{ %"struct.WTF::KeyValuePair.623"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.623" = type { %"class.WTF::String", %"class.WTF::Vector.1557" }
%"class.WTF::Vector.1557" = type { %"class.WTF::VectorBuffer.1558" }
%"class.WTF::VectorBuffer.1558" = type { %"class.WTF::VectorBufferBase.1559" }
%"class.WTF::VectorBufferBase.1559" = type { i64*, i32, i32 }
%"class.WTF::HashMap.624" = type { %"class.WTF::HashTable.625" }
%"class.WTF::HashTable.625" = type <{ %"struct.WTF::KeyValuePair.628"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.628" = type { i64, %"class.WTF::Vector.711" }
%"class.WTF::HashMap.629" = type { %"class.WTF::HashTable.630" }
%"class.WTF::HashTable.630" = type <{ %"struct.WTF::KeyValuePair.633"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.633" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.634" = type { %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.637" }
%"class.WTF::HashMap.637" = type { %"class.WTF::HashTable.638" }
%"class.WTF::HashTable.638" = type <{ %"struct.WTF::KeyValuePair.641"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.641" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1562", %"class.absl::optional.1562", %"class.absl::optional.1562" }
%"class.absl::optional.1562" = type { %"class.absl::optional_internal::optional_data.1563" }
%"class.absl::optional_internal::optional_data.1563" = type { %"class.absl::optional_internal::optional_data_base.1564" }
%"class.absl::optional_internal::optional_data_base.1564" = type { %"class.absl::optional_internal::optional_data_dtor_base.1565" }
%"class.absl::optional_internal::optional_data_dtor_base.1565" = type { i8, %union.anon.1566 }
%union.anon.1566 = type { i32 }
%"class.std::__1::unique_ptr.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.386", %"class.WTF::Vector.660", %"class.WTF::Vector.648", %"class.WTF::Vector.665", %"class.WTF::Vector.670", %"class.WTF::Vector.675" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.648", %"class.WTF::Vector.648", %"class.WTF::Vector.653" }
%"class.WTF::Vector.653" = type { %"class.WTF::VectorBuffer.654" }
%"class.WTF::VectorBuffer.654" = type { %"class.WTF::VectorBufferBase.655" }
%"class.WTF::VectorBufferBase.655" = type { %class.scoped_refptr.656*, i32, i32 }
%class.scoped_refptr.656 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.657" }
%"class.base::RefCountedThreadSafe.657" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.660" = type { %"class.WTF::VectorBuffer.661" }
%"class.WTF::VectorBuffer.661" = type { %"class.WTF::VectorBufferBase.662" }
%"class.WTF::VectorBufferBase.662" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.648" = type { %"class.WTF::VectorBuffer.649" }
%"class.WTF::VectorBuffer.649" = type { %"class.WTF::VectorBufferBase.650" }
%"class.WTF::VectorBufferBase.650" = type { double*, i32, i32 }
%"class.WTF::Vector.665" = type { %"class.WTF::VectorBuffer.666" }
%"class.WTF::VectorBuffer.666" = type { %"class.WTF::VectorBufferBase.667" }
%"class.WTF::VectorBufferBase.667" = type { i32*, i32, i32 }
%"class.WTF::Vector.670" = type { %"class.WTF::VectorBuffer.671" }
%"class.WTF::VectorBuffer.671" = type { %"class.WTF::VectorBufferBase.672" }
%"class.WTF::VectorBufferBase.672" = type { i32*, i32, i32 }
%"class.WTF::Vector.675" = type { %"class.WTF::VectorBuffer.676" }
%"class.WTF::VectorBuffer.676" = type { %"class.WTF::VectorBufferBase.677" }
%"class.WTF::VectorBufferBase.677" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.683" = type { %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.686" }
%"class.WTF::Vector.686" = type { %"class.WTF::VectorBuffer.687" }
%"class.WTF::VectorBuffer.687" = type { %"class.WTF::VectorBufferBase.688" }
%"class.WTF::VectorBufferBase.688" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.697" }
%"class.WTF::Vector.697" = type { %"class.WTF::VectorBuffer.698" }
%"class.WTF::VectorBuffer.698" = type { %"class.WTF::VectorBufferBase.699" }
%"class.WTF::VectorBufferBase.699" = type { %"class.blink::Persistent.408"*, i32, i32 }
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.408", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.716" }
%"class.WTF::Vector.716" = type { %"class.WTF::VectorBuffer.717" }
%"class.WTF::VectorBuffer.717" = type { %"class.WTF::VectorBufferBase.718" }
%"class.WTF::VectorBufferBase.718" = type { %class.scoped_refptr.719*, i32, i32 }
%class.scoped_refptr.719 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.563", [4 x i8] }>
%"class.blink::Persistent.722" = type { %"class.blink::PersistentBase.723" }
%"class.blink::PersistentBase.723" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.368" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.726" }
%"class.blink::Member.726" = type { %"class.blink::MemberBase.727" }
%"class.blink::MemberBase.727" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.728" = type { %class.scoped_refptr.729 }
%class.scoped_refptr.729 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.730", [4 x i8], %"class.blink::DataRef.732", %"class.blink::DataRef.736", %"class.blink::DataRef.757", %"class.blink::DataRef.775", %"class.blink::DataRef.787", %"class.blink::DataRef.791", %class.scoped_refptr.761, i32, [4 x i8] }>
%"class.WTF::RefCounted.730" = type { %"class.base::RefCounted.731" }
%"class.base::RefCounted.731" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.732" = type { %class.scoped_refptr.733 }
%class.scoped_refptr.733 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.734", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.734" = type { %"class.base::RefCounted.735" }
%"class.base::RefCounted.735" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.736" = type { %class.scoped_refptr.737 }
%class.scoped_refptr.737 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.738", %class.scoped_refptr.740, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.738" = type { %"class.base::RefCounted.739" }
%"class.base::RefCounted.739" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.740 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.741", %"class.std::__1::unique_ptr.747", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.560" }>
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.750, i32, %"struct.std::__1::atomic.136", %"struct.std::__1::atomic.136", i8, i8 }>
%class.sk_sp.750 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.751, %class.SkTDArray.752, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.131" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.751 = type { i8*, i32, i32 }
%class.SkTDArray.752 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.753 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.131", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.753 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.331", [3 x i8] }
%"class.blink::DataRef.757" = type { %class.scoped_refptr.758 }
%class.scoped_refptr.758 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.759", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.759" = type { %"class.base::RefCounted.760" }
%"class.base::RefCounted.760" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.761, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.775" = type { %class.scoped_refptr.776 }
%class.scoped_refptr.776 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.777", [4 x i8], %class.scoped_refptr.779, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.777" = type { %"class.base::RefCounted.778" }
%"class.base::RefCounted.778" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.779 = type { %"class.base::RefCountedData.780"* }
%"class.base::RefCountedData.780" = type { %"class.base::RefCountedThreadSafe.781", %"class.WTF::Vector.782" }
%"class.base::RefCountedThreadSafe.781" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.782" = type { %"class.WTF::VectorBuffer.783" }
%"class.WTF::VectorBuffer.783" = type { %"class.WTF::VectorBufferBase.784" }
%"class.WTF::VectorBufferBase.784" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.787" = type { %class.scoped_refptr.788 }
%class.scoped_refptr.788 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.789", %class.scoped_refptr.761, %class.scoped_refptr.761, %class.scoped_refptr.761 }
%"class.WTF::RefCounted.789" = type { %"class.base::RefCounted.790" }
%"class.base::RefCounted.790" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.791" = type { %class.scoped_refptr.792 }
%class.scoped_refptr.792 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.793", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.793" = type { %"class.base::RefCounted.794" }
%"class.base::RefCounted.794" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.761 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.762", %"class.blink::Persistent.764", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.762" = type { %"class.base::RefCounted.763" }
%"class.base::RefCounted.763" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.764" = type { %"class.blink::PersistentBase.765" }
%"class.blink::PersistentBase.765" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.368" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.441", %"class.blink::HeapHashMap.768" }
%"class.blink::HeapHashMap.768" = type { %"class.WTF::HashMap.771" }
%"class.WTF::HashMap.771" = type { %"class.WTF::HashTable.772" }
%"class.WTF::HashTable.772" = type <{ %"struct.WTF::KeyValuePair.774"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.774" = type opaque
%"class.blink::DataRef.795" = type { %class.scoped_refptr.796 }
%class.scoped_refptr.796 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.797", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.797" = type { %"class.base::RefCounted.798" }
%"class.base::RefCounted.798" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.799" = type { %class.scoped_refptr.800 }
%class.scoped_refptr.800 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.801", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.801" = type { %"class.base::RefCounted.802" }
%"class.base::RefCounted.802" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.803" = type { %class.scoped_refptr.804 }
%class.scoped_refptr.804 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.805", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.805" = type { %"class.base::RefCounted.806" }
%"class.base::RefCounted.806" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.807" = type { %class.scoped_refptr.808 }
%class.scoped_refptr.808 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.809", %class.scoped_refptr.811 }
%"class.WTF::RefCounted.809" = type { %"class.base::RefCounted.810" }
%"class.base::RefCounted.810" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.811 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.978", %"class.blink::StyleVariables", %class.scoped_refptr.811 }
%"class.WTF::RefCounted.978" = type { %"class.base::RefCounted.979" }
%"class.base::RefCounted.979" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.812" = type { %"class.base::RefCounted.813" }
%"class.base::RefCounted.813" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.814" = type { %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.WTF::Vector.820"* }
%"class.WTF::Vector.820" = type { %"class.WTF::VectorBuffer.1577" }
%"class.WTF::VectorBuffer.1577" = type { %"class.WTF::VectorBufferBase.1578", [32 x i8] }
%"class.WTF::VectorBufferBase.1578" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.827" }
%"class.blink::MemberBase.827" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.828" }
%"class.std::__1::unique_ptr.828" = type { %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.831", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.837", %"class.std::__1::unique_ptr.958", i8, %"class.absl::optional.964", %class.scoped_refptr.940, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.969" }
%"class.std::__1::unique_ptr.831" = type { %"class.std::__1::__compressed_pair.832" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.837" = type { %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.840, %class.scoped_refptr.840, %class.scoped_refptr.840, %class.scoped_refptr.840, %class.scoped_refptr.840, %class.scoped_refptr.840, %class.scoped_refptr.875, %class.scoped_refptr.889, %class.scoped_refptr.890, %class.scoped_refptr.890, %class.scoped_refptr.890, %class.scoped_refptr.890, %class.scoped_refptr.890, %class.scoped_refptr.890, %class.scoped_refptr.930, %class.scoped_refptr.931, %class.scoped_refptr.931, %class.scoped_refptr.931, %class.scoped_refptr.931, %class.scoped_refptr.931, %class.scoped_refptr.931, %class.scoped_refptr.931, %class.scoped_refptr.931, %class.scoped_refptr.954 }
%class.scoped_refptr.840 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.857" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.841", i8, i8, %class.scoped_refptr.843, i32, i32 }
%"class.WTF::RefCounted.841" = type { %"class.base::RefCounted.842" }
%"class.base::RefCounted.842" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.843 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.850, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.851", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.844" }
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.850 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.876", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.876" = type { %"class.WTF::RefCounted.877", i8, i8, %class.scoped_refptr.850, i32, i32 }
%"class.WTF::RefCounted.877" = type { %"class.base::RefCounted.878" }
%"class.base::RefCounted.878" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.879" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.879" = type { %"class.absl::optional_internal::optional_data.880" }
%"class.absl::optional_internal::optional_data.880" = type { %"class.absl::optional_internal::optional_data_base.881" }
%"class.absl::optional_internal::optional_data_base.881" = type { %"class.absl::optional_internal::optional_data_dtor_base.882" }
%"class.absl::optional_internal::optional_data_dtor_base.882" = type { i8, %union.anon.883 }
%union.anon.883 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.884" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.859" }
%"struct.std::__1::__compressed_pair_elem.859" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.860", %"class.std::__1::unique_ptr.866", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.866" = type { %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.875 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.889 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.890 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.891" }
%"class.blink::PaintPropertyNode.891" = type { %"class.WTF::RefCounted.892", i8, i8, %class.scoped_refptr.894, i32, i32 }
%"class.WTF::RefCounted.892" = type { %"class.base::RefCounted.893" }
%"class.base::RefCounted.893" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.894 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.843, %class.scoped_refptr.895, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.917", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.895 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.932" }
%"class.blink::PaintPropertyNode.932" = type { %"class.WTF::RefCounted.933", i8, i8, %class.scoped_refptr.895, i32, i32 }
%"class.WTF::RefCounted.933" = type { %"class.base::RefCounted.934" }
%"class.base::RefCounted.934" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.896" }
%"class.std::__1::vector.896" = type { %"class.std::__1::__vector_base.897" }
%"class.std::__1::__vector_base.897" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.912" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.898, [20 x float], i32, [4 x i8], %"class.std::__1::vector.905", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.898 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.899, i32, %"class.absl::optional.900", i8, i32 }
%class.sk_sp.899 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.900" = type { %"class.absl::optional_internal::optional_data.901" }
%"class.absl::optional_internal::optional_data.901" = type { %"class.absl::optional_internal::optional_data_base.902" }
%"class.absl::optional_internal::optional_data_base.902" = type { %"class.absl::optional_internal::optional_data_dtor_base.903" }
%"class.absl::optional_internal::optional_data_dtor_base.903" = type { i8, %union.anon.904 }
%union.anon.904 = type { %struct.SkRect }
%"class.std::__1::vector.905" = type { %"class.std::__1::__vector_base.906" }
%"class.std::__1::__vector_base.906" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.907" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.923" }
%"class.std::__1::vector.923" = type { %"class.std::__1::__vector_base.924" }
%"class.std::__1::__vector_base.924" = type { i32*, i32*, %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { i32* }
%class.scoped_refptr.930 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.931 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.943" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.843, %"class.absl::optional.935", %class.scoped_refptr.940, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.935" = type { %"class.absl::optional_internal::optional_data.936" }
%"class.absl::optional_internal::optional_data.936" = type { %"class.absl::optional_internal::optional_data_base.937" }
%"class.absl::optional_internal::optional_data_base.937" = type { %"class.absl::optional_internal::optional_data_dtor_base.938" }
%"class.absl::optional_internal::optional_data_dtor_base.938" = type { i8, [3 x i8], %union.anon.939 }
%union.anon.939 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.943" = type { %"class.std::__1::__compressed_pair.944" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.946", i32, [4 x i8] }>
%"class.WTF::Vector.946" = type { %"class.WTF::VectorBuffer.947" }
%"class.WTF::VectorBuffer.947" = type { %"class.WTF::VectorBufferBase.948" }
%"class.WTF::VectorBufferBase.948" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.954 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.958" = type { %"class.std::__1::__compressed_pair.959" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.843, %class.scoped_refptr.895, %class.scoped_refptr.894 }
%"class.absl::optional.964" = type { %"class.absl::optional_internal::optional_data.965" }
%"class.absl::optional_internal::optional_data.965" = type { %"class.absl::optional_internal::optional_data_base.966" }
%"class.absl::optional_internal::optional_data_base.966" = type { %"class.absl::optional_internal::optional_data_dtor_base.967" }
%"class.absl::optional_internal::optional_data_dtor_base.967" = type { i8, %union.anon.968 }
%union.anon.968 = type { %"class.blink::IntRect" }
%class.scoped_refptr.940 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.941", [4 x i8] }
%"class.WTF::RefCounted.941" = type { %"class.base::RefCounted.942" }
%"class.base::RefCounted.942" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.969" = type { %"class.std::__1::__compressed_pair.970" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.blink::FragmentData"* }
%"class.blink::AXObjectCacheImpl" = type { %"class.blink::AXObjectCacheBase", %"class.blink::mojom::blink::PermissionObserver", %"class.blink::Member.6", %"class.ui::AXMode", [4 x i8], %"class.blink::HeapHashMap", %"class.blink::HeapHashMap.11", %"class.WTF::HashMap.18", %"class.blink::HeapHashMap.22", %"class.WTF::HashMap.29", i32, [4 x i8], %"class.WTF::HashSet", i32, %"class.blink::WeakMember", %"class.std::__1::unique_ptr", %"class.blink::HeapVector.38", i32, %"class.blink::HeapMojoRemote", %"class.blink::HeapMojoReceiver", %"class.blink::HeapHashSet", %"class.blink::HeapVector.56", %"class.blink::HeapHashSet.64", i32, i8, [3 x i8], %"class.WTF::HashMap.72", %"class.WTF::HashSet", %"class.WTF::HashSet", i32, i32, %"class.WTF::HashCountedSet", i8, [7 x i8], %"class.WTF::HashSet" }
%"class.blink::AXObjectCacheBase" = type { %"class.blink::AXObjectCache" }
%"class.blink::mojom::blink::PermissionObserver" = type { i32 (...)** }
%"class.ui::AXMode" = type { i32 }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.blink::Member" }
%"class.blink::HeapHashMap.11" = type { %"class.WTF::HashMap.14" }
%"class.WTF::HashMap.14" = type { %"class.WTF::HashTable.15" }
%"class.WTF::HashTable.15" = type <{ %"struct.WTF::KeyValuePair.17"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.17" = type opaque
%"class.WTF::HashMap.18" = type { %"class.WTF::HashTable.19" }
%"class.WTF::HashTable.19" = type <{ %"struct.WTF::KeyValuePair.21"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.21" = type opaque
%"class.blink::HeapHashMap.22" = type { %"class.WTF::HashMap.25" }
%"class.WTF::HashMap.25" = type { %"class.WTF::HashTable.26" }
%"class.WTF::HashTable.26" = type <{ %"struct.WTF::KeyValuePair.28"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.28" = type opaque
%"class.WTF::HashMap.29" = type { %"class.WTF::HashTable.30" }
%"class.WTF::HashTable.30" = type <{ %"struct.WTF::KeyValuePair.33"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.33" = type opaque
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::AXRelationCache"* }
%"class.blink::AXRelationCache" = type opaque
%"class.blink::HeapVector.38" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::Member.44" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.46" }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::PermissionObserver, blink::AXObjectCacheImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::PermissionObserver, blink::AXObjectCacheImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.52" }
%"class.WTF::HashSet.52" = type { %"class.WTF::HashTable.53" }
%"class.WTF::HashTable.53" = type <{ %"class.blink::WeakMember.55"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.56" = type { %"class.WTF::Vector.59" }
%"class.WTF::Vector.59" = type { %"class.WTF::VectorBuffer.60" }
%"class.WTF::VectorBuffer.60" = type { %"class.WTF::VectorBufferBase.61" }
%"class.WTF::VectorBufferBase.61" = type { %"class.blink::Member.62"*, i32, i32 }
%"class.blink::Member.62" = type opaque
%"class.blink::HeapHashSet.64" = type { %"class.WTF::HashSet.67" }
%"class.WTF::HashSet.67" = type { %"class.WTF::HashTable.68" }
%"class.WTF::HashTable.68" = type <{ %"class.blink::WeakMember.70"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.72" = type { %"class.WTF::HashTable.73" }
%"class.WTF::HashTable.73" = type <{ %"struct.WTF::KeyValuePair.76"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.76" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.77" }
%"class.WTF::HashMap.77" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"struct.WTF::KeyValuePair.81"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.81" = type { %"class.blink::BlinkAXEventIntent", i32, [4 x i8] }
%"class.blink::BlinkAXEventIntent" = type <{ i32 (...)**, %"struct.ui::AXEventIntent", i8, i8, [6 x i8] }>
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.34" }
%"class.WTF::HashTable.34" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::HTMLOptionElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.1349", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.1349" = type { %"class.blink::MemberBase.1350" }
%"class.blink::MemberBase.1350" = type { %"class.blink::OptionTextObserver"* }
%"class.blink::OptionTextObserver" = type opaque
%"class.blink::HTMLSelectElement" = type <{ %"class.blink::HTMLFormControlElementWithState.base", [2 x i8], %"class.blink::TypeAheadDataSource", %"class.blink::HeapVector.1357", %"class.blink::TypeAhead", i32, [4 x i8], %"class.blink::Member.1381", %"class.blink::Member.1381", i8, i8, i8, i8, [4 x i8], %"class.blink::Member.1383", i32, [4 x i8] }>
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.1351", %"class.blink::Member.1353", %"class.blink::Member.1355", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.1351" = type { %"class.blink::MemberBase.1352" }
%"class.blink::MemberBase.1352" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.1353" = type { %"class.blink::MemberBase.1354" }
%"class.blink::MemberBase.1354" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.1355" = type { %"class.blink::MemberBase.1356" }
%"class.blink::MemberBase.1356" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.88 }
%"class.blink::TypeAheadDataSource" = type { i32 (...)** }
%"class.blink::HeapVector.1357" = type { %"class.WTF::Vector.1360" }
%"class.WTF::Vector.1360" = type { %"class.WTF::VectorBuffer.1361" }
%"class.WTF::VectorBuffer.1361" = type { %"class.WTF::VectorBufferBase.1362" }
%"class.WTF::VectorBufferBase.1362" = type { %"class.blink::Member.1363"*, i32, i32 }
%"class.blink::Member.1363" = type opaque
%"class.blink::TypeAhead" = type { %"class.blink::TypeAheadDataSource"*, %"class.absl::optional.1365", i16, [6 x i8], %"class.WTF::StringBuilder" }
%"class.absl::optional.1365" = type { %"class.absl::optional_internal::optional_data.1366" }
%"class.absl::optional_internal::optional_data.1366" = type { %"class.absl::optional_internal::optional_data_base.1367" }
%"class.absl::optional_internal::optional_data_base.1367" = type { %"class.absl::optional_internal::optional_data_dtor_base.1368" }
%"class.absl::optional_internal::optional_data_dtor_base.1368" = type { i8, %union.anon.1369 }
%union.anon.1369 = type { %"class.base::TimeTicks" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1370, i32, i8, i8, [2 x i8] }>
%union.anon.1370 = type { %"class.WTF::Vector.1371" }
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373", [16 x i8] }
%"class.WTF::VectorBufferBase.1373" = type { i8*, i32, i32 }
%"class.blink::Member.1381" = type { %"class.blink::MemberBase.1382" }
%"class.blink::MemberBase.1382" = type { %"class.blink::HTMLOptionElement"* }
%"class.blink::Member.1383" = type { %"class.blink::MemberBase.1384" }
%"class.blink::MemberBase.1384" = type { %"class.blink::SelectType"* }
%"class.blink::SelectType" = type opaque
%"class.blink::HeapVector.1385" = type opaque
%"class.blink::HeapHashSet.1386" = type opaque
%"class.blink::HeapVector.1387" = type { %"class.WTF::Vector.1390" }
%"class.WTF::Vector.1390" = type { %"class.WTF::VectorBuffer.1391" }
%"class.WTF::VectorBuffer.1391" = type { %"class.WTF::VectorBufferBase.1392" }
%"class.WTF::VectorBufferBase.1392" = type { %"class.blink::Member.1393"*, i32, i32 }
%"class.blink::Member.1393" = type { %"class.blink::MemberBase.1550" }
%"class.blink::MemberBase.1550" = type { %"class.blink::NameSourceRelatedObject"* }
%"class.blink::NameSourceRelatedObject" = type { %"class.blink::WeakMember", %"class.WTF::String" }
%"class.blink::HeapVector.1395" = type { %"class.WTF::Vector.1398" }
%"class.WTF::Vector.1398" = type { %"class.WTF::VectorBuffer.1399" }
%"class.WTF::VectorBuffer.1399" = type { %"class.WTF::VectorBufferBase.1400" }
%"class.WTF::VectorBufferBase.1400" = type { %"class.blink::NameSource"*, i32, i32 }
%"class.blink::NameSource" = type { %"class.WTF::String", i8, i8, i32, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString", i32, %"class.blink::HeapVector.1387" }
%"class.blink::AccessibleNode" = type { %"class.blink::EventTargetWithInlineData", %"class.WTF::Vector.1423", %"class.WTF::Vector.1429", %"class.WTF::Vector.1435", %"class.WTF::Vector.1441", %"class.WTF::Vector.1447", %"class.blink::HeapVector.1453", %"class.blink::HeapVector.1461", %"class.blink::Member.441", %"class.blink::Member.6", %"class.blink::HeapVector.1469", %"class.blink::Member.1475" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1416" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1404" }
%"class.blink::HeapVector.1404" = type { %"class.WTF::Vector.1407" }
%"class.WTF::Vector.1407" = type { %"class.WTF::VectorBuffer.1408" }
%"class.WTF::VectorBuffer.1408" = type { %"class.WTF::VectorBufferBase.1409", [32 x i8] }
%"class.WTF::VectorBufferBase.1409" = type { %"struct.std::__1::pair.1410"*, i32, i32 }
%"struct.std::__1::pair.1410" = type { %"class.WTF::AtomicString", %"class.blink::Member.1411" }
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::HeapVector.1413"* }
%"class.blink::HeapVector.1413" = type opaque
%"class.std::__1::unique_ptr.1416" = type { %"class.std::__1::__compressed_pair.1417" }
%"class.std::__1::__compressed_pair.1417" = type { %"struct.std::__1::__compressed_pair_elem.1418" }
%"struct.std::__1::__compressed_pair_elem.1418" = type { %"class.WTF::Vector.1419"* }
%"class.WTF::Vector.1419" = type opaque
%"class.WTF::Vector.1423" = type { %"class.WTF::VectorBuffer.1424" }
%"class.WTF::VectorBuffer.1424" = type { %"class.WTF::VectorBufferBase.1425" }
%"class.WTF::VectorBufferBase.1425" = type { %"struct.std::__1::pair.1426"*, i32, i32 }
%"struct.std::__1::pair.1426" = type opaque
%"class.WTF::Vector.1429" = type { %"class.WTF::VectorBuffer.1430" }
%"class.WTF::VectorBuffer.1430" = type { %"class.WTF::VectorBufferBase.1431" }
%"class.WTF::VectorBufferBase.1431" = type { %"struct.std::__1::pair.1432"*, i32, i32 }
%"struct.std::__1::pair.1432" = type opaque
%"class.WTF::Vector.1435" = type { %"class.WTF::VectorBuffer.1436" }
%"class.WTF::VectorBuffer.1436" = type { %"class.WTF::VectorBufferBase.1437" }
%"class.WTF::VectorBufferBase.1437" = type { %"struct.std::__1::pair.1438"*, i32, i32 }
%"struct.std::__1::pair.1438" = type opaque
%"class.WTF::Vector.1441" = type { %"class.WTF::VectorBuffer.1442" }
%"class.WTF::VectorBuffer.1442" = type { %"class.WTF::VectorBufferBase.1443" }
%"class.WTF::VectorBufferBase.1443" = type { %"struct.std::__1::pair.1444"*, i32, i32 }
%"struct.std::__1::pair.1444" = type opaque
%"class.WTF::Vector.1447" = type { %"class.WTF::VectorBuffer.1448" }
%"class.WTF::VectorBuffer.1448" = type { %"class.WTF::VectorBufferBase.1449" }
%"class.WTF::VectorBufferBase.1449" = type { %"struct.std::__1::pair.1450"*, i32, i32 }
%"struct.std::__1::pair.1450" = type opaque
%"class.blink::HeapVector.1453" = type { %"class.WTF::Vector.1456" }
%"class.WTF::Vector.1456" = type { %"class.WTF::VectorBuffer.1457" }
%"class.WTF::VectorBuffer.1457" = type { %"class.WTF::VectorBufferBase.1458" }
%"class.WTF::VectorBufferBase.1458" = type { %"struct.std::__1::pair.1459"*, i32, i32 }
%"struct.std::__1::pair.1459" = type opaque
%"class.blink::HeapVector.1461" = type { %"class.WTF::Vector.1464" }
%"class.WTF::Vector.1464" = type { %"class.WTF::VectorBuffer.1465" }
%"class.WTF::VectorBuffer.1465" = type { %"class.WTF::VectorBufferBase.1466" }
%"class.WTF::VectorBufferBase.1466" = type { %"struct.std::__1::pair.1467"*, i32, i32 }
%"struct.std::__1::pair.1467" = type opaque
%"class.blink::HeapVector.1469" = type { %"class.WTF::Vector.1472" }
%"class.WTF::Vector.1472" = type { %"class.WTF::VectorBuffer.1473" }
%"class.WTF::VectorBuffer.1473" = type { %"class.WTF::VectorBufferBase.1474" }
%"class.WTF::VectorBufferBase.1474" = type { %"class.blink::Member.1475"*, i32, i32 }
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::AccessibleNode"* }
%"class.blink::HeapVector.1478" = type opaque
%"class.WTF::Vector.1479" = type opaque
%"class.WTF::Vector.1480" = type opaque
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.blink::ScrollableArea" = type opaque
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.1481", %"class.std::__1::vector.1489", %"class.std::__1::vector.1497", %"class.std::__1::vector.1505", %"class.std::__1::vector.1513", %"class.std::__1::vector.1521", %"class.std::__1::vector.1529", %"class.std::__1::vector.1537", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.1481" = type { %"class.std::__1::__vector_base.1482" }
%"class.std::__1::__vector_base.1482" = type { %"struct.std::__1::pair.1483"*, %"struct.std::__1::pair.1483"*, %"class.std::__1::__compressed_pair.1484" }
%"struct.std::__1::pair.1483" = type opaque
%"class.std::__1::__compressed_pair.1484" = type { %"struct.std::__1::__compressed_pair_elem.1485" }
%"struct.std::__1::__compressed_pair_elem.1485" = type { %"struct.std::__1::pair.1483"* }
%"class.std::__1::vector.1489" = type { %"class.std::__1::__vector_base.1490" }
%"class.std::__1::__vector_base.1490" = type { %"struct.std::__1::pair.1491"*, %"struct.std::__1::pair.1491"*, %"class.std::__1::__compressed_pair.1492" }
%"struct.std::__1::pair.1491" = type opaque
%"class.std::__1::__compressed_pair.1492" = type { %"struct.std::__1::__compressed_pair_elem.1493" }
%"struct.std::__1::__compressed_pair_elem.1493" = type { %"struct.std::__1::pair.1491"* }
%"class.std::__1::vector.1497" = type { %"class.std::__1::__vector_base.1498" }
%"class.std::__1::__vector_base.1498" = type { %"struct.std::__1::pair.1499"*, %"struct.std::__1::pair.1499"*, %"class.std::__1::__compressed_pair.1500" }
%"struct.std::__1::pair.1499" = type opaque
%"class.std::__1::__compressed_pair.1500" = type { %"struct.std::__1::__compressed_pair_elem.1501" }
%"struct.std::__1::__compressed_pair_elem.1501" = type { %"struct.std::__1::pair.1499"* }
%"class.std::__1::vector.1505" = type { %"class.std::__1::__vector_base.1506" }
%"class.std::__1::__vector_base.1506" = type { %"struct.std::__1::pair.1507"*, %"struct.std::__1::pair.1507"*, %"class.std::__1::__compressed_pair.1508" }
%"struct.std::__1::pair.1507" = type opaque
%"class.std::__1::__compressed_pair.1508" = type { %"struct.std::__1::__compressed_pair_elem.1509" }
%"struct.std::__1::__compressed_pair_elem.1509" = type { %"struct.std::__1::pair.1507"* }
%"class.std::__1::vector.1513" = type { %"class.std::__1::__vector_base.1514" }
%"class.std::__1::__vector_base.1514" = type { %"struct.std::__1::pair.1515"*, %"struct.std::__1::pair.1515"*, %"class.std::__1::__compressed_pair.1516" }
%"struct.std::__1::pair.1515" = type opaque
%"class.std::__1::__compressed_pair.1516" = type { %"struct.std::__1::__compressed_pair_elem.1517" }
%"struct.std::__1::__compressed_pair_elem.1517" = type { %"struct.std::__1::pair.1515"* }
%"class.std::__1::vector.1521" = type { %"class.std::__1::__vector_base.1522" }
%"class.std::__1::__vector_base.1522" = type { %"struct.std::__1::pair.1523"*, %"struct.std::__1::pair.1523"*, %"class.std::__1::__compressed_pair.1524" }
%"struct.std::__1::pair.1523" = type opaque
%"class.std::__1::__compressed_pair.1524" = type { %"struct.std::__1::__compressed_pair_elem.1525" }
%"struct.std::__1::__compressed_pair_elem.1525" = type { %"struct.std::__1::pair.1523"* }
%"class.std::__1::vector.1529" = type { %"class.std::__1::__vector_base.1530" }
%"class.std::__1::__vector_base.1530" = type { %"struct.std::__1::pair.1531"*, %"struct.std::__1::pair.1531"*, %"class.std::__1::__compressed_pair.1532" }
%"struct.std::__1::pair.1531" = type opaque
%"class.std::__1::__compressed_pair.1532" = type { %"struct.std::__1::__compressed_pair_elem.1533" }
%"struct.std::__1::__compressed_pair_elem.1533" = type { %"struct.std::__1::pair.1531"* }
%"class.std::__1::vector.1537" = type { %"class.std::__1::__vector_base.1538" }
%"class.std::__1::__vector_base.1538" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1539" }
%"class.std::__1::__compressed_pair.1539" = type { %"struct.std::__1::__compressed_pair_elem.1540" }
%"struct.std::__1::__compressed_pair_elem.1540" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.1544" }
%"class.std::__1::unique_ptr.1544" = type { %"class.std::__1::__compressed_pair.1545" }
%"class.std::__1::__compressed_pair.1545" = type { %"struct.std::__1::__compressed_pair_elem.1546" }
%"struct.std::__1::__compressed_pair_elem.1546" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking.1601" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK5blink15AXListBoxOption17IsAXListBoxOptionEv = comdat any

$_ZNK5blink15AXListBoxOption15CanHaveChildrenEv = comdat any

$_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_ = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv = comdat any

$_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink15AXListBoxOptionE = hidden unnamed_addr constant { [166 x i8*] } { [166 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::AXListBoxOption"*)* @_ZN5blink15AXListBoxOptionD2Ev to i8*), i8* bitcast (void (%"class.blink::AXListBoxOption"*)* @_ZN5blink15AXListBoxOptionD0Ev to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::Visitor"*)* @_ZNK5blink12AXNodeObject5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::AXObject"*)* @_ZN5blink12AXNodeObject4InitEPNS_8AXObjectE to i8*), i8* bitcast (void (%"class.blink::AXLayoutObject"*)* @_ZN5blink14AXLayoutObject6DetachEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_17AOMStringPropertyE to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, i32, i8*)* @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_18AOMBooleanPropertyERb to i8*), i8* bitcast (%"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17GetAccessibleNodeEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsImageMapLinkEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject14IsAXNodeObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject16IsAXLayoutObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17IsAXInlineTextBoxEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject6IsListEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsAXListBoxEv to i8*), i8* bitcast (i1 (%"class.blink::AXListBoxOption"*)* @_ZNK5blink15AXListBoxOption17IsAXListBoxOptionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsMenuListEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16IsMenuListOptionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15IsMenuListPopupEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12IsMockObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19IsProgressIndicatorEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsAXRadioInputEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8IsSliderEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsValidationMessageEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15IsVirtualObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsControlEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsDefaultEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10IsFieldsetEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12IsInputImageEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject13IsNativeImageEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject18IsNativeSpinButtonEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject14IsNativeSliderEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12IsSpinButtonEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19IsAutofillAvailableEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject11IsClickableEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10IsExpandedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsFocusedEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsGrabbedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsHoveredEv to i8*), i8* bitcast (i1 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject20IsLineBreakingObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject8IsLinkedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8IsLoadedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7IsModalEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject17IsMultiSelectableEv to i8*), i8* bitcast (i1 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject11IsOffScreenEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10IsRequiredEv to i8*), i8* bitcast (i32 (%"class.blink::AXListBoxOption"*)* @_ZNK5blink15AXListBoxOption10IsSelectedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19IsSelectedFromFocusEv to i8*), i8* bitcast (i1 (%"class.blink::AXListBoxOption"*)* @_ZNK5blink15AXListBoxOption22IsSelectedOptionActiveEv to i8*), i8* bitcast (i1 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject19IsNotUserSelectableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsVisibleEv to i8*), i8* bitcast (i1 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject9IsVisitedEv to i8*), i8* bitcast (i1 (%"class.blink::AXListBoxOption"*, %"class.blink::HeapVector.1385"*)* @_ZNK5blink15AXListBoxOption29ComputeAccessibilityIsIgnoredEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.1385"*)* @_ZNK5blink14AXLayoutObject22DefaultObjectInclusionEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32*, %"class.blink::HeapVector"*)* @_ZNK5blink12AXNodeObject7GetNameERN2ax5mojom8NameFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32, i32*, %"class.blink::HeapVector"*)* @_ZNK5blink12AXNodeObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32, i32*, %"class.blink::HeapVector.1478"*, %"class.blink::HeapVector.1387"*)* @_ZNK5blink12AXNodeObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32)* @_ZNK5blink12AXNodeObject11PlaceholderEN2ax5mojom8NameFromE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32)* @_ZNK5blink12AXNodeObject5TitleEN2ax5mojom8NameFromE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXListBoxOption"*, i1, i1, %"class.blink::HeapHashSet.1386"*, i32*, %"class.blink::HeapVector.1387"*, %"class.blink::HeapVector.1395"*)* @_ZNK5blink15AXListBoxOption15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSH_INS_10NameSourceELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.1386"*, i1)* @_ZNK5blink12AXNodeObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEb to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9AccessKeyEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject15BackgroundColorEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8GetColorEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10ColorValueEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject24CanvasHasFallbackContentEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject18ComputedFontFamilyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject26FontFamilyForSerializationEv to i8*), i8* bitcast (float (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8FontSizeEv to i8*), i8* bitcast (float (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10FontWeightEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12HeadingLevelEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject17HierarchicalLevelEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::IntSize"*)* @_ZNK5blink12AXNodeObject12ImageDataUrlERKNS_7IntSizeE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject16InPageLinkTargetEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject11OrientationEv to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject12GetListStyleEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12GetTextAlignEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject16GetTextDirectionEv to i8*), i8* bitcast (float (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject13GetTextIndentEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject15GetTextPositionEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, i32*, i32*, i32*, i32*)* @_ZNK5blink12AXNodeObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_ to i8*), i8* bitcast (void (%"class.blink::HeapVector"*, %"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19RadioButtonsInGroupEv to i8*), i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject3UrlEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12ChooserPopupEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject28LoadInlineTextBoxesRecursiveEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject10NextOnLineEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject14PreviousOnLineEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.WTF::Vector.1479"*)* @_ZNK5blink8AXObject20TextCharacterOffsetsERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.WTF::Vector.1479"*, %"class.WTF::Vector.1479"*)* @_ZNK5blink8AXObject17GetWordBoundariesERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEES5_ to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10TextLengthEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*, i32)* @_ZNK5blink12AXNodeObject29TextOffsetInFormattingContextEi to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject21TextOffsetInContainerEi to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19GetAriaCurrentStateEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject15GetInvalidStateEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject16AriaInvalidValueEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, float*)* @_ZNK5blink12AXNodeObject13ValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, float*)* @_ZNK5blink12AXNodeObject16MaxValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, float*)* @_ZNK5blink12AXNodeObject16MinValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, float*)* @_ZNK5blink12AXNodeObject17StepValueForRangeEPf to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject18GetValueForControlEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject46SlowGetValueForControlIncludingContentEditableEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject11RestrictionEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject26DetermineAccessibilityRoleEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject17AriaRoleAttributeEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject16ActiveDescendantEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12AutoCompleteEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector"*)* @_ZNK5blink12AXNodeObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector"*)* @_ZNK5blink12AXNodeObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12ErrorMessageEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8HasPopupEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject14IsEditableRootEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject30HasContentEditableAttributeSetEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject20SupportsARIADraggingEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.WTF::Vector.1480"*)* @_ZNK5blink12AXNodeObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8PosInSetEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject7SetSizeEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16LiveRegionStatusEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject18LiveRegionRelevantEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)* @_ZNK5blink12AXNodeObject17GetRelativeBoundsEPPNS_8AXObjectERNS_9FloatRectER10SkMatrix44Pb to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXLayoutObject"*, %"class.blink::IntPoint"*)* @_ZNK5blink14AXLayoutObject20AccessibilityHitTestERKNS_8IntPointE to i8*), i8* bitcast (i1 (%"class.blink::AXListBoxOption"*)* @_ZNK5blink15AXListBoxOption15CanHaveChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13ClearChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector"*)* @_ZNK5blink12AXNodeObject15SelectedOptionsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (double (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject24EstimatedLoadingProgressEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12RootScrollerEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject7GetNodeEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject15GetLayoutObjectEv to i8*), i8* bitcast (%"class.blink::Document"* (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject11GetDocumentEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject13AnchorElementEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject13ActionElementEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8LanguageEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)* @_ZNK5blink12AXNodeObject12HasAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)* @_ZNK5blink12AXNodeObject12GetAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (i1 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject11IsDataTableEv to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject11ColumnCountEv to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject8RowCountEv to i8*), i8* bitcast (void (%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector"*)* @_ZNK5blink14AXLayoutObject13ColumnHeadersERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (void (%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector"*)* @_ZNK5blink14AXLayoutObject10RowHeadersERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXLayoutObject"*, i32, i32)* @_ZNK5blink14AXLayoutObject19CellForColumnAndRowEjj to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject11ColumnIndexEv to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject8RowIndexEv to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject10ColumnSpanEv to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject7RowSpanEv to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject16GetSortDirectionEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject12HeaderObjectEv to i8*), i8* bitcast (%"class.blink::ScrollableArea"* (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject29GetScrollableAreaIfScrollableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject35InternalSetAccessibilityFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject37InternalClearAccessibilityFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject23OnNativeDecrementActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject19OnNativeClickActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject19OnNativeFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject23OnNativeIncrementActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXListBoxOption"*, i1)* @_ZN5blink15AXListBoxOption25OnNativeSetSelectedActionEb to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject55OnNativeSetSequentialFocusNavigationStartingPointActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, %"class.WTF::String"*)* @_ZN5blink12AXNodeObject22OnNativeSetValueActionERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject15ChildrenChangedEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject29HandleActiveDescendantChangedEv to i8*), i8* bitcast (void (%"class.blink::AXLayoutObject"*, i32)* @_ZN5blink14AXLayoutObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject25HandleAriaExpandedChangedEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject16SelectionChangedEv to i8*), i8* bitcast (i32 (%"class.blink::AXListBoxOption"*)* @_ZNK5blink15AXListBoxOption22NativeRoleIgnoringAriaEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject11AddChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"struct.ui::AXNodeData"*)* @_ZNK5blink12AXNodeObject25SerializeMarkerAttributesEPN2ui10AXNodeDataE to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject26RoleFromLayoutObjectOrNodeEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject17IsTabItemSelectedEv to i8*)] }, align 8
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kOptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.5 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.9 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink15AXListBoxOptionC1EPNS_12LayoutObjectERNS_17AXObjectCacheImplE = hidden unnamed_addr alias void (%"class.blink::AXListBoxOption"*, %"class.blink::LayoutObject"*, %"class.blink::AXObjectCacheImpl"*), void (%"class.blink::AXListBoxOption"*, %"class.blink::LayoutObject"*, %"class.blink::AXObjectCacheImpl"*)* @_ZN5blink15AXListBoxOptionC2EPNS_12LayoutObjectERNS_17AXObjectCacheImplE
@_ZN5blink15AXListBoxOptionD1Ev = hidden unnamed_addr alias void (%"class.blink::AXListBoxOption"*), void (%"class.blink::AXListBoxOption"*)* @_ZN5blink15AXListBoxOptionD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AXListBoxOptionC2EPNS_12LayoutObjectERNS_17AXObjectCacheImplE(%"class.blink::AXListBoxOption"*, %"class.blink::LayoutObject"*, %"class.blink::AXObjectCacheImpl"* dereferenceable(456)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AXListBoxOption", %"class.blink::AXListBoxOption"* %0, i64 0, i32 0
  tail call void @_ZN5blink14AXLayoutObjectC2EPNS_12LayoutObjectERNS_17AXObjectCacheImplE(%"class.blink::AXLayoutObject"* %4, %"class.blink::LayoutObject"* %1, %"class.blink::AXObjectCacheImpl"* dereferenceable(456) %2) #8
  %5 = getelementptr inbounds %"class.blink::AXListBoxOption", %"class.blink::AXListBoxOption"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [166 x i8*] }, { [166 x i8*] }* @_ZTVN5blink15AXListBoxOptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

declare void @_ZN5blink14AXLayoutObjectC2EPNS_12LayoutObjectERNS_17AXObjectCacheImplE(%"class.blink::AXLayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::AXObjectCacheImpl"* dereferenceable(456)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14AXLayoutObjectD2Ev(%"class.blink::AXLayoutObject"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AXListBoxOptionD2Ev(%"class.blink::AXListBoxOption"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXListBoxOption", %"class.blink::AXListBoxOption"* %0, i64 0, i32 0
  tail call void @_ZN5blink14AXLayoutObjectD2Ev(%"class.blink::AXLayoutObject"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AXListBoxOptionD0Ev(%"class.blink::AXListBoxOption"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXListBoxOption", %"class.blink::AXListBoxOption"* %0, i64 0, i32 0
  tail call void @_ZN5blink14AXLayoutObjectD2Ev(%"class.blink::AXLayoutObject"* %2) #8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink15AXListBoxOption22NativeRoleIgnoringAriaEv(%"class.blink::AXListBoxOption"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 114
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15AXListBoxOption10IsSelectedEv(%"class.blink::AXListBoxOption"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXListBoxOption", %"class.blink::AXListBoxOption"* %0, i64 0, i32 0, i32 0
  %3 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %2) #8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %32, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXListBoxOption", %"class.blink::AXListBoxOption"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = tail call zeroext i1 @_ZNK5blink8AXObject23CanSetSelectedAttributeEv(%"class.blink::AXObject"* %6) #8
  br i1 %7, label %8, label %32

8:                                                ; preds = %5
  %9 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %2) #8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 48
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %32

16:                                               ; preds = %11
  %17 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1, i32 2
  %21 = bitcast %"class.blink::Member.82"* %20 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  br i1 %27, label %28, label %32

28:                                               ; preds = %16
  %29 = bitcast %"class.blink::Node"* %9 to %"class.blink::HTMLOptionElement"*
  %30 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %29) #8
  %31 = select i1 %30, i32 2, i32 1
  br label %32

32:                                               ; preds = %16, %8, %11, %28, %5, %1
  %33 = phi i32 [ 0, %1 ], [ 0, %5 ], [ %31, %28 ], [ 1, %16 ], [ 1, %11 ], [ 1, %8 ]
  ret i32 %33
}

declare %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject23CanSetSelectedAttributeEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15AXListBoxOption22IsSelectedOptionActiveEv(%"class.blink::AXListBoxOption"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXListBoxOption", %"class.blink::AXListBoxOption"* %0, i64 0, i32 0, i32 0
  %3 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %2) #8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %2) #8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %34, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %34

13:                                               ; preds = %8
  %14 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %18 = bitcast %"class.blink::Member.82"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %25, label %34

25:                                               ; preds = %13
  %26 = bitcast %"class.blink::Node"* %6 to %"class.blink::HTMLOptionElement"*
  %27 = tail call %"class.blink::HTMLSelectElement"* @_ZNK5blink17HTMLOptionElement18OwnerSelectElementEv(%"class.blink::HTMLOptionElement"* nonnull %26) #8
  %28 = icmp eq %"class.blink::HTMLSelectElement"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = tail call %"class.blink::HTMLOptionElement"* @_ZNK5blink17HTMLSelectElement18ActiveSelectionEndEv(%"class.blink::HTMLSelectElement"* nonnull %27) #8
  %31 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %2) #8
  %33 = icmp eq %"class.blink::Node"* %31, %32
  br label %34

34:                                               ; preds = %1, %5, %8, %13, %25, %29
  %35 = phi i1 [ %33, %29 ], [ false, %25 ], [ false, %13 ], [ false, %8 ], [ false, %5 ], [ false, %1 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLSelectElement"* @_ZNK5blink15AXListBoxOption23ListBoxOptionParentNodeEv(%"class.blink::AXListBoxOption"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXListBoxOption", %"class.blink::AXListBoxOption"* %0, i64 0, i32 0, i32 0
  %3 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %2) #8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %2) #8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %28, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %28

13:                                               ; preds = %8
  %14 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %18 = bitcast %"class.blink::Member.82"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %25, label %28

25:                                               ; preds = %13
  %26 = bitcast %"class.blink::Node"* %6 to %"class.blink::HTMLOptionElement"*
  %27 = tail call %"class.blink::HTMLSelectElement"* @_ZNK5blink17HTMLOptionElement18OwnerSelectElementEv(%"class.blink::HTMLOptionElement"* nonnull %26) #8
  br label %28

28:                                               ; preds = %13, %1, %5, %8, %25
  %29 = phi %"class.blink::HTMLSelectElement"* [ %27, %25 ], [ null, %13 ], [ null, %8 ], [ null, %5 ], [ null, %1 ]
  ret %"class.blink::HTMLSelectElement"* %29
}

declare %"class.blink::HTMLOptionElement"* @_ZNK5blink17HTMLSelectElement18ActiveSelectionEndEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15AXListBoxOption29ComputeAccessibilityIsIgnoredEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXListBoxOption"*, %"class.blink::HeapVector.1385"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXListBoxOption", %"class.blink::AXListBoxOption"* %0, i64 0, i32 0, i32 0
  %4 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %3) #8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::AXListBoxOption", %"class.blink::AXListBoxOption"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = tail call zeroext i1 @_ZNK5blink8AXObject31AccessibilityIsIgnoredByDefaultEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"* %7, %"class.blink::HeapVector.1385"* %1) #8
  br label %9

9:                                                ; preds = %6, %2
  %10 = phi i1 [ true, %2 ], [ %8, %6 ]
  ret i1 %10
}

declare zeroext i1 @_ZNK5blink8AXObject31AccessibilityIsIgnoredByDefaultEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.1385"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15AXListBoxOption15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSH_INS_10NameSourceELj0EEE(%"class.blink::AXListBoxOption"*, i1 zeroext, i1 zeroext, %"class.blink::HeapHashSet.1386"*, i32* dereferenceable(4), %"class.blink::HeapVector.1387"*, %"class.blink::HeapVector.1395"*) unnamed_addr #0 align 2 {
  %8 = alloca i8, align 1
  %9 = alloca %"class.blink::NameSource", align 8
  %10 = getelementptr inbounds %"class.blink::AXListBoxOption", %"class.blink::AXListBoxOption"* %0, i64 0, i32 0, i32 0
  %11 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %10) #8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %151, label %13

13:                                               ; preds = %7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #8
  store i8 0, i8* %8, align 1
  %14 = getelementptr inbounds %"class.blink::AXListBoxOption", %"class.blink::AXListBoxOption"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject19AriaTextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSG_INS_10NameSourceELj0EEEPb(%"class.blink::AXObject"* %14, i1 zeroext %1, i1 zeroext %2, %"class.blink::HeapHashSet.1386"* %3, i32* dereferenceable(4) %4, %"class.blink::HeapVector.1387"* %5, %"class.blink::HeapVector.1395"* %6, i8* nonnull %8) #8
  %16 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %17 = load i8, i8* %8, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = icmp ne %"class.blink::HeapVector.1395"* %6, null
  %20 = or i1 %19, %18
  br i1 %20, label %21, label %149

21:                                               ; preds = %13
  store i32 5, i32* %4, align 4
  %22 = call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %10) #8
  %23 = bitcast %"class.blink::Node"* %22 to %"class.blink::HTMLOptionElement"*
  %24 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement12DisplayLabelEv(%"class.blink::HTMLOptionElement"* %23) #8
  %25 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %26 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #8
  br label %40

40:                                               ; preds = %39, %36, %21
  br i1 %19, label %41, label %149

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"class.blink::HeapVector.1395", %"class.blink::HeapVector.1395"* %6, i64 0, i32 0
  %43 = bitcast %"class.blink::NameSource"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %43) #8
  %44 = load i8, i8* %8, align 1, !range !2
  %45 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 1
  store i8 %44, i8* %46, align 8
  %47 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 2
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 3
  store i32 1, i32* %48, align 4
  %49 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 4
  %50 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE to i64*), align 8
  %51 = bitcast %"class.blink::QualifiedName"** %49 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %52, align 8
  %53 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 6
  store i32 -1, i32* %53, align 8
  %54 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 7
  %55 = bitcast %"class.blink::HeapVector.1387"* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #8
  %56 = getelementptr inbounds %"class.blink::HeapVector.1395", %"class.blink::HeapVector.1395"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.blink::HeapVector.1395", %"class.blink::HeapVector.1395"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %70, label %61, !prof !3

61:                                               ; preds = %41
  %62 = getelementptr inbounds %"class.blink::HeapVector.1395", %"class.blink::HeapVector.1395"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %62, align 8
  %64 = zext i32 %57 to i64
  %65 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %63, i64 %64
  %66 = bitcast %"class.blink::NameSource"* %65 to i8*
  %67 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %66, %"class.blink::NameSource"* nonnull dereferenceable(56) %9) #8
  %68 = load i32, i32* %56, align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* %56, align 4
  br label %71

70:                                               ; preds = %41
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1398"* %42, %"class.blink::NameSource"* nonnull dereferenceable(56) %9) #8
  br label %71

71:                                               ; preds = %61, %70
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #8
  br label %87

87:                                               ; preds = %86, %83, %71
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #8
  br label %103

103:                                              ; preds = %87, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %43) #8
  %104 = load i32, i32* %4, align 4
  %105 = load i32, i32* %56, align 4
  %106 = add i32 %105, -1
  %107 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1398"* %42, i32 %106) #8
  %108 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %107, i64 0, i32 3
  store i32 %104, i32* %108, align 4
  %109 = load i32, i32* %56, align 4
  %110 = add i32 %109, -1
  %111 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1398"* %42, i32 %110) #8
  %112 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %112, label %130, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %130

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #8
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !3

127:                                              ; preds = %118
  call void @llvm.trap() #8
  unreachable

128:                                              ; preds = %118
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %119, align 4
  br label %130

130:                                              ; preds = %128, %113, %103
  %131 = bitcast %"class.blink::NameSource"* %111 to i64*
  %132 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %111, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  store i64 %25, i64* %131, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #8
  br label %148

148:                                              ; preds = %130, %144, %147
  store i8 1, i8* %8, align 1
  br label %149

149:                                              ; preds = %13, %148, %40
  %150 = phi i64 [ %16, %13 ], [ %25, %148 ], [ %25, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #8
  br label %151

151:                                              ; preds = %7, %149
  %152 = phi i64 [ %150, %149 ], [ 0, %7 ]
  %153 = inttoptr i64 %152 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %153
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare %"class.WTF::StringImpl"* @_ZNK5blink8AXObject19AriaTextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSG_INS_10NameSourceELj0EEEPb(%"class.blink::AXObject"*, i1 zeroext, i1 zeroext, %"class.blink::HeapHashSet.1386"*, i32* dereferenceable(4), %"class.blink::HeapVector.1387"*, %"class.blink::HeapVector.1395"*, i8*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement12DisplayLabelEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15AXListBoxOption25OnNativeSetSelectedActionEb(%"class.blink::AXListBoxOption"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXListBoxOption", %"class.blink::AXListBoxOption"* %0, i64 0, i32 0, i32 0
  %4 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %3) #8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %64, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %3) #8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %64, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 48
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %64

14:                                               ; preds = %9
  %15 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 1, i32 2
  %19 = bitcast %"class.blink::Member.82"* %18 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %22, %24
  br i1 %25, label %26, label %64

26:                                               ; preds = %14
  %27 = bitcast %"class.blink::Node"* %7 to %"class.blink::HTMLOptionElement"*
  %28 = tail call %"class.blink::HTMLSelectElement"* @_ZNK5blink17HTMLOptionElement18OwnerSelectElementEv(%"class.blink::HTMLOptionElement"* nonnull %27) #8
  %29 = icmp eq %"class.blink::HTMLSelectElement"* %28, null
  br i1 %29, label %64, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::AXListBoxOption", %"class.blink::AXListBoxOption"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = tail call zeroext i1 @_ZNK5blink8AXObject23CanSetSelectedAttributeEv(%"class.blink::AXObject"* %31) #8
  br i1 %32, label %33, label %64

33:                                               ; preds = %30
  %34 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %3) #8
  %35 = icmp eq %"class.blink::Node"* %34, null
  br i1 %35, label %64, label %36

36:                                               ; preds = %33
  %37 = tail call zeroext i1 @_ZNK5blink8AXObject23CanSetSelectedAttributeEv(%"class.blink::AXObject"* %31) #8
  br i1 %37, label %38, label %64

38:                                               ; preds = %36
  %39 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %3) #8
  %40 = icmp eq %"class.blink::Node"* %39, null
  br i1 %40, label %56, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %39, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 48
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %56

46:                                               ; preds = %41
  %47 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %39, i64 1, i32 2
  %49 = bitcast %"class.blink::Member.82"* %48 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %52, %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %46, %41, %38
  br i1 %1, label %61, label %64

57:                                               ; preds = %46
  %58 = bitcast %"class.blink::Node"* %39 to %"class.blink::HTMLOptionElement"*
  %59 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %58) #8
  %60 = xor i1 %59, %1
  br i1 %60, label %61, label %64

61:                                               ; preds = %56, %57
  %62 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %3) #8
  %63 = bitcast %"class.blink::Node"* %62 to %"class.blink::HTMLOptionElement"*
  tail call void @_ZN5blink17HTMLSelectElement23SelectOptionByAccessKeyEPNS_17HTMLOptionElementE(%"class.blink::HTMLSelectElement"* nonnull %28, %"class.blink::HTMLOptionElement"* %63) #8
  br label %64

64:                                               ; preds = %56, %2, %6, %9, %14, %36, %33, %57, %61, %30, %26
  %65 = phi i1 [ false, %26 ], [ false, %30 ], [ true, %61 ], [ false, %57 ], [ false, %33 ], [ false, %36 ], [ false, %14 ], [ false, %9 ], [ false, %6 ], [ false, %2 ], [ false, %56 ]
  ret i1 %65
}

declare void @_ZN5blink17HTMLSelectElement23SelectOptionByAccessKeyEPNS_17HTMLOptionElementE(%"class.blink::HTMLSelectElement"*, %"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

declare %"class.blink::HTMLSelectElement"* @_ZNK5blink17HTMLOptionElement18OwnerSelectElementEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject5TraceEPNS_7VisitorE(%"class.blink::AXNodeObject"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject4InitEPNS_8AXObjectE(%"class.blink::AXNodeObject"*, %"class.blink::AXObject"*) unnamed_addr #1

declare void @_ZN5blink14AXLayoutObject6DetachEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_17AOMStringPropertyE(%"class.blink::AXObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_18AOMBooleanPropertyERb(%"class.blink::AXObject"*, i32, i8* dereferenceable(1)) unnamed_addr #1

declare %"class.blink::AccessibleNode"* @_ZNK5blink8AXObject17GetAccessibleNodeEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsImageMapLinkEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject14IsAXNodeObjectEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink14AXLayoutObject16IsAXLayoutObjectEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject17IsAXInlineTextBoxEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject6IsListEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject11IsAXListBoxEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15AXListBoxOption17IsAXListBoxOptionEv(%"class.blink::AXListBoxOption"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink8AXObject10IsMenuListEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject16IsMenuListOptionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject15IsMenuListPopupEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject12IsMockObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject19IsProgressIndicatorEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsAXRadioInputEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject8IsSliderEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject19IsValidationMessageEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject15IsVirtualObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject9IsControlEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject9IsDefaultEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject10IsFieldsetEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject12IsInputImageEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject13IsNativeImageEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject18IsNativeSpinButtonEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject14IsNativeSliderEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject12IsSpinButtonEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject19IsAutofillAvailableEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject11IsClickableEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject10IsExpandedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject9IsFocusedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject9IsGrabbedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject9IsHoveredEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink14AXLayoutObject20IsLineBreakingObjectEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink14AXLayoutObject8IsLinkedEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject8IsLoadedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject7IsModalEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject17IsMultiSelectableEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink14AXLayoutObject11IsOffScreenEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject10IsRequiredEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject19IsSelectedFromFocusEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink14AXLayoutObject19IsNotUserSelectableEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject9IsVisibleEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink14AXLayoutObject9IsVisitedEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare i32 @_ZNK5blink14AXLayoutObject22DefaultObjectInclusionEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.1385"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject7GetNameERN2ax5mojom8NameFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, i32* dereferenceable(4), %"class.blink::HeapVector"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, i32, i32* dereferenceable(4), %"class.blink::HeapVector"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE(%"class.blink::AXNodeObject"*, i32, i32* dereferenceable(4), %"class.blink::HeapVector.1478"*, %"class.blink::HeapVector.1387"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject11PlaceholderEN2ax5mojom8NameFromE(%"class.blink::AXNodeObject"*, i32) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject5TitleEN2ax5mojom8NameFromE(%"class.blink::AXNodeObject"*, i32) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEb(%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.1386"*, i1 zeroext) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink12AXNodeObject9AccessKeyEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject15BackgroundColorEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject8GetColorEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject10ColorValueEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject24CanvasHasFallbackContentEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink12AXNodeObject18ComputedFontFamilyEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject26FontFamilyForSerializationEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare float @_ZNK5blink12AXNodeObject8FontSizeEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare float @_ZNK5blink12AXNodeObject10FontWeightEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject12HeadingLevelEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject17HierarchicalLevelEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject12ImageDataUrlERKNS_7IntSizeE(%"class.blink::AXNodeObject"*, %"class.blink::IntSize"* dereferenceable(8)) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink12AXNodeObject16InPageLinkTargetEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject11OrientationEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink14AXLayoutObject12GetListStyleEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject12GetTextAlignEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject16GetTextDirectionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare float @_ZNK5blink12AXNodeObject13GetTextIndentEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject15GetTextPositionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_(%"class.blink::AXNodeObject"*, i32*, i32*, i32*, i32*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject19RadioButtonsInGroupEv(%"class.blink::HeapVector"* sret, %"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject3UrlEv(%"class.blink::KURL"* sret, %"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink12AXNodeObject12ChooserPopupEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject28LoadInlineTextBoxesRecursiveEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink14AXLayoutObject10NextOnLineEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink14AXLayoutObject14PreviousOnLineEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink8AXObject20TextCharacterOffsetsERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::AXObject"*, %"class.WTF::Vector.1479"*) unnamed_addr #1

declare void @_ZNK5blink8AXObject17GetWordBoundariesERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEES5_(%"class.blink::AXObject"*, %"class.WTF::Vector.1479"*, %"class.WTF::Vector.1479"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject10TextLengthEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject29TextOffsetInFormattingContextEi(%"class.blink::AXNodeObject"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject21TextOffsetInContainerEi(%"class.blink::AXObject"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject19GetAriaCurrentStateEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject15GetInvalidStateEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject16AriaInvalidValueEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject13ValueForRangeEPf(%"class.blink::AXNodeObject"*, float*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject16MaxValueForRangeEPf(%"class.blink::AXNodeObject"*, float*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject16MinValueForRangeEPf(%"class.blink::AXNodeObject"*, float*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject17StepValueForRangeEPf(%"class.blink::AXNodeObject"*, float*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject18GetValueForControlEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject46SlowGetValueForControlIncludingContentEditableEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject11RestrictionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZN5blink12AXNodeObject26DetermineAccessibilityRoleEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject17AriaRoleAttributeEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink12AXNodeObject16ActiveDescendantEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject12AutoCompleteEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink12AXNodeObject12ErrorMessageEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject8HasPopupEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject14IsEditableRootEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject30HasContentEditableAttributeSetEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject20SupportsARIADraggingEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE(%"class.blink::AXNodeObject"*, %"class.WTF::Vector.1480"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject8PosInSetEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject7SetSizeEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject16LiveRegionStatusEv(%"class.blink::AXObject"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject18LiveRegionRelevantEv(%"class.blink::AXObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject17GetRelativeBoundsEPPNS_8AXObjectERNS_9FloatRectER10SkMatrix44Pb(%"class.blink::AXNodeObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"* dereferenceable(16), %class.SkMatrix44* dereferenceable(68), i8*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink14AXLayoutObject20AccessibilityHitTestERKNS_8IntPointE(%"class.blink::AXLayoutObject"*, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15AXListBoxOption15CanHaveChildrenEv(%"class.blink::AXListBoxOption"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink8AXObject13ClearChildrenEv(%"class.blink::AXObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject15SelectedOptionsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #1

declare double @_ZNK5blink12AXNodeObject24EstimatedLoadingProgressEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject12RootScrollerEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink14AXLayoutObject15GetLayoutObjectEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare %"class.blink::Document"* @_ZNK5blink14AXLayoutObject11GetDocumentEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink12AXNodeObject13AnchorElementEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink12AXNodeObject13ActionElementEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject8LanguageEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject12HasAttributeERKNS_13QualifiedNameE(%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink12AXNodeObject12GetAttributeERKNS_13QualifiedNameE(%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink14AXLayoutObject11IsDataTableEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare i32 @_ZNK5blink14AXLayoutObject11ColumnCountEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare i32 @_ZNK5blink14AXLayoutObject8RowCountEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink14AXLayoutObject13ColumnHeadersERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink14AXLayoutObject10RowHeadersERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink14AXLayoutObject19CellForColumnAndRowEjj(%"class.blink::AXLayoutObject"*, i32, i32) unnamed_addr #1

declare i32 @_ZNK5blink14AXLayoutObject11ColumnIndexEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare i32 @_ZNK5blink14AXLayoutObject8RowIndexEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare i32 @_ZNK5blink14AXLayoutObject10ColumnSpanEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare i32 @_ZNK5blink14AXLayoutObject7RowSpanEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare i32 @_ZNK5blink14AXLayoutObject16GetSortDirectionEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink14AXLayoutObject12HeaderObjectEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare %"class.blink::ScrollableArea"* @_ZNK5blink14AXLayoutObject29GetScrollableAreaIfScrollableEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject35InternalSetAccessibilityFocusActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject37InternalClearAccessibilityFocusActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12AXNodeObject23OnNativeDecrementActionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject19OnNativeClickActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12AXNodeObject19OnNativeFocusActionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12AXNodeObject23OnNativeIncrementActionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12AXNodeObject55OnNativeSetSequentialFocusNavigationStartingPointActionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12AXNodeObject22OnNativeSetValueActionERKN3WTF6StringE(%"class.blink::AXNodeObject"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject15ChildrenChangedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject29HandleActiveDescendantChangedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZN5blink14AXLayoutObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE(%"class.blink::AXLayoutObject"*, i32) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject25HandleAriaExpandedChangedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject16SelectionChangedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject11AddChildrenEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject25SerializeMarkerAttributesEPN2ui10AXNodeDataE(%"class.blink::AXNodeObject"*, %"struct.ui::AXNodeData"*) unnamed_addr #1

declare i32 @_ZNK5blink14AXLayoutObject26RoleFromLayoutObjectOrNodeEv(%"class.blink::AXLayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject17IsTabItemSelectedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::NameSource"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::NameSource"*
  %4 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::NameSource"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8* %0 to i64*
  store i64 %6, i64* %7, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 8
  %9 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false) #8
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 5
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8* %10 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %16 = getelementptr inbounds i8, i8* %0, i64 32
  %17 = bitcast i8* %16 to i32*
  %18 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds i8, i8* %0, i64 40
  %21 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7
  %22 = getelementptr inbounds i8, i8* %0, i64 48
  %23 = bitcast i8* %22 to i32*
  %24 = getelementptr inbounds i8, i8* %0, i64 52
  %25 = bitcast i8* %24 to i32*
  %26 = bitcast %"class.blink::HeapVector.1387"* %21 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %20 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %23, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %23, align 4
  store i32 %30, i32* %29, align 4
  %32 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %25, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %25, align 4
  store i32 %33, i32* %32, align 4
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %2
  %38 = bitcast i8* %20 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #8
  br label %41

41:                                               ; preds = %37, %2
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.blink::HeapVector.1387"* %21 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #8
  br label %48

48:                                               ; preds = %41, %44
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %75, label %51

51:                                               ; preds = %48
  %52 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %53 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %52, i64 0, i32 1
  %54 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %53) #8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %56, label %58, !prof !3

56:                                               ; preds = %51
  %57 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %53, i8* %57) #8
  br label %58

58:                                               ; preds = %56, %51
  %59 = phi i8* [ %57, %56 ], [ %54, %51 ]
  %60 = bitcast i8* %59 to %"class.blink::ThreadState"**
  %61 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 9
  %63 = load i8, i8* %62, align 1, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 13
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 1
  store i64 %68, i64* %66, align 8
  %69 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %70 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %70, i64 0, i32 0, i32 0
  %72 = bitcast i8* %20 to %"class.WTF::Vector.1390"*
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.1390"* %72, %"class.blink::Visitor"* %71) #8
  %73 = load i64, i64* %66, align 8
  %74 = add i64 %73, -1
  store i64 %74, i64* %66, align 8
  br label %75

75:                                               ; preds = %48, %58, %65
  ret %"class.blink::NameSource"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1398"*, %"class.blink::NameSource"* dereferenceable(56)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1398", %"class.WTF::Vector.1398"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1398", %"class.WTF::Vector.1398"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  %8 = icmp ugt %"class.blink::NameSource"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 %10
  %12 = icmp ugt %"class.blink::NameSource"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1398", %"class.WTF::Vector.1398"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1398"* %0, i32 %22) #8
  %23 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::NameSource"* %1 to i64
  %26 = ptrtoint %"class.blink::NameSource"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = sdiv exact i64 %27, 56
  %29 = getelementptr inbounds %"class.WTF::Vector.1398", %"class.WTF::Vector.1398"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1398"* %0, i32 %37) #8
  %38 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::NameSource"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::NameSource"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %41, i64 %44
  %46 = bitcast %"class.blink::NameSource"* %45 to i8*
  %47 = tail call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %46, %"class.blink::NameSource"* dereferenceable(56) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.1390"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.WTF::Vector.1390"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast %"class.WTF::Vector.1390"* %0 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #8
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1393"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.1393", %"class.blink::Member.1393"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1393"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %9, i64 6
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* %1, i8* %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv) #8
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"**
  %4 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %3, align 8
  %5 = ptrtoint %"class.blink::AXObject"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #8
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 -1, i32 14
  %20 = bitcast %"class.blink::Member.2"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"*
  %4 = bitcast i8* %1 to void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)**, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AXObject"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1398"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1398", %"class.WTF::Vector.1398"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1398", %"class.WTF::Vector.1398"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %8, align 8
  %10 = icmp eq %"class.blink::NameSource"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64 %11) #8
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 56
  %15 = tail call %"class.blink::HeapVectorBacking.1601"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #8
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1601"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1398"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1601", %"class.blink::HeapVectorBacking.1601"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #8
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %8, align 8
  %26 = icmp eq %"class.blink::NameSource"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::NameSource"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #8
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 56
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #8
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #8
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #8
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1398"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1398"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1398", %"class.WTF::Vector.1398"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1398", %"class.WTF::Vector.1398"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1398"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1398", %"class.WTF::Vector.1398"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"* %6, %"class.blink::NameSource"* %10, %"class.blink::NameSource"* null, i1 zeroext true)
  %13 = bitcast %"class.blink::NameSource"* %6 to i8*
  %14 = mul nuw nsw i64 %9, 56
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %13, i64 %14) #8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %13) #8
  br label %42

15:                                               ; preds = %2
  %16 = zext i32 %1 to i64
  %17 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64 %16) #8
  %18 = udiv i64 %17, 56
  %19 = tail call %"class.blink::HeapVectorBacking.1601"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %18) #8
  %20 = bitcast %"class.blink::HeapVectorBacking.1601"* %19 to %"class.blink::NameSource"*
  %21 = ptrtoint %"class.blink::HeapVectorBacking.1601"* %19 to i64
  %22 = getelementptr inbounds %"class.WTF::Vector.1398", %"class.WTF::Vector.1398"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.1398", %"class.WTF::Vector.1398"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %26
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"* %23, %"class.blink::NameSource"* %27, %"class.blink::NameSource"* %20, i1 zeroext false)
  %28 = bitcast %"class.WTF::Vector.1398"* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = load i32, i32* %24, align 4
  %31 = zext i32 %30 to i64
  %32 = mul nuw nsw i64 %31, 56
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %29, i64 %32) #8
  %33 = load i8*, i8** %28, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %33) #8
  %34 = bitcast %"class.WTF::Vector.1398"* %0 to i64*
  store atomic i64 %21, i64* %34 monotonic, align 8
  %35 = trunc i64 %18 to i32
  %36 = getelementptr inbounds %"class.WTF::Vector.1398", %"class.WTF::Vector.1398"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %35, i32* %36, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %15
  %40 = getelementptr inbounds %"class.blink::HeapVectorBacking.1601", %"class.blink::HeapVectorBacking.1601"* %19, i64 0, i32 0
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #8
  br label %42

42:                                               ; preds = %39, %15, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2396745
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2396745) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.3, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = mul i64 %0, 56
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1601"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.5, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = mul i64 %0, 56
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1601"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1601"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 4
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #8
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %34, i8* %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #8
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !3

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #8
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #8
  br i1 %28, label %73, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::NameSource"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !3

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 56
  %51 = icmp ugt i64 %49, 55
  br i1 %51, label %52, label %73

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %54 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %55

55:                                               ; preds = %70, %52
  %56 = phi i64 [ 0, %52 ], [ %71, %70 ]
  %57 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %30, i64 %56, i32 7
  %58 = bitcast %"class.blink::HeapVector.1387"* %57 to i64*
  %59 = load atomic i64, i64* %58 monotonic, align 8
  %60 = icmp eq i64 %59, 0
  %61 = bitcast %"class.blink::HeapVector.1387"* %57 to i8**
  %62 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %62, i64 11
  %64 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8** %61) #8
  br i1 %60, label %70, label %65

65:                                               ; preds = %55
  %66 = inttoptr i64 %59 to i8*
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %54, align 8
  %68 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, i64 5
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %68, align 8
  tail call void %69(%"class.blink::Visitor"* %0, i8* nonnull %66, i8* nonnull %66, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %70

70:                                               ; preds = %65, %55
  %71 = add nuw nsw i64 %56, 1
  %72 = icmp ult i64 %71, %50
  br i1 %72, label %55, label %73

73:                                               ; preds = %70, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::HeapVectorBacking.1601"*
  tail call void @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv(%"class.blink::HeapVectorBacking.1601"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv(%"class.blink::HeapVectorBacking.1601"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapVectorBacking.1601", %"class.blink::HeapVectorBacking.1601"* %0, i64 -8, i32 0
  %3 = getelementptr inbounds i8, i8* %2, i64 6
  %4 = bitcast i8* %3 to i16*
  %5 = load i16, i16* %4, align 2
  %6 = lshr i16 %5, 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %15, !prof !3

8:                                                ; preds = %1
  %9 = ptrtoint i8* %2 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %6 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %8, %15
  %19 = phi i64 [ %14, %8 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 56
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to %"class.blink::NameSource"*
  %24 = icmp ugt i64 %20, 55
  br i1 %24, label %26, label %25

25:                                               ; preds = %62, %18
  ret void

26:                                               ; preds = %18, %62
  %27 = phi i64 [ %64, %62 ], [ 0, %18 ]
  %28 = phi i32 [ %63, %62 ], [ 0, %18 ]
  %29 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %27, i32 5, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #8
  br label %45

45:                                               ; preds = %44, %41, %26
  %46 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %27, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #8
  br label %62

62:                                               ; preds = %45, %58, %61
  %63 = add i32 %28, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %21, %64
  br i1 %65, label %26, label %25
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"*, %"class.blink::NameSource"*, %"class.blink::NameSource"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"class.blink::NameSource"* %0, %1
  br i1 %5, label %116, label %6

6:                                                ; preds = %4, %112
  %7 = phi %"class.blink::NameSource"* [ %114, %112 ], [ %0, %4 ]
  %8 = phi %"class.blink::NameSource"* [ %113, %112 ], [ %2, %4 ]
  %9 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.blink::NameSource"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::NameSource"* %8 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %13 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false) #8
  %15 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 5
  %16 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 5
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.WTF::AtomicString"* %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::AtomicString"* %15 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %21 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 6
  %22 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %21, align 8
  %24 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7
  %25 = bitcast %"class.blink::HeapVector.1387"* %24 to i8*
  %26 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7
  %27 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %29 = bitcast %"class.blink::HeapVector.1387"* %26 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #8
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::HeapVector.1387"* %24 to i64*
  store atomic i64 0, i64* %29 monotonic, align 8
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %27, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %27, align 4
  store i32 %33, i32* %32, align 4
  %35 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %28, align 4
  %37 = load i32, i32* %35, align 4
  store i32 %37, i32* %28, align 4
  store i32 %36, i32* %35, align 4
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %6
  %41 = bitcast %"class.blink::HeapVector.1387"* %24 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #8
  br label %44

44:                                               ; preds = %40, %6
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.blink::HeapVector.1387"* %26 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #8
  br label %51

51:                                               ; preds = %44, %47
  br i1 %3, label %52, label %79

52:                                               ; preds = %51
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %79, label %55

55:                                               ; preds = %52
  %56 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %57 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %56, i64 0, i32 1
  %58 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %57) #8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %62, !prof !3

60:                                               ; preds = %55
  %61 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %57, i8* %61) #8
  br label %62

62:                                               ; preds = %60, %55
  %63 = phi i8* [ %61, %60 ], [ %58, %55 ]
  %64 = bitcast i8* %63 to %"class.blink::ThreadState"**
  %65 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 9
  %67 = load i8, i8* %66, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %79, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 13
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %70, align 8
  %73 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %74 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %74, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.1390"* %76, %"class.blink::Visitor"* %75) #8
  %77 = load i64, i64* %70, align 8
  %78 = add i64 %77, -1
  store i64 %78, i64* %70, align 8
  br label %79

79:                                               ; preds = %69, %62, %52, %51
  %80 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #8
  br label %96

96:                                               ; preds = %95, %92, %79
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #8
  br label %112

112:                                              ; preds = %96, %108, %111
  %113 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 1
  %114 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 1
  %115 = icmp eq %"class.blink::NameSource"* %114, %1
  br i1 %115, label %116, label %6

116:                                              ; preds = %112, %4
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1398"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1398", %"class.WTF::Vector.1398"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.1398", %"class.WTF::Vector.1398"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %24, i64 %25
  ret %"class.blink::NameSource"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
