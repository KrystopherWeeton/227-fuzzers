; ModuleID = '../../ui/gfx/buffer_format_util.cc'
source_filename = "../../ui/gfx/buffer_format_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.gfx::Size" = type { i32, i32 }

@_ZN3gfx12_GLOBAL__N_114kBufferFormatsE = internal unnamed_addr constant [15 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 13, i32 12, i32 14], align 16
@_ZZN3gfx32SubsamplingFactorForBufferFormatENS_12BufferFormatEmE6factor = internal unnamed_addr constant [3 x i64] [i64 1, i64 2, i64 2], align 16
@_ZZN3gfx32SubsamplingFactorForBufferFormatENS_12BufferFormatEmE6factor_0 = internal unnamed_addr constant [2 x i64] [i64 1, i64 2], align 16
@_ZZN3gfx27BufferOffsetForBufferFormatERKNS_4SizeENS_12BufferFormatEmE32offset_in_2x2_sub_sampling_sizes = internal unnamed_addr constant [3 x i64] [i64 0, i64 4, i64 5], align 16
@_ZZN3gfx27BufferOffsetForBufferFormatERKNS_4SizeENS_12BufferFormatEmE32offset_in_2x2_sub_sampling_sizes_1 = internal unnamed_addr constant [2 x i64] [i64 0, i64 4], align 16
@.str = private unnamed_addr constant [4 x i8] c"R_8\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"R_16\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"RG_88\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"BGR_565\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"RGBA_4444\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"RGBX_8888\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"RGBA_8888\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"BGRX_8888\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"BGRA_1010102\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"RGBA_1010102\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"BGRA_8888\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"RGBA_F16\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"YVU_420\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"YUV_420_BIPLANAR\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"P010\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"Invalid Format\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"DEFAULT\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"Y\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"UV\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"U\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"V\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"Invalid Plane\00", align 1
@switch.table._ZN3gfx24AlphaBitsForBufferFormatENS_12BufferFormatE = private unnamed_addr constant [15 x i64] [i64 0, i64 0, i64 0, i64 0, i64 4, i64 0, i64 8, i64 0, i64 2, i64 2, i64 8, i64 16, i64 0, i64 0, i64 0], align 8
@switch.table._ZN3gfx32BufferSizeForBufferFormatCheckedERKNS_4SizeENS_12BufferFormatEPm = private unnamed_addr constant [15 x i64] [i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 3, i64 2, i64 2], align 8
@switch.table._ZN3gfx20BufferFormatToStringENS_12BufferFormatE = private unnamed_addr constant [15 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)], align 8
@switch.table._ZN3gfx19BufferPlaneToStringENS_11BufferPlaneE = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx26GetBufferFormatsForTestingEv(%"class.std::__1::vector"* noalias nocapture sret) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 60) #7
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 60
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast i32** %6 to i8**
  store i8* %5, i8** %7, align 8
  %8 = bitcast i32** %3 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2, i8* align 16 bitcast ([15 x i32]* @_ZN3gfx12_GLOBAL__N_114kBufferFormatsE to i8*), i64 60, i1 false) #8
  %9 = ptrtoint i8* %5 to i64
  store i64 %9, i64* %8, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN3gfx24AlphaBitsForBufferFormatENS_12BufferFormatE(i32) local_unnamed_addr #1 {
  %2 = icmp ult i32 %0, 15
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [15 x i64], [15 x i64]* @switch.table._ZN3gfx24AlphaBitsForBufferFormatENS_12BufferFormatE, i64 0, i64 %4
  %6 = load i64, i64* %5, align 8
  ret i64 %6

7:                                                ; preds = %1
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN3gfx35NumberOfPlanesForLinearBufferFormatENS_12BufferFormatE(i32) local_unnamed_addr #1 {
  %2 = icmp ult i32 %0, 15
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [15 x i64], [15 x i64]* @switch.table._ZN3gfx32BufferSizeForBufferFormatCheckedERKNS_4SizeENS_12BufferFormatEPm, i64 0, i64 %4
  %6 = load i64, i64* %5, align 8
  ret i64 %6

7:                                                ; preds = %1
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN3gfx32SubsamplingFactorForBufferFormatENS_12BufferFormatEm(i32, i64) local_unnamed_addr #1 {
  switch i32 %0, label %9 [
    i32 0, label %10
    i32 1, label %10
    i32 2, label %10
    i32 3, label %10
    i32 4, label %10
    i32 5, label %10
    i32 6, label %10
    i32 7, label %10
    i32 8, label %10
    i32 9, label %10
    i32 10, label %10
    i32 11, label %10
    i32 12, label %3
    i32 13, label %6
    i32 14, label %6
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds [3 x i64], [3 x i64]* @_ZZN3gfx32SubsamplingFactorForBufferFormatENS_12BufferFormatEmE6factor, i64 0, i64 %1
  %5 = load i64, i64* %4, align 8
  br label %10

6:                                                ; preds = %2, %2
  %7 = getelementptr inbounds [2 x i64], [2 x i64]* @_ZZN3gfx32SubsamplingFactorForBufferFormatENS_12BufferFormatEmE6factor_0, i64 0, i64 %1
  %8 = load i64, i64* %7, align 8
  br label %10

9:                                                ; preds = %2
  br label %10

10:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %9, %6, %3
  %11 = phi i64 [ 0, %9 ], [ %8, %6 ], [ %5, %3 ], [ 1, %2 ], [ 1, %2 ], [ 1, %2 ], [ 1, %2 ], [ 1, %2 ], [ 1, %2 ], [ 1, %2 ], [ 1, %2 ], [ 1, %2 ], [ 1, %2 ], [ 1, %2 ], [ 1, %2 ]
  ret i64 %11
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i64 @_ZN3gfx22RowSizeForBufferFormatEmNS_12BufferFormatEm(i64, i32, i64) local_unnamed_addr #2 {
  switch i32 %1, label %45 [
    i32 0, label %4
    i32 1, label %14
    i32 2, label %14
    i32 3, label %14
    i32 4, label %14
    i32 7, label %28
    i32 8, label %28
    i32 9, label %28
    i32 5, label %28
    i32 6, label %28
    i32 10, label %28
    i32 11, label %33
    i32 12, label %38
    i32 13, label %42
    i32 14, label %43
  ]

4:                                                ; preds = %3
  %5 = zext i64 %0 to i65
  %6 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %5, i65 3) #8
  %7 = extractvalue { i65, i1 } %6, 1
  %8 = extractvalue { i65, i1 } %6, 0
  %9 = icmp slt i65 %8, 0
  %10 = or i1 %7, %9
  br i1 %10, label %45, label %11

11:                                               ; preds = %4
  %12 = trunc i65 %8 to i64
  %13 = and i64 %12, -4
  br label %45

14:                                               ; preds = %3, %3, %3, %3
  %15 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %0, i64 2) #8
  %16 = extractvalue { i64, i1 } %15, 1
  br i1 %16, label %45, label %17

17:                                               ; preds = %14
  %18 = extractvalue { i64, i1 } %15, 0
  %19 = zext i64 %18 to i65
  %20 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %19, i65 3) #8
  %21 = extractvalue { i65, i1 } %20, 1
  %22 = extractvalue { i65, i1 } %20, 0
  %23 = icmp slt i65 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %45, label %25

25:                                               ; preds = %17
  %26 = trunc i65 %22 to i64
  %27 = and i64 %26, -4
  br label %45

28:                                               ; preds = %3, %3, %3, %3, %3, %3
  %29 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %0, i64 4) #8
  %30 = extractvalue { i64, i1 } %29, 1
  %31 = extractvalue { i64, i1 } %29, 0
  %32 = select i1 %30, i64 0, i64 %31
  br label %45

33:                                               ; preds = %3
  %34 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %0, i64 8) #8
  %35 = extractvalue { i64, i1 } %34, 1
  %36 = extractvalue { i64, i1 } %34, 0
  %37 = select i1 %35, i64 0, i64 %36
  ret i64 %37

38:                                               ; preds = %3
  %39 = getelementptr inbounds [3 x i64], [3 x i64]* @_ZZN3gfx32SubsamplingFactorForBufferFormatENS_12BufferFormatEmE6factor, i64 0, i64 %2
  %40 = load i64, i64* %39, align 8
  %41 = udiv i64 %0, %40
  br label %45

42:                                               ; preds = %3
  br label %45

43:                                               ; preds = %3
  %44 = shl i64 %0, 1
  br label %45

45:                                               ; preds = %28, %3, %4, %11, %14, %17, %25, %38, %42, %43
  %46 = phi i64 [ 0, %3 ], [ %44, %43 ], [ %0, %42 ], [ %41, %38 ], [ 0, %14 ], [ 0, %17 ], [ %27, %25 ], [ 0, %4 ], [ %13, %11 ], [ %32, %28 ]
  ret i64 %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx29RowSizeForBufferFormatCheckedEmNS_12BufferFormatEmPm(i64, i32, i64, i64* nocapture) local_unnamed_addr #0 {
  switch i32 %1, label %46 [
    i32 0, label %5
    i32 1, label %15
    i32 2, label %15
    i32 3, label %15
    i32 4, label %15
    i32 7, label %29
    i32 8, label %29
    i32 9, label %29
    i32 5, label %29
    i32 6, label %29
    i32 10, label %29
    i32 11, label %34
    i32 12, label %39
    i32 13, label %43
    i32 14, label %44
  ]

5:                                                ; preds = %4
  %6 = zext i64 %0 to i65
  %7 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %6, i65 3) #8
  %8 = extractvalue { i65, i1 } %7, 1
  %9 = extractvalue { i65, i1 } %7, 0
  %10 = icmp slt i65 %9, 0
  %11 = or i1 %8, %10
  br i1 %11, label %46, label %12

12:                                               ; preds = %5
  %13 = trunc i65 %9 to i64
  %14 = and i64 %13, -4
  store i64 %14, i64* %3, align 8
  br label %46

15:                                               ; preds = %4, %4, %4, %4
  %16 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %0, i64 2) #8
  %17 = extractvalue { i64, i1 } %16, 1
  br i1 %17, label %46, label %18

18:                                               ; preds = %15
  %19 = extractvalue { i64, i1 } %16, 0
  %20 = zext i64 %19 to i65
  %21 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %20, i65 3) #8
  %22 = extractvalue { i65, i1 } %21, 1
  %23 = extractvalue { i65, i1 } %21, 0
  %24 = icmp slt i65 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %46, label %26

26:                                               ; preds = %18
  %27 = trunc i65 %23 to i64
  %28 = and i64 %27, -4
  store i64 %28, i64* %3, align 8
  br label %46

29:                                               ; preds = %4, %4, %4, %4, %4, %4
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %0, i64 4) #8
  %31 = extractvalue { i64, i1 } %30, 1
  br i1 %31, label %46, label %32

32:                                               ; preds = %29
  %33 = extractvalue { i64, i1 } %30, 0
  store i64 %33, i64* %3, align 8
  br label %46

34:                                               ; preds = %4
  %35 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %0, i64 8) #8
  %36 = extractvalue { i64, i1 } %35, 1
  br i1 %36, label %46, label %37

37:                                               ; preds = %34
  %38 = extractvalue { i64, i1 } %35, 0
  store i64 %38, i64* %3, align 8
  br label %46

39:                                               ; preds = %4
  %40 = getelementptr inbounds [3 x i64], [3 x i64]* @_ZZN3gfx32SubsamplingFactorForBufferFormatENS_12BufferFormatEmE6factor, i64 0, i64 %2
  %41 = load i64, i64* %40, align 8
  %42 = udiv i64 %0, %41
  store i64 %42, i64* %3, align 8
  br label %46

43:                                               ; preds = %4
  store i64 %0, i64* %3, align 8
  br label %46

44:                                               ; preds = %4
  %45 = shl i64 %0, 1
  store i64 %45, i64* %3, align 8
  br label %46

46:                                               ; preds = %5, %18, %29, %34, %15, %4, %44, %43, %39, %37, %32, %26, %12
  %47 = phi i1 [ true, %44 ], [ true, %43 ], [ true, %39 ], [ true, %37 ], [ true, %32 ], [ true, %26 ], [ true, %12 ], [ false, %5 ], [ false, %18 ], [ false, %29 ], [ false, %34 ], [ false, %4 ], [ false, %15 ]
  ret i1 %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3gfx25BufferSizeForBufferFormatERKNS_4SizeENS_12BufferFormatE(%"class.gfx::Size"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  store i64 0, i64* %3, align 8
  %5 = call zeroext i1 @_ZN3gfx32BufferSizeForBufferFormatCheckedERKNS_4SizeENS_12BufferFormatEPm(%"class.gfx::Size"* dereferenceable(8) %0, i32 %1, i64* nonnull %3)
  %6 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx32BufferSizeForBufferFormatCheckedERKNS_4SizeENS_12BufferFormatEPm(%"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, i64* nocapture) local_unnamed_addr #0 {
  %4 = icmp ult i32 %1, 15
  br i1 %4, label %5, label %68

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds [15 x i64], [15 x i64]* @switch.table._ZN3gfx32BufferSizeForBufferFormatCheckedERKNS_4SizeENS_12BufferFormatEPm, i64 0, i64 %6
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = shl nsw i64 %11, 1
  %13 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8) #8
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 4) #8
  %17 = extractvalue { i64, i1 } %16, 1
  %18 = extractvalue { i64, i1 } %16, 0
  %19 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 2) #8
  %20 = extractvalue { i64, i1 } %19, 1
  %21 = extractvalue { i64, i1 } %19, 0
  %22 = add nsw i64 %21, 3
  %23 = and i64 %22, -4
  %24 = add nsw i32 %1, -1
  %25 = icmp ult i32 %24, 10
  %26 = zext i1 %25 to i64
  %27 = zext i64 %11 to i65
  %28 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %27, i65 3) #8
  %29 = extractvalue { i65, i1 } %28, 1
  %30 = extractvalue { i65, i1 } %28, 0
  %31 = icmp slt i65 %30, 0
  %32 = or i1 %29, %31
  %33 = trunc i65 %30 to i64
  %34 = and i64 %33, -4
  %35 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  br label %38

38:                                               ; preds = %64, %5
  %39 = phi i64 [ 0, %5 ], [ %66, %64 ]
  %40 = phi i64 [ 0, %5 ], [ %65, %64 ]
  switch i32 %1, label %70 [
    i32 0, label %41
    i32 1, label %42
    i32 2, label %42
    i32 3, label %42
    i32 4, label %42
    i32 7, label %43
    i32 8, label %43
    i32 9, label %43
    i32 5, label %43
    i32 6, label %43
    i32 10, label %43
    i32 11, label %44
    i32 12, label %45
    i32 13, label %50
    i32 14, label %49
  ]

41:                                               ; preds = %38
  br i1 %32, label %70, label %54

42:                                               ; preds = %38, %38, %38, %38
  br i1 %20, label %70, label %54

43:                                               ; preds = %38, %38, %38, %38, %38, %38
  br i1 %17, label %70, label %54

44:                                               ; preds = %38
  br i1 %14, label %70, label %54

45:                                               ; preds = %38
  %46 = getelementptr inbounds [3 x i64], [3 x i64]* @_ZZN3gfx32SubsamplingFactorForBufferFormatENS_12BufferFormatEmE6factor, i64 0, i64 %39
  %47 = load i64, i64* %46, align 8
  %48 = udiv i64 %11, %47
  br label %54

49:                                               ; preds = %38
  br label %50

50:                                               ; preds = %49, %38
  %51 = phi i64 [ %12, %49 ], [ %11, %38 ]
  %52 = getelementptr inbounds [2 x i64], [2 x i64]* @_ZZN3gfx32SubsamplingFactorForBufferFormatENS_12BufferFormatEmE6factor_0, i64 0, i64 %39
  %53 = load i64, i64* %52, align 8
  br label %54

54:                                               ; preds = %42, %43, %41, %44, %45, %50
  %55 = phi i64 [ %51, %50 ], [ %48, %45 ], [ %34, %41 ], [ %15, %44 ], [ %23, %42 ], [ %18, %43 ]
  %56 = phi i64 [ %53, %50 ], [ %47, %45 ], [ 1, %41 ], [ 1, %44 ], [ %26, %42 ], [ %26, %43 ]
  %57 = udiv i64 %37, %56
  %58 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %55, i64 %57) #8
  %59 = extractvalue { i64, i1 } %58, 1
  br i1 %59, label %70, label %60

60:                                               ; preds = %54
  %61 = extractvalue { i64, i1 } %58, 0
  %62 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %40, i64 %61) #8
  %63 = extractvalue { i64, i1 } %62, 1
  br i1 %63, label %70, label %64

64:                                               ; preds = %60
  %65 = extractvalue { i64, i1 } %62, 0
  %66 = add nuw nsw i64 %39, 1
  %67 = icmp eq i64 %66, %8
  br i1 %67, label %68, label %38

68:                                               ; preds = %64, %3
  %69 = phi i64 [ 0, %3 ], [ %65, %64 ]
  store i64 %69, i64* %2, align 8
  br label %70

70:                                               ; preds = %44, %43, %42, %41, %38, %54, %60, %68
  %71 = phi i1 [ true, %68 ], [ false, %60 ], [ false, %54 ], [ false, %38 ], [ false, %41 ], [ false, %42 ], [ false, %43 ], [ false, %44 ]
  ret i1 %71
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN3gfx27BufferOffsetForBufferFormatERKNS_4SizeENS_12BufferFormatEm(%"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, i64) local_unnamed_addr #4 {
  switch i32 %1, label %43 [
    i32 14, label %30
    i32 13, label %17
    i32 12, label %4
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds [3 x i64], [3 x i64]* @_ZZN3gfx27BufferOffsetForBufferFormatERKNS_4SizeENS_12BufferFormatEmE32offset_in_2x2_sub_sampling_sizes, i64 0, i64 %2
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = sdiv i32 %8, 2
  %10 = sext i32 %9 to i64
  %11 = mul i64 %6, %10
  %12 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sdiv i32 %13, 2
  %15 = sext i32 %14 to i64
  %16 = mul i64 %11, %15
  br label %43

17:                                               ; preds = %3
  %18 = getelementptr inbounds [2 x i64], [2 x i64]* @_ZZN3gfx27BufferOffsetForBufferFormatERKNS_4SizeENS_12BufferFormatEmE32offset_in_2x2_sub_sampling_sizes_1, i64 0, i64 %2
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = sdiv i32 %21, 2
  %23 = sext i32 %22 to i64
  %24 = mul i64 %19, %23
  %25 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = sdiv i32 %26, 2
  %28 = sext i32 %27 to i64
  %29 = mul i64 %24, %28
  br label %43

30:                                               ; preds = %3
  %31 = getelementptr inbounds [2 x i64], [2 x i64]* @_ZZN3gfx27BufferOffsetForBufferFormatERKNS_4SizeENS_12BufferFormatEmE32offset_in_2x2_sub_sampling_sizes_1, i64 0, i64 %2
  %32 = load i64, i64* %31, align 8
  %33 = shl i64 %32, 1
  %34 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = sdiv i32 %35, 2
  %37 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = sdiv i32 %38, 2
  %40 = add nsw i32 %39, %36
  %41 = sext i32 %40 to i64
  %42 = mul i64 %33, %41
  br label %43

43:                                               ; preds = %3, %30, %17, %4
  %44 = phi i64 [ %42, %30 ], [ %29, %17 ], [ %16, %4 ], [ 0, %3 ]
  ret i64 %44
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN3gfx20BufferFormatToStringENS_12BufferFormatE(i32) local_unnamed_addr #1 {
  %2 = icmp ult i32 %0, 15
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [15 x i8*], [15 x i8*]* @switch.table._ZN3gfx20BufferFormatToStringENS_12BufferFormatE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN3gfx19BufferPlaneToStringENS_11BufferPlaneE(i32) local_unnamed_addr #1 {
  %2 = icmp ult i32 %0, 5
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table._ZN3gfx19BufferPlaneToStringENS_11BufferPlaneE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0)
}

; Function Attrs: nounwind readnone speculatable
declare { i65, i1 } @llvm.sadd.with.overflow.i65(i65, i65) #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
