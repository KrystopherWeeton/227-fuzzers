; ModuleID = '../../third_party/webrtc/modules/audio_coding/neteq/audio_vector.cc'
source_filename = "../../third_party/webrtc/modules/audio_coding/neteq/audio_vector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::AudioVector" = type { i32 (...)**, %"class.std::__1::unique_ptr", i64, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i16* }

@_ZTVN6webrtc11AudioVectorE = hidden unnamed_addr constant { [22 x i8*] } { [22 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::AudioVector"*)* @_ZN6webrtc11AudioVectorD2Ev to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*)* @_ZN6webrtc11AudioVectorD0Ev to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*)* @_ZN6webrtc11AudioVector5ClearEv to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*)* @_ZNK6webrtc11AudioVector6CopyToEPS0_ to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*, i64, i64, i16*)* @_ZNK6webrtc11AudioVector6CopyToEmmPs to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*)* @_ZN6webrtc11AudioVector9PushFrontERKS0_ to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*, i16*, i64)* @_ZN6webrtc11AudioVector9PushFrontEPKsm to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*)* @_ZN6webrtc11AudioVector8PushBackERKS0_ to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64, i64)* @_ZN6webrtc11AudioVector8PushBackERKS0_mm to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*, i16*, i64)* @_ZN6webrtc11AudioVector8PushBackEPKsm to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*, i64)* @_ZN6webrtc11AudioVector8PopFrontEm to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*, i64)* @_ZN6webrtc11AudioVector7PopBackEm to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*, i64)* @_ZN6webrtc11AudioVector6ExtendEm to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*, i16*, i64, i64)* @_ZN6webrtc11AudioVector8InsertAtEPKsmm to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*, i64, i64)* @_ZN6webrtc11AudioVector13InsertZerosAtEmm to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64, i64)* @_ZN6webrtc11AudioVector11OverwriteAtERKS0_mm to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*, i16*, i64, i64)* @_ZN6webrtc11AudioVector11OverwriteAtEPKsmm to i8*), i8* bitcast (void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64)* @_ZN6webrtc11AudioVector9CrossFadeERKS0_m to i8*), i8* bitcast (i64 (%"class.webrtc::AudioVector"*)* @_ZNK6webrtc11AudioVector4SizeEv to i8*), i8* bitcast (i1 (%"class.webrtc::AudioVector"*)* @_ZNK6webrtc11AudioVector5EmptyEv to i8*)] }, align 8

@_ZN6webrtc11AudioVectorC1Ev = hidden unnamed_addr alias void (%"class.webrtc::AudioVector"*), void (%"class.webrtc::AudioVector"*)* @_ZN6webrtc11AudioVectorC2Ev
@_ZN6webrtc11AudioVectorC1Em = hidden unnamed_addr alias void (%"class.webrtc::AudioVector"*, i64), void (%"class.webrtc::AudioVector"*, i64)* @_ZN6webrtc11AudioVectorC2Em
@_ZN6webrtc11AudioVectorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::AudioVector"*), void (%"class.webrtc::AudioVector"*)* @_ZN6webrtc11AudioVectorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVectorC2Ev(%"class.webrtc::AudioVector"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN6webrtc11AudioVectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1
  %4 = tail call i8* @_Znam(i64 22) #7
  %5 = ptrtoint i8* %4 to i64
  %6 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  store i64 11, i64* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %4, i8 0, i64 22, i1 false) #8
  %9 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVectorC2Em(%"class.webrtc::AudioVector"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN6webrtc11AudioVectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1
  %5 = add i64 %1, 1
  %6 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %5, i64 2)
  %7 = extractvalue { i64, i1 } %6, 1
  %8 = extractvalue { i64, i1 } %6, 0
  %9 = select i1 %7, i64 -1, i64 %8
  %10 = tail call i8* @_Znam(i64 %9) #7
  %11 = ptrtoint i8* %10 to i64
  %12 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  store i64 %5, i64* %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  store i64 %1, i64* %15, align 8
  %16 = shl i64 %5, 1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %10, i8 0, i64 %16, i1 false)
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVectorD2Ev(%"class.webrtc::AudioVector"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN6webrtc11AudioVectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i16*, i16** %3, align 8
  store i16* null, i16** %3, align 8
  %5 = icmp eq i16* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i16* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVectorD0Ev(%"class.webrtc::AudioVector"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN6webrtc11AudioVectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i16*, i16** %3, align 8
  store i16* null, i16** %3, align 8
  %5 = icmp eq i16* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i16* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.webrtc::AudioVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc11AudioVector5ClearEv(%"class.webrtc::AudioVector"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  %3 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc11AudioVector6CopyToEPS0_(%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %4 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %4, i64 18
  %6 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %5, align 8
  %7 = tail call i64 %6(%"class.webrtc::AudioVector"* %0) #8
  %8 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %38, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.webrtc::AudioVector"* %1 to i64 (%"class.webrtc::AudioVector"*)***
  %13 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %12, align 8
  %14 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %13, i64 18
  %15 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %14, align 8
  %16 = tail call i64 %15(%"class.webrtc::AudioVector"* %1) #8
  %17 = add i64 %7, 1
  %18 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %17, i64 2) #8
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 -1, i64 %20
  %22 = tail call i8* @_Znam(i64 %21) #7
  %23 = bitcast i8* %22 to i16*
  %24 = ptrtoint i8* %22 to i64
  %25 = bitcast %"class.webrtc::AudioVector"* %1 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %26 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %26, i64 4
  %28 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %27, align 8
  tail call void %28(%"class.webrtc::AudioVector"* %1, i64 %16, i64 0, i16* nonnull %23) #8
  %29 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 1
  %30 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  store i64 %24, i64* %30, align 8
  %33 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 3
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 4
  store i64 %16, i64* %34, align 8
  store i64 %17, i64* %8, align 8
  %35 = icmp eq i16* %32, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %11
  %37 = bitcast i16* %32 to i8*
  tail call void @_ZdaPv(i8* %37) #7
  br label %38

38:                                               ; preds = %2, %11, %36
  %39 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %3, align 8
  %40 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %39, i64 18
  %41 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %40, align 8
  %42 = tail call i64 %41(%"class.webrtc::AudioVector"* %0) #8
  %43 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %44 = load i16*, i16** %43, align 8
  %45 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %46 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %46, i64 4
  %48 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %47, align 8
  tail call void %48(%"class.webrtc::AudioVector"* %0, i64 %42, i64 0, i16* %44) #8
  %49 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 3
  store i64 0, i64* %49, align 8
  %50 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %3, align 8
  %51 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %50, i64 18
  %52 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %51, align 8
  %53 = tail call i64 %52(%"class.webrtc::AudioVector"* %0) #8
  %54 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 4
  store i64 %53, i64* %54, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector7ReserveEm(%"class.webrtc::AudioVector"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %33, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %8 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %8, i64 18
  %10 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %9, align 8
  %11 = tail call i64 %10(%"class.webrtc::AudioVector"* %0) #8
  %12 = add i64 %1, 1
  %13 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %12, i64 2)
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 -1, i64 %15
  %17 = tail call i8* @_Znam(i64 %16) #7
  %18 = bitcast i8* %17 to i16*
  %19 = ptrtoint i8* %17 to i64
  %20 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %21 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %21, i64 4
  %23 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %22, align 8
  tail call void %23(%"class.webrtc::AudioVector"* %0, i64 %11, i64 0, i16* nonnull %18) #8
  %24 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load i16*, i16** %26, align 8
  store i64 %19, i64* %25, align 8
  %28 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  store i64 %11, i64* %29, align 8
  store i64 %12, i64* %3, align 8
  %30 = icmp eq i16* %27, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %6
  %32 = bitcast i16* %27 to i8*
  tail call void @_ZdaPv(i8* %32) #7
  br label %33

33:                                               ; preds = %31, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc11AudioVector6CopyToEmmPs(%"class.webrtc::AudioVector"*, i64, i64, i16* nocapture) unnamed_addr #0 align 2 {
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %38, label %6

6:                                                ; preds = %4
  %7 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %8 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %8, i64 18
  %10 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %9, align 8
  %11 = tail call i64 %10(%"class.webrtc::AudioVector"* %0) #8
  %12 = sub i64 %11, %2
  %13 = icmp ult i64 %12, %1
  %14 = select i1 %13, i64 %12, i64 %1
  %15 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, %2
  %18 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = urem i64 %17, %19
  %21 = sub i64 %19, %20
  %22 = icmp ult i64 %21, %14
  %23 = select i1 %22, i64 %21, i64 %14
  %24 = bitcast i16* %3 to i8*
  %25 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load i16*, i16** %25, align 8
  %27 = getelementptr inbounds i16, i16* %26, i64 %20
  %28 = bitcast i16* %27 to i8*
  %29 = shl i64 %23, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %24, i8* align 2 %28, i64 %29, i1 false)
  %30 = sub i64 %14, %23
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %6
  %33 = getelementptr inbounds i16, i16* %3, i64 %23
  %34 = bitcast i16* %33 to i8*
  %35 = bitcast i16** %25 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = shl i64 %30, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %34, i8* align 2 %36, i64 %37, i1 false)
  br label %38

38:                                               ; preds = %32, %6, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector9PushFrontERKS0_(%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.webrtc::AudioVector"* %1 to i64 (%"class.webrtc::AudioVector"*)***
  %4 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %4, i64 18
  %6 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %5, align 8
  %7 = tail call i64 %6(%"class.webrtc::AudioVector"* %1) #8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %74, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %11 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %11, i64 18
  %13 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %12, align 8
  %14 = tail call i64 %13(%"class.webrtc::AudioVector"* %0) #8
  %15 = add i64 %14, %7
  %16 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %17, %15
  br i1 %18, label %45, label %19

19:                                               ; preds = %9
  %20 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %10, align 8
  %21 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %20, i64 18
  %22 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %21, align 8
  %23 = tail call i64 %22(%"class.webrtc::AudioVector"* %0) #8
  %24 = add i64 %15, 1
  %25 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %24, i64 2) #8
  %26 = extractvalue { i64, i1 } %25, 1
  %27 = extractvalue { i64, i1 } %25, 0
  %28 = select i1 %26, i64 -1, i64 %27
  %29 = tail call i8* @_Znam(i64 %28) #7
  %30 = bitcast i8* %29 to i16*
  %31 = ptrtoint i8* %29 to i64
  %32 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %33 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %33, i64 4
  %35 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %34, align 8
  tail call void %35(%"class.webrtc::AudioVector"* %0, i64 %23, i64 0, i16* nonnull %30) #8
  %36 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1
  %37 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 0, i32 0, i32 0, i32 0
  %39 = load i16*, i16** %38, align 8
  store i64 %31, i64* %37, align 8
  %40 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  store i64 0, i64* %40, align 8
  %41 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  store i64 %23, i64* %41, align 8
  store i64 %24, i64* %16, align 8
  %42 = icmp eq i16* %39, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %19
  %44 = bitcast i16* %39 to i8*
  tail call void @_ZdaPv(i8* %44) #7
  br label %45

45:                                               ; preds = %9, %19, %43
  %46 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 3
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = icmp ult i64 %50, %7
  %52 = select i1 %51, i64 %50, i64 %7
  %53 = sub i64 %7, %52
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %45
  %56 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i16*, i64)***
  br label %65

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %59 = load i16*, i16** %58, align 8
  %60 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i16*, i64)***
  %61 = load void (%"class.webrtc::AudioVector"*, i16*, i64)**, void (%"class.webrtc::AudioVector"*, i16*, i64)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %61, i64 6
  %63 = load void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %62, align 8
  tail call void %63(%"class.webrtc::AudioVector"* %0, i16* %59, i64 %53) #8
  %64 = load i64, i64* %48, align 8
  br label %65

65:                                               ; preds = %55, %57
  %66 = phi void (%"class.webrtc::AudioVector"*, i16*, i64)*** [ %56, %55 ], [ %60, %57 ]
  %67 = phi i64 [ %49, %55 ], [ %64, %57 ]
  %68 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %69 = load i16*, i16** %68, align 8
  %70 = getelementptr inbounds i16, i16* %69, i64 %67
  %71 = load void (%"class.webrtc::AudioVector"*, i16*, i64)**, void (%"class.webrtc::AudioVector"*, i16*, i64)*** %66, align 8
  %72 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %71, i64 6
  %73 = load void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %72, align 8
  tail call void %73(%"class.webrtc::AudioVector"* %0, i16* %70, i64 %52) #8
  br label %74

74:                                               ; preds = %2, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector9PushFrontEPKsm(%"class.webrtc::AudioVector"*, i16* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %70, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %7 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %7, i64 18
  %9 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %8, align 8
  %10 = tail call i64 %9(%"class.webrtc::AudioVector"* %0) #8
  %11 = add i64 %10, %2
  %12 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %13, %11
  br i1 %14, label %41, label %15

15:                                               ; preds = %5
  %16 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %6, align 8
  %17 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %16, i64 18
  %18 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %17, align 8
  %19 = tail call i64 %18(%"class.webrtc::AudioVector"* %0) #8
  %20 = add i64 %11, 1
  %21 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %20, i64 2) #8
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %25 = tail call i8* @_Znam(i64 %24) #7
  %26 = bitcast i8* %25 to i16*
  %27 = ptrtoint i8* %25 to i64
  %28 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %29 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %29, i64 4
  %31 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %30, align 8
  tail call void %31(%"class.webrtc::AudioVector"* %0, i64 %19, i64 0, i16* nonnull %26) #8
  %32 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1
  %33 = bitcast %"class.std::__1::unique_ptr"* %32 to i64*
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load i16*, i16** %34, align 8
  store i64 %27, i64* %33, align 8
  %36 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  store i64 %19, i64* %37, align 8
  store i64 %20, i64* %12, align 8
  %38 = icmp eq i16* %35, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %15
  %40 = bitcast i16* %35 to i8*
  tail call void @_ZdaPv(i8* %40) #7
  br label %41

41:                                               ; preds = %5, %15, %39
  %42 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  %43 = load i64, i64* %42, align 8
  %44 = icmp ult i64 %43, %2
  %45 = select i1 %44, i64 %43, i64 %2
  %46 = sub i64 %43, %45
  %47 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load i16*, i16** %47, align 8
  %49 = getelementptr inbounds i16, i16* %48, i64 %46
  %50 = bitcast i16* %49 to i8*
  %51 = sub i64 %2, %45
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  %53 = bitcast i16* %52 to i8*
  %54 = shl i64 %45, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %50, i8* align 2 %53, i64 %54, i1 false)
  %55 = icmp eq i64 %51, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %41
  %57 = load i64, i64* %12, align 8
  %58 = sub i64 %57, %51
  %59 = load i16*, i16** %47, align 8
  %60 = getelementptr inbounds i16, i16* %59, i64 %58
  %61 = bitcast i16* %60 to i8*
  %62 = bitcast i16* %1 to i8*
  %63 = shl i64 %51, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %61, i8* align 2 %62, i64 %63, i1 false)
  br label %64

64:                                               ; preds = %41, %56
  %65 = load i64, i64* %42, align 8
  %66 = load i64, i64* %12, align 8
  %67 = sub i64 %65, %2
  %68 = add i64 %67, %66
  %69 = urem i64 %68, %66
  store i64 %69, i64* %42, align 8
  br label %70

70:                                               ; preds = %3, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector8PushBackERKS0_(%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.webrtc::AudioVector"* %1 to i64 (%"class.webrtc::AudioVector"*)***
  %4 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %4, i64 18
  %6 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %5, align 8
  %7 = tail call i64 %6(%"class.webrtc::AudioVector"* %1) #8
  %8 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64, i64)***
  %9 = load void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64, i64)**, void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64, i64)*, void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64, i64)** %9, i64 8
  %11 = load void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64, i64)*, void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64, i64)** %10, align 8
  tail call void %11(%"class.webrtc::AudioVector"* %0, %"class.webrtc::AudioVector"* dereferenceable(40) %1, i64 %7, i64 0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector8PushBackERKS0_mm(%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"* nocapture readonly dereferenceable(40), i64, i64) unnamed_addr #0 align 2 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %66, label %6

6:                                                ; preds = %4
  %7 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %8 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %8, i64 18
  %10 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %9, align 8
  %11 = tail call i64 %10(%"class.webrtc::AudioVector"* %0) #8
  %12 = add i64 %11, %2
  %13 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %14, %12
  br i1 %15, label %42, label %16

16:                                               ; preds = %6
  %17 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %7, align 8
  %18 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %17, i64 18
  %19 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %18, align 8
  %20 = tail call i64 %19(%"class.webrtc::AudioVector"* %0) #8
  %21 = add i64 %12, 1
  %22 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %21, i64 2) #8
  %23 = extractvalue { i64, i1 } %22, 1
  %24 = extractvalue { i64, i1 } %22, 0
  %25 = select i1 %23, i64 -1, i64 %24
  %26 = tail call i8* @_Znam(i64 %25) #7
  %27 = bitcast i8* %26 to i16*
  %28 = ptrtoint i8* %26 to i64
  %29 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %30 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %30, i64 4
  %32 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %31, align 8
  tail call void %32(%"class.webrtc::AudioVector"* %0, i64 %20, i64 0, i16* nonnull %27) #8
  %33 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1
  %34 = bitcast %"class.std::__1::unique_ptr"* %33 to i64*
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  store i64 %28, i64* %34, align 8
  %37 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  store i64 %20, i64* %38, align 8
  store i64 %21, i64* %13, align 8
  %39 = icmp eq i16* %36, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %16
  %41 = bitcast i16* %36 to i8*
  tail call void @_ZdaPv(i8* %41) #7
  br label %42

42:                                               ; preds = %6, %16, %40
  %43 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 3
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, %3
  %46 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = urem i64 %45, %47
  %49 = sub i64 %47, %48
  %50 = icmp ult i64 %49, %2
  %51 = select i1 %50, i64 %49, i64 %2
  %52 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = getelementptr inbounds i16, i16* %53, i64 %48
  %55 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i16*, i64)***
  %56 = load void (%"class.webrtc::AudioVector"*, i16*, i64)**, void (%"class.webrtc::AudioVector"*, i16*, i64)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %56, i64 9
  %58 = load void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %57, align 8
  tail call void %58(%"class.webrtc::AudioVector"* %0, i16* %54, i64 %51) #8
  %59 = sub i64 %2, %51
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %42
  %62 = load i16*, i16** %52, align 8
  %63 = load void (%"class.webrtc::AudioVector"*, i16*, i64)**, void (%"class.webrtc::AudioVector"*, i16*, i64)*** %55, align 8
  %64 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %63, i64 9
  %65 = load void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %64, align 8
  tail call void %65(%"class.webrtc::AudioVector"* %0, i16* %62, i64 %59) #8
  br label %66

66:                                               ; preds = %61, %42, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector8PushBackEPKsm(%"class.webrtc::AudioVector"*, i16* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %68, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %7 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %7, i64 18
  %9 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %8, align 8
  %10 = tail call i64 %9(%"class.webrtc::AudioVector"* %0) #8
  %11 = add i64 %10, %2
  %12 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %13, %11
  br i1 %14, label %42, label %15

15:                                               ; preds = %5
  %16 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %6, align 8
  %17 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %16, i64 18
  %18 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %17, align 8
  %19 = tail call i64 %18(%"class.webrtc::AudioVector"* %0) #8
  %20 = add i64 %11, 1
  %21 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %20, i64 2) #8
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %25 = tail call i8* @_Znam(i64 %24) #7
  %26 = bitcast i8* %25 to i16*
  %27 = ptrtoint i8* %25 to i64
  %28 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %29 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %29, i64 4
  %31 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %30, align 8
  tail call void %31(%"class.webrtc::AudioVector"* %0, i64 %19, i64 0, i16* nonnull %26) #8
  %32 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1
  %33 = bitcast %"class.std::__1::unique_ptr"* %32 to i64*
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load i16*, i16** %34, align 8
  store i64 %27, i64* %33, align 8
  %36 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  store i64 %19, i64* %37, align 8
  store i64 %20, i64* %12, align 8
  %38 = icmp eq i16* %35, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %15
  %40 = bitcast i16* %35 to i8*
  tail call void @_ZdaPv(i8* %40) #7
  %41 = load i64, i64* %12, align 8
  br label %42

42:                                               ; preds = %5, %15, %39
  %43 = phi i64 [ %13, %5 ], [ %20, %15 ], [ %41, %39 ]
  %44 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp ult i64 %46, %2
  %48 = select i1 %47, i64 %46, i64 %2
  %49 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %50 = load i16*, i16** %49, align 8
  %51 = getelementptr inbounds i16, i16* %50, i64 %45
  %52 = bitcast i16* %51 to i8*
  %53 = bitcast i16* %1 to i8*
  %54 = shl i64 %48, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %52, i8* align 2 %53, i64 %54, i1 false)
  %55 = sub i64 %2, %48
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %42
  %58 = bitcast i16** %49 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds i16, i16* %1, i64 %48
  %61 = bitcast i16* %60 to i8*
  %62 = shl i64 %55, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %59, i8* align 2 %61, i64 %62, i1 false)
  br label %63

63:                                               ; preds = %42, %57
  %64 = load i64, i64* %44, align 8
  %65 = add i64 %64, %2
  %66 = load i64, i64* %12, align 8
  %67 = urem i64 %65, %66
  store i64 %67, i64* %44, align 8
  br label %68

68:                                               ; preds = %3, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector8PopFrontEm(%"class.webrtc::AudioVector"*, i64) unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %18, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %6 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %6, i64 18
  %8 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %7, align 8
  %9 = tail call i64 %8(%"class.webrtc::AudioVector"* %0) #8
  %10 = icmp ult i64 %9, %1
  %11 = select i1 %10, i64 %9, i64 %1
  %12 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %11, %13
  %15 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = urem i64 %14, %16
  store i64 %17, i64* %12, align 8
  br label %18

18:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector7PopBackEm(%"class.webrtc::AudioVector"*, i64) unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %6 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %6, i64 18
  %8 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %7, align 8
  %9 = tail call i64 %8(%"class.webrtc::AudioVector"* %0) #8
  %10 = icmp ult i64 %9, %1
  %11 = select i1 %10, i64 %9, i64 %1
  %12 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, %13
  %17 = sub i64 %16, %11
  %18 = urem i64 %17, %15
  store i64 %18, i64* %12, align 8
  br label %19

19:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector6ExtendEm(%"class.webrtc::AudioVector"*, i64) unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %6 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %6, i64 18
  %8 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %7, align 8
  %9 = tail call i64 %8(%"class.webrtc::AudioVector"* %0) #8
  tail call void @_ZN6webrtc11AudioVector21InsertZerosByPushBackEmm(%"class.webrtc::AudioVector"* %0, i64 %1, i64 %9)
  br label %10

10:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector21InsertZerosByPushBackEmm(%"class.webrtc::AudioVector"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %5 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %5, i64 18
  %7 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %6, align 8
  %8 = tail call i64 %7(%"class.webrtc::AudioVector"* %0) #8
  %9 = sub i64 %8, %2
  %10 = icmp ne i64 %9, 0
  br i1 %10, label %11, label %26

11:                                               ; preds = %3
  %12 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %9, i64 2)
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = select i1 %13, i64 -1, i64 %14
  %16 = tail call i8* @_Znam(i64 %15) #7
  %17 = bitcast i8* %16 to i16*
  %18 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %19 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %19, i64 4
  %21 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %20, align 8
  tail call void %21(%"class.webrtc::AudioVector"* %0, i64 %9, i64 %2, i16* nonnull %17) #8
  %22 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64)***
  %23 = load void (%"class.webrtc::AudioVector"*, i64)**, void (%"class.webrtc::AudioVector"*, i64)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64)*, void (%"class.webrtc::AudioVector"*, i64)** %23, i64 11
  %25 = load void (%"class.webrtc::AudioVector"*, i64)*, void (%"class.webrtc::AudioVector"*, i64)** %24, align 8
  tail call void %25(%"class.webrtc::AudioVector"* %0, i64 %9) #8
  br label %26

26:                                               ; preds = %11, %3
  %27 = phi i8* [ %16, %11 ], [ null, %3 ]
  %28 = phi i16* [ %17, %11 ], [ null, %3 ]
  %29 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %4, align 8
  %30 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %29, i64 18
  %31 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %30, align 8
  %32 = tail call i64 %31(%"class.webrtc::AudioVector"* %0) #8
  %33 = add i64 %9, %1
  %34 = add i64 %33, %32
  %35 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = icmp ugt i64 %36, %34
  br i1 %37, label %65, label %38

38:                                               ; preds = %26
  %39 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %4, align 8
  %40 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %39, i64 18
  %41 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %40, align 8
  %42 = tail call i64 %41(%"class.webrtc::AudioVector"* %0) #8
  %43 = add i64 %34, 1
  %44 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %43, i64 2) #8
  %45 = extractvalue { i64, i1 } %44, 1
  %46 = extractvalue { i64, i1 } %44, 0
  %47 = select i1 %45, i64 -1, i64 %46
  %48 = tail call i8* @_Znam(i64 %47) #7
  %49 = bitcast i8* %48 to i16*
  %50 = ptrtoint i8* %48 to i64
  %51 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %52 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %52, i64 4
  %54 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %53, align 8
  tail call void %54(%"class.webrtc::AudioVector"* %0, i64 %42, i64 0, i16* nonnull %49) #8
  %55 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1
  %56 = bitcast %"class.std::__1::unique_ptr"* %55 to i64*
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 0, i32 0, i32 0, i32 0
  %58 = load i16*, i16** %57, align 8
  store i64 %50, i64* %56, align 8
  %59 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  store i64 0, i64* %59, align 8
  %60 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  store i64 %42, i64* %60, align 8
  store i64 %43, i64* %35, align 8
  %61 = icmp eq i16* %58, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %38
  %63 = bitcast i16* %58 to i8*
  tail call void @_ZdaPv(i8* %63) #7
  %64 = load i64, i64* %35, align 8
  br label %65

65:                                               ; preds = %26, %38, %62
  %66 = phi i64 [ %36, %26 ], [ %43, %38 ], [ %64, %62 ]
  %67 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %66, %68
  %70 = icmp ult i64 %69, %1
  %71 = select i1 %70, i64 %69, i64 %1
  %72 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load i16*, i16** %72, align 8
  %74 = getelementptr inbounds i16, i16* %73, i64 %68
  %75 = bitcast i16* %74 to i8*
  %76 = shl i64 %71, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %75, i8 0, i64 %76, i1 false)
  %77 = sub i64 %1, %71
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %65
  %80 = bitcast i16** %72 to i8**
  %81 = load i8*, i8** %80, align 8
  %82 = shl i64 %77, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %81, i8 0, i64 %82, i1 false)
  br label %83

83:                                               ; preds = %65, %79
  %84 = load i64, i64* %67, align 8
  %85 = add i64 %84, %1
  %86 = load i64, i64* %35, align 8
  %87 = urem i64 %85, %86
  store i64 %87, i64* %67, align 8
  br i1 %10, label %88, label %93

88:                                               ; preds = %83
  %89 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i16*, i64)***
  %90 = load void (%"class.webrtc::AudioVector"*, i16*, i64)**, void (%"class.webrtc::AudioVector"*, i16*, i64)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %90, i64 9
  %92 = load void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %91, align 8
  tail call void %92(%"class.webrtc::AudioVector"* %0, i16* %28, i64 %9) #8
  br label %93

93:                                               ; preds = %88, %83
  %94 = icmp eq i16* %28, null
  br i1 %94, label %96, label %95

95:                                               ; preds = %93
  tail call void @_ZdaPv(i8* %27) #7
  br label %96

96:                                               ; preds = %93, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector8InsertAtEPKsmm(%"class.webrtc::AudioVector"*, i16*, i64, i64) unnamed_addr #0 align 2 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %4
  %7 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %8 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %8, i64 18
  %10 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %9, align 8
  %11 = tail call i64 %10(%"class.webrtc::AudioVector"* %0) #8
  %12 = icmp ugt i64 %11, %3
  %13 = select i1 %12, i64 %3, i64 %11
  %14 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %7, align 8
  %15 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %14, i64 18
  %16 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %15, align 8
  %17 = tail call i64 %16(%"class.webrtc::AudioVector"* %0) #8
  %18 = sub i64 %17, %13
  %19 = icmp ugt i64 %13, %18
  br i1 %19, label %21, label %20

20:                                               ; preds = %6
  tail call void @_ZN6webrtc11AudioVector17InsertByPushFrontEPKsmm(%"class.webrtc::AudioVector"* %0, i16* %1, i64 %2, i64 %13)
  br label %22

21:                                               ; preds = %6
  tail call void @_ZN6webrtc11AudioVector16InsertByPushBackEPKsmm(%"class.webrtc::AudioVector"* %0, i16* %1, i64 %2, i64 %13)
  br label %22

22:                                               ; preds = %4, %21, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector17InsertByPushFrontEPKsmm(%"class.webrtc::AudioVector"*, i16*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = icmp ne i64 %3, 0
  br i1 %5, label %6, label %21

6:                                                ; preds = %4
  %7 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 2)
  %8 = extractvalue { i64, i1 } %7, 1
  %9 = extractvalue { i64, i1 } %7, 0
  %10 = select i1 %8, i64 -1, i64 %9
  %11 = tail call i8* @_Znam(i64 %10) #7
  %12 = bitcast i8* %11 to i16*
  %13 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %14 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %14, i64 4
  %16 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %15, align 8
  tail call void %16(%"class.webrtc::AudioVector"* %0, i64 %3, i64 0, i16* nonnull %12) #8
  %17 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64)***
  %18 = load void (%"class.webrtc::AudioVector"*, i64)**, void (%"class.webrtc::AudioVector"*, i64)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64)*, void (%"class.webrtc::AudioVector"*, i64)** %18, i64 10
  %20 = load void (%"class.webrtc::AudioVector"*, i64)*, void (%"class.webrtc::AudioVector"*, i64)** %19, align 8
  tail call void %20(%"class.webrtc::AudioVector"* %0, i64 %3) #8
  br label %21

21:                                               ; preds = %6, %4
  %22 = phi i8* [ %11, %6 ], [ null, %4 ]
  %23 = phi i16* [ %12, %6 ], [ null, %4 ]
  %24 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %25 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %24, align 8
  %26 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %25, i64 18
  %27 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %26, align 8
  %28 = tail call i64 %27(%"class.webrtc::AudioVector"* %0) #8
  %29 = add i64 %3, %2
  %30 = add i64 %29, %28
  %31 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = icmp ugt i64 %32, %30
  br i1 %33, label %60, label %34

34:                                               ; preds = %21
  %35 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %24, align 8
  %36 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %35, i64 18
  %37 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %36, align 8
  %38 = tail call i64 %37(%"class.webrtc::AudioVector"* %0) #8
  %39 = add i64 %30, 1
  %40 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %39, i64 2) #8
  %41 = extractvalue { i64, i1 } %40, 1
  %42 = extractvalue { i64, i1 } %40, 0
  %43 = select i1 %41, i64 -1, i64 %42
  %44 = tail call i8* @_Znam(i64 %43) #7
  %45 = bitcast i8* %44 to i16*
  %46 = ptrtoint i8* %44 to i64
  %47 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %48 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %48, i64 4
  %50 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %49, align 8
  tail call void %50(%"class.webrtc::AudioVector"* %0, i64 %38, i64 0, i16* nonnull %45) #8
  %51 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr"* %51 to i64*
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %51, i64 0, i32 0, i32 0, i32 0
  %54 = load i16*, i16** %53, align 8
  store i64 %46, i64* %52, align 8
  %55 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  store i64 %38, i64* %56, align 8
  store i64 %39, i64* %31, align 8
  %57 = icmp eq i16* %54, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %34
  %59 = bitcast i16* %54 to i8*
  tail call void @_ZdaPv(i8* %59) #7
  br label %60

60:                                               ; preds = %21, %34, %58
  %61 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i16*, i64)***
  %62 = load void (%"class.webrtc::AudioVector"*, i16*, i64)**, void (%"class.webrtc::AudioVector"*, i16*, i64)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %62, i64 6
  %64 = load void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %63, align 8
  tail call void %64(%"class.webrtc::AudioVector"* %0, i16* %1, i64 %2) #8
  br i1 %5, label %65, label %69

65:                                               ; preds = %60
  %66 = load void (%"class.webrtc::AudioVector"*, i16*, i64)**, void (%"class.webrtc::AudioVector"*, i16*, i64)*** %61, align 8
  %67 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %66, i64 6
  %68 = load void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %67, align 8
  tail call void %68(%"class.webrtc::AudioVector"* %0, i16* %23, i64 %3) #8
  br label %69

69:                                               ; preds = %65, %60
  %70 = icmp eq i16* %23, null
  br i1 %70, label %72, label %71

71:                                               ; preds = %69
  tail call void @_ZdaPv(i8* %22) #7
  br label %72

72:                                               ; preds = %69, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector16InsertByPushBackEPKsmm(%"class.webrtc::AudioVector"*, i16*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %6 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %6, i64 18
  %8 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %7, align 8
  %9 = tail call i64 %8(%"class.webrtc::AudioVector"* %0) #8
  %10 = sub i64 %9, %3
  %11 = icmp ne i64 %10, 0
  br i1 %11, label %12, label %27

12:                                               ; preds = %4
  %13 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %10, i64 2)
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 -1, i64 %15
  %17 = tail call i8* @_Znam(i64 %16) #7
  %18 = bitcast i8* %17 to i16*
  %19 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %20 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %20, i64 4
  %22 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %21, align 8
  tail call void %22(%"class.webrtc::AudioVector"* %0, i64 %10, i64 %3, i16* nonnull %18) #8
  %23 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64)***
  %24 = load void (%"class.webrtc::AudioVector"*, i64)**, void (%"class.webrtc::AudioVector"*, i64)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64)*, void (%"class.webrtc::AudioVector"*, i64)** %24, i64 11
  %26 = load void (%"class.webrtc::AudioVector"*, i64)*, void (%"class.webrtc::AudioVector"*, i64)** %25, align 8
  tail call void %26(%"class.webrtc::AudioVector"* %0, i64 %10) #8
  br label %27

27:                                               ; preds = %12, %4
  %28 = phi i8* [ %17, %12 ], [ null, %4 ]
  %29 = phi i16* [ %18, %12 ], [ null, %4 ]
  %30 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %5, align 8
  %31 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %30, i64 18
  %32 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %31, align 8
  %33 = tail call i64 %32(%"class.webrtc::AudioVector"* %0) #8
  %34 = add i64 %10, %2
  %35 = add i64 %34, %33
  %36 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = icmp ugt i64 %37, %35
  br i1 %38, label %65, label %39

39:                                               ; preds = %27
  %40 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %5, align 8
  %41 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %40, i64 18
  %42 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %41, align 8
  %43 = tail call i64 %42(%"class.webrtc::AudioVector"* %0) #8
  %44 = add i64 %35, 1
  %45 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %44, i64 2) #8
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %49 = tail call i8* @_Znam(i64 %48) #7
  %50 = bitcast i8* %49 to i16*
  %51 = ptrtoint i8* %49 to i64
  %52 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %53 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %53, i64 4
  %55 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %54, align 8
  tail call void %55(%"class.webrtc::AudioVector"* %0, i64 %43, i64 0, i16* nonnull %50) #8
  %56 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1
  %57 = bitcast %"class.std::__1::unique_ptr"* %56 to i64*
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %56, i64 0, i32 0, i32 0, i32 0
  %59 = load i16*, i16** %58, align 8
  store i64 %51, i64* %57, align 8
  %60 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  store i64 %43, i64* %61, align 8
  store i64 %44, i64* %36, align 8
  %62 = icmp eq i16* %59, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %39
  %64 = bitcast i16* %59 to i8*
  tail call void @_ZdaPv(i8* %64) #7
  br label %65

65:                                               ; preds = %27, %39, %63
  %66 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i16*, i64)***
  %67 = load void (%"class.webrtc::AudioVector"*, i16*, i64)**, void (%"class.webrtc::AudioVector"*, i16*, i64)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %67, i64 9
  %69 = load void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %68, align 8
  tail call void %69(%"class.webrtc::AudioVector"* %0, i16* %1, i64 %2) #8
  br i1 %11, label %70, label %74

70:                                               ; preds = %65
  %71 = load void (%"class.webrtc::AudioVector"*, i16*, i64)**, void (%"class.webrtc::AudioVector"*, i16*, i64)*** %66, align 8
  %72 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %71, i64 9
  %73 = load void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %72, align 8
  tail call void %73(%"class.webrtc::AudioVector"* %0, i16* %29, i64 %10) #8
  br label %74

74:                                               ; preds = %70, %65
  %75 = icmp eq i16* %29, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %74
  tail call void @_ZdaPv(i8* %28) #7
  br label %77

77:                                               ; preds = %74, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector13InsertZerosAtEmm(%"class.webrtc::AudioVector"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %7 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %7, i64 18
  %9 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %8, align 8
  %10 = tail call i64 %9(%"class.webrtc::AudioVector"* %0) #8
  %11 = icmp ugt i64 %10, %2
  %12 = select i1 %11, i64 %2, i64 %10
  %13 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %6, align 8
  %14 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %13, i64 18
  %15 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %14, align 8
  %16 = tail call i64 %15(%"class.webrtc::AudioVector"* %0) #8
  %17 = sub i64 %16, %12
  %18 = icmp ugt i64 %12, %17
  br i1 %18, label %20, label %19

19:                                               ; preds = %5
  tail call void @_ZN6webrtc11AudioVector22InsertZerosByPushFrontEmm(%"class.webrtc::AudioVector"* %0, i64 %1, i64 %12)
  br label %21

20:                                               ; preds = %5
  tail call void @_ZN6webrtc11AudioVector21InsertZerosByPushBackEmm(%"class.webrtc::AudioVector"* %0, i64 %1, i64 %12)
  br label %21

21:                                               ; preds = %3, %20, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector22InsertZerosByPushFrontEmm(%"class.webrtc::AudioVector"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp ne i64 %2, 0
  br i1 %4, label %5, label %20

5:                                                ; preds = %3
  %6 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %2, i64 2)
  %7 = extractvalue { i64, i1 } %6, 1
  %8 = extractvalue { i64, i1 } %6, 0
  %9 = select i1 %7, i64 -1, i64 %8
  %10 = tail call i8* @_Znam(i64 %9) #7
  %11 = bitcast i8* %10 to i16*
  %12 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %13 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %13, i64 4
  %15 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %14, align 8
  tail call void %15(%"class.webrtc::AudioVector"* %0, i64 %2, i64 0, i16* nonnull %11) #8
  %16 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64)***
  %17 = load void (%"class.webrtc::AudioVector"*, i64)**, void (%"class.webrtc::AudioVector"*, i64)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64)*, void (%"class.webrtc::AudioVector"*, i64)** %17, i64 10
  %19 = load void (%"class.webrtc::AudioVector"*, i64)*, void (%"class.webrtc::AudioVector"*, i64)** %18, align 8
  tail call void %19(%"class.webrtc::AudioVector"* %0, i64 %2) #8
  br label %20

20:                                               ; preds = %5, %3
  %21 = phi i8* [ %10, %5 ], [ null, %3 ]
  %22 = phi i16* [ %11, %5 ], [ null, %3 ]
  %23 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %24 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %23, align 8
  %25 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %24, i64 18
  %26 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %25, align 8
  %27 = tail call i64 %26(%"class.webrtc::AudioVector"* %0) #8
  %28 = add i64 %2, %1
  %29 = add i64 %28, %27
  %30 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = icmp ugt i64 %31, %29
  br i1 %32, label %59, label %33

33:                                               ; preds = %20
  %34 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %23, align 8
  %35 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %34, i64 18
  %36 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %35, align 8
  %37 = tail call i64 %36(%"class.webrtc::AudioVector"* %0) #8
  %38 = add i64 %29, 1
  %39 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %38, i64 2) #8
  %40 = extractvalue { i64, i1 } %39, 1
  %41 = extractvalue { i64, i1 } %39, 0
  %42 = select i1 %40, i64 -1, i64 %41
  %43 = tail call i8* @_Znam(i64 %42) #7
  %44 = bitcast i8* %43 to i16*
  %45 = ptrtoint i8* %43 to i64
  %46 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %47 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %47, i64 4
  %49 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %48, align 8
  tail call void %49(%"class.webrtc::AudioVector"* %0, i64 %37, i64 0, i16* nonnull %44) #8
  %50 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1
  %51 = bitcast %"class.std::__1::unique_ptr"* %50 to i64*
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %50, i64 0, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8
  store i64 %45, i64* %51, align 8
  %54 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  store i64 0, i64* %54, align 8
  %55 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  store i64 %37, i64* %55, align 8
  store i64 %38, i64* %30, align 8
  %56 = icmp eq i16* %53, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %33
  %58 = bitcast i16* %53 to i8*
  tail call void @_ZdaPv(i8* %58) #7
  br label %59

59:                                               ; preds = %20, %33, %57
  %60 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  %61 = load i64, i64* %60, align 8
  %62 = icmp ult i64 %61, %1
  %63 = select i1 %62, i64 %61, i64 %1
  %64 = sub i64 %61, %63
  %65 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %66 = load i16*, i16** %65, align 8
  %67 = getelementptr inbounds i16, i16* %66, i64 %64
  %68 = bitcast i16* %67 to i8*
  %69 = shl i64 %63, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %68, i8 0, i64 %69, i1 false)
  %70 = sub i64 %1, %63
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %79, label %72

72:                                               ; preds = %59
  %73 = load i64, i64* %30, align 8
  %74 = sub i64 %73, %70
  %75 = load i16*, i16** %65, align 8
  %76 = getelementptr inbounds i16, i16* %75, i64 %74
  %77 = bitcast i16* %76 to i8*
  %78 = shl i64 %70, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %77, i8 0, i64 %78, i1 false)
  br label %79

79:                                               ; preds = %59, %72
  %80 = load i64, i64* %60, align 8
  %81 = load i64, i64* %30, align 8
  %82 = sub i64 %80, %1
  %83 = add i64 %82, %81
  %84 = urem i64 %83, %81
  store i64 %84, i64* %60, align 8
  br i1 %4, label %85, label %90

85:                                               ; preds = %79
  %86 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i16*, i64)***
  %87 = load void (%"class.webrtc::AudioVector"*, i16*, i64)**, void (%"class.webrtc::AudioVector"*, i16*, i64)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %87, i64 6
  %89 = load void (%"class.webrtc::AudioVector"*, i16*, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64)** %88, align 8
  tail call void %89(%"class.webrtc::AudioVector"* %0, i16* %22, i64 %2) #8
  br label %90

90:                                               ; preds = %85, %79
  %91 = icmp eq i16* %22, null
  br i1 %91, label %93, label %92

92:                                               ; preds = %90
  tail call void @_ZdaPv(i8* %21) #7
  br label %93

93:                                               ; preds = %90, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector11OverwriteAtERKS0_mm(%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"* nocapture readonly dereferenceable(40), i64, i64) unnamed_addr #0 align 2 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %73, label %6

6:                                                ; preds = %4
  %7 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %8 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %8, i64 18
  %10 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %9, align 8
  %11 = tail call i64 %10(%"class.webrtc::AudioVector"* %0) #8
  %12 = icmp ugt i64 %11, %3
  %13 = select i1 %12, i64 %3, i64 %11
  %14 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %7, align 8
  %15 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %14, i64 18
  %16 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %15, align 8
  %17 = tail call i64 %16(%"class.webrtc::AudioVector"* %0) #8
  %18 = add i64 %13, %2
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i64 %18, i64 %17
  %21 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = icmp ugt i64 %22, %20
  br i1 %23, label %50, label %24

24:                                               ; preds = %6
  %25 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %7, align 8
  %26 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %25, i64 18
  %27 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %26, align 8
  %28 = tail call i64 %27(%"class.webrtc::AudioVector"* %0) #8
  %29 = add i64 %20, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 2) #8
  %31 = extractvalue { i64, i1 } %30, 1
  %32 = extractvalue { i64, i1 } %30, 0
  %33 = select i1 %31, i64 -1, i64 %32
  %34 = tail call i8* @_Znam(i64 %33) #7
  %35 = bitcast i8* %34 to i16*
  %36 = ptrtoint i8* %34 to i64
  %37 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %38 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %38, i64 4
  %40 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %39, align 8
  tail call void %40(%"class.webrtc::AudioVector"* %0, i64 %28, i64 0, i16* nonnull %35) #8
  %41 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1
  %42 = bitcast %"class.std::__1::unique_ptr"* %41 to i64*
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 0, i32 0, i32 0, i32 0
  %44 = load i16*, i16** %43, align 8
  store i64 %36, i64* %42, align 8
  %45 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  store i64 0, i64* %45, align 8
  %46 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  store i64 %28, i64* %46, align 8
  store i64 %29, i64* %21, align 8
  %47 = icmp eq i16* %44, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %24
  %49 = bitcast i16* %44 to i8*
  tail call void @_ZdaPv(i8* %49) #7
  br label %50

50:                                               ; preds = %6, %24, %48
  %51 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = icmp ult i64 %55, %2
  %57 = select i1 %56, i64 %55, i64 %2
  %58 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %59 = load i16*, i16** %58, align 8
  %60 = getelementptr inbounds i16, i16* %59, i64 %54
  %61 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i16*, i64, i64)***
  %62 = load void (%"class.webrtc::AudioVector"*, i16*, i64, i64)**, void (%"class.webrtc::AudioVector"*, i16*, i64, i64)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i16*, i64, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64, i64)** %62, i64 16
  %64 = load void (%"class.webrtc::AudioVector"*, i16*, i64, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64, i64)** %63, align 8
  tail call void %64(%"class.webrtc::AudioVector"* %0, i16* %60, i64 %57, i64 %13) #8
  %65 = sub i64 %2, %57
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %50
  %68 = load i16*, i16** %58, align 8
  %69 = add i64 %57, %13
  %70 = load void (%"class.webrtc::AudioVector"*, i16*, i64, i64)**, void (%"class.webrtc::AudioVector"*, i16*, i64, i64)*** %61, align 8
  %71 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i16*, i64, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64, i64)** %70, i64 16
  %72 = load void (%"class.webrtc::AudioVector"*, i16*, i64, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64, i64)** %71, align 8
  tail call void %72(%"class.webrtc::AudioVector"* %0, i16* %68, i64 %65, i64 %69) #8
  br label %73

73:                                               ; preds = %67, %50, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector11OverwriteAtEPKsmm(%"class.webrtc::AudioVector"*, i16* nocapture readonly, i64, i64) unnamed_addr #0 align 2 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %80, label %6

6:                                                ; preds = %4
  %7 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %8 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %8, i64 18
  %10 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %9, align 8
  %11 = tail call i64 %10(%"class.webrtc::AudioVector"* %0) #8
  %12 = icmp ugt i64 %11, %3
  %13 = select i1 %12, i64 %3, i64 %11
  %14 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %7, align 8
  %15 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %14, i64 18
  %16 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %15, align 8
  %17 = tail call i64 %16(%"class.webrtc::AudioVector"* %0) #8
  %18 = add i64 %13, %2
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i64 %18, i64 %17
  %21 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = icmp ugt i64 %22, %20
  br i1 %23, label %51, label %24

24:                                               ; preds = %6
  %25 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %7, align 8
  %26 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %25, i64 18
  %27 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %26, align 8
  %28 = tail call i64 %27(%"class.webrtc::AudioVector"* %0) #8
  %29 = add i64 %20, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 2) #8
  %31 = extractvalue { i64, i1 } %30, 1
  %32 = extractvalue { i64, i1 } %30, 0
  %33 = select i1 %31, i64 -1, i64 %32
  %34 = tail call i8* @_Znam(i64 %33) #7
  %35 = bitcast i8* %34 to i16*
  %36 = ptrtoint i8* %34 to i64
  %37 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %38 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %38, i64 4
  %40 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %39, align 8
  tail call void %40(%"class.webrtc::AudioVector"* %0, i64 %28, i64 0, i16* nonnull %35) #8
  %41 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1
  %42 = bitcast %"class.std::__1::unique_ptr"* %41 to i64*
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 0, i32 0, i32 0, i32 0
  %44 = load i16*, i16** %43, align 8
  store i64 %36, i64* %42, align 8
  %45 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  store i64 0, i64* %45, align 8
  %46 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  store i64 %28, i64* %46, align 8
  store i64 %29, i64* %21, align 8
  %47 = icmp eq i16* %44, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %24
  %49 = bitcast i16* %44 to i8*
  tail call void @_ZdaPv(i8* %49) #7
  %50 = load i64, i64* %21, align 8
  br label %51

51:                                               ; preds = %6, %24, %48
  %52 = phi i64 [ %22, %6 ], [ %29, %24 ], [ %50, %48 ]
  %53 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, %13
  %56 = urem i64 %55, %52
  %57 = sub i64 %52, %56
  %58 = icmp ult i64 %57, %2
  %59 = select i1 %58, i64 %57, i64 %2
  %60 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %61 = load i16*, i16** %60, align 8
  %62 = getelementptr inbounds i16, i16* %61, i64 %56
  %63 = bitcast i16* %62 to i8*
  %64 = bitcast i16* %1 to i8*
  %65 = shl i64 %59, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %63, i8* align 2 %64, i64 %65, i1 false)
  %66 = sub i64 %2, %59
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %51
  %69 = bitcast i16** %60 to i8**
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds i16, i16* %1, i64 %59
  %72 = bitcast i16* %71 to i8*
  %73 = shl i64 %66, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %70, i8* align 2 %72, i64 %73, i1 false)
  br label %74

74:                                               ; preds = %51, %68
  %75 = load i64, i64* %53, align 8
  %76 = add i64 %75, %20
  %77 = load i64, i64* %21, align 8
  %78 = urem i64 %76, %77
  %79 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  store i64 %78, i64* %79, align 8
  br label %80

80:                                               ; preds = %4, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11AudioVector9CrossFadeERKS0_m(%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"* dereferenceable(40), i64) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.webrtc::AudioVector"* %0 to i64 (%"class.webrtc::AudioVector"*)***
  %5 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %5, i64 18
  %7 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %6, align 8
  %8 = tail call i64 %7(%"class.webrtc::AudioVector"* %0) #8
  %9 = icmp ult i64 %8, %2
  %10 = select i1 %9, i64 %8, i64 %2
  %11 = bitcast %"class.webrtc::AudioVector"* %1 to i64 (%"class.webrtc::AudioVector"*)***
  %12 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %12, i64 18
  %14 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %13, align 8
  %15 = tail call i64 %14(%"class.webrtc::AudioVector"* %1) #8
  %16 = icmp ult i64 %15, %10
  %17 = select i1 %16, i64 %15, i64 %10
  %18 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %4, align 8
  %19 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %18, i64 18
  %20 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %19, align 8
  %21 = tail call i64 %20(%"class.webrtc::AudioVector"* %0) #8
  %22 = sub i64 %21, %17
  %23 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %22, %24
  %26 = trunc i64 %17 to i32
  %27 = add nsw i32 %26, 1
  %28 = sdiv i32 16384, %27
  %29 = icmp eq i64 %17, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  %32 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 3
  %34 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 2
  %35 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %43

36:                                               ; preds = %43, %3
  %37 = load i64 (%"class.webrtc::AudioVector"*)**, i64 (%"class.webrtc::AudioVector"*)*** %11, align 8
  %38 = getelementptr inbounds i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %37, i64 18
  %39 = load i64 (%"class.webrtc::AudioVector"*)*, i64 (%"class.webrtc::AudioVector"*)** %38, align 8
  %40 = tail call i64 %39(%"class.webrtc::AudioVector"* %1) #8
  %41 = sub i64 %40, %17
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %78, label %73

43:                                               ; preds = %30, %43
  %44 = phi i64 [ 0, %30 ], [ %71, %43 ]
  %45 = phi i32 [ 16384, %30 ], [ %46, %43 ]
  %46 = sub nsw i32 %45, %28
  %47 = add i64 %25, %44
  %48 = load i64, i64* %31, align 8
  %49 = urem i64 %47, %48
  %50 = load i16*, i16** %32, align 8
  %51 = getelementptr inbounds i16, i16* %50, i64 %49
  %52 = load i16, i16* %51, align 2
  %53 = sext i16 %52 to i32
  %54 = mul nsw i32 %46, %53
  %55 = sub nsw i32 16384, %46
  %56 = load i64, i64* %33, align 8
  %57 = load i64, i64* %34, align 8
  %58 = add i64 %56, %44
  %59 = icmp ult i64 %58, %57
  %60 = select i1 %59, i64 0, i64 %57
  %61 = sub i64 %58, %60
  %62 = load i16*, i16** %35, align 8
  %63 = getelementptr inbounds i16, i16* %62, i64 %61
  %64 = load i16, i16* %63, align 2
  %65 = sext i16 %64 to i32
  %66 = mul nsw i32 %55, %65
  %67 = add i32 %54, 8192
  %68 = add i32 %67, %66
  %69 = lshr i32 %68, 14
  %70 = trunc i32 %69 to i16
  store i16 %70, i16* %51, align 2
  %71 = add nuw i64 %44, 1
  %72 = icmp ult i64 %71, %17
  br i1 %72, label %43, label %36

73:                                               ; preds = %36
  %74 = bitcast %"class.webrtc::AudioVector"* %0 to void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64, i64)***
  %75 = load void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64, i64)**, void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64, i64)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64, i64)*, void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64, i64)** %75, i64 8
  %77 = load void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64, i64)*, void (%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*, i64, i64)** %76, align 8
  tail call void %77(%"class.webrtc::AudioVector"* %0, %"class.webrtc::AudioVector"* dereferenceable(40) %1, i64 %41, i64 %17) #8
  br label %78

78:                                               ; preds = %36, %73
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc11AudioVector4SizeEv(%"class.webrtc::AudioVector"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %3
  %7 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = urem i64 %9, %5
  ret i64 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc11AudioVector5EmptyEv(%"class.webrtc::AudioVector"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %0, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %3, %5
  ret i1 %6
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
