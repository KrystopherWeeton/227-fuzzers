; ModuleID = '../../third_party/blink/renderer/platform/graphics/filters/fe_lighting.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/filters/fe_lighting.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::FELighting" = type <{ %"class.blink::FilterEffect", i32, [4 x i8], %class.scoped_refptr, %"class.blink::Color", float, float, float, float, [4 x i8] }>
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector", %"class.blink::Member.2", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Filter"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.4, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.4 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%class.scoped_refptr = type { %"class.blink::LightSource"* }
%"class.blink::Color" = type { i32 }
%"class.blink::Filter" = type opaque
%"class.blink::LightSource" = type { i32 (...)**, %"class.WTF::RefCounted", i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%struct.SkPoint3 = type { float, float, float }
%"class.blink::DistantLightSource" = type { %"class.blink::LightSource", float, float }
%"class.cc::LightingDistantPaintFilter" = type { %"class.cc::PaintFilter", i32, %struct.SkPoint3, i32, float, float, float, %class.sk_sp }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.cc::LightingPointPaintFilter" = type { %"class.cc::PaintFilter", i32, %struct.SkPoint3, i32, float, float, float, %class.sk_sp }
%"class.cc::LightingSpotPaintFilter" = type { %"class.cc::PaintFilter", i32, %struct.SkPoint3, %struct.SkPoint3, float, float, i32, float, float, float, %class.sk_sp }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.179", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.119", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i64 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::Worklist.50"* }
%"class.blink::Worklist.50" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist.57"* }
%"class.blink::Worklist.57" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.99", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101", %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { float }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.122", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.131" }
%"class.WTF::Vector.131" = type { %"class.WTF::VectorBuffer.132" }
%"class.WTF::VectorBuffer.132" = type { %"class.WTF::VectorBufferBase.133" }
%"class.WTF::VectorBufferBase.133" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.146" }
%"class.WTF::VectorBuffer.146" = type { %"class.WTF::VectorBufferBase.147" }
%"class.WTF::VectorBufferBase.147" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.50"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.57"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.183" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.178 }
%class.scoped_refptr.178 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__cxx_atomic_impl.181" }
%"struct.std::__1::__cxx_atomic_impl.181" = type { %"struct.std::__1::__cxx_atomic_base_impl.182" }
%"struct.std::__1::__cxx_atomic_base_impl.182" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::TextStream" = type opaque

$_ZN5blink10FELightingD2Ev = comdat any

$_ZN5blink10FELightingD0Ev = comdat any

$_ZNK5blink12FilterEffect19GetFilterEffectTypeEv = comdat any

$_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE = comdat any

$_ZNK5blink10FELighting24AffectsTransparentPixelsEv = comdat any

$_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv = comdat any

@_ZTVN5blink10FELightingE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FELighting"*)* @_ZN5blink10FELightingD2Ev to i8*), i8* bitcast (void (%"class.blink::FELighting"*)* @_ZN5blink10FELightingD0Ev to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)* @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FELighting"*)* @_ZN5blink10FELighting17CreateImageFilterEv to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect34CreateImageFilterWithoutValidationEv to i8*), i8* bitcast (i32 (%"class.blink::FilterEffect"*)* @_ZNK5blink12FilterEffect19GetFilterEffectTypeEv to i8*), i8* bitcast (%"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*, i32)* @_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE to i8*), i8* bitcast (i1 (%"class.blink::FELighting"*)* @_ZNK5blink10FELighting24AffectsTransparentPixelsEv to i8*), i8* bitcast (i1 (%"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)* @_ZNK5blink12FilterEffect9MapInputsERKNS_9FloatRectE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)* @_ZNK5blink12FilterEffect9MapEffectERKNS_9FloatRectE to i8*)] }, align 8
@__const._ZN5blink10FELighting17CreateImageFilterEv.crop_rect = private unnamed_addr constant { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } } } } } }, align 4

@_ZN5blink10FELightingC1EPNS_6FilterENS0_12LightingTypeERKNS_5ColorEffff13scoped_refptrINS_11LightSourceEE = hidden unnamed_addr alias void (%"class.blink::FELighting"*, %"class.blink::Filter"*, i32, %"class.blink::Color"*, float, float, float, float, %"class.blink::LightSource"*), void (%"class.blink::FELighting"*, %"class.blink::Filter"*, i32, %"class.blink::Color"*, float, float, float, float, %"class.blink::LightSource"*)* @_ZN5blink10FELightingC2EPNS_6FilterENS0_12LightingTypeERKNS_5ColorEffff13scoped_refptrINS_11LightSourceEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10FELightingC2EPNS_6FilterENS0_12LightingTypeERKNS_5ColorEffff13scoped_refptrINS_11LightSourceEE(%"class.blink::FELighting"*, %"class.blink::Filter"*, i32, %"class.blink::Color"* nocapture readonly dereferenceable(4), float, float, float, float, %"class.blink::LightSource"*) unnamed_addr #0 align 2 {
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = alloca float, align 4
  %14 = ptrtoint %"class.blink::LightSource"* %8 to i64
  store float %5, float* %10, align 4
  store float %6, float* %11, align 4
  %15 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"* %15, %"class.blink::Filter"* %1) #8
  %16 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink10FELightingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 1
  store i32 %2, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 3
  %19 = bitcast %class.scoped_refptr* %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 4, i32 0
  %22 = load i32, i32* %20, align 4
  store i32 %22, i32* %21, align 8
  %23 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 5
  store float %4, float* %23, align 4
  %24 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 6
  %25 = bitcast float* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25)
  store float 0.000000e+00, float* %12, align 4
  %26 = fcmp olt float %5, 0.000000e+00
  %27 = select i1 %26, float* %12, float* %10
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25)
  %30 = bitcast float* %24 to i32*
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 7
  %32 = bitcast float* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32)
  store float 0.000000e+00, float* %13, align 4
  %33 = fcmp olt float %6, 0.000000e+00
  %34 = select i1 %33, float* %13, float* %11
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32)
  %37 = bitcast float* %31 to i32*
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 8
  %39 = fcmp ult float %7, 1.280000e+02
  %40 = fcmp ole float %7, 1.000000e+00
  %41 = select i1 %40, float 1.000000e+00, float %7
  %42 = select i1 %39, float %41, float 1.280000e+02
  store float %42, float* %38, align 8
  ret void
}

declare void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"*, %"class.blink::Filter"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10FELighting17CreateImageFilterEv(%class.sk_sp* noalias sret, %"class.blink::FELighting"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %"class.absl::optional", align 4
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %struct.SkPoint3, align 8
  %9 = alloca %struct.SkPoint3, align 8
  %10 = alloca %struct.SkPoint3, align 8
  %11 = alloca %struct.SkPoint3, align 8
  %12 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 3, i32 0
  %13 = load %"class.blink::LightSource"*, %"class.blink::LightSource"** %12, align 8
  %14 = icmp eq %"class.blink::LightSource"* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 0
  tail call void @_ZNK5blink12FilterEffect22CreateTransparentBlackEv(%class.sk_sp* sret %0, %"class.blink::FilterEffect"* %16) #8
  br label %208

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %18) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon } } } }, { { { { i8, [3 x i8], %union.anon } } } }* @__const._ZN5blink10FELighting17CreateImageFilterEv.crop_rect, i64 0, i32 0, i32 0, i32 0, i32 0), i64 20, i1 false)
  %19 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 0
  call void @_ZNK5blink12FilterEffect11GetCropRectEv(%"class.absl::optional"* nonnull sret %6, %"class.blink::FilterEffect"* %19) #8
  %20 = load i8, i8* %18, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = select i1 %21, %struct.SkRect* null, %struct.SkRect* %22
  %24 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 4
  %25 = call i32 @_ZN5blink12FilterEffect39AdaptColorToOperatingInterpolationSpaceERKNS_5ColorE(%"class.blink::FilterEffect"* %19, %"class.blink::Color"* dereferenceable(4) %24) #8
  %26 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  store %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*), %"class.cc::PaintFilter"** %27, align 8
  %28 = call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %19, i32 0) #8
  %29 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 0, i32 6
  %30 = load i32, i32* %29, align 4
  call void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp* nonnull sret %7, %"class.blink::FilterEffect"* %28, i32 %30, i1 zeroext true) #8
  %31 = load %"class.blink::LightSource"*, %"class.blink::LightSource"** %12, align 8
  %32 = getelementptr inbounds %"class.blink::LightSource", %"class.blink::LightSource"* %31, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  switch i32 %33, label %192 [
    i32 0, label %34
    i32 1, label %87
    i32 2, label %129
  ]

34:                                               ; preds = %17
  %35 = bitcast %"class.blink::LightSource"* %31 to %"class.blink::DistantLightSource"*
  %36 = getelementptr inbounds %"class.blink::LightSource", %"class.blink::LightSource"* %31, i64 1
  %37 = bitcast %"class.blink::LightSource"* %36 to float*
  %38 = load float, float* %37, align 8
  %39 = fmul float %38, 0x3F91DF46A0000000
  %40 = getelementptr inbounds %"class.blink::DistantLightSource", %"class.blink::DistantLightSource"* %35, i64 0, i32 2
  %41 = load float, float* %40, align 4
  %42 = fmul float %41, 0x3F91DF46A0000000
  %43 = bitcast %struct.SkPoint3* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %43) #8
  %44 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %8, i64 0, i32 2
  %45 = call float @cosf(float %39) #8
  %46 = call float @cosf(float %42) #8
  %47 = fmul float %45, %46
  %48 = call float @sinf(float %39) #8
  %49 = call float @cosf(float %42) #8
  %50 = fmul float %48, %49
  %51 = call float @sinf(float %42) #8
  %52 = insertelement <2 x float> undef, float %47, i32 0
  %53 = insertelement <2 x float> %52, float %50, i32 1
  %54 = bitcast %struct.SkPoint3* %8 to <2 x float>*
  store <2 x float> %53, <2 x float>* %54, align 8
  store float %51, float* %44, align 8
  %55 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 7
  %56 = load float, float* %55, align 4
  %57 = fcmp ogt float %56, 0.000000e+00
  %58 = zext i1 %57 to i32
  %59 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 5
  %60 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 6
  %61 = select i1 %57, float* %55, float* %60
  %62 = load float, float* %61, align 4
  %63 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 8
  %64 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  %65 = call i8* @_Znwm(i64 96) #9, !noalias !3
  %66 = bitcast i8* %65 to %"class.cc::LightingDistantPaintFilter"*
  %67 = load float, float* %59, align 4, !noalias !3
  %68 = load float, float* %63, align 4, !noalias !3
  %69 = bitcast %class.sk_sp* %7 to i64*
  %70 = load i64, i64* %69, align 8, !noalias !3
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %27, align 8, !noalias !3
  %71 = bitcast %class.sk_sp* %3 to i64*
  store i64 %70, i64* %71, align 8, !noalias !3
  call void @_ZN2cc26LightingDistantPaintFilterC1ENS_11PaintFilter12LightingTypeERK8SkPoint3jfff5sk_spIS1_EPK6SkRect(%"class.cc::LightingDistantPaintFilter"* nonnull %66, i32 %58, %struct.SkPoint3* nonnull dereferenceable(12) %8, i32 %25, float %67, float %62, float %68, %class.sk_sp* nonnull %3, %struct.SkRect* %23) #8, !noalias !3
  %72 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %73 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %72, align 8, !noalias !3
  %74 = icmp eq %"class.cc::PaintFilter"* %73, null
  br i1 %74, label %85, label %75

75:                                               ; preds = %34
  %76 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %73, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel, !noalias !3
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %85

79:                                               ; preds = %75
  %80 = bitcast %"class.cc::PaintFilter"* %73 to %class.SkRefCntBase*
  %81 = bitcast %"class.cc::PaintFilter"* %73 to void (%class.SkRefCntBase*)***
  %82 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %81, align 8, !noalias !3
  %83 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, i64 2
  %84 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, align 8, !noalias !3
  call void %84(%class.SkRefCntBase* nonnull %80) #8, !noalias !3
  br label %85

85:                                               ; preds = %79, %75, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  %86 = bitcast %class.sk_sp* %0 to i8**
  store i8* %65, i8** %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %43) #8
  br label %194

87:                                               ; preds = %17
  %88 = getelementptr inbounds %"class.blink::LightSource", %"class.blink::LightSource"* %31, i64 1
  %89 = bitcast %"class.blink::LightSource"* %88 to i64*
  %90 = load i64, i64* %89, align 4
  %91 = getelementptr inbounds %"class.blink::LightSource", %"class.blink::LightSource"* %31, i64 1, i32 1, i32 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = bitcast %struct.SkPoint3* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %93) #8
  %94 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %9, i64 0, i32 2
  %95 = bitcast %struct.SkPoint3* %9 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast float* %94 to i32*
  store i32 %92, i32* %96, align 8
  %97 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 7
  %98 = load float, float* %97, align 4
  %99 = fcmp ogt float %98, 0.000000e+00
  %100 = zext i1 %99 to i32
  %101 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 5
  %102 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 6
  %103 = select i1 %99, float* %97, float* %102
  %104 = load float, float* %103, align 4
  %105 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 8
  %106 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  %107 = call i8* @_Znwm(i64 96) #9, !noalias !6
  %108 = bitcast i8* %107 to %"class.cc::LightingPointPaintFilter"*
  %109 = load float, float* %101, align 4, !noalias !6
  %110 = load float, float* %105, align 4, !noalias !6
  %111 = bitcast %class.sk_sp* %7 to i64*
  %112 = load i64, i64* %111, align 8, !noalias !6
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %27, align 8, !noalias !6
  %113 = bitcast %class.sk_sp* %4 to i64*
  store i64 %112, i64* %113, align 8, !noalias !6
  call void @_ZN2cc24LightingPointPaintFilterC1ENS_11PaintFilter12LightingTypeERK8SkPoint3jfff5sk_spIS1_EPK6SkRect(%"class.cc::LightingPointPaintFilter"* nonnull %108, i32 %100, %struct.SkPoint3* nonnull dereferenceable(12) %9, i32 %25, float %109, float %104, float %110, %class.sk_sp* nonnull %4, %struct.SkRect* %23) #8, !noalias !6
  %114 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %115 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %114, align 8, !noalias !6
  %116 = icmp eq %"class.cc::PaintFilter"* %115, null
  br i1 %116, label %127, label %117

117:                                              ; preds = %87
  %118 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %115, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = atomicrmw add i32* %118, i32 -1 acq_rel, !noalias !6
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %127

121:                                              ; preds = %117
  %122 = bitcast %"class.cc::PaintFilter"* %115 to %class.SkRefCntBase*
  %123 = bitcast %"class.cc::PaintFilter"* %115 to void (%class.SkRefCntBase*)***
  %124 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %123, align 8, !noalias !6
  %125 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %124, i64 2
  %126 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %125, align 8, !noalias !6
  call void %126(%class.SkRefCntBase* nonnull %122) #8, !noalias !6
  br label %127

127:                                              ; preds = %121, %117, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  %128 = bitcast %class.sk_sp* %0 to i8**
  store i8* %107, i8** %128, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %93) #8
  br label %194

129:                                              ; preds = %17
  %130 = bitcast %struct.SkPoint3* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %130) #8
  %131 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %10, i64 0, i32 2
  %132 = getelementptr inbounds %"class.blink::LightSource", %"class.blink::LightSource"* %31, i64 1
  %133 = bitcast %"class.blink::LightSource"* %132 to i64*
  %134 = load i64, i64* %133, align 4
  %135 = getelementptr inbounds %"class.blink::LightSource", %"class.blink::LightSource"* %31, i64 1, i32 1, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = bitcast %struct.SkPoint3* %10 to i64*
  store i64 %134, i64* %137, align 8
  %138 = bitcast float* %131 to i32*
  store i32 %136, i32* %138, align 8
  %139 = bitcast %struct.SkPoint3* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %139) #8
  %140 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %11, i64 0, i32 2
  %141 = getelementptr inbounds %"class.blink::LightSource", %"class.blink::LightSource"* %31, i64 1, i32 2
  %142 = bitcast i32* %141 to i64*
  %143 = load i64, i64* %142, align 4
  %144 = getelementptr inbounds i32, i32* %141, i64 2
  %145 = load i32, i32* %144, align 4
  %146 = bitcast %struct.SkPoint3* %11 to i64*
  store i64 %143, i64* %146, align 8
  %147 = bitcast float* %140 to i32*
  store i32 %145, i32* %147, align 8
  %148 = getelementptr inbounds %"class.blink::LightSource", %"class.blink::LightSource"* %31, i64 2, i32 1
  %149 = bitcast %"class.WTF::RefCounted"* %148 to float*
  %150 = load float, float* %149, align 8
  %151 = getelementptr inbounds %"class.blink::LightSource", %"class.blink::LightSource"* %31, i64 2, i32 2
  %152 = bitcast i32* %151 to float*
  %153 = load float, float* %152, align 4
  %154 = fcmp oeq float %153, 0.000000e+00
  %155 = fcmp ogt float %153, 9.000000e+01
  %156 = or i1 %154, %155
  %157 = fcmp olt float %153, -9.000000e+01
  %158 = or i1 %157, %156
  %159 = select i1 %158, float 9.000000e+01, float %153
  %160 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 7
  %161 = load float, float* %160, align 4
  %162 = fcmp ogt float %161, 0.000000e+00
  %163 = zext i1 %162 to i32
  %164 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 5
  %165 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 6
  %166 = select i1 %162, float* %160, float* %165
  %167 = load float, float* %166, align 4
  %168 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %1, i64 0, i32 8
  %169 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169)
  %170 = call i8* @_Znwm(i64 120) #9, !noalias !9
  %171 = bitcast i8* %170 to %"class.cc::LightingSpotPaintFilter"*
  %172 = load float, float* %164, align 4, !noalias !9
  %173 = load float, float* %168, align 4, !noalias !9
  %174 = bitcast %class.sk_sp* %7 to i64*
  %175 = load i64, i64* %174, align 8, !noalias !9
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %27, align 8, !noalias !9
  %176 = bitcast %class.sk_sp* %5 to i64*
  store i64 %175, i64* %176, align 8, !noalias !9
  call void @_ZN2cc23LightingSpotPaintFilterC1ENS_11PaintFilter12LightingTypeERK8SkPoint3S5_ffjfff5sk_spIS1_EPK6SkRect(%"class.cc::LightingSpotPaintFilter"* nonnull %171, i32 %163, %struct.SkPoint3* nonnull dereferenceable(12) %10, %struct.SkPoint3* nonnull dereferenceable(12) %11, float %150, float %159, i32 %25, float %172, float %167, float %173, %class.sk_sp* nonnull %5, %struct.SkRect* %23) #8, !noalias !9
  %177 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %178 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %177, align 8, !noalias !9
  %179 = icmp eq %"class.cc::PaintFilter"* %178, null
  br i1 %179, label %190, label %180

180:                                              ; preds = %129
  %181 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %178, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = atomicrmw add i32* %181, i32 -1 acq_rel, !noalias !9
  %183 = icmp eq i32 %182, 1
  br i1 %183, label %184, label %190

184:                                              ; preds = %180
  %185 = bitcast %"class.cc::PaintFilter"* %178 to %class.SkRefCntBase*
  %186 = bitcast %"class.cc::PaintFilter"* %178 to void (%class.SkRefCntBase*)***
  %187 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %186, align 8, !noalias !9
  %188 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %187, i64 2
  %189 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %188, align 8, !noalias !9
  call void %189(%class.SkRefCntBase* nonnull %185) #8, !noalias !9
  br label %190

190:                                              ; preds = %184, %180, %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169)
  %191 = bitcast %class.sk_sp* %0 to i8**
  store i8* %170, i8** %191, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %139) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %130) #8
  br label %194

192:                                              ; preds = %17
  %193 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %193, align 8
  br label %194

194:                                              ; preds = %192, %190, %127, %85
  %195 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %27, align 8
  %196 = icmp eq %"class.cc::PaintFilter"* %195, null
  br i1 %196, label %207, label %197

197:                                              ; preds = %194
  %198 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %195, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = atomicrmw add i32* %198, i32 -1 acq_rel
  %200 = icmp eq i32 %199, 1
  br i1 %200, label %201, label %207

201:                                              ; preds = %197
  %202 = bitcast %"class.cc::PaintFilter"* %195 to %class.SkRefCntBase*
  %203 = bitcast %"class.cc::PaintFilter"* %195 to void (%class.SkRefCntBase*)***
  %204 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %203, align 8
  %205 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %204, i64 2
  %206 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %205, align 8
  call void %206(%class.SkRefCntBase* nonnull %202) #8
  br label %207

207:                                              ; preds = %194, %197, %201
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %18) #8
  br label %208

208:                                              ; preds = %207, %15
  ret void
}

declare void @_ZNK5blink12FilterEffect22CreateTransparentBlackEv(%class.sk_sp* sret, %"class.blink::FilterEffect"*) local_unnamed_addr #1

declare void @_ZNK5blink12FilterEffect11GetCropRectEv(%"class.absl::optional"* sret, %"class.blink::FilterEffect"*) local_unnamed_addr #1

declare i32 @_ZN5blink12FilterEffect39AdaptColorToOperatingInterpolationSpaceERKNS_5ColorE(%"class.blink::FilterEffect"*, %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #1

declare void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp* sret, %"class.blink::FilterEffect"*, i32, i1 zeroext) local_unnamed_addr #1

declare %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"*, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @cosf(float) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare float @sinf(float) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink10FELighting15GetLightingTypeEv(%"class.blink::FELighting"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 7
  %3 = load float, float* %2, align 4
  %4 = fcmp ogt float %3, 0.000000e+00
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZN5blink10FELighting17GetFilterConstantEv(%"class.blink::FELighting"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 7
  %3 = load float, float* %2, align 4
  %4 = fcmp ogt float %3, 0.000000e+00
  %5 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 6
  %6 = select i1 %4, float* %2, float* %5
  %7 = load float, float* %6, align 4
  ret float %7
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FELightingD2Ev(%"class.blink::FELighting"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink10FELightingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.blink::LightSource"*, %"class.blink::LightSource"** %3, align 8
  %5 = icmp eq %"class.blink::LightSource"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LightSource", %"class.blink::LightSource"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #8
  %9 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.blink::LightSource"*
  %15 = bitcast %"class.base::RefCounted"* %13 to void (%"class.blink::LightSource"*)***
  %16 = load void (%"class.blink::LightSource"*)**, void (%"class.blink::LightSource"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::LightSource"*)*, void (%"class.blink::LightSource"*)** %16, i64 1
  %18 = load void (%"class.blink::LightSource"*)*, void (%"class.blink::LightSource"*)** %17, align 8
  tail call void %18(%"class.blink::LightSource"* nonnull %14) #8
  br label %19

19:                                               ; preds = %1, %6, %12
  %20 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"* %20) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FELightingD0Ev(%"class.blink::FELighting"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink10FELightingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.blink::LightSource"*, %"class.blink::LightSource"** %3, align 8
  %5 = icmp eq %"class.blink::LightSource"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LightSource", %"class.blink::LightSource"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #8
  %9 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.blink::LightSource"*
  %15 = bitcast %"class.base::RefCounted"* %13 to void (%"class.blink::LightSource"*)***
  %16 = load void (%"class.blink::LightSource"*)**, void (%"class.blink::LightSource"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::LightSource"*)*, void (%"class.blink::LightSource"*)** %16, i64 1
  %18 = load void (%"class.blink::LightSource"*)*, void (%"class.blink::LightSource"*)** %17, align 8
  tail call void %18(%"class.blink::LightSource"* nonnull %14) #8
  br label %19

19:                                               ; preds = %1, %6, %12
  %20 = getelementptr inbounds %"class.blink::FELighting", %"class.blink::FELighting"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"* %20) #8
  ret void
}

declare void @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE(%"class.blink::FilterEffect"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink12FilterEffect34CreateImageFilterWithoutValidationEv(%class.sk_sp* sret, %"class.blink::FilterEffect"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12FilterEffect19GetFilterEffectTypeEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare %"class.WTF::TextStream"* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE(%"class.blink::FilterEffect"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 6
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10FELighting24AffectsTransparentPixelsEv(%"class.blink::FELighting"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect9MapInputsERKNS_9FloatRectE(%"class.blink::FilterEffect"*, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect9MapEffectERKNS_9FloatRectE(%"class.blink::FilterEffect"*, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"*) unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN2cc26LightingDistantPaintFilterC1ENS_11PaintFilter12LightingTypeERK8SkPoint3jfff5sk_spIS1_EPK6SkRect(%"class.cc::LightingDistantPaintFilter"*, i32, %struct.SkPoint3* dereferenceable(12), i32, float, float, float, %class.sk_sp*, %struct.SkRect*) unnamed_addr #1

declare void @_ZN2cc24LightingPointPaintFilterC1ENS_11PaintFilter12LightingTypeERK8SkPoint3jfff5sk_spIS1_EPK6SkRect(%"class.cc::LightingPointPaintFilter"*, i32, %struct.SkPoint3* dereferenceable(12), i32, float, float, float, %class.sk_sp*, %struct.SkRect*) unnamed_addr #1

declare void @_ZN2cc23LightingSpotPaintFilterC1ENS_11PaintFilter12LightingTypeERK8SkPoint3S5_ffjfff5sk_spIS1_EPK6SkRect(%"class.cc::LightingSpotPaintFilter"*, i32, %struct.SkPoint3* dereferenceable(12), %struct.SkPoint3* dereferenceable(12), float, float, i32, float, float, float, %class.sk_sp*, %struct.SkRect*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_Z10sk_make_spIN2cc26LightingDistantPaintFilterEJNS0_11PaintFilter12LightingTypeERK8SkPoint3jRffS7_5sk_spIS2_ERPK6SkRectEES8_IT_EDpOT0_: argument 0"}
!5 = distinct !{!5, !"_Z10sk_make_spIN2cc26LightingDistantPaintFilterEJNS0_11PaintFilter12LightingTypeERK8SkPoint3jRffS7_5sk_spIS2_ERPK6SkRectEES8_IT_EDpOT0_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_Z10sk_make_spIN2cc24LightingPointPaintFilterEJNS0_11PaintFilter12LightingTypeERK8SkPoint3jRffS7_5sk_spIS2_ERPK6SkRectEES8_IT_EDpOT0_: argument 0"}
!8 = distinct !{!8, !"_Z10sk_make_spIN2cc24LightingPointPaintFilterEJNS0_11PaintFilter12LightingTypeERK8SkPoint3jRffS7_5sk_spIS2_ERPK6SkRectEES8_IT_EDpOT0_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_Z10sk_make_spIN2cc23LightingSpotPaintFilterEJNS0_11PaintFilter12LightingTypeERK8SkPoint3S6_RfS7_jS7_fS7_5sk_spIS2_ERPK6SkRectEES8_IT_EDpOT0_: argument 0"}
!11 = distinct !{!11, !"_Z10sk_make_spIN2cc23LightingSpotPaintFilterEJNS0_11PaintFilter12LightingTypeERK8SkPoint3S6_RfS7_jS7_fS7_5sk_spIS2_ERPK6SkRectEES8_IT_EDpOT0_"}
