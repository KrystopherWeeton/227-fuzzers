; ModuleID = '../../third_party/pdfium/third_party/bigint/BigInteger.cc'
source_filename = "../../third_party/pdfium/third_party/bigint/BigInteger.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.BigInteger = type { i32, %class.BigUnsigned }
%class.BigUnsigned = type { %class.NumberlikeArray }
%class.NumberlikeArray = type { i32, i32, i64* }

@_ZN10BigIntegerC1EPKmjNS_4SignE = hidden unnamed_addr alias void (%class.BigInteger*, i64*, i32, i32), void (%class.BigInteger*, i64*, i32, i32)* @_ZN10BigIntegerC2EPKmjNS_4SignE
@_ZN10BigIntegerC1ERK11BigUnsignedNS_4SignE = hidden unnamed_addr alias void (%class.BigInteger*, %class.BigUnsigned*, i32), void (%class.BigInteger*, %class.BigUnsigned*, i32)* @_ZN10BigIntegerC2ERK11BigUnsignedNS_4SignE
@_ZN10BigIntegerC1Em = hidden unnamed_addr alias void (%class.BigInteger*, i64), void (%class.BigInteger*, i64)* @_ZN10BigIntegerC2Em
@_ZN10BigIntegerC1Ej = hidden unnamed_addr alias void (%class.BigInteger*, i32), void (%class.BigInteger*, i32)* @_ZN10BigIntegerC2Ej
@_ZN10BigIntegerC1Et = hidden unnamed_addr alias void (%class.BigInteger*, i16), void (%class.BigInteger*, i16)* @_ZN10BigIntegerC2Et
@_ZN10BigIntegerC1El = hidden unnamed_addr alias void (%class.BigInteger*, i64), void (%class.BigInteger*, i64)* @_ZN10BigIntegerC2El
@_ZN10BigIntegerC1Ei = hidden unnamed_addr alias void (%class.BigInteger*, i32), void (%class.BigInteger*, i32)* @_ZN10BigIntegerC2Ei
@_ZN10BigIntegerC1Es = hidden unnamed_addr alias void (%class.BigInteger*, i16), void (%class.BigInteger*, i16)* @_ZN10BigIntegerC2Es

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %class.BigInteger* @_ZN10BigIntegeraSERKS_(%class.BigInteger* returned, %class.BigInteger* readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.BigInteger* %0, %1
  br i1 %3, label %43, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %6, i32* %7, align 8
  %8 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp ult i32 %12, %9
  br i1 %13, label %14, label %26

14:                                               ; preds = %4
  %15 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast i64* %16 to i8*
  tail call void @_ZdaPv(i8* %19) #6
  br label %20

20:                                               ; preds = %18, %14
  store i32 %9, i32* %11, align 8
  %21 = zext i32 %9 to i64
  %22 = shl nuw nsw i64 %21, 3
  %23 = tail call i8* @_Znam(i64 %22) #6
  %24 = bitcast i64** %15 to i8**
  store i8* %23, i8** %24, align 8
  %25 = load i32, i32* %10, align 4
  br label %26

26:                                               ; preds = %20, %4
  %27 = phi i32 [ %9, %4 ], [ %25, %20 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %43, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1, i32 0, i32 2
  %31 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  br label %32

32:                                               ; preds = %32, %29
  %33 = phi i64 [ 0, %29 ], [ %39, %32 ]
  %34 = load i64*, i64** %30, align 8
  %35 = getelementptr inbounds i64, i64* %34, i64 %33
  %36 = load i64, i64* %35, align 8
  %37 = load i64*, i64** %31, align 8
  %38 = getelementptr inbounds i64, i64* %37, i64 %33
  store i64 %36, i64* %38, align 8
  %39 = add nuw nsw i64 %33, 1
  %40 = load i32, i32* %10, align 4
  %41 = zext i32 %40 to i64
  %42 = icmp ult i64 %39, %41
  br i1 %42, label %32, label %43

43:                                               ; preds = %32, %26, %2
  ret %class.BigInteger* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10BigIntegerC2EPKmjNS_4SignE(%class.BigInteger* nocapture, i64* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 0
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  store i32 %2, i32* %6, align 4
  %7 = zext i32 %2 to i64
  %8 = shl nuw nsw i64 %7, 3
  %9 = tail call i8* @_Znam(i64 %8) #6
  %10 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %11 = bitcast i64** %10 to i8**
  store i8* %9, i8** %11, align 8
  %12 = icmp eq i32 %2, 0
  %13 = bitcast i8* %9 to i64*
  br i1 %12, label %68, label %14

14:                                               ; preds = %4
  %15 = load i64, i64* %1, align 8
  store i64 %15, i64* %13, align 8
  %16 = icmp eq i32 %2, 1
  br i1 %16, label %46, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds i64, i64* %1, i64 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = icmp ugt i32 %2, 2
  br i1 %22, label %23, label %43

23:                                               ; preds = %17
  %24 = getelementptr inbounds i64, i64* %1, i64 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %9, i64 16
  %27 = bitcast i8* %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = load i32, i32* %6, align 4
  %29 = icmp ugt i32 %28, 3
  br i1 %29, label %30, label %40

30:                                               ; preds = %23, %30
  %31 = phi i64 [ %36, %30 ], [ 3, %23 ]
  %32 = load i64*, i64** %10, align 8
  %33 = getelementptr inbounds i64, i64* %1, i64 %31
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds i64, i64* %32, i64 %31
  store i64 %34, i64* %35, align 8
  %36 = add nuw nsw i64 %31, 1
  %37 = load i32, i32* %6, align 4
  %38 = zext i32 %37 to i64
  %39 = icmp ult i64 %36, %38
  br i1 %39, label %30, label %40

40:                                               ; preds = %30, %23
  %41 = phi i32 [ %28, %23 ], [ %37, %30 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %68, label %43

43:                                               ; preds = %17, %40
  %44 = phi i32 [ %41, %40 ], [ 2, %17 ]
  %45 = load i64*, i64** %10, align 8
  br label %46

46:                                               ; preds = %43, %14
  %47 = phi i32 [ %44, %43 ], [ 1, %14 ]
  %48 = phi i64* [ %45, %43 ], [ %13, %14 ]
  %49 = add i32 %47, -1
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i64, i64* %48, i64 %50
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %68

54:                                               ; preds = %46
  %55 = zext i32 %47 to i64
  br label %63

56:                                               ; preds = %63
  %57 = trunc i64 %67 to i32
  %58 = add i32 %57, -1
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i64, i64* %48, i64 %59
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %68

63:                                               ; preds = %54, %56
  %64 = phi i32 [ %49, %54 ], [ %58, %56 ]
  %65 = phi i64 [ %55, %54 ], [ %67, %56 ]
  store i32 %64, i32* %6, align 4
  %66 = icmp eq i32 %64, 0
  %67 = add nsw i64 %65, -1
  br i1 %66, label %68, label %56

68:                                               ; preds = %63, %56, %46, %4, %40
  %69 = phi i32 [ 0, %4 ], [ 0, %40 ], [ %47, %46 ], [ %64, %56 ], [ 0, %63 ]
  switch i32 %3, label %76 [
    i32 0, label %70
    i32 1, label %73
    i32 -1, label %73
  ]

70:                                               ; preds = %68
  %71 = icmp eq i32 %69, 0
  br i1 %71, label %77, label %72

72:                                               ; preds = %70
  tail call void @abort() #7
  unreachable

73:                                               ; preds = %68, %68
  %74 = icmp eq i32 %69, 0
  %75 = select i1 %74, i32 0, i32 %3
  br label %77

76:                                               ; preds = %68
  tail call void @abort() #7
  unreachable

77:                                               ; preds = %70, %73
  %78 = phi i32 [ %75, %73 ], [ 0, %70 ]
  %79 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %78, i32* %79, align 8
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10BigIntegerC2ERK11BigUnsignedNS_4SignE(%class.BigInteger* nocapture, %class.BigUnsigned* nocapture readonly dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  %5 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 0
  store i32 %6, i32* %7, align 8
  %8 = zext i32 %6 to i64
  %9 = shl nuw nsw i64 %8, 3
  %10 = tail call i8* @_Znam(i64 %9) #6
  %11 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %12 = bitcast i64** %11 to i8**
  store i8* %10, i8** %12, align 8
  %13 = icmp eq i32 %6, 0
  br i1 %13, label %44, label %14

14:                                               ; preds = %3
  %15 = bitcast i8* %10 to i64*
  %16 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 2
  %17 = load i64*, i64** %16, align 8
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  %19 = icmp eq i32 %6, 1
  br i1 %19, label %44, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds i64, i64* %17, i64 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds i8, i8* %10, i64 8
  %24 = bitcast i8* %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = icmp ugt i32 %6, 2
  br i1 %25, label %26, label %44

26:                                               ; preds = %20
  %27 = getelementptr inbounds i64, i64* %17, i64 2
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %10, i64 16
  %30 = bitcast i8* %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = load i32, i32* %4, align 4
  %32 = icmp ugt i32 %31, 3
  br i1 %32, label %33, label %44

33:                                               ; preds = %26, %33
  %34 = phi i64 [ %40, %33 ], [ 3, %26 ]
  %35 = load i64*, i64** %11, align 8
  %36 = load i64*, i64** %16, align 8
  %37 = getelementptr inbounds i64, i64* %36, i64 %34
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds i64, i64* %35, i64 %34
  store i64 %38, i64* %39, align 8
  %40 = add nuw nsw i64 %34, 1
  %41 = load i32, i32* %4, align 4
  %42 = zext i32 %41 to i64
  %43 = icmp ult i64 %40, %42
  br i1 %43, label %33, label %44

44:                                               ; preds = %33, %26, %20, %3, %14
  %45 = phi i32 [ 2, %20 ], [ 0, %3 ], [ 1, %14 ], [ %31, %26 ], [ %41, %33 ]
  switch i32 %2, label %52 [
    i32 0, label %46
    i32 1, label %49
    i32 -1, label %49
  ]

46:                                               ; preds = %44
  %47 = icmp eq i32 %45, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %46
  tail call void @abort() #7
  unreachable

49:                                               ; preds = %44, %44
  %50 = icmp eq i32 %45, 0
  %51 = select i1 %50, i32 0, i32 %2
  br label %53

52:                                               ; preds = %44
  tail call void @abort() #7
  unreachable

53:                                               ; preds = %46, %49
  %54 = phi i32 [ %51, %49 ], [ 0, %46 ]
  %55 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %54, i32* %55, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10BigIntegerC2Em(%class.BigInteger*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  tail call void @_ZN11BigUnsignedC1Em(%class.BigUnsigned* %3, i64 %1) #8
  %4 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, 0
  %7 = zext i1 %6 to i32
  %8 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %7, i32* %8, align 8
  ret void
}

declare void @_ZN11BigUnsignedC1Em(%class.BigUnsigned*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10BigIntegerC2Ej(%class.BigInteger*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  tail call void @_ZN11BigUnsignedC1Ej(%class.BigUnsigned* %3, i32 %1) #8
  %4 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, 0
  %7 = zext i1 %6 to i32
  %8 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %7, i32* %8, align 8
  ret void
}

declare void @_ZN11BigUnsignedC1Ej(%class.BigUnsigned*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10BigIntegerC2Et(%class.BigInteger*, i16 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  tail call void @_ZN11BigUnsignedC1Et(%class.BigUnsigned* %3, i16 zeroext %1) #8
  %4 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, 0
  %7 = zext i1 %6 to i32
  %8 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %7, i32* %8, align 8
  ret void
}

declare void @_ZN11BigUnsignedC1Et(%class.BigUnsigned*, i16 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10BigIntegerC2El(%class.BigInteger*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  %4 = icmp eq i64 %1, 0
  %5 = icmp sgt i64 %1, 0
  %6 = select i1 %5, i32 1, i32 -1
  %7 = select i1 %4, i32 0, i32 %6
  store i32 %7, i32* %3, align 8
  %8 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  %9 = icmp slt i64 %1, 0
  %10 = sub nsw i64 0, %1
  %11 = select i1 %9, i64 %10, i64 %1
  tail call void @_ZN11BigUnsignedC1Em(%class.BigUnsigned* %8, i64 %11) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10BigIntegerC2Ei(%class.BigInteger*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  %4 = icmp eq i32 %1, 0
  %5 = icmp sgt i32 %1, 0
  %6 = select i1 %5, i32 1, i32 -1
  %7 = select i1 %4, i32 0, i32 %6
  store i32 %7, i32* %3, align 8
  %8 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  %9 = icmp slt i32 %1, 0
  %10 = sub nsw i32 0, %1
  %11 = select i1 %9, i32 %10, i32 %1
  %12 = zext i32 %11 to i64
  tail call void @_ZN11BigUnsignedC1Em(%class.BigUnsigned* %8, i64 %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10BigIntegerC2Es(%class.BigInteger*, i16 signext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  %4 = icmp eq i16 %1, 0
  %5 = icmp sgt i16 %1, 0
  %6 = select i1 %5, i32 1, i32 -1
  %7 = select i1 %4, i32 0, i32 %6
  store i32 %7, i32* %3, align 8
  %8 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  %9 = sext i16 %1 to i64
  %10 = icmp slt i16 %1, 0
  %11 = sub i16 0, %1
  %12 = zext i16 %11 to i64
  %13 = select i1 %10, i64 %12, i64 %9
  tail call void @_ZN11BigUnsignedC1Em(%class.BigUnsigned* %8, i64 %13) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK10BigInteger14toUnsignedLongEv(%class.BigInteger* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @abort() #7
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %13 [
    i32 0, label %14
    i32 1, label %9
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %11, align 8
  br label %14

13:                                               ; preds = %6
  tail call void @abort() #7
  unreachable

14:                                               ; preds = %6, %9
  %15 = phi i64 [ %12, %9 ], [ 0, %6 ]
  ret i64 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10BigInteger13toUnsignedIntEv(%class.BigInteger* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @abort() #7
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %15 [
    i32 0, label %16
    i32 1, label %9
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = icmp ugt i64 %12, 4294967295
  br i1 %14, label %15, label %16

15:                                               ; preds = %9, %6
  tail call void @abort() #7
  unreachable

16:                                               ; preds = %6, %9
  %17 = phi i32 [ %13, %9 ], [ %8, %6 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK10BigInteger15toUnsignedShortEv(%class.BigInteger* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @abort() #7
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %15 [
    i32 0, label %16
    i32 1, label %9
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i16
  %14 = icmp ugt i64 %12, 65535
  br i1 %14, label %15, label %16

15:                                               ; preds = %9, %6
  tail call void @abort() #7
  unreachable

16:                                               ; preds = %6, %9
  %17 = phi i16 [ %13, %9 ], [ 0, %6 ]
  ret i16 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK10BigInteger6toLongEv(%class.BigInteger* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %19

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i32 %3, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  %15 = icmp slt i64 %12, 0
  br i1 %15, label %19, label %20

16:                                               ; preds = %9
  %17 = sub nsw i64 0, %12
  %18 = icmp slt i64 %12, 1
  br i1 %18, label %19, label %20

19:                                               ; preds = %16, %14, %5
  tail call void @abort() #7
  unreachable

20:                                               ; preds = %1, %14, %16
  %21 = phi i64 [ 0, %1 ], [ %17, %16 ], [ %12, %14 ]
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10BigInteger5toIntEv(%class.BigInteger* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %22

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i32 %3, 1
  %14 = trunc i64 %12 to i32
  br i1 %13, label %15, label %17

15:                                               ; preds = %9
  %16 = icmp ugt i64 %12, 2147483647
  br i1 %16, label %22, label %23

17:                                               ; preds = %9
  %18 = sub nsw i32 0, %14
  %19 = icmp slt i32 %14, 1
  %20 = icmp ugt i64 %12, 4294967295
  %21 = or i1 %20, %19
  br i1 %21, label %22, label %23

22:                                               ; preds = %17, %15, %5
  tail call void @abort() #7
  unreachable

23:                                               ; preds = %1, %15, %17
  %24 = phi i32 [ 0, %1 ], [ %18, %17 ], [ %14, %15 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i16 @_ZNK10BigInteger7toShortEv(%class.BigInteger* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %22

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i32 %3, 1
  %14 = trunc i64 %12 to i16
  br i1 %13, label %15, label %17

15:                                               ; preds = %9
  %16 = icmp ugt i64 %12, 32767
  br i1 %16, label %22, label %23

17:                                               ; preds = %9
  %18 = sub i16 0, %14
  %19 = icmp sgt i16 %18, -1
  %20 = icmp ugt i64 %12, 65535
  %21 = or i1 %20, %19
  br i1 %21, label %22, label %23

22:                                               ; preds = %17, %15, %5
  tail call void @abort() #7
  unreachable

23:                                               ; preds = %1, %15, %17
  %24 = phi i16 [ 0, %1 ], [ %18, %17 ], [ %14, %15 ]
  ret i16 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10BigInteger9compareToERKS_(%class.BigInteger*, %class.BigInteger* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %21, label %8

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %6
  br i1 %9, label %21, label %10

10:                                               ; preds = %8
  switch i32 %4, label %20 [
    i32 0, label %21
    i32 1, label %11
    i32 -1, label %15
  ]

11:                                               ; preds = %10
  %12 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  %13 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1
  %14 = tail call i32 @_ZNK11BigUnsigned9compareToERKS_(%class.BigUnsigned* %12, %class.BigUnsigned* dereferenceable(16) %13) #8
  br label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  %17 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1
  %18 = tail call i32 @_ZNK11BigUnsigned9compareToERKS_(%class.BigUnsigned* %16, %class.BigUnsigned* dereferenceable(16) %17) #8
  %19 = sub nsw i32 0, %18
  br label %21

20:                                               ; preds = %10
  tail call void @abort() #7
  unreachable

21:                                               ; preds = %10, %8, %2, %15, %11
  %22 = phi i32 [ %19, %15 ], [ %14, %11 ], [ -1, %2 ], [ 1, %8 ], [ %4, %10 ]
  ret i32 %22
}

declare i32 @_ZNK11BigUnsigned9compareToERKS_(%class.BigUnsigned*, %class.BigUnsigned* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10BigInteger3addERKS_S1_(%class.BigInteger*, %class.BigInteger* dereferenceable(24), %class.BigInteger* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.BigInteger, align 8
  %5 = alloca %class.BigUnsigned, align 8
  %6 = icmp eq %class.BigInteger* %0, %1
  %7 = icmp eq %class.BigInteger* %0, %2
  %8 = or i1 %6, %7
  br i1 %8, label %9, label %61

9:                                                ; preds = %3
  %10 = bitcast %class.BigInteger* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = bitcast %class.BigInteger* %4 to i64*
  store i64 -6148914691236517206, i64* %11, align 8
  %12 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 1
  %14 = bitcast %class.BigUnsigned* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #8
  call void @_ZN10BigInteger3addERKS_S1_(%class.BigInteger* nonnull %4, %class.BigInteger* dereferenceable(24) %1, %class.BigInteger* dereferenceable(24) %2)
  %15 = icmp eq %class.BigInteger* %4, %0
  br i1 %15, label %54, label %16

16:                                               ; preds = %9
  %17 = load i32, i32* %12, align 8
  %18 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %17, i32* %18, align 8
  %19 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 1, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp ult i32 %23, %20
  br i1 %24, label %25, label %37

25:                                               ; preds = %16
  %26 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = bitcast i64* %27 to i8*
  call void @_ZdaPv(i8* %30) #6
  br label %31

31:                                               ; preds = %29, %25
  store i32 %20, i32* %22, align 8
  %32 = zext i32 %20 to i64
  %33 = shl nuw nsw i64 %32, 3
  %34 = call i8* @_Znam(i64 %33) #6
  %35 = bitcast i64** %26 to i8**
  store i8* %34, i8** %35, align 8
  %36 = load i32, i32* %21, align 4
  br label %37

37:                                               ; preds = %31, %16
  %38 = phi i32 [ %20, %16 ], [ %36, %31 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %54, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 1, i32 0, i32 2
  %42 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  br label %43

43:                                               ; preds = %43, %40
  %44 = phi i64 [ 0, %40 ], [ %50, %43 ]
  %45 = load i64*, i64** %41, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 %44
  %47 = load i64, i64* %46, align 8
  %48 = load i64*, i64** %42, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 %44
  store i64 %47, i64* %49, align 8
  %50 = add nuw nsw i64 %44, 1
  %51 = load i32, i32* %21, align 4
  %52 = zext i32 %51 to i64
  %53 = icmp ult i64 %50, %52
  br i1 %53, label %43, label %54

54:                                               ; preds = %43, %9, %37
  %55 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 1, i32 0, i32 2
  %56 = load i64*, i64** %55, align 8
  %57 = icmp eq i64* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = bitcast i64* %56 to i8*
  call void @_ZdaPv(i8* %59) #6
  br label %60

60:                                               ; preds = %54, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  br label %210

61:                                               ; preds = %3
  %62 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 0
  %66 = load i32, i32* %65, align 8
  br i1 %64, label %67, label %104

67:                                               ; preds = %61
  %68 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %66, i32* %68, align 8
  %69 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  store i32 %70, i32* %71, align 4
  %72 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = icmp ult i32 %73, %70
  br i1 %74, label %75, label %87

75:                                               ; preds = %67
  %76 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %77 = load i64*, i64** %76, align 8
  %78 = icmp eq i64* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = bitcast i64* %77 to i8*
  tail call void @_ZdaPv(i8* %80) #6
  br label %81

81:                                               ; preds = %79, %75
  store i32 %70, i32* %72, align 8
  %82 = zext i32 %70 to i64
  %83 = shl nuw nsw i64 %82, 3
  %84 = tail call i8* @_Znam(i64 %83) #6
  %85 = bitcast i64** %76 to i8**
  store i8* %84, i8** %85, align 8
  %86 = load i32, i32* %71, align 4
  br label %87

87:                                               ; preds = %81, %67
  %88 = phi i32 [ %70, %67 ], [ %86, %81 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %210, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1, i32 0, i32 2
  %92 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  br label %93

93:                                               ; preds = %93, %90
  %94 = phi i64 [ 0, %90 ], [ %100, %93 ]
  %95 = load i64*, i64** %91, align 8
  %96 = getelementptr inbounds i64, i64* %95, i64 %94
  %97 = load i64, i64* %96, align 8
  %98 = load i64*, i64** %92, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 %94
  store i64 %97, i64* %99, align 8
  %100 = add nuw nsw i64 %94, 1
  %101 = load i32, i32* %71, align 4
  %102 = zext i32 %101 to i64
  %103 = icmp ult i64 %100, %102
  br i1 %103, label %93, label %210

104:                                              ; preds = %61
  %105 = icmp eq i32 %66, 0
  br i1 %105, label %106, label %143

106:                                              ; preds = %104
  %107 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %63, i32* %107, align 8
  %108 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1, i32 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  store i32 %109, i32* %110, align 4
  %111 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp ult i32 %112, %109
  br i1 %113, label %114, label %126

114:                                              ; preds = %106
  %115 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %116 = load i64*, i64** %115, align 8
  %117 = icmp eq i64* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %114
  %119 = bitcast i64* %116 to i8*
  tail call void @_ZdaPv(i8* %119) #6
  br label %120

120:                                              ; preds = %118, %114
  store i32 %109, i32* %111, align 8
  %121 = zext i32 %109 to i64
  %122 = shl nuw nsw i64 %121, 3
  %123 = tail call i8* @_Znam(i64 %122) #6
  %124 = bitcast i64** %115 to i8**
  store i8* %123, i8** %124, align 8
  %125 = load i32, i32* %110, align 4
  br label %126

126:                                              ; preds = %120, %106
  %127 = phi i32 [ %109, %106 ], [ %125, %120 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %210, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1, i32 0, i32 2
  %131 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  br label %132

132:                                              ; preds = %132, %129
  %133 = phi i64 [ 0, %129 ], [ %139, %132 ]
  %134 = load i64*, i64** %130, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 %133
  %136 = load i64, i64* %135, align 8
  %137 = load i64*, i64** %131, align 8
  %138 = getelementptr inbounds i64, i64* %137, i64 %133
  store i64 %136, i64* %138, align 8
  %139 = add nuw nsw i64 %133, 1
  %140 = load i32, i32* %110, align 4
  %141 = zext i32 %140 to i64
  %142 = icmp ult i64 %139, %141
  br i1 %142, label %132, label %210

143:                                              ; preds = %104
  %144 = icmp eq i32 %63, %66
  br i1 %144, label %145, label %150

145:                                              ; preds = %143
  %146 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %63, i32* %146, align 8
  %147 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  %148 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1
  %149 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1
  tail call void @_ZN11BigUnsigned3addERKS_S1_(%class.BigUnsigned* %147, %class.BigUnsigned* dereferenceable(16) %148, %class.BigUnsigned* dereferenceable(16) %149) #8
  br label %210

150:                                              ; preds = %143
  %151 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1
  %152 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1
  %153 = tail call i32 @_ZNK11BigUnsigned9compareToERKS_(%class.BigUnsigned* %151, %class.BigUnsigned* dereferenceable(16) %152) #8
  switch i32 %153, label %210 [
    i32 0, label %154
    i32 1, label %202
    i32 -1, label %206
  ]

154:                                              ; preds = %150
  %155 = bitcast %class.BigUnsigned* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155) #8
  call void @_ZN11BigUnsignedC1Ei(%class.BigUnsigned* nonnull %5, i32 0) #8
  %156 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  %157 = icmp eq %class.BigUnsigned* %156, %5
  br i1 %157, label %194, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %5, i64 0, i32 0, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  store i32 %160, i32* %161, align 4
  %162 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %156, i64 0, i32 0, i32 0
  %163 = load i32, i32* %162, align 8
  %164 = icmp ult i32 %163, %160
  br i1 %164, label %165, label %177

165:                                              ; preds = %158
  %166 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %167 = load i64*, i64** %166, align 8
  %168 = icmp eq i64* %167, null
  br i1 %168, label %171, label %169

169:                                              ; preds = %165
  %170 = bitcast i64* %167 to i8*
  call void @_ZdaPv(i8* %170) #6
  br label %171

171:                                              ; preds = %169, %165
  store i32 %160, i32* %162, align 8
  %172 = zext i32 %160 to i64
  %173 = shl nuw nsw i64 %172, 3
  %174 = call i8* @_Znam(i64 %173) #6
  %175 = bitcast i64** %166 to i8**
  store i8* %174, i8** %175, align 8
  %176 = load i32, i32* %161, align 4
  br label %177

177:                                              ; preds = %171, %158
  %178 = phi i32 [ %160, %158 ], [ %176, %171 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %194, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %5, i64 0, i32 0, i32 2
  %182 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  br label %183

183:                                              ; preds = %183, %180
  %184 = phi i64 [ 0, %180 ], [ %190, %183 ]
  %185 = load i64*, i64** %181, align 8
  %186 = getelementptr inbounds i64, i64* %185, i64 %184
  %187 = load i64, i64* %186, align 8
  %188 = load i64*, i64** %182, align 8
  %189 = getelementptr inbounds i64, i64* %188, i64 %184
  store i64 %187, i64* %189, align 8
  %190 = add nuw nsw i64 %184, 1
  %191 = load i32, i32* %161, align 4
  %192 = zext i32 %191 to i64
  %193 = icmp ult i64 %190, %192
  br i1 %193, label %183, label %194

194:                                              ; preds = %183, %154, %177
  %195 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %5, i64 0, i32 0, i32 2
  %196 = load i64*, i64** %195, align 8
  %197 = icmp eq i64* %196, null
  br i1 %197, label %200, label %198

198:                                              ; preds = %194
  %199 = bitcast i64* %196 to i8*
  call void @_ZdaPv(i8* %199) #6
  br label %200

200:                                              ; preds = %194, %198
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #8
  %201 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 0, i32* %201, align 8
  br label %210

202:                                              ; preds = %150
  %203 = load i32, i32* %62, align 8
  %204 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %203, i32* %204, align 8
  %205 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  tail call void @_ZN11BigUnsigned8subtractERKS_S1_(%class.BigUnsigned* %205, %class.BigUnsigned* dereferenceable(16) %151, %class.BigUnsigned* dereferenceable(16) %152) #8
  br label %210

206:                                              ; preds = %150
  %207 = load i32, i32* %65, align 8
  %208 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %207, i32* %208, align 8
  %209 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  tail call void @_ZN11BigUnsigned8subtractERKS_S1_(%class.BigUnsigned* %209, %class.BigUnsigned* dereferenceable(16) %152, %class.BigUnsigned* dereferenceable(16) %151) #8
  br label %210

210:                                              ; preds = %132, %93, %126, %87, %200, %202, %206, %150, %145, %60
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN11BigUnsigned3addERKS_S1_(%class.BigUnsigned*, %class.BigUnsigned* dereferenceable(16), %class.BigUnsigned* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN11BigUnsignedC1Ei(%class.BigUnsigned*, i32) unnamed_addr #2

declare void @_ZN11BigUnsigned8subtractERKS_S1_(%class.BigUnsigned*, %class.BigUnsigned* dereferenceable(16), %class.BigUnsigned* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10BigInteger8subtractERKS_S1_(%class.BigInteger*, %class.BigInteger* dereferenceable(24), %class.BigInteger* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.BigInteger, align 8
  %5 = alloca %class.BigUnsigned, align 8
  %6 = icmp eq %class.BigInteger* %0, %1
  %7 = icmp eq %class.BigInteger* %0, %2
  %8 = or i1 %6, %7
  br i1 %8, label %9, label %61

9:                                                ; preds = %3
  %10 = bitcast %class.BigInteger* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = bitcast %class.BigInteger* %4 to i64*
  store i64 -6148914691236517206, i64* %11, align 8
  %12 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 1
  %14 = bitcast %class.BigUnsigned* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #8
  call void @_ZN10BigInteger8subtractERKS_S1_(%class.BigInteger* nonnull %4, %class.BigInteger* dereferenceable(24) %1, %class.BigInteger* dereferenceable(24) %2)
  %15 = icmp eq %class.BigInteger* %4, %0
  br i1 %15, label %54, label %16

16:                                               ; preds = %9
  %17 = load i32, i32* %12, align 8
  %18 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %17, i32* %18, align 8
  %19 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 1, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp ult i32 %23, %20
  br i1 %24, label %25, label %37

25:                                               ; preds = %16
  %26 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = bitcast i64* %27 to i8*
  call void @_ZdaPv(i8* %30) #6
  br label %31

31:                                               ; preds = %29, %25
  store i32 %20, i32* %22, align 8
  %32 = zext i32 %20 to i64
  %33 = shl nuw nsw i64 %32, 3
  %34 = call i8* @_Znam(i64 %33) #6
  %35 = bitcast i64** %26 to i8**
  store i8* %34, i8** %35, align 8
  %36 = load i32, i32* %21, align 4
  br label %37

37:                                               ; preds = %31, %16
  %38 = phi i32 [ %20, %16 ], [ %36, %31 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %54, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 1, i32 0, i32 2
  %42 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  br label %43

43:                                               ; preds = %43, %40
  %44 = phi i64 [ 0, %40 ], [ %50, %43 ]
  %45 = load i64*, i64** %41, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 %44
  %47 = load i64, i64* %46, align 8
  %48 = load i64*, i64** %42, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 %44
  store i64 %47, i64* %49, align 8
  %50 = add nuw nsw i64 %44, 1
  %51 = load i32, i32* %21, align 4
  %52 = zext i32 %51 to i64
  %53 = icmp ult i64 %50, %52
  br i1 %53, label %43, label %54

54:                                               ; preds = %43, %9, %37
  %55 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 1, i32 0, i32 2
  %56 = load i64*, i64** %55, align 8
  %57 = icmp eq i64* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = bitcast i64* %56 to i8*
  call void @_ZdaPv(i8* %59) #6
  br label %60

60:                                               ; preds = %54, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  br label %215

61:                                               ; preds = %3
  %62 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %106

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  store i32 %67, i32* %68, align 4
  %69 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = icmp ult i32 %70, %67
  br i1 %71, label %72, label %84

72:                                               ; preds = %65
  %73 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %74 = load i64*, i64** %73, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = bitcast i64* %74 to i8*
  tail call void @_ZdaPv(i8* %77) #6
  br label %78

78:                                               ; preds = %76, %72
  store i32 %67, i32* %69, align 8
  %79 = zext i32 %67 to i64
  %80 = shl nuw nsw i64 %79, 3
  %81 = tail call i8* @_Znam(i64 %80) #6
  %82 = bitcast i64** %73 to i8**
  store i8* %81, i8** %82, align 8
  %83 = load i32, i32* %68, align 4
  br label %84

84:                                               ; preds = %78, %65
  %85 = phi i32 [ %67, %65 ], [ %83, %78 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %101, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1, i32 0, i32 2
  %89 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  br label %90

90:                                               ; preds = %90, %87
  %91 = phi i64 [ 0, %87 ], [ %97, %90 ]
  %92 = load i64*, i64** %88, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 %91
  %94 = load i64, i64* %93, align 8
  %95 = load i64*, i64** %89, align 8
  %96 = getelementptr inbounds i64, i64* %95, i64 %91
  store i64 %94, i64* %96, align 8
  %97 = add nuw nsw i64 %91, 1
  %98 = load i32, i32* %68, align 4
  %99 = zext i32 %98 to i64
  %100 = icmp ult i64 %97, %99
  br i1 %100, label %90, label %101

101:                                              ; preds = %90, %84
  %102 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 0
  %103 = load i32, i32* %102, align 8
  %104 = sub nsw i32 0, %103
  %105 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %104, i32* %105, align 8
  br label %215

106:                                              ; preds = %61
  %107 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %147

110:                                              ; preds = %106
  %111 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %63, i32* %111, align 8
  %112 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  store i32 %113, i32* %114, align 4
  %115 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp ult i32 %116, %113
  br i1 %117, label %118, label %130

118:                                              ; preds = %110
  %119 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %120 = load i64*, i64** %119, align 8
  %121 = icmp eq i64* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i64* %120 to i8*
  tail call void @_ZdaPv(i8* %123) #6
  br label %124

124:                                              ; preds = %122, %118
  store i32 %113, i32* %115, align 8
  %125 = zext i32 %113 to i64
  %126 = shl nuw nsw i64 %125, 3
  %127 = tail call i8* @_Znam(i64 %126) #6
  %128 = bitcast i64** %119 to i8**
  store i8* %127, i8** %128, align 8
  %129 = load i32, i32* %114, align 4
  br label %130

130:                                              ; preds = %124, %110
  %131 = phi i32 [ %113, %110 ], [ %129, %124 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %215, label %133

133:                                              ; preds = %130
  %134 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1, i32 0, i32 2
  %135 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  br label %136

136:                                              ; preds = %136, %133
  %137 = phi i64 [ 0, %133 ], [ %143, %136 ]
  %138 = load i64*, i64** %134, align 8
  %139 = getelementptr inbounds i64, i64* %138, i64 %137
  %140 = load i64, i64* %139, align 8
  %141 = load i64*, i64** %135, align 8
  %142 = getelementptr inbounds i64, i64* %141, i64 %137
  store i64 %140, i64* %142, align 8
  %143 = add nuw nsw i64 %137, 1
  %144 = load i32, i32* %114, align 4
  %145 = zext i32 %144 to i64
  %146 = icmp ult i64 %143, %145
  br i1 %146, label %136, label %215

147:                                              ; preds = %106
  %148 = icmp eq i32 %63, %108
  br i1 %148, label %154, label %149

149:                                              ; preds = %147
  %150 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %63, i32* %150, align 8
  %151 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  %152 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1
  %153 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1
  tail call void @_ZN11BigUnsigned3addERKS_S1_(%class.BigUnsigned* %151, %class.BigUnsigned* dereferenceable(16) %152, %class.BigUnsigned* dereferenceable(16) %153) #8
  br label %215

154:                                              ; preds = %147
  %155 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1
  %156 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1
  %157 = tail call i32 @_ZNK11BigUnsigned9compareToERKS_(%class.BigUnsigned* %155, %class.BigUnsigned* dereferenceable(16) %156) #8
  switch i32 %157, label %215 [
    i32 0, label %158
    i32 1, label %206
    i32 -1, label %210
  ]

158:                                              ; preds = %154
  %159 = bitcast %class.BigUnsigned* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %159) #8
  call void @_ZN11BigUnsignedC1Ei(%class.BigUnsigned* nonnull %5, i32 0) #8
  %160 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  %161 = icmp eq %class.BigUnsigned* %160, %5
  br i1 %161, label %198, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %5, i64 0, i32 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  store i32 %164, i32* %165, align 4
  %166 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %160, i64 0, i32 0, i32 0
  %167 = load i32, i32* %166, align 8
  %168 = icmp ult i32 %167, %164
  br i1 %168, label %169, label %181

169:                                              ; preds = %162
  %170 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %171 = load i64*, i64** %170, align 8
  %172 = icmp eq i64* %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %169
  %174 = bitcast i64* %171 to i8*
  call void @_ZdaPv(i8* %174) #6
  br label %175

175:                                              ; preds = %173, %169
  store i32 %164, i32* %166, align 8
  %176 = zext i32 %164 to i64
  %177 = shl nuw nsw i64 %176, 3
  %178 = call i8* @_Znam(i64 %177) #6
  %179 = bitcast i64** %170 to i8**
  store i8* %178, i8** %179, align 8
  %180 = load i32, i32* %165, align 4
  br label %181

181:                                              ; preds = %175, %162
  %182 = phi i32 [ %164, %162 ], [ %180, %175 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %198, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %5, i64 0, i32 0, i32 2
  %186 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  br label %187

187:                                              ; preds = %187, %184
  %188 = phi i64 [ 0, %184 ], [ %194, %187 ]
  %189 = load i64*, i64** %185, align 8
  %190 = getelementptr inbounds i64, i64* %189, i64 %188
  %191 = load i64, i64* %190, align 8
  %192 = load i64*, i64** %186, align 8
  %193 = getelementptr inbounds i64, i64* %192, i64 %188
  store i64 %191, i64* %193, align 8
  %194 = add nuw nsw i64 %188, 1
  %195 = load i32, i32* %165, align 4
  %196 = zext i32 %195 to i64
  %197 = icmp ult i64 %194, %196
  br i1 %197, label %187, label %198

198:                                              ; preds = %187, %158, %181
  %199 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %5, i64 0, i32 0, i32 2
  %200 = load i64*, i64** %199, align 8
  %201 = icmp eq i64* %200, null
  br i1 %201, label %204, label %202

202:                                              ; preds = %198
  %203 = bitcast i64* %200 to i8*
  call void @_ZdaPv(i8* %203) #6
  br label %204

204:                                              ; preds = %198, %202
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159) #8
  %205 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 0, i32* %205, align 8
  br label %215

206:                                              ; preds = %154
  %207 = load i32, i32* %62, align 8
  %208 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %207, i32* %208, align 8
  %209 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  tail call void @_ZN11BigUnsigned8subtractERKS_S1_(%class.BigUnsigned* %209, %class.BigUnsigned* dereferenceable(16) %155, %class.BigUnsigned* dereferenceable(16) %156) #8
  br label %215

210:                                              ; preds = %154
  %211 = load i32, i32* %107, align 8
  %212 = sub nsw i32 0, %211
  %213 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %212, i32* %213, align 8
  %214 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  tail call void @_ZN11BigUnsigned8subtractERKS_S1_(%class.BigUnsigned* %214, %class.BigUnsigned* dereferenceable(16) %156, %class.BigUnsigned* dereferenceable(16) %155) #8
  br label %215

215:                                              ; preds = %136, %130, %204, %206, %210, %154, %149, %60, %101
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10BigInteger8multiplyERKS_S1_(%class.BigInteger*, %class.BigInteger* dereferenceable(24), %class.BigInteger* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.BigInteger, align 8
  %5 = alloca %class.BigUnsigned, align 8
  %6 = icmp eq %class.BigInteger* %0, %1
  %7 = icmp eq %class.BigInteger* %0, %2
  %8 = or i1 %6, %7
  br i1 %8, label %9, label %61

9:                                                ; preds = %3
  %10 = bitcast %class.BigInteger* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = bitcast %class.BigInteger* %4 to i64*
  store i64 -6148914691236517206, i64* %11, align 8
  %12 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 1
  %14 = bitcast %class.BigUnsigned* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #8
  call void @_ZN10BigInteger8multiplyERKS_S1_(%class.BigInteger* nonnull %4, %class.BigInteger* dereferenceable(24) %1, %class.BigInteger* dereferenceable(24) %2)
  %15 = icmp eq %class.BigInteger* %4, %0
  br i1 %15, label %54, label %16

16:                                               ; preds = %9
  %17 = load i32, i32* %12, align 8
  %18 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %17, i32* %18, align 8
  %19 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 1, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp ult i32 %23, %20
  br i1 %24, label %25, label %37

25:                                               ; preds = %16
  %26 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = bitcast i64* %27 to i8*
  call void @_ZdaPv(i8* %30) #6
  br label %31

31:                                               ; preds = %29, %25
  store i32 %20, i32* %22, align 8
  %32 = zext i32 %20 to i64
  %33 = shl nuw nsw i64 %32, 3
  %34 = call i8* @_Znam(i64 %33) #6
  %35 = bitcast i64** %26 to i8**
  store i8* %34, i8** %35, align 8
  %36 = load i32, i32* %21, align 4
  br label %37

37:                                               ; preds = %31, %16
  %38 = phi i32 [ %20, %16 ], [ %36, %31 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %54, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 1, i32 0, i32 2
  %42 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  br label %43

43:                                               ; preds = %43, %40
  %44 = phi i64 [ 0, %40 ], [ %50, %43 ]
  %45 = load i64*, i64** %41, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 %44
  %47 = load i64, i64* %46, align 8
  %48 = load i64*, i64** %42, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 %44
  store i64 %47, i64* %49, align 8
  %50 = add nuw nsw i64 %44, 1
  %51 = load i32, i32* %21, align 4
  %52 = zext i32 %51 to i64
  %53 = icmp ult i64 %50, %52
  br i1 %53, label %43, label %54

54:                                               ; preds = %43, %9, %37
  %55 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 1, i32 0, i32 2
  %56 = load i64*, i64** %55, align 8
  %57 = icmp eq i64* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = bitcast i64* %56 to i8*
  call void @_ZdaPv(i8* %59) #6
  br label %60

60:                                               ; preds = %54, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  br label %124

61:                                               ; preds = %3
  %62 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %117

69:                                               ; preds = %65, %61
  %70 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 0, i32* %70, align 8
  %71 = bitcast %class.BigUnsigned* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #8
  call void @_ZN11BigUnsignedC1Ei(%class.BigUnsigned* nonnull %5, i32 0) #8
  %72 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  %73 = icmp eq %class.BigUnsigned* %72, %5
  br i1 %73, label %110, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %5, i64 0, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  store i32 %76, i32* %77, align 4
  %78 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %72, i64 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = icmp ult i32 %79, %76
  br i1 %80, label %81, label %93

81:                                               ; preds = %74
  %82 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %83 = load i64*, i64** %82, align 8
  %84 = icmp eq i64* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast i64* %83 to i8*
  call void @_ZdaPv(i8* %86) #6
  br label %87

87:                                               ; preds = %85, %81
  store i32 %76, i32* %78, align 8
  %88 = zext i32 %76 to i64
  %89 = shl nuw nsw i64 %88, 3
  %90 = call i8* @_Znam(i64 %89) #6
  %91 = bitcast i64** %82 to i8**
  store i8* %90, i8** %91, align 8
  %92 = load i32, i32* %77, align 4
  br label %93

93:                                               ; preds = %87, %74
  %94 = phi i32 [ %76, %74 ], [ %92, %87 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %110, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %5, i64 0, i32 0, i32 2
  %98 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  br label %99

99:                                               ; preds = %99, %96
  %100 = phi i64 [ 0, %96 ], [ %106, %99 ]
  %101 = load i64*, i64** %97, align 8
  %102 = getelementptr inbounds i64, i64* %101, i64 %100
  %103 = load i64, i64* %102, align 8
  %104 = load i64*, i64** %98, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 %100
  store i64 %103, i64* %105, align 8
  %106 = add nuw nsw i64 %100, 1
  %107 = load i32, i32* %77, align 4
  %108 = zext i32 %107 to i64
  %109 = icmp ult i64 %106, %108
  br i1 %109, label %99, label %110

110:                                              ; preds = %99, %69, %93
  %111 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %5, i64 0, i32 0, i32 2
  %112 = load i64*, i64** %111, align 8
  %113 = icmp eq i64* %112, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %110
  %115 = bitcast i64* %112 to i8*
  call void @_ZdaPv(i8* %115) #6
  br label %116

116:                                              ; preds = %110, %114
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #8
  br label %124

117:                                              ; preds = %65
  %118 = icmp eq i32 %63, %67
  %119 = select i1 %118, i32 1, i32 -1
  %120 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %119, i32* %120, align 8
  %121 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  %122 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1
  %123 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1
  tail call void @_ZN11BigUnsigned8multiplyERKS_S1_(%class.BigUnsigned* %121, %class.BigUnsigned* dereferenceable(16) %122, %class.BigUnsigned* dereferenceable(16) %123) #8
  br label %124

124:                                              ; preds = %117, %116, %60
  ret void
}

declare void @_ZN11BigUnsigned8multiplyERKS_S1_(%class.BigUnsigned*, %class.BigUnsigned* dereferenceable(16), %class.BigUnsigned* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10BigInteger19divideWithRemainderERKS_RS_(%class.BigInteger*, %class.BigInteger* dereferenceable(24), %class.BigInteger* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.BigInteger, align 8
  %5 = alloca %class.BigUnsigned, align 8
  %6 = alloca %class.BigUnsigned, align 8
  %7 = alloca %class.BigUnsigned, align 8
  %8 = alloca %class.BigUnsigned, align 8
  %9 = alloca %class.BigUnsigned, align 8
  %10 = icmp eq %class.BigInteger* %0, %2
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @abort() #7
  unreachable

12:                                               ; preds = %3
  %13 = icmp eq %class.BigInteger* %0, %1
  %14 = icmp eq %class.BigInteger* %2, %1
  %15 = or i1 %13, %14
  br i1 %15, label %16, label %74

16:                                               ; preds = %12
  %17 = bitcast %class.BigInteger* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #8
  %18 = bitcast %class.BigInteger* %4 to i64*
  store i64 -6148914691236517206, i64* %18, align 8
  %19 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 0
  %20 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %22, align 4
  %25 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 1, i32 0, i32 0
  store i32 %24, i32* %25, align 8
  %26 = zext i32 %24 to i64
  %27 = shl nuw nsw i64 %26, 3
  %28 = tail call i8* @_Znam(i64 %27) #6
  %29 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %4, i64 0, i32 1, i32 0, i32 2
  %30 = bitcast i64** %29 to i8**
  store i8* %28, i8** %30, align 8
  %31 = icmp eq i32 %24, 0
  br i1 %31, label %68, label %32

32:                                               ; preds = %16
  %33 = bitcast i8* %28 to i64*
  %34 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1, i32 0, i32 2
  %35 = load i64*, i64** %34, align 8
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %33, align 8
  %37 = icmp eq i32 %24, 1
  br i1 %37, label %68, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds i64, i64* %35, i64 1
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds i8, i8* %28, i64 8
  %42 = bitcast i8* %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = icmp ugt i32 %24, 2
  br i1 %43, label %44, label %68

44:                                               ; preds = %38
  %45 = getelementptr inbounds i64, i64* %35, i64 2
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds i8, i8* %28, i64 16
  %48 = bitcast i8* %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = icmp eq i32 %24, 3
  br i1 %49, label %68, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds i64, i64* %35, i64 3
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds i8, i8* %28, i64 24
  %54 = bitcast i8* %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = load i32, i32* %22, align 4
  %56 = icmp ugt i32 %55, 4
  br i1 %56, label %57, label %68

57:                                               ; preds = %50, %57
  %58 = phi i64 [ %64, %57 ], [ 4, %50 ]
  %59 = load i64*, i64** %29, align 8
  %60 = load i64*, i64** %34, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 %58
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds i64, i64* %59, i64 %58
  store i64 %62, i64* %63, align 8
  %64 = add nuw nsw i64 %58, 1
  %65 = load i32, i32* %22, align 4
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %64, %66
  br i1 %67, label %57, label %68

68:                                               ; preds = %57, %50, %44, %16, %32, %38
  call void @_ZN10BigInteger19divideWithRemainderERKS_RS_(%class.BigInteger* %0, %class.BigInteger* nonnull dereferenceable(24) %4, %class.BigInteger* dereferenceable(24) %2)
  %69 = load i64*, i64** %29, align 8
  %70 = icmp eq i64* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast i64* %69 to i8*
  call void @_ZdaPv(i8* %72) #6
  br label %73

73:                                               ; preds = %68, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8
  br label %220

74:                                               ; preds = %12
  %75 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %127

78:                                               ; preds = %74
  %79 = bitcast %class.BigUnsigned* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #8
  call void @_ZN11BigUnsignedC1Ei(%class.BigUnsigned* nonnull %5, i32 0) #8
  %80 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1
  %81 = icmp eq %class.BigUnsigned* %80, %5
  br i1 %81, label %119, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %5, i64 0, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1, i32 0, i32 1
  store i32 %84, i32* %85, align 4
  %86 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %80, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = icmp ult i32 %87, %84
  br i1 %88, label %89, label %102

89:                                               ; preds = %82
  %90 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1, i32 0, i32 2
  %91 = load i64*, i64** %90, align 8
  %92 = icmp eq i64* %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  %94 = bitcast i64* %91 to i8*
  call void @_ZdaPv(i8* %94) #6
  %95 = load i32, i32* %85, align 4
  br label %96

96:                                               ; preds = %93, %89
  %97 = phi i32 [ %95, %93 ], [ %84, %89 ]
  store i32 %84, i32* %86, align 8
  %98 = zext i32 %84 to i64
  %99 = shl nuw nsw i64 %98, 3
  %100 = call i8* @_Znam(i64 %99) #6
  %101 = bitcast i64** %90 to i8**
  store i8* %100, i8** %101, align 8
  br label %102

102:                                              ; preds = %96, %82
  %103 = phi i32 [ %84, %82 ], [ %97, %96 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %119, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %5, i64 0, i32 0, i32 2
  %107 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1, i32 0, i32 2
  br label %108

108:                                              ; preds = %108, %105
  %109 = phi i64 [ 0, %105 ], [ %115, %108 ]
  %110 = load i64*, i64** %106, align 8
  %111 = getelementptr inbounds i64, i64* %110, i64 %109
  %112 = load i64, i64* %111, align 8
  %113 = load i64*, i64** %107, align 8
  %114 = getelementptr inbounds i64, i64* %113, i64 %109
  store i64 %112, i64* %114, align 8
  %115 = add nuw nsw i64 %109, 1
  %116 = load i32, i32* %85, align 4
  %117 = zext i32 %116 to i64
  %118 = icmp ult i64 %115, %117
  br i1 %118, label %108, label %119

119:                                              ; preds = %108, %78, %102
  %120 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %5, i64 0, i32 0, i32 2
  %121 = load i64*, i64** %120, align 8
  %122 = icmp eq i64* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %119
  %124 = bitcast i64* %121 to i8*
  call void @_ZdaPv(i8* %124) #6
  br label %125

125:                                              ; preds = %119, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #8
  %126 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 0
  store i32 0, i32* %126, align 8
  br label %220

127:                                              ; preds = %74
  %128 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %180

131:                                              ; preds = %127
  %132 = bitcast %class.BigUnsigned* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %132) #8
  call void @_ZN11BigUnsignedC1Ei(%class.BigUnsigned* nonnull %6, i32 0) #8
  %133 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1
  %134 = icmp eq %class.BigUnsigned* %133, %6
  br i1 %134, label %172, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %6, i64 0, i32 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1, i32 0, i32 1
  store i32 %137, i32* %138, align 4
  %139 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %133, i64 0, i32 0, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = icmp ult i32 %140, %137
  br i1 %141, label %142, label %155

142:                                              ; preds = %135
  %143 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1, i32 0, i32 2
  %144 = load i64*, i64** %143, align 8
  %145 = icmp eq i64* %144, null
  br i1 %145, label %149, label %146

146:                                              ; preds = %142
  %147 = bitcast i64* %144 to i8*
  call void @_ZdaPv(i8* %147) #6
  %148 = load i32, i32* %138, align 4
  br label %149

149:                                              ; preds = %146, %142
  %150 = phi i32 [ %148, %146 ], [ %137, %142 ]
  store i32 %137, i32* %139, align 8
  %151 = zext i32 %137 to i64
  %152 = shl nuw nsw i64 %151, 3
  %153 = call i8* @_Znam(i64 %152) #6
  %154 = bitcast i64** %143 to i8**
  store i8* %153, i8** %154, align 8
  br label %155

155:                                              ; preds = %149, %135
  %156 = phi i32 [ %137, %135 ], [ %150, %149 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %172, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %6, i64 0, i32 0, i32 2
  %160 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1, i32 0, i32 2
  br label %161

161:                                              ; preds = %161, %158
  %162 = phi i64 [ 0, %158 ], [ %168, %161 ]
  %163 = load i64*, i64** %159, align 8
  %164 = getelementptr inbounds i64, i64* %163, i64 %162
  %165 = load i64, i64* %164, align 8
  %166 = load i64*, i64** %160, align 8
  %167 = getelementptr inbounds i64, i64* %166, i64 %162
  store i64 %165, i64* %167, align 8
  %168 = add nuw nsw i64 %162, 1
  %169 = load i32, i32* %138, align 4
  %170 = zext i32 %169 to i64
  %171 = icmp ult i64 %168, %170
  br i1 %171, label %161, label %172

172:                                              ; preds = %161, %131, %155
  %173 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %6, i64 0, i32 0, i32 2
  %174 = load i64*, i64** %173, align 8
  %175 = icmp eq i64* %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %172
  %177 = bitcast i64* %174 to i8*
  call void @_ZdaPv(i8* %177) #6
  br label %178

178:                                              ; preds = %172, %176
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %132) #8
  %179 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 0
  store i32 0, i32* %179, align 8
  br label %220

180:                                              ; preds = %127
  %181 = icmp eq i32 %129, %76
  %182 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 0
  br i1 %181, label %183, label %184

183:                                              ; preds = %180
  store i32 1, i32* %182, align 8
  br label %191

184:                                              ; preds = %180
  store i32 -1, i32* %182, align 8
  %185 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  call void @_ZN11BigUnsignedmmEi(%class.BigUnsigned* nonnull sret %7, %class.BigUnsigned* %185, i32 0) #8
  %186 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %7, i64 0, i32 0, i32 2
  %187 = load i64*, i64** %186, align 8
  %188 = icmp eq i64* %187, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %184
  %190 = bitcast i64* %187 to i8*
  call void @_ZdaPv(i8* %190) #6
  br label %191

191:                                              ; preds = %189, %184, %183
  %192 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  %193 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1
  %194 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1
  call void @_ZN11BigUnsigned19divideWithRemainderERKS_RS_(%class.BigUnsigned* %192, %class.BigUnsigned* dereferenceable(16) %193, %class.BigUnsigned* dereferenceable(16) %194) #8
  %195 = load i32, i32* %128, align 8
  %196 = load i32, i32* %75, align 8
  %197 = icmp eq i32 %195, %196
  br i1 %197, label %210, label %198

198:                                              ; preds = %191
  call void @_ZN11BigUnsignedppEi(%class.BigUnsigned* nonnull sret %8, %class.BigUnsigned* %194, i32 0) #8
  %199 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %8, i64 0, i32 0, i32 2
  %200 = load i64*, i64** %199, align 8
  %201 = icmp eq i64* %200, null
  br i1 %201, label %204, label %202

202:                                              ; preds = %198
  %203 = bitcast i64* %200 to i8*
  call void @_ZdaPv(i8* %203) #6
  br label %204

204:                                              ; preds = %198, %202
  call void @_ZN11BigUnsigned8subtractERKS_S1_(%class.BigUnsigned* %192, %class.BigUnsigned* dereferenceable(16) %193, %class.BigUnsigned* dereferenceable(16) %192) #8
  call void @_ZN11BigUnsignedmmEi(%class.BigUnsigned* nonnull sret %9, %class.BigUnsigned* %192, i32 0) #8
  %205 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %9, i64 0, i32 0, i32 2
  %206 = load i64*, i64** %205, align 8
  %207 = icmp eq i64* %206, null
  br i1 %207, label %210, label %208

208:                                              ; preds = %204
  %209 = bitcast i64* %206 to i8*
  call void @_ZdaPv(i8* %209) #6
  br label %210

210:                                              ; preds = %208, %204, %191
  %211 = load i32, i32* %75, align 8
  %212 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %213, 0
  %215 = select i1 %214, i32 0, i32 %211
  store i32 %215, i32* %128, align 8
  %216 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %2, i64 0, i32 1, i32 0, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %210
  store i32 0, i32* %182, align 8
  br label %220

220:                                              ; preds = %73, %125, %178, %219, %210
  ret void
}

declare void @_ZN11BigUnsignedmmEi(%class.BigUnsigned* sret, %class.BigUnsigned*, i32) local_unnamed_addr #2

declare void @_ZN11BigUnsigned19divideWithRemainderERKS_RS_(%class.BigUnsigned*, %class.BigUnsigned* dereferenceable(16), %class.BigUnsigned* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN11BigUnsignedppEi(%class.BigUnsigned* sret, %class.BigUnsigned*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10BigInteger6negateERKS_(%class.BigInteger*, %class.BigInteger* readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.BigInteger, align 8
  %4 = icmp eq %class.BigInteger* %0, %1
  br i1 %4, label %5, label %57

5:                                                ; preds = %2
  %6 = bitcast %class.BigInteger* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = bitcast %class.BigInteger* %3 to i64*
  store i64 -6148914691236517206, i64* %7, align 8
  %8 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %3, i64 0, i32 0
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %3, i64 0, i32 1
  %10 = bitcast %class.BigUnsigned* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #8
  call void @_ZN10BigInteger6negateERKS_(%class.BigInteger* nonnull %3, %class.BigInteger* dereferenceable(24) %0)
  %11 = icmp eq %class.BigInteger* %3, %0
  br i1 %11, label %50, label %12

12:                                               ; preds = %5
  %13 = load i32, i32* %8, align 8
  %14 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %3, i64 0, i32 1, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp ult i32 %19, %16
  br i1 %20, label %21, label %33

21:                                               ; preds = %12
  %22 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast i64* %23 to i8*
  call void @_ZdaPv(i8* %26) #6
  br label %27

27:                                               ; preds = %25, %21
  store i32 %16, i32* %18, align 8
  %28 = zext i32 %16 to i64
  %29 = shl nuw nsw i64 %28, 3
  %30 = call i8* @_Znam(i64 %29) #6
  %31 = bitcast i64** %22 to i8**
  store i8* %30, i8** %31, align 8
  %32 = load i32, i32* %17, align 4
  br label %33

33:                                               ; preds = %27, %12
  %34 = phi i32 [ %16, %12 ], [ %32, %27 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %50, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %3, i64 0, i32 1, i32 0, i32 2
  %38 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  br label %39

39:                                               ; preds = %39, %36
  %40 = phi i64 [ 0, %36 ], [ %46, %39 ]
  %41 = load i64*, i64** %37, align 8
  %42 = getelementptr inbounds i64, i64* %41, i64 %40
  %43 = load i64, i64* %42, align 8
  %44 = load i64*, i64** %38, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 %40
  store i64 %43, i64* %45, align 8
  %46 = add nuw nsw i64 %40, 1
  %47 = load i32, i32* %17, align 4
  %48 = zext i32 %47 to i64
  %49 = icmp ult i64 %46, %48
  br i1 %49, label %39, label %50

50:                                               ; preds = %39, %5, %33
  %51 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %3, i64 0, i32 1, i32 0, i32 2
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = bitcast i64* %52 to i8*
  call void @_ZdaPv(i8* %55) #6
  br label %56

56:                                               ; preds = %50, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  br label %98

57:                                               ; preds = %2
  %58 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp ult i32 %62, %59
  br i1 %63, label %64, label %76

64:                                               ; preds = %57
  %65 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = bitcast i64* %66 to i8*
  tail call void @_ZdaPv(i8* %69) #6
  br label %70

70:                                               ; preds = %68, %64
  store i32 %59, i32* %61, align 8
  %71 = zext i32 %59 to i64
  %72 = shl nuw nsw i64 %71, 3
  %73 = tail call i8* @_Znam(i64 %72) #6
  %74 = bitcast i64** %65 to i8**
  store i8* %73, i8** %74, align 8
  %75 = load i32, i32* %60, align 4
  br label %76

76:                                               ; preds = %70, %57
  %77 = phi i32 [ %59, %57 ], [ %75, %70 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %93, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1, i32 0, i32 2
  %81 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  br label %82

82:                                               ; preds = %82, %79
  %83 = phi i64 [ 0, %79 ], [ %89, %82 ]
  %84 = load i64*, i64** %80, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 %83
  %86 = load i64, i64* %85, align 8
  %87 = load i64*, i64** %81, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 %83
  store i64 %86, i64* %88, align 8
  %89 = add nuw nsw i64 %83, 1
  %90 = load i32, i32* %60, align 4
  %91 = zext i32 %90 to i64
  %92 = icmp ult i64 %89, %91
  br i1 %92, label %82, label %93

93:                                               ; preds = %82, %76
  %94 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = sub nsw i32 0, %95
  %97 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  store i32 %96, i32* %97, align 8
  br label %98

98:                                               ; preds = %93, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %class.BigInteger* @_ZN10BigIntegerppEv(%class.BigInteger* returned) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.BigUnsigned, align 8
  %3 = alloca %class.BigUnsigned, align 8
  %4 = alloca %class.BigUnsigned, align 8
  %5 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, -1
  %8 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  br i1 %7, label %9, label %48

9:                                                ; preds = %1
  call void @_ZN11BigUnsignedmmEi(%class.BigUnsigned* nonnull sret %2, %class.BigUnsigned* %8, i32 0) #8
  %10 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = icmp eq i64* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = bitcast i64* %11 to i8*
  call void @_ZdaPv(i8* %14) #6
  br label %15

15:                                               ; preds = %9, %13
  %16 = bitcast %class.BigUnsigned* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8
  call void @_ZN11BigUnsignedC1Ei(%class.BigUnsigned* nonnull %3, i32 0) #8
  %17 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %3, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %40

22:                                               ; preds = %15
  %23 = icmp eq i32 %18, 0
  br i1 %23, label %40, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %3, i64 0, i32 0, i32 2
  %28 = load i64*, i64** %27, align 8
  %29 = zext i32 %18 to i64
  br label %32

30:                                               ; preds = %32
  %31 = icmp eq i64 %39, %29
  br i1 %31, label %40, label %32

32:                                               ; preds = %30, %24
  %33 = phi i64 [ 0, %24 ], [ %39, %30 ]
  %34 = getelementptr inbounds i64, i64* %26, i64 %33
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds i64, i64* %28, i64 %33
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %35, %37
  %39 = add nuw nsw i64 %33, 1
  br i1 %38, label %30, label %40

40:                                               ; preds = %30, %32, %15, %22
  %41 = phi i1 [ false, %15 ], [ true, %22 ], [ true, %30 ], [ false, %32 ]
  %42 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %3, i64 0, i32 0, i32 2
  %43 = load i64*, i64** %42, align 8
  %44 = icmp eq i64* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  %46 = bitcast i64* %43 to i8*
  call void @_ZdaPv(i8* %46) #6
  br label %47

47:                                               ; preds = %40, %45
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  br i1 %41, label %54, label %56

48:                                               ; preds = %1
  call void @_ZN11BigUnsignedppEi(%class.BigUnsigned* nonnull sret %4, %class.BigUnsigned* %8, i32 0) #8
  %49 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 2
  %50 = load i64*, i64** %49, align 8
  %51 = icmp eq i64* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = bitcast i64* %50 to i8*
  call void @_ZdaPv(i8* %53) #6
  br label %54

54:                                               ; preds = %52, %48, %47
  %55 = phi i32 [ 0, %47 ], [ 1, %48 ], [ 1, %52 ]
  store i32 %55, i32* %5, align 8
  br label %56

56:                                               ; preds = %54, %47
  ret %class.BigInteger* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10BigIntegerppEi(%class.BigInteger* noalias nocapture sret, %class.BigInteger*, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.BigInteger* %0 to i64*
  store i64 -6148914691236517206, i64* %4, align 8
  %5 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  %6 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  %9 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %8, align 4
  %11 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 0
  store i32 %10, i32* %11, align 8
  %12 = zext i32 %10 to i64
  %13 = shl nuw nsw i64 %12, 3
  %14 = tail call i8* @_Znam(i64 %13) #6
  %15 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %16 = bitcast i64** %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = icmp eq i32 %10, 0
  %18 = bitcast i8* %14 to i64*
  br i1 %17, label %170, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1, i32 0, i32 2
  %21 = load i64*, i64** %20, align 8
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %18, align 8
  %23 = icmp eq i32 %10, 1
  br i1 %23, label %170, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds i64, i64* %21, i64 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %14, i64 8
  %28 = bitcast i8* %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = icmp ugt i32 %10, 2
  br i1 %29, label %30, label %170

30:                                               ; preds = %24
  %31 = getelementptr inbounds i64, i64* %21, i64 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds i8, i8* %14, i64 16
  %34 = bitcast i8* %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = icmp eq i32 %10, 3
  br i1 %35, label %170, label %36

36:                                               ; preds = %30
  %37 = add nsw i64 %12, -3
  %38 = icmp ult i64 %37, 4
  br i1 %38, label %132, label %39

39:                                               ; preds = %36
  %40 = getelementptr i8, i8* %14, i64 24
  %41 = shl nuw nsw i64 %12, 3
  %42 = getelementptr i8, i8* %14, i64 %41
  %43 = getelementptr i64, i64* %21, i64 3
  %44 = bitcast i64* %43 to i8*
  %45 = getelementptr i64, i64* %21, i64 %12
  %46 = bitcast i64* %45 to i8*
  %47 = icmp ult i8* %40, %46
  %48 = icmp ugt i8* %42, %44
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %39
  %51 = and i64 %37, -4
  %52 = or i64 %37, 3
  %53 = add nsw i64 %51, -4
  %54 = lshr exact i64 %53, 2
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 3
  %57 = icmp ult i64 %53, 12
  br i1 %57, label %110, label %58

58:                                               ; preds = %50
  %59 = sub nsw i64 %55, %56
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %107, %60 ]
  %62 = phi i64 [ %59, %58 ], [ %108, %60 ]
  %63 = or i64 %61, 3
  %64 = getelementptr inbounds i64, i64* %21, i64 %63
  %65 = bitcast i64* %64 to <2 x i64>*
  %66 = load <2 x i64>, <2 x i64>* %65, align 8, !alias.scope !2
  %67 = getelementptr inbounds i64, i64* %64, i64 2
  %68 = bitcast i64* %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !2
  %70 = getelementptr inbounds i64, i64* %18, i64 %63
  %71 = bitcast i64* %70 to <2 x i64>*
  store <2 x i64> %66, <2 x i64>* %71, align 8, !alias.scope !5, !noalias !2
  %72 = getelementptr inbounds i64, i64* %70, i64 2
  %73 = bitcast i64* %72 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !5, !noalias !2
  %74 = or i64 %61, 7
  %75 = getelementptr inbounds i64, i64* %21, i64 %74
  %76 = bitcast i64* %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !alias.scope !2
  %78 = getelementptr inbounds i64, i64* %75, i64 2
  %79 = bitcast i64* %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !2
  %81 = getelementptr inbounds i64, i64* %18, i64 %74
  %82 = bitcast i64* %81 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %82, align 8, !alias.scope !5, !noalias !2
  %83 = getelementptr inbounds i64, i64* %81, i64 2
  %84 = bitcast i64* %83 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !5, !noalias !2
  %85 = or i64 %61, 11
  %86 = getelementptr inbounds i64, i64* %21, i64 %85
  %87 = bitcast i64* %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !2
  %89 = getelementptr inbounds i64, i64* %86, i64 2
  %90 = bitcast i64* %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !2
  %92 = getelementptr inbounds i64, i64* %18, i64 %85
  %93 = bitcast i64* %92 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %93, align 8, !alias.scope !5, !noalias !2
  %94 = getelementptr inbounds i64, i64* %92, i64 2
  %95 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !5, !noalias !2
  %96 = or i64 %61, 15
  %97 = getelementptr inbounds i64, i64* %21, i64 %96
  %98 = bitcast i64* %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !2
  %100 = getelementptr inbounds i64, i64* %97, i64 2
  %101 = bitcast i64* %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !2
  %103 = getelementptr inbounds i64, i64* %18, i64 %96
  %104 = bitcast i64* %103 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %104, align 8, !alias.scope !5, !noalias !2
  %105 = getelementptr inbounds i64, i64* %103, i64 2
  %106 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %106, align 8, !alias.scope !5, !noalias !2
  %107 = add i64 %61, 16
  %108 = add i64 %62, -4
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %60, !llvm.loop !7

110:                                              ; preds = %60, %50
  %111 = phi i64 [ 0, %50 ], [ %107, %60 ]
  %112 = icmp eq i64 %56, 0
  br i1 %112, label %130, label %113

113:                                              ; preds = %110, %113
  %114 = phi i64 [ %127, %113 ], [ %111, %110 ]
  %115 = phi i64 [ %128, %113 ], [ %56, %110 ]
  %116 = or i64 %114, 3
  %117 = getelementptr inbounds i64, i64* %21, i64 %116
  %118 = bitcast i64* %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !2
  %120 = getelementptr inbounds i64, i64* %117, i64 2
  %121 = bitcast i64* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !2
  %123 = getelementptr inbounds i64, i64* %18, i64 %116
  %124 = bitcast i64* %123 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %124, align 8, !alias.scope !5, !noalias !2
  %125 = getelementptr inbounds i64, i64* %123, i64 2
  %126 = bitcast i64* %125 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %126, align 8, !alias.scope !5, !noalias !2
  %127 = add i64 %114, 4
  %128 = add i64 %115, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %113, !llvm.loop !9

130:                                              ; preds = %113, %110
  %131 = icmp eq i64 %37, %51
  br i1 %131, label %170, label %132

132:                                              ; preds = %130, %39, %36
  %133 = phi i64 [ 3, %39 ], [ 3, %36 ], [ %52, %130 ]
  %134 = add nuw nsw i64 %12, 1
  %135 = xor i64 %133, -1
  %136 = add nsw i64 %135, %12
  %137 = and i64 %134, 3
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %148, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i64 [ %146, %139 ], [ %137, %132 ]
  %142 = getelementptr inbounds i64, i64* %21, i64 %140
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds i64, i64* %18, i64 %140
  store i64 %143, i64* %144, align 8
  %145 = add nuw nsw i64 %140, 1
  %146 = add i64 %141, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %139, !llvm.loop !11

148:                                              ; preds = %139, %132
  %149 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %150 = icmp ult i64 %136, 3
  br i1 %150, label %170, label %151

151:                                              ; preds = %148, %151
  %152 = phi i64 [ %168, %151 ], [ %149, %148 ]
  %153 = getelementptr inbounds i64, i64* %21, i64 %152
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds i64, i64* %18, i64 %152
  store i64 %154, i64* %155, align 8
  %156 = add nuw nsw i64 %152, 1
  %157 = getelementptr inbounds i64, i64* %21, i64 %156
  %158 = load i64, i64* %157, align 8
  %159 = getelementptr inbounds i64, i64* %18, i64 %156
  store i64 %158, i64* %159, align 8
  %160 = add nuw nsw i64 %152, 2
  %161 = getelementptr inbounds i64, i64* %21, i64 %160
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds i64, i64* %18, i64 %160
  store i64 %162, i64* %163, align 8
  %164 = add nuw nsw i64 %152, 3
  %165 = getelementptr inbounds i64, i64* %21, i64 %164
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds i64, i64* %18, i64 %164
  store i64 %166, i64* %167, align 8
  %168 = add nuw nsw i64 %152, 4
  %169 = icmp eq i64 %168, %12
  br i1 %169, label %170, label %151, !llvm.loop !12

170:                                              ; preds = %148, %151, %130, %30, %3, %19, %24
  %171 = tail call dereferenceable(24) %class.BigInteger* @_ZN10BigIntegerppEv(%class.BigInteger* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %class.BigInteger* @_ZN10BigIntegermmEv(%class.BigInteger* returned) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.BigUnsigned, align 8
  %3 = alloca %class.BigUnsigned, align 8
  %4 = alloca %class.BigUnsigned, align 8
  %5 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  %8 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1
  br i1 %7, label %9, label %48

9:                                                ; preds = %1
  call void @_ZN11BigUnsignedmmEi(%class.BigUnsigned* nonnull sret %2, %class.BigUnsigned* %8, i32 0) #8
  %10 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = icmp eq i64* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = bitcast i64* %11 to i8*
  call void @_ZdaPv(i8* %14) #6
  br label %15

15:                                               ; preds = %9, %13
  %16 = bitcast %class.BigUnsigned* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8
  call void @_ZN11BigUnsignedC1Ei(%class.BigUnsigned* nonnull %3, i32 0) #8
  %17 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %3, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %40

22:                                               ; preds = %15
  %23 = icmp eq i32 %18, 0
  br i1 %23, label %40, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %3, i64 0, i32 0, i32 2
  %28 = load i64*, i64** %27, align 8
  %29 = zext i32 %18 to i64
  br label %32

30:                                               ; preds = %32
  %31 = icmp eq i64 %39, %29
  br i1 %31, label %40, label %32

32:                                               ; preds = %30, %24
  %33 = phi i64 [ 0, %24 ], [ %39, %30 ]
  %34 = getelementptr inbounds i64, i64* %26, i64 %33
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds i64, i64* %28, i64 %33
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %35, %37
  %39 = add nuw nsw i64 %33, 1
  br i1 %38, label %30, label %40

40:                                               ; preds = %30, %32, %15, %22
  %41 = phi i1 [ false, %15 ], [ true, %22 ], [ true, %30 ], [ false, %32 ]
  %42 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %3, i64 0, i32 0, i32 2
  %43 = load i64*, i64** %42, align 8
  %44 = icmp eq i64* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  %46 = bitcast i64* %43 to i8*
  call void @_ZdaPv(i8* %46) #6
  br label %47

47:                                               ; preds = %40, %45
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  br i1 %41, label %54, label %56

48:                                               ; preds = %1
  call void @_ZN11BigUnsignedppEi(%class.BigUnsigned* nonnull sret %4, %class.BigUnsigned* %8, i32 0) #8
  %49 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 2
  %50 = load i64*, i64** %49, align 8
  %51 = icmp eq i64* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = bitcast i64* %50 to i8*
  call void @_ZdaPv(i8* %53) #6
  br label %54

54:                                               ; preds = %52, %48, %47
  %55 = phi i32 [ 0, %47 ], [ -1, %48 ], [ -1, %52 ]
  store i32 %55, i32* %5, align 8
  br label %56

56:                                               ; preds = %54, %47
  ret %class.BigInteger* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10BigIntegermmEi(%class.BigInteger* noalias nocapture sret, %class.BigInteger*, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.BigInteger* %0 to i64*
  store i64 -6148914691236517206, i64* %4, align 8
  %5 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 0
  %6 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 1
  %9 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %8, align 4
  %11 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 0
  store i32 %10, i32* %11, align 8
  %12 = zext i32 %10 to i64
  %13 = shl nuw nsw i64 %12, 3
  %14 = tail call i8* @_Znam(i64 %13) #6
  %15 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %0, i64 0, i32 1, i32 0, i32 2
  %16 = bitcast i64** %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = icmp eq i32 %10, 0
  %18 = bitcast i8* %14 to i64*
  br i1 %17, label %170, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %1, i64 0, i32 1, i32 0, i32 2
  %21 = load i64*, i64** %20, align 8
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %18, align 8
  %23 = icmp eq i32 %10, 1
  br i1 %23, label %170, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds i64, i64* %21, i64 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %14, i64 8
  %28 = bitcast i8* %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = icmp ugt i32 %10, 2
  br i1 %29, label %30, label %170

30:                                               ; preds = %24
  %31 = getelementptr inbounds i64, i64* %21, i64 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds i8, i8* %14, i64 16
  %34 = bitcast i8* %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = icmp eq i32 %10, 3
  br i1 %35, label %170, label %36

36:                                               ; preds = %30
  %37 = add nsw i64 %12, -3
  %38 = icmp ult i64 %37, 4
  br i1 %38, label %132, label %39

39:                                               ; preds = %36
  %40 = getelementptr i8, i8* %14, i64 24
  %41 = shl nuw nsw i64 %12, 3
  %42 = getelementptr i8, i8* %14, i64 %41
  %43 = getelementptr i64, i64* %21, i64 3
  %44 = bitcast i64* %43 to i8*
  %45 = getelementptr i64, i64* %21, i64 %12
  %46 = bitcast i64* %45 to i8*
  %47 = icmp ult i8* %40, %46
  %48 = icmp ugt i8* %42, %44
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %39
  %51 = and i64 %37, -4
  %52 = or i64 %37, 3
  %53 = add nsw i64 %51, -4
  %54 = lshr exact i64 %53, 2
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 3
  %57 = icmp ult i64 %53, 12
  br i1 %57, label %110, label %58

58:                                               ; preds = %50
  %59 = sub nsw i64 %55, %56
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %107, %60 ]
  %62 = phi i64 [ %59, %58 ], [ %108, %60 ]
  %63 = or i64 %61, 3
  %64 = getelementptr inbounds i64, i64* %21, i64 %63
  %65 = bitcast i64* %64 to <2 x i64>*
  %66 = load <2 x i64>, <2 x i64>* %65, align 8, !alias.scope !13
  %67 = getelementptr inbounds i64, i64* %64, i64 2
  %68 = bitcast i64* %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !13
  %70 = getelementptr inbounds i64, i64* %18, i64 %63
  %71 = bitcast i64* %70 to <2 x i64>*
  store <2 x i64> %66, <2 x i64>* %71, align 8, !alias.scope !16, !noalias !13
  %72 = getelementptr inbounds i64, i64* %70, i64 2
  %73 = bitcast i64* %72 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !16, !noalias !13
  %74 = or i64 %61, 7
  %75 = getelementptr inbounds i64, i64* %21, i64 %74
  %76 = bitcast i64* %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !alias.scope !13
  %78 = getelementptr inbounds i64, i64* %75, i64 2
  %79 = bitcast i64* %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !13
  %81 = getelementptr inbounds i64, i64* %18, i64 %74
  %82 = bitcast i64* %81 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %82, align 8, !alias.scope !16, !noalias !13
  %83 = getelementptr inbounds i64, i64* %81, i64 2
  %84 = bitcast i64* %83 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !16, !noalias !13
  %85 = or i64 %61, 11
  %86 = getelementptr inbounds i64, i64* %21, i64 %85
  %87 = bitcast i64* %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !13
  %89 = getelementptr inbounds i64, i64* %86, i64 2
  %90 = bitcast i64* %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !13
  %92 = getelementptr inbounds i64, i64* %18, i64 %85
  %93 = bitcast i64* %92 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %93, align 8, !alias.scope !16, !noalias !13
  %94 = getelementptr inbounds i64, i64* %92, i64 2
  %95 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !16, !noalias !13
  %96 = or i64 %61, 15
  %97 = getelementptr inbounds i64, i64* %21, i64 %96
  %98 = bitcast i64* %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !13
  %100 = getelementptr inbounds i64, i64* %97, i64 2
  %101 = bitcast i64* %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !13
  %103 = getelementptr inbounds i64, i64* %18, i64 %96
  %104 = bitcast i64* %103 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %104, align 8, !alias.scope !16, !noalias !13
  %105 = getelementptr inbounds i64, i64* %103, i64 2
  %106 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %106, align 8, !alias.scope !16, !noalias !13
  %107 = add i64 %61, 16
  %108 = add i64 %62, -4
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %60, !llvm.loop !18

110:                                              ; preds = %60, %50
  %111 = phi i64 [ 0, %50 ], [ %107, %60 ]
  %112 = icmp eq i64 %56, 0
  br i1 %112, label %130, label %113

113:                                              ; preds = %110, %113
  %114 = phi i64 [ %127, %113 ], [ %111, %110 ]
  %115 = phi i64 [ %128, %113 ], [ %56, %110 ]
  %116 = or i64 %114, 3
  %117 = getelementptr inbounds i64, i64* %21, i64 %116
  %118 = bitcast i64* %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !13
  %120 = getelementptr inbounds i64, i64* %117, i64 2
  %121 = bitcast i64* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !13
  %123 = getelementptr inbounds i64, i64* %18, i64 %116
  %124 = bitcast i64* %123 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %124, align 8, !alias.scope !16, !noalias !13
  %125 = getelementptr inbounds i64, i64* %123, i64 2
  %126 = bitcast i64* %125 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %126, align 8, !alias.scope !16, !noalias !13
  %127 = add i64 %114, 4
  %128 = add i64 %115, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %113, !llvm.loop !19

130:                                              ; preds = %113, %110
  %131 = icmp eq i64 %37, %51
  br i1 %131, label %170, label %132

132:                                              ; preds = %130, %39, %36
  %133 = phi i64 [ 3, %39 ], [ 3, %36 ], [ %52, %130 ]
  %134 = add nuw nsw i64 %12, 1
  %135 = xor i64 %133, -1
  %136 = add nsw i64 %135, %12
  %137 = and i64 %134, 3
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %148, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i64 [ %146, %139 ], [ %137, %132 ]
  %142 = getelementptr inbounds i64, i64* %21, i64 %140
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds i64, i64* %18, i64 %140
  store i64 %143, i64* %144, align 8
  %145 = add nuw nsw i64 %140, 1
  %146 = add i64 %141, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %139, !llvm.loop !20

148:                                              ; preds = %139, %132
  %149 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %150 = icmp ult i64 %136, 3
  br i1 %150, label %170, label %151

151:                                              ; preds = %148, %151
  %152 = phi i64 [ %168, %151 ], [ %149, %148 ]
  %153 = getelementptr inbounds i64, i64* %21, i64 %152
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds i64, i64* %18, i64 %152
  store i64 %154, i64* %155, align 8
  %156 = add nuw nsw i64 %152, 1
  %157 = getelementptr inbounds i64, i64* %21, i64 %156
  %158 = load i64, i64* %157, align 8
  %159 = getelementptr inbounds i64, i64* %18, i64 %156
  store i64 %158, i64* %159, align 8
  %160 = add nuw nsw i64 %152, 2
  %161 = getelementptr inbounds i64, i64* %21, i64 %160
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds i64, i64* %18, i64 %160
  store i64 %162, i64* %163, align 8
  %164 = add nuw nsw i64 %152, 3
  %165 = getelementptr inbounds i64, i64* %21, i64 %164
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds i64, i64* %18, i64 %164
  store i64 %166, i64* %167, align 8
  %168 = add nuw nsw i64 %152, 4
  %169 = icmp eq i64 %168, %12
  br i1 %169, label %170, label %151, !llvm.loop !21

170:                                              ; preds = %148, %151, %130, %30, %3, %19, %24
  %171 = tail call dereferenceable(24) %class.BigInteger* @_ZN10BigIntegermmEv(%class.BigInteger* %1)
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
