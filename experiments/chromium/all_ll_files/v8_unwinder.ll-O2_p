; ModuleID = '../../chrome/renderer/v8_unwinder.cc'
source_filename = "../../chrome/renderer/v8_unwinder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.V8Unwinder = type { %"class.base::Unwinder", %"class.v8::Isolate"*, %"struct.v8::JSEntryStubs", %"struct.v8::MemoryRange", %"class.V8Unwinder::MemoryRanges", i64, %"class.std::__1::set.13" }
%"class.base::Unwinder" = type { i32 (...)**, %"class.base::ModuleCache"* }
%"class.base::ModuleCache" = type { %"class.std::__1::set", %"class.base::internal::flat_tree", %"class.std::__1::vector", %"class.base::ModuleCache::AuxiliaryModuleProvider"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.base::ModuleCache::Module"* }
%"class.base::ModuleCache::Module" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::unique_ptr"* }
%"class.base::ModuleCache::AuxiliaryModuleProvider" = type { i32 (...)** }
%"struct.v8::JSEntryStubs" = type { %"struct.v8::JSEntryStub", %"struct.v8::JSEntryStub", %"struct.v8::JSEntryStub" }
%"struct.v8::JSEntryStub" = type { %"struct.v8::MemoryRange" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.V8Unwinder::MemoryRanges" = type { i64, i64, %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.v8::MemoryRange"* }
%"class.std::__1::set.13" = type { %"class.std::__1::__tree.14" }
%"class.std::__1::__tree.14" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.base::ModuleCache::Module"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"**, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.base::ModuleCache::Module"** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.base::Frame" = type { i64, %"class.base::ModuleCache::Module"* }
%struct.mcontext_t = type { [23 x i64], %struct._libc_fpstate*, [8 x i64] }
%struct._libc_fpstate = type { i16, i16, i16, i16, i64, i64, i32, i32, [8 x %struct._libc_fpxreg], [16 x %struct._libc_xmmreg], [24 x i32] }
%struct._libc_fpxreg = type { [4 x i16], i16, [3 x i16] }
%struct._libc_xmmreg = type { [4 x i32] }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.base::Frame"*, %"struct.base::Frame"*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.base::Frame"* }
%"struct.v8::RegisterState" = type { i8*, i8*, i8*, i8*, %"class.std::__1::unique_ptr.46" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.v8::CalleeSavedRegisters"* }
%"struct.v8::CalleeSavedRegisters" = type opaque
%"struct.V8Unwinder::ModuleCompare" = type { i8 }
%"class.(anonymous namespace)::V8Module" = type <{ %"class.base::ModuleCache::Module", %"struct.v8::MemoryRange", i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }

$_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZN4base11ModuleCache6ModuleD2Ev = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_ = comdat any

$_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS5_PNS_11__tree_nodeIS5_SD_EElEERPNS_15__tree_end_nodeISF_EESG_RKT_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNKSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE4findIS5_EENS_21__tree_const_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEERKT_ = comdat any

$_ZNSt3__16vectorIN4base5FrameENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRmPKNS1_11ModuleCache6ModuleEEEEvDpOT_ = comdat any

@_ZTV10V8Unwinder = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.V8Unwinder*)* @_ZN10V8UnwinderD2Ev to i8*), i8* bitcast (void (%class.V8Unwinder*)* @_ZN10V8UnwinderD0Ev to i8*), i8* bitcast (void (%class.V8Unwinder*)* @_ZN10V8Unwinder14OnStackCaptureEv to i8*), i8* bitcast (void (%class.V8Unwinder*)* @_ZN10V8Unwinder13UpdateModulesEv to i8*), i8* bitcast (i1 (%class.V8Unwinder*, %"struct.base::Frame"*)* @_ZNK10V8Unwinder13CanUnwindFromERKN4base5FrameE to i8*), i8* bitcast (i32 (%class.V8Unwinder*, %struct.mcontext_t*, i64, %"class.std::__1::vector.39"*)* @_ZNK10V8Unwinder9TryUnwindEP10mcontext_tmPNSt3__16vectorIN4base5FrameENS2_9allocatorIS5_EEEE to i8*), i8* bitcast (void (%class.V8Unwinder*)* @_ZN10V8Unwinder17InitializeModulesEv to i8*), i8* bitcast (i64 (%class.V8Unwinder*, i64, %"struct.v8::MemoryRange"*)* @_ZN10V8Unwinder13CopyCodePagesEmPN2v811MemoryRangeE to i8*)] }, align 8
@.str = private unnamed_addr constant [37 x i8] c"../../chrome/renderer/v8_unwinder.cc\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"std::is_sorted(code_ranges_start, code_ranges_end, less_than)\00", align 1
@_ZN10V8Unwinder27kV8EmbeddedCodeRangeBuildIdE = hidden local_unnamed_addr constant [36 x i8] c"5555555507284E1E874EFA4EB754964B999\00", align 16
@_ZN10V8Unwinder19kV8CodeRangeBuildIdE = hidden local_unnamed_addr constant [36 x i8] c"5555555517284E1E874EFA4EB754964B999\00", align 16
@_ZTVN12_GLOBAL__N_18V8ModuleE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ModuleCache::Module"*)* @_ZN4base11ModuleCache6ModuleD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::V8Module"*)* @_ZN12_GLOBAL__N_18V8ModuleD0Ev to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::V8Module"*)* @_ZNK12_GLOBAL__N_18V8Module14GetBaseAddressEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::V8Module"*)* @_ZNK12_GLOBAL__N_18V8Module5GetIdEv to i8*), i8* bitcast (void (%"class.base::FilePath"*, %"class.(anonymous namespace)::V8Module"*)* @_ZNK12_GLOBAL__N_18V8Module16GetDebugBasenameEv to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::V8Module"*)* @_ZNK12_GLOBAL__N_18V8Module7GetSizeEv to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::V8Module"*)* @_ZNK12_GLOBAL__N_18V8Module8IsNativeEv to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [23 x i8] c"V8 Embedded Code Range\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"V8 Code Range\00", align 1

@_ZN10V8UnwinderC1EPN2v87IsolateE = hidden unnamed_addr alias void (%class.V8Unwinder*, %"class.v8::Isolate"*), void (%class.V8Unwinder*, %"class.v8::Isolate"*)* @_ZN10V8UnwinderC2EPN2v87IsolateE
@_ZN10V8UnwinderD1Ev = hidden unnamed_addr alias void (%class.V8Unwinder*), void (%class.V8Unwinder*)* @_ZN10V8UnwinderD2Ev
@_ZN10V8Unwinder12MemoryRangesC1Ev = hidden unnamed_addr alias void (%"class.V8Unwinder::MemoryRanges"*), void (%"class.V8Unwinder::MemoryRanges"*)* @_ZN10V8Unwinder12MemoryRangesC2Ev
@_ZN10V8Unwinder12MemoryRangesD1Ev = hidden unnamed_addr alias void (%"class.V8Unwinder::MemoryRanges"*), void (%"class.V8Unwinder::MemoryRanges"*)* @_ZN10V8Unwinder12MemoryRangesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10V8UnwinderC2EPN2v87IsolateE(%class.V8Unwinder*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.v8::MemoryRange"*
  %5 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 0, i32 1
  store %"class.base::ModuleCache"* null, %"class.base::ModuleCache"** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV10V8Unwinder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 1
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %7, align 8
  %8 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 2
  tail call void @_ZN2v87Isolate15GetJSEntryStubsEv(%"struct.v8::JSEntryStubs"* sret %8, %"class.v8::Isolate"* %1) #13
  %9 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9)
  %10 = bitcast <2 x i64>* %3 to i8**
  %11 = getelementptr inbounds %"struct.v8::MemoryRange", %"struct.v8::MemoryRange"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 16, i1 false) #13
  call void @_ZN2v87Isolate20GetEmbeddedCodeRangeEPPKvPm(%"class.v8::Isolate"* %1, i8** nonnull %10, i64* %11) #13
  %12 = load <2 x i64>, <2 x i64>* %3, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9)
  %13 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 3, i32 0
  %14 = bitcast i8** %13 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %14, align 8
  %15 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 4, i32 0
  %16 = bitcast i64* %15 to <2 x i64>*
  store <2 x i64> <i64 32, i64 0>, <2 x i64>* %16, align 8
  %17 = call i8* @_Znam(i64 512) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 512, i1 false) #13
  %18 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0
  %19 = bitcast %"struct.v8::MemoryRange"** %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 5
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %23 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_node_base"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %23, align 8
  ret void
}

declare void @_ZN2v87Isolate15GetJSEntryStubsEv(%"struct.v8::JSEntryStubs"* sret, %"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10V8UnwinderD2Ev(%class.V8Unwinder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV10V8Unwinder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0
  %4 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.14"* %3, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0
  %8 = load %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"** %7, align 8
  store %"struct.v8::MemoryRange"* null, %"struct.v8::MemoryRange"** %7, align 8
  %9 = icmp eq %"struct.v8::MemoryRange"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = bitcast %"struct.v8::MemoryRange"* %8 to i8*
  tail call void @_ZdaPv(i8* %11) #14
  br label %12

12:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10V8UnwinderD0Ev(%class.V8Unwinder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV10V8Unwinder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0
  %4 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.14"* %3, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0
  %8 = load %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"** %7, align 8
  store %"struct.v8::MemoryRange"* null, %"struct.v8::MemoryRange"** %7, align 8
  %9 = icmp eq %"struct.v8::MemoryRange"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = bitcast %"struct.v8::MemoryRange"* %8 to i8*
  tail call void @_ZdaPv(i8* %11) #14
  br label %12

12:                                               ; preds = %1, %10
  %13 = bitcast %class.V8Unwinder* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10V8Unwinder17InitializeModulesEv(%class.V8Unwinder*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %3 = alloca %"class.std::__1::vector", align 16
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = alloca %"class.base::ModuleCache::Module"*, align 8
  %6 = alloca %"class.std::__1::vector.32", align 8
  %7 = alloca %"class.std::__1::vector", align 16
  %8 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 24, i1 false) #13
  %12 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  %13 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 3
  %14 = tail call i8* @_Znwm(i64 32) #14
  %15 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12_GLOBAL__N_18V8ModuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = bitcast %"struct.v8::MemoryRange"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false) #13
  %18 = getelementptr inbounds i8, i8* %14, i64 24
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 8
  %20 = ptrtoint i8* %14 to i64
  %21 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %20, i64* %21, align 8
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector"* nonnull %3, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #13
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %24, align 8
  %25 = icmp eq %"class.base::ModuleCache::Module"* %23, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %1
  %27 = bitcast %"class.base::ModuleCache::Module"* %23 to void (%"class.base::ModuleCache::Module"*)***
  %28 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %28, i64 1
  %30 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %29, align 8
  call void %30(%"class.base::ModuleCache::Module"* nonnull %23) #13
  br label %31

31:                                               ; preds = %26, %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  %32 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6
  %33 = bitcast %"class.base::ModuleCache::Module"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = bitcast %"class.std::__1::vector"* %3 to i64**
  %35 = load i64*, i64** %34, align 16
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ModuleCache::Module"** %5 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::set.13", %"class.std::__1::set.13"* %32, i64 0, i32 0
  %39 = bitcast %"class.std::__1::__tree_end_node"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %2, align 8
  %40 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.14"* %38, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %2, %"class.base::ModuleCache::Module"** nonnull dereferenceable(8) %5) #13
  %41 = bitcast %"class.std::__1::__tree_node_base"** %40 to %"class.std::__1::__tree_node"**
  %42 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node"* %42, null
  br i1 %43, label %44, label %71

44:                                               ; preds = %31
  %45 = call i8* @_Znwm(i64 40) #14, !noalias !2
  %46 = getelementptr inbounds i8, i8* %45, i64 32
  %47 = load i64, i64* %37, align 8, !noalias !2
  %48 = bitcast i8* %46 to i64*
  store i64 %47, i64* %48, align 8, !noalias !2
  %49 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast i8* %45 to %"class.std::__1::__tree_node_base"*
  %52 = getelementptr inbounds i8, i8* %45, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 16, i1 false) #13
  %53 = bitcast i8* %52 to i64*
  store i64 %50, i64* %53, align 8
  %54 = bitcast %"class.std::__1::__tree_node_base"** %40 to i8**
  store i8* %45, i8** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::set.13", %"class.std::__1::set.13"* %32, i64 0, i32 0, i32 0
  %56 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %44
  %61 = ptrtoint %"class.std::__1::__tree_node_base"* %58 to i64
  %62 = bitcast %"class.std::__1::set.13"* %32 to i64*
  store i64 %61, i64* %62, align 8
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  br label %64

64:                                               ; preds = %60, %44
  %65 = phi %"class.std::__1::__tree_node_base"* [ %51, %44 ], [ %63, %60 ]
  %66 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"* %65) #13
  %68 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %68, align 8
  br label %71

71:                                               ; preds = %31, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %72 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 0, i32 1
  %73 = load %"class.base::ModuleCache"*, %"class.base::ModuleCache"** %72, align 8
  %74 = bitcast %"class.std::__1::vector.32"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 24, i1 false) #13
  %75 = bitcast %"class.std::__1::vector"* %3 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 16
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %78 = bitcast %"class.std::__1::vector"* %7 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %78, align 16
  %79 = bitcast %"class.std::__1::unique_ptr"** %11 to i64*
  %80 = load i64, i64* %79, align 16
  %81 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"** %81 to i64*
  store i64 %80, i64* %82, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 24, i1 false) #13
  call void @_ZN4base11ModuleCache22UpdateNonNativeModulesERKNSt3__16vectorIPKNS0_6ModuleENS1_9allocatorIS5_EEEENS2_INS1_10unique_ptrIS4_NS1_14default_deleteIS4_EEEENS6_ISE_EEEE(%"class.base::ModuleCache"* %73, %"class.std::__1::vector.32"* nonnull dereferenceable(24) %6, %"class.std::__1::vector"* nonnull %7) #13
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %84 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %83, align 16
  %85 = icmp eq %"class.std::__1::unique_ptr"* %84, null
  br i1 %85, label %108, label %86

86:                                               ; preds = %71
  %87 = bitcast %"class.std::__1::unique_ptr"* %84 to i8*
  %88 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %77, align 8
  %89 = icmp eq %"class.std::__1::unique_ptr"* %88, %84
  br i1 %89, label %106, label %90

90:                                               ; preds = %86, %101
  %91 = phi %"class.std::__1::unique_ptr"* [ %92, %101 ], [ %88, %86 ]
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %91, i64 -1
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %93, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %93, align 8
  %95 = icmp eq %"class.base::ModuleCache::Module"* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %90
  %97 = bitcast %"class.base::ModuleCache::Module"* %94 to void (%"class.base::ModuleCache::Module"*)***
  %98 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %98, i64 1
  %100 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %99, align 8
  call void %100(%"class.base::ModuleCache::Module"* nonnull %94) #13
  br label %101

101:                                              ; preds = %96, %90
  %102 = icmp eq %"class.std::__1::unique_ptr"* %92, %84
  br i1 %102, label %103, label %90

103:                                              ; preds = %101
  %104 = bitcast %"class.std::__1::vector"* %7 to i8**
  %105 = load i8*, i8** %104, align 16
  br label %106

106:                                              ; preds = %103, %86
  %107 = phi i8* [ %105, %103 ], [ %87, %86 ]
  store %"class.std::__1::unique_ptr"* %84, %"class.std::__1::unique_ptr"** %77, align 8
  call void @_ZdlPv(i8* %107) #14
  br label %108

108:                                              ; preds = %71, %106
  %109 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %6, i64 0, i32 0, i32 0
  %110 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %109, align 8
  %111 = icmp eq %"class.base::ModuleCache::Module"** %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %108
  %113 = ptrtoint %"class.base::ModuleCache::Module"** %110 to i64
  %114 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %6, i64 0, i32 0, i32 1
  %115 = bitcast %"class.base::ModuleCache::Module"*** %114 to i64*
  store i64 %113, i64* %115, align 8
  %116 = bitcast %"class.base::ModuleCache::Module"** %110 to i8*
  call void @_ZdlPv(i8* %116) #14
  br label %117

117:                                              ; preds = %108, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #13
  %118 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 16
  %119 = icmp eq %"class.std::__1::unique_ptr"* %118, null
  br i1 %119, label %142, label %120

120:                                              ; preds = %117
  %121 = bitcast %"class.std::__1::unique_ptr"* %118 to i8*
  %122 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %123 = icmp eq %"class.std::__1::unique_ptr"* %122, %118
  br i1 %123, label %140, label %124

124:                                              ; preds = %120, %135
  %125 = phi %"class.std::__1::unique_ptr"* [ %126, %135 ], [ %122, %120 ]
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %125, i64 -1
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %126, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %127, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %127, align 8
  %129 = icmp eq %"class.base::ModuleCache::Module"* %128, null
  br i1 %129, label %135, label %130

130:                                              ; preds = %124
  %131 = bitcast %"class.base::ModuleCache::Module"* %128 to void (%"class.base::ModuleCache::Module"*)***
  %132 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %132, i64 1
  %134 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %133, align 8
  call void %134(%"class.base::ModuleCache::Module"* nonnull %128) #13
  br label %135

135:                                              ; preds = %130, %124
  %136 = icmp eq %"class.std::__1::unique_ptr"* %126, %118
  br i1 %136, label %137, label %124

137:                                              ; preds = %135
  %138 = bitcast %"class.std::__1::vector"* %3 to i8**
  %139 = load i8*, i8** %138, align 16
  br label %140

140:                                              ; preds = %137, %120
  %141 = phi i8* [ %139, %137 ], [ %121, %120 ]
  store %"class.std::__1::unique_ptr"* %118, %"class.std::__1::unique_ptr"** %10, align 8
  call void @_ZdlPv(i8* %141) #14
  br label %142

142:                                              ; preds = %117, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base11ModuleCache22UpdateNonNativeModulesERKNSt3__16vectorIPKNS0_6ModuleENS1_9allocatorIS5_EEEENS2_INS1_10unique_ptrIS4_NS1_14default_deleteIS4_EEEENS6_ISE_EEEE(%"class.base::ModuleCache"*, %"class.std::__1::vector.32"* dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10V8Unwinder14OnStackCaptureEv(%class.V8Unwinder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 4, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0
  %5 = load %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"** %4, align 8
  %6 = bitcast %class.V8Unwinder* %0 to i64 (%class.V8Unwinder*, i64, %"struct.v8::MemoryRange"*)***
  %7 = load i64 (%class.V8Unwinder*, i64, %"struct.v8::MemoryRange"*)**, i64 (%class.V8Unwinder*, i64, %"struct.v8::MemoryRange"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%class.V8Unwinder*, i64, %"struct.v8::MemoryRange"*)*, i64 (%class.V8Unwinder*, i64, %"struct.v8::MemoryRange"*)** %7, i64 7
  %9 = load i64 (%class.V8Unwinder*, i64, %"struct.v8::MemoryRange"*)*, i64 (%class.V8Unwinder*, i64, %"struct.v8::MemoryRange"*)** %8, align 8
  %10 = tail call i64 %9(%class.V8Unwinder* %0, i64 %3, %"struct.v8::MemoryRange"* %5) #13
  %11 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 5
  store i64 %10, i64* %11, align 8
  %12 = load i64, i64* %2, align 8
  %13 = icmp ult i64 %12, %10
  %14 = select i1 %13, i64 %12, i64 %10
  %15 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 4, i32 1
  store i64 %14, i64* %15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10V8Unwinder12MemoryRanges7SetSizeEm(%"class.V8Unwinder::MemoryRanges"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.V8Unwinder::MemoryRanges", %"class.V8Unwinder::MemoryRanges"* %0, i64 0, i32 1
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10V8Unwinder13UpdateModulesEv(%class.V8Unwinder*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %3 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %6 = alloca %"class.std::__1::vector", align 16
  %7 = alloca %"class.std::__1::vector.32", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.std::__1::unique_ptr", align 8
  %10 = alloca %"class.base::ModuleCache::Module"*, align 8
  %11 = alloca %"class.std::__1::unique_ptr", align 8
  %12 = alloca %"class.base::ModuleCache::Module"*, align 8
  %13 = alloca %"class.std::__1::vector", align 16
  %14 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 0, i64 24, i1 false) #13
  %18 = bitcast %"class.std::__1::vector.32"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %7, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %7, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #13
  %22 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0
  %23 = load %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"** %22, align 8
  %24 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 4, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"struct.v8::MemoryRange", %"struct.v8::MemoryRange"* %23, i64 %25
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %46, label %28

28:                                               ; preds = %1, %38
  %29 = phi %"struct.v8::MemoryRange"* [ %30, %38 ], [ %23, %1 ]
  %30 = getelementptr inbounds %"struct.v8::MemoryRange", %"struct.v8::MemoryRange"* %29, i64 1
  %31 = icmp eq %"struct.v8::MemoryRange"* %30, %26
  br i1 %31, label %52, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.v8::MemoryRange", %"struct.v8::MemoryRange"* %30, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"struct.v8::MemoryRange", %"struct.v8::MemoryRange"* %29, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = icmp ult i8* %34, %36
  br i1 %37, label %46, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.v8::MemoryRange", %"struct.v8::MemoryRange"* %29, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.v8::MemoryRange", %"struct.v8::MemoryRange"* %29, i64 1, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = icmp uge i8* %36, %34
  %44 = icmp ult i64 %42, %40
  %45 = and i1 %43, %44
  br i1 %45, label %46, label %28

46:                                               ; preds = %32, %38, %1
  %47 = phi %"struct.v8::MemoryRange"* [ %23, %1 ], [ %30, %38 ], [ %30, %32 ]
  %48 = icmp eq %"struct.v8::MemoryRange"* %47, %26
  br i1 %48, label %52, label %49

49:                                               ; preds = %46
  %50 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 133, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0)) #13
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #13
  br label %52

52:                                               ; preds = %28, %46, %49
  %53 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6
  %54 = getelementptr inbounds %"class.std::__1::set.13", %"class.std::__1::set.13"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = icmp ne i64 %25, 0
  %57 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %58 = icmp ne %"class.std::__1::__tree_end_node"* %55, %57
  %59 = and i1 %58, %56
  br i1 %59, label %60, label %80

60:                                               ; preds = %52
  %61 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 3
  %62 = bitcast %"struct.v8::MemoryRange"* %61 to i64*
  %63 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 3, i32 1
  %64 = bitcast %"class.base::ModuleCache::Module"*** %20 to i64*
  %65 = bitcast %"class.std::__1::vector.32"* %7 to i64*
  %66 = bitcast %"class.base::ModuleCache::Module"*** %21 to i64*
  %67 = bitcast %"class.std::__1::set.13"* %53 to i64*
  %68 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %69 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::unique_ptr"* %9 to i8*
  %71 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.std::__1::unique_ptr"** %16 to i64*
  %74 = bitcast %"class.base::ModuleCache::Module"** %10 to i8*
  %75 = bitcast %"class.base::ModuleCache::Module"** %10 to i64*
  %76 = getelementptr inbounds %"class.std::__1::set.13", %"class.std::__1::set.13"* %53, i64 0, i32 0
  %77 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  %78 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  %79 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  br label %98

80:                                               ; preds = %367, %52
  %81 = phi %"class.std::__1::__tree_end_node"* [ %55, %52 ], [ %368, %367 ]
  %82 = phi %"struct.v8::MemoryRange"* [ %23, %52 ], [ %369, %367 ]
  %83 = icmp eq %"struct.v8::MemoryRange"* %82, %26
  br i1 %83, label %373, label %84

84:                                               ; preds = %80
  %85 = bitcast %"class.std::__1::unique_ptr"* %11 to i8*
  %86 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"** %16 to i64*
  %89 = bitcast %"class.base::ModuleCache::Module"** %12 to i8*
  %90 = bitcast %"class.base::ModuleCache::Module"** %12 to i64*
  %91 = getelementptr inbounds %"class.std::__1::set.13", %"class.std::__1::set.13"* %53, i64 0, i32 0
  %92 = bitcast %"class.std::__1::__tree_end_node"** %2 to i8*
  %93 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  %94 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  %95 = bitcast %"class.std::__1::set.13"* %53 to i64*
  %96 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  br label %385

98:                                               ; preds = %60, %367
  %99 = phi %"struct.v8::MemoryRange"* [ %23, %60 ], [ %369, %367 ]
  %100 = phi %"class.std::__1::__tree_end_node"* [ %55, %60 ], [ %368, %367 ]
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 4
  %102 = bitcast %"class.std::__1::__tree_end_node"* %101 to %"class.base::ModuleCache::Module"**
  %103 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %102, align 8
  %104 = bitcast %"struct.v8::MemoryRange"* %99 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"struct.v8::MemoryRange", %"struct.v8::MemoryRange"* %99, i64 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.base::ModuleCache::Module"* %103 to i64 (%"class.base::ModuleCache::Module"*)***
  %109 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %108, align 8
  %110 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %109, i64 2
  %111 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %110, align 8
  %112 = call i64 %111(%"class.base::ModuleCache::Module"* %103) #13
  %113 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %108, align 8
  %114 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %113, i64 5
  %115 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %114, align 8
  %116 = call i64 %115(%"class.base::ModuleCache::Module"* %103) #13
  %117 = icmp ult i64 %105, %112
  br i1 %117, label %122, label %118

118:                                              ; preds = %98
  %119 = icmp uge i64 %112, %105
  %120 = icmp ult i64 %107, %116
  %121 = and i1 %119, %120
  br i1 %121, label %122, label %179

122:                                              ; preds = %98, %118
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #13
  %123 = call i8* @_Znwm(i64 32) #14
  %124 = bitcast i8* %123 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12_GLOBAL__N_18V8ModuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %124, align 8
  %125 = getelementptr inbounds i8, i8* %123, i64 8
  %126 = bitcast %"struct.v8::MemoryRange"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #13
  %127 = getelementptr inbounds i8, i8* %123, i64 24
  %128 = bitcast i8* %127 to i32*
  store i32 1, i32* %128, align 8
  %129 = ptrtoint i8* %123 to i64
  store i64 %129, i64* %71, align 8
  %130 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 16
  %132 = icmp ult %"class.std::__1::unique_ptr"* %130, %131
  br i1 %132, label %133, label %137

133:                                              ; preds = %122
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %72, align 8
  %134 = bitcast %"class.std::__1::unique_ptr"* %130 to i64*
  store i64 %129, i64* %134, align 8
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %130, i64 1
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %135 to i64
  store i64 %136, i64* %73, align 8
  br label %138

137:                                              ; preds = %122
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector"* nonnull %6, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %9) #13
  br label %138

138:                                              ; preds = %133, %137
  %139 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %72, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %72, align 8
  %140 = icmp eq %"class.base::ModuleCache::Module"* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %138
  %142 = bitcast %"class.base::ModuleCache::Module"* %139 to void (%"class.base::ModuleCache::Module"*)***
  %143 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %143, i64 1
  %145 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %144, align 8
  call void %145(%"class.base::ModuleCache::Module"* nonnull %139) #13
  br label %146

146:                                              ; preds = %141, %138
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #13
  %147 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %147, i64 -1, i32 0, i32 0, i32 0
  %149 = bitcast %"class.base::ModuleCache::Module"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* %75, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #13
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #13
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %5, align 8
  %151 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS5_PNS_11__tree_nodeIS5_SD_EElEERPNS_15__tree_end_nodeISF_EESG_RKT_(%"class.std::__1::__tree.14"* %76, %"class.std::__1::__tree_end_node"* %100, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %5, %"class.base::ModuleCache::Module"** nonnull dereferenceable(8) %10) #13
  %152 = bitcast %"class.std::__1::__tree_node_base"** %151 to %"class.std::__1::__tree_node"**
  %153 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node"* %153, null
  br i1 %154, label %155, label %177

155:                                              ; preds = %146
  %156 = call i8* @_Znwm(i64 40) #14, !noalias !5
  %157 = getelementptr inbounds i8, i8* %156, i64 32
  %158 = load i64, i64* %75, align 8, !noalias !5
  %159 = bitcast i8* %157 to i64*
  store i64 %158, i64* %159, align 8, !noalias !5
  %160 = load i64, i64* %79, align 8
  %161 = bitcast i8* %156 to %"class.std::__1::__tree_node_base"*
  %162 = getelementptr inbounds i8, i8* %156, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %156, i8 0, i64 16, i1 false) #13
  %163 = bitcast i8* %162 to i64*
  store i64 %160, i64* %163, align 8
  %164 = bitcast %"class.std::__1::__tree_node_base"** %151 to i8**
  store i8* %156, i8** %164, align 8
  %165 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 0, i32 0
  %167 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %166, align 8
  %168 = icmp eq %"class.std::__1::__tree_node_base"* %167, null
  br i1 %168, label %172, label %169

169:                                              ; preds = %155
  %170 = ptrtoint %"class.std::__1::__tree_node_base"* %167 to i64
  store i64 %170, i64* %67, align 8
  %171 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %151, align 8
  br label %172

172:                                              ; preds = %169, %155
  %173 = phi %"class.std::__1::__tree_node_base"* [ %161, %155 ], [ %171, %169 ]
  %174 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %174, %"class.std::__1::__tree_node_base"* %173) #13
  %175 = load i64, i64* %68, align 8
  %176 = add i64 %175, 1
  store i64 %176, i64* %68, align 8
  br label %177

177:                                              ; preds = %146, %172
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #13
  %178 = getelementptr inbounds %"struct.v8::MemoryRange", %"struct.v8::MemoryRange"* %99, i64 1
  br label %367

179:                                              ; preds = %118
  %180 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %102, align 8
  %181 = bitcast %"class.base::ModuleCache::Module"* %180 to i64 (%"class.base::ModuleCache::Module"*)***
  %182 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %181, align 8
  %183 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %182, i64 2
  %184 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %183, align 8
  %185 = call i64 %184(%"class.base::ModuleCache::Module"* %180) #13
  %186 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %181, align 8
  %187 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %186, i64 5
  %188 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %187, align 8
  %189 = call i64 %188(%"class.base::ModuleCache::Module"* %180) #13
  %190 = load i64, i64* %104, align 8
  %191 = icmp ult i64 %185, %190
  br i1 %191, label %197, label %192

192:                                              ; preds = %179
  %193 = load i64, i64* %106, align 8
  %194 = icmp uge i64 %190, %185
  %195 = icmp ult i64 %189, %193
  %196 = and i1 %194, %195
  br i1 %196, label %197, label %338

197:                                              ; preds = %179, %192
  %198 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %102, align 8
  %199 = bitcast %"class.base::ModuleCache::Module"* %198 to i64 (%"class.base::ModuleCache::Module"*)***
  %200 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %199, align 8
  %201 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %200, i64 2
  %202 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %201, align 8
  %203 = call i64 %202(%"class.base::ModuleCache::Module"* %198) #13
  %204 = load i64, i64* %62, align 8
  %205 = icmp eq i64 %203, %204
  br i1 %205, label %206, label %213

206:                                              ; preds = %197
  %207 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %199, align 8
  %208 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %207, i64 5
  %209 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %208, align 8
  %210 = call i64 %209(%"class.base::ModuleCache::Module"* %198) #13
  %211 = load i64, i64* %63, align 8
  %212 = icmp eq i64 %210, %211
  br i1 %212, label %310, label %213

213:                                              ; preds = %197, %206
  %214 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %20, align 8
  %215 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %21, align 8
  %216 = icmp eq %"class.base::ModuleCache::Module"** %214, %215
  %217 = ptrtoint %"class.base::ModuleCache::Module"** %215 to i64
  br i1 %216, label %224, label %218

218:                                              ; preds = %213
  %219 = bitcast %"class.std::__1::__tree_end_node"* %101 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.base::ModuleCache::Module"** %214 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 1
  %223 = ptrtoint %"class.base::ModuleCache::Module"** %222 to i64
  store i64 %223, i64* %64, align 8
  br label %270

224:                                              ; preds = %213
  %225 = ptrtoint %"class.base::ModuleCache::Module"** %214 to i64
  %226 = load i64, i64* %65, align 8
  %227 = sub i64 %225, %226
  %228 = ashr exact i64 %227, 3
  %229 = add nsw i64 %228, 1
  %230 = icmp ugt i64 %229, 2305843009213693951
  br i1 %230, label %231, label %233

231:                                              ; preds = %224
  %232 = bitcast %"class.std::__1::vector.32"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %232) #15
  unreachable

233:                                              ; preds = %224
  %234 = sub i64 %217, %226
  %235 = ashr exact i64 %234, 3
  %236 = icmp ult i64 %235, 1152921504606846975
  br i1 %236, label %237, label %245

237:                                              ; preds = %233
  %238 = ashr exact i64 %234, 2
  %239 = icmp ult i64 %238, %229
  %240 = select i1 %239, i64 %229, i64 %238
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %250, label %242

242:                                              ; preds = %237
  %243 = icmp ugt i64 %240, 2305843009213693951
  br i1 %243, label %244, label %245

244:                                              ; preds = %242
  call void @abort() #15
  unreachable

245:                                              ; preds = %242, %233
  %246 = phi i64 [ %240, %242 ], [ 2305843009213693951, %233 ]
  %247 = shl i64 %246, 3
  %248 = call i8* @_Znwm(i64 %247) #14
  %249 = bitcast i8* %248 to %"class.base::ModuleCache::Module"**
  br label %250

250:                                              ; preds = %245, %237
  %251 = phi i64 [ %246, %245 ], [ 0, %237 ]
  %252 = phi i8* [ %248, %245 ], [ null, %237 ]
  %253 = phi %"class.base::ModuleCache::Module"** [ %249, %245 ], [ null, %237 ]
  %254 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %253, i64 %228
  %255 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %253, i64 %251
  %256 = ptrtoint %"class.base::ModuleCache::Module"** %255 to i64
  %257 = bitcast %"class.std::__1::__tree_end_node"* %101 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %"class.base::ModuleCache::Module"** %254 to i64*
  store i64 %258, i64* %259, align 8
  %260 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %254, i64 1
  %261 = ptrtoint %"class.base::ModuleCache::Module"** %260 to i64
  %262 = ptrtoint %"class.base::ModuleCache::Module"** %253 to i64
  %263 = icmp sgt i64 %227, 0
  br i1 %263, label %264, label %266

264:                                              ; preds = %250
  %265 = inttoptr i64 %226 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %252, i8* align 8 %265, i64 %227, i1 false) #13
  br label %266

266:                                              ; preds = %264, %250
  store i64 %262, i64* %65, align 8
  store i64 %261, i64* %64, align 8
  store i64 %256, i64* %66, align 8
  %267 = icmp eq i64 %226, 0
  br i1 %267, label %270, label %268

268:                                              ; preds = %266
  %269 = inttoptr i64 %226 to i8*
  call void @_ZdlPv(i8* %269) #14
  br label %270

270:                                              ; preds = %218, %266, %268
  %271 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 1, i32 0
  %272 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %271, align 8
  %273 = icmp eq %"class.std::__1::__tree_node_base"* %272, null
  br i1 %273, label %274, label %282

274:                                              ; preds = %270
  %275 = bitcast %"class.std::__1::__tree_end_node"* %100 to %"class.std::__1::__tree_node_base"*
  %276 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 2
  %277 = bitcast %"class.std::__1::__tree_end_node"* %276 to %"class.std::__1::__tree_end_node"**
  %278 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %277, align 8
  %279 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %278, i64 0, i32 0
  %280 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %279, align 8
  %281 = icmp eq %"class.std::__1::__tree_node_base"* %280, %275
  br i1 %281, label %298, label %289

282:                                              ; preds = %270, %282
  %283 = phi %"class.std::__1::__tree_node_base"* [ %285, %282 ], [ %272, %270 ]
  %284 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %283, i64 0, i32 0, i32 0
  %285 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %284, align 8
  %286 = icmp eq %"class.std::__1::__tree_node_base"* %285, null
  br i1 %286, label %287, label %282

287:                                              ; preds = %282
  %288 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %283, i64 0, i32 0
  br label %298

289:                                              ; preds = %274, %289
  %290 = phi %"class.std::__1::__tree_end_node"** [ %293, %289 ], [ %277, %274 ]
  %291 = bitcast %"class.std::__1::__tree_end_node"** %290 to %"class.std::__1::__tree_node_base"**
  %292 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %291, align 8
  %293 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %292, i64 0, i32 2
  %294 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %293, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %294, i64 0, i32 0
  %296 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %295, align 8
  %297 = icmp eq %"class.std::__1::__tree_node_base"* %296, %292
  br i1 %297, label %298, label %289

298:                                              ; preds = %289, %287, %274
  %299 = phi %"class.std::__1::__tree_end_node"* [ %288, %287 ], [ %278, %274 ], [ %294, %289 ]
  %300 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %301 = icmp eq %"class.std::__1::__tree_end_node"* %300, %100
  br i1 %301, label %302, label %304

302:                                              ; preds = %298
  %303 = ptrtoint %"class.std::__1::__tree_end_node"* %299 to i64
  store i64 %303, i64* %67, align 8
  br label %304

304:                                              ; preds = %298, %302
  %305 = load i64, i64* %68, align 8
  %306 = add i64 %305, -1
  store i64 %306, i64* %68, align 8
  %307 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %308 = bitcast %"class.std::__1::__tree_end_node"* %100 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %307, %"class.std::__1::__tree_node_base"* %308) #13
  %309 = bitcast %"class.std::__1::__tree_end_node"* %100 to i8*
  call void @_ZdlPv(i8* %309) #14
  br label %367

310:                                              ; preds = %206
  %311 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 1, i32 0
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  %313 = icmp eq %"class.std::__1::__tree_node_base"* %312, null
  br i1 %313, label %314, label %322

314:                                              ; preds = %310
  %315 = bitcast %"class.std::__1::__tree_end_node"* %100 to %"class.std::__1::__tree_node_base"*
  %316 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 2
  %317 = bitcast %"class.std::__1::__tree_end_node"* %316 to %"class.std::__1::__tree_end_node"**
  %318 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %317, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %318, i64 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, %315
  br i1 %321, label %367, label %329

322:                                              ; preds = %310, %322
  %323 = phi %"class.std::__1::__tree_node_base"* [ %325, %322 ], [ %312, %310 ]
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %323, i64 0, i32 0, i32 0
  %325 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %324, align 8
  %326 = icmp eq %"class.std::__1::__tree_node_base"* %325, null
  br i1 %326, label %327, label %322

327:                                              ; preds = %322
  %328 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %323, i64 0, i32 0
  br label %367

329:                                              ; preds = %314, %329
  %330 = phi %"class.std::__1::__tree_end_node"** [ %333, %329 ], [ %317, %314 ]
  %331 = bitcast %"class.std::__1::__tree_end_node"** %330 to %"class.std::__1::__tree_node_base"**
  %332 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %331, align 8
  %333 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %332, i64 0, i32 2
  %334 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %333, align 8
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %334, i64 0, i32 0
  %336 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %335, align 8
  %337 = icmp eq %"class.std::__1::__tree_node_base"* %336, %332
  br i1 %337, label %367, label %329

338:                                              ; preds = %192
  %339 = getelementptr inbounds %"struct.v8::MemoryRange", %"struct.v8::MemoryRange"* %99, i64 1
  %340 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 1, i32 0
  %341 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %340, align 8
  %342 = icmp eq %"class.std::__1::__tree_node_base"* %341, null
  br i1 %342, label %343, label %351

343:                                              ; preds = %338
  %344 = bitcast %"class.std::__1::__tree_end_node"* %100 to %"class.std::__1::__tree_node_base"*
  %345 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 2
  %346 = bitcast %"class.std::__1::__tree_end_node"* %345 to %"class.std::__1::__tree_end_node"**
  %347 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %347, i64 0, i32 0
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %348, align 8
  %350 = icmp eq %"class.std::__1::__tree_node_base"* %349, %344
  br i1 %350, label %367, label %358

351:                                              ; preds = %338, %351
  %352 = phi %"class.std::__1::__tree_node_base"* [ %354, %351 ], [ %341, %338 ]
  %353 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %352, i64 0, i32 0, i32 0
  %354 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %353, align 8
  %355 = icmp eq %"class.std::__1::__tree_node_base"* %354, null
  br i1 %355, label %356, label %351

356:                                              ; preds = %351
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %352, i64 0, i32 0
  br label %367

358:                                              ; preds = %343, %358
  %359 = phi %"class.std::__1::__tree_end_node"** [ %362, %358 ], [ %346, %343 ]
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to %"class.std::__1::__tree_node_base"**
  %361 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %361, i64 0, i32 2
  %363 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %362, align 8
  %364 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %363, i64 0, i32 0
  %365 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %364, align 8
  %366 = icmp eq %"class.std::__1::__tree_node_base"* %365, %361
  br i1 %366, label %367, label %358

367:                                              ; preds = %358, %329, %356, %343, %327, %314, %304, %177
  %368 = phi %"class.std::__1::__tree_end_node"* [ %100, %177 ], [ %299, %304 ], [ %328, %327 ], [ %318, %314 ], [ %357, %356 ], [ %347, %343 ], [ %334, %329 ], [ %363, %358 ]
  %369 = phi %"struct.v8::MemoryRange"* [ %178, %177 ], [ %99, %304 ], [ %99, %327 ], [ %99, %314 ], [ %339, %356 ], [ %339, %343 ], [ %99, %329 ], [ %339, %358 ]
  %370 = icmp ne %"struct.v8::MemoryRange"* %369, %26
  %371 = icmp ne %"class.std::__1::__tree_end_node"* %368, %57
  %372 = and i1 %371, %370
  br i1 %372, label %98, label %80

373:                                              ; preds = %441, %80
  %374 = icmp eq %"class.std::__1::__tree_end_node"* %81, %57
  br i1 %374, label %591, label %375

375:                                              ; preds = %373
  %376 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 3
  %377 = bitcast %"struct.v8::MemoryRange"* %376 to i64*
  %378 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 3, i32 1
  %379 = bitcast %"class.base::ModuleCache::Module"*** %20 to i64*
  %380 = bitcast %"class.std::__1::vector.32"* %7 to i64*
  %381 = bitcast %"class.base::ModuleCache::Module"*** %21 to i64*
  %382 = bitcast %"class.std::__1::set.13"* %53 to i64*
  %383 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %384 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %444

385:                                              ; preds = %84, %441
  %386 = phi %"struct.v8::MemoryRange"* [ %82, %84 ], [ %442, %441 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #13
  %387 = call i8* @_Znwm(i64 32) #14
  %388 = bitcast i8* %387 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12_GLOBAL__N_18V8ModuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %388, align 8
  %389 = getelementptr inbounds i8, i8* %387, i64 8
  %390 = bitcast %"struct.v8::MemoryRange"* %386 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %389, i8* align 8 %390, i64 16, i1 false) #13
  %391 = getelementptr inbounds i8, i8* %387, i64 24
  %392 = bitcast i8* %391 to i32*
  store i32 1, i32* %392, align 8
  %393 = ptrtoint i8* %387 to i64
  store i64 %393, i64* %86, align 8
  %394 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %395 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 16
  %396 = icmp ult %"class.std::__1::unique_ptr"* %394, %395
  br i1 %396, label %397, label %401

397:                                              ; preds = %385
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %87, align 8
  %398 = bitcast %"class.std::__1::unique_ptr"* %394 to i64*
  store i64 %393, i64* %398, align 8
  %399 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %394, i64 1
  %400 = ptrtoint %"class.std::__1::unique_ptr"* %399 to i64
  store i64 %400, i64* %88, align 8
  br label %402

401:                                              ; preds = %385
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector"* nonnull %6, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %11) #13
  br label %402

402:                                              ; preds = %397, %401
  %403 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %87, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %87, align 8
  %404 = icmp eq %"class.base::ModuleCache::Module"* %403, null
  br i1 %404, label %410, label %405

405:                                              ; preds = %402
  %406 = bitcast %"class.base::ModuleCache::Module"* %403 to void (%"class.base::ModuleCache::Module"*)***
  %407 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %406, align 8
  %408 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %407, i64 1
  %409 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %408, align 8
  call void %409(%"class.base::ModuleCache::Module"* nonnull %403) #13
  br label %410

410:                                              ; preds = %405, %402
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #13
  %411 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %412 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %411, i64 -1, i32 0, i32 0, i32 0
  %413 = bitcast %"class.base::ModuleCache::Module"** %412 to i64*
  %414 = load i64, i64* %413, align 8
  store i64 %414, i64* %90, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #13
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #13
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %3, align 8
  %415 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS5_PNS_11__tree_nodeIS5_SD_EElEERPNS_15__tree_end_nodeISF_EESG_RKT_(%"class.std::__1::__tree.14"* %91, %"class.std::__1::__tree_end_node"* %81, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %2, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %3, %"class.base::ModuleCache::Module"** nonnull dereferenceable(8) %12) #13
  %416 = bitcast %"class.std::__1::__tree_node_base"** %415 to %"class.std::__1::__tree_node"**
  %417 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %416, align 8
  %418 = icmp eq %"class.std::__1::__tree_node"* %417, null
  br i1 %418, label %419, label %441

419:                                              ; preds = %410
  %420 = call i8* @_Znwm(i64 40) #14, !noalias !8
  %421 = getelementptr inbounds i8, i8* %420, i64 32
  %422 = load i64, i64* %90, align 8, !noalias !8
  %423 = bitcast i8* %421 to i64*
  store i64 %422, i64* %423, align 8, !noalias !8
  %424 = load i64, i64* %94, align 8
  %425 = bitcast i8* %420 to %"class.std::__1::__tree_node_base"*
  %426 = getelementptr inbounds i8, i8* %420, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %420, i8 0, i64 16, i1 false) #13
  %427 = bitcast i8* %426 to i64*
  store i64 %424, i64* %427, align 8
  %428 = bitcast %"class.std::__1::__tree_node_base"** %415 to i8**
  store i8* %420, i8** %428, align 8
  %429 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %430 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %429, i64 0, i32 0
  %431 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %430, align 8
  %432 = icmp eq %"class.std::__1::__tree_node_base"* %431, null
  br i1 %432, label %436, label %433

433:                                              ; preds = %419
  %434 = ptrtoint %"class.std::__1::__tree_node_base"* %431 to i64
  store i64 %434, i64* %95, align 8
  %435 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %415, align 8
  br label %436

436:                                              ; preds = %433, %419
  %437 = phi %"class.std::__1::__tree_node_base"* [ %425, %419 ], [ %435, %433 ]
  %438 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %438, %"class.std::__1::__tree_node_base"* %437) #13
  %439 = load i64, i64* %97, align 8
  %440 = add i64 %439, 1
  store i64 %440, i64* %97, align 8
  br label %441

441:                                              ; preds = %410, %436
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #13
  %442 = getelementptr inbounds %"struct.v8::MemoryRange", %"struct.v8::MemoryRange"* %386, i64 1
  %443 = icmp eq %"struct.v8::MemoryRange"* %442, %26
  br i1 %443, label %373, label %385

444:                                              ; preds = %375, %588
  %445 = phi %"class.std::__1::__tree_end_node"* [ %81, %375 ], [ %589, %588 ]
  %446 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %445, i64 4
  %447 = bitcast %"class.std::__1::__tree_end_node"* %446 to %"class.base::ModuleCache::Module"**
  %448 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %447, align 8
  %449 = bitcast %"class.base::ModuleCache::Module"* %448 to i64 (%"class.base::ModuleCache::Module"*)***
  %450 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %449, align 8
  %451 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %450, i64 2
  %452 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %451, align 8
  %453 = call i64 %452(%"class.base::ModuleCache::Module"* %448) #13
  %454 = load i64, i64* %377, align 8
  %455 = icmp eq i64 %453, %454
  br i1 %455, label %456, label %463

456:                                              ; preds = %444
  %457 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %449, align 8
  %458 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %457, i64 5
  %459 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %458, align 8
  %460 = call i64 %459(%"class.base::ModuleCache::Module"* %448) #13
  %461 = load i64, i64* %378, align 8
  %462 = icmp eq i64 %460, %461
  br i1 %462, label %560, label %463

463:                                              ; preds = %444, %456
  %464 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %20, align 8
  %465 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %21, align 8
  %466 = icmp eq %"class.base::ModuleCache::Module"** %464, %465
  %467 = ptrtoint %"class.base::ModuleCache::Module"** %465 to i64
  br i1 %466, label %474, label %468

468:                                              ; preds = %463
  %469 = bitcast %"class.std::__1::__tree_end_node"* %446 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = bitcast %"class.base::ModuleCache::Module"** %464 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %464, i64 1
  %473 = ptrtoint %"class.base::ModuleCache::Module"** %472 to i64
  store i64 %473, i64* %379, align 8
  br label %520

474:                                              ; preds = %463
  %475 = ptrtoint %"class.base::ModuleCache::Module"** %464 to i64
  %476 = load i64, i64* %380, align 8
  %477 = sub i64 %475, %476
  %478 = ashr exact i64 %477, 3
  %479 = add nsw i64 %478, 1
  %480 = icmp ugt i64 %479, 2305843009213693951
  br i1 %480, label %481, label %483

481:                                              ; preds = %474
  %482 = bitcast %"class.std::__1::vector.32"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %482) #15
  unreachable

483:                                              ; preds = %474
  %484 = sub i64 %467, %476
  %485 = ashr exact i64 %484, 3
  %486 = icmp ult i64 %485, 1152921504606846975
  br i1 %486, label %487, label %495

487:                                              ; preds = %483
  %488 = ashr exact i64 %484, 2
  %489 = icmp ult i64 %488, %479
  %490 = select i1 %489, i64 %479, i64 %488
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %500, label %492

492:                                              ; preds = %487
  %493 = icmp ugt i64 %490, 2305843009213693951
  br i1 %493, label %494, label %495

494:                                              ; preds = %492
  call void @abort() #15
  unreachable

495:                                              ; preds = %492, %483
  %496 = phi i64 [ %490, %492 ], [ 2305843009213693951, %483 ]
  %497 = shl i64 %496, 3
  %498 = call i8* @_Znwm(i64 %497) #14
  %499 = bitcast i8* %498 to %"class.base::ModuleCache::Module"**
  br label %500

500:                                              ; preds = %495, %487
  %501 = phi i64 [ %496, %495 ], [ 0, %487 ]
  %502 = phi i8* [ %498, %495 ], [ null, %487 ]
  %503 = phi %"class.base::ModuleCache::Module"** [ %499, %495 ], [ null, %487 ]
  %504 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %503, i64 %478
  %505 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %503, i64 %501
  %506 = ptrtoint %"class.base::ModuleCache::Module"** %505 to i64
  %507 = bitcast %"class.std::__1::__tree_end_node"* %446 to i64*
  %508 = load i64, i64* %507, align 8
  %509 = bitcast %"class.base::ModuleCache::Module"** %504 to i64*
  store i64 %508, i64* %509, align 8
  %510 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %504, i64 1
  %511 = ptrtoint %"class.base::ModuleCache::Module"** %510 to i64
  %512 = ptrtoint %"class.base::ModuleCache::Module"** %503 to i64
  %513 = icmp sgt i64 %477, 0
  br i1 %513, label %514, label %516

514:                                              ; preds = %500
  %515 = inttoptr i64 %476 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %502, i8* align 8 %515, i64 %477, i1 false) #13
  br label %516

516:                                              ; preds = %514, %500
  store i64 %512, i64* %380, align 8
  store i64 %511, i64* %379, align 8
  store i64 %506, i64* %381, align 8
  %517 = icmp eq i64 %476, 0
  br i1 %517, label %520, label %518

518:                                              ; preds = %516
  %519 = inttoptr i64 %476 to i8*
  call void @_ZdlPv(i8* %519) #14
  br label %520

520:                                              ; preds = %468, %516, %518
  %521 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %445, i64 1, i32 0
  %522 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %521, align 8
  %523 = icmp eq %"class.std::__1::__tree_node_base"* %522, null
  br i1 %523, label %524, label %532

524:                                              ; preds = %520
  %525 = bitcast %"class.std::__1::__tree_end_node"* %445 to %"class.std::__1::__tree_node_base"*
  %526 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %445, i64 2
  %527 = bitcast %"class.std::__1::__tree_end_node"* %526 to %"class.std::__1::__tree_end_node"**
  %528 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %527, align 8
  %529 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %528, i64 0, i32 0
  %530 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %529, align 8
  %531 = icmp eq %"class.std::__1::__tree_node_base"* %530, %525
  br i1 %531, label %548, label %539

532:                                              ; preds = %520, %532
  %533 = phi %"class.std::__1::__tree_node_base"* [ %535, %532 ], [ %522, %520 ]
  %534 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %533, i64 0, i32 0, i32 0
  %535 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %534, align 8
  %536 = icmp eq %"class.std::__1::__tree_node_base"* %535, null
  br i1 %536, label %537, label %532

537:                                              ; preds = %532
  %538 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %533, i64 0, i32 0
  br label %548

539:                                              ; preds = %524, %539
  %540 = phi %"class.std::__1::__tree_end_node"** [ %543, %539 ], [ %527, %524 ]
  %541 = bitcast %"class.std::__1::__tree_end_node"** %540 to %"class.std::__1::__tree_node_base"**
  %542 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %541, align 8
  %543 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %542, i64 0, i32 2
  %544 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %543, align 8
  %545 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %544, i64 0, i32 0
  %546 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %545, align 8
  %547 = icmp eq %"class.std::__1::__tree_node_base"* %546, %542
  br i1 %547, label %548, label %539

548:                                              ; preds = %539, %537, %524
  %549 = phi %"class.std::__1::__tree_end_node"* [ %538, %537 ], [ %528, %524 ], [ %544, %539 ]
  %550 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %551 = icmp eq %"class.std::__1::__tree_end_node"* %550, %445
  br i1 %551, label %552, label %554

552:                                              ; preds = %548
  %553 = ptrtoint %"class.std::__1::__tree_end_node"* %549 to i64
  store i64 %553, i64* %382, align 8
  br label %554

554:                                              ; preds = %548, %552
  %555 = load i64, i64* %383, align 8
  %556 = add i64 %555, -1
  store i64 %556, i64* %383, align 8
  %557 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %384, align 8
  %558 = bitcast %"class.std::__1::__tree_end_node"* %445 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %557, %"class.std::__1::__tree_node_base"* %558) #13
  %559 = bitcast %"class.std::__1::__tree_end_node"* %445 to i8*
  call void @_ZdlPv(i8* %559) #14
  br label %588

560:                                              ; preds = %456
  %561 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %445, i64 1, i32 0
  %562 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %561, align 8
  %563 = icmp eq %"class.std::__1::__tree_node_base"* %562, null
  br i1 %563, label %564, label %572

564:                                              ; preds = %560
  %565 = bitcast %"class.std::__1::__tree_end_node"* %445 to %"class.std::__1::__tree_node_base"*
  %566 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %445, i64 2
  %567 = bitcast %"class.std::__1::__tree_end_node"* %566 to %"class.std::__1::__tree_end_node"**
  %568 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %567, align 8
  %569 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %568, i64 0, i32 0
  %570 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %569, align 8
  %571 = icmp eq %"class.std::__1::__tree_node_base"* %570, %565
  br i1 %571, label %588, label %579

572:                                              ; preds = %560, %572
  %573 = phi %"class.std::__1::__tree_node_base"* [ %575, %572 ], [ %562, %560 ]
  %574 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %573, i64 0, i32 0, i32 0
  %575 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %574, align 8
  %576 = icmp eq %"class.std::__1::__tree_node_base"* %575, null
  br i1 %576, label %577, label %572

577:                                              ; preds = %572
  %578 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %573, i64 0, i32 0
  br label %588

579:                                              ; preds = %564, %579
  %580 = phi %"class.std::__1::__tree_end_node"** [ %583, %579 ], [ %567, %564 ]
  %581 = bitcast %"class.std::__1::__tree_end_node"** %580 to %"class.std::__1::__tree_node_base"**
  %582 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %581, align 8
  %583 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %582, i64 0, i32 2
  %584 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %583, align 8
  %585 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %584, i64 0, i32 0
  %586 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %585, align 8
  %587 = icmp eq %"class.std::__1::__tree_node_base"* %586, %582
  br i1 %587, label %588, label %579

588:                                              ; preds = %579, %577, %564, %554
  %589 = phi %"class.std::__1::__tree_end_node"* [ %549, %554 ], [ %578, %577 ], [ %568, %564 ], [ %584, %579 ]
  %590 = icmp eq %"class.std::__1::__tree_end_node"* %589, %57
  br i1 %590, label %591, label %444

591:                                              ; preds = %588, %373
  %592 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 0, i32 1
  %593 = load %"class.base::ModuleCache"*, %"class.base::ModuleCache"** %592, align 8
  %594 = bitcast %"class.std::__1::vector"* %6 to <2 x i64>*
  %595 = load <2 x i64>, <2 x i64>* %594, align 16
  %596 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 1
  %597 = bitcast %"class.std::__1::vector"* %13 to <2 x i64>*
  store <2 x i64> %595, <2 x i64>* %597, align 16
  %598 = bitcast %"class.std::__1::unique_ptr"** %17 to i64*
  %599 = load i64, i64* %598, align 16
  %600 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %601 = bitcast %"class.std::__1::unique_ptr"** %600 to i64*
  store i64 %599, i64* %601, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 0, i64 24, i1 false) #13
  call void @_ZN4base11ModuleCache22UpdateNonNativeModulesERKNSt3__16vectorIPKNS0_6ModuleENS1_9allocatorIS5_EEEENS2_INS1_10unique_ptrIS4_NS1_14default_deleteIS4_EEEENS6_ISE_EEEE(%"class.base::ModuleCache"* %593, %"class.std::__1::vector.32"* nonnull dereferenceable(24) %7, %"class.std::__1::vector"* nonnull %13) #13
  %602 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  %603 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %602, align 16
  %604 = icmp eq %"class.std::__1::unique_ptr"* %603, null
  br i1 %604, label %627, label %605

605:                                              ; preds = %591
  %606 = bitcast %"class.std::__1::unique_ptr"* %603 to i8*
  %607 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %596, align 8
  %608 = icmp eq %"class.std::__1::unique_ptr"* %607, %603
  br i1 %608, label %625, label %609

609:                                              ; preds = %605, %620
  %610 = phi %"class.std::__1::unique_ptr"* [ %611, %620 ], [ %607, %605 ]
  %611 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %610, i64 -1
  %612 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %611, i64 0, i32 0, i32 0, i32 0
  %613 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %612, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %612, align 8
  %614 = icmp eq %"class.base::ModuleCache::Module"* %613, null
  br i1 %614, label %620, label %615

615:                                              ; preds = %609
  %616 = bitcast %"class.base::ModuleCache::Module"* %613 to void (%"class.base::ModuleCache::Module"*)***
  %617 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %616, align 8
  %618 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %617, i64 1
  %619 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %618, align 8
  call void %619(%"class.base::ModuleCache::Module"* nonnull %613) #13
  br label %620

620:                                              ; preds = %615, %609
  %621 = icmp eq %"class.std::__1::unique_ptr"* %611, %603
  br i1 %621, label %622, label %609

622:                                              ; preds = %620
  %623 = bitcast %"class.std::__1::vector"* %13 to i8**
  %624 = load i8*, i8** %623, align 16
  br label %625

625:                                              ; preds = %622, %605
  %626 = phi i8* [ %624, %622 ], [ %606, %605 ]
  store %"class.std::__1::unique_ptr"* %603, %"class.std::__1::unique_ptr"** %596, align 8
  call void @_ZdlPv(i8* %626) #14
  br label %627

627:                                              ; preds = %591, %625
  %628 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 5
  %629 = load i64, i64* %628, align 8
  %630 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 4, i32 0
  %631 = load i64, i64* %630, align 8
  %632 = icmp ult i64 %631, %629
  br i1 %632, label %633, label %665

633:                                              ; preds = %627, %633
  %634 = phi i64 [ %635, %633 ], [ %631, %627 ]
  %635 = shl i64 %634, 1
  %636 = icmp ult i64 %635, %629
  br i1 %636, label %633, label %637

637:                                              ; preds = %633
  store i64 %635, i64* %630, align 8
  %638 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %635, i64 16) #13
  %639 = extractvalue { i64, i1 } %638, 1
  %640 = extractvalue { i64, i1 } %638, 0
  %641 = select i1 %639, i64 -1, i64 %640
  %642 = call i8* @_Znam(i64 %641) #14
  %643 = icmp eq i64 %635, 0
  br i1 %643, label %646, label %644

644:                                              ; preds = %637
  %645 = shl i64 %634, 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %642, i8 0, i64 %645, i1 false) #13
  br label %646

646:                                              ; preds = %644, %637
  %647 = ptrtoint i8* %642 to i64
  %648 = load i64, i64* %24, align 8
  %649 = icmp eq i64 %648, 0
  br i1 %649, label %650, label %653

650:                                              ; preds = %646
  %651 = load %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"** %22, align 8
  %652 = bitcast %"struct.v8::MemoryRange"* %651 to i8*
  br label %658

653:                                              ; preds = %646
  %654 = shl nuw i64 %648, 4
  %655 = bitcast %"struct.v8::MemoryRange"** %22 to i8**
  %656 = load i8*, i8** %655, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %642, i8* align 8 %656, i64 %654, i1 false) #13
  %657 = bitcast i8* %656 to %"struct.v8::MemoryRange"*
  br label %658

658:                                              ; preds = %653, %650
  %659 = phi i8* [ %652, %650 ], [ %656, %653 ]
  %660 = phi %"struct.v8::MemoryRange"* [ %651, %650 ], [ %657, %653 ]
  %661 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 4, i32 2
  %662 = bitcast %"class.std::__1::unique_ptr.9"* %661 to i64*
  store i64 %647, i64* %662, align 8
  %663 = icmp eq %"struct.v8::MemoryRange"* %660, null
  br i1 %663, label %665, label %664

664:                                              ; preds = %658
  call void @_ZdaPv(i8* %659) #14
  br label %665

665:                                              ; preds = %627, %658, %664
  %666 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %19, align 8
  %667 = icmp eq %"class.base::ModuleCache::Module"** %666, null
  br i1 %667, label %672, label %668

668:                                              ; preds = %665
  %669 = ptrtoint %"class.base::ModuleCache::Module"** %666 to i64
  %670 = bitcast %"class.base::ModuleCache::Module"*** %20 to i64*
  store i64 %669, i64* %670, align 8
  %671 = bitcast %"class.base::ModuleCache::Module"** %666 to i8*
  call void @_ZdlPv(i8* %671) #14
  br label %672

672:                                              ; preds = %665, %668
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #13
  %673 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %15, align 16
  %674 = icmp eq %"class.std::__1::unique_ptr"* %673, null
  br i1 %674, label %697, label %675

675:                                              ; preds = %672
  %676 = bitcast %"class.std::__1::unique_ptr"* %673 to i8*
  %677 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %678 = icmp eq %"class.std::__1::unique_ptr"* %677, %673
  br i1 %678, label %695, label %679

679:                                              ; preds = %675, %690
  %680 = phi %"class.std::__1::unique_ptr"* [ %681, %690 ], [ %677, %675 ]
  %681 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %680, i64 -1
  %682 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %681, i64 0, i32 0, i32 0, i32 0
  %683 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %682, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %682, align 8
  %684 = icmp eq %"class.base::ModuleCache::Module"* %683, null
  br i1 %684, label %690, label %685

685:                                              ; preds = %679
  %686 = bitcast %"class.base::ModuleCache::Module"* %683 to void (%"class.base::ModuleCache::Module"*)***
  %687 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %686, align 8
  %688 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %687, i64 1
  %689 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %688, align 8
  call void %689(%"class.base::ModuleCache::Module"* nonnull %683) #13
  br label %690

690:                                              ; preds = %685, %679
  %691 = icmp eq %"class.std::__1::unique_ptr"* %681, %673
  br i1 %691, label %692, label %679

692:                                              ; preds = %690
  %693 = bitcast %"class.std::__1::vector"* %6 to i8**
  %694 = load i8*, i8** %693, align 16
  br label %695

695:                                              ; preds = %692, %675
  %696 = phi i8* [ %694, %692 ], [ %676, %675 ]
  store %"class.std::__1::unique_ptr"* %673, %"class.std::__1::unique_ptr"** %16, align 8
  call void @_ZdlPv(i8* %696) #14
  br label %697

697:                                              ; preds = %672, %695
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10V8Unwinder12MemoryRanges25ExpandCapacityIfNecessaryEm(%"class.V8Unwinder::MemoryRanges"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.V8Unwinder::MemoryRanges", %"class.V8Unwinder::MemoryRanges"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, %1
  br i1 %5, label %6, label %41

6:                                                ; preds = %2, %6
  %7 = phi i64 [ %8, %6 ], [ %4, %2 ]
  %8 = shl i64 %7, 1
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %6, label %10

10:                                               ; preds = %6
  store i64 %8, i64* %3, align 8
  %11 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %8, i64 16) #13
  %12 = extractvalue { i64, i1 } %11, 1
  %13 = extractvalue { i64, i1 } %11, 0
  %14 = select i1 %12, i64 -1, i64 %13
  %15 = tail call i8* @_Znam(i64 %14) #14
  %16 = icmp eq i64 %8, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = shl i64 %7, 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 %18, i1 false)
  br label %19

19:                                               ; preds = %17, %10
  %20 = ptrtoint i8* %15 to i64
  %21 = getelementptr inbounds %"class.V8Unwinder::MemoryRanges", %"class.V8Unwinder::MemoryRanges"* %0, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.V8Unwinder::MemoryRanges", %"class.V8Unwinder::MemoryRanges"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"** %25, align 8
  %27 = bitcast %"struct.v8::MemoryRange"* %26 to i8*
  br label %34

28:                                               ; preds = %19
  %29 = shl nuw i64 %22, 4
  %30 = getelementptr inbounds %"class.V8Unwinder::MemoryRanges", %"class.V8Unwinder::MemoryRanges"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %31 = bitcast %"struct.v8::MemoryRange"** %30 to i8**
  %32 = load i8*, i8** %31, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %32, i64 %29, i1 false) #13
  %33 = bitcast i8* %32 to %"struct.v8::MemoryRange"*
  br label %34

34:                                               ; preds = %24, %28
  %35 = phi i8* [ %27, %24 ], [ %32, %28 ]
  %36 = phi %"struct.v8::MemoryRange"* [ %26, %24 ], [ %33, %28 ]
  %37 = getelementptr inbounds %"class.V8Unwinder::MemoryRanges", %"class.V8Unwinder::MemoryRanges"* %0, i64 0, i32 2
  %38 = bitcast %"class.std::__1::unique_ptr.9"* %37 to i64*
  store i64 %20, i64* %38, align 8
  %39 = icmp eq %"struct.v8::MemoryRange"* %36, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %34
  tail call void @_ZdaPv(i8* %35) #14
  br label %41

41:                                               ; preds = %34, %40, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10V8Unwinder13CanUnwindFromERKN4base5FrameE(%class.V8Unwinder*, %"struct.base::Frame"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ModuleCache::Module"*, align 8
  %4 = bitcast %"class.base::ModuleCache::Module"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %1, i64 0, i32 1
  %6 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %5, align 8
  store %"class.base::ModuleCache::Module"* %6, %"class.base::ModuleCache::Module"** %3, align 8
  %7 = icmp eq %"class.base::ModuleCache::Module"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0
  %10 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE4findIS5_EENS_21__tree_const_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEERKT_(%"class.std::__1::__tree.14"* %9, %"class.base::ModuleCache::Module"** nonnull dereferenceable(8) %3) #13
  %11 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %12 = icmp ne %"class.std::__1::__tree_end_node"* %10, %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i1 [ %12, %8 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10V8Unwinder9TryUnwindEP10mcontext_tmPNSt3__16vectorIN4base5FrameENS2_9allocatorIS5_EEEE(%class.V8Unwinder*, %struct.mcontext_t*, i64, %"class.std::__1::vector.39"*) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.v8::RegisterState", align 16
  %6 = alloca %"class.base::ModuleCache::Module"*, align 8
  %7 = bitcast %"struct.v8::RegisterState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"struct.v8::RegisterState", %"struct.v8::RegisterState"* %5, i64 0, i32 2
  %9 = bitcast %"struct.v8::RegisterState"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 40, i1 false)
  call void @_ZN2v813RegisterStateC1Ev(%"struct.v8::RegisterState"* nonnull %5) #13
  %10 = getelementptr inbounds %struct.mcontext_t, %struct.mcontext_t* %1, i64 0, i32 0, i64 16
  %11 = getelementptr inbounds %struct.mcontext_t, %struct.mcontext_t* %1, i64 0, i32 0, i64 15
  %12 = bitcast i64* %11 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8
  %14 = shufflevector <2 x i64> %13, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %15 = bitcast %"struct.v8::RegisterState"* %5 to <2 x i64>*
  store <2 x i64> %14, <2 x i64>* %15, align 16
  %16 = getelementptr inbounds %struct.mcontext_t, %struct.mcontext_t* %1, i64 0, i32 0, i64 10
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8** %8 to i64*
  store i64 %17, i64* %18, align 16
  %19 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 2
  %20 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 4, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0
  %23 = load %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"** %22, align 8
  %24 = inttoptr i64 %2 to i8*
  %25 = call zeroext i1 @_ZN2v88Unwinder17TryUnwindV8FramesERKNS_12JSEntryStubsEmPKNS_11MemoryRangeEPNS_13RegisterStateEPKv(%"struct.v8::JSEntryStubs"* dereferenceable(48) %19, i64 %21, %"struct.v8::MemoryRange"* %23, %"struct.v8::RegisterState"* nonnull %5, i8* %24) #13
  br i1 %25, label %26, label %49

26:                                               ; preds = %4
  %27 = bitcast %"struct.v8::RegisterState"* %5 to i64*
  %28 = getelementptr inbounds %"struct.v8::RegisterState", %"struct.v8::RegisterState"* %5, i64 0, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %27, align 16
  store i64 %30, i64* %10, align 8
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %11, align 8
  %32 = load i64, i64* %18, align 16
  store i64 %32, i64* %16, align 8
  %33 = bitcast %"class.base::ModuleCache::Module"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 0, i32 1
  %35 = load %"class.base::ModuleCache"*, %"class.base::ModuleCache"** %34, align 8
  %36 = call %"class.base::ModuleCache::Module"* @_ZN4base11ModuleCache19GetModuleForAddressEm(%"class.base::ModuleCache"* %35, i64 %30) #13
  store %"class.base::ModuleCache::Module"* %36, %"class.base::ModuleCache::Module"** %6, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %3, i64 0, i32 0, i32 1
  %38 = load %"struct.base::Frame"*, %"struct.base::Frame"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = load %"struct.base::Frame"*, %"struct.base::Frame"** %39, align 8
  %41 = icmp ult %"struct.base::Frame"* %38, %40
  br i1 %41, label %42, label %47

42:                                               ; preds = %26
  %43 = load i64, i64* %10, align 8
  call void @_ZN4base5FrameC1EmPKNS_11ModuleCache6ModuleE(%"struct.base::Frame"* %38, i64 %43, %"class.base::ModuleCache::Module"* %36) #13
  %44 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %38, i64 1
  %45 = ptrtoint %"struct.base::Frame"* %44 to i64
  %46 = bitcast %"struct.base::Frame"** %37 to i64*
  store i64 %45, i64* %46, align 8
  br label %48

47:                                               ; preds = %26
  call void @_ZNSt3__16vectorIN4base5FrameENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRmPKNS1_11ModuleCache6ModuleEEEEvDpOT_(%"class.std::__1::vector.39"* %3, i64* dereferenceable(8) %10, %"class.base::ModuleCache::Module"** nonnull dereferenceable(8) %6) #13
  br label %48

48:                                               ; preds = %42, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  br label %49

49:                                               ; preds = %4, %48
  %50 = phi i32 [ 1, %48 ], [ 2, %4 ]
  call void @_ZN2v813RegisterStateD1Ev(%"struct.v8::RegisterState"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #13
  ret i32 %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN2v813RegisterStateC1Ev(%"struct.v8::RegisterState"*) unnamed_addr #1

declare zeroext i1 @_ZN2v88Unwinder17TryUnwindV8FramesERKNS_12JSEntryStubsEmPKNS_11MemoryRangeEPNS_13RegisterStateEPKv(%"struct.v8::JSEntryStubs"* dereferenceable(48), i64, %"struct.v8::MemoryRange"*, %"struct.v8::RegisterState"*, i8*) local_unnamed_addr #1

declare %"class.base::ModuleCache::Module"* @_ZN4base11ModuleCache19GetModuleForAddressEm(%"class.base::ModuleCache"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v813RegisterStateD1Ev(%"struct.v8::RegisterState"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10V8Unwinder13CopyCodePagesEmPN2v811MemoryRangeE(%class.V8Unwinder* nocapture readonly, i64, %"struct.v8::MemoryRange"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.V8Unwinder, %class.V8Unwinder* %0, i64 0, i32 1
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = tail call i64 @_ZN2v87Isolate13CopyCodePagesEmPNS_11MemoryRangeE(%"class.v8::Isolate"* %5, i64 %1, %"struct.v8::MemoryRange"* %2) #13
  ret i64 %6
}

declare i64 @_ZN2v87Isolate13CopyCodePagesEmPNS_11MemoryRangeE(%"class.v8::Isolate"*, i64, %"struct.v8::MemoryRange"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10V8Unwinder12MemoryRangesC2Ev(%"class.V8Unwinder::MemoryRanges"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.V8Unwinder::MemoryRanges"* %0 to <2 x i64>*
  store <2 x i64> <i64 32, i64 0>, <2 x i64>* %2, align 8
  %3 = tail call i8* @_Znam(i64 512) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 512, i1 false)
  %4 = getelementptr inbounds %"class.V8Unwinder::MemoryRanges", %"class.V8Unwinder::MemoryRanges"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = bitcast %"struct.v8::MemoryRange"** %4 to i8**
  store i8* %3, i8** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10V8Unwinder12MemoryRangesD2Ev(%"class.V8Unwinder::MemoryRanges"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.V8Unwinder::MemoryRanges", %"class.V8Unwinder::MemoryRanges"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"** %2, align 8
  store %"struct.v8::MemoryRange"* null, %"struct.v8::MemoryRange"** %2, align 8
  %4 = icmp eq %"struct.v8::MemoryRange"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.v8::MemoryRange"* %3 to i8*
  tail call void @_ZdaPv(i8* %6) #14
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10V8Unwinder13ModuleCompareclEPKN4base11ModuleCache6ModuleES5_(%"struct.V8Unwinder::ModuleCompare"* nocapture readnone, %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.base::ModuleCache::Module"* %1 to i64 (%"class.base::ModuleCache::Module"*)***
  %5 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %5, i64 2
  %7 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %6, align 8
  %8 = tail call i64 %7(%"class.base::ModuleCache::Module"* %1) #13
  %9 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %4, align 8
  %10 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %9, i64 5
  %11 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %10, align 8
  %12 = tail call i64 %11(%"class.base::ModuleCache::Module"* %1) #13
  %13 = bitcast %"class.base::ModuleCache::Module"* %2 to i64 (%"class.base::ModuleCache::Module"*)***
  %14 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %14, i64 2
  %16 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %15, align 8
  %17 = tail call i64 %16(%"class.base::ModuleCache::Module"* %2) #13
  %18 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %13, align 8
  %19 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %18, i64 5
  %20 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %19, align 8
  %21 = tail call i64 %20(%"class.base::ModuleCache::Module"* %2) #13
  %22 = icmp ult i64 %8, %17
  br i1 %22, label %27, label %23

23:                                               ; preds = %3
  %24 = icmp uge i64 %17, %8
  %25 = icmp ult i64 %12, %21
  %26 = and i1 %24, %25
  ret i1 %26

27:                                               ; preds = %3
  ret i1 true
}

declare void @_ZN2v87Isolate20GetEmbeddedCodeRangeEPPKvPm(%"class.v8::Isolate"*, i8**, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.14"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.14"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.14"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base11ModuleCache6ModuleD2Ev(%"class.base::ModuleCache::Module"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_18V8ModuleD0Ev(%"class.(anonymous namespace)::V8Module"*) unnamed_addr #7 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::V8Module"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_18V8Module14GetBaseAddressEv(%"class.(anonymous namespace)::V8Module"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::V8Module", %"class.(anonymous namespace)::V8Module"* %0, i64 0, i32 1, i32 0
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_18V8Module5GetIdEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::V8Module"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::V8Module", %"class.(anonymous namespace)::V8Module"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = select i1 %5, [0 x i8]* bitcast ([36 x i8]* @_ZN10V8Unwinder27kV8EmbeddedCodeRangeBuildIdE to [0 x i8]*), [0 x i8]* bitcast ([36 x i8]* @_ZN10V8Unwinder19kV8CodeRangeBuildIdE to [0 x i8]*)
  %7 = getelementptr inbounds [0 x i8], [0 x i8]* %6, i64 0, i64 0
  %8 = tail call i8* @_Znwm(i64 48) #14
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %11, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* align 16 %7, i64 35, i1 false) #13
  %12 = getelementptr inbounds i8, i8* %8, i64 35
  store i8 0, i8* %12, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_18V8Module16GetDebugBasenameEv(%"class.base::FilePath"* noalias sret, %"class.(anonymous namespace)::V8Module"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::FilePath", align 8
  %4 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* nonnull %3) #13
  %5 = getelementptr inbounds %"class.(anonymous namespace)::V8Module", %"class.(anonymous namespace)::V8Module"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  %8 = select i1 %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0)
  %9 = select i1 %7, i64 22, i64 13
  call void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret %0, %"class.base::FilePath"* nonnull %3, i8* %8, i64 %9) #13
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_18V8Module7GetSizeEv(%"class.(anonymous namespace)::V8Module"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::V8Module", %"class.(anonymous namespace)::V8Module"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_18V8Module8IsNativeEv(%"class.(anonymous namespace)::V8Module"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i1 false
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #1

declare void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::FilePath"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.base::ModuleCache::Module"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !11

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %142, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %142, align 8
  %144 = icmp eq %"class.base::ModuleCache::Module"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.base::ModuleCache::Module"* %143 to void (%"class.base::ModuleCache::Module"*)***
  %147 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %147, i64 1
  %149 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %148, align 8
  tail call void %149(%"class.base::ModuleCache::Module"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.14"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.base::ModuleCache::Module"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.14", %"class.std::__1::__tree.14"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %83, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.14", %"class.std::__1::__tree.14"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %8, %79
  %11 = phi %"class.std::__1::__tree_node"* [ %82, %79 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %81, %79 ], [ %9, %8 ]
  %13 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %2, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %15 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %14, align 8
  %16 = bitcast %"class.base::ModuleCache::Module"* %13 to i64 (%"class.base::ModuleCache::Module"*)***
  %17 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %16, align 8
  %18 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %17, i64 2
  %19 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %18, align 8
  %20 = tail call i64 %19(%"class.base::ModuleCache::Module"* %13) #13
  %21 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %16, align 8
  %22 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %21, i64 5
  %23 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %22, align 8
  %24 = tail call i64 %23(%"class.base::ModuleCache::Module"* %13) #13
  %25 = bitcast %"class.base::ModuleCache::Module"* %15 to i64 (%"class.base::ModuleCache::Module"*)***
  %26 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %26, i64 2
  %28 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %27, align 8
  %29 = tail call i64 %28(%"class.base::ModuleCache::Module"* %15) #13
  %30 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %25, align 8
  %31 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %30, i64 5
  %32 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %31, align 8
  %33 = tail call i64 %32(%"class.base::ModuleCache::Module"* %15) #13
  %34 = icmp ult i64 %20, %29
  br i1 %34, label %39, label %35

35:                                               ; preds = %10
  %36 = icmp uge i64 %29, %20
  %37 = icmp ult i64 %24, %33
  %38 = and i1 %36, %37
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %35
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %79

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %44, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %85

45:                                               ; preds = %35
  %46 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %14, align 8
  %47 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %2, align 8
  %48 = bitcast %"class.base::ModuleCache::Module"* %46 to i64 (%"class.base::ModuleCache::Module"*)***
  %49 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %48, align 8
  %50 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %49, i64 2
  %51 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %50, align 8
  %52 = tail call i64 %51(%"class.base::ModuleCache::Module"* %46) #13
  %53 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %48, align 8
  %54 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %53, i64 5
  %55 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %54, align 8
  %56 = tail call i64 %55(%"class.base::ModuleCache::Module"* %46) #13
  %57 = bitcast %"class.base::ModuleCache::Module"* %47 to i64 (%"class.base::ModuleCache::Module"*)***
  %58 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %57, align 8
  %59 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %58, i64 2
  %60 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %59, align 8
  %61 = tail call i64 %60(%"class.base::ModuleCache::Module"* %47) #13
  %62 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %57, align 8
  %63 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %62, i64 5
  %64 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %63, align 8
  %65 = tail call i64 %64(%"class.base::ModuleCache::Module"* %47) #13
  %66 = icmp ult i64 %52, %61
  br i1 %66, label %71, label %67

67:                                               ; preds = %45
  %68 = icmp uge i64 %61, %52
  %69 = icmp ult i64 %56, %65
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %77

71:                                               ; preds = %45, %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %76, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %85

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %78, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %85

79:                                               ; preds = %71, %39
  %80 = phi %"class.std::__1::__tree_node_base"* [ %41, %39 ], [ %73, %71 ]
  %81 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %72, %71 ]
  %82 = bitcast %"class.std::__1::__tree_node_base"* %80 to %"class.std::__1::__tree_node"*
  br label %10

83:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %85

85:                                               ; preds = %83, %77, %75, %43
  %86 = phi %"class.std::__1::__tree_node_base"** [ %40, %43 ], [ %72, %75 ], [ %12, %77 ], [ %84, %83 ]
  ret %"class.std::__1::__tree_node_base"** %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !13
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !13
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !13
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS5_PNS_11__tree_nodeIS5_SD_EElEERPNS_15__tree_end_nodeISF_EESG_RKT_(%"class.std::__1::__tree.14"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.base::ModuleCache::Module"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree.14", %"class.std::__1::__tree.14"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %37, label %9

9:                                                ; preds = %5
  %10 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.base::ModuleCache::Module"**
  %13 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %12, align 8
  %14 = bitcast %"class.base::ModuleCache::Module"* %10 to i64 (%"class.base::ModuleCache::Module"*)***
  %15 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %15, i64 2
  %17 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %16, align 8
  %18 = tail call i64 %17(%"class.base::ModuleCache::Module"* %10) #13
  %19 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %14, align 8
  %20 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %19, i64 5
  %21 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %20, align 8
  %22 = tail call i64 %21(%"class.base::ModuleCache::Module"* %10) #13
  %23 = bitcast %"class.base::ModuleCache::Module"* %13 to i64 (%"class.base::ModuleCache::Module"*)***
  %24 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %23, align 8
  %25 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %24, i64 2
  %26 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %25, align 8
  %27 = tail call i64 %26(%"class.base::ModuleCache::Module"* %13) #13
  %28 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %23, align 8
  %29 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %28, i64 5
  %30 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %29, align 8
  %31 = tail call i64 %30(%"class.base::ModuleCache::Module"* %13) #13
  %32 = icmp ult i64 %18, %27
  br i1 %32, label %37, label %33

33:                                               ; preds = %9
  %34 = icmp uge i64 %27, %18
  %35 = icmp ult i64 %22, %31
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %103

37:                                               ; preds = %9, %5, %33
  %38 = getelementptr inbounds %"class.std::__1::__tree.14", %"class.std::__1::__tree.14"* %0, i64 0, i32 0
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_end_node"* %39, %1
  br i1 %40, label %91, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41, %45
  %46 = phi %"class.std::__1::__tree_node_base"* [ %48, %45 ], [ %43, %41 ]
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %61, label %45

50:                                               ; preds = %41, %50
  %51 = phi %"class.std::__1::__tree_end_node"* [ %55, %50 ], [ %1, %41 ]
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 2
  %54 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_end_node"**
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, %52
  br i1 %58, label %50, label %59

59:                                               ; preds = %50
  %60 = bitcast %"class.std::__1::__tree_end_node"* %55 to %"class.std::__1::__tree_node_base"*
  br label %61

61:                                               ; preds = %45, %59
  %62 = phi %"class.std::__1::__tree_node_base"* [ %60, %59 ], [ %46, %45 ]
  %63 = ptrtoint %"class.std::__1::__tree_node_base"* %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 1
  %65 = bitcast %"class.std::__1::__tree_node_base"* %64 to %"class.base::ModuleCache::Module"**
  %66 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %65, align 8
  %67 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, align 8
  %68 = bitcast %"class.base::ModuleCache::Module"* %66 to i64 (%"class.base::ModuleCache::Module"*)***
  %69 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %68, align 8
  %70 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %69, i64 2
  %71 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %70, align 8
  %72 = tail call i64 %71(%"class.base::ModuleCache::Module"* %66) #13
  %73 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %68, align 8
  %74 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %73, i64 5
  %75 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %74, align 8
  %76 = tail call i64 %75(%"class.base::ModuleCache::Module"* %66) #13
  %77 = bitcast %"class.base::ModuleCache::Module"* %67 to i64 (%"class.base::ModuleCache::Module"*)***
  %78 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %77, align 8
  %79 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %78, i64 2
  %80 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %79, align 8
  %81 = tail call i64 %80(%"class.base::ModuleCache::Module"* %67) #13
  %82 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %77, align 8
  %83 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %82, i64 5
  %84 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %83, align 8
  %85 = tail call i64 %84(%"class.base::ModuleCache::Module"* %67) #13
  %86 = icmp ult i64 %72, %81
  br i1 %86, label %91, label %87

87:                                               ; preds = %61
  %88 = icmp uge i64 %81, %72
  %89 = icmp ult i64 %76, %85
  %90 = and i1 %88, %89
  br i1 %90, label %91, label %101

91:                                               ; preds = %61, %37, %87
  %92 = phi i64 [ %63, %87 ], [ %6, %37 ], [ %63, %61 ]
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %96, label %97

96:                                               ; preds = %91
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %200

97:                                               ; preds = %91
  %98 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %92, i64* %98, align 8
  %99 = inttoptr i64 %92 to %"class.std::__1::__tree_node_base"*
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  br label %200

101:                                              ; preds = %87
  %102 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.14"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.base::ModuleCache::Module"** dereferenceable(8) %4)
  br label %200

103:                                              ; preds = %33
  %104 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %12, align 8
  %105 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, align 8
  %106 = bitcast %"class.base::ModuleCache::Module"* %104 to i64 (%"class.base::ModuleCache::Module"*)***
  %107 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %106, align 8
  %108 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %107, i64 2
  %109 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %108, align 8
  %110 = tail call i64 %109(%"class.base::ModuleCache::Module"* %104) #13
  %111 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %106, align 8
  %112 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %111, i64 5
  %113 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %112, align 8
  %114 = tail call i64 %113(%"class.base::ModuleCache::Module"* %104) #13
  %115 = bitcast %"class.base::ModuleCache::Module"* %105 to i64 (%"class.base::ModuleCache::Module"*)***
  %116 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %115, align 8
  %117 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %116, i64 2
  %118 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %117, align 8
  %119 = tail call i64 %118(%"class.base::ModuleCache::Module"* %105) #13
  %120 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %115, align 8
  %121 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %120, i64 5
  %122 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %121, align 8
  %123 = tail call i64 %122(%"class.base::ModuleCache::Module"* %105) #13
  %124 = icmp ult i64 %110, %119
  br i1 %124, label %129, label %125

125:                                              ; preds = %103
  %126 = icmp uge i64 %119, %110
  %127 = icmp ult i64 %114, %123
  %128 = and i1 %126, %127
  br i1 %128, label %129, label %197

129:                                              ; preds = %103, %125
  %130 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %133, label %141

133:                                              ; preds = %129
  %134 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %135 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %136 = bitcast %"class.std::__1::__tree_end_node"* %135 to %"class.std::__1::__tree_end_node"**
  %137 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %136, align 8
  %138 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %137, i64 0, i32 0
  %139 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %138, align 8
  %140 = icmp eq %"class.std::__1::__tree_node_base"* %139, %134
  br i1 %140, label %157, label %148

141:                                              ; preds = %129, %141
  %142 = phi %"class.std::__1::__tree_node_base"* [ %144, %141 ], [ %131, %129 ]
  %143 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, null
  br i1 %145, label %146, label %141

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0
  br label %157

148:                                              ; preds = %133, %148
  %149 = phi %"class.std::__1::__tree_end_node"** [ %152, %148 ], [ %136, %133 ]
  %150 = bitcast %"class.std::__1::__tree_end_node"** %149 to %"class.std::__1::__tree_node_base"**
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %151, i64 0, i32 2
  %153 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %152, align 8
  %154 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %153, i64 0, i32 0
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, %151
  br i1 %156, label %157, label %148

157:                                              ; preds = %148, %146, %133
  %158 = phi %"class.std::__1::__tree_end_node"* [ %147, %146 ], [ %137, %133 ], [ %153, %148 ]
  %159 = icmp eq %"class.std::__1::__tree_end_node"* %158, %7
  br i1 %159, label %188, label %160

160:                                              ; preds = %157
  %161 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, align 8
  %162 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %158, i64 4
  %163 = bitcast %"class.std::__1::__tree_end_node"* %162 to %"class.base::ModuleCache::Module"**
  %164 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %163, align 8
  %165 = bitcast %"class.base::ModuleCache::Module"* %161 to i64 (%"class.base::ModuleCache::Module"*)***
  %166 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %165, align 8
  %167 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %166, i64 2
  %168 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %167, align 8
  %169 = tail call i64 %168(%"class.base::ModuleCache::Module"* %161) #13
  %170 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %165, align 8
  %171 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %170, i64 5
  %172 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %171, align 8
  %173 = tail call i64 %172(%"class.base::ModuleCache::Module"* %161) #13
  %174 = bitcast %"class.base::ModuleCache::Module"* %164 to i64 (%"class.base::ModuleCache::Module"*)***
  %175 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %174, align 8
  %176 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %175, i64 2
  %177 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %176, align 8
  %178 = tail call i64 %177(%"class.base::ModuleCache::Module"* %164) #13
  %179 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %174, align 8
  %180 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %179, i64 5
  %181 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %180, align 8
  %182 = tail call i64 %181(%"class.base::ModuleCache::Module"* %164) #13
  %183 = icmp ult i64 %169, %178
  br i1 %183, label %188, label %184

184:                                              ; preds = %160
  %185 = icmp uge i64 %178, %169
  %186 = icmp ult i64 %173, %182
  %187 = and i1 %185, %186
  br i1 %187, label %188, label %195

188:                                              ; preds = %160, %157, %184
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  %190 = icmp eq %"class.std::__1::__tree_node_base"* %189, null
  br i1 %190, label %191, label %193

191:                                              ; preds = %188
  %192 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %192, align 8
  br label %200

193:                                              ; preds = %188
  store %"class.std::__1::__tree_end_node"* %158, %"class.std::__1::__tree_end_node"** %2, align 8
  %194 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %158, i64 0, i32 0
  br label %200

195:                                              ; preds = %184
  %196 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.14"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.base::ModuleCache::Module"** dereferenceable(8) %4)
  br label %200

197:                                              ; preds = %125
  %198 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %198, align 8
  %199 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %199, align 8
  br label %200

200:                                              ; preds = %191, %193, %195, %96, %97, %101, %197
  %201 = phi %"class.std::__1::__tree_node_base"** [ %3, %197 ], [ %93, %96 ], [ %100, %97 ], [ %102, %101 ], [ %130, %191 ], [ %194, %193 ], [ %196, %195 ]
  ret %"class.std::__1::__tree_node_base"** %201
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !13
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !13
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !13
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !13
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !13
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !13
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !13
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !13
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !13
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !13
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !13
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !13
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !13
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE4findIS5_EENS_21__tree_const_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEERKT_(%"class.std::__1::__tree.14"*, %"class.base::ModuleCache::Module"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.14", %"class.std::__1::__tree.14"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %76, label %7

7:                                                ; preds = %2, %41
  %8 = phi %"class.std::__1::__tree_end_node"* [ %42, %41 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %44, %41 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1
  %11 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %10, align 8
  %12 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %1, align 8
  %13 = bitcast %"class.base::ModuleCache::Module"* %11 to i64 (%"class.base::ModuleCache::Module"*)***
  %14 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %14, i64 2
  %16 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %15, align 8
  %17 = tail call i64 %16(%"class.base::ModuleCache::Module"* %11) #13
  %18 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %13, align 8
  %19 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %18, i64 5
  %20 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %19, align 8
  %21 = tail call i64 %20(%"class.base::ModuleCache::Module"* %11) #13
  %22 = bitcast %"class.base::ModuleCache::Module"* %12 to i64 (%"class.base::ModuleCache::Module"*)***
  %23 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %23, i64 2
  %25 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %24, align 8
  %26 = tail call i64 %25(%"class.base::ModuleCache::Module"* %12) #13
  %27 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %22, align 8
  %28 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %27, i64 5
  %29 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %28, align 8
  %30 = tail call i64 %29(%"class.base::ModuleCache::Module"* %12) #13
  %31 = icmp ult i64 %17, %26
  br i1 %31, label %38, label %32

32:                                               ; preds = %7
  %33 = icmp uge i64 %26, %17
  %34 = icmp ult i64 %21, %30
  %35 = and i1 %33, %34
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %37 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  br i1 %35, label %38, label %41

38:                                               ; preds = %32, %7
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node"**
  br label %41

41:                                               ; preds = %38, %32
  %42 = phi %"class.std::__1::__tree_end_node"* [ %8, %38 ], [ %36, %32 ]
  %43 = phi %"class.std::__1::__tree_node"** [ %40, %38 ], [ %37, %32 ]
  %44 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node"* %44, null
  br i1 %45, label %46, label %7

46:                                               ; preds = %41
  %47 = icmp eq %"class.std::__1::__tree_end_node"* %42, %3
  br i1 %47, label %76, label %48

48:                                               ; preds = %46
  %49 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %1, align 8
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 4
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.base::ModuleCache::Module"**
  %52 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %51, align 8
  %53 = bitcast %"class.base::ModuleCache::Module"* %49 to i64 (%"class.base::ModuleCache::Module"*)***
  %54 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %53, align 8
  %55 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %54, i64 2
  %56 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %55, align 8
  %57 = tail call i64 %56(%"class.base::ModuleCache::Module"* %49) #13
  %58 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %53, align 8
  %59 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %58, i64 5
  %60 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %59, align 8
  %61 = tail call i64 %60(%"class.base::ModuleCache::Module"* %49) #13
  %62 = bitcast %"class.base::ModuleCache::Module"* %52 to i64 (%"class.base::ModuleCache::Module"*)***
  %63 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %62, align 8
  %64 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %63, i64 2
  %65 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %64, align 8
  %66 = tail call i64 %65(%"class.base::ModuleCache::Module"* %52) #13
  %67 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %62, align 8
  %68 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %67, i64 5
  %69 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %68, align 8
  %70 = tail call i64 %69(%"class.base::ModuleCache::Module"* %52) #13
  %71 = icmp ult i64 %57, %66
  br i1 %71, label %76, label %72

72:                                               ; preds = %48
  %73 = icmp uge i64 %66, %57
  %74 = icmp ult i64 %61, %70
  %75 = and i1 %73, %74
  br i1 %75, label %76, label %77

76:                                               ; preds = %46, %48, %2, %72
  br label %77

77:                                               ; preds = %72, %76
  %78 = phi %"class.std::__1::__tree_end_node"* [ %3, %76 ], [ %42, %72 ]
  ret %"class.std::__1::__tree_end_node"* %78
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base5FrameENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRmPKNS1_11ModuleCache6ModuleEEEEvDpOT_(%"class.std::__1::vector.39"*, i64* dereferenceable(8), %"class.base::ModuleCache::Module"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.base::Frame"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.39"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 4
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 1152921504606846975
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.39"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #15
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.base::Frame"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 4
  %21 = icmp ult i64 %20, 576460752303423487
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 3
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 1152921504606846975
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #15
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 1152921504606846975, %15 ]
  %32 = shl i64 %31, 4
  %33 = tail call i8* @_Znwm(i64 %32) #14
  %34 = bitcast i8* %33 to %"struct.base::Frame"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"struct.base::Frame"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %37, i64 %10
  %39 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %37, i64 %36
  %40 = ptrtoint %"struct.base::Frame"* %39 to i64
  %41 = load i64, i64* %1, align 8
  %42 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %2, align 8
  tail call void @_ZN4base5FrameC1EmPKNS_11ModuleCache6ModuleE(%"struct.base::Frame"* %38, i64 %41, %"class.base::ModuleCache::Module"* %42) #13
  %43 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %38, i64 1
  %44 = ptrtoint %"struct.base::Frame"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.base::Frame"*, %"struct.base::Frame"** %45, align 8
  %47 = ptrtoint %"struct.base::Frame"* %46 to i64
  %48 = load %"struct.base::Frame"*, %"struct.base::Frame"** %4, align 8
  %49 = icmp eq %"struct.base::Frame"* %48, %46
  br i1 %49, label %97, label %50

50:                                               ; preds = %35
  %51 = getelementptr %"struct.base::Frame", %"struct.base::Frame"* %48, i64 -1, i32 0
  %52 = ptrtoint i64* %51 to i64
  %53 = sub i64 %52, %47
  %54 = lshr i64 %53, 4
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 3
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %68, label %58

58:                                               ; preds = %50, %58
  %59 = phi %"struct.base::Frame"* [ %62, %58 ], [ %38, %50 ]
  %60 = phi %"struct.base::Frame"* [ %63, %58 ], [ %48, %50 ]
  %61 = phi i64 [ %66, %58 ], [ %56, %50 ]
  %62 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %59, i64 -1
  %63 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %60, i64 -1
  %64 = bitcast %"struct.base::Frame"* %62 to i8*
  %65 = bitcast %"struct.base::Frame"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 16, i1 false) #13
  %66 = add i64 %61, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %58, !llvm.loop !14

68:                                               ; preds = %58, %50
  %69 = phi %"struct.base::Frame"* [ undef, %50 ], [ %62, %58 ]
  %70 = phi %"struct.base::Frame"* [ %38, %50 ], [ %62, %58 ]
  %71 = phi %"struct.base::Frame"* [ %48, %50 ], [ %63, %58 ]
  %72 = icmp ult i64 %53, 48
  br i1 %72, label %93, label %73

73:                                               ; preds = %68, %73
  %74 = phi %"struct.base::Frame"* [ %88, %73 ], [ %70, %68 ]
  %75 = phi %"struct.base::Frame"* [ %89, %73 ], [ %71, %68 ]
  %76 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %74, i64 -1
  %77 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %75, i64 -1
  %78 = bitcast %"struct.base::Frame"* %76 to i8*
  %79 = bitcast %"struct.base::Frame"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 16, i1 false) #13
  %80 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %74, i64 -2
  %81 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %75, i64 -2
  %82 = bitcast %"struct.base::Frame"* %80 to i8*
  %83 = bitcast %"struct.base::Frame"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 16, i1 false) #13
  %84 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %74, i64 -3
  %85 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %75, i64 -3
  %86 = bitcast %"struct.base::Frame"* %84 to i8*
  %87 = bitcast %"struct.base::Frame"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 16, i1 false) #13
  %88 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %74, i64 -4
  %89 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %75, i64 -4
  %90 = bitcast %"struct.base::Frame"* %88 to i8*
  %91 = bitcast %"struct.base::Frame"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 16, i1 false) #13
  %92 = icmp eq %"struct.base::Frame"* %89, %46
  br i1 %92, label %93, label %73

93:                                               ; preds = %73, %68
  %94 = phi %"struct.base::Frame"* [ %69, %68 ], [ %88, %73 ]
  %95 = load i64, i64* %7, align 8
  %96 = load %"struct.base::Frame"*, %"struct.base::Frame"** %4, align 8
  br label %97

97:                                               ; preds = %35, %93
  %98 = phi %"struct.base::Frame"* [ %96, %93 ], [ %46, %35 ]
  %99 = phi %"struct.base::Frame"* [ %94, %93 ], [ %38, %35 ]
  %100 = phi i64 [ %95, %93 ], [ %47, %35 ]
  %101 = ptrtoint %"struct.base::Frame"* %99 to i64
  store i64 %101, i64* %7, align 8
  store i64 %44, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %102 = inttoptr i64 %100 to %"struct.base::Frame"*
  %103 = icmp eq %"struct.base::Frame"* %98, %102
  br i1 %103, label %108, label %104

104:                                              ; preds = %97, %104
  %105 = phi %"struct.base::Frame"* [ %106, %104 ], [ %98, %97 ]
  %106 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %105, i64 -1
  tail call void @_ZN4base5FrameD1Ev(%"struct.base::Frame"* %106) #13
  %107 = icmp eq %"struct.base::Frame"* %106, %102
  br i1 %107, label %108, label %104

108:                                              ; preds = %104, %97
  %109 = icmp eq i64 %100, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = inttoptr i64 %100 to i8*
  tail call void @_ZdlPv(i8* %111) #14
  br label %112

112:                                              ; preds = %108, %110
  ret void
}

declare void @_ZN4base5FrameC1EmPKNS_11ModuleCache6ModuleE(%"struct.base::Frame"*, i64, %"class.base::ModuleCache::Module"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5FrameD1Ev(%"struct.base::Frame"*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE16__construct_nodeIJS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISF_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE16__construct_nodeIJS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISF_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE16__construct_nodeIJS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISF_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE16__construct_nodeIJS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISF_EEEEEEDpOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE16__construct_nodeIJS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISF_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeIPKN4base11ModuleCache6ModuleEN10V8Unwinder13ModuleCompareENS_9allocatorIS5_EEE16__construct_nodeIJS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISF_EEEEEEDpOT_"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = !{i8 0, i8 2}
!14 = distinct !{!14, !12}
