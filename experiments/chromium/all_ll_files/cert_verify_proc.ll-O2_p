; ModuleID = '../../net/cert/cert_verify_proc.cc'
source_filename = "../../net/cert/cert_verify_proc.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.base::TimeDelta" = type { i64 }
%"class.net::CertVerifyProc" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.net::CertNetFetcher" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::SystemTrustStore" = type { i32 (...)** }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.4", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.13", %"class.std::__1::vector.17" }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.std::__1::unique_ptr.13"*, %"class.std::__1::unique_ptr.13"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::unique_ptr.13"* }
%"class.net::CRLSet" = type { %"class.base::RefCountedThreadSafe.24", i32, i64, %"class.std::__1::unordered_map", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::unordered_map", %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.25", %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.41", [4 x i8] }>
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27", %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i64 }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { float }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %class.scoped_refptr.46*, %class.scoped_refptr.46*, %"class.std::__1::__compressed_pair.47" }
%class.scoped_refptr.46 = type { %"class.net::X509Certificate"* }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %class.scoped_refptr.46* }
%"class.net::CertVerifyResult" = type <{ %"class.base::SupportsUserData.base", [7 x i8], %class.scoped_refptr.46, i32, i8, i8, i8, i8, i8, [7 x i8], %"class.std::__1::vector.60", i8, i8, [2 x i8], %"struct.net::OCSPVerifyResult", [4 x i8], %"class.std::__1::vector.68", i32, [4 x i8] }>
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.63" }
%"class.net::HashValue" = type { i32, %union.anon.62 }
%union.anon.62 = type { %"struct.net::SHA256HashValue" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.net::HashValue"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.72" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.70, i32, [4 x i8] }>
%class.scoped_refptr.70 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.71", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.71" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.77" }
%"class.base::time_internal::TimeBase.77" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.78", %"class.std::__1::vector.85" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.80" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.87" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.169" }
%"union.absl::variant_internal::DestructibleUnionImpl.169" = type { %"union.absl::variant_internal::DestructibleUnionImpl.170" }
%"union.absl::variant_internal::DestructibleUnionImpl.170" = type { %"union.absl::variant_internal::DestructibleUnionImpl.171" }
%"union.absl::variant_internal::DestructibleUnionImpl.171" = type { %"union.absl::variant_internal::DestructibleUnionImpl.172" }
%"union.absl::variant_internal::DestructibleUnionImpl.172" = type { %"class.std::__1::basic_string" }
%"class.base::ScopedBlockingCall" = type { %"class.base::internal::UncheckedScopedBlockingCall" }
%"class.base::internal::UncheckedScopedBlockingCall" = type { %"class.base::internal::BlockingObserver"*, %"class.base::internal::UncheckedScopedBlockingCall"*, i8, [7 x i8], %"class.base::debug::ScopedActivity", %"class.absl::optional" }
%"class.base::internal::BlockingObserver" = type { i32 (...)** }
%"class.base::debug::ScopedActivity" = type <{ %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity", i32, [4 x i8] }>
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr.99" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.93 }
%struct.anon.93 = type { i64 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map.102", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map.102" = type { %"class.std::__1::__tree.103" }
%"class.std::__1::__tree.103" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic.113", i32, i64, i64 }
%"struct.std::__1::atomic.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__cxx_atomic_impl.116" }
%"struct.std::__1::__cxx_atomic_impl.116" = type { %"struct.std::__1::__cxx_atomic_base_impl.117" }
%"struct.std::__1::__cxx_atomic_base_impl.117" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.121 }
%union.anon.121 = type { %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" }
%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" = type { %"class.base::TimeTicks", %class.scoped_refptr.122 }
%class.scoped_refptr.122 = type { %"class.base::internal::IOJankMonitoringWindow"* }
%"class.base::internal::IOJankMonitoringWindow" = type <{ %"class.base::RefCountedThreadSafe.123", [4 x i8], %"class.base::Lock", [60 x i64], %"class.base::TimeTicks", %class.scoped_refptr.122, i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe.123" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.113", [4 x i8] }>
%struct.PublicKeyDomainLimitation = type { %"struct.net::SHA256HashValue", %"class.base::span" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.base::BasicStringPiece"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %struct.crypto_buffer_st**, %struct.crypto_buffer_st**, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %struct.crypto_buffer_st** }
%"struct.net::ParseCertificateOptions" = type { i8 }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.std::__1::__compressed_pair.135" }
%"class.net::der::Input" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.net::der::Input"* }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"struct.net::ParsedTbsCertificate" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8], %"class.net::der::BitString", i8, [7 x i8], %"class.net::der::BitString", i8, %"class.net::der::Input" }
%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.net::CertErrors" = type opaque
%"struct.url::CanonHostInfo" = type { i32, i32, %"struct.url::Component", [16 x i8] }
%"struct.url::Component" = type { i32, i32 }
%"class.base::CheckedContiguousIterator" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"* }
%"class.net::SignatureAlgorithm" = type { i32, i32, %"class.std::__1::unique_ptr.145" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.net::SignatureAlgorithmParameters"* }
%"class.net::SignatureAlgorithmParameters" = type { i32 (...)** }
%"class.net::RsaPssParameters" = type { %"class.net::SignatureAlgorithmParameters", i32, i32 }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { i32*, i32*, %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { i32* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK4base25CheckedContiguousIteratorIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEEppEv = comdat any

$_ZZN7logging15CheckOpValueStrIPKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEEENS3_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS3_13basic_ostreamIcS5_EEPKvE_8__invokeESL_SN_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEEC2EPS6_S8_S8_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEE15CheckComparableERKS7_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

@_ZTVN3net14CertVerifyProcE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.net::CertVerifyProc"*)* @_ZN3net14CertVerifyProcD2Ev to i8*), i8* bitcast (void (%"class.net::CertVerifyProc"*)* @_ZN3net14CertVerifyProcD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [7 x i8] c"Verify\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"../../net/cert/cert_verify_proc.cc\00", align 1
@_ZN3net14CertVerifyProc29kLegacySymantecPKIEnforcementE = hidden constant %"struct.base::Feature" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i32 0, i32 0), i32 1 }, align 8
@.str.2 = private unnamed_addr constant [47 x i8] c"Net.CertVerifier.NameNormalizationPrivateRoots\00", align 1
@_ZZN3net14CertVerifyProc27HasNameConstraintsViolationERKNSt3__16vectorINS_9HashValueENS1_9allocatorIS3_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEERKNS2_ISD_NS4_ISD_EEEESJ_E13kDomainsANSSI = internal constant [13 x %"class.base::BasicStringPiece"] [%"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0), i64 3 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), i64 3 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i64 3 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i64 3 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i64 3 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i64 3 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i64 3 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i64 3 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i32 0, i32 0), i64 3 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), i64 3 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0), i64 3 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i64 3 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i32 0, i32 0), i64 3 }], align 16
@.str.3 = private unnamed_addr constant [4 x i8] c".fr\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c".gp\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c".gf\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c".mq\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c".re\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c".yt\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c".pm\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c".bl\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c".mf\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c".wf\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c".pf\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c".nc\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c".tf\00", align 1
@_ZZN3net14CertVerifyProc27HasNameConstraintsViolationERKNSt3__16vectorINS_9HashValueENS1_9allocatorIS3_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEERKNS2_ISD_NS4_ISD_EEEESJ_E16kDomainsIndiaCCA = internal constant [7 x %"class.base::BasicStringPiece"] [%"class.base::BasicStringPiece" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0), i64 7 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i64 7 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0), i64 6 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i32 0, i32 0), i64 11 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i32 0, i32 0), i64 18 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i32 0, i32 0), i64 9 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), i64 10 }], align 16
@.str.16 = private unnamed_addr constant [8 x i8] c".gov.in\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c".nic.in\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c".ac.in\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c".rbi.org.in\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c".bankofindia.co.in\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c".ncode.in\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c".tcs.co.in\00", align 1
@_ZZN3net14CertVerifyProc27HasNameConstraintsViolationERKNSt3__16vectorINS_9HashValueENS1_9allocatorIS3_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEERKNS2_ISD_NS4_ISD_EEEESJ_E12kDomainsTest = internal constant [1 x %"class.base::BasicStringPiece"] [%"class.base::BasicStringPiece" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i32 0, i32 0), i64 12 }], align 16
@.str.23 = private unnamed_addr constant [13 x i8] c".example.com\00", align 1
@_ZZN3net14CertVerifyProc27HasNameConstraintsViolationERKNSt3__16vectorINS_9HashValueENS1_9allocatorIS3_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEERKNS2_ISD_NS4_ISD_EEEESJ_E7kLimits = internal constant [5 x { %"struct.net::SHA256HashValue", { i64, %"class.base::BasicStringPiece"* } }] [{ %"struct.net::SHA256HashValue", { i64, %"class.base::BasicStringPiece"* } } { %"struct.net::SHA256HashValue" { [32 x i8] c"\86\C1:4\08\DD\1A\A7~\E8\B6\94|\03\95\87r\F51$\8C\16'\BE\FB,OK\04\D0D\96" }, { i64, %"class.base::BasicStringPiece"* } { i64 13, %"class.base::BasicStringPiece"* getelementptr inbounds ([13 x %"class.base::BasicStringPiece"], [13 x %"class.base::BasicStringPiece"]* @_ZZN3net14CertVerifyProc27HasNameConstraintsViolationERKNSt3__16vectorINS_9HashValueENS1_9allocatorIS3_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEERKNS2_ISD_NS4_ISD_EEEESJ_E13kDomainsANSSI, i32 0, i32 0) } }, { %"struct.net::SHA256HashValue", { i64, %"class.base::BasicStringPiece"* } } { %"struct.net::SHA256HashValue" { [32 x i8] c"~j\CD\85<\AC\C6\93.\9BQ\9F\DA\D1\BE\B5\15\ED*-\00%\CF\D3\98\C3\AC\1F\0D\BBuK" }, { i64, %"class.base::BasicStringPiece"* } { i64 7, %"class.base::BasicStringPiece"* getelementptr inbounds ([7 x %"class.base::BasicStringPiece"], [7 x %"class.base::BasicStringPiece"]* @_ZZN3net14CertVerifyProc27HasNameConstraintsViolationERKNSt3__16vectorINS_9HashValueENS1_9allocatorIS3_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEERKNS2_ISD_NS4_ISD_EEEESJ_E16kDomainsIndiaCCA, i32 0, i32 0) } }, { %"struct.net::SHA256HashValue", { i64, %"class.base::BasicStringPiece"* } } { %"struct.net::SHA256HashValue" { [32 x i8] c"B\A7\09\84\FF\D3\99\C4\EA\F0\E7\02\A4K\EF*\D8\A7\9B\8B\F4d\8Fk\B2\10\E1#\FD\07W\93" }, { i64, %"class.base::BasicStringPiece"* } { i64 7, %"class.base::BasicStringPiece"* getelementptr inbounds ([7 x %"class.base::BasicStringPiece"], [7 x %"class.base::BasicStringPiece"]* @_ZZN3net14CertVerifyProc27HasNameConstraintsViolationERKNSt3__16vectorINS_9HashValueENS1_9allocatorIS3_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEERKNS2_ISD_NS4_ISD_EEEESJ_E16kDomainsIndiaCCA, i32 0, i32 0) } }, { %"struct.net::SHA256HashValue", { i64, %"class.base::BasicStringPiece"* } } { %"struct.net::SHA256HashValue" { [32 x i8] c"\9C\F4pO>\E5\A5\98\94\B1k\F0\0C\FEs\D5\88\DA\E2i\F5\1D\E6jK\A7tF\EE+\D1\F7" }, { i64, %"class.base::BasicStringPiece"* } { i64 7, %"class.base::BasicStringPiece"* getelementptr inbounds ([7 x %"class.base::BasicStringPiece"], [7 x %"class.base::BasicStringPiece"]* @_ZZN3net14CertVerifyProc27HasNameConstraintsViolationERKNSt3__16vectorINS_9HashValueENS1_9allocatorIS3_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEERKNS2_ISD_NS4_ISD_EEEESJ_E16kDomainsIndiaCCA, i32 0, i32 0) } }, { %"struct.net::SHA256HashValue", { i64, %"class.base::BasicStringPiece"* } } { %"struct.net::SHA256HashValue" { [32 x i8] c"\0D\93\13\A7\D7\0D5\893Pn\9Bh0zO}:zB\D4`\9A^\10KX\A5\A7\90\A5\81" }, { i64, %"class.base::BasicStringPiece"* } { i64 1, %"class.base::BasicStringPiece"* getelementptr inbounds ([1 x %"class.base::BasicStringPiece"], [1 x %"class.base::BasicStringPiece"]* @_ZZN3net14CertVerifyProc27HasNameConstraintsViolationERKNSt3__16vectorINS_9HashValueENS1_9allocatorIS3_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEERKNS2_ISD_NS4_ISD_EEEESJ_E12kDomainsTest, i32 0, i32 0) } }], align 16
@.str.24 = private unnamed_addr constant [18 x i8] c"LegacySymantecPKI\00", align 1
@_ZN3netL27kMaxRevocationLeafUpdateAgeE = internal constant %"class.base::TimeDelta" { i64 604800000000 }, align 8
@_ZN3net12_GLOBAL__N_19kLeafCertE = internal constant [5 x i8] c"Leaf\00", align 1
@_ZN3net12_GLOBAL__N_117kIntermediateCertE = internal constant [13 x i8] c"Intermediate\00", align 1
@_ZN3net12_GLOBAL__N_19kRootCertE = internal constant [5 x i8] c"Root\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"CertificateType2.%s.%s.%s\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"BR\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"NonBR\00", align 1
@_ZN3net12_GLOBAL__N_112kEccKeySizesE = internal constant [10 x i32] [i32 163, i32 192, i32 224, i32 233, i32 256, i32 283, i32 384, i32 409, i32 521, i32 571], align 16
@_ZN3net12_GLOBAL__N_115kRsaDsaKeySizesE = internal constant [9 x i32] [i32 512, i32 768, i32 1024, i32 1536, i32 2048, i32 3072, i32 4096, i32 8192, i32 16384], align 16
@.str.28 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"RSA\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"DSA\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"ECDSA\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"DH\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"ECDH\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"Unsupported\00", align 1
@.str.35 = private unnamed_addr constant [51 x i8] c"Net.Certificate.TLSFeatureExtensionWithPrivateRoot\00", align 1
@.str.36 = private unnamed_addr constant [58 x i8] c"Net.Certificate.TLSFeatureExtensionWithPrivateRootHasOCSP\00", align 1
@.str.37 = private unnamed_addr constant [35 x i8] c"Net.Certificate.TrustAnchor.Verify\00", align 1
@.str.38 = private unnamed_addr constant [44 x i8] c"Net.Certificate.TrustAnchor.VerifyOutOfDate\00", align 1
@.str.39 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.40 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.42 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.43 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.44 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.50 = private unnamed_addr constant [13 x i8] c"certificates\00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c"ocsp_response\00", align 1
@.str.52 = private unnamed_addr constant [21 x i8] c"NETLOG OCSP RESPONSE\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c"sct_list\00", align 1
@.str.54 = private unnamed_addr constant [16 x i8] c"NETLOG SCT LIST\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"host\00", align 1
@.str.56 = private unnamed_addr constant [13 x i8] c"verify_flags\00", align 1
@.str.57 = private unnamed_addr constant [16 x i8] c"crlset_sequence\00", align 1
@.str.58 = private unnamed_addr constant [18 x i8] c"crlset_is_expired\00", align 1
@.str.59 = private unnamed_addr constant [25 x i8] c"additional_trust_anchors\00", align 1
@_ZZN3net12_GLOBAL__N_140RecordTLSFeatureExtensionWithPrivateRootEPNS_15X509CertificateERKNS_16OCSPVerifyResultEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net12_GLOBAL__N_140RecordTLSFeatureExtensionWithPrivateRootEPNS_15X509CertificateERKNS_16OCSPVerifyResultEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net12_GLOBAL__N_126RecordTrustAnchorHistogramERKNSt3__16vectorINS_9HashValueENS1_9allocatorIS3_EEEEbE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3net14CertVerifyProcD1Ev = hidden unnamed_addr alias void (%"class.net::CertVerifyProc"*), void (%"class.net::CertVerifyProc"*)* @_ZN3net14CertVerifyProcD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::CertVerifyProc"* @_ZN3net14CertVerifyProc23CreateBuiltinVerifyProcE13scoped_refptrINS_14CertNetFetcherEE(%"class.net::CertNetFetcher"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.net::SystemTrustStore"* @_ZN3net25CreateSslSystemTrustStoreEv() #15
  %3 = tail call %"class.net::CertVerifyProc"* @_ZN3net27CreateCertVerifyProcBuiltinE13scoped_refptrINS_14CertNetFetcherEENSt3__110unique_ptrINS_16SystemTrustStoreENS3_14default_deleteIS5_EEEE(%"class.net::CertNetFetcher"* %0, %"class.net::SystemTrustStore"* %2) #15
  ret %"class.net::CertVerifyProc"* %3
}

declare %"class.net::CertVerifyProc"* @_ZN3net27CreateCertVerifyProcBuiltinE13scoped_refptrINS_14CertNetFetcherEENSt3__110unique_ptrINS_16SystemTrustStoreENS3_14default_deleteIS5_EEEE(%"class.net::CertNetFetcher"*, %"class.net::SystemTrustStore"*) local_unnamed_addr #1

declare %"class.net::SystemTrustStore"* @_ZN3net25CreateSslSystemTrustStoreEv() local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net14CertVerifyProcC2Ev(%"class.net::CertVerifyProc"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.net::CertVerifyProc", %"class.net::CertVerifyProc"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.net::CertVerifyProc", %"class.net::CertVerifyProc"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14CertVerifyProcE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net14CertVerifyProcD2Ev(%"class.net::CertVerifyProc"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net14CertVerifyProcD0Ev(%"class.net::CertVerifyProc"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14CertVerifyProc6VerifyEPNS_15X509CertificateERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_SB_iPNS_6CRLSetERKNS3_6vectorI13scoped_refptrIS1_ENS7_ISG_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceE(%"class.net::CertVerifyProc"*, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.net::CRLSet"*, %"class.std::__1::vector.44"* dereferenceable(24), %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %11 = alloca %"class.base::Value", align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca %"class.base::Time", align 8
  %17 = alloca %"class.base::Value", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.base::Value", align 8
  %23 = alloca %"class.base::Value", align 8
  %24 = alloca %"class.base::Value", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.base::Value", align 8
  %27 = alloca %"class.base::ScopedBlockingCall", align 8
  %28 = alloca %"class.base::Location", align 8
  %29 = alloca %"class.std::__1::vector", align 8
  %30 = alloca %"class.std::__1::vector", align 8
  %31 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %9, i64 0, i32 1
  %32 = load %"class.net::NetLog"*, %"class.net::NetLog"** %31, align 8
  %33 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %9, i64 0, i32 0
  %34 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %32, i64 0, i32 3
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %170, label %37, !prof !2

37:                                               ; preds = %10
  %38 = bitcast %"class.base::Value"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 32, i1 false) #15, !alias.scope !3
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %26, i8 zeroext 6) #15
  %39 = bitcast %"class.base::Value"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #15, !noalias !3
  call void @_ZN3net25NetLogX509CertificateListEPKNS_15X509CertificateE(%"class.base::Value"* nonnull sret %17, %"class.net::X509Certificate"* %1) #15
  %40 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %26, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %17) #15
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #15, !noalias !3
  %41 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1, !noalias !8
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8, !noalias !8
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i64 %46, i64 %47
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %75, label %50

50:                                               ; preds = %37
  %51 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #15, !noalias !3
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8, !noalias !8
  %54 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %55 = select i1 %44, i8* %53, i8* %54
  %56 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #15, !noalias !3
  %57 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  store i8 20, i8* %58, align 1, !noalias !3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.52, i64 0, i64 0), i64 20, i1 false) #15
  %59 = getelementptr inbounds i8, i8* %56, i64 20
  store i8 0, i8* %59, align 4, !noalias !3
  call void @_ZN3net9PEMEncodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %18, i8* %55, i64 %48, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %19) #15
  %60 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* nonnull %26, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i64 0, i64 0), i64 13, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18) #15
  %61 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1, !noalias !3
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %50
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8, !noalias !3
  call void @_ZdlPv(i8* %67) #17
  br label %68

68:                                               ; preds = %65, %50
  %69 = load i8, i8* %58, align 1, !noalias !3
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8, !noalias !3
  call void @_ZdlPv(i8* %73) #17
  br label %74

74:                                               ; preds = %71, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #15, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #15, !noalias !3
  br label %75

75:                                               ; preds = %74, %37
  %76 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1, !noalias !8
  %79 = icmp slt i8 %78, 0
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8, !noalias !8
  %82 = zext i8 %78 to i64
  %83 = select i1 %79, i64 %81, i64 %82
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %110, label %85

85:                                               ; preds = %75
  %86 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #15, !noalias !3
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8, !noalias !8
  %89 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %90 = select i1 %79, i8* %88, i8* %89
  %91 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #15, !noalias !3
  %92 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  store i8 15, i8* %93, align 1, !noalias !3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %91, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.54, i64 0, i64 0), i64 15, i1 false) #15
  %94 = getelementptr inbounds i8, i8* %91, i64 15
  store i8 0, i8* %94, align 1, !noalias !3
  call void @_ZN3net9PEMEncodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %20, i8* %90, i64 %83, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %21) #15
  %95 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* nonnull %26, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i64 0, i64 0), i64 8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %20) #15
  %96 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1, !noalias !3
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8, !noalias !3
  call void @_ZdlPv(i8* %102) #17
  br label %103

103:                                              ; preds = %100, %85
  %104 = load i8, i8* %93, align 1, !noalias !3
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8, !noalias !3
  call void @_ZdlPv(i8* %108) #17
  br label %109

109:                                              ; preds = %106, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #15, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #15, !noalias !3
  br label %110

110:                                              ; preds = %109, %75
  %111 = bitcast %"class.base::Value"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %111) #15, !noalias !3
  %112 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = load i8, i8* %113, align 1, !noalias !8
  %115 = icmp slt i8 %114, 0
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8, !noalias !8
  %118 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %119 = select i1 %115, i8* %117, i8* %118
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = load i64, i64* %120, align 8, !noalias !8
  %122 = zext i8 %114 to i64
  %123 = select i1 %115, i64 %121, i64 %122
  call void @_ZN3net17NetLogStringValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull sret %22, i8* %119, i64 %123) #15
  %124 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %22) #15
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %22) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %111) #15, !noalias !3
  %125 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %26, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.56, i64 0, i64 0), i64 12, i32 %5) #15
  %126 = bitcast %"class.base::Value"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %126) #15, !noalias !3
  %127 = call i32 @_ZNK3net6CRLSet8sequenceEv(%"class.net::CRLSet"* %6) #15
  call void @_ZN3net17NetLogNumberValueEj(%"class.base::Value"* nonnull sret %23, i32 %127) #15
  %128 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %26, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %23) #15
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %23) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %126) #15, !noalias !3
  %129 = call zeroext i1 @_ZNK3net6CRLSet9IsExpiredEv(%"class.net::CRLSet"* %6) #15
  br i1 %129, label %130, label %132

130:                                              ; preds = %110
  %131 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* nonnull %26, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.58, i64 0, i64 0), i64 17, i1 zeroext true) #15
  br label %132

132:                                              ; preds = %130, %110
  %133 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %7, i64 0, i32 0, i32 0
  %134 = load %class.scoped_refptr.46*, %class.scoped_refptr.46** %133, align 8, !noalias !8
  %135 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %7, i64 0, i32 0, i32 1
  %136 = load %class.scoped_refptr.46*, %class.scoped_refptr.46** %135, align 8, !noalias !8
  %137 = icmp eq %class.scoped_refptr.46* %134, %136
  br i1 %137, label %169, label %138

138:                                              ; preds = %132
  %139 = bitcast %"class.base::Value"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %139) #15, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 -86, i64 32, i1 false) #15, !noalias !3
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %24, i8 zeroext 7) #15
  %140 = load %class.scoped_refptr.46*, %class.scoped_refptr.46** %133, align 8, !noalias !8
  %141 = load %class.scoped_refptr.46*, %class.scoped_refptr.46** %135, align 8, !noalias !8
  %142 = icmp eq %class.scoped_refptr.46* %140, %141
  br i1 %142, label %148, label %143

143:                                              ; preds = %138
  %144 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  br label %150

148:                                              ; preds = %166, %138
  %149 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %26, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.59, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %24) #15
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %24) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %139) #15, !noalias !3
  br label %169

150:                                              ; preds = %166, %143
  %151 = phi %class.scoped_refptr.46* [ %140, %143 ], [ %167, %166 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #15, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 0, i64 24, i1 false) #15, !noalias !3
  %152 = getelementptr inbounds %class.scoped_refptr.46, %class.scoped_refptr.46* %151, i64 0, i32 0
  %153 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %152, align 8
  %154 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %153, i64 0, i32 6, i32 0, i32 0, i32 0
  %155 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %154, align 8
  %156 = call { i8*, i64 } @_ZN3net9x509_util25CryptoBufferAsStringPieceEPK16crypto_buffer_st(%struct.crypto_buffer_st* %155) #15
  %157 = extractvalue { i8*, i64 } %156, 0
  %158 = extractvalue { i8*, i64 } %156, 1
  %159 = call zeroext i1 @_ZN3net15X509Certificate20GetPEMEncodedFromDEREN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(i8* %157, i64 %158, %"class.std::__1::basic_string"* nonnull %25) #15
  br i1 %159, label %160, label %161

160:                                              ; preds = %150
  call void @_ZN4base5Value6AppendEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* nonnull %24, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %25) #15
  br label %161

161:                                              ; preds = %160, %150
  %162 = load i8, i8* %147, align 1, !noalias !3
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %161
  %165 = load i8*, i8** %145, align 8, !noalias !3
  call void @_ZdlPv(i8* %165) #17
  br label %166

166:                                              ; preds = %164, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #15, !noalias !3
  %167 = getelementptr inbounds %class.scoped_refptr.46, %class.scoped_refptr.46* %151, i64 1
  %168 = icmp eq %class.scoped_refptr.46* %167, %141
  br i1 %168, label %148, label %150

169:                                              ; preds = %148, %132
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %32, i32 379, %"struct.net::NetLogSource"* dereferenceable(16) %33, i32 1, %"class.base::Value"* nonnull dereferenceable(32) %26) #15
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %26) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #15
  br label %170

170:                                              ; preds = %10, %169
  %171 = bitcast %"class.base::ScopedBlockingCall"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %171) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 -86, i64 80, i1 false)
  %172 = bitcast %"class.base::Location"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %172) #15
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %28, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 546) #15
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %27, %"class.base::Location"* nonnull dereferenceable(32) %28, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %172) #15
  call void @_ZN3net16CertVerifyResult5ResetEv(%"class.net::CertVerifyResult"* %8) #15
  %173 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 2
  %174 = icmp eq %"class.net::X509Certificate"* %1, null
  br i1 %174, label %178, label %175

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = atomicrmw add i32* %176, i32 1 monotonic
  br label %178

178:                                              ; preds = %175, %170
  %179 = ptrtoint %"class.net::X509Certificate"* %1 to i64
  %180 = bitcast %class.scoped_refptr.46* %173 to i64*
  %181 = getelementptr inbounds %class.scoped_refptr.46, %class.scoped_refptr.46* %173, i64 0, i32 0
  %182 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %181, align 8
  store i64 %179, i64* %180, align 8
  %183 = icmp eq %"class.net::X509Certificate"* %182, null
  br i1 %183, label %190, label %184

184:                                              ; preds = %178
  %185 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %182, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = atomicrmw sub i32* %185, i32 1 acq_rel
  %187 = icmp eq i32 %186, 1
  br i1 %187, label %188, label %190

188:                                              ; preds = %184
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %182) #15
  %189 = bitcast %"class.net::X509Certificate"* %182 to i8*
  call void @_ZdlPv(i8* %189) #17
  br label %190

190:                                              ; preds = %178, %184, %188
  %191 = bitcast %"class.net::CertVerifyProc"* %0 to i32 (%"class.net::CertVerifyProc"*, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i32, %"class.net::CRLSet"*, %"class.std::__1::vector.44"*, %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"*)***
  %192 = load i32 (%"class.net::CertVerifyProc"*, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i32, %"class.net::CRLSet"*, %"class.std::__1::vector.44"*, %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"*)**, i32 (%"class.net::CertVerifyProc"*, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i32, %"class.net::CRLSet"*, %"class.std::__1::vector.44"*, %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"*)*** %191, align 8
  %193 = getelementptr inbounds i32 (%"class.net::CertVerifyProc"*, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i32, %"class.net::CRLSet"*, %"class.std::__1::vector.44"*, %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"*)*, i32 (%"class.net::CertVerifyProc"*, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i32, %"class.net::CRLSet"*, %"class.std::__1::vector.44"*, %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"*)** %192, i64 3
  %194 = load i32 (%"class.net::CertVerifyProc"*, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i32, %"class.net::CRLSet"*, %"class.std::__1::vector.44"*, %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"*)*, i32 (%"class.net::CertVerifyProc"*, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i32, %"class.net::CRLSet"*, %"class.std::__1::vector.44"*, %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"*)** %193, align 8
  %195 = call i32 %194(%"class.net::CertVerifyProc"* %0, %"class.net::X509Certificate"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string"* dereferenceable(24) %3, %"class.std::__1::basic_string"* dereferenceable(24) %4, i32 %5, %"class.net::CRLSet"* %6, %"class.std::__1::vector.44"* dereferenceable(24) %7, %"class.net::CertVerifyResult"* %8, %"class.net::NetLogWithSource"* dereferenceable(24) %9) #15
  %196 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 2, i32 0
  %197 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %196, align 8
  %198 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %197, i64 0, i32 7
  %199 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %198, i64 0, i32 0, i32 0
  %200 = load %"class.std::__1::unique_ptr.13"*, %"class.std::__1::unique_ptr.13"** %199, align 8
  %201 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %197, i64 0, i32 7, i32 0, i32 1
  %202 = load %"class.std::__1::unique_ptr.13"*, %"class.std::__1::unique_ptr.13"** %201, align 8
  %203 = icmp eq %"class.std::__1::unique_ptr.13"* %200, %202
  br i1 %203, label %232, label %204

204:                                              ; preds = %190
  %205 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %197, i64 0, i32 6, i32 0, i32 0, i32 0
  %206 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %205, align 8
  %207 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_132InspectSignatureAlgorithmForCertEPK16crypto_buffer_stPNS_16CertVerifyResultE(%struct.crypto_buffer_st* %206, %"class.net::CertVerifyResult"* %8) #15
  br i1 %207, label %208, label %227

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 7
  %210 = load i8, i8* %209, align 1, !range !9
  %211 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 8
  store i8 %210, i8* %211, align 8
  %212 = bitcast %"class.std::__1::unique_ptr.13"** %201 to i64*
  %213 = bitcast %"class.std::__1::vector.17"* %198 to i64*
  br label %214

214:                                              ; preds = %222, %208
  %215 = phi i64 [ 0, %208 ], [ %216, %222 ]
  %216 = add nuw i64 %215, 1
  %217 = load i64, i64* %212, align 8
  %218 = load i64, i64* %213, align 8
  %219 = sub i64 %217, %218
  %220 = ashr exact i64 %219, 3
  %221 = icmp ult i64 %216, %220
  br i1 %221, label %222, label %232

222:                                              ; preds = %214
  %223 = inttoptr i64 %218 to %"class.std::__1::unique_ptr.13"*
  %224 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %223, i64 %215, i32 0, i32 0, i32 0
  %225 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %224, align 8
  %226 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_132InspectSignatureAlgorithmForCertEPK16crypto_buffer_stPNS_16CertVerifyResultE(%struct.crypto_buffer_st* %225, %"class.net::CertVerifyResult"* %8) #15
  br i1 %226, label %214, label %227

227:                                              ; preds = %222, %204
  %228 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %229 = load i32, i32* %228, align 8
  %230 = or i32 %229, 128
  store i32 %230, i32* %228, align 8
  %231 = call i32 @_ZN3net23MapCertStatusToNetErrorEj(i32 %230) #15
  br label %232

232:                                              ; preds = %214, %190, %227
  %233 = phi i32 [ %231, %227 ], [ %195, %190 ], [ %195, %214 ]
  %234 = call zeroext i1 @_ZNK3net15X509Certificate15VerifyNameMatchERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::X509Certificate"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %2) #15
  br i1 %234, label %240, label %235

235:                                              ; preds = %232
  %236 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %237 = load i32, i32* %236, align 8
  %238 = or i32 %237, 1
  store i32 %238, i32* %236, align 8
  %239 = call i32 @_ZN3net23MapCertStatusToNetErrorEj(i32 %238) #15
  br label %240

240:                                              ; preds = %235, %232
  %241 = phi i32 [ %233, %232 ], [ %239, %235 ]
  %242 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 14, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %306

245:                                              ; preds = %240
  %246 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %181, align 8
  %247 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 14
  %248 = bitcast i64* %14 to %"struct.net::OCSPVerifyResult"*
  %249 = bitcast i64* %15 to %"struct.net::OCSPVerifyResult"*
  %250 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %251 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %250, i64 0, i32 1, i32 0
  %252 = load i8, i8* %251, align 1
  %253 = icmp slt i8 %252, 0
  %254 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %255 = load i64, i64* %254, align 8
  %256 = zext i8 %252 to i64
  %257 = select i1 %253, i64 %255, i64 %256
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %264

259:                                              ; preds = %245
  %260 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260) #15
  call void @_ZN3net16OCSPVerifyResultC1Ev(%"struct.net::OCSPVerifyResult"* nonnull %248) #15
  %261 = bitcast %"struct.net::OCSPVerifyResult"* %247 to i64*
  %262 = load i64, i64* %14, align 8
  store i64 %262, i64* %261, align 4
  call void @_ZN3net16OCSPVerifyResultD1Ev(%"struct.net::OCSPVerifyResult"* nonnull %248) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260) #15
  %263 = getelementptr inbounds %"struct.net::OCSPVerifyResult", %"struct.net::OCSPVerifyResult"* %247, i64 0, i32 0
  store i32 1, i32* %263, align 4
  br label %306

264:                                              ; preds = %245
  %265 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %246, i64 0, i32 6, i32 0, i32 0, i32 0
  %266 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %265, align 8
  %267 = call { i8*, i64 } @_ZN3net9x509_util25CryptoBufferAsStringPieceEPK16crypto_buffer_st(%struct.crypto_buffer_st* %266) #15
  %268 = extractvalue { i8*, i64 } %267, 0
  %269 = extractvalue { i8*, i64 } %267, 1
  %270 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %246, i64 0, i32 7, i32 0, i32 0
  %271 = load %"class.std::__1::unique_ptr.13"*, %"class.std::__1::unique_ptr.13"** %270, align 8
  %272 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %246, i64 0, i32 7, i32 0, i32 1
  %273 = load %"class.std::__1::unique_ptr.13"*, %"class.std::__1::unique_ptr.13"** %272, align 8
  %274 = icmp eq %"class.std::__1::unique_ptr.13"* %271, %273
  br i1 %274, label %275, label %282

275:                                              ; preds = %264
  %276 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %265, align 8
  %277 = call zeroext i1 @_ZN3net15X509Certificate12IsSelfSignedEPK16crypto_buffer_st(%struct.crypto_buffer_st* %276) #15
  br i1 %277, label %288, label %278

278:                                              ; preds = %275
  %279 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %279) #15
  call void @_ZN3net16OCSPVerifyResultC1Ev(%"struct.net::OCSPVerifyResult"* nonnull %249) #15
  %280 = bitcast %"struct.net::OCSPVerifyResult"* %247 to i64*
  %281 = load i64, i64* %15, align 8
  store i64 %281, i64* %280, align 4
  call void @_ZN3net16OCSPVerifyResultD1Ev(%"struct.net::OCSPVerifyResult"* nonnull %249) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #15
  br label %306

282:                                              ; preds = %264
  %283 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %271, i64 0, i32 0, i32 0, i32 0
  %284 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %283, align 8
  %285 = call { i8*, i64 } @_ZN3net9x509_util25CryptoBufferAsStringPieceEPK16crypto_buffer_st(%struct.crypto_buffer_st* %284) #15
  %286 = extractvalue { i8*, i64 } %285, 0
  %287 = extractvalue { i8*, i64 } %285, 1
  br label %288

288:                                              ; preds = %282, %275
  %289 = phi i64 [ %287, %282 ], [ %269, %275 ]
  %290 = phi i8* [ %286, %282 ], [ %268, %275 ]
  %291 = load i8, i8* %251, align 1
  %292 = icmp slt i8 %291, 0
  %293 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load i8*, i8** %293, align 8
  %295 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %296 = select i1 %292, i8* %294, i8* %295
  %297 = load i64, i64* %254, align 8
  %298 = zext i8 %291 to i64
  %299 = select i1 %292, i64 %297, i64 %298
  %300 = bitcast %"class.base::Time"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %300) #15
  %301 = call i64 @_ZN4base4Time3NowEv() #15
  %302 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %16, i64 0, i32 0, i32 0
  store i64 %301, i64* %302, align 8
  %303 = getelementptr inbounds %"struct.net::OCSPVerifyResult", %"struct.net::OCSPVerifyResult"* %247, i64 0, i32 0
  %304 = call i32 @_ZN3net9CheckOCSPEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_S5_RKNS0_4TimeERKNS0_9TimeDeltaEPNS_16OCSPVerifyResult14ResponseStatusE(i8* %296, i64 %299, i8* %268, i64 %269, i8* %290, i64 %289, %"class.base::Time"* nonnull dereferenceable(8) %16, %"class.base::TimeDelta"* nonnull dereferenceable(8) @_ZN3netL27kMaxRevocationLeafUpdateAgeE, i32* %303) #15
  %305 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 14, i32 1
  store i32 %304, i32* %305, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300) #15
  br label %306

306:                                              ; preds = %288, %278, %259, %240
  %307 = icmp eq %"class.net::CRLSet"* %6, null
  br i1 %307, label %336, label %308

308:                                              ; preds = %306
  %309 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 10, i32 0, i32 0
  %310 = load %"class.net::HashValue"*, %"class.net::HashValue"** %309, align 8
  %311 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 10, i32 0, i32 1
  %312 = load %"class.net::HashValue"*, %"class.net::HashValue"** %311, align 8
  %313 = icmp eq %"class.net::HashValue"* %310, %312
  br i1 %313, label %336, label %314

314:                                              ; preds = %308, %333
  %315 = phi %"class.net::HashValue"* [ %334, %333 ], [ %310, %308 ]
  %316 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %315, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %333

319:                                              ; preds = %314
  %320 = call i8* @_ZNK3net9HashValue4dataEv(%"class.net::HashValue"* %315) #15
  %321 = call i64 @_ZNK3net9HashValue4sizeEv(%"class.net::HashValue"* %315) #15
  %322 = call zeroext i1 @_ZNK3net6CRLSet22IsKnownInterceptionKeyEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::CRLSet"* nonnull %6, i8* %320, i64 %321) #15
  br i1 %322, label %323, label %333

323:                                              ; preds = %319
  %324 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %325 = load i32, i32* %324, align 8
  %326 = and i32 %325, 64
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %331, label %328

328:                                              ; preds = %323
  %329 = or i32 %325, 67108864
  store i32 %329, i32* %324, align 8
  %330 = call i32 @_ZN3net23MapCertStatusToNetErrorEj(i32 %329) #15
  br label %336

331:                                              ; preds = %323
  %332 = or i32 %325, 2097152
  store i32 %332, i32* %324, align 8
  br label %336

333:                                              ; preds = %319, %314
  %334 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %315, i64 1
  %335 = icmp eq %"class.net::HashValue"* %334, %312
  br i1 %335, label %336, label %314

336:                                              ; preds = %333, %308, %328, %331, %306
  %337 = phi i32 [ %241, %306 ], [ %241, %331 ], [ %330, %328 ], [ %241, %308 ], [ %241, %333 ]
  %338 = bitcast %"class.std::__1::vector"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %338) #15
  %339 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %29, i64 0, i32 0, i32 0
  %340 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %29, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %338, i8 0, i64 24, i1 false) #15
  %341 = bitcast %"class.std::__1::vector"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %341) #15
  %342 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %30, i64 0, i32 0, i32 0
  %343 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %30, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %341, i8 0, i64 24, i1 false) #15
  %344 = call zeroext i1 @_ZNK3net15X509Certificate17GetSubjectAltNameEPNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEESB_(%"class.net::X509Certificate"* %1, %"class.std::__1::vector"* nonnull %29, %"class.std::__1::vector"* nonnull %30) #15
  %345 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 10
  %346 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 1, i32 0
  %347 = call zeroext i1 @_ZN3net14CertVerifyProc27HasNameConstraintsViolationERKNSt3__16vectorINS_9HashValueENS1_9allocatorIS3_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEERKNS2_ISD_NS4_ISD_EEEESJ_(%"class.std::__1::vector.60"* dereferenceable(24) %345, %"class.std::__1::basic_string"* dereferenceable(24) %346, %"class.std::__1::vector"* nonnull dereferenceable(24) %29, %"class.std::__1::vector"* nonnull dereferenceable(24) %30)
  br i1 %347, label %348, label %353

348:                                              ; preds = %336
  %349 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %350 = load i32, i32* %349, align 8
  %351 = or i32 %350, 16384
  store i32 %351, i32* %349, align 8
  %352 = call i32 @_ZN3net23MapCertStatusToNetErrorEj(i32 %351) #15
  br label %353

353:                                              ; preds = %348, %336
  %354 = phi i32 [ %352, %348 ], [ %337, %336 ]
  %355 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 11
  %356 = load i8, i8* %355, align 8, !range !9
  %357 = icmp ne i8 %356, 0
  %358 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %358) #15
  store i64 0, i64* %12, align 8
  %359 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %359) #15
  store i32 0, i32* %13, align 4
  %360 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %181, align 8
  %361 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %360, i64 0, i32 3, i32 0, i32 0
  %362 = load i64, i64* %361, align 8
  %363 = icmp sgt i64 %362, 12985574399999999
  br i1 %363, label %364, label %368

364:                                              ; preds = %353
  %365 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %360, i64 0, i32 4, i32 0, i32 0
  %366 = load i64, i64* %365, align 8
  %367 = icmp sgt i64 %366, 13033007999999999
  br label %368

368:                                              ; preds = %364, %353
  %369 = phi i1 [ false, %353 ], [ %367, %364 ]
  %370 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %360, i64 0, i32 6, i32 0, i32 0, i32 0
  %371 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %370, align 8
  call void @_ZN3net15X509Certificate16GetPublicKeyInfoEPK16crypto_buffer_stPmPNS0_13PublicKeyTypeE(%struct.crypto_buffer_st* %371, i64* nonnull %12, i32* nonnull %13) #15
  br i1 %357, label %372, label %375

372:                                              ; preds = %368
  %373 = load i64, i64* %12, align 8
  %374 = load i32, i32* %13, align 4
  call fastcc void @_ZN3net12_GLOBAL__N_124RecordPublicKeyHistogramEPKcbmNS_15X509Certificate13PublicKeyTypeE(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN3net12_GLOBAL__N_19kLeafCertE, i64 0, i64 0), i1 zeroext %369, i64 %373, i32 %374) #15
  br label %375

375:                                              ; preds = %372, %368
  %376 = load i32, i32* %13, align 4
  %377 = load i64, i64* %12, align 8
  %378 = add i32 %376, -1
  %379 = icmp ult i32 %378, 2
  %380 = icmp ult i64 %377, 1024
  %381 = and i1 %379, %380
  %382 = zext i1 %381 to i8
  %383 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %181, align 8
  %384 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %383, i64 0, i32 7
  %385 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %383, i64 0, i32 7, i32 0, i32 1
  %386 = bitcast %"class.std::__1::unique_ptr.13"** %385 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = bitcast %"class.std::__1::vector.17"* %384 to i64*
  %389 = load i64, i64* %388, align 8
  %390 = icmp eq i64 %387, %389
  br i1 %390, label %427, label %391

391:                                              ; preds = %375, %419
  %392 = phi i64 [ %423, %419 ], [ %389, %375 ]
  %393 = phi i64 [ %421, %419 ], [ 0, %375 ]
  %394 = phi i8 [ %420, %419 ], [ %382, %375 ]
  %395 = inttoptr i64 %392 to %"class.std::__1::unique_ptr.13"*
  %396 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %395, i64 %393, i32 0, i32 0, i32 0
  %397 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %396, align 8
  call void @_ZN3net15X509Certificate16GetPublicKeyInfoEPK16crypto_buffer_stPmPNS0_13PublicKeyTypeE(%struct.crypto_buffer_st* %397, i64* nonnull %12, i32* nonnull %13) #15
  br i1 %357, label %398, label %408

398:                                              ; preds = %391
  %399 = load i64, i64* %386, align 8
  %400 = load i64, i64* %388, align 8
  %401 = sub i64 %399, %400
  %402 = ashr exact i64 %401, 3
  %403 = add nsw i64 %402, -1
  %404 = icmp ult i64 %393, %403
  %405 = select i1 %404, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN3net12_GLOBAL__N_117kIntermediateCertE, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN3net12_GLOBAL__N_19kRootCertE, i64 0, i64 0)
  %406 = load i64, i64* %12, align 8
  %407 = load i32, i32* %13, align 4
  call fastcc void @_ZN3net12_GLOBAL__N_124RecordPublicKeyHistogramEPKcbmNS_15X509Certificate13PublicKeyTypeE(i8* %405, i1 zeroext %369, i64 %406, i32 %407) #15
  br label %408

408:                                              ; preds = %398, %391
  %409 = and i8 %394, 1
  %410 = icmp eq i8 %409, 0
  br i1 %410, label %411, label %419

411:                                              ; preds = %408
  %412 = load i32, i32* %13, align 4
  %413 = load i64, i64* %12, align 8
  %414 = add i32 %412, -1
  %415 = icmp ult i32 %414, 2
  %416 = icmp ult i64 %413, 1024
  %417 = and i1 %415, %416
  %418 = select i1 %417, i8 1, i8 %394
  br label %419

419:                                              ; preds = %411, %408
  %420 = phi i8 [ %394, %408 ], [ %418, %411 ]
  %421 = add nuw i64 %393, 1
  %422 = load i64, i64* %386, align 8
  %423 = load i64, i64* %388, align 8
  %424 = sub i64 %422, %423
  %425 = ashr exact i64 %424, 3
  %426 = icmp ult i64 %421, %425
  br i1 %426, label %391, label %427

427:                                              ; preds = %419, %375
  %428 = phi i8 [ %382, %375 ], [ %420, %419 ]
  %429 = and i8 %428, 1
  %430 = icmp eq i8 %429, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %359) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %358) #15
  br i1 %430, label %443, label %431

431:                                              ; preds = %427
  %432 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %433 = load i32, i32* %432, align 8
  %434 = or i32 %433, 2048
  store i32 %434, i32* %432, align 8
  %435 = icmp eq i32 %354, 0
  br i1 %435, label %440, label %436

436:                                              ; preds = %431
  %437 = call zeroext i1 @_ZN3net18IsCertificateErrorEi(i32 %354) #15
  br i1 %437, label %438, label %443

438:                                              ; preds = %436
  %439 = load i32, i32* %432, align 8
  br label %440

440:                                              ; preds = %438, %431
  %441 = phi i32 [ %439, %438 ], [ %434, %431 ]
  %442 = call i32 @_ZN3net23MapCertStatusToNetErrorEj(i32 %441) #15
  br label %443

443:                                              ; preds = %427, %436, %440
  %444 = phi i32 [ %442, %440 ], [ %354, %436 ], [ %354, %427 ]
  %445 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 4
  %446 = load i8, i8* %445, align 4, !range !9
  %447 = icmp eq i8 %446, 0
  br i1 %447, label %448, label %452

448:                                              ; preds = %443
  %449 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 5
  %450 = load i8, i8* %449, align 1, !range !9
  %451 = icmp eq i8 %450, 0
  br i1 %451, label %457, label %452

452:                                              ; preds = %448, %443
  %453 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %454 = load i32, i32* %453, align 8
  %455 = or i32 %454, 128
  store i32 %455, i32* %453, align 8
  %456 = call i32 @_ZN3net23MapCertStatusToNetErrorEj(i32 %455) #15
  br label %457

457:                                              ; preds = %448, %452
  %458 = phi i32 [ %444, %448 ], [ %456, %452 ]
  %459 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 7
  %460 = load i8, i8* %459, align 1, !range !9
  %461 = icmp eq i8 %460, 0
  br i1 %461, label %466, label %462

462:                                              ; preds = %457
  %463 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %464 = load i32, i32* %463, align 8
  %465 = or i32 %464, 524288
  store i32 %465, i32* %463, align 8
  br label %466

466:                                              ; preds = %457, %462
  %467 = load i8, i8* %355, align 8, !range !9
  %468 = icmp ne i8 %467, 0
  %469 = and i32 %5, 4
  %470 = icmp eq i32 %469, 0
  %471 = or i1 %470, %468
  br i1 %471, label %472, label %478

472:                                              ; preds = %466
  %473 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 8
  %474 = load i8, i8* %473, align 8, !range !9
  %475 = icmp ne i8 %474, 0
  %476 = xor i1 %461, true
  %477 = or i1 %475, %476
  br i1 %477, label %482, label %478

478:                                              ; preds = %472, %466
  %479 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 6
  %480 = load i8, i8* %479, align 2, !range !9
  %481 = icmp eq i8 %480, 0
  br i1 %481, label %494, label %482

482:                                              ; preds = %478, %472
  %483 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %484 = load i32, i32* %483, align 8
  %485 = or i32 %484, 256
  store i32 %485, i32* %483, align 8
  %486 = icmp eq i32 %458, 0
  br i1 %486, label %491, label %487

487:                                              ; preds = %482
  %488 = call zeroext i1 @_ZN3net18IsCertificateErrorEi(i32 %458) #15
  br i1 %488, label %489, label %494

489:                                              ; preds = %487
  %490 = load i32, i32* %483, align 8
  br label %491

491:                                              ; preds = %489, %482
  %492 = phi i32 [ %490, %489 ], [ %485, %482 ]
  %493 = call i32 @_ZN3net23MapCertStatusToNetErrorEj(i32 %492) #15
  br label %494

494:                                              ; preds = %478, %487, %491
  %495 = phi i32 [ %493, %491 ], [ %458, %487 ], [ %458, %478 ]
  %496 = and i32 %5, 8
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %534

498:                                              ; preds = %494
  %499 = call zeroext i1 @_ZN3net20IsLegacySymantecCertERKNSt3__16vectorINS_9HashValueENS0_9allocatorIS2_EEEE(%"class.std::__1::vector.60"* dereferenceable(24) %345) #15
  br i1 %499, label %500, label %534

500:                                              ; preds = %498
  %501 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net14CertVerifyProc29kLegacySymantecPKIEnforcementE) #15
  br i1 %501, label %522, label %502

502:                                              ; preds = %500
  %503 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %181, align 8
  %504 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %503, i64 0, i32 3, i32 0, i32 0
  %505 = load i64, i64* %504, align 8
  switch i64 %505, label %506 [
    i64 9223372036854775807, label %522
    i64 0, label %522
  ]

506:                                              ; preds = %502
  %507 = call i64 @_ZN4base4Time9UnixEpochEv() #15
  %508 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %507, i64 1512086400000000) #15
  %509 = extractvalue { i64, i1 } %508, 1
  %510 = extractvalue { i64, i1 } %508, 0
  %511 = select i1 %509, i64 9223372036854775807, i64 %510, !prof !10
  %512 = load i64, i64* %504, align 8
  %513 = icmp slt i64 %512, %511
  br i1 %513, label %514, label %522

514:                                              ; preds = %506
  %515 = call i64 @_ZN4base4Time9UnixEpochEv() #15
  %516 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %515, i64 1464739200000000) #15
  %517 = extractvalue { i64, i1 } %516, 1
  %518 = extractvalue { i64, i1 } %516, 0
  %519 = select i1 %517, i64 9223372036854775807, i64 %518, !prof !10
  %520 = load i64, i64* %504, align 8
  %521 = icmp slt i64 %520, %519
  br i1 %521, label %522, label %534

522:                                              ; preds = %506, %502, %502, %514, %500
  %523 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %524 = load i32, i32* %523, align 8
  %525 = or i32 %524, 33554432
  store i32 %525, i32* %523, align 8
  %526 = icmp eq i32 %495, 0
  br i1 %526, label %531, label %527

527:                                              ; preds = %522
  %528 = call zeroext i1 @_ZN3net18IsCertificateErrorEi(i32 %495) #15
  br i1 %528, label %529, label %534

529:                                              ; preds = %527
  %530 = load i32, i32* %523, align 8
  br label %531

531:                                              ; preds = %529, %522
  %532 = phi i32 [ %530, %529 ], [ %525, %522 ]
  %533 = call i32 @_ZN3net23MapCertStatusToNetErrorEj(i32 %532) #15
  br label %534

534:                                              ; preds = %494, %514, %531, %527, %498
  %535 = phi i32 [ %533, %531 ], [ %495, %527 ], [ %495, %514 ], [ %495, %498 ], [ %495, %494 ]
  %536 = load i8, i8* %355, align 8, !range !9
  %537 = icmp eq i8 %536, 0
  br i1 %537, label %556, label %538

538:                                              ; preds = %534
  %539 = call zeroext i1 @_ZN3net19IsHostnameNonUniqueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %2) #15
  br i1 %539, label %540, label %544

540:                                              ; preds = %538
  %541 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %542 = load i32, i32* %541, align 8
  %543 = or i32 %542, 1024
  store i32 %543, i32* %541, align 8
  br label %544

544:                                              ; preds = %540, %538
  %545 = load i8, i8* %355, align 8
  %546 = icmp eq i8 %545, 0
  br i1 %546, label %556, label %547

547:                                              ; preds = %544
  %548 = call zeroext i1 @_ZN3net14CertVerifyProc18HasTooLongValidityERKNS_15X509CertificateE(%"class.net::X509Certificate"* dereferenceable(464) %1)
  br i1 %548, label %549, label %556

549:                                              ; preds = %547
  %550 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %551 = load i32, i32* %550, align 8
  %552 = or i32 %551, 32768
  store i32 %552, i32* %550, align 8
  %553 = icmp eq i32 %535, 0
  br i1 %553, label %554, label %615

554:                                              ; preds = %549
  %555 = call i32 @_ZN3net23MapCertStatusToNetErrorEj(i32 %552) #15
  br label %556

556:                                              ; preds = %534, %544, %554, %547
  %557 = phi i32 [ %535, %544 ], [ %555, %554 ], [ %535, %547 ], [ %535, %534 ]
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %559, label %615

559:                                              ; preds = %556
  %560 = load i8, i8* %355, align 8, !range !9
  %561 = icmp eq i8 %560, 0
  br i1 %561, label %562, label %588

562:                                              ; preds = %559
  %563 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %564 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %563, align 8
  %565 = call { i8*, i64 } @_ZN3net9x509_util25CryptoBufferAsStringPieceEPK16crypto_buffer_st(%struct.crypto_buffer_st* %564) #15
  %566 = extractvalue { i8*, i64 } %565, 0
  %567 = extractvalue { i8*, i64 } %565, 1
  %568 = call zeroext i1 @_ZN3net4asn122HasTLSFeatureExtensionEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %566, i64 %567) #15
  %569 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_140RecordTLSFeatureExtensionWithPrivateRootEPNS_15X509CertificateERKNS_16OCSPVerifyResultEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %570 = inttoptr i64 %569 to %"class.base::HistogramBase"*
  %571 = icmp eq i64 %569, 0
  br i1 %571, label %572, label %575

572:                                              ; preds = %562
  %573 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.35, i64 0, i64 0), i32 1) #15
  %574 = ptrtoint %"class.base::HistogramBase"* %573 to i64
  store atomic i64 %574, i64* @_ZZN3net12_GLOBAL__N_140RecordTLSFeatureExtensionWithPrivateRootEPNS_15X509CertificateERKNS_16OCSPVerifyResultEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %575

575:                                              ; preds = %572, %562
  %576 = phi %"class.base::HistogramBase"* [ %570, %562 ], [ %573, %572 ]
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %576, i1 zeroext %568) #15
  br i1 %568, label %577, label %588

577:                                              ; preds = %575
  %578 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_140RecordTLSFeatureExtensionWithPrivateRootEPNS_15X509CertificateERKNS_16OCSPVerifyResultEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %579 = inttoptr i64 %578 to %"class.base::HistogramBase"*
  %580 = icmp eq i64 %578, 0
  br i1 %580, label %581, label %584

581:                                              ; preds = %577
  %582 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.36, i64 0, i64 0), i32 1) #15
  %583 = ptrtoint %"class.base::HistogramBase"* %582 to i64
  store atomic i64 %583, i64* @_ZZN3net12_GLOBAL__N_140RecordTLSFeatureExtensionWithPrivateRootEPNS_15X509CertificateERKNS_16OCSPVerifyResultEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %584

584:                                              ; preds = %581, %577
  %585 = phi %"class.base::HistogramBase"* [ %579, %577 ], [ %582, %581 ]
  %586 = load i32, i32* %242, align 4
  %587 = icmp ne i32 %586, 1
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %585, i1 zeroext %587) #15
  br label %588

588:                                              ; preds = %559, %575, %584
  %589 = load i8, i8* %355, align 8, !range !9
  %590 = icmp ne i8 %589, 0
  %591 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %345, i64 0, i32 0, i32 0
  %592 = load %"class.net::HashValue"*, %"class.net::HashValue"** %591, align 8
  %593 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 10, i32 0, i32 1
  %594 = load %"class.net::HashValue"*, %"class.net::HashValue"** %593, align 8
  %595 = icmp eq %"class.net::HashValue"* %592, %594
  br i1 %595, label %596, label %597

596:                                              ; preds = %588
  call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.37, i64 0, i64 0), i32 0) #15
  br label %606

597:                                              ; preds = %588, %597
  %598 = phi %"class.net::HashValue"* [ %601, %597 ], [ %592, %588 ]
  %599 = call i32 @_ZN3net35GetNetTrustAnchorHistogramIdForSPKIERKNS_9HashValueE(%"class.net::HashValue"* dereferenceable(36) %598) #15
  %600 = icmp ne i32 %599, 0
  %601 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %598, i64 1
  %602 = icmp eq %"class.net::HashValue"* %601, %594
  %603 = or i1 %600, %602
  br i1 %603, label %604, label %597

604:                                              ; preds = %597
  call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.37, i64 0, i64 0), i32 %599) #15
  %605 = icmp eq i32 %599, 0
  br i1 %605, label %606, label %615

606:                                              ; preds = %604, %596
  %607 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_126RecordTrustAnchorHistogramERKNSt3__16vectorINS_9HashValueENS1_9allocatorIS3_EEEEbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %608 = inttoptr i64 %607 to %"class.base::HistogramBase"*
  %609 = icmp eq i64 %607, 0
  br i1 %609, label %610, label %613

610:                                              ; preds = %606
  %611 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.38, i64 0, i64 0), i32 1) #15
  %612 = ptrtoint %"class.base::HistogramBase"* %611 to i64
  store atomic i64 %612, i64* @_ZZN3net12_GLOBAL__N_126RecordTrustAnchorHistogramERKNSt3__16vectorINS_9HashValueENS1_9allocatorIS3_EEEEbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %613

613:                                              ; preds = %610, %606
  %614 = phi %"class.base::HistogramBase"* [ %608, %606 ], [ %611, %610 ]
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %614, i1 zeroext %590) #15
  br label %615

615:                                              ; preds = %556, %613, %604, %549
  %616 = phi i32 [ %535, %549 ], [ 0, %604 ], [ 0, %613 ], [ %557, %556 ]
  %617 = load %"class.net::NetLog"*, %"class.net::NetLog"** %31, align 8
  %618 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %617, i64 0, i32 3
  %619 = load atomic i32, i32* %618 monotonic, align 4
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %623, label %621, !prof !2

621:                                              ; preds = %615
  %622 = bitcast %"class.base::Value"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %622) #15
  call void @_ZNK3net16CertVerifyResult12NetLogParamsEi(%"class.base::Value"* nonnull sret %11, %"class.net::CertVerifyResult"* %8, i32 %616) #15
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %617, i32 379, %"struct.net::NetLogSource"* dereferenceable(16) %33, i32 2, %"class.base::Value"* nonnull dereferenceable(32) %11) #15
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %622) #15
  br label %623

623:                                              ; preds = %615, %621
  %624 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %342, align 8
  %625 = icmp eq %"class.std::__1::basic_string"* %624, null
  br i1 %625, label %647, label %626

626:                                              ; preds = %623
  %627 = bitcast %"class.std::__1::basic_string"* %624 to i8*
  %628 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %343, align 8
  %629 = icmp eq %"class.std::__1::basic_string"* %628, %624
  br i1 %629, label %645, label %630

630:                                              ; preds = %626, %640
  %631 = phi %"class.std::__1::basic_string"* [ %632, %640 ], [ %628, %626 ]
  %632 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %631, i64 -1
  %633 = bitcast %"class.std::__1::basic_string"* %632 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %634 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %633, i64 0, i32 1, i32 0
  %635 = load i8, i8* %634, align 1
  %636 = icmp slt i8 %635, 0
  br i1 %636, label %637, label %640

637:                                              ; preds = %630
  %638 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %632, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %639 = load i8*, i8** %638, align 8
  call void @_ZdlPv(i8* %639) #17
  br label %640

640:                                              ; preds = %637, %630
  %641 = icmp eq %"class.std::__1::basic_string"* %632, %624
  br i1 %641, label %642, label %630

642:                                              ; preds = %640
  %643 = bitcast %"class.std::__1::vector"* %30 to i8**
  %644 = load i8*, i8** %643, align 8
  br label %645

645:                                              ; preds = %642, %626
  %646 = phi i8* [ %644, %642 ], [ %627, %626 ]
  store %"class.std::__1::basic_string"* %624, %"class.std::__1::basic_string"** %343, align 8
  call void @_ZdlPv(i8* %646) #17
  br label %647

647:                                              ; preds = %623, %645
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %341) #15
  %648 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %339, align 8
  %649 = icmp eq %"class.std::__1::basic_string"* %648, null
  br i1 %649, label %671, label %650

650:                                              ; preds = %647
  %651 = bitcast %"class.std::__1::basic_string"* %648 to i8*
  %652 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %340, align 8
  %653 = icmp eq %"class.std::__1::basic_string"* %652, %648
  br i1 %653, label %669, label %654

654:                                              ; preds = %650, %664
  %655 = phi %"class.std::__1::basic_string"* [ %656, %664 ], [ %652, %650 ]
  %656 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %655, i64 -1
  %657 = bitcast %"class.std::__1::basic_string"* %656 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %658 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %657, i64 0, i32 1, i32 0
  %659 = load i8, i8* %658, align 1
  %660 = icmp slt i8 %659, 0
  br i1 %660, label %661, label %664

661:                                              ; preds = %654
  %662 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %656, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %663 = load i8*, i8** %662, align 8
  call void @_ZdlPv(i8* %663) #17
  br label %664

664:                                              ; preds = %661, %654
  %665 = icmp eq %"class.std::__1::basic_string"* %656, %648
  br i1 %665, label %666, label %654

666:                                              ; preds = %664
  %667 = bitcast %"class.std::__1::vector"* %29 to i8**
  %668 = load i8*, i8** %667, align 8
  br label %669

669:                                              ; preds = %666, %650
  %670 = phi i8* [ %668, %666 ], [ %651, %650 ]
  store %"class.std::__1::basic_string"* %648, %"class.std::__1::basic_string"** %340, align 8
  call void @_ZdlPv(i8* %670) #17
  br label %671

671:                                              ; preds = %647, %669
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %338) #15
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %27) #15
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %171) #15
  ret i32 %616
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

declare void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"*, %"class.base::Location"* dereferenceable(32), i32) unnamed_addr #1

declare void @_ZN3net16CertVerifyResult5ResetEv(%"class.net::CertVerifyResult"*) local_unnamed_addr #1

declare i32 @_ZN3net23MapCertStatusToNetErrorEj(i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net15X509Certificate15VerifyNameMatchERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::X509Certificate"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net6CRLSet22IsKnownInterceptionKeyEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::CRLSet"*, i8*, i64) local_unnamed_addr #1

declare i8* @_ZNK3net9HashValue4dataEv(%"class.net::HashValue"*) local_unnamed_addr #1

declare i64 @_ZNK3net9HashValue4sizeEv(%"class.net::HashValue"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net15X509Certificate17GetSubjectAltNameEPNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEESB_(%"class.net::X509Certificate"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net14CertVerifyProc27HasNameConstraintsViolationERKNSt3__16vectorINS_9HashValueENS1_9allocatorIS3_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEERKNS2_ISD_NS4_ISD_EEEESJ_(%"class.std::__1::vector.60"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::vector"* %5 to i8*
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::vector"* %5 to i8**
  br label %16

16:                                               ; preds = %4, %77
  %17 = phi %struct.PublicKeyDomainLimitation* [ bitcast ([5 x { %"struct.net::SHA256HashValue", { i64, %"class.base::BasicStringPiece"* } }]* @_ZZN3net14CertVerifyProc27HasNameConstraintsViolationERKNSt3__16vectorINS_9HashValueENS1_9allocatorIS3_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEERKNS2_ISD_NS4_ISD_EEEESJ_E7kLimits to %struct.PublicKeyDomainLimitation*), %4 ], [ %78, %77 ]
  %18 = load %"class.net::HashValue"*, %"class.net::HashValue"** %6, align 8
  %19 = load %"class.net::HashValue"*, %"class.net::HashValue"** %7, align 8
  %20 = icmp eq %"class.net::HashValue"* %18, %19
  br i1 %20, label %77, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.PublicKeyDomainLimitation, %struct.PublicKeyDomainLimitation* %17, i64 0, i32 0, i32 0, i64 0
  %23 = getelementptr inbounds %struct.PublicKeyDomainLimitation, %struct.PublicKeyDomainLimitation* %17, i64 0, i32 1, i32 0, i32 0
  %24 = getelementptr inbounds %struct.PublicKeyDomainLimitation, %struct.PublicKeyDomainLimitation* %17, i64 0, i32 1, i32 1
  br label %25

25:                                               ; preds = %21, %74
  %26 = phi %"class.net::HashValue"* [ %18, %21 ], [ %75, %74 ]
  %27 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %74

30:                                               ; preds = %25
  %31 = call i8* @_ZNK3net9HashValue4dataEv(%"class.net::HashValue"* %26) #15
  %32 = call i64 @_ZNK3net9HashValue4sizeEv(%"class.net::HashValue"* %26) #15
  %33 = call i32 @bcmp(i8* %31, i8* %22, i64 %32)
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %74

35:                                               ; preds = %30
  %36 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %37 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %38 = icmp eq %"class.std::__1::basic_string"* %36, %37
  br i1 %38, label %39, label %70

39:                                               ; preds = %35
  %40 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %41 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %42 = icmp eq %"class.std::__1::basic_string"* %40, %41
  br i1 %42, label %43, label %70

43:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #15
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %1) #15
  %44 = load i64, i64* %23, align 8
  %45 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %24, align 8
  %46 = call fastcc zeroext i1 @_ZN3netL20CheckNameConstraintsERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEN4base4spanIKNSC_16BasicStringPieceIcS4_EELm18446744073709551615EEE(%"class.std::__1::vector"* nonnull dereferenceable(24) %5, i64 %44, %"class.base::BasicStringPiece"* %45)
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %48 = icmp eq %"class.std::__1::basic_string"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %51 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %52 = icmp eq %"class.std::__1::basic_string"* %51, %47
  br i1 %52, label %67, label %53

53:                                               ; preds = %49, %63
  %54 = phi %"class.std::__1::basic_string"* [ %55, %63 ], [ %51, %49 ]
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 -1
  %56 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #17
  br label %63

63:                                               ; preds = %60, %53
  %64 = icmp eq %"class.std::__1::basic_string"* %55, %47
  br i1 %64, label %65, label %53

65:                                               ; preds = %63
  %66 = load i8*, i8** %15, align 8
  br label %67

67:                                               ; preds = %65, %49
  %68 = phi i8* [ %66, %65 ], [ %50, %49 ]
  store %"class.std::__1::basic_string"* %47, %"class.std::__1::basic_string"** %14, align 8
  call void @_ZdlPv(i8* %68) #17
  br label %69

69:                                               ; preds = %43, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #15
  br i1 %46, label %74, label %80

70:                                               ; preds = %39, %35
  %71 = load i64, i64* %23, align 8
  %72 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %24, align 8
  %73 = call fastcc zeroext i1 @_ZN3netL20CheckNameConstraintsERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEN4base4spanIKNSC_16BasicStringPieceIcS4_EELm18446744073709551615EEE(%"class.std::__1::vector"* dereferenceable(24) %2, i64 %71, %"class.base::BasicStringPiece"* %72)
  br i1 %73, label %74, label %80

74:                                               ; preds = %69, %70, %30, %25
  %75 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %26, i64 1
  %76 = icmp eq %"class.net::HashValue"* %75, %19
  br i1 %76, label %77, label %25

77:                                               ; preds = %74, %16
  %78 = getelementptr inbounds %struct.PublicKeyDomainLimitation, %struct.PublicKeyDomainLimitation* %17, i64 1
  %79 = icmp eq %struct.PublicKeyDomainLimitation* %78, bitcast (i8* getelementptr inbounds ([5 x { %"struct.net::SHA256HashValue", { i64, %"class.base::BasicStringPiece"* } }], [5 x { %"struct.net::SHA256HashValue", { i64, %"class.base::BasicStringPiece"* } }]* @_ZZN3net14CertVerifyProc27HasNameConstraintsViolationERKNSt3__16vectorINS_9HashValueENS1_9allocatorIS3_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEERKNS2_ISD_NS4_ISD_EEEESJ_E7kLimits, i64 1, i64 0, i32 0, i32 0, i64 0) to %struct.PublicKeyDomainLimitation*)
  br i1 %79, label %80, label %16

80:                                               ; preds = %77, %69, %70
  %81 = phi i1 [ true, %70 ], [ true, %69 ], [ false, %77 ]
  ret i1 %81
}

declare zeroext i1 @_ZN3net18IsCertificateErrorEi(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3net20IsLegacySymantecCertERKNSt3__16vectorINS_9HashValueENS0_9allocatorIS2_EEEE(%"class.std::__1::vector.60"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZN3net19IsHostnameNonUniqueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net14CertVerifyProc18HasTooLongValidityERKNS_15X509CertificateE(%"class.net::X509Certificate"* nocapture readonly dereferenceable(464)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  switch i64 %3, label %4 [
    i64 9223372036854775807, label %59
    i64 0, label %59
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  switch i64 %6, label %7 [
    i64 9223372036854775807, label %59
    i64 0, label %59
  ]

7:                                                ; preds = %4
  %8 = icmp sgt i64 %3, %6
  br i1 %8, label %59, label %9

9:                                                ; preds = %7
  %10 = tail call i64 @_ZN4base4Time9UnixEpochEv() #15
  %11 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %10, i64 1341100800000000) #15
  %12 = extractvalue { i64, i1 } %11, 1
  %13 = extractvalue { i64, i1 } %11, 0
  %14 = select i1 %12, i64 9223372036854775807, i64 %13, !prof !10
  %15 = tail call i64 @_ZN4base4Time9UnixEpochEv() #15
  %16 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %15, i64 1427846400000000) #15
  %17 = extractvalue { i64, i1 } %16, 1
  %18 = extractvalue { i64, i1 } %16, 0
  %19 = select i1 %17, i64 9223372036854775807, i64 %18, !prof !10
  %20 = tail call i64 @_ZN4base4Time9UnixEpochEv() #15
  %21 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %20, i64 1519862400000000) #15
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 9223372036854775807, i64 %23, !prof !10
  %25 = tail call i64 @_ZN4base4Time9UnixEpochEv() #15
  %26 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %25, i64 1561939200000000) #15
  %27 = tail call i64 @_ZN4base4Time9UnixEpochEv() #15
  %28 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %27, i64 1598918400000000) #15
  %29 = extractvalue { i64, i1 } %28, 1
  %30 = extractvalue { i64, i1 } %28, 0
  %31 = select i1 %29, i64 9223372036854775807, i64 %30, !prof !10
  %32 = load i64, i64* %2, align 8
  %33 = load i64, i64* %5, align 8
  %34 = sub nsw i64 %33, %32
  %35 = icmp slt i64 %32, %14
  br i1 %35, label %36, label %43

36:                                               ; preds = %9
  %37 = extractvalue { i64, i1 } %26, 1
  %38 = extractvalue { i64, i1 } %26, 0
  %39 = select i1 %37, i64 9223372036854775807, i64 %38, !prof !10
  %40 = icmp sgt i64 %34, 315532800000000
  %41 = icmp sgt i64 %33, %39
  %42 = or i1 %41, %40
  br i1 %42, label %59, label %43

43:                                               ; preds = %36, %9
  %44 = icmp sge i64 %32, %14
  %45 = icmp sgt i64 %34, 157852800000000
  %46 = and i1 %44, %45
  br i1 %46, label %59, label %47

47:                                               ; preds = %43
  %48 = icmp sge i64 %32, %19
  %49 = icmp sgt i64 %34, 102643200000000
  %50 = and i1 %48, %49
  br i1 %50, label %59, label %51

51:                                               ; preds = %47
  %52 = icmp sge i64 %32, %24
  %53 = icmp sgt i64 %34, 71280000000000
  %54 = and i1 %52, %53
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = icmp sge i64 %32, %31
  %57 = icmp sgt i64 %34, 34387200000000
  %58 = and i1 %56, %57
  ret i1 %58

59:                                               ; preds = %51, %47, %43, %4, %4, %1, %1, %36, %7
  ret i1 true
}

; Function Attrs: nounwind
declare void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14CertVerifyProc26LogNameNormalizationResultERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_23NameNormalizationResultE(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = tail call i8* @_Znwm(i64 48) #17
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> <i64 46, i64 -9223372036854775760>, <2 x i64>* %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i64 46, i1 false) #15
  %11 = getelementptr inbounds i8, i8* %7, i64 46
  store i8 0, i8* %11, align 1
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1, !noalias !11
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8, !noalias !11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8, !noalias !11
  %20 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %21 = zext i8 %14 to i64
  %22 = select i1 %15, i8* %17, i8* %20
  %23 = select i1 %15, i64 %19, i64 %21
  %24 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %22, i64 %23) #15, !noalias !11
  %25 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %25, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #15, !noalias !11
  call void @_ZN4base23UmaHistogramExactLinearERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 %1, i32 4) #15
  %26 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #17
  br label %33

33:                                               ; preds = %2, %30
  %34 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %33
  %39 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %39) #17
  br label %40

40:                                               ; preds = %33, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14CertVerifyProc27LogNameNormalizationMetricsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_15X509CertificateEb(%"class.std::__1::basic_string"* dereferenceable(24), %"class.net::X509Certificate"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.125", align 8
  %5 = alloca %"struct.net::ParseCertificateOptions", align 1
  %6 = alloca %"class.std::__1::vector.133", align 8
  %7 = alloca %"class.std::__1::vector.133", align 8
  %8 = alloca %"class.net::der::Input", align 8
  %9 = alloca %"class.net::der::Input", align 8
  %10 = alloca %"class.net::der::BitString", align 8
  %11 = alloca %"struct.net::ParsedTbsCertificate", align 8
  %12 = alloca %"class.net::der::Input", align 8
  br i1 %2, label %307, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 7, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr.13"*, %"class.std::__1::unique_ptr.13"** %14, align 8
  %16 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 7, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr.13"*, %"class.std::__1::unique_ptr.13"** %16, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr.13"* %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %13
  tail call void @_ZN3net14CertVerifyProc26LogNameNormalizationResultERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_23NameNormalizationResultE(%"class.std::__1::basic_string"* dereferenceable(24) %0, i32 3)
  br label %307

20:                                               ; preds = %13
  %21 = bitcast %"class.std::__1::vector.125"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #15
  %22 = getelementptr inbounds %"class.std::__1::vector.125", %"class.std::__1::vector.125"* %4, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::vector.125", %"class.std::__1::vector.125"* %4, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::vector.125", %"class.std::__1::vector.125"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %26 = bitcast %struct.crypto_buffer_st** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %struct.crypto_buffer_st*** %23 to i64*
  %29 = bitcast %"class.std::__1::vector.125"* %4 to i64*
  %30 = bitcast %struct.crypto_buffer_st*** %24 to i64*
  %31 = tail call i8* @_Znwm(i64 8) #17
  %32 = bitcast i8* %31 to %struct.crypto_buffer_st**
  %33 = getelementptr inbounds i8, i8* %31, i64 8
  %34 = bitcast i8* %33 to %struct.crypto_buffer_st**
  %35 = ptrtoint i8* %33 to i64
  %36 = bitcast i8* %31 to i64*
  store i64 %27, i64* %36, align 8
  %37 = ptrtoint i8* %31 to i64
  store i64 %37, i64* %29, align 8
  store i64 %35, i64* %28, align 8
  store i64 %35, i64* %30, align 8
  %38 = bitcast %struct.crypto_buffer_st*** %23 to i64*
  %39 = bitcast %"class.std::__1::vector.125"* %4 to i64*
  %40 = bitcast %struct.crypto_buffer_st*** %24 to i64*
  br label %76

41:                                               ; preds = %138
  %42 = getelementptr inbounds %"struct.net::ParseCertificateOptions", %"struct.net::ParseCertificateOptions"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %42) #15
  store i8 1, i8* %42, align 1
  %43 = bitcast %"class.std::__1::vector.133"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #15
  %44 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %6, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %6, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #15
  %47 = bitcast %"class.std::__1::vector.133"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #15
  %48 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %7, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %7, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 24, i1 false) #15
  %51 = icmp eq %struct.crypto_buffer_st** %139, %140
  br i1 %51, label %52, label %55

52:                                               ; preds = %41
  %53 = bitcast %"class.net::der::Input"** %45 to i64*
  %54 = bitcast %"class.std::__1::vector.133"* %6 to i64*
  br label %146

55:                                               ; preds = %41
  %56 = bitcast %"class.net::der::Input"* %8 to i8*
  %57 = bitcast %"class.net::der::Input"* %9 to i8*
  %58 = bitcast %"class.net::der::BitString"* %10 to i8*
  %59 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %10, i64 0, i32 1
  %60 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %10, i64 0, i32 0
  %61 = bitcast %"struct.net::ParsedTbsCertificate"* %11 to i8*
  %62 = bitcast %"class.net::der::Input"* %12 to i8*
  %63 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %11, i64 0, i32 6
  %64 = bitcast %"class.net::der::Input"* %63 to i8*
  %65 = bitcast %"class.net::der::Input"** %45 to i64*
  %66 = bitcast %"class.std::__1::vector.133"* %6 to i64*
  %67 = bitcast %"class.net::der::Input"** %46 to i64*
  %68 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %11, i64 0, i32 3
  %69 = bitcast %"class.net::der::Input"* %68 to i8*
  %70 = bitcast %"class.net::der::Input"** %49 to i64*
  %71 = bitcast %"class.std::__1::vector.133"* %7 to i64*
  %72 = bitcast %"class.net::der::Input"** %50 to i64*
  %73 = bitcast %"class.net::der::Input"* %8 to i8*
  %74 = bitcast %"class.net::der::Input"* %9 to i8*
  %75 = bitcast %"class.net::der::BitString"* %10 to i8*
  br label %149

76:                                               ; preds = %144, %20
  %77 = phi %struct.crypto_buffer_st** [ %32, %20 ], [ %139, %144 ]
  %78 = phi i64 [ %35, %20 ], [ %141, %144 ]
  %79 = phi %struct.crypto_buffer_st** [ %34, %20 ], [ %145, %144 ]
  %80 = phi %struct.crypto_buffer_st** [ %34, %20 ], [ %140, %144 ]
  %81 = phi %"class.std::__1::unique_ptr.13"* [ %15, %20 ], [ %142, %144 ]
  %82 = bitcast %"class.std::__1::unique_ptr.13"* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = icmp ult %struct.crypto_buffer_st** %80, %79
  %85 = ptrtoint %struct.crypto_buffer_st** %79 to i64
  br i1 %84, label %86, label %90

86:                                               ; preds = %76
  %87 = bitcast %struct.crypto_buffer_st** %80 to i64*
  store i64 %83, i64* %87, align 8
  %88 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %80, i64 1
  %89 = ptrtoint %struct.crypto_buffer_st** %88 to i64
  store i64 %89, i64* %38, align 8
  br label %138

90:                                               ; preds = %76
  %91 = ptrtoint %struct.crypto_buffer_st** %80 to i64
  %92 = load i64, i64* %39, align 8
  %93 = sub i64 %91, %92
  %94 = ashr exact i64 %93, 3
  %95 = add nsw i64 %94, 1
  %96 = icmp ugt i64 %95, 2305843009213693951
  br i1 %96, label %97, label %99

97:                                               ; preds = %90
  %98 = bitcast %"class.std::__1::vector.125"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %98) #16
  unreachable

99:                                               ; preds = %90
  %100 = sub i64 %85, %92
  %101 = ashr exact i64 %100, 3
  %102 = icmp ult i64 %101, 1152921504606846975
  br i1 %102, label %103, label %111

103:                                              ; preds = %99
  %104 = ashr exact i64 %100, 2
  %105 = icmp ult i64 %104, %95
  %106 = select i1 %105, i64 %95, i64 %104
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %116, label %108

108:                                              ; preds = %103
  %109 = icmp ugt i64 %106, 2305843009213693951
  br i1 %109, label %110, label %111

110:                                              ; preds = %108
  tail call void @abort() #16
  unreachable

111:                                              ; preds = %108, %99
  %112 = phi i64 [ %106, %108 ], [ 2305843009213693951, %99 ]
  %113 = shl i64 %112, 3
  %114 = tail call i8* @_Znwm(i64 %113) #17
  %115 = bitcast i8* %114 to %struct.crypto_buffer_st**
  br label %116

116:                                              ; preds = %111, %103
  %117 = phi i64 [ %112, %111 ], [ 0, %103 ]
  %118 = phi %struct.crypto_buffer_st** [ %115, %111 ], [ null, %103 ]
  %119 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %118, i64 %94
  %120 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %118, i64 %117
  %121 = ptrtoint %struct.crypto_buffer_st** %120 to i64
  %122 = bitcast %struct.crypto_buffer_st** %119 to i64*
  store i64 %83, i64* %122, align 8
  %123 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %119, i64 1
  %124 = ptrtoint %struct.crypto_buffer_st** %123 to i64
  %125 = sub i64 %78, %92
  %126 = ashr exact i64 %125, 3
  %127 = sub nsw i64 0, %126
  %128 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %119, i64 %127
  %129 = ptrtoint %struct.crypto_buffer_st** %128 to i64
  %130 = icmp sgt i64 %125, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %116
  %132 = bitcast %struct.crypto_buffer_st** %128 to i8*
  %133 = inttoptr i64 %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 %125, i1 false) #15
  br label %134

134:                                              ; preds = %131, %116
  store i64 %129, i64* %39, align 8
  store i64 %124, i64* %38, align 8
  store i64 %121, i64* %40, align 8
  %135 = icmp eq i64 %92, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = inttoptr i64 %92 to i8*
  tail call void @_ZdlPv(i8* %137) #17
  br label %138

138:                                              ; preds = %86, %134, %136
  %139 = phi %struct.crypto_buffer_st** [ %77, %86 ], [ %128, %134 ], [ %128, %136 ]
  %140 = phi %struct.crypto_buffer_st** [ %88, %86 ], [ %123, %134 ], [ %123, %136 ]
  %141 = phi i64 [ %89, %86 ], [ %124, %134 ], [ %124, %136 ]
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %81, i64 1
  %143 = icmp eq %"class.std::__1::unique_ptr.13"* %142, %17
  br i1 %143, label %41, label %144

144:                                              ; preds = %138
  %145 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %24, align 8
  br label %76

146:                                              ; preds = %265, %52
  %147 = phi i64* [ %54, %52 ], [ %66, %265 ]
  %148 = phi i64* [ %53, %52 ], [ %65, %265 ]
  br label %268

149:                                              ; preds = %55, %265
  %150 = phi %struct.crypto_buffer_st** [ %139, %55 ], [ %266, %265 ]
  %151 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %150, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %8) #15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %9) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %60) #15
  store i8 0, i8* %59, align 8
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %61) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 192, i1 false)
  call void @_ZN3net20ParsedTbsCertificateC1Ev(%"struct.net::ParsedTbsCertificate"* nonnull %11) #15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #15
  %152 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %151) #15
  %153 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %151) #15
  call void @_ZN3net3der5InputC1EPKhm(%"class.net::der::Input"* nonnull %12, i8* %152, i64 %153) #15
  %154 = call zeroext i1 @_ZN3net16ParseCertificateERKNS_3der5InputEPS1_S4_PNS0_9BitStringEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %12, %"class.net::der::Input"* nonnull %8, %"class.net::der::Input"* nonnull %9, %"class.net::der::BitString"* nonnull %10, %"class.net::CertErrors"* null) #15
  br i1 %154, label %155, label %157

155:                                              ; preds = %149
  %156 = call zeroext i1 @_ZN3net19ParseTbsCertificateERKNS_3der5InputERKNS_23ParseCertificateOptionsEPNS_20ParsedTbsCertificateEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %8, %"struct.net::ParseCertificateOptions"* nonnull dereferenceable(1) %5, %"struct.net::ParsedTbsCertificate"* nonnull %11, %"class.net::CertErrors"* null) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #15
  br i1 %156, label %159, label %158

157:                                              ; preds = %149
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #15
  br label %158

158:                                              ; preds = %155, %157
  call void @_ZN3net14CertVerifyProc26LogNameNormalizationResultERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_23NameNormalizationResultE(%"class.std::__1::basic_string"* dereferenceable(24) %0, i32 0)
  call void @_ZN3net20ParsedTbsCertificateD1Ev(%"struct.net::ParsedTbsCertificate"* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %61) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #15
  br label %285

159:                                              ; preds = %155
  %160 = load %"class.net::der::Input"*, %"class.net::der::Input"** %45, align 8
  %161 = load %"class.net::der::Input"*, %"class.net::der::Input"** %46, align 8
  %162 = icmp eq %"class.net::der::Input"* %160, %161
  %163 = ptrtoint %"class.net::der::Input"* %161 to i64
  br i1 %162, label %168, label %164

164:                                              ; preds = %159
  %165 = bitcast %"class.net::der::Input"* %160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %64, i64 16, i1 false) #15
  %166 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %160, i64 1
  %167 = ptrtoint %"class.net::der::Input"* %166 to i64
  store i64 %167, i64* %65, align 8
  br label %212

168:                                              ; preds = %159
  %169 = ptrtoint %"class.net::der::Input"* %160 to i64
  %170 = load i64, i64* %66, align 8
  %171 = sub i64 %169, %170
  %172 = ashr exact i64 %171, 4
  %173 = add nsw i64 %172, 1
  %174 = icmp ugt i64 %173, 1152921504606846975
  br i1 %174, label %175, label %177

175:                                              ; preds = %168
  %176 = bitcast %"class.std::__1::vector.133"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %176) #16
  unreachable

177:                                              ; preds = %168
  %178 = sub i64 %163, %170
  %179 = ashr exact i64 %178, 4
  %180 = icmp ult i64 %179, 576460752303423487
  br i1 %180, label %181, label %189

181:                                              ; preds = %177
  %182 = ashr exact i64 %178, 3
  %183 = icmp ult i64 %182, %173
  %184 = select i1 %183, i64 %173, i64 %182
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %194, label %186

186:                                              ; preds = %181
  %187 = icmp ugt i64 %184, 1152921504606846975
  br i1 %187, label %188, label %189

188:                                              ; preds = %186
  call void @abort() #16
  unreachable

189:                                              ; preds = %186, %177
  %190 = phi i64 [ %184, %186 ], [ 1152921504606846975, %177 ]
  %191 = shl i64 %190, 4
  %192 = call i8* @_Znwm(i64 %191) #17
  %193 = bitcast i8* %192 to %"class.net::der::Input"*
  br label %194

194:                                              ; preds = %189, %181
  %195 = phi i64 [ %190, %189 ], [ 0, %181 ]
  %196 = phi i8* [ %192, %189 ], [ null, %181 ]
  %197 = phi %"class.net::der::Input"* [ %193, %189 ], [ null, %181 ]
  %198 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %197, i64 %172
  %199 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %197, i64 %195
  %200 = ptrtoint %"class.net::der::Input"* %199 to i64
  %201 = bitcast %"class.net::der::Input"* %198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %201, i8* align 8 %64, i64 16, i1 false) #15
  %202 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %198, i64 1
  %203 = ptrtoint %"class.net::der::Input"* %202 to i64
  %204 = ptrtoint %"class.net::der::Input"* %197 to i64
  %205 = icmp sgt i64 %171, 0
  br i1 %205, label %206, label %208

206:                                              ; preds = %194
  %207 = inttoptr i64 %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %196, i8* align 8 %207, i64 %171, i1 false) #15
  br label %208

208:                                              ; preds = %206, %194
  store i64 %204, i64* %66, align 8
  store i64 %203, i64* %65, align 8
  store i64 %200, i64* %67, align 8
  %209 = icmp eq i64 %170, 0
  br i1 %209, label %212, label %210

210:                                              ; preds = %208
  %211 = inttoptr i64 %170 to i8*
  call void @_ZdlPv(i8* %211) #17
  br label %212

212:                                              ; preds = %164, %208, %210
  %213 = load %"class.net::der::Input"*, %"class.net::der::Input"** %49, align 8
  %214 = load %"class.net::der::Input"*, %"class.net::der::Input"** %50, align 8
  %215 = icmp eq %"class.net::der::Input"* %213, %214
  %216 = ptrtoint %"class.net::der::Input"* %214 to i64
  br i1 %215, label %221, label %217

217:                                              ; preds = %212
  %218 = bitcast %"class.net::der::Input"* %213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %69, i64 16, i1 false) #15
  %219 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %213, i64 1
  %220 = ptrtoint %"class.net::der::Input"* %219 to i64
  store i64 %220, i64* %70, align 8
  br label %265

221:                                              ; preds = %212
  %222 = ptrtoint %"class.net::der::Input"* %213 to i64
  %223 = load i64, i64* %71, align 8
  %224 = sub i64 %222, %223
  %225 = ashr exact i64 %224, 4
  %226 = add nsw i64 %225, 1
  %227 = icmp ugt i64 %226, 1152921504606846975
  br i1 %227, label %228, label %230

228:                                              ; preds = %221
  %229 = bitcast %"class.std::__1::vector.133"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %229) #16
  unreachable

230:                                              ; preds = %221
  %231 = sub i64 %216, %223
  %232 = ashr exact i64 %231, 4
  %233 = icmp ult i64 %232, 576460752303423487
  br i1 %233, label %234, label %242

234:                                              ; preds = %230
  %235 = ashr exact i64 %231, 3
  %236 = icmp ult i64 %235, %226
  %237 = select i1 %236, i64 %226, i64 %235
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %247, label %239

239:                                              ; preds = %234
  %240 = icmp ugt i64 %237, 1152921504606846975
  br i1 %240, label %241, label %242

241:                                              ; preds = %239
  call void @abort() #16
  unreachable

242:                                              ; preds = %239, %230
  %243 = phi i64 [ %237, %239 ], [ 1152921504606846975, %230 ]
  %244 = shl i64 %243, 4
  %245 = call i8* @_Znwm(i64 %244) #17
  %246 = bitcast i8* %245 to %"class.net::der::Input"*
  br label %247

247:                                              ; preds = %242, %234
  %248 = phi i64 [ %243, %242 ], [ 0, %234 ]
  %249 = phi i8* [ %245, %242 ], [ null, %234 ]
  %250 = phi %"class.net::der::Input"* [ %246, %242 ], [ null, %234 ]
  %251 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %250, i64 %225
  %252 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %250, i64 %248
  %253 = ptrtoint %"class.net::der::Input"* %252 to i64
  %254 = bitcast %"class.net::der::Input"* %251 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %254, i8* align 8 %69, i64 16, i1 false) #15
  %255 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %251, i64 1
  %256 = ptrtoint %"class.net::der::Input"* %255 to i64
  %257 = ptrtoint %"class.net::der::Input"* %250 to i64
  %258 = icmp sgt i64 %224, 0
  br i1 %258, label %259, label %261

259:                                              ; preds = %247
  %260 = inttoptr i64 %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %249, i8* align 8 %260, i64 %224, i1 false) #15
  br label %261

261:                                              ; preds = %259, %247
  store i64 %257, i64* %71, align 8
  store i64 %256, i64* %70, align 8
  store i64 %253, i64* %72, align 8
  %262 = icmp eq i64 %223, 0
  br i1 %262, label %265, label %263

263:                                              ; preds = %261
  %264 = inttoptr i64 %223 to i8*
  call void @_ZdlPv(i8* %264) #17
  br label %265

265:                                              ; preds = %263, %261, %217
  call void @_ZN3net20ParsedTbsCertificateD1Ev(%"struct.net::ParsedTbsCertificate"* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %61) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #15
  %266 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %150, i64 1
  %267 = icmp eq %struct.crypto_buffer_st** %266, %140
  br i1 %267, label %146, label %149

268:                                              ; preds = %146, %276
  %269 = phi i64 [ %280, %276 ], [ 0, %146 ]
  %270 = load i64, i64* %148, align 8
  %271 = load i64, i64* %147, align 8
  %272 = sub i64 %270, %271
  %273 = ashr exact i64 %272, 4
  %274 = add nsw i64 %273, -1
  %275 = icmp ult i64 %269, %274
  br i1 %275, label %276, label %284

276:                                              ; preds = %268
  %277 = inttoptr i64 %271 to %"class.net::der::Input"*
  %278 = load %"class.net::der::Input"*, %"class.net::der::Input"** %48, align 8
  %279 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %278, i64 %269
  %280 = add nuw i64 %269, 1
  %281 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %277, i64 %280
  %282 = call zeroext i1 @_ZN3net3derneERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %279, %"class.net::der::Input"* dereferenceable(16) %281) #15
  br i1 %282, label %283, label %268

283:                                              ; preds = %276
  call void @_ZN3net14CertVerifyProc26LogNameNormalizationResultERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_23NameNormalizationResultE(%"class.std::__1::basic_string"* dereferenceable(24) %0, i32 2)
  br label %285

284:                                              ; preds = %268
  call void @_ZN3net14CertVerifyProc26LogNameNormalizationResultERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_23NameNormalizationResultE(%"class.std::__1::basic_string"* dereferenceable(24) %0, i32 1)
  br label %285

285:                                              ; preds = %158, %283, %284
  %286 = load %"class.net::der::Input"*, %"class.net::der::Input"** %48, align 8
  %287 = icmp eq %"class.net::der::Input"* %286, null
  br i1 %287, label %292, label %288

288:                                              ; preds = %285
  %289 = ptrtoint %"class.net::der::Input"* %286 to i64
  %290 = bitcast %"class.net::der::Input"** %49 to i64*
  store i64 %289, i64* %290, align 8
  %291 = bitcast %"class.net::der::Input"* %286 to i8*
  call void @_ZdlPv(i8* %291) #17
  br label %292

292:                                              ; preds = %285, %288
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #15
  %293 = load %"class.net::der::Input"*, %"class.net::der::Input"** %44, align 8
  %294 = icmp eq %"class.net::der::Input"* %293, null
  br i1 %294, label %299, label %295

295:                                              ; preds = %292
  %296 = ptrtoint %"class.net::der::Input"* %293 to i64
  %297 = bitcast %"class.net::der::Input"** %45 to i64*
  store i64 %296, i64* %297, align 8
  %298 = bitcast %"class.net::der::Input"* %293 to i8*
  call void @_ZdlPv(i8* %298) #17
  br label %299

299:                                              ; preds = %292, %295
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %42) #15
  %300 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %22, align 8
  %301 = icmp eq %struct.crypto_buffer_st** %300, null
  br i1 %301, label %306, label %302

302:                                              ; preds = %299
  %303 = ptrtoint %struct.crypto_buffer_st** %300 to i64
  %304 = bitcast %struct.crypto_buffer_st*** %23 to i64*
  store i64 %303, i64* %304, align 8
  %305 = bitcast %struct.crypto_buffer_st** %300 to i8*
  call void @_ZdlPv(i8* %305) #17
  br label %306

306:                                              ; preds = %299, %302
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #15
  br label %307

307:                                              ; preds = %3, %306, %19
  ret void
}

declare void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"*) unnamed_addr #1

declare void @_ZN3net20ParsedTbsCertificateC1Ev(%"struct.net::ParsedTbsCertificate"*) unnamed_addr #1

declare zeroext i1 @_ZN3net16ParseCertificateERKNS_3der5InputEPS1_S4_PNS0_9BitStringEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.net::der::BitString"*, %"class.net::CertErrors"*) local_unnamed_addr #1

declare i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st*) local_unnamed_addr #1

declare i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st*) local_unnamed_addr #1

declare void @_ZN3net3der5InputC1EPKhm(%"class.net::der::Input"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN3net19ParseTbsCertificateERKNS_3der5InputERKNS_23ParseCertificateOptionsEPNS_20ParsedTbsCertificateEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"struct.net::ParseCertificateOptions"* dereferenceable(1), %"struct.net::ParsedTbsCertificate"*, %"class.net::CertErrors"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net20ParsedTbsCertificateD1Ev(%"struct.net::ParsedTbsCertificate"*) unnamed_addr #7

declare zeroext i1 @_ZN3net3derneERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3netL20CheckNameConstraintsERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEN4base4spanIKNSC_16BasicStringPieceIcS4_EELm18446744073709551615EEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), i64, %"class.base::BasicStringPiece"*) unnamed_addr #0 {
  %4 = alloca %"struct.url::CanonHostInfo", align 16
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = icmp eq %"class.std::__1::basic_string"* %10, %12
  br i1 %13, label %104, label %14

14:                                               ; preds = %3
  %15 = bitcast %"struct.url::CanonHostInfo"* %4 to i8*
  %16 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %4, i64 0, i32 0
  %17 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  %23 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %6, i64 0, i32 1
  %24 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 %1
  %25 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  %26 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %7, i64 0, i32 1
  %27 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %29 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %4, i64 0, i32 3, i64 0
  %31 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %32 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  %33 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  %34 = bitcast %"struct.url::CanonHostInfo"* %4 to <4 x i32>*
  br label %35

35:                                               ; preds = %14, %101
  %36 = phi %"class.std::__1::basic_string"* [ %10, %14 ], [ %102, %101 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %30, i8 -86, i64 16, i1 false)
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, <4 x i32>* %34, align 16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #15
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %44 = select i1 %40, i8* %42, i8* %43
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %39 to i64
  %48 = select i1 %40, i64 %46, i64 %47
  call void @_ZN3net16CanonicalizeHostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPN3url13CanonHostInfoE(%"class.std::__1::basic_string"* nonnull sret %5, i8* %44, i64 %48, %"struct.url::CanonHostInfo"* nonnull %4) #15
  %49 = load i32, i32* %16, align 16
  %50 = or i32 %49, 1
  %51 = icmp eq i32 %50, 3
  br i1 %51, label %94, label %52

52:                                               ; preds = %35
  %53 = load i8, i8* %21, align 1
  %54 = icmp slt i8 %53, 0
  %55 = load i8*, i8** %18, align 8
  %56 = select i1 %54, i8* %55, i8* %17
  %57 = load i64, i64* %19, align 8
  %58 = zext i8 %53 to i64
  %59 = select i1 %54, i64 %57, i64 %58
  %60 = call zeroext i1 @_ZN3net27registry_controlled_domains31HostHasRegistryControlledDomainEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21UnknownRegistryFilterENS0_21PrivateRegistryFilterE(i8* %56, i64 %59, i32 0, i32 1) #15
  br i1 %60, label %61, label %94

61:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEEC2EPS6_S8_S8_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::BasicStringPiece"* %2, %"class.base::BasicStringPiece"* %2, %"class.base::BasicStringPiece"* %24) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEEC2EPS6_S8_S8_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::BasicStringPiece"* %2, %"class.base::BasicStringPiece"* %24, %"class.base::BasicStringPiece"* %24) #15
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEE15CheckComparableERKS7_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %7) #15
  %62 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %23, align 8
  %63 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %26, align 8
  %64 = icmp eq %"class.base::BasicStringPiece"* %62, %63
  br i1 %64, label %92, label %65

65:                                               ; preds = %61, %87
  %66 = call dereferenceable(16) %"class.base::BasicStringPiece"* @_ZNK4base25CheckedContiguousIteratorIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %6)
  %67 = load i8, i8* %21, align 1
  %68 = icmp slt i8 %67, 0
  %69 = load i64, i64* %19, align 8
  %70 = zext i8 %67 to i64
  %71 = select i1 %68, i64 %69, i64 %70
  %72 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %66, i64 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = icmp ugt i64 %71, %73
  br i1 %74, label %75, label %87

75:                                               ; preds = %65
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #15
  %76 = load i8*, i8** %18, align 8
  %77 = select i1 %68, i8* %76, i8* %17
  store i8* %77, i8** %28, align 8
  store i64 %71, i64* %29, align 8
  %78 = load i64, i64* %72, align 8
  %79 = sub i64 %71, %78
  %80 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %8, i64 %79, i64 -1)
  %81 = extractvalue { i8*, i64 } %80, 0
  %82 = extractvalue { i8*, i64 } %80, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #15
  %83 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %66, i64 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = load i64, i64* %72, align 8
  %86 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %81, i64 %82, i8* %84, i64 %85) #15
  br i1 %86, label %92, label %87

87:                                               ; preds = %75, %65
  %88 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %6)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEE15CheckComparableERKS7_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %7) #15
  %89 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %23, align 8
  %90 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %26, align 8
  %91 = icmp eq %"class.base::BasicStringPiece"* %89, %90
  br i1 %91, label %92, label %65

92:                                               ; preds = %75, %87, %61
  %93 = phi i32 [ 1, %61 ], [ 1, %87 ], [ 0, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #15
  br label %94

94:                                               ; preds = %92, %52, %35
  %95 = phi i32 [ 3, %35 ], [ 3, %52 ], [ %93, %92 ]
  %96 = load i8, i8* %21, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  %99 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %99) #17
  br label %100

100:                                              ; preds = %94, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #15
  switch i32 %95, label %104 [
    i32 0, label %101
    i32 3, label %101
  ]

101:                                              ; preds = %100, %100
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 1
  %103 = icmp eq %"class.std::__1::basic_string"* %102, %12
  br i1 %103, label %104, label %35

104:                                              ; preds = %100, %101, %3
  %105 = phi i1 [ true, %3 ], [ true, %101 ], [ false, %100 ]
  ret i1 %105
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

declare i64 @_ZN4base4Time9UnixEpochEv() local_unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3net12_GLOBAL__N_132InspectSignatureAlgorithmForCertEPK16crypto_buffer_stPNS_16CertVerifyResultE(%struct.crypto_buffer_st*, %"class.net::CertVerifyResult"* nocapture) unnamed_addr #0 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.net::der::Input", align 8
  %6 = alloca %"class.net::der::Input", align 8
  %7 = alloca %"class.net::der::Input", align 8
  %8 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #15
  %9 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #15
  %10 = tail call { i8*, i64 } @_ZN3net9x509_util25CryptoBufferAsStringPieceEPK16crypto_buffer_st(%struct.crypto_buffer_st* %0) #15
  %11 = extractvalue { i8*, i64 } %10, 0
  %12 = extractvalue { i8*, i64 } %10, 1
  %13 = call zeroext i1 @_ZN3net4asn137ExtractSignatureAlgorithmsFromDERCertEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPS6_S7_(i8* %11, i64 %12, %"class.base::BasicStringPiece"* nonnull %3, %"class.base::BasicStringPiece"* nonnull %4) #15
  br i1 %13, label %14, label %51

14:                                               ; preds = %2
  %15 = bitcast %"class.net::der::Input"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #15
  call void @_ZN3net3der5InputC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::der::Input"* nonnull %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3) #15
  %16 = bitcast %"class.net::der::Input"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #15
  call void @_ZN3net3der5InputC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::der::Input"* nonnull %6, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4) #15
  %17 = call zeroext i1 @_ZN3net18SignatureAlgorithm12IsEquivalentERKNS_3der5InputES4_(%"class.net::der::Input"* nonnull dereferenceable(16) %5, %"class.net::der::Input"* nonnull dereferenceable(16) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #15
  br i1 %17, label %18, label %51

18:                                               ; preds = %14
  %19 = bitcast %"class.net::der::Input"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #15
  call void @_ZN3net3der5InputC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::der::Input"* nonnull %7, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3) #15
  %20 = call %"class.net::SignatureAlgorithm"* @_ZN3net18SignatureAlgorithm6CreateERKNS_3der5InputEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %7, %"class.net::CertErrors"* null) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #15
  %21 = icmp eq %"class.net::SignatureAlgorithm"* %20, null
  br i1 %21, label %51, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.net::SignatureAlgorithm", %"class.net::SignatureAlgorithm"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  switch i32 %24, label %33 [
    i32 0, label %25
    i32 1, label %27
    i32 2, label %29
    i32 3, label %31
  ]

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %1, i64 0, i32 4
  store i8 1, i8* %26, align 4
  br label %33

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %1, i64 0, i32 5
  store i8 1, i8* %28, align 1
  br label %33

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %1, i64 0, i32 6
  store i8 1, i8* %30, align 2
  br label %33

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %1, i64 0, i32 7
  store i8 1, i8* %32, align 1
  br label %33

33:                                               ; preds = %22, %25, %27, %29, %31
  %34 = getelementptr inbounds %"class.net::SignatureAlgorithm", %"class.net::SignatureAlgorithm"* %20, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %49

37:                                               ; preds = %33
  %38 = call %"class.net::RsaPssParameters"* @_ZNK3net18SignatureAlgorithm15ParamsForRsaPssEv(%"class.net::SignatureAlgorithm"* nonnull %20) #15
  %39 = getelementptr inbounds %"class.net::RsaPssParameters", %"class.net::RsaPssParameters"* %38, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  switch i32 %40, label %49 [
    i32 0, label %41
    i32 1, label %43
    i32 2, label %45
    i32 3, label %47
  ]

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %1, i64 0, i32 4
  store i8 1, i8* %42, align 4
  br label %49

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %1, i64 0, i32 5
  store i8 1, i8* %44, align 1
  br label %49

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %1, i64 0, i32 6
  store i8 1, i8* %46, align 2
  br label %49

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %1, i64 0, i32 7
  store i8 1, i8* %48, align 1
  br label %49

49:                                               ; preds = %47, %45, %43, %41, %37, %33
  call void @_ZN3net18SignatureAlgorithmD1Ev(%"class.net::SignatureAlgorithm"* nonnull %20) #15
  %50 = bitcast %"class.net::SignatureAlgorithm"* %20 to i8*
  call void @_ZdlPv(i8* %50) #17
  br label %51

51:                                               ; preds = %18, %49, %14, %2
  %52 = phi i1 [ false, %2 ], [ false, %14 ], [ true, %49 ], [ false, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #15
  ret i1 %52
}

declare zeroext i1 @_ZN3net4asn137ExtractSignatureAlgorithmsFromDERCertEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPS6_S7_(i8*, i64, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*) local_unnamed_addr #1

declare { i8*, i64 } @_ZN3net9x509_util25CryptoBufferAsStringPieceEPK16crypto_buffer_st(%struct.crypto_buffer_st*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net18SignatureAlgorithm12IsEquivalentERKNS_3der5InputES4_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3net3der5InputC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::der::Input"*, %"class.base::BasicStringPiece"* dereferenceable(16)) unnamed_addr #1

declare %"class.net::SignatureAlgorithm"* @_ZN3net18SignatureAlgorithm6CreateERKNS_3der5InputEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"class.net::CertErrors"*) local_unnamed_addr #1

declare %"class.net::RsaPssParameters"* @_ZNK3net18SignatureAlgorithm15ParamsForRsaPssEv(%"class.net::SignatureAlgorithm"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net18SignatureAlgorithmD1Ev(%"class.net::SignatureAlgorithm"*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN3net16OCSPVerifyResultC1Ev(%"struct.net::OCSPVerifyResult"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net16OCSPVerifyResultD1Ev(%"struct.net::OCSPVerifyResult"*) unnamed_addr #7

declare zeroext i1 @_ZN3net15X509Certificate12IsSelfSignedEPK16crypto_buffer_st(%struct.crypto_buffer_st*) local_unnamed_addr #1

declare i32 @_ZN3net9CheckOCSPEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_S5_RKNS0_4TimeERKNS0_9TimeDeltaEPNS_16OCSPVerifyResult14ResponseStatusE(i8*, i64, i8*, i64, i8*, i64, %"class.base::Time"* dereferenceable(8), %"class.base::TimeDelta"* dereferenceable(8), i32*) local_unnamed_addr #1

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

declare void @_ZN3net15X509Certificate16GetPublicKeyInfoEPK16crypto_buffer_stPmPNS0_13PublicKeyTypeE(%struct.crypto_buffer_st*, i64*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_124RecordPublicKeyHistogramEPKcbmNS_15X509Certificate13PublicKeyTypeE(i8*, i1 zeroext, i64, i32) unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::vector.154", align 8
  %7 = alloca %"class.std::__1::vector.154", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = select i1 %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0)
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  switch i32 %3, label %25 [
    i32 0, label %16
    i32 1, label %12
    i32 2, label %13
    i32 3, label %18
    i32 4, label %14
    i32 5, label %15
  ]

12:                                               ; preds = %4
  br label %16

13:                                               ; preds = %4
  br label %16

14:                                               ; preds = %4
  br label %16

15:                                               ; preds = %4
  br label %18

16:                                               ; preds = %4, %12, %13, %14
  %17 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0), %4 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), %12 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), %13 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i64 0, i64 0), %14 ]
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0), i8* %10, i8* %0, i8* nonnull %17) #15
  br label %31

18:                                               ; preds = %15, %4
  %19 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), %15 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0), %4 ]
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0), i8* %10, i8* %0, i8* nonnull %19) #15
  %20 = bitcast %"class.std::__1::vector.154"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #15
  call void @_ZN4base15CustomHistogram23ArrayToCustomEnumRangesENS_4spanIKiLm18446744073709551615EEE(%"class.std::__1::vector.154"* nonnull sret %6, i64 10, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @_ZN3net12_GLOBAL__N_112kEccKeySizesE, i64 0, i64 0)) #15
  %21 = call %"class.base::HistogramBase"* @_ZN4base15CustomHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIiNS5_IiEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::vector.154"* nonnull dereferenceable(24) %6, i32 1) #15
  %22 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %6, i64 0, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = icmp eq i32* %23, null
  br i1 %24, label %42, label %26

25:                                               ; preds = %4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0), i8* %10, i8* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i64 0, i64 0)) #15
  br label %31

26:                                               ; preds = %18
  %27 = ptrtoint i32* %23 to i64
  %28 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %6, i64 0, i32 0, i32 1
  %29 = bitcast i32** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast i32* %23 to i8*
  call void @_ZdlPv(i8* %30) #17
  br label %42

31:                                               ; preds = %25, %16
  %32 = bitcast %"class.std::__1::vector.154"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #15
  call void @_ZN4base15CustomHistogram23ArrayToCustomEnumRangesENS_4spanIKiLm18446744073709551615EEE(%"class.std::__1::vector.154"* nonnull sret %7, i64 9, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @_ZN3net12_GLOBAL__N_115kRsaDsaKeySizesE, i64 0, i64 0)) #15
  %33 = call %"class.base::HistogramBase"* @_ZN4base15CustomHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIiNS5_IiEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::vector.154"* nonnull dereferenceable(24) %7, i32 1) #15
  %34 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %7, i64 0, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = icmp eq i32* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %31
  %38 = ptrtoint i32* %35 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %7, i64 0, i32 0, i32 1
  %40 = bitcast i32** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = bitcast i32* %35 to i8*
  call void @_ZdlPv(i8* %41) #17
  br label %42

42:                                               ; preds = %37, %31, %26, %18
  %43 = phi i8* [ %20, %18 ], [ %20, %26 ], [ %32, %31 ], [ %32, %37 ]
  %44 = phi %"class.base::HistogramBase"* [ %21, %18 ], [ %21, %26 ], [ %33, %31 ], [ %33, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #15
  %45 = trunc i64 %2 to i32
  %46 = bitcast %"class.base::HistogramBase"* %44 to void (%"class.base::HistogramBase"*, i32)***
  %47 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %47, i64 6
  %49 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %48, align 8
  call void %49(%"class.base::HistogramBase"* %44, i32 %45) #15
  %50 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %42
  %55 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %55) #17
  br label %56

56:                                               ; preds = %42, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #15
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base15CustomHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIiNS5_IiEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.154"* dereferenceable(24), i32) local_unnamed_addr #1

declare void @_ZN4base15CustomHistogram23ArrayToCustomEnumRangesENS_4spanIKiLm18446744073709551615EEE(%"class.std::__1::vector.154"* sret, i64, i32*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net4asn122HasTLSFeatureExtensionEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #1

declare i32 @_ZN3net35GetNetTrustAnchorHistogramIdForSPKIERKNS_9HashValueE(%"class.net::HashValue"* dereferenceable(36)) local_unnamed_addr #1

declare void @_ZN4base18UmaHistogramSparseEPKci(i8*, i32) local_unnamed_addr #1

declare void @_ZN3net16CanonicalizeHostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPN3url13CanonHostInfoE(%"class.std::__1::basic_string"* sret, i8*, i64, %"struct.url::CanonHostInfo"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net27registry_controlled_domains31HostHasRegistryControlledDomainEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21UnknownRegistryFilterENS0_21PrivateRegistryFilterE(i8*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.base::BasicStringPiece"* @_ZNK4base25CheckedContiguousIteratorIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %7, align 8
  %11 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %8, align 8
  %12 = icmp eq %"class.base::BasicStringPiece"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::BasicStringPiece"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEEENS3_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS3_13basic_ostreamIcS5_EEPKvE_8__invokeESL_SN_) #15
  %17 = bitcast %"class.base::BasicStringPiece"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEEENS3_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS3_13basic_ostreamIcS5_EEPKvE_8__invokeESL_SN_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.44, i64 0, i64 0), i8* %16, i8* %18) #15
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.40, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #15
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %26 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %7, align 8
  ret %"class.base::BasicStringPiece"* %26
}

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

declare zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %7, align 8
  %11 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %8, align 8
  %12 = icmp eq %"class.base::BasicStringPiece"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::BasicStringPiece"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEEENS3_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS3_13basic_ostreamIcS5_EEPKvE_8__invokeESL_SN_) #15
  %17 = bitcast %"class.base::BasicStringPiece"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEEENS3_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS3_13basic_ostreamIcS5_EEPKvE_8__invokeESL_SN_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.44, i64 0, i64 0), i8* %16, i8* %18) #15
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.40, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #15
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %26 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %7, align 8
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %26, i64 1
  store %"class.base::BasicStringPiece"* %27, %"class.base::BasicStringPiece"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEEENS3_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS3_13basic_ostreamIcS5_EEPKvE_8__invokeESL_SN_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #9 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #15
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEEC2EPS6_S8_S8_(%"class.base::CheckedContiguousIterator"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::BasicStringPiece"*, align 8
  %8 = alloca %"class.base::BasicStringPiece"*, align 8
  %9 = alloca %"class.base::BasicStringPiece"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.base::BasicStringPiece"* %1, %"class.base::BasicStringPiece"** %7, align 8
  store %"class.base::BasicStringPiece"* %2, %"class.base::BasicStringPiece"** %8, align 8
  store %"class.base::BasicStringPiece"* %3, %"class.base::BasicStringPiece"** %9, align 8
  %14 = ptrtoint %"class.base::BasicStringPiece"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.base::BasicStringPiece"* %2 to i64
  %18 = bitcast %"class.base::BasicStringPiece"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.base::BasicStringPiece"* %3 to i64
  %21 = bitcast %"class.base::BasicStringPiece"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.base::BasicStringPiece"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.base::BasicStringPiece"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEEENS3_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS3_13basic_ostreamIcS5_EEPKvE_8__invokeESL_SN_) #15
  %30 = bitcast %"class.base::BasicStringPiece"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEEENS3_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS3_13basic_ostreamIcS5_EEPKvE_8__invokeESL_SN_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39, i64 0, i64 0), i8* %29, i8* %31) #15
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.40, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #15
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %8, align 8
  %43 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %44 = icmp ugt %"class.base::BasicStringPiece"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.base::BasicStringPiece"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEEENS3_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS3_13basic_ostreamIcS5_EEPKvE_8__invokeESL_SN_) #15
  %49 = bitcast %"class.base::BasicStringPiece"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEEENS3_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS3_13basic_ostreamIcS5_EEPKvE_8__invokeESL_SN_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i64 0, i64 0), i8* %48, i8* %50) #15
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.40, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #15
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #15
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEE15CheckComparableERKS7_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %11, align 8
  %15 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %12, align 8
  %16 = icmp eq %"class.base::BasicStringPiece"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEEENS3_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS3_13basic_ostreamIcS5_EEPKvE_8__invokeESL_SN_) #15
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEEENS3_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS3_13basic_ostreamIcS5_EEPKvE_8__invokeESL_SN_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.42, i64 0, i64 0), i8* %20, i8* %22) #15
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.40, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #15
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #15
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %32, align 8
  %36 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %33, align 8
  %37 = icmp eq %"class.base::BasicStringPiece"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.base::BasicStringPiece"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEEENS3_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS3_13basic_ostreamIcS5_EEPKvE_8__invokeESL_SN_) #15
  %42 = bitcast %"class.base::BasicStringPiece"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEEENS3_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS3_13basic_ostreamIcS5_EEPKvE_8__invokeESL_SN_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.43, i64 0, i64 0), i8* %41, i8* %43) #15
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.40, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #15
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #15
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #15
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #7

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN3net25NetLogX509CertificateListEPKNS_15X509CertificateE(%"class.base::Value"* sret, %"class.net::X509Certificate"*) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"*, i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN3net9PEMEncodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN3net17NetLogStringValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* sret, i8*, i64) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #1

declare void @_ZN3net17NetLogNumberValueEj(%"class.base::Value"* sret, i32) local_unnamed_addr #1

declare i32 @_ZNK3net6CRLSet8sequenceEv(%"class.net::CRLSet"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net6CRLSet9IsExpiredEv(%"class.net::CRLSet"*) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"*, i8*, i64, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN3net15X509Certificate20GetPEMEncodedFromDEREN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare void @_ZN4base5Value6AppendEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"*) unnamed_addr #7

declare void @_ZNK3net16CertVerifyResult12NetLogParamsEi(%"class.base::Value"* sret, %"class.net::CertVerifyResult"*, i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base23UmaHistogramExactLinearERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEii(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #17
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #15
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #15
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #15
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #17
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #17
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN3net12_GLOBAL__N_116CertVerifyParamsEPNS_15X509CertificateERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_SB_iPNS_6CRLSetERKNS3_6vectorI13scoped_refptrIS1_ENS7_ISG_EEEE: argument 0"}
!5 = distinct !{!5, !"_ZN3net12_GLOBAL__N_116CertVerifyParamsEPNS_15X509CertificateERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_SB_iPNS_6CRLSetERKNS3_6vectorI13scoped_refptrIS1_ENS7_ISG_EEEE"}
!6 = distinct !{!6, !7, !"_ZZN3net14CertVerifyProc6VerifyEPNS_15X509CertificateERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_SB_iPNS_6CRLSetERKNS3_6vectorI13scoped_refptrIS1_ENS7_ISG_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceEENK3$_0clEv: argument 0"}
!7 = distinct !{!7, !"_ZZN3net14CertVerifyProc6VerifyEPNS_15X509CertificateERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_SB_iPNS_6CRLSetERKNS3_6vectorI13scoped_refptrIS1_ENS7_ISG_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceEENK3$_0clEv"}
!8 = !{!4}
!9 = !{i8 0, i8 2}
!10 = !{!"branch_weights", i32 1, i32 2000}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
