; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_style_sheet.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_style_sheet.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::String>::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::String>::InstanceStorage" = type { [8 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.351", i32, [4 x i8], %"class.std::__1::unique_ptr.489", %"class.std::__1::unique_ptr.489", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.499", %"class.std::__1::unique_ptr.505", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.517", %"class.std::__1::unique_ptr.523", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.530", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.354", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.366", %"class.std::__1::unique_ptr.372", %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.384", %"class.std::__1::unique_ptr.395", %"class.std::__1::unique_ptr.402", %"class.std::__1::unique_ptr.402", %"class.std::__1::unique_ptr.409", %"class.std::__1::unique_ptr.416", %"class.std::__1::unique_ptr.423", %"class.std::__1::unique_ptr.423", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.437", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.469", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.387" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.387" = type { %"struct.std::__1::__atomic_base.388" }
%"struct.std::__1::__atomic_base.388" = type { %"struct.std::__1::__atomic_base.389" }
%"struct.std::__1::__atomic_base.389" = type { %"struct.std::__1::__cxx_atomic_impl.390" }
%"struct.std::__1::__cxx_atomic_impl.390" = type { %"struct.std::__1::__cxx_atomic_base_impl.391" }
%"struct.std::__1::__cxx_atomic_base_impl.391" = type { i64 }
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.blink::Worklist.398"* }
%"class.blink::Worklist.398" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.387" }
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::Worklist.405"* }
%"class.blink::Worklist.405" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.387" }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.blink::Worklist.412"* }
%"class.blink::Worklist.412" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.387" }
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.blink::Worklist.419"* }
%"class.blink::Worklist.419" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.387" }
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.blink::Worklist.426"* }
%"class.blink::Worklist.426" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.387" }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.blink::Worklist.433"* }
%"class.blink::Worklist.433" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.387" }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.blink::Worklist.440"* }
%"class.blink::Worklist.440" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.387" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.447", %"class.std::__1::__compressed_pair.455", %"class.std::__1::__compressed_pair.460", %"class.std::__1::__compressed_pair.462", [4 x i8] }>
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449", %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i64 }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { float }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.472", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.481" }
%"class.WTF::Vector.481" = type { %"class.WTF::VectorBuffer.482" }
%"class.WTF::VectorBuffer.482" = type { %"class.WTF::VectorBufferBase.483" }
%"class.WTF::VectorBufferBase.483" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.497" }
%"class.WTF::VectorBuffer.497" = type { %"class.WTF::VectorBufferBase.498" }
%"class.WTF::VectorBufferBase.498" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.511" }
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.398"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.405"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.412"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.419"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.426"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.534", i64 }
%"class.std::__1::vector.534" = type { %"class.std::__1::__vector_base.535" }
%"class.std::__1::__vector_base.535" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.536" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.523" = type { %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.529 }
%class.scoped_refptr.529 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.530" = type { %"struct.std::__1::__atomic_base.531" }
%"struct.std::__1::__atomic_base.531" = type { %"struct.std::__1::__cxx_atomic_impl.532" }
%"struct.std::__1::__cxx_atomic_impl.532" = type { %"struct.std::__1::__cxx_atomic_base_impl.533" }
%"struct.std::__1::__cxx_atomic_base_impl.533" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.176" }
%"struct.std::__1::atomic.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.943 }
%class.scoped_refptr.943 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.944", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.944" = type { %"class.base::RefCounted.945" }
%"class.base::RefCounted.945" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::InspectorStyle" = type { %"class.blink::Member", %"class.blink::Member.17", %"class.blink::Member.42" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSStyleDeclaration"* }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::CSSRuleSourceData"* }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::InspectorStyleSheetBase"* }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.101", i32, i8, [3 x i8], %"class.blink::HeapVector.103", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.111", %"class.blink::Member.113", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.122", %"class.blink::Member.263", %"class.blink::Member.265", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.52" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.49" }
%"class.WTF::HashTable.49" = type <{ %"class.blink::WeakMember.51"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.51" = type opaque
%"class.blink::Supplementable.52" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.53" }
%"class.blink::HeapHashMap.53" = type { %"class.WTF::HashMap.56" }
%"class.WTF::HashMap.56" = type { %"class.WTF::HashTable.57" }
%"class.WTF::HashTable.57" = type <{ %"struct.WTF::KeyValuePair.59"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.59" = type { i8*, %"class.blink::Member.2603" }
%"class.blink::Member.2603" = type { %"class.blink::MemberBase.2604" }
%"class.blink::MemberBase.2604" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2605" }
%"class.blink::Member.2605" = type { %"class.blink::MemberBase.2606" }
%"class.blink::MemberBase.2606" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.60, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90", %"class.blink::Member.96", i32, [4 x i8], %"class.WTF::HashSet.97", i32, i32 }
%class.scoped_refptr.60 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.61 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.61 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.77", %"class.std::__1::map.86"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.67 }
%union.anon.67 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::map.77" = type { %"class.std::__1::__tree.78" }
%"class.std::__1::__tree.78" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::map.86" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.96" = type { %"class.blink::MemberBase.16" }
%"class.WTF::HashSet.97" = type { %"class.WTF::HashTable.98" }
%"class.WTF::HashTable.98" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.103" = type { %"class.WTF::Vector.106" }
%"class.WTF::Vector.106" = type { %"class.WTF::VectorBuffer.107" }
%"class.WTF::VectorBuffer.107" = type { %"class.WTF::VectorBufferBase.108" }
%"class.WTF::VectorBufferBase.108" = type { %"class.blink::Member.109"*, i32, i32 }
%"class.blink::Member.109" = type opaque
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.115", i32, i32 }
%"class.blink::HeapHashMap.115" = type { %"class.WTF::HashMap.118" }
%"class.WTF::HashMap.118" = type { %"class.WTF::HashTable.119" }
%"class.WTF::HashTable.119" = type <{ %"struct.WTF::KeyValuePair.121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.121" = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.125" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.128" }
%"class.WTF::Vector.128" = type { %"class.WTF::VectorBuffer.129" }
%"class.WTF::VectorBuffer.129" = type { %"class.WTF::VectorBufferBase.130" }
%"class.WTF::VectorBufferBase.130" = type { %"class.mojo::StructPtr.131"*, i32, i32 }
%"class.mojo::StructPtr.131" = type { %"class.std::__1::unique_ptr.132" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.135", %"class.WTF::HashMap.142", %"class.WTF::HashMap.147", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.152", i32, %"class.mojo::StructPtr.157", %"class.WTF::Vector.152" }
%"class.mojo::StructPtr.135" = type { %"class.std::__1::unique_ptr.136" }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.142" = type { %"class.WTF::HashTable.143" }
%"class.WTF::HashTable.143" = type <{ %"struct.WTF::KeyValuePair.146"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.146" = type opaque
%"class.WTF::HashMap.147" = type { %"class.WTF::HashTable.148" }
%"class.WTF::HashTable.148" = type <{ %"struct.WTF::KeyValuePair.151"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.151" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.157" = type { %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.152", i8, i8, [6 x i8] }>
%"class.WTF::Vector.152" = type { %"class.WTF::VectorBuffer.153" }
%"class.WTF::VectorBuffer.153" = type { %"class.WTF::VectorBufferBase.154" }
%"class.WTF::VectorBufferBase.154" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.254" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.172", i32 }>
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.181", %"class.absl::optional.186", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.207", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.229", %"class.std::__1::map.240", i64, %"class.base::OnceCallback.200", %"class.base::OnceCallback.249", i8, %class.scoped_refptr.191, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.250" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.175 }
%class.scoped_refptr.175 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.176" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.181" = type { %"class.absl::optional_internal::optional_data.182" }
%"class.absl::optional_internal::optional_data.182" = type { %"class.absl::optional_internal::optional_data_base.183" }
%"class.absl::optional_internal::optional_data_base.183" = type { %"class.absl::optional_internal::optional_data_dtor_base.184" }
%"class.absl::optional_internal::optional_data_dtor_base.184" = type { i8, %union.anon.185 }
%union.anon.185 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.186" = type { %"class.absl::optional_internal::optional_data.187" }
%"class.absl::optional_internal::optional_data.187" = type { %"class.absl::optional_internal::optional_data_base.188" }
%"class.absl::optional_internal::optional_data_base.188" = type { %"class.absl::optional_internal::optional_data_dtor_base.189" }
%"class.absl::optional_internal::optional_data_dtor_base.189" = type { i8, %union.anon.190 }
%union.anon.190 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.200" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.191, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.193 }
%class.scoped_refptr.193 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.194", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.194" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.195" }
%"struct.std::__1::atomic.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.205 }
%class.scoped_refptr.205 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.277", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.191, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.277" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.206 }
%class.scoped_refptr.206 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.210", %class.scoped_refptr.211 }
%"class.base::RepeatingCallback.210" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.211 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.212", [4 x i8] }>
%"class.base::RefCountedThreadSafe.212" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.222", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.228" }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.228" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.229" = type { %"class.std::__1::__tree.230" }
%"class.std::__1::__tree.230" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.231", %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::map.240" = type { %"class.std::__1::__tree.241" }
%"class.std::__1::__tree.241" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.base::OnceCallback.200" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.249" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.191 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.192" }>
%"class.base::RefCountedThreadSafe.192" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.200" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.250" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.263" = type { %"class.blink::MemberBase.264" }
%"class.blink::MemberBase.264" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.265" = type { %"class.blink::MemberBase.266" }
%"class.blink::MemberBase.266" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.113", i8, [7 x i8], %"class.WTF::Vector.128", %"class.blink::HeapVector.269", i8, [7 x i8], %"class.WTF::HashSet.97", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.269" = type { %"class.WTF::Vector.272" }
%"class.WTF::Vector.272" = type { %"class.WTF::VectorBuffer.273" }
%"class.WTF::VectorBuffer.273" = type { %"class.WTF::VectorBufferBase.274" }
%"class.WTF::VectorBufferBase.274" = type { %"class.blink::Member.275"*, i32, i32 }
%"class.blink::Member.275" = type opaque
%"class.blink::CSSRuleSourceData" = type { i32, %"class.blink::SourceRange", %"class.blink::SourceRange", %"class.WTF::Vector.21", %"class.WTF::Vector.26", %"class.blink::HeapVector", %"class.WTF::Vector.37" }
%"class.blink::SourceRange" = type { i32, i32 }
%"class.WTF::Vector.21" = type { %"class.WTF::VectorBuffer.22" }
%"class.WTF::VectorBuffer.22" = type { %"class.WTF::VectorBufferBase.23" }
%"class.WTF::VectorBufferBase.23" = type { %"class.blink::SourceRange"*, i32, i32 }
%"class.WTF::Vector.26" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28" }
%"class.WTF::VectorBufferBase.28" = type { %"class.blink::CSSPropertySourceData"*, i32, i32 }
%"class.blink::CSSPropertySourceData" = type <{ %"class.WTF::String", %"class.WTF::String", i8, i8, i8, i8, %"class.blink::SourceRange", [4 x i8] }>
%"class.blink::HeapVector" = type { %"class.WTF::Vector.33" }
%"class.WTF::Vector.33" = type { %"class.WTF::VectorBuffer.34" }
%"class.WTF::VectorBuffer.34" = type { %"class.WTF::VectorBufferBase.35" }
%"class.WTF::VectorBufferBase.35" = type { %"class.blink::Member.17"*, i32, i32 }
%"class.WTF::Vector.37" = type { %"class.WTF::VectorBuffer.38" }
%"class.WTF::VectorBuffer.38" = type { %"class.WTF::VectorBufferBase.39" }
%"class.WTF::VectorBufferBase.39" = type { %"class.WTF::Vector.21"*, i32, i32 }
%"class.blink::InspectorStyleSheetBase" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorStyleSheetBase::Listener"*, %"class.std::__1::unique_ptr.2" }
%"class.blink::InspectorStyleSheetBase::Listener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.blink::InspectorStyleSheet" = type <{ %"class.blink::InspectorStyleSheetBase", %"class.blink::Member.541", %"class.blink::Member.561", %"class.blink::Member.847", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1141", %"class.WTF::String", %"class.blink::HeapVector.1132", %"class.blink::HeapVector.1132", %"class.WTF::HashMap.1143", %"class.WTF::HashMap.1143", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::InspectorResourceContainer"* }
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::Member.847" = type { %"class.blink::MemberBase.848" }
%"class.blink::MemberBase.848" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::HeapVector"* }
%"class.blink::HeapVector.1132" = type { %"class.WTF::Vector.1135" }
%"class.WTF::Vector.1135" = type { %"class.WTF::VectorBuffer.1136" }
%"class.WTF::VectorBuffer.1136" = type { %"class.WTF::VectorBufferBase.1137" }
%"class.WTF::VectorBufferBase.1137" = type { %"class.blink::Member.1117"*, i32, i32 }
%"class.blink::Member.1117" = type { %"class.blink::MemberBase.1118" }
%"class.blink::MemberBase.1118" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1119" }
%"class.blink::Member.1119" = type { %"class.blink::MemberBase.1120" }
%"class.blink::MemberBase.1120" = type { %"class.blink::ScriptWrappable"* }
%"class.WTF::HashMap.1143" = type { %"class.WTF::HashTable.1144" }
%"class.WTF::HashTable.1144" = type <{ %"struct.WTF::KeyValuePair.1147"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1147" = type { i32, i32 }
%"class.blink::InspectorNetworkAgent" = type { %"class.blink::InspectorBaseAgent", %"class.blink::Member.545", %"class.blink::Member.817", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::Member.819", %"class.base::UnguessableToken", %"class.absl::optional.821", %"class.blink::Member.826", %"class.WTF::HashMap.828", %"class.blink::HeapHashSet.833", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField.845", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField.846", %"class.blink::InspectorAgentState::SimpleField.846", %"class.blink::InspectorAgentState::SimpleField.846", %"class.blink::InspectorAgentState::MapField" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Network::Backend", %"class.blink::Member.565", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.811" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::Network::Backend" = type { i32 (...)** }
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.576", %"class.blink::HeapListHashSet.587", %"class.blink::HeapListHashSet.598", %"class.blink::HeapListHashSet.609", %"class.blink::HeapListHashSet.620", %"class.blink::HeapListHashSet.631", %"class.blink::HeapListHashSet.642", %"class.blink::HeapListHashSet.653", %"class.blink::HeapListHashSet.664", %"class.blink::HeapListHashSet.675", %"class.blink::HeapListHashSet.686", %"class.blink::HeapListHashSet.697", %"class.blink::HeapListHashSet.708", %"class.blink::HeapListHashSet.719", %"class.blink::HeapListHashSet.730", %"class.blink::HeapListHashSet.741", %"class.blink::HeapListHashSet.752", %"class.blink::HeapListHashSet.763", %"class.blink::HeapListHashSet.774" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.572", %"class.blink::Member.574", %"class.blink::Member.574", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.572" = type <{ %"class.blink::Member.574"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1890", %"class.blink::Member.574", %"class.blink::Member.574" }
%"class.blink::Member.1890" = type { %"class.blink::MemberBase.1891" }
%"class.blink::MemberBase.1891" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.549", %"class.WTF::Vector.1587", i32, [4 x i8], %"class.blink::HeapHashMap.1894", i32, i8, [3 x i8] }>
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2070", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2078", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2092", %"class.blink::FrameLoader", %"class.blink::Member.2109", %"class.blink::Member.1171", %"class.blink::Member.2111", %"class.blink::Member.2113", %"class.blink::Member.2115", %"class.blink::Member.2117", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.565", %class.scoped_refptr.2119, %"class.blink::Member.1663", %"class.blink::Member.1890", %"class.blink::Member.2120", %"class.blink::Member.1719", %"class.blink::Member.1667", %"class.blink::Member.2122", %"class.blink::Member.2124", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2128", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2134", %"class.std::__1::unique_ptr.2135", %"class.absl::optional.2058", i32, [4 x i8], %"class.std::__1::unique_ptr.2141", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2149", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2154", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2159", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2162", %"class.blink::Member.2164", %"class.blink::Member.2166", %"class.blink::Member.2168", %"class.mojo::StructPtr.2171", %"class.blink::Member.2180", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2182", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1905", %"class.blink::Member.1907", %"class.blink::Member.1909", i8, i32, i8, i32, %"class.blink::Member.2041", %"class.blink::Member.1932", %"class.blink::FrameLifecycle", %"class.blink::Member.1903", %"class.blink::Member.1903", %"class.blink::Member.1903", %"class.blink::Member.1903", %"class.blink::Member.1903", %"class.blink::Member.1903", %"class.blink::Member.549", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2051", i8, %"class.base::UnguessableToken", %"class.absl::optional.2053", %"class.absl::optional.2058", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1903", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1905" = type { %"class.blink::MemberBase.1906" }
%"class.blink::MemberBase.1906" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1907" = type { %"class.blink::MemberBase.1908" }
%"class.blink::MemberBase.1908" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1909" = type { %"class.blink::MemberBase.1910" }
%"class.blink::MemberBase.1910" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1903", %"class.blink::Member.1932", %"class.blink::Member.1934", %"class.blink::Member.1936", i8, %"class.WTF::Vector.1938" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1925" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1913" }
%"class.blink::HeapVector.1913" = type { %"class.WTF::Vector.1916" }
%"class.WTF::Vector.1916" = type { %"class.WTF::VectorBuffer.1917" }
%"class.WTF::VectorBuffer.1917" = type { %"class.WTF::VectorBufferBase.1918", [32 x i8] }
%"class.WTF::VectorBufferBase.1918" = type { %"struct.std::__1::pair.1919"*, i32, i32 }
%"struct.std::__1::pair.1919" = type { %"class.WTF::AtomicString", %"class.blink::Member.1920" }
%"class.blink::Member.1920" = type { %"class.blink::MemberBase.1921" }
%"class.blink::MemberBase.1921" = type { %"class.blink::HeapVector.1922"* }
%"class.blink::HeapVector.1922" = type opaque
%"class.std::__1::unique_ptr.1925" = type { %"class.std::__1::__compressed_pair.1926" }
%"class.std::__1::__compressed_pair.1926" = type { %"struct.std::__1::__compressed_pair_elem.1927" }
%"struct.std::__1::__compressed_pair_elem.1927" = type { %"class.WTF::Vector.1928"* }
%"class.WTF::Vector.1928" = type opaque
%"class.blink::Member.1934" = type { %"class.blink::MemberBase.1935" }
%"class.blink::MemberBase.1935" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1936" = type { %"class.blink::MemberBase.1937" }
%"class.blink::MemberBase.1937" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1938" = type { %"class.WTF::VectorBuffer.1939" }
%"class.WTF::VectorBuffer.1939" = type { %"class.WTF::VectorBufferBase.1940" }
%"class.WTF::VectorBufferBase.1940" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2033" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1941, %"class.std::__1::unique_ptr.172", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.191, i32 }>
%class.scoped_refptr.1941 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.191, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1999", %"class.absl::optional.2004", %"class.absl::optional.1958", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2024", i8, [7 x i8], %class.scoped_refptr.191, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.212" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.200", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.191, %"class.std::__1::unique_ptr.1942", %"class.absl::optional.1952", %"struct.std::__1::atomic.530", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1958", %"class.std::__1::unique_ptr.1963", i8, i64, %class.scoped_refptr.1996, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.1998" }
%"class.std::__1::unique_ptr.1942" = type { %"class.std::__1::__compressed_pair.1943" }
%"class.std::__1::__compressed_pair.1943" = type { %"struct.std::__1::__compressed_pair_elem.1944" }
%"struct.std::__1::__compressed_pair_elem.1944" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.191, i8, %"class.mojo::ScopedHandleBase.1945", %class.scoped_refptr.1946, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1947", i8*, %"class.base::WeakPtrFactory.1948" }
%"class.mojo::ScopedHandleBase.1945" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1946 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.1947" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1948" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1952" = type { %"class.absl::optional_internal::optional_data.1953" }
%"class.absl::optional_internal::optional_data.1953" = type { %"class.absl::optional_internal::optional_data_base.1954" }
%"class.absl::optional_internal::optional_data_base.1954" = type { %"class.absl::optional_internal::optional_data_dtor_base.1955" }
%"class.absl::optional_internal::optional_data_dtor_base.1955" = type { i8, %union.anon.1956 }
%union.anon.1956 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1957", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1957" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1963" = type { %"class.std::__1::__compressed_pair.1964" }
%"class.std::__1::__compressed_pair.1964" = type { %"struct.std::__1::__compressed_pair_elem.1965" }
%"struct.std::__1::__compressed_pair_elem.1965" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1966", i8, i64, %class.scoped_refptr.1967, %class.scoped_refptr.1992 }
%"class.base::RepeatingCallback.1966" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1967 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1968", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1970", %"class.std::__1::map.1981", i8, [7 x i8] }>
%"class.base::RefCounted.1968" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1969 }
%class.scoped_refptr.1969 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1970" = type { %"class.std::__1::__tree.1971" }
%"class.std::__1::__tree.1971" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1972", %"class.std::__1::__compressed_pair.1976" }
%"class.std::__1::__compressed_pair.1972" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1976" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::map.1981" = type { %"class.std::__1::__tree.1982" }
%"class.std::__1::__tree.1982" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1983", %"class.std::__1::__compressed_pair.1987" }
%"class.std::__1::__compressed_pair.1983" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1987" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%class.scoped_refptr.1992 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.1996 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1997 }
%class.scoped_refptr.1997 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.1998" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1999" = type { %"class.absl::optional_internal::optional_data.2000" }
%"class.absl::optional_internal::optional_data.2000" = type { %"class.absl::optional_internal::optional_data_base.2001" }
%"class.absl::optional_internal::optional_data_base.2001" = type { %"class.absl::optional_internal::optional_data_dtor_base.2002" }
%"class.absl::optional_internal::optional_data_dtor_base.2002" = type { i8, %union.anon.2003 }
%union.anon.2003 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2004" = type { %"class.absl::optional_internal::optional_data.2005" }
%"class.absl::optional_internal::optional_data.2005" = type { %"class.absl::optional_internal::optional_data_base.2006" }
%"class.absl::optional_internal::optional_data_base.2006" = type { %"class.absl::optional_internal::optional_data_dtor_base.2007" }
%"class.absl::optional_internal::optional_data_dtor_base.2007" = type { i8, [7 x i8], %union.anon.2008 }
%union.anon.2008 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1958" = type { %"class.absl::optional_internal::optional_data.1959" }
%"class.absl::optional_internal::optional_data.1959" = type { %"class.absl::optional_internal::optional_data_base.1960" }
%"class.absl::optional_internal::optional_data_base.1960" = type { %"class.absl::optional_internal::optional_data_dtor_base.1961" }
%"class.absl::optional_internal::optional_data_dtor_base.1961" = type { i8, %union.anon.1962 }
%union.anon.1962 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2009 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2009 = type { %"class.std::__1::map.2012" }
%"class.std::__1::map.2012" = type { %"class.std::__1::__tree.2013" }
%"class.std::__1::__tree.2013" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2014", %"class.std::__1::__compressed_pair.2018" }
%"class.std::__1::__compressed_pair.2014" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.2018" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2023"*, i64 }
%"class.std::__1::unique_ptr.2023" = type opaque
%"class.std::__1::map.2024" = type { %"class.std::__1::__tree.2025" }
%"class.std::__1::__tree.2025" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2026", %"class.std::__1::__compressed_pair.2030" }
%"class.std::__1::__compressed_pair.2026" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.2030" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2033" = type { %"class.std::__1::__compressed_pair.2034" }
%"class.std::__1::__compressed_pair.2034" = type { %"struct.std::__1::__compressed_pair_elem.2035" }
%"struct.std::__1::__compressed_pair_elem.2035" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2041" = type { %"class.blink::MemberBase.2042" }
%"class.blink::MemberBase.2042" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1932" = type { %"class.blink::MemberBase.1933" }
%"class.blink::MemberBase.1933" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1903" = type { %"class.blink::MemberBase.1904" }
%"class.blink::MemberBase.1904" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1903", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.2043" }
%"class.std::__1::vector.2043" = type { %"class.std::__1::__vector_base.2044" }
%"class.std::__1::__vector_base.2044" = type { %"struct.std::__1::pair.2045"*, %"struct.std::__1::pair.2045"*, %"class.std::__1::__compressed_pair.2046" }
%"struct.std::__1::pair.2045" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2046" = type { %"struct.std::__1::__compressed_pair_elem.2047" }
%"struct.std::__1::__compressed_pair_elem.2047" = type { %"struct.std::__1::pair.2045"* }
%"class.blink::Member.2051" = type { %"class.blink::MemberBase.2052" }
%"class.blink::MemberBase.2052" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2053" = type { %"class.absl::optional_internal::optional_data.2054" }
%"class.absl::optional_internal::optional_data.2054" = type { %"class.absl::optional_internal::optional_data_base.2055" }
%"class.absl::optional_internal::optional_data_base.2055" = type { %"class.absl::optional_internal::optional_data_dtor_base.2056" }
%"class.absl::optional_internal::optional_data_dtor_base.2056" = type { i8, %union.anon.2057 }
%union.anon.2057 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1244 }
%class.scoped_refptr.1244 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2063" }
%"class.blink::HeapHashSet.2063" = type { %"class.WTF::HashSet.2066" }
%"class.WTF::HashSet.2066" = type { %"class.WTF::HashTable.2067" }
%"class.WTF::HashTable.2067" = type <{ %"class.blink::WeakMember.2069"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2069" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2070" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2071" }
%"class.blink::HeapHashMap.2071" = type { %"class.WTF::HashMap.2074" }
%"class.WTF::HashMap.2074" = type { %"class.WTF::HashTable.2075" }
%"class.WTF::HashTable.2075" = type <{ %"struct.WTF::KeyValuePair.2077"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2077" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2078" = type { %"class.std::__1::__compressed_pair.2079" }
%"class.std::__1::__compressed_pair.2079" = type { %"struct.std::__1::__compressed_pair_elem.2080" }
%"struct.std::__1::__compressed_pair_elem.2080" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2081", %"class.base::WeakPtrFactory.2086" }
%"class.WTF::HashMap.2081" = type { %"class.WTF::HashTable.2082" }
%"class.WTF::HashTable.2082" = type <{ %"struct.WTF::KeyValuePair.2085"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2085" = type opaque
%"class.base::WeakPtrFactory.2086" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2090" }
%"class.blink::Member.2090" = type { %"class.blink::MemberBase.2091" }
%"class.blink::MemberBase.2091" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2682" }
%"class.blink::WeakMember.2682" = type { %"class.blink::MemberBase.2683" }
%"class.blink::MemberBase.2683" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2684", i64, %"class.std::__1::map.2685", i8*, i64, %"class.base::WeakPtrFactory.2694" }
%"class.base::RepeatingCallback.2684" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2685" = type { %"class.std::__1::__tree.2686" }
%"class.std::__1::__tree.2686" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2687", %"class.std::__1::__compressed_pair.2691" }
%"class.std::__1::__compressed_pair.2687" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.2691" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.base::WeakPtrFactory.2694" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2092" = type { %"class.WTF::HashSet.2095" }
%"class.WTF::HashSet.2095" = type { %"class.WTF::HashTable.2096" }
%"class.WTF::HashTable.2096" = type <{ %"class.blink::WeakMember.2098"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2098" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.549", %"class.blink::Member.2099", %"class.blink::Member.2101", %"class.std::__1::unique_ptr.2103", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.330" }
%"class.blink::Member.2099" = type { %"class.blink::MemberBase.2100" }
%"class.blink::MemberBase.2100" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2101" = type { %"class.blink::MemberBase.2102" }
%"class.blink::MemberBase.2102" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2103" = type { %"class.std::__1::__compressed_pair.2104" }
%"class.std::__1::__compressed_pair.2104" = type { %"struct.std::__1::__compressed_pair_elem.2105" }
%"struct.std::__1::__compressed_pair_elem.2105" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.889" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.330" = type { %"class.WTF::HashTable.331" }
%"class.WTF::HashTable.331" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2109" = type { %"class.blink::MemberBase.2110" }
%"class.blink::MemberBase.2110" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2189", %"class.blink::Member.549", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2194", i8, i32, %"class.blink::Color", %"class.absl::optional.2196", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2201", %"class.blink::Member.2203", %"class.blink::Member.2203", %"class.std::__1::unique_ptr.2206", i32, [4 x i8], %"class.WTF::HashSet.2209", %"class.blink::Member.2216", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2218", %"class.blink::HeapHashSet.2225", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2233", i8, %"class.blink::Member.2239", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2251", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2265", i8, %"class.std::__1::unique_ptr.2271", %"class.std::__1::unique_ptr.2388", %"class.WTF::Vector.2394", i32, %class.scoped_refptr.2399, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2400", %"class.blink::Member.2402", %"class.blink::Member.2404", %"class.blink::HeapHashSet.2406", %"class.blink::HeapHashSet.2413", %"class.std::__1::unique_ptr.2420", %"class.std::__1::unique_ptr.2427", %"class.WTF::Vector.1219" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2189" = type { %"class.WTF::HashTable.2190" }
%"class.WTF::HashTable.2190" = type <{ %class.scoped_refptr.2193*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2193 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2194" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2195", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1250, %"class.base::WeakPtrFactory.1251" }
%class.scoped_refptr.1250 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1251" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2195" = type { %"class.blink::MemberBase.2110" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.2196" = type { %"class.absl::optional_internal::optional_data.2197" }
%"class.absl::optional_internal::optional_data.2197" = type { %"class.absl::optional_internal::optional_data_base.2198" }
%"class.absl::optional_internal::optional_data_base.2198" = type { %"class.absl::optional_internal::optional_data_dtor_base.2199" }
%"class.absl::optional_internal::optional_data_dtor_base.2199" = type { i8, %union.anon.2200 }
%union.anon.2200 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2201" = type { %"class.blink::MemberBase.2202" }
%"class.blink::MemberBase.2202" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2203" = type { %"class.blink::MemberBase.2204" }
%"class.blink::MemberBase.2204" = type { %"class.blink::HeapHashSet.2205"* }
%"class.blink::HeapHashSet.2205" = type opaque
%"class.std::__1::unique_ptr.2206" = type { %"class.std::__1::__compressed_pair.2207" }
%"class.std::__1::__compressed_pair.2207" = type { %"struct.std::__1::__compressed_pair_elem.2208" }
%"struct.std::__1::__compressed_pair_elem.2208" = type { %"class.WTF::HashSet.2209"* }
%"class.WTF::HashSet.2209" = type { %"class.WTF::HashTable.2210" }
%"class.WTF::HashTable.2210" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.2216" = type { %"class.blink::MemberBase.2217" }
%"class.blink::MemberBase.2217" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2218" = type { %"class.WTF::HashSet.2221" }
%"class.WTF::HashSet.2221" = type { %"class.WTF::HashTable.2222" }
%"class.WTF::HashTable.2222" = type <{ %"class.blink::Member.2224"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2224" = type opaque
%"class.blink::HeapHashSet.2225" = type { %"class.WTF::HashSet.2228" }
%"class.WTF::HashSet.2228" = type { %"class.WTF::HashTable.2229" }
%"class.WTF::HashTable.2229" = type <{ %"class.blink::Member.2231"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2231" = type { %"class.blink::MemberBase.2232" }
%"class.blink::MemberBase.2232" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2461", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2463", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.1171" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.2461" = type { %"class.blink::MemberBase.2462" }
%"class.blink::MemberBase.2462" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.2463" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2464", { i64, i64 } }
%"class.blink::WeakMember.2464" = type { %"class.blink::MemberBase.2232" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2233" = type { %"class.std::__1::__compressed_pair.2234" }
%"class.std::__1::__compressed_pair.2234" = type { %"struct.std::__1::__compressed_pair_elem.2235" }
%"struct.std::__1::__compressed_pair_elem.2235" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2239" = type { %"class.blink::MemberBase.2240" }
%"class.blink::MemberBase.2240" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2243", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2243" = type { %"class.WTF::HashTable.2244" }
%"class.WTF::HashTable.2244" = type <{ %"struct.WTF::KeyValuePair.2246"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2246" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2247", i32, i32 }
%"class.WTF::Vector.2247" = type { %"class.WTF::VectorBuffer.2248" }
%"class.WTF::VectorBuffer.2248" = type { %"class.WTF::VectorBufferBase.2249" }
%"class.WTF::VectorBufferBase.2249" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2251" = type { %"class.WTF::LinkedHashSet.2254" }
%"class.WTF::LinkedHashSet.2254" = type { %"class.WTF::HashMap.2255", %"class.WTF::VectorBackedLinkedList.2259" }
%"class.WTF::HashMap.2255" = type { %"class.WTF::HashTable.2256" }
%"class.WTF::HashTable.2256" = type <{ %"struct.WTF::KeyValuePair.2258"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2258" = type opaque
%"class.WTF::VectorBackedLinkedList.2259" = type { %"class.WTF::Vector.2260", i32, i32 }
%"class.WTF::Vector.2260" = type { %"class.WTF::VectorBuffer.2261" }
%"class.WTF::VectorBuffer.2261" = type { %"class.WTF::VectorBufferBase.2262" }
%"class.WTF::VectorBufferBase.2262" = type { %"class.WTF::VectorBackedLinkedListNode.2263"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2263" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2265" = type { %"class.std::__1::__compressed_pair.2266" }
%"class.std::__1::__compressed_pair.2266" = type { %"struct.std::__1::__compressed_pair_elem.2267" }
%"struct.std::__1::__compressed_pair_elem.2267" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2271" = type { %"class.std::__1::__compressed_pair.2272" }
%"class.std::__1::__compressed_pair.2272" = type { %"struct.std::__1::__compressed_pair_elem.2273" }
%"struct.std::__1::__compressed_pair_elem.2273" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2274, %class.scoped_refptr.2274, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2365", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2370", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2274 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2275", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2282" }
%"class.WTF::RefCounted.2275" = type { %"class.base::RefCounted.2276" }
%"class.base::RefCounted.2276" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2277", i32, [4 x i8] }>
%"class.WTF::Vector.2277" = type { %"class.WTF::VectorBuffer.2278" }
%"class.WTF::VectorBuffer.2278" = type { %"class.WTF::VectorBufferBase.2279" }
%"class.WTF::VectorBufferBase.2279" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2282" = type { %"class.WTF::VectorBuffer.2283" }
%"class.WTF::VectorBuffer.2283" = type { %"class.WTF::VectorBufferBase.2284" }
%"class.WTF::VectorBufferBase.2284" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2288", %"class.std::__1::unique_ptr.2337", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.2285, %class.scoped_refptr.2286, %class.scoped_refptr.2287 }
%class.scoped_refptr.2285 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.2301", i8, i8, %class.scoped_refptr.2285, i32, i32 }
%"class.WTF::RefCounted.2301" = type { %"class.base::RefCounted.2302" }
%"class.base::RefCounted.2302" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2286 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2456" }
%"class.blink::PaintPropertyNode.2456" = type { %"class.WTF::RefCounted.2457", i8, i8, %class.scoped_refptr.2286, i32, i32 }
%"class.WTF::RefCounted.2457" = type { %"class.base::RefCounted.2458" }
%"class.base::RefCounted.2458" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2287 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2453" }
%"class.blink::PaintPropertyNode.2453" = type { %"class.WTF::RefCounted.2454", i8, i8, %class.scoped_refptr.2287, i32, i32 }
%"class.WTF::RefCounted.2454" = type { %"class.base::RefCounted.2455" }
%"class.base::RefCounted.2455" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2288" = type { %"class.std::__1::__compressed_pair.2289" }
%"class.std::__1::__compressed_pair.2289" = type { %"struct.std::__1::__compressed_pair_elem.2290" }
%"struct.std::__1::__compressed_pair_elem.2290" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2291", %"class.WTF::Vector.2296", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2291" = type { %"class.WTF::VectorBuffer.2292" }
%"class.WTF::VectorBuffer.2292" = type { %"class.WTF::VectorBufferBase.2293" }
%"class.WTF::VectorBufferBase.2293" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2296" = type { %"class.WTF::VectorBuffer.2297" }
%"class.WTF::VectorBuffer.2297" = type { %"class.WTF::VectorBufferBase.2298" }
%"class.WTF::VectorBufferBase.2298" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.2316" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.2309, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.2310", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.2303" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.2303" = type { %"class.std::__1::__compressed_pair.2304" }
%"class.std::__1::__compressed_pair.2304" = type { %"struct.std::__1::__compressed_pair_elem.2305" }
%"struct.std::__1::__compressed_pair_elem.2305" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.2309 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2438", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2438" = type { %"class.WTF::RefCounted.2439", i8, i8, %class.scoped_refptr.2309, i32, i32 }
%"class.WTF::RefCounted.2439" = type { %"class.base::RefCounted.2440" }
%"class.base::RefCounted.2440" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2441" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2441" = type { %"class.absl::optional_internal::optional_data.2442" }
%"class.absl::optional_internal::optional_data.2442" = type { %"class.absl::optional_internal::optional_data_base.2443" }
%"class.absl::optional_internal::optional_data_base.2443" = type { %"class.absl::optional_internal::optional_data_dtor_base.2444" }
%"class.absl::optional_internal::optional_data_dtor_base.2444" = type { i8, %union.anon.2445 }
%union.anon.2445 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2446", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2446" = type { %"class.std::__1::__vector_base.2447" }
%"class.std::__1::__vector_base.2447" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2448" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.2448" = type { %"struct.std::__1::__compressed_pair_elem.2449" }
%"struct.std::__1::__compressed_pair_elem.2449" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.2310" = type { %"class.std::__1::__compressed_pair.2311" }
%"class.std::__1::__compressed_pair.2311" = type { %"struct.std::__1::__compressed_pair_elem.2312" }
%"struct.std::__1::__compressed_pair_elem.2312" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.2316" = type { %"class.std::__1::__compressed_pair.2317" }
%"class.std::__1::__compressed_pair.2317" = type { %"struct.std::__1::__compressed_pair_elem.2318" }
%"struct.std::__1::__compressed_pair_elem.2318" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.2319", %"class.std::__1::unique_ptr.2325", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2319" = type { %"class.std::__1::__compressed_pair.2320" }
%"class.std::__1::__compressed_pair.2320" = type { %"struct.std::__1::__compressed_pair_elem.2321" }
%"struct.std::__1::__compressed_pair_elem.2321" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2325" = type { %"class.std::__1::__compressed_pair.2326" }
%"class.std::__1::__compressed_pair.2326" = type { %"struct.std::__1::__compressed_pair_elem.2327" }
%"struct.std::__1::__compressed_pair_elem.2327" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2337" = type { %"class.std::__1::__compressed_pair.2338" }
%"class.std::__1::__compressed_pair.2338" = type { %"struct.std::__1::__compressed_pair_elem.2339" }
%"struct.std::__1::__compressed_pair_elem.2339" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2340", %"class.absl::optional.2340" }
%"class.absl::optional.2340" = type { %"class.absl::optional_internal::optional_data.2341" }
%"class.absl::optional_internal::optional_data.2341" = type { %"class.absl::optional_internal::optional_data_base.2342" }
%"class.absl::optional_internal::optional_data_base.2342" = type { %"class.absl::optional_internal::optional_data_dtor_base.2343" }
%"class.absl::optional_internal::optional_data_dtor_base.2343" = type { i8, [3 x i8], %union.anon.2344 }
%union.anon.2344 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2282"*, %"class.absl::optional.2350", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2350" = type { %"class.absl::optional_internal::optional_data.2351" }
%"class.absl::optional_internal::optional_data.2351" = type { %"class.absl::optional_internal::optional_data_base.2352" }
%"class.absl::optional_internal::optional_data_base.2352" = type { %"class.absl::optional_internal::optional_data_dtor_base.2353" }
%"class.absl::optional_internal::optional_data_dtor_base.2353" = type { i8, %union.anon.2354 }
%union.anon.2354 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2355", %"class.WTF::Vector.2360" }
%"class.WTF::Vector.2355" = type { %"class.WTF::VectorBuffer.2356" }
%"class.WTF::VectorBuffer.2356" = type { %"class.WTF::VectorBufferBase.2357", [128 x i8] }
%"class.WTF::VectorBufferBase.2357" = type { i32*, i32, i32 }
%"class.WTF::Vector.2360" = type { %"class.WTF::VectorBuffer.2361" }
%"class.WTF::VectorBuffer.2361" = type { %"class.WTF::VectorBufferBase.2362", [128 x i8] }
%"class.WTF::VectorBufferBase.2362" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2365" = type { %"class.WTF::VectorBuffer.2366" }
%"class.WTF::VectorBuffer.2366" = type { %"class.WTF::VectorBufferBase.2367" }
%"class.WTF::VectorBufferBase.2367" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2370" = type { %"class.WTF::HashTable.2371" }
%"class.WTF::HashTable.2371" = type <{ %"struct.WTF::KeyValuePair.2374"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2374" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2375", %"class.WTF::Vector.2380" }
%"class.WTF::HashMap.2375" = type { %"class.WTF::HashTable.2376" }
%"class.WTF::HashTable.2376" = type <{ %"struct.WTF::KeyValuePair.2379"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2379" = type opaque
%"class.WTF::Vector.2380" = type { %"class.WTF::VectorBuffer.2381" }
%"class.WTF::VectorBuffer.2381" = type { %"class.WTF::VectorBufferBase.2382" }
%"class.WTF::VectorBufferBase.2382" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2388" = type { %"class.std::__1::__compressed_pair.2389" }
%"class.std::__1::__compressed_pair.2389" = type { %"struct.std::__1::__compressed_pair_elem.2390" }
%"struct.std::__1::__compressed_pair_elem.2390" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2394" = type { %"class.WTF::VectorBuffer.2395" }
%"class.WTF::VectorBuffer.2395" = type { %"class.WTF::VectorBufferBase.2396" }
%"class.WTF::VectorBufferBase.2396" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2399 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2400" = type { %"class.blink::MemberBase.2401" }
%"class.blink::MemberBase.2401" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2402" = type { %"class.blink::MemberBase.2403" }
%"class.blink::MemberBase.2403" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2404" = type { %"class.blink::MemberBase.2405" }
%"class.blink::MemberBase.2405" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2406" = type { %"class.WTF::HashSet.2409" }
%"class.WTF::HashSet.2409" = type { %"class.WTF::HashTable.2410" }
%"class.WTF::HashTable.2410" = type <{ %"class.blink::WeakMember.2412"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2412" = type opaque
%"class.blink::HeapHashSet.2413" = type { %"class.WTF::HashSet.2416" }
%"class.WTF::HashSet.2416" = type { %"class.WTF::HashTable.2417" }
%"class.WTF::HashTable.2417" = type <{ %"class.blink::WeakMember.2419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2419" = type opaque
%"class.std::__1::unique_ptr.2420" = type { %"class.std::__1::__compressed_pair.2421" }
%"class.std::__1::__compressed_pair.2421" = type { %"struct.std::__1::__compressed_pair_elem.2422" }
%"struct.std::__1::__compressed_pair_elem.2422" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2423" }
%"class.base::time_internal::TimeBase.2423" = type { i64 }
%"class.std::__1::unique_ptr.2427" = type { %"class.std::__1::__compressed_pair.2428" }
%"class.std::__1::__compressed_pair.2428" = type { %"struct.std::__1::__compressed_pair_elem.2429" }
%"struct.std::__1::__compressed_pair_elem.2429" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2430", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2430" = type { %"class.absl::optional_internal::optional_data.2431" }
%"class.absl::optional_internal::optional_data.2431" = type { %"class.absl::optional_internal::optional_data_base.2432" }
%"class.absl::optional_internal::optional_data_base.2432" = type { %"class.absl::optional_internal::optional_data_dtor_base.2433" }
%"class.absl::optional_internal::optional_data_dtor_base.2433" = type { i8, %union.anon.2434 }
%union.anon.2434 = type { %"class.base::Time" }
%"class.WTF::Vector.1219" = type { %"class.WTF::VectorBuffer.1220" }
%"class.WTF::VectorBuffer.1220" = type { %"class.WTF::VectorBufferBase.1221" }
%"class.WTF::VectorBufferBase.1221" = type { %"class.base::OnceCallback.200"*, i32, i32 }
%"class.blink::Member.1171" = type { %"class.blink::MemberBase.1172" }
%"class.blink::MemberBase.1172" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.1173" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.1115", %"class.blink::Member.1115" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.1115", %"class.blink::Member.1148", %"class.blink::Member.1115", %"class.blink::Member.1115", %"class.blink::Member.1150" }
%"class.blink::Member.1148" = type { %"class.blink::MemberBase.1149" }
%"class.blink::MemberBase.1149" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1154", %"class.blink::Member.1128", %"class.blink::Member.1148", %"class.blink::Member.1156", %"class.blink::Member.1156", %"class.blink::Member.1193", %"class.blink::Member.1195", %"class.blink::Member.1197", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1202", %"class.blink::HeapVector.1204" }
%"class.blink::Member.1154" = type { %"class.blink::MemberBase.1155" }
%"class.blink::MemberBase.1155" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1211", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1219", %"class.WTF::Vector.1219", i8, i32, %"class.blink::Member.1224", %"class.blink::Member.96", %"class.blink::Member.1226", %"class.blink::Member.1228", %"class.blink::Member.1230", %"class.blink::Member.1232", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1234", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1240", %"class.blink::Member.1242", %"class.blink::Member.847", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1245", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.1186", %"class.blink::Member.1171", %"class.blink::Member.1253", %"class.blink::Member.1171", %"class.blink::Member.1171", %"class.blink::Member.1171", %"class.blink::UserActionElementSet", %"class.blink::Member.1262", double, double, i64, i64, %"class.blink::HeapHashSet.1264", %"class.blink::HeapHashSet.1271", i16, i8, %"class.blink::Member.1278", %"class.blink::Member.1280", %"class.blink::Member.1453", %"class.blink::Member.1455", %"class.blink::TextLinkColors", %"class.blink::Member.1457", i8, [7 x i8], %"class.blink::HeapHashMap.1459", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1171", %"class.WTF::Vector.1466", %"class.blink::Member.1471", %"class.blink::Member.1475", i8, %"class.blink::Member.1171", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1477", %"class.blink::HeapVector.1479", %"class.std::__1::unique_ptr.1487", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1493", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1506", %"class.WTF::Vector.1508", i8, i8, %"class.std::__1::unique_ptr.1513", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1186", %"class.blink::HeapVector.1519", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1527", i8, i32, %"class.blink::Member.1529", %"class.blink::Member.1531", %"class.blink::Member.1533", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1535", %"class.WTF::HashMap.1537", %"class.blink::Member.1542", %"class.blink::Member.1544", %"class.blink::Member.1546", %"class.blink::Member.1548", %"class.blink::Member.1128", %"class.blink::Member.1128", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1550", i8, i32, %"class.blink::Member.1557", %"class.blink::Member.1559", i32, %"class.blink::Member.1561", %"class.blink::Member.1563", %"class.blink::Member.1565", %"class.std::__1::unique_ptr.1567", i64, %"class.std::__1::unique_ptr.1573", i32, i32, %"class.blink::Member.1579", %"class.blink::Member.1581", %"class.blink::Member.1583", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1585", %"class.WTF::Vector.1587", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1592", %"class.blink::Member.1599", %"class.std::__1::unique_ptr.1601", %"class.blink::Member.1607", i8, i8, %"class.WTF::String", %"class.blink::Member.1609", i8, [7 x i8], %"class.blink::HeapHashMap.1611", %"class.blink::HeapObserverSet.1618", %"class.blink::Member.1626", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1628", i32, i8, i8, %"class.blink::WeakMember.1630", %"class.blink::Member.1631" }
%"class.blink::Supplementable.1211" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1212" }
%"class.blink::HeapHashMap.1212" = type { %"class.WTF::HashMap.1215" }
%"class.WTF::HashMap.1215" = type { %"class.WTF::HashTable.1216" }
%"class.WTF::HashTable.1216" = type <{ %"struct.WTF::KeyValuePair.1218"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1218" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1224" = type { %"class.blink::MemberBase.1225" }
%"class.blink::MemberBase.1225" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1226" = type { %"class.blink::MemberBase.1227" }
%"class.blink::MemberBase.1227" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1228" = type { %"class.blink::MemberBase.1229" }
%"class.blink::MemberBase.1229" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1230" = type { %"class.blink::MemberBase.1231" }
%"class.blink::MemberBase.1231" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1234" = type { %"class.std::__1::__compressed_pair.1235" }
%"class.std::__1::__compressed_pair.1235" = type { %"struct.std::__1::__compressed_pair_elem.1236" }
%"struct.std::__1::__compressed_pair_elem.1236" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1240" = type { %"class.blink::MemberBase.1241" }
%"class.blink::MemberBase.1241" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1245" = type { %"class.WTF::VectorBuffer.1246" }
%"class.WTF::VectorBuffer.1246" = type { %"class.WTF::VectorBufferBase.1247" }
%"class.WTF::VectorBufferBase.1247" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.895 }
%class.scoped_refptr.895 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.896", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.896" = type { %"class.base::RefCounted.897" }
%"class.base::RefCounted.897" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.900" }
%"class.blink::HeapHashMap.900" = type { %"class.WTF::HashMap.903" }
%"class.WTF::HashMap.903" = type { %"class.WTF::HashTable.904" }
%"class.WTF::HashTable.904" = type <{ %"struct.WTF::KeyValuePair.906"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.906" = type { %"class.blink::WeakMember.907", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.1254" }
%"class.blink::MemberBase.1254" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.1128", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.1115", %"class.blink::Member.1115", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1255" }
%"class.blink::HeapHashMap.1255" = type { %"class.WTF::HashMap.1258" }
%"class.WTF::HashMap.1258" = type { %"class.WTF::HashTable.1259" }
%"class.WTF::HashTable.1259" = type <{ %"struct.WTF::KeyValuePair.1261"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1261" = type opaque
%"class.blink::Member.1262" = type { %"class.blink::MemberBase.1263" }
%"class.blink::MemberBase.1263" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1264" = type { %"class.WTF::HashSet.1267" }
%"class.WTF::HashSet.1267" = type { %"class.WTF::HashTable.1268" }
%"class.WTF::HashTable.1268" = type <{ %"class.blink::WeakMember.1270"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1270" = type opaque
%"class.blink::HeapHashSet.1271" = type { %"class.WTF::HashSet.1274" }
%"class.WTF::HashSet.1274" = type { %"class.WTF::HashTable.1275" }
%"class.WTF::HashTable.1275" = type <{ %"class.blink::WeakMember.1277"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1277" = type opaque
%"class.blink::Member.1278" = type { %"class.blink::MemberBase.1279" }
%"class.blink::MemberBase.1279" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1280" = type { %"class.blink::MemberBase.1281" }
%"class.blink::MemberBase.1281" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.1128", i32, i32, i32, %"class.blink::Member.847", %"class.blink::Member.1284", %"class.blink::Member.1315", %"class.blink::HeapHashMap.1317", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1324", %"class.blink::HeapHashSet.1324", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1330", %"class.blink::Member.1344", %"class.blink::Member.1373", %"class.blink::Member.1375", %"class.blink::Member.1381", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1392", %"class.blink::Member.1398", %"class.blink::HeapHashMap.1400", %"class.blink::HeapHashMap.1407", %"class.std::__1::unique_ptr.1414", i32, %"class.blink::HeapVector.1420", %"class.blink::HeapVector.1420", %"class.blink::HeapVector.1296", %"class.blink::HeapHashSet.911", %"class.blink::HeapHashMap.1428", %"class.blink::Member.1435", %"class.blink::HeapHashMap.1437", %class.scoped_refptr.1444, %class.scoped_refptr.1445, %"class.blink::Member.1067", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1446", %"class.blink::Member.1171" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1284" = type { %"class.blink::MemberBase.1285" }
%"class.blink::MemberBase.1285" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.1148", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1288", %"class.blink::HeapVector.1296", i8 }>
%"class.blink::HeapVector.1288" = type { %"class.WTF::Vector.1291" }
%"class.WTF::Vector.1291" = type { %"class.WTF::VectorBuffer.1292" }
%"class.WTF::VectorBuffer.1292" = type { %"class.WTF::VectorBufferBase.1293" }
%"class.WTF::VectorBufferBase.1293" = type { %"class.blink::Member.1294"*, i32, i32 }
%"class.blink::Member.1294" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet.1304" }
%"class.blink::HeapListHashSet.1304" = type { %"class.WTF::ListHashSet.base.1314", [7 x i8] }
%"class.WTF::ListHashSet.base.1314" = type <{ %"class.WTF::HashTable.1309", %"class.blink::Member.1311", %"class.blink::Member.1311", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1309" = type <{ %"class.blink::Member.1311"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1311" = type { %"class.blink::MemberBase.1312" }
%"class.blink::MemberBase.1312" = type { %"class.blink::HeapListHashSetNode.1313"* }
%"class.blink::HeapListHashSetNode.1313" = type { %"class.blink::Member.1115", %"class.blink::Member.1311", %"class.blink::Member.1311" }
%"class.blink::Member.1315" = type { %"class.blink::MemberBase.1316" }
%"class.blink::MemberBase.1316" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1317" = type { %"class.WTF::HashMap.1320" }
%"class.WTF::HashMap.1320" = type { %"class.WTF::HashTable.1321" }
%"class.WTF::HashTable.1321" = type <{ %"struct.WTF::KeyValuePair.1323"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1323" = type opaque
%"class.blink::HeapHashSet.1324" = type { %"class.WTF::HashSet.1327" }
%"class.WTF::HashSet.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"class.blink::Member.1148"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1330" = type { %"class.blink::MemberBase.1331" }
%"class.blink::MemberBase.1331" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1334", %"class.blink::Member.1336" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1334" = type { %"class.blink::MemberBase.1335" }
%"class.blink::MemberBase.1335" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1340", %"class.blink::Member.1342" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1342" = type { %"class.blink::MemberBase.1343" }
%"class.blink::MemberBase.1343" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1646", %"class.blink::Member.1336", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector.1646" = type { %"class.WTF::Vector.1649" }
%"class.WTF::Vector.1649" = type { %"class.WTF::VectorBuffer.1650" }
%"class.WTF::VectorBuffer.1650" = type { %"class.WTF::VectorBufferBase.1651" }
%"class.WTF::VectorBufferBase.1651" = type { %"class.blink::Member.1342"*, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1653, i32, %"class.absl::optional.1654", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.176" }>
%class.sk_sp.1653 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1654" = type { %"class.absl::optional_internal::optional_data.1655" }
%"class.absl::optional_internal::optional_data.1655" = type { %"class.absl::optional_internal::optional_data_base.1656" }
%"class.absl::optional_internal::optional_data_base.1656" = type { %"class.absl::optional_internal::optional_data_dtor_base.1657" }
%"class.absl::optional_internal::optional_data_dtor_base.1657" = type { i8, %union.anon.1658 }
%union.anon.1658 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1344" = type { %"class.blink::MemberBase.1345" }
%"class.blink::MemberBase.1345" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.1128", %class.scoped_refptr.1355, %"class.blink::SelectorFilter", %"class.blink::Member.1315", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1348" }
%"class.blink::HeapHashMap.1348" = type { %"class.WTF::HashMap.1351" }
%"class.WTF::HashMap.1351" = type { %"class.WTF::HashTable.1352" }
%"class.WTF::HashTable.1352" = type <{ %"struct.WTF::KeyValuePair.1354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1354" = type opaque
%class.scoped_refptr.1355 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1356", %"class.std::__1::unique_ptr.1367" }
%"class.blink::HeapVector.1356" = type { %"class.WTF::Vector.1359" }
%"class.WTF::Vector.1359" = type { %"class.WTF::VectorBuffer.1360" }
%"class.WTF::VectorBuffer.1360" = type { %"class.WTF::VectorBufferBase.1361" }
%"class.WTF::VectorBufferBase.1361" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.1171", %"class.WTF::Vector.1362" }
%"class.WTF::Vector.1362" = type { %"class.WTF::VectorBuffer.1363" }
%"class.WTF::VectorBuffer.1363" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.std::__1::unique_ptr.1367" = type { %"class.std::__1::__compressed_pair.1368" }
%"class.std::__1::__compressed_pair.1368" = type { %"struct.std::__1::__compressed_pair_elem.1369" }
%"struct.std::__1::__compressed_pair_elem.1369" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1373" = type { %"class.blink::MemberBase.1374" }
%"class.blink::MemberBase.1374" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1375" = type { %"class.blink::MemberBase.1376" }
%"class.blink::MemberBase.1376" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1379", i8, [7 x i8] }>
%"class.blink::Member.1379" = type { %"class.blink::MemberBase.1380" }
%"class.blink::MemberBase.1380" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1381" = type { %"class.blink::MemberBase.1382" }
%"class.blink::MemberBase.1382" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.918", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.977", %"class.WTF::HashMap.977", %"class.WTF::HashMap.977", %"class.WTF::HashMap.982", %class.scoped_refptr.987, %class.scoped_refptr.998, %class.scoped_refptr.997, %"class.WTF::Vector.999", %"class.WTF::Vector.999", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.977" = type { %"class.WTF::HashTable.978" }
%"class.WTF::HashTable.978" = type <{ %"struct.WTF::KeyValuePair.981"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.981" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2668 }
%class.scoped_refptr.2668 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.988", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.994", %"union.blink::InvalidationSet::Backing.995", %"union.blink::InvalidationSet::Backing.996", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.988" = type { %"class.base::RefCounted.989" }
%"class.base::RefCounted.989" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.994" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.995" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.996" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.982" = type { %"class.WTF::HashTable.983" }
%"class.WTF::HashTable.983" = type <{ %"struct.WTF::KeyValuePair.986"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.986" = type opaque
%class.scoped_refptr.987 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.997, %class.scoped_refptr.997 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.988", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.994", %"union.blink::InvalidationSet::Backing.995", %"union.blink::InvalidationSet::Backing.996", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.998 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.997 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.WTF::Vector.999" = type { %"class.WTF::VectorBuffer.1000" }
%"class.WTF::VectorBuffer.1000" = type { %"class.WTF::VectorBufferBase.1001" }
%"class.WTF::VectorBufferBase.1001" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.922", %"class.blink::HeapHashMap.922", %"class.blink::HeapHashMap.922", %"class.blink::HeapHashMap.922", %"class.blink::HeapVector.929", %"class.blink::HeapVector.929", %"class.blink::HeapVector.929", %"class.blink::HeapVector.929", %"class.blink::HeapVector.929", %"class.blink::HeapVector.929", %"class.blink::HeapVector.929", %"class.blink::HeapVector.929", %"class.blink::HeapVector.929", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1004", %"class.blink::HeapVector.1012", %"class.blink::HeapVector.1020", %"class.blink::HeapVector.1043", %"class.blink::HeapVector.1051", %"class.blink::HeapVector.1059", %"class.blink::HeapVector.1072", %"class.WTF::Vector.1079", i32, %"class.blink::Member.1103" }
%"class.blink::HeapHashMap.922" = type { %"class.WTF::HashMap.925" }
%"class.WTF::HashMap.925" = type { %"class.WTF::HashTable.926" }
%"class.WTF::HashTable.926" = type <{ %"struct.WTF::KeyValuePair.928"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.928" = type { %"class.WTF::AtomicString", %"class.blink::Member.2678" }
%"class.blink::Member.2678" = type { %"class.blink::MemberBase.2679" }
%"class.blink::MemberBase.2679" = type { %"class.blink::HeapVector.929"* }
%"class.blink::HeapVector.929" = type { %"class.WTF::Vector.932" }
%"class.WTF::Vector.932" = type { %"class.WTF::VectorBuffer.933" }
%"class.WTF::VectorBuffer.933" = type { %"class.WTF::VectorBufferBase.934" }
%"class.WTF::VectorBufferBase.934" = type { %"class.blink::Member.935"*, i32, i32 }
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.939", i64, [4 x i32] }
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.968", %"class.blink::Member.972" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.972" = type { %"class.blink::MemberBase.973" }
%"class.blink::MemberBase.973" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1004" = type { %"class.WTF::Vector.1007" }
%"class.WTF::Vector.1007" = type { %"class.WTF::VectorBuffer.1008" }
%"class.WTF::VectorBuffer.1008" = type { %"class.WTF::VectorBufferBase.1009" }
%"class.WTF::VectorBufferBase.1009" = type { %"class.blink::Member.1010"*, i32, i32 }
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.2674" }
%"class.blink::MemberBase.2674" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.968", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1012" = type { %"class.WTF::Vector.1015" }
%"class.WTF::Vector.1015" = type { %"class.WTF::VectorBuffer.1016" }
%"class.WTF::VectorBuffer.1016" = type { %"class.WTF::VectorBufferBase.1017" }
%"class.WTF::VectorBufferBase.1017" = type { %"class.blink::Member.1018"*, i32, i32 }
%"class.blink::Member.1018" = type { %"class.blink::MemberBase.2675" }
%"class.blink::MemberBase.2675" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.968" }
%"class.blink::HeapVector.1020" = type { %"class.WTF::Vector.1023" }
%"class.WTF::Vector.1023" = type { %"class.WTF::VectorBuffer.1024" }
%"class.WTF::VectorBuffer.1024" = type { %"class.WTF::VectorBufferBase.1025" }
%"class.WTF::VectorBufferBase.1025" = type { %"class.blink::Member.1026"*, i32, i32 }
%"class.blink::Member.1026" = type { %"class.blink::MemberBase.1027" }
%"class.blink::MemberBase.1027" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1028", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1028" = type { %"class.WTF::Vector.1031" }
%"class.WTF::Vector.1031" = type { %"class.WTF::VectorBuffer.1032" }
%"class.WTF::VectorBuffer.1032" = type { %"class.WTF::VectorBufferBase.1033" }
%"class.WTF::VectorBufferBase.1033" = type { %"class.blink::Member.1034"*, i32, i32 }
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::StyleRuleKeyframe"* }
%"class.blink::StyleRuleKeyframe" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.968", %"class.WTF::Vector.1036" }
%"class.WTF::Vector.1036" = type { %"class.WTF::VectorBuffer.1037" }
%"class.WTF::VectorBuffer.1037" = type { %"class.WTF::VectorBufferBase.1038" }
%"class.WTF::VectorBufferBase.1038" = type { double*, i32, i32 }
%"class.blink::HeapVector.1043" = type { %"class.WTF::Vector.1046" }
%"class.WTF::Vector.1046" = type { %"class.WTF::VectorBuffer.1047" }
%"class.WTF::VectorBuffer.1047" = type { %"class.WTF::VectorBufferBase.1048" }
%"class.WTF::VectorBufferBase.1048" = type { %"class.blink::Member.1049"*, i32, i32 }
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.2676" }
%"class.blink::MemberBase.2676" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.968" }
%"class.blink::HeapVector.1051" = type { %"class.WTF::Vector.1054" }
%"class.WTF::Vector.1054" = type { %"class.WTF::VectorBuffer.1055" }
%"class.WTF::VectorBuffer.1055" = type { %"class.WTF::VectorBufferBase.1056" }
%"class.WTF::VectorBufferBase.1056" = type { %"class.blink::Member.1057"*, i32, i32 }
%"class.blink::Member.1057" = type { %"class.blink::MemberBase.2677" }
%"class.blink::MemberBase.2677" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1067", %"class.blink::Member.1067", %"class.blink::Member.1067", %"class.blink::Member.1067", %"class.blink::Member.1067", %"class.blink::Member.1067", %"class.blink::Member.1067", %"class.blink::Member.1067", %"class.blink::Member.1067", %"class.blink::Member.1067", i32, [4 x i8] }>
%"class.blink::HeapVector.1059" = type { %"class.WTF::Vector.1062" }
%"class.WTF::Vector.1062" = type { %"class.WTF::VectorBuffer.1063" }
%"class.WTF::VectorBuffer.1063" = type { %"class.WTF::VectorBufferBase.1064" }
%"class.WTF::VectorBufferBase.1064" = type { %"class.blink::Member.1065"*, i32, i32 }
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1067", %"class.blink::Member.1067", %"class.blink::Member.1067", %"class.blink::Member.1067", %"class.blink::Member.1067" }
%"class.blink::HeapVector.1072" = type { %"class.WTF::Vector.1075" }
%"class.WTF::Vector.1075" = type { %"class.WTF::VectorBuffer.1076" }
%"class.WTF::VectorBuffer.1076" = type { %"class.WTF::VectorBufferBase.1077" }
%"class.WTF::VectorBufferBase.1077" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.939", i32, i32 }
%"class.WTF::Vector.1079" = type { %"class.WTF::VectorBuffer.1080" }
%"class.WTF::VectorBuffer.1080" = type { %"class.WTF::VectorBufferBase.1081" }
%"class.WTF::VectorBufferBase.1081" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1082, i8, [7 x i8] }>
%class.scoped_refptr.1082 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.1083", %"class.WTF::Vector.1085" }
%"class.WTF::RefCounted.1083" = type { %"class.base::RefCounted.1084" }
%"class.base::RefCounted.1084" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1085" = type { %"class.WTF::VectorBuffer.1086" }
%"class.WTF::VectorBuffer.1086" = type { %"class.WTF::VectorBufferBase.1087" }
%"class.WTF::VectorBufferBase.1087" = type { %"class.std::__1::unique_ptr.1088"*, i32, i32 }
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.1091", %"class.WTF::String" }
%"class.WTF::Vector.1091" = type { %"class.WTF::VectorBuffer.1092" }
%"class.WTF::VectorBuffer.1092" = type { %"class.WTF::VectorBufferBase.1093" }
%"class.WTF::VectorBufferBase.1093" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1107", %"class.blink::HeapHashMap.1107", %"class.blink::HeapHashMap.1107", %"class.blink::HeapHashMap.1107" }
%"class.blink::HeapHashMap.1107" = type { %"class.WTF::HashMap.1110" }
%"class.WTF::HashMap.1110" = type { %"class.WTF::HashTable.1111" }
%"class.WTF::HashTable.1111" = type <{ %"struct.WTF::KeyValuePair.1113"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1113" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1385" }
%"class.blink::HeapHashMap.1385" = type { %"class.WTF::HashMap.1388" }
%"class.WTF::HashMap.1388" = type { %"class.WTF::HashTable.1389" }
%"class.WTF::HashTable.1389" = type <{ %"struct.WTF::KeyValuePair.1391"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1391" = type { %"class.blink::Member.1154", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2669", %"class.WTF::Vector.2669" }
%"class.WTF::Vector.2669" = type { %"class.WTF::VectorBuffer.2670" }
%"class.WTF::VectorBuffer.2670" = type { %"class.WTF::VectorBufferBase.2671" }
%"class.WTF::VectorBufferBase.2671" = type { %class.scoped_refptr.2668*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.1115", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1392" = type { %"class.WTF::HashSet.1395" }
%"class.WTF::HashSet.1395" = type { %"class.WTF::HashTable.1396" }
%"class.WTF::HashTable.1396" = type <{ %"class.blink::Member.1171"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1400" = type { %"class.WTF::HashMap.1403" }
%"class.WTF::HashMap.1403" = type { %"class.WTF::HashTable.1404" }
%"class.WTF::HashTable.1404" = type <{ %"struct.WTF::KeyValuePair.1406"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1406" = type opaque
%"class.blink::HeapHashMap.1407" = type { %"class.WTF::HashMap.1410" }
%"class.WTF::HashMap.1410" = type { %"class.WTF::HashTable.1411" }
%"class.WTF::HashTable.1411" = type <{ %"struct.WTF::KeyValuePair.1413"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1413" = type opaque
%"class.std::__1::unique_ptr.1414" = type { %"class.std::__1::__compressed_pair.1415" }
%"class.std::__1::__compressed_pair.1415" = type { %"struct.std::__1::__compressed_pair_elem.1416" }
%"struct.std::__1::__compressed_pair_elem.1416" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1420" = type { %"class.WTF::Vector.1423" }
%"class.WTF::Vector.1423" = type { %"class.WTF::VectorBuffer.1424" }
%"class.WTF::VectorBuffer.1424" = type { %"class.WTF::VectorBufferBase.1425" }
%"class.WTF::VectorBufferBase.1425" = type { %"struct.std::__1::pair.1426"*, i32, i32 }
%"struct.std::__1::pair.1426" = type opaque
%"class.blink::HeapVector.1296" = type { %"class.WTF::Vector.1299" }
%"class.WTF::Vector.1299" = type { %"class.WTF::VectorBuffer.1300" }
%"class.WTF::VectorBuffer.1300" = type { %"class.WTF::VectorBufferBase.1301" }
%"class.WTF::VectorBufferBase.1301" = type { %"struct.std::__1::pair.1302"*, i32, i32 }
%"struct.std::__1::pair.1302" = type opaque
%"class.blink::HeapHashSet.911" = type { %"class.WTF::HashSet.914" }
%"class.WTF::HashSet.914" = type { %"class.WTF::HashTable.915" }
%"class.WTF::HashTable.915" = type <{ %"class.blink::WeakMember.917"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.917" = type { %"class.blink::MemberBase.848" }
%"class.blink::HeapHashMap.1428" = type { %"class.WTF::HashMap.1431" }
%"class.WTF::HashMap.1431" = type { %"class.WTF::HashTable.1432" }
%"class.WTF::HashTable.1432" = type <{ %"struct.WTF::KeyValuePair.1434"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1434" = type { %"class.WTF::AtomicString", %"class.blink::Member.1026" }
%"class.blink::Member.1435" = type { %"class.blink::MemberBase.1436" }
%"class.blink::MemberBase.1436" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1437" = type { %"class.WTF::HashMap.1440" }
%"class.WTF::HashMap.1440" = type { %"class.WTF::HashTable.1441" }
%"class.WTF::HashTable.1441" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%class.scoped_refptr.1444 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.1445 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1446" = type { %"class.WTF::HashSet.1449" }
%"class.WTF::HashSet.1449" = type { %"class.WTF::HashTable.1450" }
%"class.WTF::HashTable.1450" = type <{ %"class.blink::Member.1452"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1452" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1148", %"class.blink::HeapVector.1204" }
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1459" = type { %"class.WTF::HashMap.1462" }
%"class.WTF::HashMap.1462" = type { %"class.WTF::HashTable.1463" }
%"class.WTF::HashTable.1463" = type <{ %"struct.WTF::KeyValuePair.1465"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1465" = type opaque
%"class.WTF::Vector.1466" = type { %"class.WTF::VectorBuffer.1467" }
%"class.WTF::VectorBuffer.1467" = type { %"class.WTF::VectorBufferBase.1468" }
%"class.WTF::VectorBufferBase.1468" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1471" = type { %"class.blink::MemberBase.1472" }
%"class.blink::MemberBase.1472" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1479" = type { %"class.WTF::Vector.1482" }
%"class.WTF::Vector.1482" = type { %"class.WTF::VectorBuffer.1483" }
%"class.WTF::VectorBuffer.1483" = type { %"class.WTF::VectorBufferBase.1484" }
%"class.WTF::VectorBufferBase.1484" = type { %"class.blink::Member.1485"*, i32, i32 }
%"class.blink::Member.1485" = type opaque
%"class.std::__1::unique_ptr.1487" = type { %"class.std::__1::__compressed_pair.1488" }
%"class.std::__1::__compressed_pair.1488" = type { %"struct.std::__1::__compressed_pair_elem.1489" }
%"struct.std::__1::__compressed_pair_elem.1489" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1493" = type { %"class.WTF::HashSet.1496" }
%"class.WTF::HashSet.1496" = type { %"class.WTF::HashTable.1497" }
%"class.WTF::HashTable.1497" = type <{ %"class.blink::WeakMember.1499"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1499" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1500", i32, [4 x i8] }>
%"class.WTF::Vector.1500" = type { %"class.WTF::VectorBuffer.1501" }
%"class.WTF::VectorBuffer.1501" = type { %"class.WTF::VectorBufferBase.1502" }
%"class.WTF::VectorBufferBase.1502" = type { %"struct.std::__1::pair.1503"*, i32, i32 }
%"struct.std::__1::pair.1503" = type opaque
%"class.blink::Member.1506" = type { %"class.blink::MemberBase.1507" }
%"class.blink::MemberBase.1507" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1508" = type { %"class.WTF::VectorBuffer.1509" }
%"class.WTF::VectorBuffer.1509" = type { %"class.WTF::VectorBufferBase.1510" }
%"class.WTF::VectorBufferBase.1510" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1513" = type { %"class.std::__1::__compressed_pair.1514" }
%"class.std::__1::__compressed_pair.1514" = type { %"struct.std::__1::__compressed_pair_elem.1515" }
%"struct.std::__1::__compressed_pair_elem.1515" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1186" = type { %"class.WTF::Vector.1189" }
%"class.WTF::Vector.1189" = type { %"class.WTF::VectorBuffer.1190" }
%"class.WTF::VectorBuffer.1190" = type { %"class.WTF::VectorBufferBase.1191" }
%"class.WTF::VectorBufferBase.1191" = type { %"class.blink::Member.1171"*, i32, i32 }
%"class.blink::HeapVector.1519" = type { %"class.WTF::Vector.1522" }
%"class.WTF::Vector.1522" = type { %"class.WTF::VectorBuffer.1523" }
%"class.WTF::VectorBuffer.1523" = type { %"class.WTF::VectorBufferBase.1524" }
%"class.WTF::VectorBufferBase.1524" = type { %"class.blink::Member.1525"*, i32, i32 }
%"class.blink::Member.1525" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1128" }
%"class.blink::Member.1527" = type { %"class.blink::MemberBase.1528" }
%"class.blink::MemberBase.1528" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1529" = type { %"class.blink::MemberBase.1530" }
%"class.blink::MemberBase.1530" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1533" = type { %"class.blink::MemberBase.1534" }
%"class.blink::MemberBase.1534" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1535" = type { %"class.blink::MemberBase.1536" }
%"class.blink::MemberBase.1536" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1537" = type { %"class.WTF::HashTable.1538" }
%"class.WTF::HashTable.1538" = type <{ %"struct.WTF::KeyValuePair.1541"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1541" = type opaque
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1544" = type { %"class.blink::MemberBase.1545" }
%"class.blink::MemberBase.1545" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1546" = type { %"class.blink::MemberBase.1547" }
%"class.blink::MemberBase.1547" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1548" = type { %"class.blink::MemberBase.1549" }
%"class.blink::MemberBase.1549" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1252", { i64, i64 } }
%"class.blink::WeakMember.1252" = type { %"class.blink::MemberBase.1129" }
%"class.blink::HeapHashSet.1550" = type { %"class.WTF::HashSet.1553" }
%"class.WTF::HashSet.1553" = type { %"class.WTF::HashTable.1554" }
%"class.WTF::HashTable.1554" = type <{ %"class.blink::Member.1556"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1556" = type opaque
%"class.blink::Member.1557" = type { %"class.blink::MemberBase.1558" }
%"class.blink::MemberBase.1558" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1559" = type { %"class.blink::MemberBase.1560" }
%"class.blink::MemberBase.1560" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1561" = type { %"class.blink::MemberBase.1562" }
%"class.blink::MemberBase.1562" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1565" = type { %"class.blink::MemberBase.1566" }
%"class.blink::MemberBase.1566" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1567" = type { %"class.std::__1::__compressed_pair.1568" }
%"class.std::__1::__compressed_pair.1568" = type { %"struct.std::__1::__compressed_pair_elem.1569" }
%"struct.std::__1::__compressed_pair_elem.1569" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1573" = type { %"class.std::__1::__compressed_pair.1574" }
%"class.std::__1::__compressed_pair.1574" = type { %"struct.std::__1::__compressed_pair_elem.1575" }
%"struct.std::__1::__compressed_pair_elem.1575" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1579" = type { %"class.blink::MemberBase.1580" }
%"class.blink::MemberBase.1580" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1581" = type { %"class.blink::MemberBase.1582" }
%"class.blink::MemberBase.1582" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1583" = type { %"class.blink::MemberBase.1584" }
%"class.blink::MemberBase.1584" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1585" = type { %"class.blink::MemberBase.1586" }
%"class.blink::MemberBase.1586" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1592" = type { %"class.WTF::HashMap.1595" }
%"class.WTF::HashMap.1595" = type { %"class.WTF::HashTable.1596" }
%"class.WTF::HashTable.1596" = type <{ %"struct.WTF::KeyValuePair.1598"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1598" = type opaque
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1601" = type { %"class.std::__1::__compressed_pair.1602" }
%"class.std::__1::__compressed_pair.1602" = type { %"struct.std::__1::__compressed_pair_elem.1603" }
%"struct.std::__1::__compressed_pair_elem.1603" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1607" = type { %"class.blink::MemberBase.1608" }
%"class.blink::MemberBase.1608" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1609" = type { %"class.blink::MemberBase.1610" }
%"class.blink::MemberBase.1610" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1611" = type { %"class.WTF::HashMap.1614" }
%"class.WTF::HashMap.1614" = type { %"class.WTF::HashTable.1615" }
%"class.WTF::HashTable.1615" = type <{ %"struct.WTF::KeyValuePair.1617"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1617" = type opaque
%"class.blink::HeapObserverSet.1618" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1619" }
%"class.blink::HeapHashSet.1619" = type { %"class.WTF::HashSet.1622" }
%"class.WTF::HashSet.1622" = type { %"class.WTF::HashTable.1623" }
%"class.WTF::HashTable.1623" = type <{ %"class.blink::WeakMember.1625"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1625" = type opaque
%"class.blink::Member.1626" = type { %"class.blink::MemberBase.1627" }
%"class.blink::MemberBase.1627" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1628" = type { %"class.blink::MemberBase.1629" }
%"class.blink::MemberBase.1629" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1128", %"class.blink::HeapHashSet.1635", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1642", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1635" = type { %"class.WTF::HashSet.1638" }
%"class.WTF::HashSet.1638" = type { %"class.WTF::HashTable.1639" }
%"class.WTF::HashTable.1639" = type <{ %"class.blink::Member.1641"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1641" = type opaque
%"class.blink::HeapTaskRunnerTimer.1642" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1643", { i64, i64 } }
%"class.blink::WeakMember.1643" = type { %"class.blink::MemberBase.1629" }
%"class.blink::WeakMember.1630" = type { %"class.blink::MemberBase.1116" }
%"class.blink::MemberBase.1116" = type { %"class.blink::Node"* }
%"class.blink::Member.1631" = type { %"class.blink::MemberBase.1632" }
%"class.blink::MemberBase.1632" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.1156" = type { %"class.blink::MemberBase.1157" }
%"class.blink::MemberBase.1157" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1160" }
%"class.blink::HeapHashMap.1160" = type { %"class.WTF::HashMap.1163" }
%"class.WTF::HashMap.1163" = type { %"class.WTF::HashTable.1164" }
%"class.WTF::HashTable.1164" = type <{ %"struct.WTF::KeyValuePair.1166"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1166" = type { %"class.WTF::AtomicString", %"class.blink::Member.1167" }
%"class.blink::Member.1167" = type { %"class.blink::MemberBase.1168" }
%"class.blink::MemberBase.1168" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.1171", i32, %"class.blink::HeapVector.1186" }
%"class.blink::Member.1193" = type { %"class.blink::MemberBase.1194" }
%"class.blink::MemberBase.1194" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1195" = type { %"class.blink::MemberBase.1196" }
%"class.blink::MemberBase.1196" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1198" }
%"class.blink::MemberBase.1198" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1199" }
%"class.blink::Member.1199" = type { %"class.blink::MemberBase.1200" }
%"class.blink::MemberBase.1200" = type { %"class.blink::HeapHashMap.1201"* }
%"class.blink::HeapHashMap.1201" = type opaque
%"class.blink::Member.1202" = type { %"class.blink::MemberBase.1203" }
%"class.blink::MemberBase.1203" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1204" = type { %"class.WTF::Vector.1207" }
%"class.WTF::Vector.1207" = type { %"class.WTF::VectorBuffer.1208" }
%"class.WTF::VectorBuffer.1208" = type { %"class.WTF::VectorBufferBase.1209" }
%"class.WTF::VectorBufferBase.1209" = type { %"class.blink::Member.847"*, i32, i32 }
%"class.blink::Member.1150" = type { %"class.blink::MemberBase.1151" }
%"class.blink::MemberBase.1151" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.1115" = type { %"class.blink::MemberBase.1116" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.1177", %"class.blink::Member.968", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.1177" = type { %"class.WTF::SingleThreadedBitField.1178" }
%"class.WTF::SingleThreadedBitField.1178" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.1179 }
%class.scoped_refptr.1179 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.1180", %"class.WTF::AtomicString", %"class.WTF::Vector.1182" }
%"class.WTF::RefCounted.1180" = type { %"class.base::RefCounted.1181" }
%"class.base::RefCounted.1181" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1182" = type { %"class.WTF::VectorBuffer.1183" }
%"class.WTF::VectorBuffer.1183" = type { %"class.WTF::VectorBufferBase.962", [32 x i8] }
%"class.WTF::VectorBufferBase.962" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.2111" = type { %"class.blink::MemberBase.2112" }
%"class.blink::MemberBase.2112" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2113" = type { %"class.blink::MemberBase.2114" }
%"class.blink::MemberBase.2114" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.2115" = type { %"class.blink::MemberBase.2116" }
%"class.blink::MemberBase.2116" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2117" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%class.scoped_refptr.2119 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2120" = type { %"class.blink::MemberBase.2121" }
%"class.blink::MemberBase.2121" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1719" = type { %"class.blink::MemberBase.1720" }
%"class.blink::MemberBase.1720" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1667" = type { %"class.blink::MemberBase.1668" }
%"class.blink::MemberBase.1668" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.2122" = type { %"class.blink::MemberBase.2123" }
%"class.blink::MemberBase.2123" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2124" = type { %"class.blink::MemberBase.2125" }
%"class.blink::MemberBase.2125" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2126" }
%"class.blink::Member.2126" = type { %"class.blink::MemberBase.2127" }
%"class.blink::MemberBase.2127" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2697" }
%"class.mojo::Remote.2697" = type { %"class.mojo::internal::InterfacePtrState.2698" }
%"class.mojo::internal::InterfacePtrState.2698" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2699" }
%"class.std::__1::unique_ptr.2699" = type { %"class.std::__1::__compressed_pair.2700" }
%"class.std::__1::__compressed_pair.2700" = type { %"struct.std::__1::__compressed_pair_elem.2701" }
%"struct.std::__1::__compressed_pair_elem.2701" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2128" = type { %"class.std::__1::__compressed_pair.2129" }
%"class.std::__1::__compressed_pair.2129" = type { %"struct.std::__1::__compressed_pair_elem.2130" }
%"struct.std::__1::__compressed_pair_elem.2130" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2134" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2135" = type { %"class.std::__1::__compressed_pair.2136" }
%"class.std::__1::__compressed_pair.2136" = type { %"struct.std::__1::__compressed_pair_elem.2137" }
%"struct.std::__1::__compressed_pair_elem.2137" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2058" = type { %"class.absl::optional_internal::optional_data.2059" }
%"class.absl::optional_internal::optional_data.2059" = type { %"class.absl::optional_internal::optional_data_base.2060" }
%"class.absl::optional_internal::optional_data_base.2060" = type { %"class.absl::optional_internal::optional_data_dtor_base.2061" }
%"class.absl::optional_internal::optional_data_dtor_base.2061" = type { i8, %union.anon.2062 }
%union.anon.2062 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2141" = type { %"class.std::__1::__compressed_pair.2142" }
%"class.std::__1::__compressed_pair.2142" = type { %"struct.std::__1::__compressed_pair_elem.2143" }
%"struct.std::__1::__compressed_pair_elem.2143" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2147" }
%"class.blink::Member.2147" = type { %"class.blink::MemberBase.2148" }
%"class.blink::MemberBase.2148" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2707" }
%"class.mojo::AssociatedRemote.2707" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2708" }
%"class.mojo::internal::AssociatedInterfacePtrState.2708" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2709" }
%"class.std::__1::unique_ptr.2709" = type { %"class.std::__1::__compressed_pair.2710" }
%"class.std::__1::__compressed_pair.2710" = type { %"struct.std::__1::__compressed_pair_elem.2711" }
%"struct.std::__1::__compressed_pair_elem.2711" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2149" = type { %"class.blink::Member.2150" }
%"class.blink::Member.2150" = type { %"class.blink::MemberBase.2151" }
%"class.blink::MemberBase.2151" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2717" }
%"class.mojo::AssociatedRemote.2717" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2718" }
%"class.mojo::internal::AssociatedInterfacePtrState.2718" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2719" }
%"class.std::__1::unique_ptr.2719" = type { %"class.std::__1::__compressed_pair.2720" }
%"class.std::__1::__compressed_pair.2720" = type { %"struct.std::__1::__compressed_pair_elem.2721" }
%"struct.std::__1::__compressed_pair_elem.2721" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2152" }
%"class.blink::Member.2152" = type { %"class.blink::MemberBase.2153" }
%"class.blink::MemberBase.2153" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.549", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2727" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.172" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2727" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2154" = type { %"class.blink::Member.2155" }
%"class.blink::Member.2155" = type { %"class.blink::MemberBase.2156" }
%"class.blink::MemberBase.2156" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2730", %"class.blink::Member.549", %"class.mojo::AssociatedReceiver.2731" }
%"class.blink::ThreadState::PrefinalizerRegistration.2730" = type { i8 }
%"class.mojo::AssociatedReceiver.2731" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2732" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2732" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2157" }
%"class.blink::Member.2157" = type { %"class.blink::MemberBase.2158" }
%"class.blink::MemberBase.2158" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2735", %"class.blink::Member.549", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2735" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1941, %"class.std::__1::unique_ptr.172", %"class.base::WeakPtrFactory.2736" }
%"class.base::WeakPtrFactory.2736" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2159" = type { %"class.blink::Member.2160" }
%"class.blink::Member.2160" = type { %"class.blink::MemberBase.2161" }
%"class.blink::MemberBase.2161" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2739", %"class.blink::Member.549", %"class.mojo::AssociatedReceiver.2740" }
%"class.blink::ThreadState::PrefinalizerRegistration.2739" = type { i8 }
%"class.mojo::AssociatedReceiver.2740" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2741" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2741" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2162" = type { %"class.blink::MemberBase.2163" }
%"class.blink::MemberBase.2163" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2164" = type { %"class.blink::MemberBase.2165" }
%"class.blink::MemberBase.2165" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2166" = type { %"class.blink::MemberBase.2167" }
%"class.blink::MemberBase.2167" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2168" = type { %"class.blink::MemberBase.2169" }
%"class.blink::MemberBase.2169" = type { %"class.blink::HeapHashMap.2170"* }
%"class.blink::HeapHashMap.2170" = type opaque
%"class.mojo::StructPtr.2171" = type { %"class.std::__1::unique_ptr.2172" }
%"class.std::__1::unique_ptr.2172" = type { %"class.std::__1::__compressed_pair.2173" }
%"class.std::__1::__compressed_pair.2173" = type { %"struct.std::__1::__compressed_pair_elem.2174" }
%"struct.std::__1::__compressed_pair_elem.2174" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2175", %"class.mojo::InlinedStructPtr.2176" }
%"class.mojo::InlinedStructPtr.2175" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2176" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2180" = type { %"class.blink::MemberBase.2181" }
%"class.blink::MemberBase.2181" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2182" = type { %"class.absl::optional_internal::optional_data.2183" }
%"class.absl::optional_internal::optional_data.2183" = type { %"class.absl::optional_internal::optional_data_base.2184" }
%"class.absl::optional_internal::optional_data_base.2184" = type { %"class.absl::optional_internal::optional_data_dtor_base.2185" }
%"class.absl::optional_internal::optional_data_dtor_base.2185" = type { i8, %union.anon.2186 }
%union.anon.2186 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.WTF::Vector.1587" = type { %"class.WTF::VectorBuffer.1588" }
%"class.WTF::VectorBuffer.1588" = type { %"class.WTF::VectorBufferBase.1589" }
%"class.WTF::VectorBufferBase.1589" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1894" = type { %"class.WTF::HashMap.1897" }
%"class.WTF::HashMap.1897" = type { %"class.WTF::HashTable.1898" }
%"class.WTF::HashTable.1898" = type <{ %"struct.WTF::KeyValuePair.1900"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1900" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.576" = type { %"class.WTF::ListHashSet.base.586", [7 x i8] }
%"class.WTF::ListHashSet.base.586" = type <{ %"class.WTF::HashTable.581", %"class.blink::Member.583", %"class.blink::Member.583", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.581" = type <{ %"class.blink::Member.583"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::HeapListHashSetNode.585"* }
%"class.blink::HeapListHashSetNode.585" = type { %"class.blink::Member.1886", %"class.blink::Member.583", %"class.blink::Member.583" }
%"class.blink::Member.1886" = type { %"class.blink::MemberBase.1887" }
%"class.blink::MemberBase.1887" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.587" = type { %"class.WTF::ListHashSet.base.597", [7 x i8] }
%"class.WTF::ListHashSet.base.597" = type <{ %"class.WTF::HashTable.592", %"class.blink::Member.594", %"class.blink::Member.594", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.592" = type <{ %"class.blink::Member.594"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::HeapListHashSetNode.596"* }
%"class.blink::HeapListHashSetNode.596" = type { %"class.blink::Member.1882", %"class.blink::Member.594", %"class.blink::Member.594" }
%"class.blink::Member.1882" = type { %"class.blink::MemberBase.1883" }
%"class.blink::MemberBase.1883" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.598" = type { %"class.WTF::ListHashSet.base.608", [7 x i8] }
%"class.WTF::ListHashSet.base.608" = type <{ %"class.WTF::HashTable.603", %"class.blink::Member.605", %"class.blink::Member.605", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.603" = type <{ %"class.blink::Member.605"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::HeapListHashSetNode.607"* }
%"class.blink::HeapListHashSetNode.607" = type { %"class.blink::Member.1878", %"class.blink::Member.605", %"class.blink::Member.605" }
%"class.blink::Member.1878" = type { %"class.blink::MemberBase.1879" }
%"class.blink::MemberBase.1879" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.609" = type { %"class.WTF::ListHashSet.base.619", [7 x i8] }
%"class.WTF::ListHashSet.base.619" = type <{ %"class.WTF::HashTable.614", %"class.blink::Member.616", %"class.blink::Member.616", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.614" = type <{ %"class.blink::Member.616"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::HeapListHashSetNode.618"* }
%"class.blink::HeapListHashSetNode.618" = type { %"class.blink::Member.1874", %"class.blink::Member.616", %"class.blink::Member.616" }
%"class.blink::Member.1874" = type { %"class.blink::MemberBase.1875" }
%"class.blink::MemberBase.1875" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.620" = type { %"class.WTF::ListHashSet.base.630", [7 x i8] }
%"class.WTF::ListHashSet.base.630" = type <{ %"class.WTF::HashTable.625", %"class.blink::Member.627", %"class.blink::Member.627", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.625" = type <{ %"class.blink::Member.627"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::HeapListHashSetNode.629"* }
%"class.blink::HeapListHashSetNode.629" = type { %"class.blink::Member.1806", %"class.blink::Member.627", %"class.blink::Member.627" }
%"class.blink::Member.1806" = type { %"class.blink::MemberBase.1807" }
%"class.blink::MemberBase.1807" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type { %"class.blink::InspectorBaseAgent.1808", %"struct.blink::InspectorDOMAgent::DOMListener", %"class.blink::InspectorStyleSheetBase::Listener", %"class.blink::Member.1735", %"class.blink::Member.545", %"class.blink::Member.561", %"class.blink::Member.1700", %"class.blink::Member.541", %"class.blink::HeapHashMap.1815", %"class.blink::HeapHashMap.1822", %"class.blink::HeapHashMap.1829", %"class.blink::HeapHashMap.1836", %"class.blink::HeapHashSet.1843", %"class.blink::HeapHashMap.1849", %"class.WTF::HashMap.1856", %"class.WTF::HashMap.1856", %"class.blink::Member.1315", %"class.blink::Member.847", i32, [4 x i8], %"class.blink::InspectorAgentState::SimpleField", i8, [7 x i8], %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.WTF::HashMap.1861", %"class.std::__1::unique_ptr.1866", %"class.WTF::HashSet.1782" }
%"class.blink::InspectorBaseAgent.1808" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::CSS::Backend", %"class.blink::Member.565", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.1809" }
%"class.blink::protocol::CSS::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1809" = type { %"class.std::__1::__compressed_pair.1810" }
%"class.std::__1::__compressed_pair.1810" = type { %"struct.std::__1::__compressed_pair_elem.1811" }
%"struct.std::__1::__compressed_pair_elem.1811" = type { %"class.blink::protocol::CSS::Frontend"* }
%"class.blink::protocol::CSS::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"struct.blink::InspectorDOMAgent::DOMListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type { %"class.blink::InspectorBaseAgent.1737", %"class.v8::Isolate"*, %"class.blink::Member.545", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::HeapHashSet.1744", %"class.blink::Member.1751", %"class.blink::HeapVector.1754", %"class.blink::HeapHashMap.1761", %"class.blink::HeapHashMap.1768", %"class.blink::HeapHashMap.1775", %"class.WTF::HashSet.1782", %"class.WTF::HashSet.1782", %"class.WTF::HashMap.1786", i32, %"class.blink::Member.1128", %"class.blink::HeapHashMap.1791", %"class.blink::Member.1798", %"class.blink::Member.1800", %"class.blink::Member.1802", i8, [7 x i8], %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent.1737" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::DOM::Backend", %"class.blink::Member.565", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.1738" }
%"class.blink::protocol::DOM::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1738" = type { %"class.std::__1::__compressed_pair.1739" }
%"class.std::__1::__compressed_pair.1739" = type { %"struct.std::__1::__compressed_pair_elem.1740" }
%"struct.std::__1::__compressed_pair_elem.1740" = type { %"class.blink::protocol::DOM::Frontend"* }
%"class.blink::protocol::DOM::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.blink::HeapHashSet.1744" = type { %"class.WTF::HashSet.1747" }
%"class.WTF::HashSet.1747" = type { %"class.WTF::HashTable.1748" }
%"class.WTF::HashTable.1748" = type <{ %"class.blink::Member.1750"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1750" = type opaque
%"class.blink::Member.1751" = type { %"class.blink::MemberBase.1752" }
%"class.blink::MemberBase.1752" = type { %"class.blink::HeapHashMap.1753"* }
%"class.blink::HeapHashMap.1753" = type opaque
%"class.blink::HeapVector.1754" = type { %"class.WTF::Vector.1757" }
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759" }
%"class.WTF::VectorBufferBase.1759" = type { %"class.blink::Member.1751"*, i32, i32 }
%"class.blink::HeapHashMap.1761" = type { %"class.WTF::HashMap.1764" }
%"class.WTF::HashMap.1764" = type { %"class.WTF::HashTable.1765" }
%"class.WTF::HashTable.1765" = type <{ %"struct.WTF::KeyValuePair.1767"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1767" = type opaque
%"class.blink::HeapHashMap.1768" = type { %"class.WTF::HashMap.1771" }
%"class.WTF::HashMap.1771" = type { %"class.WTF::HashTable.1772" }
%"class.WTF::HashTable.1772" = type <{ %"struct.WTF::KeyValuePair.1774"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1774" = type opaque
%"class.blink::HeapHashMap.1775" = type { %"class.WTF::HashMap.1778" }
%"class.WTF::HashMap.1778" = type { %"class.WTF::HashTable.1779" }
%"class.WTF::HashTable.1779" = type <{ %"struct.WTF::KeyValuePair.1781"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1781" = type opaque
%"class.WTF::HashMap.1786" = type { %"class.WTF::HashTable.1787" }
%"class.WTF::HashTable.1787" = type <{ %"struct.WTF::KeyValuePair.1790"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1790" = type opaque
%"class.blink::HeapHashMap.1791" = type { %"class.WTF::HashMap.1794" }
%"class.WTF::HashMap.1794" = type { %"class.WTF::HashTable.1795" }
%"class.WTF::HashTable.1795" = type <{ %"struct.WTF::KeyValuePair.1797"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1797" = type opaque
%"class.blink::Member.1798" = type { %"class.blink::MemberBase.1799" }
%"class.blink::MemberBase.1799" = type { %"class.blink::InspectorRevalidateDOMTask"* }
%"class.blink::InspectorRevalidateDOMTask" = type opaque
%"class.blink::Member.1800" = type { %"class.blink::MemberBase.1801" }
%"class.blink::MemberBase.1801" = type { %"class.blink::InspectorHistory"* }
%"class.blink::InspectorHistory" = type opaque
%"class.blink::Member.1802" = type { %"class.blink::MemberBase.1803" }
%"class.blink::MemberBase.1803" = type { %"class.blink::DOMEditor"* }
%"class.blink::DOMEditor" = type opaque
%"class.blink::Member.1700" = type { %"class.blink::MemberBase.1701" }
%"class.blink::MemberBase.1701" = type { %"class.blink::InspectorResourceContentLoader"* }
%"class.blink::InspectorResourceContentLoader" = type opaque
%"class.blink::HeapHashMap.1815" = type { %"class.WTF::HashMap.1818" }
%"class.WTF::HashMap.1818" = type { %"class.WTF::HashTable.1819" }
%"class.WTF::HashTable.1819" = type <{ %"struct.WTF::KeyValuePair.1821"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1821" = type opaque
%"class.blink::HeapHashMap.1822" = type { %"class.WTF::HashMap.1825" }
%"class.WTF::HashMap.1825" = type { %"class.WTF::HashTable.1826" }
%"class.WTF::HashTable.1826" = type <{ %"struct.WTF::KeyValuePair.1828"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1828" = type opaque
%"class.blink::HeapHashMap.1829" = type { %"class.WTF::HashMap.1832" }
%"class.WTF::HashMap.1832" = type { %"class.WTF::HashTable.1833" }
%"class.WTF::HashTable.1833" = type <{ %"struct.WTF::KeyValuePair.1835"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1835" = type opaque
%"class.blink::HeapHashMap.1836" = type { %"class.WTF::HashMap.1839" }
%"class.WTF::HashMap.1839" = type { %"class.WTF::HashTable.1840" }
%"class.WTF::HashTable.1840" = type <{ %"struct.WTF::KeyValuePair.1842"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1842" = type opaque
%"class.blink::HeapHashSet.1843" = type { %"class.WTF::HashSet.1846" }
%"class.WTF::HashSet.1846" = type { %"class.WTF::HashTable.1847" }
%"class.WTF::HashTable.1847" = type <{ %"class.blink::Member.1128"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1849" = type { %"class.WTF::HashMap.1852" }
%"class.WTF::HashMap.1852" = type { %"class.WTF::HashTable.1853" }
%"class.WTF::HashTable.1853" = type <{ %"struct.WTF::KeyValuePair.1855"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1855" = type opaque
%"class.WTF::HashMap.1856" = type { %"class.WTF::HashTable.1857" }
%"class.WTF::HashTable.1857" = type <{ %"struct.WTF::KeyValuePair.1860"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1860" = type opaque
%"class.WTF::HashMap.1861" = type { %"class.WTF::HashTable.1862" }
%"class.WTF::HashTable.1862" = type <{ %"struct.WTF::KeyValuePair.1865"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1865" = type opaque
%"class.std::__1::unique_ptr.1866" = type { %"class.std::__1::__compressed_pair.1867" }
%"class.std::__1::__compressed_pair.1867" = type { %"struct.std::__1::__compressed_pair_elem.1868" }
%"struct.std::__1::__compressed_pair_elem.1868" = type { %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* }
%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback" = type { i32 (...)** }
%"class.WTF::HashSet.1782" = type { %"class.WTF::HashTable.1783" }
%"class.WTF::HashTable.1783" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapListHashSet.631" = type { %"class.WTF::ListHashSet.base.641", [7 x i8] }
%"class.WTF::ListHashSet.base.641" = type <{ %"class.WTF::HashTable.636", %"class.blink::Member.638", %"class.blink::Member.638", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.636" = type <{ %"class.blink::Member.638"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::HeapListHashSetNode.640"* }
%"class.blink::HeapListHashSetNode.640" = type { %"class.blink::Member.1735", %"class.blink::Member.638", %"class.blink::Member.638" }
%"class.blink::HeapListHashSet.642" = type { %"class.WTF::ListHashSet.base.652", [7 x i8] }
%"class.WTF::ListHashSet.base.652" = type <{ %"class.WTF::HashTable.647", %"class.blink::Member.649", %"class.blink::Member.649", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.647" = type <{ %"class.blink::Member.649"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.649" = type { %"class.blink::MemberBase.650" }
%"class.blink::MemberBase.650" = type { %"class.blink::HeapListHashSetNode.651"* }
%"class.blink::HeapListHashSetNode.651" = type { %"class.blink::Member.1731", %"class.blink::Member.649", %"class.blink::Member.649" }
%"class.blink::Member.1731" = type { %"class.blink::MemberBase.1732" }
%"class.blink::MemberBase.1732" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.653" = type { %"class.WTF::ListHashSet.base.663", [7 x i8] }
%"class.WTF::ListHashSet.base.663" = type <{ %"class.WTF::HashTable.658", %"class.blink::Member.660", %"class.blink::Member.660", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.658" = type <{ %"class.blink::Member.660"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::HeapListHashSetNode.662"* }
%"class.blink::HeapListHashSetNode.662" = type { %"class.blink::Member.1727", %"class.blink::Member.660", %"class.blink::Member.660" }
%"class.blink::Member.1727" = type { %"class.blink::MemberBase.1728" }
%"class.blink::MemberBase.1728" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.664" = type { %"class.WTF::ListHashSet.base.674", [7 x i8] }
%"class.WTF::ListHashSet.base.674" = type <{ %"class.WTF::HashTable.669", %"class.blink::Member.671", %"class.blink::Member.671", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.669" = type <{ %"class.blink::Member.671"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::HeapListHashSetNode.673"* }
%"class.blink::HeapListHashSetNode.673" = type { %"class.blink::Member.1723", %"class.blink::Member.671", %"class.blink::Member.671" }
%"class.blink::Member.1723" = type { %"class.blink::MemberBase.1724" }
%"class.blink::MemberBase.1724" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.675" = type { %"class.WTF::ListHashSet.base.685", [7 x i8] }
%"class.WTF::ListHashSet.base.685" = type <{ %"class.WTF::HashTable.680", %"class.blink::Member.682", %"class.blink::Member.682", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.680" = type <{ %"class.blink::Member.682"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::HeapListHashSetNode.684"* }
%"class.blink::HeapListHashSetNode.684" = type { %"class.blink::Member.1719", %"class.blink::Member.682", %"class.blink::Member.682" }
%"class.blink::HeapListHashSet.686" = type { %"class.WTF::ListHashSet.base.696", [7 x i8] }
%"class.WTF::ListHashSet.base.696" = type <{ %"class.WTF::HashTable.691", %"class.blink::Member.693", %"class.blink::Member.693", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.691" = type <{ %"class.blink::Member.693"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.693" = type { %"class.blink::MemberBase.694" }
%"class.blink::MemberBase.694" = type { %"class.blink::HeapListHashSetNode.695"* }
%"class.blink::HeapListHashSetNode.695" = type { %"class.blink::Member.1715", %"class.blink::Member.693", %"class.blink::Member.693" }
%"class.blink::Member.1715" = type { %"class.blink::MemberBase.1716" }
%"class.blink::MemberBase.1716" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.697" = type { %"class.WTF::ListHashSet.base.707", [7 x i8] }
%"class.WTF::ListHashSet.base.707" = type <{ %"class.WTF::HashTable.702", %"class.blink::Member.704", %"class.blink::Member.704", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.702" = type <{ %"class.blink::Member.704"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.704" = type { %"class.blink::MemberBase.705" }
%"class.blink::MemberBase.705" = type { %"class.blink::HeapListHashSetNode.706"* }
%"class.blink::HeapListHashSetNode.706" = type { %"class.blink::Member.1711", %"class.blink::Member.704", %"class.blink::Member.704" }
%"class.blink::Member.1711" = type { %"class.blink::MemberBase.1712" }
%"class.blink::MemberBase.1712" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.708" = type { %"class.WTF::ListHashSet.base.718", [7 x i8] }
%"class.WTF::ListHashSet.base.718" = type <{ %"class.WTF::HashTable.713", %"class.blink::Member.715", %"class.blink::Member.715", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.713" = type <{ %"class.blink::Member.715"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.715" = type { %"class.blink::MemberBase.716" }
%"class.blink::MemberBase.716" = type { %"class.blink::HeapListHashSetNode.717"* }
%"class.blink::HeapListHashSetNode.717" = type { %"class.blink::Member.1707", %"class.blink::Member.715", %"class.blink::Member.715" }
%"class.blink::Member.1707" = type { %"class.blink::MemberBase.1708" }
%"class.blink::MemberBase.1708" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.719" = type { %"class.WTF::ListHashSet.base.729", [7 x i8] }
%"class.WTF::ListHashSet.base.729" = type <{ %"class.WTF::HashTable.724", %"class.blink::Member.726", %"class.blink::Member.726", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.724" = type <{ %"class.blink::Member.726"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.726" = type { %"class.blink::MemberBase.727" }
%"class.blink::MemberBase.727" = type { %"class.blink::HeapListHashSetNode.728"* }
%"class.blink::HeapListHashSetNode.728" = type { %"class.blink::Member.561", %"class.blink::Member.726", %"class.blink::Member.726" }
%"class.blink::HeapListHashSet.730" = type { %"class.WTF::ListHashSet.base.740", [7 x i8] }
%"class.WTF::ListHashSet.base.740" = type <{ %"class.WTF::HashTable.735", %"class.blink::Member.737", %"class.blink::Member.737", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.735" = type <{ %"class.blink::Member.737"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::HeapListHashSetNode.739"* }
%"class.blink::HeapListHashSetNode.739" = type { %"class.blink::Member.1679", %"class.blink::Member.737", %"class.blink::Member.737" }
%"class.blink::Member.1679" = type { %"class.blink::MemberBase.1680" }
%"class.blink::MemberBase.1680" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type { %"class.blink::InspectorBaseAgent.1681", %"class.blink::Member.545", %"class.WTF::HashMap.1688", %"class.WTF::HashMap.840", %"class.blink::HeapHashMap.1693", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::InspectorPageAgent::Client"*, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1700", i8, i32, %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::MapField.845", %"class.blink::InspectorAgentState::MapField.845", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::SimpleField.1702", %"class.blink::InspectorAgentState::SimpleField.1702", %"class.blink::InspectorAgentState::SimpleField.1702", %"class.blink::InspectorAgentState::SimpleField.1702", %"class.blink::InspectorAgentState::SimpleField.1702", %"class.blink::InspectorAgentState::SimpleField.1702", %"class.blink::InspectorAgentState::SimpleField.1702", %"class.blink::InspectorAgentState::SimpleField.846", %"class.blink::InspectorAgentState::SimpleField.846", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent.1681" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Page::Backend", %"class.blink::Member.565", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.1682" }
%"class.blink::protocol::Page::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1682" = type { %"class.std::__1::__compressed_pair.1683" }
%"class.std::__1::__compressed_pair.1683" = type { %"struct.std::__1::__compressed_pair_elem.1684" }
%"struct.std::__1::__compressed_pair_elem.1684" = type { %"class.blink::protocol::Page::Frontend"* }
%"class.blink::protocol::Page::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.WTF::HashMap.1688" = type { %"class.WTF::HashTable.1689" }
%"class.WTF::HashTable.1689" = type <{ %"struct.WTF::KeyValuePair.1692"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1692" = type opaque
%"class.WTF::HashMap.840" = type { %"class.WTF::HashTable.841" }
%"class.WTF::HashTable.841" = type <{ %"struct.WTF::KeyValuePair.844"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.844" = type opaque
%"class.blink::HeapHashMap.1693" = type { %"class.WTF::HashMap.1696" }
%"class.WTF::HashMap.1696" = type { %"class.WTF::HashTable.1697" }
%"class.WTF::HashTable.1697" = type <{ %"struct.WTF::KeyValuePair.1699"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1699" = type opaque
%"class.blink::InspectorPageAgent::Client" = type { i32 (...)** }
%"class.blink::InspectorAgentState::SimpleField.1702" = type { %"class.blink::InspectorAgentState::Field", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr.788", %"class.mojo::StructPtr.788" }
%"class.mojo::StructPtr.788" = type { %"class.std::__1::unique_ptr.789" }
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap.792" }
%"class.WTF::HashMap.792" = type { %"class.WTF::HashTable.793" }
%"class.WTF::HashTable.793" = type <{ %"struct.WTF::KeyValuePair.796"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.796" = type { %"class.WTF::String", %"class.absl::optional.797" }
%"class.absl::optional.797" = type { %"class.absl::optional_internal::optional_data.798" }
%"class.absl::optional_internal::optional_data.798" = type { %"class.absl::optional_internal::optional_data_base.799" }
%"class.absl::optional_internal::optional_data_base.799" = type { %"class.absl::optional_internal::optional_data_dtor_base.800" }
%"class.absl::optional_internal::optional_data_dtor_base.800" = type { i8, %union.anon.801 }
%union.anon.801 = type { %"class.WTF::Vector.802" }
%"class.WTF::Vector.802" = type { %"class.WTF::VectorBuffer.803" }
%"class.WTF::VectorBuffer.803" = type { %"class.WTF::VectorBufferBase.343" }
%"class.WTF::VectorBufferBase.343" = type { i8*, i32, i32 }
%"class.blink::HeapListHashSet.741" = type { %"class.WTF::ListHashSet.base.751", [7 x i8] }
%"class.WTF::ListHashSet.base.751" = type <{ %"class.WTF::HashTable.746", %"class.blink::Member.748", %"class.blink::Member.748", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.746" = type <{ %"class.blink::Member.748"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.748" = type { %"class.blink::MemberBase.749" }
%"class.blink::MemberBase.749" = type { %"class.blink::HeapListHashSetNode.750"* }
%"class.blink::HeapListHashSetNode.750" = type { %"class.blink::Member.1675", %"class.blink::Member.748", %"class.blink::Member.748" }
%"class.blink::Member.1675" = type { %"class.blink::MemberBase.1676" }
%"class.blink::MemberBase.1676" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.752" = type { %"class.WTF::ListHashSet.base.762", [7 x i8] }
%"class.WTF::ListHashSet.base.762" = type <{ %"class.WTF::HashTable.757", %"class.blink::Member.759", %"class.blink::Member.759", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.757" = type <{ %"class.blink::Member.759"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.759" = type { %"class.blink::MemberBase.760" }
%"class.blink::MemberBase.760" = type { %"class.blink::HeapListHashSetNode.761"* }
%"class.blink::HeapListHashSetNode.761" = type { %"class.blink::Member.1671", %"class.blink::Member.759", %"class.blink::Member.759" }
%"class.blink::Member.1671" = type { %"class.blink::MemberBase.1672" }
%"class.blink::MemberBase.1672" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.763" = type { %"class.WTF::ListHashSet.base.773", [7 x i8] }
%"class.WTF::ListHashSet.base.773" = type <{ %"class.WTF::HashTable.768", %"class.blink::Member.770", %"class.blink::Member.770", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.768" = type <{ %"class.blink::Member.770"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::HeapListHashSetNode.772"* }
%"class.blink::HeapListHashSetNode.772" = type { %"class.blink::Member.1667", %"class.blink::Member.770", %"class.blink::Member.770" }
%"class.blink::HeapListHashSet.774" = type { %"class.WTF::ListHashSet.base.784", [7 x i8] }
%"class.WTF::ListHashSet.base.784" = type <{ %"class.WTF::HashTable.779", %"class.blink::Member.781", %"class.blink::Member.781", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.779" = type <{ %"class.blink::Member.781"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::HeapListHashSetNode.783"* }
%"class.blink::HeapListHashSetNode.783" = type { %"class.blink::Member.1663", %"class.blink::Member.781", %"class.blink::Member.781" }
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector.785" }
%"class.WTF::Vector.785" = type { %"class.WTF::VectorBuffer.786" }
%"class.WTF::VectorBuffer.786" = type { %"class.WTF::VectorBufferBase.787" }
%"class.WTF::VectorBufferBase.787" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.std::__1::unique_ptr.811" = type { %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.blink::protocol::Network::Frontend"* }
%"class.blink::protocol::Network::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::InspectedFrames"* }
%"class.blink::InspectedFrames" = type { i32 (...)**, %"class.blink::Member.549" }
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::WorkerGlobalScope"* }
%"class.blink::WorkerGlobalScope" = type opaque
%"class.v8_inspector::V8InspectorSession" = type { i32 (...)** }
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::NetworkResourcesData"* }
%"class.blink::NetworkResourcesData" = type opaque
%"class.absl::optional.821" = type { %"class.absl::optional_internal::optional_data.822" }
%"class.absl::optional_internal::optional_data.822" = type { %"class.absl::optional_internal::optional_data_base.823" }
%"class.absl::optional_internal::optional_data_base.823" = type { %"class.absl::optional_internal::optional_data_dtor_base.824" }
%"class.absl::optional_internal::optional_data_dtor_base.824" = type { i8, %union.anon.825 }
%union.anon.825 = type { i32 }
%"class.blink::Member.826" = type { %"class.blink::MemberBase.827" }
%"class.blink::MemberBase.827" = type { %"class.blink::XHRReplayData"* }
%"class.blink::XHRReplayData" = type opaque
%"class.WTF::HashMap.828" = type { %"class.WTF::HashTable.829" }
%"class.WTF::HashTable.829" = type <{ %"struct.WTF::KeyValuePair.832"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.832" = type opaque
%"class.blink::HeapHashSet.833" = type { %"class.WTF::HashSet.836" }
%"class.WTF::HashSet.836" = type { %"class.WTF::HashTable.837" }
%"class.WTF::HashTable.837" = type <{ %"class.blink::Member.839"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.839" = type opaque
%"class.blink::InspectorAgentState::MapField.845" = type { %"class.blink::InspectorAgentState::Field", %"class.WTF::String", %"class.WTF::HashMap.551" }
%"class.WTF::HashMap.551" = type { %"class.WTF::HashTable.552" }
%"class.WTF::HashTable.552" = type <{ %"struct.WTF::KeyValuePair.555"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.555" = type opaque
%"class.blink::InspectorAgentState::SimpleField" = type <{ %"class.blink::InspectorAgentState::Field", i8, i8, [6 x i8] }>
%"class.blink::InspectorAgentState::SimpleField.846" = type { %"class.blink::InspectorAgentState::Field", i32, i32 }
%"class.blink::InspectorAgentState::MapField" = type { %"class.blink::InspectorAgentState::Field", i8, [7 x i8], %"class.WTF::HashMap.840" }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.849", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1114, %"class.WTF::Vector.999", %"class.WTF::Vector.999", %"class.blink::Member.1115", %"class.blink::Member.1117", %"class.blink::HeapHashSet.1121", %"class.blink::Member.1128", %"class.WTF::HashSet.990", %"class.WTF::TextPosition", %"class.blink::Member.1130", %"class.blink::HeapVector.1132", %"class.blink::Member.1139" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.849" = type { %"class.blink::MemberBase.850" }
%"class.blink::MemberBase.850" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type <{ %"class.blink::Member.853", %"class.WTF::String", %"class.blink::HeapVector.855", %"class.blink::HeapVector.862", %"class.blink::HeapVector.870", %"class.WTF::HashMap.878", %"class.WTF::AtomicString", %"class.blink::WeakMember.883", i8, [7 x i8], %"class.blink::Member.885", %"class.blink::HeapHashSet.911", %"class.blink::HeapHashSet.911", %"class.blink::Member.918", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::Member.853" = type { %"class.blink::MemberBase.854" }
%"class.blink::MemberBase.854" = type { %"class.blink::StyleRuleImport"* }
%"class.blink::StyleRuleImport" = type opaque
%"class.blink::HeapVector.855" = type { %"class.WTF::Vector.858" }
%"class.WTF::Vector.858" = type { %"class.WTF::VectorBuffer.859" }
%"class.WTF::VectorBuffer.859" = type { %"class.WTF::VectorBufferBase.860" }
%"class.WTF::VectorBufferBase.860" = type { %"class.blink::Member.853"*, i32, i32 }
%"class.blink::HeapVector.862" = type { %"class.WTF::Vector.865" }
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"class.blink::Member.868"*, i32, i32 }
%"class.blink::Member.868" = type opaque
%"class.blink::HeapVector.870" = type { %"class.WTF::Vector.873" }
%"class.WTF::Vector.873" = type { %"class.WTF::VectorBuffer.874" }
%"class.WTF::VectorBuffer.874" = type { %"class.WTF::VectorBufferBase.875" }
%"class.WTF::VectorBufferBase.875" = type { %"class.blink::Member.876"*, i32, i32 }
%"class.blink::Member.876" = type opaque
%"class.WTF::HashMap.878" = type { %"class.WTF::HashTable.879" }
%"class.WTF::HashTable.879" = type <{ %"struct.WTF::KeyValuePair.882"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.882" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::WeakMember.883" = type { %"class.blink::MemberBase.884" }
%"class.blink::MemberBase.884" = type { %"class.blink::CSSStyleSheetResource"* }
%"class.blink::CSSStyleSheetResource" = type opaque
%"class.blink::Member.885" = type { %"class.blink::MemberBase.886" }
%"class.blink::MemberBase.886" = type { %"class.blink::CSSParserContext"* }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.895, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.909", i32, [4 x i8] }>
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::WeakMember.909" = type { %"class.blink::MemberBase.910" }
%"class.blink::MemberBase.910" = type { %"class.blink::Document"* }
%class.scoped_refptr.1114 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::HeapHashSet.1121" = type { %"class.WTF::HashSet.1124" }
%"class.WTF::HashSet.1124" = type { %"class.WTF::HashTable.1125" }
%"class.WTF::HashTable.1125" = type <{ %"class.blink::WeakMember.1127"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1127" = type { %"class.blink::MemberBase.1149" }
%"class.WTF::HashSet.990" = type { %"class.WTF::HashTable.991" }
%"class.WTF::HashTable.991" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.1130" = type { %"class.blink::MemberBase.1131" }
%"class.blink::MemberBase.1131" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.1114, %"class.blink::Member.847", %"class.blink::Member.1117" }
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::InspectorResourceContainer" = type { %"class.blink::Member.545", %"class.WTF::HashMap.551", %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type opaque
%"class.blink::InspectorStyleSheetForInlineStyle" = type { %"class.blink::InspectorStyleSheetBase", %"class.blink::Member.1171", %"class.blink::Member.2601" }
%"class.blink::Member.2601" = type { %"class.blink::MemberBase.2602" }
%"class.blink::MemberBase.2602" = type { %"class.blink::InspectorStyle"* }
%"class.blink::protocol::CSS::SourceRange" = type { %"class.crdtp::ProtocolObject", i32, i32, i32, i32 }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.blink::protocol::CSS::CSSStyle" = type { %"class.crdtp::ProtocolObject.281", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.305", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe" }
%"class.crdtp::ProtocolObject.281" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.287"*, %"class.std::__1::unique_ptr.287"*, %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::protocol::CSS::CSSProperty"* }
%"class.blink::protocol::CSS::CSSProperty" = type { %"class.crdtp::ProtocolObject.290", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.293", %"class.crdtp::detail::ValueMaybe.293", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe.293", %"class.crdtp::detail::ValueMaybe.293", %"class.crdtp::detail::PtrMaybe" }
%"class.crdtp::ProtocolObject.290" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.293" = type { i8, i8 }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.std::__1::unique_ptr.287"* }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.std::__1::vector.308"* }
%"class.std::__1::vector.308" = type { %"class.std::__1::__vector_base.309" }
%"class.std::__1::__vector_base.309" = type { %"class.std::__1::unique_ptr.310"*, %"class.std::__1::unique_ptr.310"*, %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::protocol::CSS::ShorthandEntry"* }
%"class.blink::protocol::CSS::ShorthandEntry" = type <{ %"class.crdtp::ProtocolObject.313", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.293", [6 x i8] }>
%"class.crdtp::ProtocolObject.313" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.std::__1::unique_ptr.310"* }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::protocol::CSS::SourceRange"* }
%"class.WTF::StringAppend" = type { %"class.WTF::String", i8* }
%"class.WTF::StringTypeAdapter.2756" = type { %"class.WTF::StringTypeAdapter.2757" }
%"class.WTF::StringTypeAdapter.2757" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.2754" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.340, i32, i8, i8, [2 x i8] }>
%union.anon.340 = type { %"class.WTF::Vector.341" }
%"class.WTF::Vector.341" = type { %"class.WTF::VectorBuffer.342" }
%"class.WTF::VectorBuffer.342" = type { %"class.WTF::VectorBufferBase.343", [16 x i8] }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2465" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2465" = type { %"class.v8::TracedReference.2466" }
%"class.v8::TracedReference.2466" = type { %"class.v8::BasicTracedReference.2467" }
%"class.v8::BasicTracedReference.2467" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::CSSStyleRule" = type { %"class.blink::CSSRule", %"class.blink::Member.939", %"class.blink::Member.2468", %"class.blink::Member.2470" }
%"class.blink::Member.2468" = type { %"class.blink::MemberBase.2469" }
%"class.blink::MemberBase.2469" = type { %"class.blink::StyleRuleCSSStyleDeclaration"* }
%"class.blink::StyleRuleCSSStyleDeclaration" = type opaque
%"class.blink::Member.2470" = type { %"class.blink::MemberBase.2471" }
%"class.blink::MemberBase.2471" = type { %"class.blink::StylePropertyMap"* }
%"class.blink::StylePropertyMap" = type { %"class.blink::StylePropertyMapReadOnlyMainThread" }
%"class.blink::StylePropertyMapReadOnlyMainThread" = type { %"class.blink::StylePropertyMapReadOnly" }
%"class.blink::StylePropertyMapReadOnly" = type { %"class.blink::ScriptWrappable", %"class.blink::PairIterable" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.WTF::StringAppend.2753" = type { %"class.WTF::StringAppend", %"class.WTF::String" }
%"class.WTF::StringAppend.2752" = type { %"class.WTF::StringAppend.2753", i8* }
%"class.blink::(anonymous namespace)::StyleSheetHandler" = type { %"class.blink::CSSParserObserver", %"class.WTF::String"*, %"class.blink::Document"*, %"class.blink::HeapVector"*, %"class.blink::HeapVector", %"class.blink::CSSRuleSourceData"* }
%"class.blink::CSSParserObserver" = type { i32 (...)** }
%"class.blink::CSSKeyframeRule" = type { %"class.blink::CSSRule", %"class.blink::Member.1034", %"class.blink::Member.2472" }
%"class.blink::Member.2472" = type { %"class.blink::MemberBase.2473" }
%"class.blink::MemberBase.2473" = type { %"class.blink::KeyframeStyleRuleCSSStyleDeclaration"* }
%"class.blink::KeyframeStyleRuleCSSStyleDeclaration" = type opaque
%"class.WTF::StringAppend.2476" = type { %"class.WTF::StringAppend.2477", i8* }
%"class.WTF::StringAppend.2477" = type { i8*, %"class.WTF::String" }
%"class.blink::CSSMediaRule" = type { %"class.blink::CSSConditionRule", %"class.blink::Member.1130" }
%"class.blink::CSSConditionRule" = type { %"class.blink::CSSGroupingRule" }
%"class.blink::CSSGroupingRule" = type { %"class.blink::CSSRule", %"class.blink::Member.2474", %"class.blink::HeapVector.1132", %"class.blink::Member.1139" }
%"class.blink::Member.2474" = type { %"class.blink::MemberBase.2475" }
%"class.blink::MemberBase.2475" = type { %"class.blink::StyleRuleGroup"* }
%"class.blink::StyleRuleGroup" = type { %"class.blink::StyleRuleBase", %"class.blink::HeapVector.870" }
%"class.WTF::StringAppend.2763" = type { %"class.WTF::StringAppend.2476", %"class.WTF::String" }
%"class.WTF::StringAppend.2762" = type { %"class.WTF::StringAppend.2763", i8* }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.std::__1::vector.2481" = type { %"class.std::__1::__vector_base.2482" }
%"class.std::__1::__vector_base.2482" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.2483" }
%"class.std::__1::__compressed_pair.2483" = type { %"struct.std::__1::__compressed_pair_elem.2484" }
%"struct.std::__1::__compressed_pair_elem.2484" = type { %"class.WTF::String"* }
%"struct.blink::CSSSelector::RareData" = type { %"class.WTF::RefCounted.947", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %union.anon.949, %"class.blink::QualifiedName", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.951", %"class.std::__1::unique_ptr.957" }
%"class.WTF::RefCounted.947" = type { %"class.base::RefCounted.948" }
%"class.base::RefCounted.948" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.949 = type { %struct.anon.950 }
%struct.anon.950 = type { i32, i32 }
%"class.std::__1::unique_ptr.951" = type { %"class.std::__1::__compressed_pair.952" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"struct.std::__1::__compressed_pair_elem.953" = type { %"class.blink::CSSSelectorList"* }
%"class.std::__1::unique_ptr.957" = type { %"class.std::__1::__compressed_pair.958" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"class.WTF::Vector.960"* }
%"class.WTF::Vector.960" = type { %"class.WTF::VectorBuffer.961" }
%"class.WTF::VectorBuffer.961" = type { %"class.WTF::VectorBufferBase.962" }
%"class.blink::CSSImportRule" = type { %"class.blink::CSSRule", %"class.blink::Member.853", %"class.blink::Member.1130", %"class.blink::Member.847" }
%"class.blink::CSSKeyframesRule" = type <{ %"class.blink::CSSRule", %"class.blink::Member.1026", %"class.blink::HeapVector.2865", %"class.blink::Member.1139", i8, [7 x i8] }>
%"class.blink::HeapVector.2865" = type { %"class.WTF::Vector.2868" }
%"class.WTF::Vector.2868" = type { %"class.WTF::VectorBuffer.2869" }
%"class.WTF::VectorBuffer.2869" = type { %"class.WTF::VectorBufferBase.2870" }
%"class.WTF::VectorBufferBase.2870" = type { %"class.blink::Member.2871"*, i32, i32 }
%"class.blink::Member.2871" = type opaque
%"class.blink::protocol::CSS::CSSStyleSheetHeader" = type { %"class.crdtp::ProtocolObject.2494", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.2497", i8, %"class.crdtp::detail::ValueMaybe.293", i8, i8, i8, double, double, double, double, double }
%"class.crdtp::ProtocolObject.2494" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.2497" = type { i8, i32 }
%"class.std::__1::vector.2518" = type { %"class.std::__1::__vector_base.2519" }
%"class.std::__1::__vector_base.2519" = type { %"class.std::__1::unique_ptr.2520"*, %"class.std::__1::unique_ptr.2520"*, %"class.std::__1::__compressed_pair.2529" }
%"class.std::__1::unique_ptr.2520" = type { %"class.std::__1::__compressed_pair.2521" }
%"class.std::__1::__compressed_pair.2521" = type { %"struct.std::__1::__compressed_pair_elem.2522" }
%"struct.std::__1::__compressed_pair_elem.2522" = type { %"class.blink::protocol::CSS::Value"* }
%"class.blink::protocol::CSS::Value" = type { %"class.crdtp::ProtocolObject.2523", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe" }
%"class.crdtp::ProtocolObject.2523" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.2529" = type { %"struct.std::__1::__compressed_pair_elem.2530" }
%"struct.std::__1::__compressed_pair_elem.2530" = type { %"class.std::__1::unique_ptr.2520"* }
%"class.blink::ScriptRegexp" = type { %"class.blink::TraceWrapperV8Reference.2539", %"class.WTF::String" }
%"class.blink::TraceWrapperV8Reference.2539" = type { %"class.v8::TracedReference.2540" }
%"class.v8::TracedReference.2540" = type { %"class.v8::BasicTracedReference.2541" }
%"class.v8::BasicTracedReference.2541" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::protocol::CSS::SelectorList" = type { %"class.crdtp::ProtocolObject.2546", %"class.std::__1::unique_ptr.2515", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2546" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2515" = type { %"class.std::__1::__compressed_pair.2516" }
%"class.std::__1::__compressed_pair.2516" = type { %"struct.std::__1::__compressed_pair_elem.2517" }
%"struct.std::__1::__compressed_pair_elem.2517" = type { %"class.std::__1::vector.2518"* }
%"class.blink::protocol::CSS::CSSRule" = type { %"class.crdtp::ProtocolObject.2557", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.2543", %"class.WTF::String", %"class.std::__1::unique_ptr.278", %"class.crdtp::detail::PtrMaybe.2560" }
%"class.crdtp::ProtocolObject.2557" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2543" = type { %"class.std::__1::__compressed_pair.2544" }
%"class.std::__1::__compressed_pair.2544" = type { %"struct.std::__1::__compressed_pair_elem.2545" }
%"struct.std::__1::__compressed_pair_elem.2545" = type { %"class.blink::protocol::CSS::SelectorList"* }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::protocol::CSS::CSSStyle"* }
%"class.crdtp::detail::PtrMaybe.2560" = type { %"class.std::__1::unique_ptr.2561" }
%"class.std::__1::unique_ptr.2561" = type { %"class.std::__1::__compressed_pair.2562" }
%"class.std::__1::__compressed_pair.2562" = type { %"struct.std::__1::__compressed_pair_elem.2563" }
%"struct.std::__1::__compressed_pair_elem.2563" = type { %"class.std::__1::vector.2564"* }
%"class.std::__1::vector.2564" = type { %"class.std::__1::__vector_base.2607" }
%"class.std::__1::__vector_base.2607" = type { %"class.std::__1::unique_ptr.2608"*, %"class.std::__1::unique_ptr.2608"*, %"class.std::__1::__compressed_pair.2625" }
%"class.std::__1::unique_ptr.2608" = type { %"class.std::__1::__compressed_pair.2609" }
%"class.std::__1::__compressed_pair.2609" = type { %"struct.std::__1::__compressed_pair_elem.2610" }
%"struct.std::__1::__compressed_pair_elem.2610" = type { %"class.blink::protocol::CSS::CSSMedia"* }
%"class.blink::protocol::CSS::CSSMedia" = type { %"class.crdtp::ProtocolObject.2611", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.2614" }
%"class.crdtp::ProtocolObject.2611" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2614" = type { %"class.std::__1::unique_ptr.2615" }
%"class.std::__1::unique_ptr.2615" = type { %"class.std::__1::__compressed_pair.2616" }
%"class.std::__1::__compressed_pair.2616" = type { %"struct.std::__1::__compressed_pair_elem.2617" }
%"struct.std::__1::__compressed_pair_elem.2617" = type { %"class.std::__1::vector.2618"* }
%"class.std::__1::vector.2618" = type { %"class.std::__1::__vector_base.2630" }
%"class.std::__1::__vector_base.2630" = type { %"class.std::__1::unique_ptr.2631"*, %"class.std::__1::unique_ptr.2631"*, %"class.std::__1::__compressed_pair.2647" }
%"class.std::__1::unique_ptr.2631" = type { %"class.std::__1::__compressed_pair.2632" }
%"class.std::__1::__compressed_pair.2632" = type { %"struct.std::__1::__compressed_pair_elem.2633" }
%"struct.std::__1::__compressed_pair_elem.2633" = type { %"class.blink::protocol::CSS::MediaQuery"* }
%"class.blink::protocol::CSS::MediaQuery" = type <{ %"class.crdtp::ProtocolObject.2634", %"class.std::__1::unique_ptr.2637", i8, [7 x i8] }>
%"class.crdtp::ProtocolObject.2634" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2637" = type { %"class.std::__1::__compressed_pair.2638" }
%"class.std::__1::__compressed_pair.2638" = type { %"struct.std::__1::__compressed_pair_elem.2639" }
%"struct.std::__1::__compressed_pair_elem.2639" = type { %"class.std::__1::vector.2640"* }
%"class.std::__1::vector.2640" = type { %"class.std::__1::__vector_base.2652" }
%"class.std::__1::__vector_base.2652" = type { %"class.std::__1::unique_ptr.2653"*, %"class.std::__1::unique_ptr.2653"*, %"class.std::__1::__compressed_pair.2663" }
%"class.std::__1::unique_ptr.2653" = type { %"class.std::__1::__compressed_pair.2654" }
%"class.std::__1::__compressed_pair.2654" = type { %"struct.std::__1::__compressed_pair_elem.2655" }
%"struct.std::__1::__compressed_pair_elem.2655" = type { %"class.blink::protocol::CSS::MediaQueryExpression"* }
%"class.blink::protocol::CSS::MediaQueryExpression" = type { %"class.crdtp::ProtocolObject.2656", double, %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::ValueMaybe.2659" }
%"class.crdtp::ProtocolObject.2656" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.2659" = type { i8, double }
%"class.std::__1::__compressed_pair.2663" = type { %"struct.std::__1::__compressed_pair_elem.2664" }
%"struct.std::__1::__compressed_pair_elem.2664" = type { %"class.std::__1::unique_ptr.2653"* }
%"class.std::__1::__compressed_pair.2647" = type { %"struct.std::__1::__compressed_pair_elem.2648" }
%"struct.std::__1::__compressed_pair_elem.2648" = type { %"class.std::__1::unique_ptr.2631"* }
%"class.std::__1::__compressed_pair.2625" = type { %"struct.std::__1::__compressed_pair_elem.2626" }
%"struct.std::__1::__compressed_pair_elem.2626" = type { %"class.std::__1::unique_ptr.2608"* }
%"class.blink::protocol::CSS::RuleUsage" = type <{ %"class.crdtp::ProtocolObject.2577", %"class.WTF::String", double, double, i8, [7 x i8] }>
%"class.crdtp::ProtocolObject.2577" = type { %"class.crdtp::Serializable" }
%"class.blink::protocol::CSS::CSSKeyframeRule" = type { %"class.crdtp::ProtocolObject.2590", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.278" }
%"class.crdtp::ProtocolObject.2590" = type { %"class.crdtp::Serializable" }
%"class.WTF::Vector.346" = type { %"class.WTF::VectorBuffer.347" }
%"class.WTF::VectorBuffer.347" = type { %"class.WTF::VectorBufferBase.348", [16 x i8] }
%"class.WTF::VectorBufferBase.348" = type { i16*, i32, i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::HeapVectorBacking.2849" = type { i8 }

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK5blink23InspectorStyleSheetBase5TraceEPNS_7VisitorE = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink11SourceRangeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink19InspectorStyleSheet13IsInlineStyleEv = comdat any

$_ZN5blink23InspectorStyleSheetBaseD2Ev = comdat any

$_ZN5blink33InspectorStyleSheetForInlineStyleD0Ev = comdat any

$_ZN5blink23InspectorStyleSheetBase12SourceMapURLEv = comdat any

$_ZN5blink33InspectorStyleSheetForInlineStyle13IsInlineStyleEv = comdat any

$_ZN5blink23InspectorStyleSheetBaseD0Ev = comdat any

$_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_ = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev = comdat any

$_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKNS_12AtomicStringESD_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17CSSRuleSourceDataEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17CSSRuleSourceDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17CSSRuleSourceDataEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17CSSRuleSourceDataEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink17CSSRuleSourceDataD2Ev = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17CSSRuleSourceDataEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink11SourceRangeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink11SourceRangeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11SourceRangeEEEmm = comdat any

$_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNSt3__16__sortIRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_ = comdat any

$_ZNSt3__17__sort4IRPFbRKN3WTF6StringES4_EPS2_EEjT0_S9_S9_S9_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbRKN3WTF6StringES4_EPS2_EEbT0_S9_T_ = comdat any

$_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EEjjEENS_18HashTableAddResultISD_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSE_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv = comdat any

$_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21CSSPropertySourceDataEEEmm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEEEPhm = comdat any

$_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_18StyleSheetContentsEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_18StyleSheetContentsEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERjSH_EENS_18HashTableAddResultISD_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_RS1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS14ShorthandEntryENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS11CSSPropertyENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN5blink10TraceTraitINS_19CSSStyleDeclarationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_23InspectorStyleSheetBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_26InspectorResourceContainerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_21InspectorNetworkAgentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_7CSSRuleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7CSSRuleEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12ScriptRegexpEE4CallIJRA12_KcN3WTF19TextCaseSensitivityENS_13MultilineModeEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12ScriptRegexpEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_12ScriptRegexpEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_12ScriptRegexpEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_12ScriptRegexpEE7GetNameEPKv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS5ValueENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN3WTF6VectorINS0_IN5blink11SourceRangeELj0ENS_18PartitionAllocatorEEELj0ES3_E2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14InspectorStyleEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14InspectorStyleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_14InspectorStyleEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink23InspectorStyleSheetBaseE = comdat any

$_ZZN5blink11GCInfoTraitINS_17CSSRuleSourceDataEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17CSSRuleSourceDataEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_12ScriptRegexpEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12ScriptRegexpEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14InspectorStyleEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14InspectorStyleEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [12 x i8] c" !important\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"initial\00", align 1
@_ZTVN5blink23InspectorStyleSheetBaseE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorStyleSheetBase"*)* @_ZN5blink23InspectorStyleSheetBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorStyleSheetBase"*)* @_ZN5blink23InspectorStyleSheetBaseD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::Visitor"*)* @_ZNK5blink23InspectorStyleSheetBase5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheetBase"*)* @_ZN5blink23InspectorStyleSheetBase12SourceMapURLEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink19InspectorStyleSheetE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorStyleSheet"*)* @_ZN5blink19InspectorStyleSheetD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorStyleSheet"*)* @_ZN5blink19InspectorStyleSheetD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorStyleSheet"*, %"class.blink::Visitor"*)* @_ZNK5blink19InspectorStyleSheet5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink19InspectorStyleSheet7SetTextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*)* @_ZN5blink19InspectorStyleSheet7GetTextEPN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheet"*)* @_ZN5blink19InspectorStyleSheet12SourceMapURLEv to i8*), i8* bitcast (%"class.blink::Document"* (%"class.blink::InspectorStyleSheet"*)* @_ZN5blink19InspectorStyleSheet11GetDocumentEv to i8*), i8* bitcast (i1 (%"class.blink::InspectorStyleSheet"*)* @_ZN5blink19InspectorStyleSheet13IsInlineStyleEv to i8*), i8* bitcast (%"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSStyleDeclaration"*)* @_ZN5blink19InspectorStyleSheet17GetInspectorStyleEPNS_19CSSStyleDeclarationE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [37 x i8] c"Selector or media text is not valid.\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"Source range didn't match existing source range\00", align 1
@.str.4 = private unnamed_addr constant [54 x i8] c"Source range didn't match existing style source range\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"Keyframe key text is not valid.\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"Style text is not valid.\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"The rule '\00", align 1
@.str.8 = private unnamed_addr constant [37 x i8] c"' could not be added in style sheet.\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"' could not be added in media rule.\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"Cannot insert rule inside rule selector.\00", align 1
@.str.11 = private unnamed_addr constant [38 x i8] c"Cannot insert rule in non-media rule.\00", align 1
@.str.12 = private unnamed_addr constant [32 x i8] c"Source range must be collapsed.\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"Rule text is not valid.\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"Style is read-only.\00", align 1
@.str.15 = private unnamed_addr constant [45 x i8] c"No style rule could be found in given range.\00", align 1
@.str.16 = private unnamed_addr constant [37 x i8] c"No parent stylesheet could be found.\00", align 1
@.str.17 = private unnamed_addr constant [40 x i8] c"Cannot remove rule from non-media rule.\00", align 1
@.str.18 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN5blink8protocol3CSS20StyleSheetOriginEnum9InspectorE = external constant [0 x i8], align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"/\5C*[^]*?\5C*/\00", align 1
@_ZN5blink8protocol3CSS20StyleSheetOriginEnum7RegularE = external constant [0 x i8], align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"sourceURL\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"sourceMappingURL\00", align 1
@_ZN5blink8protocol3CSS20StyleSheetOriginEnum8InjectedE = external constant [0 x i8], align 1
@_ZN5blink8protocol3CSS20StyleSheetOriginEnum9UserAgentE = external constant [0 x i8], align 1
@_ZTVN5blink33InspectorStyleSheetForInlineStyleE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorStyleSheetBase"*)* @_ZN5blink23InspectorStyleSheetBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorStyleSheetForInlineStyle"*)* @_ZN5blink33InspectorStyleSheetForInlineStyleD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::Visitor"*)* @_ZNK5blink33InspectorStyleSheetForInlineStyle5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink33InspectorStyleSheetForInlineStyle7SetTextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.WTF::String"*)* @_ZN5blink33InspectorStyleSheetForInlineStyle7GetTextEPN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheetBase"*)* @_ZN5blink23InspectorStyleSheetBase12SourceMapURLEv to i8*), i8* bitcast (%"class.blink::Document"* (%"class.blink::InspectorStyleSheetForInlineStyle"*)* @_ZN5blink33InspectorStyleSheetForInlineStyle11GetDocumentEv to i8*), i8* bitcast (i1 (%"class.blink::InspectorStyleSheetForInlineStyle"*)* @_ZN5blink33InspectorStyleSheetForInlineStyle13IsInlineStyleEv to i8*), i8* bitcast (%"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::CSSStyleDeclaration"*)* @_ZN5blink33InspectorStyleSheetForInlineStyle17GetInspectorStyleEPNS_19CSSStyleDeclarationE to i8*)] }, align 8
@.str.22 = private unnamed_addr constant [6 x i8] c"style\00", align 1
@_ZTVN5blink8protocol3CSS11SourceRangeE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3CSS11CSSPropertyE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3CSS14ShorthandEntryE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3CSS8CSSStyleE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.23 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.24 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.25 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.26 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.27 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZZN5blink12_GLOBAL__N_118VerifySelectorTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_118VerifySelectorTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name = internal global i64 0, align 8
@.str.28 = private unnamed_addr constant [4 x i8] c" { \00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c": none; }\00", align 1
@.str.30 = private unnamed_addr constant [24 x i8] c"-webkit-boguz-propertee\00", align 1
@.str.31 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.32 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.33 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c"@keyframes boguzAnim { \00", align 1
@.str.36 = private unnamed_addr constant [39 x i8] c" { -webkit-boguz-propertee : none; } }\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"div {\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@_ZZN5blink12_GLOBAL__N_115VerifyMediaTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_115VerifyMediaTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name = internal global i64 0, align 8
@.str.39 = private unnamed_addr constant [8 x i8] c"@media \00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c" { div { \00", align 1
@.str.41 = private unnamed_addr constant [12 x i8] c": none; } }\00", align 1
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZZN5blink12_GLOBAL__N_114VerifyRuleTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_114VerifyRuleTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name = internal global i64 0, align 8
@.str.42 = private unnamed_addr constant [8 x i8] c" div { \00", align 1
@.str.43 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.44 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZTVN5blink12_GLOBAL__N_117StyleSheetHandlerE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::StyleSheetHandler"*, i32, i32)* @_ZN5blink12_GLOBAL__N_117StyleSheetHandler15StartRuleHeaderENS_13StyleRuleBase8RuleTypeEj to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::StyleSheetHandler"*, i32)* @_ZN5blink12_GLOBAL__N_117StyleSheetHandler13EndRuleHeaderEj to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::StyleSheetHandler"*, i32, i32)* @_ZN5blink12_GLOBAL__N_117StyleSheetHandler15ObserveSelectorEjj to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::StyleSheetHandler"*, i32)* @_ZN5blink12_GLOBAL__N_117StyleSheetHandler13StartRuleBodyEj to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::StyleSheetHandler"*, i32)* @_ZN5blink12_GLOBAL__N_117StyleSheetHandler11EndRuleBodyEj to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::StyleSheetHandler"*, i32, i32, i1, i1)* @_ZN5blink12_GLOBAL__N_117StyleSheetHandler15ObservePropertyEjjbb to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::StyleSheetHandler"*, i32, i32)* @_ZN5blink12_GLOBAL__N_117StyleSheetHandler14ObserveCommentEjj to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17CSSRuleSourceDataEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSRuleSourceData]\00", align 1
@.str.45 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.46 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17CSSRuleSourceDataEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17CSSRuleSourceDataEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17CSSRuleSourceDataEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17CSSRuleSourceDataEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17CSSRuleSourceDataEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.47 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.48 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.49 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.50 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17CSSRuleSourceDataEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [175 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::CSSRuleSourceData>, WTF::VectorTraits<blink::Member<blink::CSSRuleSourceData> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11SourceRangeEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SourceRange]\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"*/\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"-moz-\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"-o-\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"-webkit-\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"-ms-\00", align 1
@_ZTVN5blink8protocol3CSS19CSSStyleSheetHeaderE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3CSS5ValueE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3CSS12SelectorListE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3CSS7CSSRuleE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3CSS9RuleUsageE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3CSS15CSSKeyframeRuleE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.56 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"\22' \09\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjjEEEEPKcv = private unnamed_addr constant [93 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<unsigned int, unsigned int>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserContext]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CSSPropertySourceDataEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSPropertySourceData]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_17CSSRuleSourceDataEEELj0EEEEEPKcv = private unnamed_addr constant [109 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVector<blink::Member<blink::CSSRuleSourceData>, 0>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18StyleSheetContentsEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::StyleSheetContents]\00", align 1
@_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_18StyleSheetContentsEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_18StyleSheetContentsEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<unsigned int, 0, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7CSSRuleEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::CSSRule>, WTF::VectorTraits<blink::Member<blink::CSSRule> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12ScriptRegexpEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptRegexp]\00", align 1
@_ZZN5blink11GCInfoTraitINS_12ScriptRegexpEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12ScriptRegexpEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12ScriptRegexpEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12ScriptRegexpEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12ScriptRegexpEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14InspectorStyleEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InspectorStyle]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14InspectorStyleEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14InspectorStyleEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14InspectorStyleEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14InspectorStyleEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink10html_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink9svg_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8

@_ZN5blink14InspectorStyleC1EPNS_19CSSStyleDeclarationEPNS_17CSSRuleSourceDataEPNS_23InspectorStyleSheetBaseE = hidden unnamed_addr alias void (%"class.blink::InspectorStyle"*, %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSRuleSourceData"*, %"class.blink::InspectorStyleSheetBase"*), void (%"class.blink::InspectorStyle"*, %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSRuleSourceData"*, %"class.blink::InspectorStyleSheetBase"*)* @_ZN5blink14InspectorStyleC2EPNS_19CSSStyleDeclarationEPNS_17CSSRuleSourceDataEPNS_23InspectorStyleSheetBaseE
@_ZN5blink19InspectorStyleSheetC1EPNS_21InspectorNetworkAgentEPNS_13CSSStyleSheetERKN3WTF6StringES8_PNS_23InspectorStyleSheetBase8ListenerEPNS_26InspectorResourceContainerE = hidden unnamed_addr alias void (%"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorNetworkAgent"*, %"class.blink::CSSStyleSheet"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorResourceContainer"*), void (%"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorNetworkAgent"*, %"class.blink::CSSStyleSheet"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorResourceContainer"*)* @_ZN5blink19InspectorStyleSheetC2EPNS_21InspectorNetworkAgentEPNS_13CSSStyleSheetERKN3WTF6StringES8_PNS_23InspectorStyleSheetBase8ListenerEPNS_26InspectorResourceContainerE
@_ZN5blink19InspectorStyleSheetD1Ev = hidden unnamed_addr alias void (%"class.blink::InspectorStyleSheet"*), void (%"class.blink::InspectorStyleSheet"*)* @_ZN5blink19InspectorStyleSheetD2Ev
@_ZN5blink33InspectorStyleSheetForInlineStyleC1EPNS_7ElementEPNS_23InspectorStyleSheetBase8ListenerE = hidden unnamed_addr alias void (%"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::Element"*, %"class.blink::InspectorStyleSheetBase::Listener"*), void (%"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::Element"*, %"class.blink::InspectorStyleSheetBase::Listener"*)* @_ZN5blink33InspectorStyleSheetForInlineStyleC2EPNS_7ElementEPNS_23InspectorStyleSheetBase8ListenerE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::CSS::SourceRange"* @_ZN5blink23InspectorStyleSheetBase22BuildSourceRangeObjectERKNS_11SourceRangeE(%"class.blink::InspectorStyleSheetBase"*, %"class.blink::SourceRange"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.WTF::Vector"* @_ZN5blink23InspectorStyleSheetBase14GetLineEndingsEv(%"class.blink::InspectorStyleSheetBase"* %0)
  %4 = icmp eq %"class.WTF::Vector"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = tail call i64 @_ZN3WTF12TextPosition24FromOffsetAndLineEndingsEjRKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(i32 %7, %"class.WTF::Vector"* nonnull dereferenceable(16) %3) #18
  %9 = trunc i64 %8 to i32
  %10 = lshr i64 %8, 32
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = tail call i64 @_ZN3WTF12TextPosition24FromOffsetAndLineEndingsEjRKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(i32 %13, %"class.WTF::Vector"* nonnull dereferenceable(16) %3) #18
  %15 = trunc i64 %14 to i32
  %16 = lshr i64 %14, 32
  %17 = trunc i64 %16 to i32
  %18 = tail call i8* @_Znwm(i64 24) #19
  %19 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS11SourceRangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %18, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 %9, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %18, i64 12
  %23 = bitcast i8* %22 to i32*
  store i32 %11, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %18, i64 16
  %25 = bitcast i8* %24 to i32*
  store i32 %15, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %18, i64 20
  %27 = bitcast i8* %26 to i32*
  store i32 %17, i32* %27, align 4
  %28 = bitcast i8* %18 to %"class.blink::protocol::CSS::SourceRange"*
  br label %29

29:                                               ; preds = %2, %5
  %30 = phi %"class.blink::protocol::CSS::SourceRange"* [ %28, %5 ], [ null, %2 ]
  ret %"class.blink::protocol::CSS::SourceRange"* %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::Vector"* @_ZN5blink23InspectorStyleSheetBase14GetLineEndingsEv(%"class.blink::InspectorStyleSheetBase"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheetBase", %"class.blink::InspectorStyleSheetBase"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %54

9:                                                ; preds = %1
  %10 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  %12 = bitcast %"class.blink::InspectorStyleSheetBase"* %0 to i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)***
  %13 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)**, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)** %13, i64 4
  %15 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)** %14, align 8
  %16 = call zeroext i1 %15(%"class.blink::InspectorStyleSheetBase"* %0, %"class.WTF::String"* nonnull %2) #18
  br i1 %16, label %17, label %36

17:                                               ; preds = %9
  %18 = call %"class.WTF::Vector"* @_ZN3WTF14GetLineEndingsERKNS_6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %2) #18
  %19 = ptrtoint %"class.WTF::Vector"* %18 to i64
  %20 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.2"* %3 to i64*
  store i64 %19, i64* %21, align 8
  %22 = icmp eq %"class.WTF::Vector"* %20, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %20, i64 0, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  %27 = bitcast i32* %25 to i8*
  br i1 %26, label %34, label %28, !prof !2

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %20, i64 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !3

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #18
  store i32* null, i32** %24, align 8
  br label %34

34:                                               ; preds = %33, %23
  %35 = bitcast %"class.WTF::Vector"* %20 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %35) #18
  br label %36

36:                                               ; preds = %17, %34, %9
  %37 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #18
  br label %53

53:                                               ; preds = %36, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #18
  br label %54

54:                                               ; preds = %1, %53
  %55 = phi %"class.WTF::Vector"* [ %37, %53 ], [ %5, %1 ]
  ret %"class.WTF::Vector"* %55
}

declare i64 @_ZN3WTF12TextPosition24FromOffsetAndLineEndingsEjRKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(i32, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink14InspectorStyleC2EPNS_19CSSStyleDeclarationEPNS_17CSSRuleSourceDataEPNS_23InspectorStyleSheetBaseE(%"class.blink::InspectorStyle"* nocapture, %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSRuleSourceData"*, %"class.blink::InspectorStyleSheetBase"*) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorStyle", %"class.blink::InspectorStyle"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSStyleDeclaration"* %1, %"class.blink::CSSStyleDeclaration"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::InspectorStyle", %"class.blink::InspectorStyle"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::CSSRuleSourceData"* %2, %"class.blink::CSSRuleSourceData"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::InspectorStyle", %"class.blink::InspectorStyle"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::InspectorStyleSheetBase"* %3, %"class.blink::InspectorStyleSheetBase"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink14InspectorStyle19BuildObjectForStyleEv(%"class.blink::InspectorStyle"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = tail call %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink14InspectorStyle19StyleWithPropertiesEv(%"class.blink::InspectorStyle"* %0)
  %4 = getelementptr inbounds %"class.blink::InspectorStyle", %"class.blink::InspectorStyle"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %4, align 8
  %6 = icmp eq %"class.blink::CSSRuleSourceData"* %5, null
  br i1 %6, label %209, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::InspectorStyle", %"class.blink::InspectorStyle"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %8, align 8
  %10 = icmp eq %"class.blink::InspectorStyleSheetBase"* %9, null
  br i1 %10, label %101, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::InspectorStyleSheetBase", %"class.blink::InspectorStyleSheetBase"* %9, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %101, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %32

22:                                               ; preds = %15
  %23 = zext i32 %21 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #18
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %22
  tail call void @llvm.trap() #18
  unreachable

30:                                               ; preds = %22
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %20, align 4
  br label %32

32:                                               ; preds = %15, %30
  %33 = phi i32 [ %31, %30 ], [ %21, %15 ]
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp ne i32 %35, 0
  %37 = load atomic i32, i32* %16 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %42 = add i32 %33, -1
  store i32 %42, i32* %41, align 4
  br label %43

43:                                               ; preds = %40, %32
  %44 = phi i32 [ %42, %40 ], [ %33, %32 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #18
  br i1 %36, label %48, label %101

47:                                               ; preds = %43
  br i1 %36, label %48, label %101

48:                                               ; preds = %46, %47
  %49 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %8, align 8
  %50 = getelementptr inbounds %"class.blink::InspectorStyleSheetBase", %"class.blink::InspectorStyleSheetBase"* %49, i64 0, i32 1, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %86, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #18
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !3

67:                                               ; preds = %58
  tail call void @llvm.trap() #18
  unreachable

68:                                               ; preds = %58
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %59, align 4
  br label %70

70:                                               ; preds = %53, %68
  %71 = load atomic i32, i32* %54 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %88

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i33
  %78 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #18
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !3

83:                                               ; preds = %74
  tail call void @llvm.trap() #18
  unreachable

84:                                               ; preds = %74
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %75, align 4
  br label %88

86:                                               ; preds = %48
  %87 = getelementptr inbounds %"class.blink::protocol::CSS::CSSStyle", %"class.blink::protocol::CSS::CSSStyle"* %3, i64 0, i32 1
  tail call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %87, %"class.WTF::StringImpl"* null) #18
  br label %101

88:                                               ; preds = %70, %84
  %89 = getelementptr inbounds %"class.blink::protocol::CSS::CSSStyle", %"class.blink::protocol::CSS::CSSStyle"* %3, i64 0, i32 1
  tail call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %89, %"class.WTF::StringImpl"* nonnull %51) #18
  %90 = load atomic i32, i32* %54 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #18
  br label %101

101:                                              ; preds = %7, %11, %100, %97, %86, %46, %47
  %102 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %8, align 8
  %103 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %4, align 8
  %104 = tail call %"class.WTF::Vector"* @_ZN5blink23InspectorStyleSheetBase14GetLineEndingsEv(%"class.blink::InspectorStyleSheetBase"* %102) #18
  %105 = icmp eq %"class.WTF::Vector"* %104, null
  br i1 %105, label %130, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %103, i64 0, i32 2, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = tail call i64 @_ZN3WTF12TextPosition24FromOffsetAndLineEndingsEjRKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(i32 %108, %"class.WTF::Vector"* nonnull dereferenceable(16) %104) #18
  %110 = trunc i64 %109 to i32
  %111 = lshr i64 %109, 32
  %112 = trunc i64 %111 to i32
  %113 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %103, i64 0, i32 2, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = tail call i64 @_ZN3WTF12TextPosition24FromOffsetAndLineEndingsEjRKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(i32 %114, %"class.WTF::Vector"* nonnull dereferenceable(16) %104) #18
  %116 = trunc i64 %115 to i32
  %117 = lshr i64 %115, 32
  %118 = trunc i64 %117 to i32
  %119 = tail call i8* @_Znwm(i64 24) #19
  %120 = bitcast i8* %119 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS11SourceRangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds i8, i8* %119, i64 8
  %122 = bitcast i8* %121 to i32*
  store i32 %110, i32* %122, align 8
  %123 = getelementptr inbounds i8, i8* %119, i64 12
  %124 = bitcast i8* %123 to i32*
  store i32 %112, i32* %124, align 4
  %125 = getelementptr inbounds i8, i8* %119, i64 16
  %126 = bitcast i8* %125 to i32*
  store i32 %116, i32* %126, align 8
  %127 = getelementptr inbounds i8, i8* %119, i64 20
  %128 = bitcast i8* %127 to i32*
  store i32 %118, i32* %128, align 4
  %129 = ptrtoint i8* %119 to i64
  br label %130

130:                                              ; preds = %101, %106
  %131 = phi i64 [ %129, %106 ], [ 0, %101 ]
  %132 = getelementptr inbounds %"class.blink::protocol::CSS::CSSStyle", %"class.blink::protocol::CSS::CSSStyle"* %3, i64 0, i32 5
  %133 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe"* %132, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load %"class.blink::protocol::CSS::SourceRange"*, %"class.blink::protocol::CSS::SourceRange"** %133, align 8
  %135 = bitcast %"class.crdtp::detail::PtrMaybe"* %132 to i64*
  store i64 %131, i64* %135, align 8
  %136 = icmp eq %"class.blink::protocol::CSS::SourceRange"* %134, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %130
  %138 = bitcast %"class.blink::protocol::CSS::SourceRange"* %134 to void (%"class.blink::protocol::CSS::SourceRange"*)***
  %139 = load void (%"class.blink::protocol::CSS::SourceRange"*)**, void (%"class.blink::protocol::CSS::SourceRange"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %139, i64 2
  %141 = load void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %140, align 8
  tail call void %141(%"class.blink::protocol::CSS::SourceRange"* nonnull %134) #18
  br label %142

142:                                              ; preds = %130, %137
  %143 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #18
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %144, align 8
  %145 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %8, align 8
  %146 = bitcast %"class.blink::InspectorStyleSheetBase"* %145 to i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)***
  %147 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)**, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*** %146, align 8
  %148 = getelementptr inbounds i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)** %147, i64 4
  %149 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)** %148, align 8
  %150 = call zeroext i1 %149(%"class.blink::InspectorStyleSheetBase"* %145, %"class.WTF::String"* nonnull %2) #18
  br i1 %150, label %151, label %192

151:                                              ; preds = %142
  %152 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %4, align 8
  %153 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %152, i64 0, i32 2, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %152, i64 0, i32 2, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = sub i32 %156, %154
  %158 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %2, i32 %154, i32 %157) #18
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %177, label %160

160:                                              ; preds = %151
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %179

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = zext i32 %167 to i33
  %169 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %168, i33 1) #18
  %170 = extractvalue { i33, i1 } %169, 1
  %171 = extractvalue { i33, i1 } %169, 0
  %172 = icmp slt i33 %171, 0
  %173 = or i1 %170, %172
  br i1 %173, label %174, label %175, !prof !3

174:                                              ; preds = %165
  call void @llvm.trap() #18
  unreachable

175:                                              ; preds = %165
  %176 = trunc i33 %171 to i32
  store i32 %176, i32* %166, align 4
  br label %179

177:                                              ; preds = %151
  %178 = getelementptr inbounds %"class.blink::protocol::CSS::CSSStyle", %"class.blink::protocol::CSS::CSSStyle"* %3, i64 0, i32 4
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %178, %"class.WTF::StringImpl"* null) #18
  br label %192

179:                                              ; preds = %160, %175
  %180 = getelementptr inbounds %"class.blink::protocol::CSS::CSSStyle", %"class.blink::protocol::CSS::CSSStyle"* %3, i64 0, i32 4
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %180, %"class.WTF::StringImpl"* nonnull %158) #18
  %181 = load atomic i32, i32* %161 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #18
  br label %192

192:                                              ; preds = %191, %188, %177, %142
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %192
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #18
  br label %208

208:                                              ; preds = %192, %204, %207
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #18
  br label %209

209:                                              ; preds = %1, %208
  ret %"class.blink::protocol::CSS::CSSStyle"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink14InspectorStyle19StyleWithPropertiesEv(%"class.blink::InspectorStyle"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::HashSet.330", align 8
  %3 = alloca %"class.WTF::Vector.26", align 8
  %4 = alloca %"class.std::__1::unique_ptr.287", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.std::__1::unique_ptr.310", align 8
  %8 = tail call i8* @_Znwm(i64 24) #19
  %9 = bitcast i8* %8 to %"class.std::__1::vector"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #18
  %10 = ptrtoint i8* %8 to i64
  %11 = tail call i8* @_Znwm(i64 24) #19
  %12 = bitcast i8* %11 to %"class.std::__1::vector.308"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #18
  %13 = ptrtoint i8* %11 to i64
  %14 = bitcast %"class.WTF::HashSet.330"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #18
  %15 = getelementptr inbounds %"class.WTF::HashSet.330", %"class.WTF::HashSet.330"* %2, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::HashSet.330", %"class.WTF::HashSet.330"* %2, i64 0, i32 0, i32 1
  %17 = bitcast %"class.WTF::HashSet.330"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 20, i1 false) #18
  %18 = bitcast %"class.WTF::Vector.26"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #18
  %19 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %3, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #18
  call void @_ZN5blink14InspectorStyle21PopulateAllPropertiesERN3WTF6VectorINS_21CSSPropertySourceDataELj0ENS1_18PartitionAllocatorEEE(%"class.blink::InspectorStyle"* %0, %"class.WTF::Vector.26"* nonnull dereferenceable(16) %3)
  %21 = load %"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"** %19, align 8
  %22 = load i32, i32* %20, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %21, i64 %23
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %52, label %26

26:                                               ; preds = %1
  %27 = bitcast %"class.std::__1::unique_ptr.287"* %4 to i8*
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::unique_ptr.287"* %4 to i8**
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::InspectorStyle", %"class.blink::InspectorStyle"* %0, i64 0, i32 2, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::InspectorStyle", %"class.blink::InspectorStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.WTF::String"* %6 to i8*
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.WTF::HashSet.330", %"class.WTF::HashSet.330"* %2, i64 0, i32 0
  %37 = bitcast %"class.std::__1::unique_ptr.310"* %7 to i8*
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %7, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::unique_ptr.310"* %7 to i8**
  %40 = getelementptr inbounds i8, i8* %11, i64 8
  %41 = bitcast i8* %40 to %"class.std::__1::unique_ptr.310"**
  %42 = getelementptr inbounds i8, i8* %11, i64 16
  %43 = bitcast i8* %42 to %"class.std::__1::unique_ptr.310"**
  %44 = bitcast %"class.std::__1::unique_ptr.310"* %7 to i64*
  %45 = bitcast i8* %40 to i64*
  %46 = getelementptr inbounds i8, i8* %8, i64 8
  %47 = bitcast i8* %46 to %"class.std::__1::unique_ptr.287"**
  %48 = getelementptr inbounds i8, i8* %8, i64 16
  %49 = bitcast i8* %48 to %"class.std::__1::unique_ptr.287"**
  %50 = bitcast %"class.std::__1::unique_ptr.287"* %4 to i64*
  %51 = bitcast i8* %46 to i64*
  br label %150

52:                                               ; preds = %577, %1
  %53 = call i8* @_Znwm(i64 64) #19
  %54 = bitcast i8* %53 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS8CSSStyleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds i8, i8* %53, i64 8
  store i8 0, i8* %55, align 8
  %56 = getelementptr inbounds i8, i8* %53, i64 16
  %57 = getelementptr inbounds i8, i8* %53, i64 48
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 25, i1 false) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #18
  %58 = bitcast i8* %53 to %"class.blink::protocol::CSS::CSSStyle"*
  %59 = getelementptr inbounds i8, i8* %53, i64 24
  %60 = bitcast i8* %59 to i64*
  store i64 %10, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %53, i64 32
  %62 = bitcast i8* %61 to i64*
  store i64 %13, i64* %62, align 8
  %63 = load %"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"** %19, align 8
  %64 = icmp eq %"class.blink::CSSPropertySourceData"* %63, null
  br i1 %64, label %115, label %65, !prof !2

65:                                               ; preds = %52
  %66 = bitcast %"class.blink::CSSPropertySourceData"* %63 to i8*
  %67 = load i32, i32* %20, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %113, label %69, !prof !3

69:                                               ; preds = %65
  %70 = zext i32 %67 to i64
  %71 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %63, i64 %70
  br label %72

72:                                               ; preds = %69, %107
  %73 = phi %"class.blink::CSSPropertySourceData"* [ %108, %107 ], [ %63, %69 ]
  %74 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %73, i64 0, i32 1, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #18
  br label %90

90:                                               ; preds = %89, %86, %72
  %91 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %73, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #18
  br label %107

107:                                              ; preds = %106, %103, %90
  %108 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %73, i64 1
  %109 = icmp eq %"class.blink::CSSPropertySourceData"* %108, %71
  br i1 %109, label %110, label %72

110:                                              ; preds = %107
  store i32 0, i32* %20, align 4
  %111 = bitcast %"class.WTF::Vector.26"* %3 to i8**
  %112 = load i8*, i8** %111, align 8
  br label %113

113:                                              ; preds = %110, %65
  %114 = phi i8* [ %112, %110 ], [ %66, %65 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %114) #18
  store %"class.blink::CSSPropertySourceData"* null, %"class.blink::CSSPropertySourceData"** %19, align 8
  br label %115

115:                                              ; preds = %52, %113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #18
  %116 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %117 = icmp eq %"class.WTF::String"* %116, null
  br i1 %117, label %149, label %118, !prof !2

118:                                              ; preds = %115
  %119 = load i32, i32* %16, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %147, label %121

121:                                              ; preds = %118
  %122 = zext i32 %119 to i64
  br label %123

123:                                              ; preds = %144, %121
  %124 = phi i64 [ 0, %121 ], [ %145, %144 ]
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 %124
  %126 = bitcast %"class.WTF::String"* %125 to i8**
  %127 = load i8*, i8** %126, align 8
  %128 = bitcast i8* %127 to %"class.WTF::StringImpl"*
  %129 = ptrtoint i8* %127 to i64
  switch i64 %129, label %130 [
    i64 -1, label %144
    i64 0, label %144
  ]

130:                                              ; preds = %123
  %131 = getelementptr inbounds i8, i8* %127, i64 8
  %132 = bitcast i8* %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = bitcast i8* %127 to i32*
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %130
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %130
  %141 = phi i32 [ %139, %138 ], [ %137, %130 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #18
  br label %144

144:                                              ; preds = %143, %140, %123, %123
  %145 = add nuw nsw i64 %124, 1
  %146 = icmp eq i64 %145, %122
  br i1 %146, label %147, label %123

147:                                              ; preds = %144, %118
  %148 = bitcast %"class.WTF::String"* %116 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %148) #18
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %149

149:                                              ; preds = %115, %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #18
  ret %"class.blink::protocol::CSS::CSSStyle"* %58

150:                                              ; preds = %26, %577
  %151 = phi %"class.blink::CSSPropertySourceData"* [ %21, %26 ], [ %578, %577 ]
  %152 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %151, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #18
  store %"class.blink::protocol::CSS::CSSProperty"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::CSS::CSSProperty"*), %"class.blink::protocol::CSS::CSSProperty"** %28, align 8
  %153 = call i8* @_Znwm(i64 64) #19
  %154 = bitcast i8* %153 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS11CSSPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %154, align 8
  %155 = getelementptr inbounds i8, i8* %153, i64 8
  %156 = getelementptr inbounds i8, i8* %153, i64 32
  store i8 0, i8* %156, align 8
  %157 = getelementptr inbounds i8, i8* %153, i64 40
  %158 = getelementptr inbounds i8, i8* %153, i64 56
  %159 = bitcast i8* %158 to i64*
  store i64 0, i64* %159, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 20, i1 false) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %157, i8 0, i64 12, i1 false) #18
  %160 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %151, i64 0, i32 0, i32 0, i32 0
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %178, label %163

163:                                              ; preds = %150
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %178

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = zext i32 %170 to i33
  %172 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %171, i33 1) #18
  %173 = extractvalue { i33, i1 } %172, 1
  %174 = extractvalue { i33, i1 } %172, 0
  %175 = icmp slt i33 %174, 0
  %176 = or i1 %173, %175
  br i1 %176, label %177, label %181, !prof !3

177:                                              ; preds = %168
  call void @llvm.trap() #18
  unreachable

178:                                              ; preds = %163, %150
  %179 = ptrtoint %"class.WTF::StringImpl"* %161 to i64
  %180 = bitcast i8* %155 to i64*
  store i64 %179, i64* %180, align 8
  br label %201

181:                                              ; preds = %168
  %182 = trunc i33 %174 to i32
  store i32 %182, i32* %169, align 4
  %183 = bitcast i8* %155 to %"class.WTF::StringImpl"**
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %185 = ptrtoint %"class.WTF::StringImpl"* %161 to i64
  %186 = bitcast i8* %155 to i64*
  store i64 %185, i64* %186, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %181
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #18
  br label %201

201:                                              ; preds = %178, %181, %197, %200
  %202 = getelementptr inbounds i8, i8* %153, i64 16
  %203 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %151, i64 0, i32 1, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %223, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %223

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = zext i32 %213 to i33
  %215 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %214, i33 1) #18
  %216 = extractvalue { i33, i1 } %215, 1
  %217 = extractvalue { i33, i1 } %215, 0
  %218 = icmp slt i33 %217, 0
  %219 = or i1 %216, %218
  br i1 %219, label %220, label %221, !prof !3

220:                                              ; preds = %211
  call void @llvm.trap() #18
  unreachable

221:                                              ; preds = %211
  %222 = trunc i33 %217 to i32
  store i32 %222, i32* %212, align 4
  br label %223

223:                                              ; preds = %221, %206, %201
  %224 = ptrtoint %"class.WTF::StringImpl"* %204 to i64
  %225 = bitcast i8* %202 to i64*
  %226 = bitcast i8* %202 to %"class.WTF::StringImpl"**
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  store i64 %224, i64* %225, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %223
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #18
  br label %242

242:                                              ; preds = %241, %238, %223
  store i8* %153, i8** %29, align 8
  %243 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %151, i64 0, i32 4
  %244 = load i8, i8* %243, align 2, !range !4
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %246, label %249

246:                                              ; preds = %242
  %247 = getelementptr inbounds i8, i8* %153, i64 49
  store i8 0, i8* %247, align 1
  %248 = getelementptr inbounds i8, i8* %153, i64 48
  store i8 1, i8* %248, align 1
  br label %249

249:                                              ; preds = %242, %246
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #18
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  %250 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %151, i64 0, i32 6
  %251 = call i32 @_ZNK5blink11SourceRange6lengthEv(%"class.blink::SourceRange"* %250) #18
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %278, label %253

253:                                              ; preds = %249
  %254 = call zeroext i1 @_ZN5blink14InspectorStyle12TextForRangeERKNS_11SourceRangeEPN3WTF6StringE(%"class.blink::InspectorStyle"* %0, %"class.blink::SourceRange"* dereferenceable(8) %250, %"class.WTF::String"* nonnull %5)
  br i1 %254, label %255, label %278

255:                                              ; preds = %253
  %256 = load %"class.blink::protocol::CSS::CSSProperty"*, %"class.blink::protocol::CSS::CSSProperty"** %28, align 8
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %258, label %276, label %259

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %276

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  %267 = zext i32 %266 to i33
  %268 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %267, i33 1) #18
  %269 = extractvalue { i33, i1 } %268, 1
  %270 = extractvalue { i33, i1 } %268, 0
  %271 = icmp slt i33 %270, 0
  %272 = or i1 %269, %271
  br i1 %272, label %273, label %274, !prof !3

273:                                              ; preds = %264
  call void @llvm.trap() #18
  unreachable

274:                                              ; preds = %264
  %275 = trunc i33 %270 to i32
  store i32 %275, i32* %265, align 4
  br label %276

276:                                              ; preds = %255, %259, %274
  %277 = getelementptr inbounds %"class.blink::protocol::CSS::CSSProperty", %"class.blink::protocol::CSS::CSSProperty"* %256, i64 0, i32 5
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %277, %"class.WTF::StringImpl"* %257) #18
  br label %278

278:                                              ; preds = %249, %276, %253
  %279 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %151, i64 0, i32 2
  %280 = load i8, i8* %279, align 8, !range !4
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %286, label %282

282:                                              ; preds = %278
  %283 = load %"class.blink::protocol::CSS::CSSProperty"*, %"class.blink::protocol::CSS::CSSProperty"** %28, align 8
  %284 = getelementptr inbounds %"class.blink::protocol::CSS::CSSProperty", %"class.blink::protocol::CSS::CSSProperty"* %283, i64 0, i32 3, i32 1
  store i8 1, i8* %284, align 1
  %285 = getelementptr inbounds %"class.blink::protocol::CSS::CSSProperty", %"class.blink::protocol::CSS::CSSProperty"* %283, i64 0, i32 3, i32 0
  store i8 1, i8* %285, align 1
  br label %286

286:                                              ; preds = %278, %282
  %287 = call i32 @_ZNK5blink11SourceRange6lengthEv(%"class.blink::SourceRange"* %250) #18
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %348, label %289

289:                                              ; preds = %286
  %290 = load %"class.blink::protocol::CSS::CSSProperty"*, %"class.blink::protocol::CSS::CSSProperty"** %28, align 8
  %291 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %32, align 8
  %292 = icmp eq %"class.blink::InspectorStyleSheetBase"* %291, null
  br i1 %292, label %323, label %293

293:                                              ; preds = %289
  %294 = call %"class.WTF::Vector"* @_ZN5blink23InspectorStyleSheetBase14GetLineEndingsEv(%"class.blink::InspectorStyleSheetBase"* nonnull %291) #18
  %295 = icmp eq %"class.WTF::Vector"* %294, null
  br i1 %295, label %320, label %296

296:                                              ; preds = %293
  %297 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %250, i64 0, i32 0
  %298 = load i32, i32* %297, align 4
  %299 = call i64 @_ZN3WTF12TextPosition24FromOffsetAndLineEndingsEjRKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(i32 %298, %"class.WTF::Vector"* nonnull dereferenceable(16) %294) #18
  %300 = trunc i64 %299 to i32
  %301 = lshr i64 %299, 32
  %302 = trunc i64 %301 to i32
  %303 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %151, i64 0, i32 6, i32 1
  %304 = load i32, i32* %303, align 4
  %305 = call i64 @_ZN3WTF12TextPosition24FromOffsetAndLineEndingsEjRKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(i32 %304, %"class.WTF::Vector"* nonnull dereferenceable(16) %294) #18
  %306 = trunc i64 %305 to i32
  %307 = lshr i64 %305, 32
  %308 = trunc i64 %307 to i32
  %309 = call i8* @_Znwm(i64 24) #19
  %310 = bitcast i8* %309 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS11SourceRangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %310, align 8
  %311 = getelementptr inbounds i8, i8* %309, i64 8
  %312 = bitcast i8* %311 to i32*
  store i32 %300, i32* %312, align 8
  %313 = getelementptr inbounds i8, i8* %309, i64 12
  %314 = bitcast i8* %313 to i32*
  store i32 %302, i32* %314, align 4
  %315 = getelementptr inbounds i8, i8* %309, i64 16
  %316 = bitcast i8* %315 to i32*
  store i32 %306, i32* %316, align 8
  %317 = getelementptr inbounds i8, i8* %309, i64 20
  %318 = bitcast i8* %317 to i32*
  store i32 %308, i32* %318, align 4
  %319 = bitcast i8* %309 to %"class.blink::protocol::CSS::SourceRange"*
  br label %320

320:                                              ; preds = %293, %296
  %321 = phi %"class.blink::protocol::CSS::SourceRange"* [ %319, %296 ], [ null, %293 ]
  %322 = ptrtoint %"class.blink::protocol::CSS::SourceRange"* %321 to i64
  br label %323

323:                                              ; preds = %289, %320
  %324 = phi i64 [ %322, %320 ], [ 0, %289 ]
  %325 = getelementptr inbounds %"class.blink::protocol::CSS::CSSProperty", %"class.blink::protocol::CSS::CSSProperty"* %290, i64 0, i32 8
  %326 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe"* %325, i64 0, i32 0, i32 0, i32 0, i32 0
  %327 = load %"class.blink::protocol::CSS::SourceRange"*, %"class.blink::protocol::CSS::SourceRange"** %326, align 8
  %328 = bitcast %"class.crdtp::detail::PtrMaybe"* %325 to i64*
  store i64 %324, i64* %328, align 8
  %329 = icmp eq %"class.blink::protocol::CSS::SourceRange"* %327, null
  br i1 %329, label %335, label %330

330:                                              ; preds = %323
  %331 = bitcast %"class.blink::protocol::CSS::SourceRange"* %327 to void (%"class.blink::protocol::CSS::SourceRange"*)***
  %332 = load void (%"class.blink::protocol::CSS::SourceRange"*)**, void (%"class.blink::protocol::CSS::SourceRange"*)*** %331, align 8
  %333 = getelementptr inbounds void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %332, i64 2
  %334 = load void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %333, align 8
  call void %334(%"class.blink::protocol::CSS::SourceRange"* nonnull %327) #18
  br label %335

335:                                              ; preds = %323, %330
  %336 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %151, i64 0, i32 3
  %337 = load i8, i8* %336, align 1, !range !4
  %338 = icmp eq i8 %337, 0
  %339 = load %"class.blink::protocol::CSS::CSSProperty"*, %"class.blink::protocol::CSS::CSSProperty"** %28, align 8
  br i1 %338, label %340, label %344

340:                                              ; preds = %335
  %341 = getelementptr inbounds %"class.blink::protocol::CSS::CSSProperty", %"class.blink::protocol::CSS::CSSProperty"* %339, i64 0, i32 4, i32 1
  store i8 0, i8* %341, align 1
  %342 = getelementptr inbounds %"class.blink::protocol::CSS::CSSProperty", %"class.blink::protocol::CSS::CSSProperty"* %339, i64 0, i32 4, i32 0
  store i8 1, i8* %342, align 1
  %343 = load i8, i8* %336, align 1, !range !4
  br label %344

344:                                              ; preds = %335, %340
  %345 = phi i8 [ %343, %340 ], [ 1, %335 ]
  %346 = getelementptr inbounds %"class.blink::protocol::CSS::CSSProperty", %"class.blink::protocol::CSS::CSSProperty"* %339, i64 0, i32 7, i32 1
  store i8 %345, i8* %346, align 1
  %347 = getelementptr inbounds %"class.blink::protocol::CSS::CSSProperty", %"class.blink::protocol::CSS::CSSProperty"* %339, i64 0, i32 7, i32 0
  store i8 1, i8* %347, align 1
  br label %543

348:                                              ; preds = %286
  %349 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %151, i64 0, i32 3
  %350 = load i8, i8* %349, align 1, !range !4
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %352, label %543

352:                                              ; preds = %348
  %353 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %33, align 8
  %354 = bitcast %"class.blink::CSSStyleDeclaration"* %353 to i1 (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)***
  %355 = load i1 (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, i1 (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %354, align 8
  %356 = getelementptr inbounds i1 (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, i1 (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %355, i64 17
  %357 = load i1 (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, i1 (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %356, align 8
  %358 = call zeroext i1 %357(%"class.blink::CSSStyleDeclaration"* %353, %"class.WTF::String"* dereferenceable(8) %152) #18
  br i1 %358, label %359, label %363

359:                                              ; preds = %352
  %360 = load %"class.blink::protocol::CSS::CSSProperty"*, %"class.blink::protocol::CSS::CSSProperty"** %28, align 8
  %361 = getelementptr inbounds %"class.blink::protocol::CSS::CSSProperty", %"class.blink::protocol::CSS::CSSProperty"* %360, i64 0, i32 4, i32 1
  store i8 1, i8* %361, align 1
  %362 = getelementptr inbounds %"class.blink::protocol::CSS::CSSProperty", %"class.blink::protocol::CSS::CSSProperty"* %360, i64 0, i32 4, i32 0
  store i8 1, i8* %362, align 1
  br label %363

363:                                              ; preds = %359, %352
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #18
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %35, align 8
  %364 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %33, align 8
  %365 = bitcast %"class.blink::CSSStyleDeclaration"* %364 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)***
  %366 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %365, align 8
  %367 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %366, i64 16
  %368 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %367, align 8
  %369 = call %"class.WTF::StringImpl"* %368(%"class.blink::CSSStyleDeclaration"* %364, %"class.WTF::String"* dereferenceable(8) %152) #18
  store %"class.WTF::StringImpl"* %369, %"class.WTF::StringImpl"** %35, align 8
  %370 = icmp eq %"class.WTF::StringImpl"* %369, null
  br i1 %370, label %542, label %371

371:                                              ; preds = %363
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %369, i64 0, i32 1
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %526, label %375

375:                                              ; preds = %371
  %376 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_RS1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.331"* nonnull %36, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %6) #18
  %377 = extractvalue { %"class.WTF::String"*, i8 } %376, 1
  %378 = and i8 %377, 1
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %526, label %380

380:                                              ; preds = %375
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #18
  store %"class.blink::protocol::CSS::ShorthandEntry"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::CSS::ShorthandEntry"*), %"class.blink::protocol::CSS::ShorthandEntry"** %38, align 8
  %381 = call i8* @_Znwm(i64 32) #19
  %382 = bitcast i8* %381 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS14ShorthandEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %382, align 8
  %383 = getelementptr inbounds i8, i8* %381, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %383, i8 0, i64 18, i1 false) #18
  %384 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %385 = icmp eq %"class.WTF::StringImpl"* %384, null
  br i1 %385, label %401, label %386

386:                                              ; preds = %380
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %384, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = load atomic i32, i32* %387 monotonic, align 4
  %389 = and i32 %388, 2
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %401

391:                                              ; preds = %386
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %384, i64 0, i32 0
  %393 = load i32, i32* %392, align 4
  %394 = zext i32 %393 to i33
  %395 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %394, i33 1) #18
  %396 = extractvalue { i33, i1 } %395, 1
  %397 = extractvalue { i33, i1 } %395, 0
  %398 = icmp slt i33 %397, 0
  %399 = or i1 %396, %398
  br i1 %399, label %400, label %404, !prof !3

400:                                              ; preds = %391
  call void @llvm.trap() #18
  unreachable

401:                                              ; preds = %386, %380
  %402 = ptrtoint %"class.WTF::StringImpl"* %384 to i64
  %403 = bitcast i8* %383 to i64*
  store i64 %402, i64* %403, align 8
  br label %424

404:                                              ; preds = %391
  %405 = trunc i33 %397 to i32
  store i32 %405, i32* %392, align 4
  %406 = bitcast i8* %383 to %"class.WTF::StringImpl"**
  %407 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %406, align 8
  %408 = ptrtoint %"class.WTF::StringImpl"* %384 to i64
  %409 = bitcast i8* %383 to i64*
  store i64 %408, i64* %409, align 8
  %410 = icmp eq %"class.WTF::StringImpl"* %407, null
  br i1 %410, label %424, label %411

411:                                              ; preds = %404
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %407, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %413 = load atomic i32, i32* %412 monotonic, align 4
  %414 = and i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %407, i64 0, i32 0
  %417 = load i32, i32* %416, align 4
  br i1 %415, label %418, label %420

418:                                              ; preds = %411
  %419 = add i32 %417, -1
  store i32 %419, i32* %416, align 4
  br label %420

420:                                              ; preds = %418, %411
  %421 = phi i32 [ %419, %418 ], [ %417, %411 ]
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %424

423:                                              ; preds = %420
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %407) #18
  br label %424

424:                                              ; preds = %401, %404, %420, %423
  %425 = call %"class.WTF::StringImpl"* @_ZN5blink14InspectorStyle14ShorthandValueERKN3WTF6StringE(%"class.blink::InspectorStyle"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6)
  %426 = getelementptr inbounds i8, i8* %381, i64 16
  %427 = icmp eq %"class.WTF::StringImpl"* %425, null
  br i1 %427, label %445, label %428

428:                                              ; preds = %424
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %425, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %430 = load atomic i32, i32* %429 monotonic, align 4
  %431 = and i32 %430, 2
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %445

433:                                              ; preds = %428
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %425, i64 0, i32 0
  %435 = load i32, i32* %434, align 4
  %436 = zext i32 %435 to i33
  %437 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %436, i33 1) #18
  %438 = extractvalue { i33, i1 } %437, 1
  %439 = extractvalue { i33, i1 } %437, 0
  %440 = icmp slt i33 %439, 0
  %441 = or i1 %438, %440
  br i1 %441, label %442, label %443, !prof !3

442:                                              ; preds = %433
  call void @llvm.trap() #18
  unreachable

443:                                              ; preds = %433
  %444 = trunc i33 %439 to i32
  store i32 %444, i32* %434, align 4
  br label %445

445:                                              ; preds = %443, %428, %424
  %446 = ptrtoint %"class.WTF::StringImpl"* %425 to i64
  %447 = bitcast i8* %426 to i64*
  %448 = bitcast i8* %426 to %"class.WTF::StringImpl"**
  %449 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %448, align 8
  store i64 %446, i64* %447, align 8
  %450 = icmp eq %"class.WTF::StringImpl"* %449, null
  br i1 %450, label %464, label %451

451:                                              ; preds = %445
  %452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %449, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %453 = load atomic i32, i32* %452 monotonic, align 4
  %454 = and i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %449, i64 0, i32 0
  %457 = load i32, i32* %456, align 4
  br i1 %455, label %458, label %460

458:                                              ; preds = %451
  %459 = add i32 %457, -1
  store i32 %459, i32* %456, align 4
  br label %460

460:                                              ; preds = %458, %451
  %461 = phi i32 [ %459, %458 ], [ %457, %451 ]
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %463, label %464

463:                                              ; preds = %460
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %449) #18
  br label %464

464:                                              ; preds = %445, %460, %463
  store i8* %381, i8** %39, align 8
  br i1 %427, label %478, label %465

465:                                              ; preds = %464
  %466 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %425, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %467 = load atomic i32, i32* %466 monotonic, align 4
  %468 = and i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %425, i64 0, i32 0
  %471 = load i32, i32* %470, align 4
  br i1 %469, label %472, label %474

472:                                              ; preds = %465
  %473 = add i32 %471, -1
  store i32 %473, i32* %470, align 4
  br label %474

474:                                              ; preds = %472, %465
  %475 = phi i32 [ %473, %472 ], [ %471, %465 ]
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %477, label %478

477:                                              ; preds = %474
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %425) #18
  br label %478

478:                                              ; preds = %477, %474, %464
  %479 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %33, align 8
  %480 = bitcast %"class.blink::CSSStyleDeclaration"* %479 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)***
  %481 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %480, align 8
  %482 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %481, i64 15
  %483 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %482, align 8
  %484 = call %"class.WTF::StringImpl"* %483(%"class.blink::CSSStyleDeclaration"* %479, %"class.WTF::String"* dereferenceable(8) %152) #18
  %485 = icmp eq %"class.WTF::StringImpl"* %484, null
  br i1 %485, label %507, label %486

486:                                              ; preds = %478
  %487 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %484, i64 0, i32 1
  %488 = load i32, i32* %487, align 4
  %489 = icmp eq i32 %488, 0
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %484, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %484, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  br i1 %493, label %496, label %498

496:                                              ; preds = %486
  %497 = add i32 %495, -1
  store i32 %497, i32* %494, align 4
  br label %498

498:                                              ; preds = %496, %486
  %499 = phi i32 [ %497, %496 ], [ %495, %486 ]
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %502

501:                                              ; preds = %498
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %484) #18
  br i1 %489, label %507, label %503

502:                                              ; preds = %498
  br i1 %489, label %507, label %503

503:                                              ; preds = %501, %502
  %504 = load %"class.blink::protocol::CSS::ShorthandEntry"*, %"class.blink::protocol::CSS::ShorthandEntry"** %38, align 8
  %505 = getelementptr inbounds %"class.blink::protocol::CSS::ShorthandEntry", %"class.blink::protocol::CSS::ShorthandEntry"* %504, i64 0, i32 3, i32 1
  store i8 1, i8* %505, align 1
  %506 = getelementptr inbounds %"class.blink::protocol::CSS::ShorthandEntry", %"class.blink::protocol::CSS::ShorthandEntry"* %504, i64 0, i32 3, i32 0
  store i8 1, i8* %506, align 1
  br label %507

507:                                              ; preds = %478, %501, %502, %503
  %508 = load %"class.std::__1::unique_ptr.310"*, %"class.std::__1::unique_ptr.310"** %41, align 8
  %509 = load %"class.std::__1::unique_ptr.310"*, %"class.std::__1::unique_ptr.310"** %43, align 8
  %510 = icmp ult %"class.std::__1::unique_ptr.310"* %508, %509
  br i1 %510, label %511, label %516

511:                                              ; preds = %507
  %512 = load i64, i64* %44, align 8
  store %"class.blink::protocol::CSS::ShorthandEntry"* null, %"class.blink::protocol::CSS::ShorthandEntry"** %38, align 8
  %513 = bitcast %"class.std::__1::unique_ptr.310"* %508 to i64*
  store i64 %512, i64* %513, align 8
  %514 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %508, i64 1
  %515 = ptrtoint %"class.std::__1::unique_ptr.310"* %514 to i64
  store i64 %515, i64* %45, align 8
  br label %517

516:                                              ; preds = %507
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS14ShorthandEntryENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.308"* nonnull %12, %"class.std::__1::unique_ptr.310"* nonnull dereferenceable(8) %7) #18
  br label %517

517:                                              ; preds = %511, %516
  %518 = load %"class.blink::protocol::CSS::ShorthandEntry"*, %"class.blink::protocol::CSS::ShorthandEntry"** %38, align 8
  store %"class.blink::protocol::CSS::ShorthandEntry"* null, %"class.blink::protocol::CSS::ShorthandEntry"** %38, align 8
  %519 = icmp eq %"class.blink::protocol::CSS::ShorthandEntry"* %518, null
  br i1 %519, label %525, label %520

520:                                              ; preds = %517
  %521 = bitcast %"class.blink::protocol::CSS::ShorthandEntry"* %518 to void (%"class.blink::protocol::CSS::ShorthandEntry"*)***
  %522 = load void (%"class.blink::protocol::CSS::ShorthandEntry"*)**, void (%"class.blink::protocol::CSS::ShorthandEntry"*)*** %521, align 8
  %523 = getelementptr inbounds void (%"class.blink::protocol::CSS::ShorthandEntry"*)*, void (%"class.blink::protocol::CSS::ShorthandEntry"*)** %522, i64 2
  %524 = load void (%"class.blink::protocol::CSS::ShorthandEntry"*)*, void (%"class.blink::protocol::CSS::ShorthandEntry"*)** %523, align 8
  call void %524(%"class.blink::protocol::CSS::ShorthandEntry"* nonnull %518) #18
  br label %525

525:                                              ; preds = %517, %520
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #18
  br label %526

526:                                              ; preds = %375, %525, %371
  %527 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %528 = icmp eq %"class.WTF::StringImpl"* %527, null
  br i1 %528, label %542, label %529

529:                                              ; preds = %526
  %530 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %527, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %531 = load atomic i32, i32* %530 monotonic, align 4
  %532 = and i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %527, i64 0, i32 0
  %535 = load i32, i32* %534, align 4
  br i1 %533, label %536, label %538

536:                                              ; preds = %529
  %537 = add i32 %535, -1
  store i32 %537, i32* %534, align 4
  br label %538

538:                                              ; preds = %536, %529
  %539 = phi i32 [ %537, %536 ], [ %535, %529 ]
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %541, label %542

541:                                              ; preds = %538
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %527) #18
  br label %542

542:                                              ; preds = %363, %526, %538, %541
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #18
  br label %543

543:                                              ; preds = %348, %542, %344
  %544 = load %"class.std::__1::unique_ptr.287"*, %"class.std::__1::unique_ptr.287"** %47, align 8
  %545 = load %"class.std::__1::unique_ptr.287"*, %"class.std::__1::unique_ptr.287"** %49, align 8
  %546 = icmp ult %"class.std::__1::unique_ptr.287"* %544, %545
  br i1 %546, label %547, label %552

547:                                              ; preds = %543
  %548 = load i64, i64* %50, align 8
  store %"class.blink::protocol::CSS::CSSProperty"* null, %"class.blink::protocol::CSS::CSSProperty"** %28, align 8
  %549 = bitcast %"class.std::__1::unique_ptr.287"* %544 to i64*
  store i64 %548, i64* %549, align 8
  %550 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %544, i64 1
  %551 = ptrtoint %"class.std::__1::unique_ptr.287"* %550 to i64
  store i64 %551, i64* %51, align 8
  br label %553

552:                                              ; preds = %543
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS11CSSPropertyENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector"* nonnull %9, %"class.std::__1::unique_ptr.287"* nonnull dereferenceable(8) %4) #18
  br label %553

553:                                              ; preds = %547, %552
  %554 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %555 = icmp eq %"class.WTF::StringImpl"* %554, null
  br i1 %555, label %569, label %556

556:                                              ; preds = %553
  %557 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %554, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %558 = load atomic i32, i32* %557 monotonic, align 4
  %559 = and i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %554, i64 0, i32 0
  %562 = load i32, i32* %561, align 4
  br i1 %560, label %563, label %565

563:                                              ; preds = %556
  %564 = add i32 %562, -1
  store i32 %564, i32* %561, align 4
  br label %565

565:                                              ; preds = %563, %556
  %566 = phi i32 [ %564, %563 ], [ %562, %556 ]
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %568, label %569

568:                                              ; preds = %565
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %554) #18
  br label %569

569:                                              ; preds = %553, %565, %568
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #18
  %570 = load %"class.blink::protocol::CSS::CSSProperty"*, %"class.blink::protocol::CSS::CSSProperty"** %28, align 8
  store %"class.blink::protocol::CSS::CSSProperty"* null, %"class.blink::protocol::CSS::CSSProperty"** %28, align 8
  %571 = icmp eq %"class.blink::protocol::CSS::CSSProperty"* %570, null
  br i1 %571, label %577, label %572

572:                                              ; preds = %569
  %573 = bitcast %"class.blink::protocol::CSS::CSSProperty"* %570 to void (%"class.blink::protocol::CSS::CSSProperty"*)***
  %574 = load void (%"class.blink::protocol::CSS::CSSProperty"*)**, void (%"class.blink::protocol::CSS::CSSProperty"*)*** %573, align 8
  %575 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSProperty"*)*, void (%"class.blink::protocol::CSS::CSSProperty"*)** %574, i64 2
  %576 = load void (%"class.blink::protocol::CSS::CSSProperty"*)*, void (%"class.blink::protocol::CSS::CSSProperty"*)** %575, align 8
  call void %576(%"class.blink::protocol::CSS::CSSProperty"* nonnull %570) #18
  br label %577

577:                                              ; preds = %569, %572
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #18
  %578 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %151, i64 1
  %579 = icmp eq %"class.blink::CSSPropertySourceData"* %578, %24
  br i1 %579, label %52, label %150
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14InspectorStyle9StyleTextEPN3WTF6StringE(%"class.blink::InspectorStyle"* nocapture readonly, %"class.WTF::String"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorStyle", %"class.blink::InspectorStyle"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %3, align 8
  %5 = icmp eq %"class.blink::CSSRuleSourceData"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %4, i64 0, i32 2
  %8 = tail call zeroext i1 @_ZN5blink14InspectorStyle12TextForRangeERKNS_11SourceRangeEPN3WTF6StringE(%"class.blink::InspectorStyle"* %0, %"class.blink::SourceRange"* dereferenceable(8) %7, %"class.WTF::String"* %1)
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i1 [ %8, %6 ], [ false, %2 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14InspectorStyle12TextForRangeERKNS_11SourceRangeEPN3WTF6StringE(%"class.blink::InspectorStyle"* nocapture readonly, %"class.blink::SourceRange"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::InspectorStyle", %"class.blink::InspectorStyle"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %7, align 8
  %9 = bitcast %"class.blink::InspectorStyleSheetBase"* %8 to i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)***
  %10 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)**, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)** %10, i64 4
  %12 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)** %11, align 8
  %13 = call zeroext i1 %12(%"class.blink::InspectorStyleSheetBase"* %8, %"class.WTF::String"* nonnull %4) #18
  br i1 %13, label %14, label %39

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sub i32 %18, %16
  %20 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %4, i32 %16, i32 %19) #18
  %21 = ptrtoint %"class.WTF::StringImpl"* %20 to i64
  %22 = bitcast %"class.WTF::String"* %2 to i64*
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  store i64 %21, i64* %22, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #18
  br label %39

39:                                               ; preds = %14, %35, %38, %3
  %40 = phi i1 [ false, %3 ], [ true, %38 ], [ true, %35 ], [ true, %14 ]
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #18
  br label %56

56:                                               ; preds = %39, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14InspectorStyle21PopulateAllPropertiesERN3WTF6VectorINS_21CSSPropertySourceDataELj0ENS1_18PartitionAllocatorEEE(%"class.blink::InspectorStyle"* nocapture readonly, %"class.WTF::Vector.26"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::HashSet.330", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.blink::CSSPropertySourceData", align 8
  %10 = alloca %"class.blink::SourceRange", align 4
  %11 = bitcast %"class.WTF::HashSet.330"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.WTF::HashSet.330", %"class.WTF::HashSet.330"* %3, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::HashSet.330", %"class.WTF::HashSet.330"* %3, i64 0, i32 0, i32 1
  %14 = bitcast %"class.WTF::HashSet.330"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 20, i1 false) #18
  %15 = getelementptr inbounds %"class.blink::InspectorStyle", %"class.blink::InspectorStyle"* %0, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %15, align 8
  %17 = icmp eq %"class.blink::CSSRuleSourceData"* %16, null
  br i1 %17, label %70, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %16, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  switch i32 %20, label %70 [
    i32 1, label %21
    i32 4, label %21
    i32 5, label %21
    i32 8, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18
  %22 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %16, i64 0, i32 4, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %23, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %70, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %1, i64 0, i32 0, i32 0, i32 2
  %31 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %1, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %1, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.WTF::String"* %4 to i8*
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::HashSet.330", %"class.WTF::HashSet.330"* %3, i64 0, i32 0
  br label %36

36:                                               ; preds = %29, %67
  %37 = phi %"class.blink::CSSPropertySourceData"* [ %23, %29 ], [ %68, %67 ]
  %38 = load i32, i32* %30, align 4
  %39 = load i32, i32* %31, align 8
  %40 = icmp eq i32 %38, %39
  br i1 %40, label %47, label %41, !prof !3

41:                                               ; preds = %36
  %42 = load %"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"** %32, align 8
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %42, i64 %43
  call void @_ZN5blink21CSSPropertySourceDataC1ERKS0_(%"class.blink::CSSPropertySourceData"* %44, %"class.blink::CSSPropertySourceData"* dereferenceable(32) %37) #18
  %45 = load i32, i32* %30, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %30, align 4
  br label %48

47:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.26"* %1, %"class.blink::CSSPropertySourceData"* dereferenceable(32) %37) #18
  br label %48

48:                                               ; preds = %41, %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #18
  %49 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %37, i64 0, i32 0
  %50 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"* %49) #18
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %34, align 8
  %51 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.331"* nonnull %35, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %4) #18
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #18
  br label %67

67:                                               ; preds = %48, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #18
  %68 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %37, i64 1
  %69 = icmp eq %"class.blink::CSSPropertySourceData"* %68, %27
  br i1 %69, label %70, label %36

70:                                               ; preds = %67, %21, %2, %18
  %71 = getelementptr inbounds %"class.blink::InspectorStyle", %"class.blink::InspectorStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %71, align 8
  %73 = bitcast %"class.blink::CSSStyleDeclaration"* %72 to i32 (%"class.blink::CSSStyleDeclaration"*)***
  %74 = load i32 (%"class.blink::CSSStyleDeclaration"*)**, i32 (%"class.blink::CSSStyleDeclaration"*)*** %73, align 8
  %75 = getelementptr inbounds i32 (%"class.blink::CSSStyleDeclaration"*)*, i32 (%"class.blink::CSSStyleDeclaration"*)** %74, i64 12
  %76 = load i32 (%"class.blink::CSSStyleDeclaration"*)*, i32 (%"class.blink::CSSStyleDeclaration"*)** %75, align 8
  %77 = call i32 %76(%"class.blink::CSSStyleDeclaration"* %72) #18
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %98

79:                                               ; preds = %70
  %80 = bitcast %"class.WTF::String"* %5 to i8*
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %82 = bitcast %"class.WTF::String"* %6 to i8*
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.WTF::HashSet.330", %"class.WTF::HashSet.330"* %3, i64 0, i32 0
  %85 = bitcast %"class.WTF::String"* %7 to i8*
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %87 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  %88 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1
  %90 = bitcast %"class.WTF::String"* %7 to i64*
  %91 = bitcast %"class.blink::CSSPropertySourceData"* %9 to i8*
  %92 = bitcast %"class.blink::SourceRange"* %10 to i8*
  %93 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %1, i64 0, i32 0, i32 0, i32 2
  %94 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %1, i64 0, i32 0, i32 0, i32 1
  %95 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %1, i64 0, i32 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %9, i64 0, i32 1, i32 0, i32 0
  %97 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %9, i64 0, i32 0, i32 0, i32 0
  br label %133

98:                                               ; preds = %385, %70
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** %12, align 8
  %100 = icmp eq %"class.WTF::String"* %99, null
  br i1 %100, label %132, label %101, !prof !2

101:                                              ; preds = %98
  %102 = load i32, i32* %13, align 8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %130, label %104

104:                                              ; preds = %101
  %105 = zext i32 %102 to i64
  br label %106

106:                                              ; preds = %127, %104
  %107 = phi i64 [ 0, %104 ], [ %128, %127 ]
  %108 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %99, i64 %107
  %109 = bitcast %"class.WTF::String"* %108 to i8**
  %110 = load i8*, i8** %109, align 8
  %111 = bitcast i8* %110 to %"class.WTF::StringImpl"*
  %112 = ptrtoint i8* %110 to i64
  switch i64 %112, label %113 [
    i64 -1, label %127
    i64 0, label %127
  ]

113:                                              ; preds = %106
  %114 = getelementptr inbounds i8, i8* %110, i64 8
  %115 = bitcast i8* %114 to i32*
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = bitcast i8* %110 to i32*
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %113
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %113
  %124 = phi i32 [ %122, %121 ], [ %120, %113 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #18
  br label %127

127:                                              ; preds = %126, %123, %106, %106
  %128 = add nuw nsw i64 %107, 1
  %129 = icmp eq i64 %128, %105
  br i1 %129, label %130, label %106

130:                                              ; preds = %127, %101
  %131 = bitcast %"class.WTF::String"* %99 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %131) #18
  store %"class.WTF::String"* null, %"class.WTF::String"** %12, align 8
  br label %132

132:                                              ; preds = %98, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #18
  ret void

133:                                              ; preds = %385, %79
  %134 = phi i32 [ 0, %79 ], [ %386, %385 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #18
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %81, align 8
  %135 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %71, align 8
  %136 = bitcast %"class.blink::CSSStyleDeclaration"* %135 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)***
  %137 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)*** %136, align 8
  %138 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)** %137, i64 13
  %139 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)** %138, align 8
  %140 = call %"class.WTF::StringImpl"* %139(%"class.blink::CSSStyleDeclaration"* %135, i32 %134) #18
  store %"class.WTF::StringImpl"* %140, %"class.WTF::StringImpl"** %81, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #18
  %141 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"* nonnull %5) #18
  store %"class.WTF::StringImpl"* %141, %"class.WTF::StringImpl"** %83, align 8
  %142 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.331"* nonnull %84, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %6) #18
  %143 = extractvalue { %"class.WTF::String"*, i8 } %142, 1
  %144 = and i8 %143, 1
  %145 = icmp eq i8 %144, 0
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %133
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #18
  br label %161

161:                                              ; preds = %133, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #18
  br i1 %145, label %369, label %162

162:                                              ; preds = %161
  %163 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %71, align 8
  %164 = getelementptr inbounds %"class.blink::CSSStyleDeclaration", %"class.blink::CSSStyleDeclaration"* %163, i64 0, i32 1
  %165 = call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %164) #18
  %166 = call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %165, %"class.WTF::String"* nonnull dereferenceable(8) %5) #18
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %369, label %168

168:                                              ; preds = %162
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #18
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %86, align 8
  %169 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %71, align 8
  %170 = bitcast %"class.blink::CSSStyleDeclaration"* %169 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)***
  %171 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %170, align 8
  %172 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %171, i64 14
  %173 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %172, align 8
  %174 = call %"class.WTF::StringImpl"* %173(%"class.blink::CSSStyleDeclaration"* %169, %"class.WTF::String"* nonnull dereferenceable(8) %5) #18
  store %"class.WTF::StringImpl"* %174, %"class.WTF::StringImpl"** %86, align 8
  %175 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %71, align 8
  %176 = bitcast %"class.blink::CSSStyleDeclaration"* %175 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)***
  %177 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %176, align 8
  %178 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %177, i64 15
  %179 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %178, align 8
  %180 = call %"class.WTF::StringImpl"* %179(%"class.blink::CSSStyleDeclaration"* %175, %"class.WTF::String"* nonnull dereferenceable(8) %5) #18
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %281, label %182

182:                                              ; preds = %168
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load atomic i32, i32* %186 monotonic, align 4
  %188 = and i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  br i1 %189, label %192, label %194

192:                                              ; preds = %182
  %193 = add i32 %191, -1
  store i32 %193, i32* %190, align 4
  br label %194

194:                                              ; preds = %192, %182
  %195 = phi i32 [ %193, %192 ], [ %191, %182 ]
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %194
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #18
  br i1 %185, label %281, label %199

198:                                              ; preds = %194
  br i1 %185, label %281, label %199

199:                                              ; preds = %197, %198
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #18
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %201 = icmp eq %"class.WTF::StringImpl"* %200, null
  br i1 %201, label %246, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  br i1 %206, label %209, label %219

209:                                              ; preds = %202
  %210 = zext i32 %208 to i33
  %211 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %210, i33 1) #18
  %212 = extractvalue { i33, i1 } %211, 1
  %213 = extractvalue { i33, i1 } %211, 0
  %214 = icmp slt i33 %213, 0
  %215 = or i1 %212, %214
  br i1 %215, label %216, label %217, !prof !3

216:                                              ; preds = %209
  call void @llvm.trap() #18
  unreachable

217:                                              ; preds = %209
  %218 = trunc i33 %213 to i32
  store i32 %218, i32* %207, align 4
  br label %219

219:                                              ; preds = %202, %217
  %220 = phi i32 [ %218, %217 ], [ %208, %202 ]
  %221 = load atomic i32, i32* %203 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  br i1 %223, label %225, label %235

225:                                              ; preds = %219
  %226 = zext i32 %220 to i33
  %227 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %226, i33 1) #18
  %228 = extractvalue { i33, i1 } %227, 1
  %229 = extractvalue { i33, i1 } %227, 0
  %230 = icmp slt i33 %229, 0
  %231 = or i1 %228, %230
  br i1 %231, label %232, label %233, !prof !3

232:                                              ; preds = %225
  call void @llvm.trap() #18
  unreachable

233:                                              ; preds = %225
  %234 = trunc i33 %229 to i32
  store i32 %234, i32* %224, align 4
  br label %235

235:                                              ; preds = %233, %219
  %236 = phi i32 [ %234, %233 ], [ %220, %219 ]
  %237 = load atomic i32, i32* %203 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  %241 = add i32 %236, -1
  store i32 %241, i32* %224, align 4
  br label %242

242:                                              ; preds = %240, %235
  %243 = phi i32 [ %241, %240 ], [ %236, %235 ]
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %242
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %200) #18
  br label %246

246:                                              ; preds = %199, %242, %245
  store %"class.WTF::StringImpl"* %200, %"class.WTF::StringImpl"** %88, align 8
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8** %89, align 8
  %247 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %8)
  %248 = ptrtoint %"class.WTF::StringImpl"* %247 to i64
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  store i64 %248, i64* %90, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #18
  br label %264

264:                                              ; preds = %263, %260, %246
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %266 = icmp eq %"class.WTF::StringImpl"* %265, null
  br i1 %266, label %280, label %267

267:                                              ; preds = %264
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 0
  %273 = load i32, i32* %272, align 4
  br i1 %271, label %274, label %276

274:                                              ; preds = %267
  %275 = add i32 %273, -1
  store i32 %275, i32* %272, align 4
  br label %276

276:                                              ; preds = %274, %267
  %277 = phi i32 [ %275, %274 ], [ %273, %267 ]
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %265) #18
  br label %280

280:                                              ; preds = %264, %276, %279
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #18
  br label %281

281:                                              ; preds = %168, %197, %198, %280
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %91) #18
  %282 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %71, align 8
  %283 = bitcast %"class.blink::CSSStyleDeclaration"* %282 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)***
  %284 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %283, align 8
  %285 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %284, i64 15
  %286 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %285, align 8
  %287 = call %"class.WTF::StringImpl"* %286(%"class.blink::CSSStyleDeclaration"* %282, %"class.WTF::String"* nonnull dereferenceable(8) %5) #18
  %288 = icmp eq %"class.WTF::StringImpl"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %281
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 1
  %291 = load i32, i32* %290, align 4
  %292 = icmp eq i32 %291, 0
  br label %293

293:                                              ; preds = %281, %289
  %294 = phi i1 [ true, %281 ], [ %292, %289 ]
  %295 = xor i1 %294, true
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #18
  call void @_ZN5blink11SourceRangeC1Ev(%"class.blink::SourceRange"* nonnull %10) #18
  call void @_ZN5blink21CSSPropertySourceDataC1ERKN3WTF6StringES4_bbbRKNS_11SourceRangeE(%"class.blink::CSSPropertySourceData"* nonnull %9, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %7, i1 zeroext %295, i1 zeroext false, i1 zeroext true, %"class.blink::SourceRange"* nonnull dereferenceable(8) %10) #18
  %296 = load i32, i32* %93, align 4
  %297 = load i32, i32* %94, align 8
  %298 = icmp eq i32 %296, %297
  br i1 %298, label %305, label %299, !prof !3

299:                                              ; preds = %293
  %300 = load %"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"** %95, align 8
  %301 = zext i32 %296 to i64
  %302 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %300, i64 %301
  call void @_ZN5blink21CSSPropertySourceDataC1ERKS0_(%"class.blink::CSSPropertySourceData"* %302, %"class.blink::CSSPropertySourceData"* nonnull dereferenceable(32) %9) #18
  %303 = load i32, i32* %93, align 4
  %304 = add i32 %303, 1
  store i32 %304, i32* %93, align 4
  br label %306

305:                                              ; preds = %293
  call void @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.26"* %1, %"class.blink::CSSPropertySourceData"* nonnull dereferenceable(32) %9) #18
  br label %306

306:                                              ; preds = %299, %305
  %307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %308 = icmp eq %"class.WTF::StringImpl"* %307, null
  br i1 %308, label %322, label %309

309:                                              ; preds = %306
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load atomic i32, i32* %310 monotonic, align 4
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 0
  %315 = load i32, i32* %314, align 4
  br i1 %313, label %316, label %318

316:                                              ; preds = %309
  %317 = add i32 %315, -1
  store i32 %317, i32* %314, align 4
  br label %318

318:                                              ; preds = %316, %309
  %319 = phi i32 [ %317, %316 ], [ %315, %309 ]
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %322

321:                                              ; preds = %318
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %307) #18
  br label %322

322:                                              ; preds = %321, %318, %306
  %323 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %324 = icmp eq %"class.WTF::StringImpl"* %323, null
  br i1 %324, label %338, label %325

325:                                              ; preds = %322
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = load atomic i32, i32* %326 monotonic, align 4
  %328 = and i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 0
  %331 = load i32, i32* %330, align 4
  br i1 %329, label %332, label %334

332:                                              ; preds = %325
  %333 = add i32 %331, -1
  store i32 %333, i32* %330, align 4
  br label %334

334:                                              ; preds = %332, %325
  %335 = phi i32 [ %333, %332 ], [ %331, %325 ]
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %338

337:                                              ; preds = %334
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %323) #18
  br label %338

338:                                              ; preds = %322, %334, %337
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #18
  br i1 %288, label %352, label %339

339:                                              ; preds = %338
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = and i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 0
  %345 = load i32, i32* %344, align 4
  br i1 %343, label %346, label %348

346:                                              ; preds = %339
  %347 = add i32 %345, -1
  store i32 %347, i32* %344, align 4
  br label %348

348:                                              ; preds = %346, %339
  %349 = phi i32 [ %347, %346 ], [ %345, %339 ]
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %352

351:                                              ; preds = %348
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %287) #18
  br label %352

352:                                              ; preds = %338, %348, %351
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91) #18
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %353, null
  br i1 %354, label %368, label %355

355:                                              ; preds = %352
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load atomic i32, i32* %356 monotonic, align 4
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 0
  %361 = load i32, i32* %360, align 4
  br i1 %359, label %362, label %364

362:                                              ; preds = %355
  %363 = add i32 %361, -1
  store i32 %363, i32* %360, align 4
  br label %364

364:                                              ; preds = %362, %355
  %365 = phi i32 [ %363, %362 ], [ %361, %355 ]
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %364
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %353) #18
  br label %368

368:                                              ; preds = %352, %364, %367
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #18
  br label %369

369:                                              ; preds = %162, %161, %368
  %370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %371 = icmp eq %"class.WTF::StringImpl"* %370, null
  br i1 %371, label %385, label %372

372:                                              ; preds = %369
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = load atomic i32, i32* %373 monotonic, align 4
  %375 = and i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 0
  %378 = load i32, i32* %377, align 4
  br i1 %376, label %379, label %381

379:                                              ; preds = %372
  %380 = add i32 %378, -1
  store i32 %380, i32* %377, align 4
  br label %381

381:                                              ; preds = %379, %372
  %382 = phi i32 [ %380, %379 ], [ %378, %372 ]
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %385

384:                                              ; preds = %381
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %370) #18
  br label %385

385:                                              ; preds = %369, %381, %384
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #18
  %386 = add nuw nsw i32 %134, 1
  %387 = icmp eq i32 %386, %77
  br i1 %387, label %98, label %133
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"*) local_unnamed_addr #2

declare i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2756", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2756", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.2754"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #18
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #18
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %6, i8* %16) #18
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #18
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #18
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #18
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.2756"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #18
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #18
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter.2756"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.2754"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #18
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %5, i8* %45) #18
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2757"* nonnull %46, i8* %25) #18
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2754"* nonnull %5, i8* %49) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #18
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #18
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !3

65:                                               ; preds = %58
  call void @llvm.trap() #18
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #18
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #18
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #18
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter.2756"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #18
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #18
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter.2756"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.2754"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #18
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %3, i8* %105) #18
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2757"* nonnull %106, i16* %85) #18
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2754"* nonnull %3, i16* %109) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #18
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #18
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !3

125:                                              ; preds = %118
  call void @llvm.trap() #18
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #18
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #18
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

declare void @_ZN5blink11SourceRangeC1Ev(%"class.blink::SourceRange"*) unnamed_addr #2

declare void @_ZN5blink21CSSPropertySourceDataC1ERKN3WTF6StringES4_bbbRKNS_11SourceRangeE(%"class.blink::CSSPropertySourceData"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i1 zeroext, i1 zeroext, i1 zeroext, %"class.blink::SourceRange"* dereferenceable(8)) unnamed_addr #2

declare i32 @_ZNK5blink11SourceRange6lengthEv(%"class.blink::SourceRange"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14InspectorStyle14ShorthandValueERKN3WTF6StringE(%"class.blink::InspectorStyle"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringBuilder", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = bitcast %"class.WTF::StringBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 1
  %13 = bitcast %union.anon.340* %12 to i8*
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 2
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 3
  store i8 1, i8* %15, align 4
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 4
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.blink::InspectorStyle", %"class.blink::InspectorStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %17, align 8
  %19 = bitcast %"class.blink::CSSStyleDeclaration"* %18 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)***
  %20 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %20, i64 14
  %22 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %21, align 8
  %23 = tail call %"class.WTF::StringImpl"* %22(%"class.blink::CSSStyleDeclaration"* %18, %"class.WTF::String"* dereferenceable(8) %1) #18
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %166

29:                                               ; preds = %25, %2
  %30 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %17, align 8
  %31 = bitcast %"class.blink::CSSStyleDeclaration"* %30 to i32 (%"class.blink::CSSStyleDeclaration"*)***
  %32 = load i32 (%"class.blink::CSSStyleDeclaration"*)**, i32 (%"class.blink::CSSStyleDeclaration"*)*** %31, align 8
  %33 = getelementptr inbounds i32 (%"class.blink::CSSStyleDeclaration"*)*, i32 (%"class.blink::CSSStyleDeclaration"*)** %32, i64 12
  %34 = load i32 (%"class.blink::CSSStyleDeclaration"*)*, i32 (%"class.blink::CSSStyleDeclaration"*)** %33, align 8
  %35 = call i32 %34(%"class.blink::CSSStyleDeclaration"* %30) #18
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %174, label %37

37:                                               ; preds = %29
  %38 = bitcast %"class.WTF::String"* %6 to i8*
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %41 = bitcast %"class.WTF::StringView"* %3 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %44 = bitcast i8** %43 to %"class.WTF::StringImpl"**
  %45 = bitcast %"class.WTF::StringView"* %3 to i64*
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %47 = bitcast %"class.WTF::StringView"* %4 to i8*
  %48 = bitcast %"class.WTF::StringView"* %4 to i64*
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %51 = bitcast %"class.WTF::StringView"* %7 to i8*
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %54 = bitcast i8** %53 to %"class.WTF::StringImpl"**
  %55 = bitcast %"class.WTF::StringView"* %7 to i64*
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  br label %57

57:                                               ; preds = %37, %157
  %58 = phi i32 [ 0, %37 ], [ %158, %157 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #18
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %39, align 8
  %59 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %17, align 8
  %60 = bitcast %"class.blink::CSSStyleDeclaration"* %59 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)***
  %61 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)*** %60, align 8
  %62 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)** %61, i64 13
  %63 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)** %62, align 8
  %64 = call %"class.WTF::StringImpl"* %63(%"class.blink::CSSStyleDeclaration"* %59, i32 %58) #18
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %39, align 8
  %65 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %17, align 8
  %66 = bitcast %"class.blink::CSSStyleDeclaration"* %65 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)***
  %67 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %66, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %67, i64 16
  %69 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %68, align 8
  %70 = call %"class.WTF::StringImpl"* %69(%"class.blink::CSSStyleDeclaration"* %65, %"class.WTF::String"* nonnull dereferenceable(8) %6) #18
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %72 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"* %71) #18
  %73 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %57
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #18
  br label %87

87:                                               ; preds = %57, %83, %86
  br i1 %72, label %88, label %141

88:                                               ; preds = %87
  %89 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %17, align 8
  %90 = bitcast %"class.blink::CSSStyleDeclaration"* %89 to i1 (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)***
  %91 = load i1 (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, i1 (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, i1 (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %91, i64 17
  %93 = load i1 (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, i1 (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %92, align 8
  %94 = call zeroext i1 %93(%"class.blink::CSSStyleDeclaration"* %89, %"class.WTF::String"* nonnull dereferenceable(8) %6) #18
  br i1 %94, label %141, label %95

95:                                               ; preds = %88
  %96 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %17, align 8
  %97 = bitcast %"class.blink::CSSStyleDeclaration"* %96 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)***
  %98 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %97, align 8
  %99 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %98, i64 14
  %100 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %99, align 8
  %101 = call %"class.WTF::StringImpl"* %100(%"class.blink::CSSStyleDeclaration"* %96, %"class.WTF::String"* nonnull dereferenceable(8) %6) #18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #18
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %95
  store i8* null, i8** %43, align 8
  %104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %104, i64* %45, align 8
  br label %110

105:                                              ; preds = %95
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %42, align 8
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 1
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %44, align 8
  %109 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %110

110:                                              ; preds = %105, %103
  %111 = phi i64 [ %109, %105 ], [ %104, %103 ]
  %112 = phi i32 [ %107, %105 ], [ 0, %103 ]
  store i32 %112, i32* %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #18
  store i64 %111, i64* %48, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8** %49, align 8
  store i32 7, i32* %50, align 8
  %113 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #18
  br i1 %113, label %127, label %114

114:                                              ; preds = %110
  %115 = load i32, i32* %14, align 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %118, label %117

117:                                              ; preds = %114
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %5, i8 zeroext 32) #18
  br label %118

118:                                              ; preds = %117, %114
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #18
  br i1 %102, label %119, label %121

119:                                              ; preds = %118
  store i8* null, i8** %53, align 8
  %120 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %120, i64* %55, align 8
  br label %125

121:                                              ; preds = %118
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %52, align 8
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 1
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %54, align 8
  br label %125

125:                                              ; preds = %119, %121
  %126 = phi i32 [ %123, %121 ], [ 0, %119 ]
  store i32 %126, i32* %56, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #18
  br label %127

127:                                              ; preds = %110, %125
  br i1 %102, label %141, label %128

128:                                              ; preds = %127
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #18
  br label %141

141:                                              ; preds = %87, %140, %137, %127, %88
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #18
  br label %157

157:                                              ; preds = %141, %153, %156
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #18
  %158 = add nuw i32 %58, 1
  %159 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %17, align 8
  %160 = bitcast %"class.blink::CSSStyleDeclaration"* %159 to i32 (%"class.blink::CSSStyleDeclaration"*)***
  %161 = load i32 (%"class.blink::CSSStyleDeclaration"*)**, i32 (%"class.blink::CSSStyleDeclaration"*)*** %160, align 8
  %162 = getelementptr inbounds i32 (%"class.blink::CSSStyleDeclaration"*)*, i32 (%"class.blink::CSSStyleDeclaration"*)** %161, i64 12
  %163 = load i32 (%"class.blink::CSSStyleDeclaration"*)*, i32 (%"class.blink::CSSStyleDeclaration"*)** %162, align 8
  %164 = call i32 %163(%"class.blink::CSSStyleDeclaration"* %159) #18
  %165 = icmp ult i32 %158, %164
  br i1 %165, label %57, label %174

166:                                              ; preds = %25
  %167 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #18
  %168 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %168, align 8
  %169 = load i32, i32* %26, align 4
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 1
  %171 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %172 = bitcast i8** %171 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %170, %"class.WTF::StringImpl"** %172, align 8
  %173 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %169, i32* %173, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #18
  br label %174

174:                                              ; preds = %157, %29, %166
  %175 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %17, align 8
  %176 = bitcast %"class.blink::CSSStyleDeclaration"* %175 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)***
  %177 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %176, align 8
  %178 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %177, i64 15
  %179 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %178, align 8
  %180 = call %"class.WTF::StringImpl"* %179(%"class.blink::CSSStyleDeclaration"* %175, %"class.WTF::String"* dereferenceable(8) %1) #18
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %205, label %182

182:                                              ; preds = %174
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load atomic i32, i32* %186 monotonic, align 4
  %188 = and i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  br i1 %189, label %192, label %194

192:                                              ; preds = %182
  %193 = add i32 %191, -1
  store i32 %193, i32* %190, align 4
  br label %194

194:                                              ; preds = %192, %182
  %195 = phi i32 [ %193, %192 ], [ %191, %182 ]
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %194
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #18
  br i1 %185, label %205, label %199

198:                                              ; preds = %194
  br i1 %185, label %205, label %199

199:                                              ; preds = %197, %198
  %200 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %200) #18
  %201 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %202 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %201, i64* %202, align 8
  %203 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8** %203, align 8
  %204 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 11, i32* %204, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %200) #18
  br label %205

205:                                              ; preds = %174, %197, %198, %199
  %206 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %5) #18
  br i1 %24, label %220, label %207

207:                                              ; preds = %205
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #18
  br label %220

220:                                              ; preds = %205, %216, %219
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %5) #18
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #18
  br label %236

236:                                              ; preds = %220, %232, %235
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #18
  ret %"class.WTF::StringImpl"* %206
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !4
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #18
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #18
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #18
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #18
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #18
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14InspectorStyle5TraceEPNS_7VisitorE(%"class.blink::InspectorStyle"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::InspectorStyle"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19CSSStyleDeclarationEE5TraceEPNS_7VisitorEPKv) #18
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::InspectorStyle", %"class.blink::InspectorStyle"* %0, i64 0, i32 2
  %14 = bitcast %"class.blink::Member.42"* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23InspectorStyleSheetBaseEE5TraceEPNS_7VisitorEPKv) #18
  br label %23

23:                                               ; preds = %12, %17
  %24 = getelementptr inbounds %"class.blink::InspectorStyle", %"class.blink::InspectorStyle"* %0, i64 0, i32 1
  %25 = bitcast %"class.blink::Member.17"* %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = inttoptr i64 %26 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17CSSRuleSourceDataEE5TraceEPNS_7VisitorEPKv) #18
  br label %34

34:                                               ; preds = %23, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorStyleSheetBaseC2EPNS0_8ListenerE(%"class.blink::InspectorStyleSheetBase"* nocapture, %"class.blink::InspectorStyleSheetBase::Listener"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheetBase", %"class.blink::InspectorStyleSheetBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink23InspectorStyleSheetBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory16CreateIdentifierEv() #18
  %5 = getelementptr inbounds %"class.blink::InspectorStyleSheetBase", %"class.blink::InspectorStyleSheetBase"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %4, %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::InspectorStyleSheetBase", %"class.blink::InspectorStyleSheetBase"* %0, i64 0, i32 2
  store %"class.blink::InspectorStyleSheetBase::Listener"* %1, %"class.blink::InspectorStyleSheetBase::Listener"** %6, align 8
  %7 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #18
  %8 = getelementptr inbounds %"class.blink::InspectorStyleSheetBase", %"class.blink::InspectorStyleSheetBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = bitcast %"class.WTF::Vector"** %8 to i8**
  store i8* %7, i8** %9, align 8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory16CreateIdentifierEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorStyleSheetBase23OnStyleSheetTextChangedEv(%"class.blink::InspectorStyleSheetBase"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false) #18
  %3 = ptrtoint i8* %2 to i64
  %4 = getelementptr inbounds %"class.blink::InspectorStyleSheetBase", %"class.blink::InspectorStyleSheetBase"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.2"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.WTF::Vector"* %6, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  %13 = bitcast i32* %11 to i8*
  br i1 %12, label %20, label %14, !prof !2

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18, !prof !3

18:                                               ; preds = %14
  store i32 0, i32* %15, align 4
  br label %19

19:                                               ; preds = %18, %14
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %13) #18
  store i32* null, i32** %10, align 8
  br label %20

20:                                               ; preds = %19, %9
  %21 = bitcast %"class.WTF::Vector"* %6 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %21) #18
  br label %22

22:                                               ; preds = %20, %1
  %23 = getelementptr inbounds %"class.blink::InspectorStyleSheetBase", %"class.blink::InspectorStyleSheetBase"* %0, i64 0, i32 2
  %24 = load %"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase::Listener"** %23, align 8
  %25 = icmp eq %"class.blink::InspectorStyleSheetBase::Listener"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.blink::InspectorStyleSheetBase::Listener"* %24 to void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)***
  %28 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)**, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %28, i64 2
  %30 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %29, align 8
  tail call void %30(%"class.blink::InspectorStyleSheetBase::Listener"* nonnull %24, %"class.blink::InspectorStyleSheetBase"* %0) #18
  br label %31

31:                                               ; preds = %22, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink23InspectorStyleSheetBase19BuildObjectForStyleEPNS_19CSSStyleDeclarationE(%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::InspectorStyleSheetBase"* %0 to %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)***
  %4 = load %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)**, %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)*, %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)** %4, i64 8
  %6 = load %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)*, %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)** %5, align 8
  %7 = tail call %"class.blink::InspectorStyle"* %6(%"class.blink::InspectorStyleSheetBase"* %0, %"class.blink::CSSStyleDeclaration"* %1) #18
  %8 = tail call %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink14InspectorStyle19BuildObjectForStyleEv(%"class.blink::InspectorStyle"* %7)
  ret %"class.blink::protocol::CSS::CSSStyle"* %8
}

declare %"class.WTF::Vector"* @_ZN3WTF14GetLineEndingsERKNS_6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorStyleSheetBase16ResetLineEndingsEv(%"class.blink::InspectorStyleSheetBase"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false) #18
  %3 = ptrtoint i8* %2 to i64
  %4 = getelementptr inbounds %"class.blink::InspectorStyleSheetBase", %"class.blink::InspectorStyleSheetBase"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.2"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.WTF::Vector"* %6, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  %13 = bitcast i32* %11 to i8*
  br i1 %12, label %20, label %14, !prof !2

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18, !prof !3

18:                                               ; preds = %14
  store i32 0, i32* %15, align 4
  br label %19

19:                                               ; preds = %18, %14
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %13) #18
  store i32* null, i32** %10, align 8
  br label %20

20:                                               ; preds = %19, %9
  %21 = bitcast %"class.WTF::Vector"* %6 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %21) #18
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23InspectorStyleSheetBase27LineNumberAndColumnToOffsetEjjPj(%"class.blink::InspectorStyleSheetBase"*, i32, i32, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::TextPosition", align 4
  %6 = tail call %"class.WTF::Vector"* @_ZN5blink23InspectorStyleSheetBase14GetLineEndingsEv(%"class.blink::InspectorStyleSheetBase"* %0)
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %31

10:                                               ; preds = %4
  %11 = icmp eq i32 %1, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 %1)
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %1, -1
  %16 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 %15)
  %17 = load i32, i32* %16, align 4
  %18 = xor i32 %17, -1
  %19 = add i32 %14, %18
  br label %23

20:                                               ; preds = %10
  %21 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 0)
  %22 = load i32, i32* %21, align 4
  br label %23

23:                                               ; preds = %20, %12
  %24 = phi i32 [ %19, %12 ], [ %22, %20 ]
  %25 = icmp ult i32 %24, %2
  br i1 %25, label %31, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.WTF::TextPosition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #18
  %28 = getelementptr inbounds %"class.WTF::TextPosition", %"class.WTF::TextPosition"* %5, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.WTF::TextPosition", %"class.WTF::TextPosition"* %5, i64 0, i32 1, i32 0
  store i32 %1, i32* %28, align 4
  store i32 %2, i32* %29, align 4
  %30 = call i32 @_ZN3WTF12TextPosition8ToOffsetERKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(%"class.WTF::TextPosition"* nonnull %5, %"class.WTF::Vector"* dereferenceable(16) %6) #18
  store i32 %30, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #18
  br label %31

31:                                               ; preds = %26, %23, %4
  %32 = phi i1 [ false, %4 ], [ true, %26 ], [ false, %23 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

declare i32 @_ZN3WTF12TextPosition8ToOffsetERKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(%"class.WTF::TextPosition"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19InspectorStyleSheetC2EPNS_21InspectorNetworkAgentEPNS_13CSSStyleSheetERKN3WTF6StringES8_PNS_23InspectorStyleSheetBase8ListenerEPNS_26InspectorResourceContainerE(%"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorNetworkAgent"*, %"class.blink::CSSStyleSheet"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorResourceContainer"*) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink23InspectorStyleSheetBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory16CreateIdentifierEv() #18
  %10 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 2
  store %"class.blink::InspectorStyleSheetBase::Listener"* %5, %"class.blink::InspectorStyleSheetBase::Listener"** %11, align 8
  %12 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #18
  %13 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %14 = bitcast %"class.WTF::Vector"** %13 to i8**
  store i8* %12, i8** %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink19InspectorStyleSheetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %15 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::InspectorResourceContainer"* %6, %"class.blink::InspectorResourceContainer"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::InspectorNetworkAgent"* %1, %"class.blink::InspectorNetworkAgent"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::CSSStyleSheet"* %2, %"class.blink::CSSStyleSheet"** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %20, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %21, label %39, label %22

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i33
  %31 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #18
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !3

36:                                               ; preds = %27
  tail call void @llvm.trap() #18
  unreachable

37:                                               ; preds = %27
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %28, align 4
  br label %39

39:                                               ; preds = %7, %22, %37
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i33
  %53 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %52, i33 1) #18
  %54 = extractvalue { i33, i1 } %53, 1
  %55 = extractvalue { i33, i1 } %53, 0
  %56 = icmp slt i33 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %59, !prof !3

58:                                               ; preds = %49
  tail call void @llvm.trap() #18
  unreachable

59:                                               ; preds = %49
  %60 = trunc i33 %55 to i32
  store i32 %60, i32* %50, align 4
  br label %61

61:                                               ; preds = %39, %44, %59
  %62 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %63 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 11
  %64 = bitcast %"class.WTF::HashMap.1143"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 20, i1 false) #18
  %65 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 12, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %65, align 8
  %66 = bitcast %"class.blink::HeapVector"** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 68, i1 false)
  tail call void @_ZN5blink19InspectorStyleSheet10UpdateTextEv(%"class.blink::InspectorStyleSheet"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19InspectorStyleSheet10UpdateTextEv(%"class.blink::InspectorStyleSheet"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #18
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %5 = call zeroext i1 @_ZN5blink19InspectorStyleSheet23InspectorStyleSheetTextEPN3WTF6StringE(%"class.blink::InspectorStyleSheet"* %0, %"class.WTF::String"* nonnull %2)
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = call zeroext i1 @_ZN5blink19InspectorStyleSheet20InlineStyleSheetTextEPN3WTF6StringE(%"class.blink::InspectorStyleSheet"* %0, %"class.WTF::String"* nonnull %2)
  br i1 %7, label %12, label %8

8:                                                ; preds = %6
  %9 = call zeroext i1 @_ZN5blink19InspectorStyleSheet22ResourceStyleSheetTextEPN3WTF6StringE(%"class.blink::InspectorStyleSheet"* %0, %"class.WTF::String"* nonnull %2)
  br i1 %9, label %12, label %10

10:                                               ; preds = %8
  %11 = call zeroext i1 @_ZN5blink19InspectorStyleSheet19CSSOMStyleSheetTextEPN3WTF6StringE(%"class.blink::InspectorStyleSheet"* %0, %"class.WTF::String"* nonnull %2)
  br i1 %11, label %12, label %52

12:                                               ; preds = %1, %6, %8, %10
  call void @_ZN5blink19InspectorStyleSheet9ParseTextERKN3WTF6StringE(%"class.blink::InspectorStyleSheet"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %2) #18
  %13 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 7
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #18
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %21
  call void @llvm.trap() #18
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %31, %16, %12
  %34 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  %35 = bitcast %"class.WTF::String"* %13 to i64*
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  store i64 %34, i64* %35, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #18
  br label %52

52:                                               ; preds = %51, %48, %33, %10
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #18
  br label %68

68:                                               ; preds = %52, %64, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19InspectorStyleSheetD2Ev(%"class.blink::InspectorStyleSheet"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink19InspectorStyleSheetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 12, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #18
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 11, i32 0, i32 0
  %21 = load %"struct.WTF::KeyValuePair.1147"*, %"struct.WTF::KeyValuePair.1147"** %20, align 8
  %22 = icmp eq %"struct.WTF::KeyValuePair.1147"* %21, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %19
  %24 = bitcast %"struct.WTF::KeyValuePair.1147"* %21 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %24) #18
  store %"struct.WTF::KeyValuePair.1147"* null, %"struct.WTF::KeyValuePair.1147"** %20, align 8
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 10, i32 0, i32 0
  %27 = load %"struct.WTF::KeyValuePair.1147"*, %"struct.WTF::KeyValuePair.1147"** %26, align 8
  %28 = icmp eq %"struct.WTF::KeyValuePair.1147"* %27, null
  br i1 %28, label %31, label %29, !prof !2

29:                                               ; preds = %25
  %30 = bitcast %"struct.WTF::KeyValuePair.1147"* %27 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %30) #18
  store %"struct.WTF::KeyValuePair.1147"* null, %"struct.WTF::KeyValuePair.1147"** %26, align 8
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 7, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #18
  br label %48

48:                                               ; preds = %31, %44, %47
  %49 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 5, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #18
  br label %65

65:                                               ; preds = %48, %61, %64
  %66 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 4, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #18
  br label %82

82:                                               ; preds = %65, %78, %81
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink23InspectorStyleSheetBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %83 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %83, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %83, align 8
  %85 = icmp eq %"class.WTF::Vector"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %84, i64 0, i32 0, i32 0, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = icmp eq i32* %88, null
  %90 = bitcast i32* %88 to i8*
  br i1 %89, label %97, label %91, !prof !2

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %84, i64 0, i32 0, i32 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %96, label %95, !prof !3

95:                                               ; preds = %91
  store i32 0, i32* %92, align 4
  br label %96

96:                                               ; preds = %95, %91
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %90) #18
  store i32* null, i32** %87, align 8
  br label %97

97:                                               ; preds = %96, %86
  %98 = bitcast %"class.WTF::Vector"* %84 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %98) #18
  br label %99

99:                                               ; preds = %97, %82
  %100 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #18
  br label %116

116:                                              ; preds = %99, %112, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19InspectorStyleSheetD0Ev(%"class.blink::InspectorStyleSheet"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19InspectorStyleSheetD2Ev(%"class.blink::InspectorStyleSheet"* %0) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19InspectorStyleSheet5TraceEPNS_7VisitorE(%"class.blink::InspectorStyleSheet"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.541"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26InspectorResourceContainerEE5TraceEPNS_7VisitorEPKv) #18
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.561"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21InspectorNetworkAgentEE5TraceEPNS_7VisitorEPKv) #18
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3
  %26 = bitcast %"class.blink::Member.847"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #18
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8
  %37 = bitcast %"class.blink::HeapVector.1132"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  %40 = bitcast %"class.blink::HeapVector.1132"* %36 to i8**
  %41 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %42 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %42, i64 11
  %44 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %1, i8** %40) #18
  br i1 %39, label %51, label %45

45:                                               ; preds = %35
  %46 = inttoptr i64 %38 to i8*
  %47 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, i64 5
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %49, align 8
  tail call void %50(%"class.blink::Visitor"* %1, i8* nonnull %46, i8* nonnull %46, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #18
  br label %51

51:                                               ; preds = %35, %45
  %52 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 9
  %53 = bitcast %"class.blink::HeapVector.1132"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  %56 = bitcast %"class.blink::HeapVector.1132"* %52 to i8**
  %57 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %41, align 8
  %58 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %57, i64 11
  %59 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %58, align 8
  tail call void %59(%"class.blink::Visitor"* %1, i8** %56) #18
  br i1 %55, label %66, label %60

60:                                               ; preds = %51
  %61 = inttoptr i64 %54 to i8*
  %62 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, i64 5
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %64, align 8
  tail call void %65(%"class.blink::Visitor"* %1, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #18
  br label %66

66:                                               ; preds = %51, %60
  %67 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6
  %68 = bitcast %"class.blink::Member.1141"* %67 to i64*
  %69 = load atomic i64, i64* %68 monotonic, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %66
  %72 = inttoptr i64 %69 to i8*
  %73 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %74, i64 5
  %76 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %75, align 8
  tail call void %76(%"class.blink::Visitor"* %1, i8* nonnull %72, i8* nonnull %72, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEE5TraceEPNS_7VisitorEPKv) #18
  br label %77

77:                                               ; preds = %66, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink23InspectorStyleSheetBase5TraceEPNS_7VisitorE(%"class.blink::InspectorStyleSheetBase"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink19InspectorStyleSheet8FinalURLEv(%"class.blink::InspectorStyleSheet"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringImpl"*, align 8
  %3 = bitcast %"class.WTF::StringImpl"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %4, align 8
  %6 = icmp eq %"class.blink::CSSStyleSheet"* %5, null
  br i1 %6, label %38, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %5, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %9, i64 0, i32 10, i32 0, i32 0
  %11 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %11, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %12) #18
  br i1 %13, label %38, label %14

14:                                               ; preds = %7
  %15 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %8, align 8
  %16 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %15, i64 0, i32 10, i32 0, i32 0
  %17 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %17, i64 0, i32 0, i32 4, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %60, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %61

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #18
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !3

35:                                               ; preds = %26
  tail call void @llvm.trap() #18
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %61

38:                                               ; preds = %7, %1
  %39 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %60, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %61

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i33
  %52 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %51, i33 1) #18
  %53 = extractvalue { i33, i1 } %52, 1
  %54 = extractvalue { i33, i1 } %52, 0
  %55 = icmp slt i33 %54, 0
  %56 = or i1 %53, %55
  br i1 %56, label %57, label %58, !prof !3

57:                                               ; preds = %48
  tail call void @llvm.trap() #18
  unreachable

58:                                               ; preds = %48
  %59 = trunc i33 %54 to i32
  store i32 %59, i32* %49, align 4
  br label %61

60:                                               ; preds = %38, %14
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2, align 8
  br label %68

61:                                               ; preds = %58, %43, %36, %21
  %62 = phi %"class.WTF::StringImpl"* [ %41, %58 ], [ %41, %43 ], [ %19, %36 ], [ %19, %21 ]
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %2, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  %67 = bitcast %"class.WTF::StringImpl"** %2 to %"class.WTF::String"*
  br i1 %66, label %68, label %72

68:                                               ; preds = %60, %61
  %69 = phi %"class.WTF::StringImpl"* [ null, %60 ], [ %62, %61 ]
  %70 = phi i1 [ true, %60 ], [ %63, %61 ]
  %71 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 5
  br label %72

72:                                               ; preds = %61, %68
  %73 = phi %"class.WTF::StringImpl"* [ %69, %68 ], [ %62, %61 ]
  %74 = phi i1 [ %70, %68 ], [ %63, %61 ]
  %75 = phi %"class.WTF::String"* [ %71, %68 ], [ %67, %61 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %96, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %96

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i33
  %88 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #18
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !3

93:                                               ; preds = %84
  tail call void @llvm.trap() #18
  unreachable

94:                                               ; preds = %84
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %85, align 4
  br label %96

96:                                               ; preds = %72, %79, %94
  br i1 %74, label %110, label %97

97:                                               ; preds = %96
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #18
  br label %110

110:                                              ; preds = %96, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  ret %"class.WTF::StringImpl"* %77
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19InspectorStyleSheet7SetTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %4, align 8
  tail call void @_ZN5blink13CSSStyleSheet7SetTextERKN3WTF6StringENS_14CSSImportRulesE(%"class.blink::CSSStyleSheet"* %5, %"class.WTF::String"* dereferenceable(8) %1, i32 0) #18
  tail call void @_ZN5blink19InspectorStyleSheet12InnerSetTextERKN3WTF6StringEb(%"class.blink::InspectorStyleSheet"* %0, %"class.WTF::String"* dereferenceable(8) %1, i1 zeroext true)
  %6 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0
  %7 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #18
  %8 = ptrtoint i8* %7 to i64
  %9 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 3
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %10, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.2"* %9 to i64*
  store i64 %8, i64* %12, align 8
  %13 = icmp eq %"class.WTF::Vector"* %11, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %11, i64 0, i32 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  %18 = bitcast i32* %16 to i8*
  br i1 %17, label %25, label %19, !prof !2

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %11, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23, !prof !3

23:                                               ; preds = %19
  store i32 0, i32* %20, align 4
  br label %24

24:                                               ; preds = %23, %19
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %18) #18
  store i32* null, i32** %15, align 8
  br label %25

25:                                               ; preds = %24, %14
  %26 = bitcast %"class.WTF::Vector"* %11 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %26) #18
  br label %27

27:                                               ; preds = %25, %3
  %28 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 2
  %29 = load %"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase::Listener"** %28, align 8
  %30 = icmp eq %"class.blink::InspectorStyleSheetBase::Listener"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.blink::InspectorStyleSheetBase::Listener"* %29 to void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)***
  %33 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)**, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %33, i64 2
  %35 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %34, align 8
  tail call void %35(%"class.blink::InspectorStyleSheetBase::Listener"* nonnull %29, %"class.blink::InspectorStyleSheetBase"* %6) #18
  br label %36

36:                                               ; preds = %27, %31
  ret i1 true
}

declare void @_ZN5blink13CSSStyleSheet7SetTextERKN3WTF6StringENS_14CSSImportRulesE(%"class.blink::CSSStyleSheet"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19InspectorStyleSheet12InnerSetTextERKN3WTF6StringEb(%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::String", align 8
  tail call void @_ZN5blink19InspectorStyleSheet9ParseTextERKN3WTF6StringE(%"class.blink::InspectorStyleSheet"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  %7 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #18
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #18
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %30 = bitcast %"class.WTF::String"* %7 to i64*
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %29, i64* %30, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #18
  br label %47

47:                                               ; preds = %28, %43, %46
  br i1 %2, label %48, label %146

48:                                               ; preds = %47
  %49 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %50 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %50, i64 0, i32 11, i32 0, i32 0
  %52 = load %"class.blink::Node"*, %"class.blink::Node"** %51, align 8
  %53 = icmp eq %"class.blink::Node"* %52, null
  br i1 %53, label %89, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %52, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 12
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %89

59:                                               ; preds = %54
  %60 = and i32 %56, 48
  switch i32 %60, label %89 [
    i32 0, label %61
    i32 32, label %73
  ]

61:                                               ; preds = %59
  %62 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE, align 8
  %63 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %52, i64 1, i32 2
  %66 = bitcast %"class.blink::Member.1115"* %65 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %67 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %64, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %69, %71
  br i1 %72, label %85, label %89

73:                                               ; preds = %59
  %74 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kStyleTagE, align 8
  %75 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %52, i64 1, i32 2
  %78 = bitcast %"class.blink::Member.1115"* %77 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %79 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 3, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 3, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %81, %83
  br i1 %84, label %85, label %89

85:                                               ; preds = %61, %73
  %86 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %87 = load %"class.blink::InspectorResourceContainer"*, %"class.blink::InspectorResourceContainer"** %86, align 8
  %88 = tail call i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"* nonnull %52) #18
  tail call void @_ZN5blink26InspectorResourceContainer24StoreStyleElementContentEiRKN3WTF6StringE(%"class.blink::InspectorResourceContainer"* %87, i32 %88, %"class.WTF::String"* dereferenceable(8) %1) #18
  br label %146

89:                                               ; preds = %61, %73, %59, %48, %54
  %90 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #18
  %91 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 4, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %94, label %98

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %95, align 8
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %97 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %96, i64* %97, align 8
  br label %105

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %99, align 8
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 1
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %104 = bitcast i8** %103 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %104, align 8
  br label %105

105:                                              ; preds = %98, %94
  %106 = phi i32 [ %101, %98 ], [ 0, %94 ]
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %106, i32* %107, align 8
  %108 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #18
  %109 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum9InspectorE, i64 0, i64 0)) #20
  %110 = icmp ult i64 %109, 4294967296
  br i1 %110, label %112, label %111, !prof !2

111:                                              ; preds = %105
  tail call void @llvm.trap() #18
  unreachable

112:                                              ; preds = %105
  %113 = trunc i64 %109 to i32
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %115 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum9InspectorE, i64 0, i64 0), i8** %116, align 8
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %113, i32* %117, align 8
  %118 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #18
  %119 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::InspectorResourceContainer"*, %"class.blink::InspectorResourceContainer"** %119, align 8
  br i1 %118, label %121, label %126

121:                                              ; preds = %112
  %122 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %49, align 8
  %123 = call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %122) #18
  %124 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %123, i64 0, i32 0, i32 0
  %125 = call i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"* %124) #18
  call void @_ZN5blink26InspectorResourceContainer24StoreStyleElementContentEiRKN3WTF6StringE(%"class.blink::InspectorResourceContainer"* %120, i32 %125, %"class.WTF::String"* dereferenceable(8) %1) #18
  br label %146

126:                                              ; preds = %112
  %127 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #18
  %128 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorStyleSheet8FinalURLEv(%"class.blink::InspectorStyleSheet"* %0)
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %128, %"class.WTF::StringImpl"** %129, align 8
  call void @_ZN5blink26InspectorResourceContainer22StoreStyleSheetContentERKN3WTF6StringES4_(%"class.blink::InspectorResourceContainer"* %120, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %1) #18
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #18
  br label %145

145:                                              ; preds = %126, %141, %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #18
  br label %146

146:                                              ; preds = %85, %145, %121, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSStyleRule"* @_ZN5blink19InspectorStyleSheet15SetRuleSelectorERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"*, %"class.blink::SourceRange"* nocapture readonly dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceRange"*, %"class.WTF::String"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::StringAppend.2753", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend.2752", align 8
  %11 = alloca %"class.WTF::StringAppend.2753", align 8
  %12 = alloca %"class.WTF::StringAppend", align 8
  %13 = alloca %"class.blink::(anonymous namespace)::StyleSheetHandler", align 8
  %14 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %14, align 8
  %16 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %15) #18
  %17 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_118VerifySelectorTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name to i8*) acquire, align 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %23, !prof !5

19:                                               ; preds = %6
  %20 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_118VerifySelectorTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name) #18
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_118VerifySelectorTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name to %"class.WTF::String"*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i64 0, i64 0), i64 23) #18
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_118VerifySelectorTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name) #18
  br label %23

23:                                               ; preds = %22, %19, %6
  %24 = icmp eq %"class.blink::Document"* %16, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %23
  %26 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #18
  %27 = bitcast i8* %26 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"* %27, %"class.blink::Document"* nonnull dereferenceable(2848) %16) #18
  %28 = getelementptr inbounds i8, i8* %26, i64 -4
  %29 = bitcast i8* %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = or i16 %30, 1
  store atomic i16 %31, i16* %29 release, align 2
  br label %34

32:                                               ; preds = %23
  %33 = tail call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 0) #18
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi %"class.blink::CSSParserContext"* [ %27, %25 ], [ %33, %32 ]
  %36 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm(i64 192) #18
  %37 = bitcast i8* %36 to %"class.blink::StyleSheetContents"*
  %38 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #18
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %39, align 8
  call void @_ZN5blink18StyleSheetContentsC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE(%"class.blink::StyleSheetContents"* %37, %"class.blink::CSSParserContext"* %35, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::StyleRuleImport"* null) #18
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #18
  br label %55

55:                                               ; preds = %54, %51, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #18
  %56 = getelementptr inbounds i8, i8* %36, i64 -4
  %57 = bitcast i8* %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = or i16 %58, 1
  store atomic i16 %59, i16* %57 release, align 2
  %60 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEEEPhm(i64 16) #18
  %61 = getelementptr inbounds i8, i8* %60, i64 -4
  %62 = bitcast i8* %61 to i16*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #18
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = or i16 %63, 1
  store atomic i16 %64, i16* %62 release, align 2
  %65 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #18
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %66, align 8
  %67 = bitcast %"class.WTF::StringAppend.2752"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #18
  %68 = bitcast %"class.WTF::StringAppend.2753"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #18
  %69 = bitcast %"class.WTF::StringAppend"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #18
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %116, label %73

73:                                               ; preds = %55
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #18
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %80
  call void @llvm.trap() #18
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %88, %73
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = load atomic i32, i32* %74 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %105

95:                                               ; preds = %90
  %96 = zext i32 %91 to i33
  %97 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %96, i33 1) #18
  %98 = extractvalue { i33, i1 } %97, 1
  %99 = extractvalue { i33, i1 } %97, 0
  %100 = icmp slt i33 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %102, label %103, !prof !3

102:                                              ; preds = %95
  call void @llvm.trap() #18
  unreachable

103:                                              ; preds = %95
  %104 = trunc i33 %99 to i32
  store i32 %104, i32* %78, align 4
  br label %105

105:                                              ; preds = %103, %90
  %106 = phi i32 [ %104, %103 ], [ %91, %90 ]
  %107 = load atomic i32, i32* %74 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  %111 = add i32 %106, -1
  store i32 %111, i32* %78, align 4
  br label %112

112:                                              ; preds = %110, %105
  %113 = phi i32 [ %111, %110 ], [ %106, %105 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #18
  br label %116

116:                                              ; preds = %115, %112, %55
  %117 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8** %118, align 8
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_118VerifySelectorTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name to %"class.WTF::StringImpl"**), align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %138, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = zext i32 %128 to i33
  %130 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #18
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !3

135:                                              ; preds = %126
  call void @llvm.trap() #18
  unreachable

136:                                              ; preds = %126
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %127, align 4
  br label %138

138:                                              ; preds = %136, %121, %116
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2753"* nonnull sret %11, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %12, %"class.WTF::StringImpl"* %119) #18
  %139 = bitcast %"class.WTF::StringAppend.2753"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #18
  %140 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8, !noalias !6
  %142 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %141, %"class.WTF::StringImpl"** %142, align 8, !noalias !6
  %143 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %143, label %161, label %144

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %161

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = zext i32 %151 to i33
  %153 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %152, i33 1) #18
  %154 = extractvalue { i33, i1 } %153, 1
  %155 = extractvalue { i33, i1 } %153, 0
  %156 = icmp slt i33 %155, 0
  %157 = or i1 %154, %156
  br i1 %157, label %158, label %159, !prof !3

158:                                              ; preds = %149
  call void @llvm.trap() #18
  unreachable

159:                                              ; preds = %149
  %160 = trunc i33 %155 to i32
  store i32 %160, i32* %150, align 4
  br label %161

161:                                              ; preds = %159, %144, %138
  %162 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %7, i64 0, i32 0, i32 1
  %163 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %11, i64 0, i32 0, i32 1
  %164 = bitcast i8** %163 to i64*
  %165 = load i64, i64* %164, align 8, !noalias !6
  %166 = bitcast i8** %162 to i64*
  store i64 %165, i64* %166, align 8, !noalias !6
  %167 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %11, i64 0, i32 1, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8, !noalias !6
  %169 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %7, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %168, %"class.WTF::StringImpl"** %169, align 8, !noalias !6
  %170 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %170, label %188, label %171

171:                                              ; preds = %161
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %188

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i33
  %180 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %179, i33 1) #18
  %181 = extractvalue { i33, i1 } %180, 1
  %182 = extractvalue { i33, i1 } %180, 0
  %183 = icmp slt i33 %182, 0
  %184 = or i1 %181, %183
  br i1 %184, label %185, label %186, !prof !3

185:                                              ; preds = %176
  call void @llvm.trap() #18
  unreachable

186:                                              ; preds = %176
  %187 = trunc i33 %182 to i32
  store i32 %187, i32* %177, align 4
  br label %188

188:                                              ; preds = %186, %171, %161
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2752"* nonnull %10, %"class.WTF::StringAppend.2753"* nonnull byval(%"class.WTF::StringAppend.2753") align 8 %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0)) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #18
  %189 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.2752"* nonnull %10) #18
  store %"class.WTF::StringImpl"* %189, %"class.WTF::StringImpl"** %66, align 8
  %190 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %206, label %193

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br i1 %197, label %200, label %202

200:                                              ; preds = %193
  %201 = add i32 %199, -1
  store i32 %201, i32* %198, align 4
  br label %202

202:                                              ; preds = %200, %193
  %203 = phi i32 [ %201, %200 ], [ %199, %193 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #18
  br label %206

206:                                              ; preds = %205, %202, %188
  %207 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #18
  br label %223

223:                                              ; preds = %222, %219, %206
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %226
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %234, %233 ], [ %232, %226 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #18
  br label %239

239:                                              ; preds = %238, %235, %223
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %241 = icmp eq %"class.WTF::StringImpl"* %240, null
  br i1 %241, label %255, label %242

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 0
  %248 = load i32, i32* %247, align 4
  br i1 %246, label %249, label %251

249:                                              ; preds = %242
  %250 = add i32 %248, -1
  store i32 %250, i32* %247, align 4
  br label %251

251:                                              ; preds = %249, %242
  %252 = phi i32 [ %250, %249 ], [ %248, %242 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %251
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %240) #18
  br label %255

255:                                              ; preds = %254, %251, %239
  %256 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %257 = icmp eq %"class.WTF::StringImpl"* %256, null
  br i1 %257, label %271, label %258

258:                                              ; preds = %255
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %256, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = load atomic i32, i32* %259 monotonic, align 4
  %261 = and i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %256, i64 0, i32 0
  %264 = load i32, i32* %263, align 4
  br i1 %262, label %265, label %267

265:                                              ; preds = %258
  %266 = add i32 %264, -1
  store i32 %266, i32* %263, align 4
  br label %267

267:                                              ; preds = %265, %258
  %268 = phi i32 [ %266, %265 ], [ %264, %258 ]
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %267
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %256) #18
  br label %271

271:                                              ; preds = %270, %267, %255
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #18
  %272 = bitcast %"class.blink::(anonymous namespace)::StyleSheetHandler"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %272) #18
  %273 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %13, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_117StyleSheetHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %273, align 8
  %274 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %13, i64 0, i32 1
  store %"class.WTF::String"* %9, %"class.WTF::String"** %274, align 8
  %275 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %13, i64 0, i32 2
  store %"class.blink::Document"* %16, %"class.blink::Document"** %275, align 8
  %276 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %13, i64 0, i32 3
  %277 = bitcast %"class.blink::HeapVector"** %276 to i8**
  store i8* %60, i8** %277, align 8
  %278 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %13, i64 0, i32 4
  %279 = bitcast %"class.blink::HeapVector"* %278 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %279, i8 0, i64 24, i1 false) #18
  br i1 %24, label %287, label %280

280:                                              ; preds = %271
  %281 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #18
  %282 = bitcast i8* %281 to %"class.blink::CSSParserContext"*
  call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"* %282, %"class.blink::Document"* nonnull dereferenceable(2848) %16) #18
  %283 = getelementptr inbounds i8, i8* %281, i64 -4
  %284 = bitcast i8* %283 to i16*
  %285 = load atomic i16, i16* %284 monotonic, align 2
  %286 = or i16 %285, 1
  store atomic i16 %286, i16* %284 release, align 2
  br label %289

287:                                              ; preds = %271
  %288 = call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 0) #18
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi %"class.blink::CSSParserContext"* [ %282, %280 ], [ %288, %287 ]
  %291 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %13, i64 0, i32 0
  call void @_ZN5blink9CSSParser22ParseSheetForInspectorEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringERNS_17CSSParserObserverE(%"class.blink::CSSParserContext"* %290, %"class.blink::StyleSheetContents"* %37, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::CSSParserObserver"* nonnull dereferenceable(8) %291) #18
  %292 = bitcast i8* %60 to %"class.WTF::Vector.33"*
  %293 = getelementptr inbounds i8, i8* %60, i64 12
  %294 = bitcast i8* %293 to i32*
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 1
  br i1 %296, label %297, label %318

297:                                              ; preds = %289
  %298 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %292, i32 0) #18
  %299 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %298, i64 0, i32 0, i32 0
  %300 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %299, align 8
  %301 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %300, i64 0, i32 0
  %302 = load i32, i32* %301, align 8
  %303 = icmp eq i32 %302, 1
  br i1 %303, label %304, label %318

304:                                              ; preds = %297
  %305 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %292, i32 0) #18
  %306 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %305, i64 0, i32 0, i32 0
  %307 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %306, align 8
  %308 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %307, i64 0, i32 4, i32 0, i32 0, i32 2
  %309 = load i32, i32* %308, align 4
  %310 = icmp eq i32 %309, 1
  br i1 %310, label %311, label %318

311:                                              ; preds = %304
  %312 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %307, i64 0, i32 4
  %313 = call dereferenceable(32) %"class.blink::CSSPropertySourceData"* @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.26"* %312, i32 0) #18
  %314 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %313, i64 0, i32 0, i32 0, i32 0
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %314, align 8
  %316 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_118VerifySelectorTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name to %"class.WTF::StringImpl"**), align 8
  %317 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %315, %"class.WTF::StringImpl"* %316) #18
  br label %318

318:                                              ; preds = %311, %304, %297, %289
  %319 = phi i1 [ false, %297 ], [ false, %289 ], [ false, %304 ], [ %317, %311 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %272) #18
  %320 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %321 = icmp eq %"class.WTF::StringImpl"* %320, null
  br i1 %321, label %335, label %322

322:                                              ; preds = %318
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %320, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = load atomic i32, i32* %323 monotonic, align 4
  %325 = and i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %320, i64 0, i32 0
  %328 = load i32, i32* %327, align 4
  br i1 %326, label %329, label %331

329:                                              ; preds = %322
  %330 = add i32 %328, -1
  store i32 %330, i32* %327, align 4
  br label %331

331:                                              ; preds = %329, %322
  %332 = phi i32 [ %330, %329 ], [ %328, %322 ]
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %331
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %320) #18
  br label %335

335:                                              ; preds = %318, %331, %334
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #18
  br i1 %319, label %337, label %336

336:                                              ; preds = %335
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0)) #18
  br label %448

337:                                              ; preds = %335
  %338 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %339 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %338, align 8
  %340 = icmp eq %"class.blink::HeapVector"* %339, null
  br i1 %340, label %375, label %341

341:                                              ; preds = %337
  %342 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %339, i64 0, i32 0, i32 0, i32 0, i32 2
  %343 = load i32, i32* %342, align 4
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %375, label %345

345:                                              ; preds = %341
  %346 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 0
  %347 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 1
  br label %348

348:                                              ; preds = %364, %345
  %349 = phi %"class.blink::HeapVector"* [ %339, %345 ], [ %366, %364 ]
  %350 = phi i32 [ 0, %345 ], [ %365, %364 ]
  %351 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %349, i64 0, i32 0
  %352 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %351, i32 %350) #18
  %353 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %352, i64 0, i32 0, i32 0
  %354 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %353, align 8
  %355 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %354, i64 0, i32 1, i32 0
  %356 = load i32, i32* %355, align 4
  %357 = load i32, i32* %346, align 4
  %358 = icmp eq i32 %356, %357
  br i1 %358, label %359, label %364

359:                                              ; preds = %348
  %360 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %354, i64 0, i32 1, i32 1
  %361 = load i32, i32* %360, align 4
  %362 = load i32, i32* %347, align 4
  %363 = icmp eq i32 %361, %362
  br i1 %363, label %370, label %364

364:                                              ; preds = %359, %348
  %365 = add nuw i32 %350, 1
  %366 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %338, align 8
  %367 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %366, i64 0, i32 0, i32 0, i32 0, i32 2
  %368 = load i32, i32* %367, align 4
  %369 = icmp ult i32 %365, %368
  br i1 %369, label %348, label %375

370:                                              ; preds = %359
  %371 = icmp eq %"class.blink::CSSRuleSourceData"* %354, null
  br i1 %371, label %375, label %372

372:                                              ; preds = %370
  %373 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %354, i64 0, i32 0
  %374 = load i32, i32* %373, align 8
  switch i32 %374, label %375 [
    i32 1, label %376
    i32 4, label %376
    i32 5, label %376
    i32 8, label %376
  ]

375:                                              ; preds = %364, %341, %337, %372, %370
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 8, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0)) #18
  br label %448

376:                                              ; preds = %372, %372, %372, %372
  %377 = call %"class.blink::CSSRule"* @_ZN5blink19InspectorStyleSheet17RuleForSourceDataEPNS_17CSSRuleSourceDataE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRuleSourceData"* nonnull %354)
  %378 = icmp eq %"class.blink::CSSRule"* %377, null
  br i1 %378, label %411, label %379

379:                                              ; preds = %376
  %380 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %377, i64 0, i32 1
  %381 = load i8, i8* %380, align 8
  %382 = and i8 %381, 2
  %383 = icmp eq i8 %382, 0
  %384 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %377, i64 0, i32 2, i32 0, i32 0
  br i1 %383, label %399, label %385

385:                                              ; preds = %379, %390
  %386 = phi %"class.blink::ScriptWrappable"** [ %398, %390 ], [ %384, %379 ]
  %387 = phi %"class.blink::CSSRule"* [ %393, %390 ], [ %377, %379 ]
  %388 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %386, align 8
  %389 = icmp eq %"class.blink::ScriptWrappable"* %388, null
  br i1 %389, label %411, label %390

390:                                              ; preds = %385
  %391 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %387, i64 0, i32 2, i32 0, i32 0
  %392 = bitcast %"class.blink::ScriptWrappable"** %391 to %"class.blink::CSSRule"**
  %393 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %392, align 8
  %394 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %393, i64 0, i32 1
  %395 = load i8, i8* %394, align 8
  %396 = and i8 %395, 2
  %397 = icmp eq i8 %396, 0
  %398 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %393, i64 0, i32 2, i32 0, i32 0
  br i1 %397, label %399, label %385

399:                                              ; preds = %390, %379
  %400 = phi %"class.blink::ScriptWrappable"** [ %384, %379 ], [ %398, %390 ]
  %401 = bitcast %"class.blink::ScriptWrappable"** %400 to %"class.blink::CSSStyleSheet"**
  %402 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %401, align 8
  %403 = icmp eq %"class.blink::CSSStyleSheet"* %402, null
  br i1 %403, label %411, label %404

404:                                              ; preds = %399
  %405 = bitcast %"class.blink::CSSRule"* %377 to i32 (%"class.blink::CSSRule"*)***
  %406 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %405, align 8
  %407 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %406, i64 9
  %408 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %407, align 8
  %409 = call i32 %408(%"class.blink::CSSRule"* nonnull %377) #18
  %410 = icmp eq i32 %409, 1
  br i1 %410, label %412, label %411

411:                                              ; preds = %385, %404, %399, %376
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 8, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i64 0, i64 0)) #18
  br label %448

412:                                              ; preds = %404
  %413 = call %"class.blink::CSSStyleRule"* @_ZN5blink17InspectorCSSAgent14AsCSSStyleRuleEPNS_7CSSRuleE(%"class.blink::CSSRule"* nonnull %377) #18
  %414 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %14, align 8
  %415 = call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %414) #18
  %416 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %415) #18
  call void @_ZN5blink12CSSStyleRule15setSelectorTextEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::CSSStyleRule"* %413, %"class.blink::ExecutionContext"* %416, %"class.WTF::String"* dereferenceable(8) %2) #18
  %417 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %354, i64 0, i32 1
  call void @_ZN5blink19InspectorStyleSheet11ReplaceTextERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::SourceRange"* dereferenceable(8) %417, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::SourceRange"* %3, %"class.WTF::String"* %4)
  %418 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0
  %419 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %419, i8 0, i64 16, i1 false) #18
  %420 = ptrtoint i8* %419 to i64
  %421 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 3
  %422 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %421, i64 0, i32 0, i32 0, i32 0
  %423 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %422, align 8
  %424 = bitcast %"class.std::__1::unique_ptr.2"* %421 to i64*
  store i64 %420, i64* %424, align 8
  %425 = icmp eq %"class.WTF::Vector"* %423, null
  br i1 %425, label %439, label %426

426:                                              ; preds = %412
  %427 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %423, i64 0, i32 0, i32 0, i32 0
  %428 = load i32*, i32** %427, align 8
  %429 = icmp eq i32* %428, null
  %430 = bitcast i32* %428 to i8*
  br i1 %429, label %437, label %431, !prof !2

431:                                              ; preds = %426
  %432 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %423, i64 0, i32 0, i32 0, i32 2
  %433 = load i32, i32* %432, align 4
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %436, label %435, !prof !3

435:                                              ; preds = %431
  store i32 0, i32* %432, align 4
  br label %436

436:                                              ; preds = %435, %431
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %430) #18
  store i32* null, i32** %427, align 8
  br label %437

437:                                              ; preds = %436, %426
  %438 = bitcast %"class.WTF::Vector"* %423 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %438) #18
  br label %439

439:                                              ; preds = %437, %412
  %440 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 2
  %441 = load %"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase::Listener"** %440, align 8
  %442 = icmp eq %"class.blink::InspectorStyleSheetBase::Listener"* %441, null
  br i1 %442, label %448, label %443

443:                                              ; preds = %439
  %444 = bitcast %"class.blink::InspectorStyleSheetBase::Listener"* %441 to void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)***
  %445 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)**, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*** %444, align 8
  %446 = getelementptr inbounds void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %445, i64 2
  %447 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %446, align 8
  call void %447(%"class.blink::InspectorStyleSheetBase::Listener"* nonnull %441, %"class.blink::InspectorStyleSheetBase"* %418) #18
  br label %448

448:                                              ; preds = %443, %439, %375, %411, %336
  %449 = phi %"class.blink::CSSStyleRule"* [ null, %336 ], [ null, %375 ], [ null, %411 ], [ %413, %439 ], [ %413, %443 ]
  ret %"class.blink::CSSStyleRule"* %449
}

declare %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSRuleSourceData"* @_ZN5blink19InspectorStyleSheet21FindRuleByHeaderRangeERKNS_11SourceRangeE(%"class.blink::InspectorStyleSheet"* nocapture readonly, %"class.blink::SourceRange"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %3, align 8
  %5 = icmp eq %"class.blink::HeapVector"* %4, null
  br i1 %5, label %35, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %35, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 1
  br label %13

13:                                               ; preds = %10, %29
  %14 = phi %"class.blink::HeapVector"* [ %4, %10 ], [ %31, %29 ]
  %15 = phi i32 [ 0, %10 ], [ %30, %29 ]
  %16 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %14, i64 0, i32 0
  %17 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %16, i32 %15)
  %18 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %19, i64 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = load i32, i32* %11, align 4
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %19, i64 0, i32 1, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = load i32, i32* %12, align 4
  %28 = icmp eq i32 %26, %27
  br i1 %28, label %35, label %29

29:                                               ; preds = %13, %24
  %30 = add nuw i32 %15, 1
  %31 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %3, align 8
  %32 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %31, i64 0, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp ult i32 %30, %33
  br i1 %34, label %13, label %35

35:                                               ; preds = %24, %29, %6, %2
  %36 = phi %"class.blink::CSSRuleSourceData"* [ null, %2 ], [ null, %6 ], [ %19, %24 ], [ null, %29 ]
  ret %"class.blink::CSSRuleSourceData"* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSRule"* @_ZN5blink19InspectorStyleSheet17RuleForSourceDataEPNS_17CSSRuleSourceDataE(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSRuleSourceData"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %3, align 8
  %5 = icmp ne %"class.blink::HeapVector"* %4, null
  %6 = icmp ne %"class.blink::CSSRuleSourceData"* %1, null
  %7 = and i1 %6, %5
  br i1 %7, label %8, label %147

8:                                                ; preds = %2
  tail call void @_ZN5blink19InspectorStyleSheet33RemapSourceDataToCSSOMIfNecessaryEv(%"class.blink::InspectorStyleSheet"* %0)
  %9 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %3, align 8
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %147, label %17

17:                                               ; preds = %8, %22
  %18 = phi %"class.blink::Member.17"* [ %23, %22 ], [ %11, %8 ]
  %19 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %19, align 8
  %21 = icmp eq %"class.blink::CSSRuleSourceData"* %20, %1
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %18, i64 1
  %24 = icmp ult %"class.blink::Member.17"* %23, %15
  br i1 %24, label %17, label %147

25:                                               ; preds = %17
  %26 = ptrtoint %"class.blink::Member.17"* %18 to i64
  %27 = ptrtoint %"class.blink::Member.17"* %11 to i64
  %28 = sub i64 %26, %27
  %29 = lshr exact i64 %28, 3
  %30 = trunc i64 %29 to i32
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %147, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 11, i32 0, i32 0
  %34 = load %"struct.WTF::KeyValuePair.1147"*, %"struct.WTF::KeyValuePair.1147"** %33, align 8
  %35 = icmp eq %"struct.WTF::KeyValuePair.1147"* %34, null
  %36 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 11, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  br i1 %35, label %94, label %38

38:                                               ; preds = %32
  %39 = add i32 %37, -1
  %40 = zext i32 %39 to i64
  %41 = trunc i64 %28 to i32
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, -1
  %44 = add i32 %30, %43
  %45 = lshr i32 %44, 10
  %46 = xor i32 %45, %44
  %47 = mul i32 %46, 9
  %48 = lshr i32 %47, 6
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 11
  %51 = xor i32 %50, -1
  %52 = add i32 %49, %51
  %53 = lshr i32 %52, 16
  %54 = xor i32 %53, %52
  %55 = and i32 %39, %54
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %34, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %30
  br i1 %60, label %89, label %61

61:                                               ; preds = %38
  %62 = xor i32 %54, -1
  %63 = lshr i32 %52, 23
  %64 = add i32 %63, %62
  %65 = shl i32 %64, 12
  %66 = xor i32 %65, %64
  %67 = lshr i32 %66, 7
  %68 = xor i32 %67, %66
  %69 = shl i32 %68, 2
  %70 = xor i32 %69, %68
  %71 = lshr i32 %70, 20
  %72 = xor i32 %71, %70
  %73 = or i32 %72, 1
  %74 = zext i32 %73 to i64
  br label %75

75:                                               ; preds = %80, %61
  %76 = phi i32 [ %59, %61 ], [ %87, %80 ]
  %77 = phi i64 [ %56, %61 ], [ %84, %80 ]
  %78 = phi i64 [ 0, %61 ], [ %82, %80 ]
  %79 = icmp eq i32 %76, -1
  br i1 %79, label %94, label %80

80:                                               ; preds = %75
  %81 = icmp eq i64 %78, 0
  %82 = select i1 %81, i64 %74, i64 %78
  %83 = add i64 %82, %77
  %84 = and i64 %83, %40
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %34, i64 %84
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, %30
  br i1 %88, label %89, label %75

89:                                               ; preds = %80, %38
  %90 = phi %"struct.WTF::KeyValuePair.1147"* [ %57, %38 ], [ %85, %80 ]
  %91 = icmp eq %"struct.WTF::KeyValuePair.1147"* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %89
  %93 = zext i32 %37 to i64
  br label %97

94:                                               ; preds = %75, %89, %32
  %95 = zext i32 %37 to i64
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %34, i64 %95
  br label %97

97:                                               ; preds = %92, %94
  %98 = phi i64 [ %93, %92 ], [ %95, %94 ]
  %99 = phi %"struct.WTF::KeyValuePair.1147"* [ %90, %92 ], [ %96, %94 ]
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %34, i64 %98
  %101 = icmp eq %"struct.WTF::KeyValuePair.1147"* %99, %100
  br i1 %101, label %147, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8, i32 0
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %99, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = tail call dereferenceable(8) %"class.blink::Member.1117"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1135"* %103, i32 %105)
  %107 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %106, i64 0, i32 0, i32 0
  %108 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 9, i32 0
  %110 = tail call dereferenceable(8) %"class.blink::Member.1117"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1135"* %109, i32 %30)
  %111 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %110, i64 0, i32 0, i32 0
  %112 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %111, align 8
  %113 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116CanonicalCSSTextEPNS_7CSSRuleE(%"class.blink::CSSRule"* %112)
  %114 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116CanonicalCSSTextEPNS_7CSSRuleE(%"class.blink::CSSRule"* %108)
  %115 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"* %114) #18
  %116 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %102
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #18
  br label %130

130:                                              ; preds = %102, %126, %129
  %131 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #18
  br label %145

145:                                              ; preds = %130, %141, %144
  %146 = select i1 %115, %"class.blink::CSSRule"* %108, %"class.blink::CSSRule"* null
  br label %147

147:                                              ; preds = %22, %8, %25, %97, %145, %2
  %148 = phi %"class.blink::CSSRule"* [ null, %2 ], [ null, %25 ], [ %146, %145 ], [ null, %97 ], [ null, %8 ], [ null, %22 ]
  ret %"class.blink::CSSRule"* %148
}

declare %"class.blink::CSSStyleRule"* @_ZN5blink17InspectorCSSAgent14AsCSSStyleRuleEPNS_7CSSRuleE(%"class.blink::CSSRule"*) local_unnamed_addr #2

declare void @_ZN5blink12CSSStyleRule15setSelectorTextEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::CSSStyleRule"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19InspectorStyleSheet11ReplaceTextERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_(%"class.blink::InspectorStyleSheet"*, %"class.blink::SourceRange"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::SourceRange"*, %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.blink::SourceRange"*
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #18
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #18
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %5, %15, %30
  %33 = icmp eq %"class.WTF::String"* %4, null
  br i1 %33, label %57, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = tail call i32 @_ZNK5blink11SourceRange6lengthEv(%"class.blink::SourceRange"* %1) #18
  %38 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %6, i32 %36, i32 %37) #18
  %39 = ptrtoint %"class.WTF::StringImpl"* %38 to i64
  %40 = bitcast %"class.WTF::String"* %4 to i64*
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  store i64 %39, i64* %40, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #18
  br label %57

57:                                               ; preds = %34, %53, %56, %32
  %58 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = call i32 @_ZNK5blink11SourceRange6lengthEv(%"class.blink::SourceRange"* %1) #18
  %61 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #18
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %66, align 8
  %67 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %68 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %67, i64* %68, align 8
  br label %76

69:                                               ; preds = %57
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %70, align 8
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %75 = bitcast i8** %74 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %75, align 8
  br label %76

76:                                               ; preds = %65, %69
  %77 = phi i32 [ %72, %69 ], [ 0, %65 ]
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %77, i32* %78, align 8
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %100, label %81

81:                                               ; preds = %76
  %82 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEjjRKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %79, i32 %59, i32 %60, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #18
  %83 = ptrtoint %"class.WTF::StringImpl"* %82 to i64
  %84 = bitcast %"class.WTF::String"* %6 to i64*
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  store i64 %83, i64* %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #18
  br label %100

100:                                              ; preds = %76, %81, %96, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #18
  %101 = icmp eq %"class.blink::SourceRange"* %3, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %100
  %103 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #18
  %104 = load i32, i32* %58, align 4
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %110, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  br label %110

110:                                              ; preds = %102, %107
  %111 = phi i32 [ %109, %107 ], [ 0, %102 ]
  %112 = add i32 %111, %104
  call void @_ZN5blink11SourceRangeC1Ejj(%"class.blink::SourceRange"* nonnull %9, i32 %104, i32 %112) #18
  %113 = bitcast %"class.blink::SourceRange"* %3 to i64*
  %114 = load i64, i64* %8, align 8
  store i64 %114, i64* %113, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #18
  br label %115

115:                                              ; preds = %100, %110
  call void @_ZN5blink19InspectorStyleSheet12InnerSetTextERKN3WTF6StringEb(%"class.blink::InspectorStyleSheet"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext true)
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #18
  br label %131

131:                                              ; preds = %115, %127, %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSKeyframeRule"* @_ZN5blink19InspectorStyleSheet14SetKeyframeKeyERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"*, %"class.blink::SourceRange"* nocapture readonly dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceRange"*, %"class.WTF::String"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend.2476", align 8
  %10 = alloca %"class.blink::(anonymous namespace)::StyleSheetHandler", align 8
  %11 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %11, align 8
  %13 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %12) #18
  %14 = icmp eq %"class.blink::Document"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %6
  %16 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #18
  %17 = bitcast i8* %16 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"* %17, %"class.blink::Document"* nonnull dereferenceable(2848) %13) #18
  %18 = getelementptr inbounds i8, i8* %16, i64 -4
  %19 = bitcast i8* %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = or i16 %20, 1
  store atomic i16 %21, i16* %19 release, align 2
  br label %24

22:                                               ; preds = %6
  %23 = tail call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 0) #18
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi %"class.blink::CSSParserContext"* [ %17, %15 ], [ %23, %22 ]
  %26 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm(i64 192) #18
  %27 = bitcast i8* %26 to %"class.blink::StyleSheetContents"*
  %28 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #18
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  call void @_ZN5blink18StyleSheetContentsC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE(%"class.blink::StyleSheetContents"* %27, %"class.blink::CSSParserContext"* %25, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.blink::StyleRuleImport"* null) #18
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #18
  br label %45

45:                                               ; preds = %44, %41, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #18
  %46 = getelementptr inbounds i8, i8* %26, i64 -4
  %47 = bitcast i8* %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = or i16 %48, 1
  store atomic i16 %49, i16* %47 release, align 2
  %50 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEEEPhm(i64 16) #18
  %51 = getelementptr inbounds i8, i8* %50, i64 -4
  %52 = bitcast i8* %51 to i16*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #18
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = or i16 %53, 1
  store atomic i16 %54, i16* %52 release, align 2
  %55 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #18
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %56, align 8
  %57 = bitcast %"class.WTF::StringAppend.2476"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #18
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %137, label %61

61:                                               ; preds = %45
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %78

68:                                               ; preds = %61
  %69 = zext i32 %67 to i33
  %70 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %69, i33 1) #18
  %71 = extractvalue { i33, i1 } %70, 1
  %72 = extractvalue { i33, i1 } %70, 0
  %73 = icmp slt i33 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %76, !prof !3

75:                                               ; preds = %68
  call void @llvm.trap() #18
  unreachable

76:                                               ; preds = %68
  %77 = trunc i33 %72 to i32
  store i32 %77, i32* %66, align 4
  br label %78

78:                                               ; preds = %76, %61
  %79 = phi i32 [ %77, %76 ], [ %67, %61 ]
  %80 = load atomic i32, i32* %62 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %93

83:                                               ; preds = %78
  %84 = zext i32 %79 to i33
  %85 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %84, i33 1) #18
  %86 = extractvalue { i33, i1 } %85, 1
  %87 = extractvalue { i33, i1 } %85, 0
  %88 = icmp slt i33 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %91, !prof !3

90:                                               ; preds = %83
  call void @llvm.trap() #18
  unreachable

91:                                               ; preds = %83
  %92 = trunc i33 %87 to i32
  store i32 %92, i32* %66, align 4
  br label %93

93:                                               ; preds = %91, %78
  %94 = phi i32 [ %92, %91 ], [ %79, %78 ]
  %95 = load atomic i32, i32* %62 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %93
  %99 = add i32 %94, -1
  store i32 %99, i32* %66, align 4
  br label %100

100:                                              ; preds = %98, %93
  %101 = phi i32 [ %99, %98 ], [ %94, %93 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #18
  %104 = load i32, i32* %66, align 4
  br label %105

105:                                              ; preds = %103, %100
  %106 = phi i32 [ %104, %103 ], [ %101, %100 ]
  %107 = load atomic i32, i32* %62 monotonic, align 4, !noalias !9
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %120

110:                                              ; preds = %105
  %111 = zext i32 %106 to i33
  %112 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %111, i33 1) #18
  %113 = extractvalue { i33, i1 } %112, 1
  %114 = extractvalue { i33, i1 } %112, 0
  %115 = icmp slt i33 %114, 0
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %118, !prof !3

117:                                              ; preds = %110
  call void @llvm.trap() #18, !noalias !9
  unreachable

118:                                              ; preds = %110
  %119 = trunc i33 %114 to i32
  store i32 %119, i32* %66, align 4, !noalias !9
  br label %120

120:                                              ; preds = %118, %105
  %121 = phi i32 [ %119, %118 ], [ %106, %105 ]
  %122 = bitcast %"class.WTF::StringAppend.2476"* %9 to i64*
  store i64 ptrtoint ([24 x i8]* @.str.35 to i64), i64* %122, align 8, !alias.scope !9
  %123 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %123, align 8, !alias.scope !9
  %124 = load atomic i32, i32* %62 monotonic, align 4, !noalias !9
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %141

127:                                              ; preds = %120
  %128 = zext i32 %121 to i33
  %129 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %128, i33 1) #18
  %130 = extractvalue { i33, i1 } %129, 1
  %131 = extractvalue { i33, i1 } %129, 0
  %132 = icmp slt i33 %131, 0
  %133 = or i1 %130, %132
  br i1 %133, label %134, label %135, !prof !3

134:                                              ; preds = %127
  call void @llvm.trap() #18, !noalias !9
  unreachable

135:                                              ; preds = %127
  %136 = trunc i33 %131 to i32
  store i32 %136, i32* %66, align 4, !noalias !9
  br label %141

137:                                              ; preds = %45
  %138 = bitcast %"class.WTF::StringAppend.2476"* %9 to i64*
  store i64 ptrtoint ([24 x i8]* @.str.35 to i64), i64* %138, align 8, !alias.scope !9
  %139 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %139, align 8, !alias.scope !9
  %140 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.36, i64 0, i64 0), i8** %140, align 8, !alias.scope !9
  br label %153

141:                                              ; preds = %135, %120
  %142 = phi i32 [ %136, %135 ], [ %121, %120 ]
  %143 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.36, i64 0, i64 0), i8** %143, align 8, !alias.scope !9
  %144 = load atomic i32, i32* %62 monotonic, align 4, !noalias !9
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %141
  %148 = add i32 %142, -1
  store i32 %148, i32* %66, align 4, !noalias !9
  br label %149

149:                                              ; preds = %147, %141
  %150 = phi i32 [ %148, %147 ], [ %142, %141 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #18, !noalias !9
  br label %153

153:                                              ; preds = %152, %149, %137
  %154 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.2476"* nonnull %9) #18
  store %"class.WTF::StringImpl"* %154, %"class.WTF::StringImpl"** %56, align 8
  %155 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #18
  br label %171

171:                                              ; preds = %170, %167, %153
  br i1 %60, label %185, label %172

172:                                              ; preds = %171
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #18
  br label %185

185:                                              ; preds = %184, %181, %171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #18
  %186 = bitcast %"class.blink::(anonymous namespace)::StyleSheetHandler"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %186) #18
  %187 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_117StyleSheetHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8
  %188 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %10, i64 0, i32 1
  store %"class.WTF::String"* %8, %"class.WTF::String"** %188, align 8
  %189 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %10, i64 0, i32 2
  store %"class.blink::Document"* %13, %"class.blink::Document"** %189, align 8
  %190 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %10, i64 0, i32 3
  %191 = bitcast %"class.blink::HeapVector"** %190 to i8**
  store i8* %50, i8** %191, align 8
  %192 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %10, i64 0, i32 4
  %193 = bitcast %"class.blink::HeapVector"* %192 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %193, i8 0, i64 24, i1 false) #18
  br i1 %14, label %201, label %194

194:                                              ; preds = %185
  %195 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #18
  %196 = bitcast i8* %195 to %"class.blink::CSSParserContext"*
  call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"* %196, %"class.blink::Document"* nonnull dereferenceable(2848) %13) #18
  %197 = getelementptr inbounds i8, i8* %195, i64 -4
  %198 = bitcast i8* %197 to i16*
  %199 = load atomic i16, i16* %198 monotonic, align 2
  %200 = or i16 %199, 1
  store atomic i16 %200, i16* %198 release, align 2
  br label %203

201:                                              ; preds = %185
  %202 = call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 0) #18
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi %"class.blink::CSSParserContext"* [ %196, %194 ], [ %202, %201 ]
  %205 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %10, i64 0, i32 0
  call void @_ZN5blink9CSSParser22ParseSheetForInspectorEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringERNS_17CSSParserObserverE(%"class.blink::CSSParserContext"* %204, %"class.blink::StyleSheetContents"* %27, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::CSSParserObserver"* nonnull dereferenceable(8) %205) #18
  %206 = bitcast i8* %50 to %"class.WTF::Vector.33"*
  %207 = getelementptr inbounds i8, i8* %50, i64 12
  %208 = bitcast i8* %207 to i32*
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %209, 1
  br i1 %210, label %211, label %240

211:                                              ; preds = %203
  %212 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %206, i32 0) #18
  %213 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %212, i64 0, i32 0, i32 0
  %214 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %213, align 8
  %215 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %214, i64 0, i32 0
  %216 = load i32, i32* %215, align 8
  %217 = icmp eq i32 %216, 7
  br i1 %217, label %218, label %240

218:                                              ; preds = %211
  %219 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %206, i32 0) #18
  %220 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %219, i64 0, i32 0, i32 0
  %221 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %221, i64 0, i32 5, i32 0
  %223 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %221, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %224, 1
  br i1 %225, label %226, label %240

226:                                              ; preds = %218
  %227 = call dereferenceable(8) %"class.blink::Member.17"* @_ZNK3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %222, i32 0) #18
  %228 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %227, i64 0, i32 0, i32 0
  %229 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %228, align 8
  %230 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %229, i64 0, i32 0
  %231 = load i32, i32* %230, align 8
  %232 = icmp eq i32 %231, 8
  br i1 %232, label %233, label %240

233:                                              ; preds = %226
  %234 = call dereferenceable(8) %"class.blink::Member.17"* @_ZNK3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %222, i32 0) #18
  %235 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %234, i64 0, i32 0, i32 0
  %236 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %235, align 8
  %237 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %236, i64 0, i32 4, i32 0, i32 0, i32 2
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 1
  br label %240

240:                                              ; preds = %233, %226, %218, %211, %203
  %241 = phi i1 [ false, %211 ], [ false, %203 ], [ %239, %233 ], [ false, %226 ], [ false, %218 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %186) #18
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %257, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %242) #18
  br label %257

257:                                              ; preds = %240, %253, %256
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #18
  br i1 %241, label %259, label %258

258:                                              ; preds = %257
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0)) #18
  br label %367

259:                                              ; preds = %257
  %260 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %261 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %260, align 8
  %262 = icmp eq %"class.blink::HeapVector"* %261, null
  br i1 %262, label %297, label %263

263:                                              ; preds = %259
  %264 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %261, i64 0, i32 0, i32 0, i32 0, i32 2
  %265 = load i32, i32* %264, align 4
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %297, label %267

267:                                              ; preds = %263
  %268 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 0
  %269 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 1
  br label %270

270:                                              ; preds = %286, %267
  %271 = phi %"class.blink::HeapVector"* [ %261, %267 ], [ %288, %286 ]
  %272 = phi i32 [ 0, %267 ], [ %287, %286 ]
  %273 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %271, i64 0, i32 0
  %274 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %273, i32 %272) #18
  %275 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %274, i64 0, i32 0, i32 0
  %276 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %275, align 8
  %277 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %276, i64 0, i32 1, i32 0
  %278 = load i32, i32* %277, align 4
  %279 = load i32, i32* %268, align 4
  %280 = icmp eq i32 %278, %279
  br i1 %280, label %281, label %286

281:                                              ; preds = %270
  %282 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %276, i64 0, i32 1, i32 1
  %283 = load i32, i32* %282, align 4
  %284 = load i32, i32* %269, align 4
  %285 = icmp eq i32 %283, %284
  br i1 %285, label %292, label %286

286:                                              ; preds = %281, %270
  %287 = add nuw i32 %272, 1
  %288 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %260, align 8
  %289 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %288, i64 0, i32 0, i32 0, i32 0, i32 2
  %290 = load i32, i32* %289, align 4
  %291 = icmp ult i32 %287, %290
  br i1 %291, label %270, label %297

292:                                              ; preds = %281
  %293 = icmp eq %"class.blink::CSSRuleSourceData"* %276, null
  br i1 %293, label %297, label %294

294:                                              ; preds = %292
  %295 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %276, i64 0, i32 0
  %296 = load i32, i32* %295, align 8
  switch i32 %296, label %297 [
    i32 1, label %298
    i32 4, label %298
    i32 5, label %298
    i32 8, label %298
  ]

297:                                              ; preds = %286, %263, %259, %294, %292
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 8, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0)) #18
  br label %367

298:                                              ; preds = %294, %294, %294, %294
  %299 = call %"class.blink::CSSRule"* @_ZN5blink19InspectorStyleSheet17RuleForSourceDataEPNS_17CSSRuleSourceDataE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRuleSourceData"* nonnull %276)
  %300 = icmp eq %"class.blink::CSSRule"* %299, null
  br i1 %300, label %333, label %301

301:                                              ; preds = %298
  %302 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %299, i64 0, i32 1
  %303 = load i8, i8* %302, align 8
  %304 = and i8 %303, 2
  %305 = icmp eq i8 %304, 0
  %306 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %299, i64 0, i32 2, i32 0, i32 0
  br i1 %305, label %321, label %307

307:                                              ; preds = %301, %312
  %308 = phi %"class.blink::ScriptWrappable"** [ %320, %312 ], [ %306, %301 ]
  %309 = phi %"class.blink::CSSRule"* [ %315, %312 ], [ %299, %301 ]
  %310 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %308, align 8
  %311 = icmp eq %"class.blink::ScriptWrappable"* %310, null
  br i1 %311, label %333, label %312

312:                                              ; preds = %307
  %313 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %309, i64 0, i32 2, i32 0, i32 0
  %314 = bitcast %"class.blink::ScriptWrappable"** %313 to %"class.blink::CSSRule"**
  %315 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %314, align 8
  %316 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %315, i64 0, i32 1
  %317 = load i8, i8* %316, align 8
  %318 = and i8 %317, 2
  %319 = icmp eq i8 %318, 0
  %320 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %315, i64 0, i32 2, i32 0, i32 0
  br i1 %319, label %321, label %307

321:                                              ; preds = %312, %301
  %322 = phi %"class.blink::ScriptWrappable"** [ %306, %301 ], [ %320, %312 ]
  %323 = bitcast %"class.blink::ScriptWrappable"** %322 to %"class.blink::CSSStyleSheet"**
  %324 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %323, align 8
  %325 = icmp eq %"class.blink::CSSStyleSheet"* %324, null
  br i1 %325, label %333, label %326

326:                                              ; preds = %321
  %327 = bitcast %"class.blink::CSSRule"* %299 to i32 (%"class.blink::CSSRule"*)***
  %328 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %327, align 8
  %329 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %328, i64 9
  %330 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %329, align 8
  %331 = call i32 %330(%"class.blink::CSSRule"* nonnull %299) #18
  %332 = icmp eq i32 %331, 8
  br i1 %332, label %334, label %333

333:                                              ; preds = %307, %326, %321, %298
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 8, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i64 0, i64 0)) #18
  br label %367

334:                                              ; preds = %326
  %335 = bitcast %"class.blink::CSSRule"* %299 to %"class.blink::CSSKeyframeRule"*
  call void @_ZN5blink15CSSKeyframeRule10setKeyTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::CSSKeyframeRule"* nonnull %335, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::ExceptionState"* dereferenceable(72) %5) #18
  %336 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %276, i64 0, i32 1
  call void @_ZN5blink19InspectorStyleSheet11ReplaceTextERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::SourceRange"* dereferenceable(8) %336, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::SourceRange"* %3, %"class.WTF::String"* %4)
  %337 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0
  %338 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %338, i8 0, i64 16, i1 false) #18
  %339 = ptrtoint i8* %338 to i64
  %340 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 3
  %341 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %340, i64 0, i32 0, i32 0, i32 0
  %342 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %341, align 8
  %343 = bitcast %"class.std::__1::unique_ptr.2"* %340 to i64*
  store i64 %339, i64* %343, align 8
  %344 = icmp eq %"class.WTF::Vector"* %342, null
  br i1 %344, label %358, label %345

345:                                              ; preds = %334
  %346 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %342, i64 0, i32 0, i32 0, i32 0
  %347 = load i32*, i32** %346, align 8
  %348 = icmp eq i32* %347, null
  %349 = bitcast i32* %347 to i8*
  br i1 %348, label %356, label %350, !prof !2

350:                                              ; preds = %345
  %351 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %342, i64 0, i32 0, i32 0, i32 2
  %352 = load i32, i32* %351, align 4
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %355, label %354, !prof !3

354:                                              ; preds = %350
  store i32 0, i32* %351, align 4
  br label %355

355:                                              ; preds = %354, %350
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %349) #18
  store i32* null, i32** %346, align 8
  br label %356

356:                                              ; preds = %355, %345
  %357 = bitcast %"class.WTF::Vector"* %342 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %357) #18
  br label %358

358:                                              ; preds = %356, %334
  %359 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 2
  %360 = load %"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase::Listener"** %359, align 8
  %361 = icmp eq %"class.blink::InspectorStyleSheetBase::Listener"* %360, null
  br i1 %361, label %367, label %362

362:                                              ; preds = %358
  %363 = bitcast %"class.blink::InspectorStyleSheetBase::Listener"* %360 to void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)***
  %364 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)**, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*** %363, align 8
  %365 = getelementptr inbounds void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %364, i64 2
  %366 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %365, align 8
  call void %366(%"class.blink::InspectorStyleSheetBase::Listener"* nonnull %360, %"class.blink::InspectorStyleSheetBase"* %337) #18
  br label %367

367:                                              ; preds = %362, %358, %297, %333, %258
  %368 = phi %"class.blink::CSSKeyframeRule"* [ null, %258 ], [ null, %297 ], [ null, %333 ], [ %335, %358 ], [ %335, %362 ]
  ret %"class.blink::CSSKeyframeRule"* %368
}

declare void @_ZN5blink15CSSKeyframeRule10setKeyTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::CSSKeyframeRule"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSRule"* @_ZN5blink19InspectorStyleSheet12SetStyleTextERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"*, %"class.blink::SourceRange"* nocapture readonly dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceRange"*, %"class.WTF::String"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %7, align 8
  %9 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %8) #18
  %10 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115VerifyStyleTextEPNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* %9, %"class.WTF::String"* dereferenceable(8) %2)
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0)) #18
  br label %149

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %13, align 8
  %15 = icmp eq %"class.blink::HeapVector"* %14, null
  br i1 %15, label %50, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %14, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %50, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 1
  br label %23

23:                                               ; preds = %39, %20
  %24 = phi %"class.blink::HeapVector"* [ %14, %20 ], [ %41, %39 ]
  %25 = phi i32 [ 0, %20 ], [ %40, %39 ]
  %26 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %24, i64 0, i32 0
  %27 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %26, i32 %25) #18
  %28 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %29, i64 0, i32 2, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = load i32, i32* %21, align 4
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %34, label %39

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %29, i64 0, i32 2, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* %22, align 4
  %38 = icmp eq i32 %36, %37
  br i1 %38, label %45, label %39

39:                                               ; preds = %34, %23
  %40 = add nuw i32 %25, 1
  %41 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %13, align 8
  %42 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %41, i64 0, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp ult i32 %40, %43
  br i1 %44, label %23, label %50

45:                                               ; preds = %34
  %46 = icmp eq %"class.blink::CSSRuleSourceData"* %29, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %29, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  switch i32 %49, label %50 [
    i32 1, label %51
    i32 4, label %51
    i32 5, label %51
    i32 8, label %51
  ]

50:                                               ; preds = %39, %16, %12, %47, %45
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 8, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i64 0, i64 0)) #18
  br label %149

51:                                               ; preds = %47, %47, %47, %47
  %52 = tail call %"class.blink::CSSRule"* @_ZN5blink19InspectorStyleSheet17RuleForSourceDataEPNS_17CSSRuleSourceDataE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRuleSourceData"* nonnull %29)
  %53 = icmp eq %"class.blink::CSSRule"* %52, null
  br i1 %53, label %92, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %52, i64 0, i32 1
  %56 = load i8, i8* %55, align 8
  %57 = and i8 %56, 2
  %58 = icmp eq i8 %57, 0
  %59 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %52, i64 0, i32 2, i32 0, i32 0
  br i1 %58, label %74, label %60

60:                                               ; preds = %54, %65
  %61 = phi %"class.blink::ScriptWrappable"** [ %73, %65 ], [ %59, %54 ]
  %62 = phi %"class.blink::CSSRule"* [ %68, %65 ], [ %52, %54 ]
  %63 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %61, align 8
  %64 = icmp eq %"class.blink::ScriptWrappable"* %63, null
  br i1 %64, label %92, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %62, i64 0, i32 2, i32 0, i32 0
  %67 = bitcast %"class.blink::ScriptWrappable"** %66 to %"class.blink::CSSRule"**
  %68 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %68, i64 0, i32 1
  %70 = load i8, i8* %69, align 8
  %71 = and i8 %70, 2
  %72 = icmp eq i8 %71, 0
  %73 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %68, i64 0, i32 2, i32 0, i32 0
  br i1 %72, label %74, label %60

74:                                               ; preds = %65, %54
  %75 = phi %"class.blink::ScriptWrappable"** [ %59, %54 ], [ %73, %65 ]
  %76 = bitcast %"class.blink::ScriptWrappable"** %75 to %"class.blink::CSSStyleSheet"**
  %77 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %76, align 8
  %78 = icmp eq %"class.blink::CSSStyleSheet"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::CSSRule"* %52 to i32 (%"class.blink::CSSRule"*)***
  %81 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %80, align 8
  %82 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %81, i64 9
  %83 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %82, align 8
  %84 = tail call i32 %83(%"class.blink::CSSRule"* nonnull %52) #18
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %93, label %86

86:                                               ; preds = %79
  %87 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %80, align 8
  %88 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %87, i64 9
  %89 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %88, align 8
  %90 = tail call i32 %89(%"class.blink::CSSRule"* nonnull %52) #18
  %91 = icmp eq i32 %90, 8
  br i1 %91, label %93, label %92

92:                                               ; preds = %60, %74, %51, %86
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 8, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i64 0, i64 0)) #18
  br label %149

93:                                               ; preds = %86, %79
  %94 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %80, align 8
  %95 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %94, i64 9
  %96 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %95, align 8
  %97 = tail call i32 %96(%"class.blink::CSSRule"* nonnull %52) #18
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = bitcast %"class.blink::CSSRule"* %52 to %"class.blink::CSSStyleRule"*
  %101 = tail call %"class.blink::CSSStyleDeclaration"* @_ZNK5blink12CSSStyleRule5styleEv(%"class.blink::CSSStyleRule"* nonnull %100) #18
  br label %105

102:                                              ; preds = %93
  %103 = bitcast %"class.blink::CSSRule"* %52 to %"class.blink::CSSKeyframeRule"*
  %104 = tail call %"class.blink::CSSStyleDeclaration"* @_ZNK5blink15CSSKeyframeRule5styleEv(%"class.blink::CSSKeyframeRule"* nonnull %103) #18
  br label %105

105:                                              ; preds = %102, %99
  %106 = phi %"class.blink::CSSStyleDeclaration"* [ %101, %99 ], [ %104, %102 ]
  %107 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %7, align 8
  %108 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %107) #18
  %109 = icmp eq %"class.blink::Document"* %108, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %105
  %111 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* nonnull %108) #18
  br label %112

112:                                              ; preds = %105, %110
  %113 = phi %"class.blink::ExecutionContext"* [ %111, %110 ], [ null, %105 ]
  %114 = bitcast %"class.blink::CSSStyleDeclaration"* %106 to void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)***
  %115 = load void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %115, i64 11
  %117 = load void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %116, align 8
  tail call void %117(%"class.blink::CSSStyleDeclaration"* %106, %"class.blink::ExecutionContext"* %113, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::ExceptionState"* dereferenceable(72) %5) #18
  %118 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %29, i64 0, i32 2
  tail call void @_ZN5blink19InspectorStyleSheet11ReplaceTextERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::SourceRange"* dereferenceable(8) %118, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::SourceRange"* %3, %"class.WTF::String"* %4)
  %119 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0
  %120 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 16, i1 false) #18
  %121 = ptrtoint i8* %120 to i64
  %122 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 3
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %123, align 8
  %125 = bitcast %"class.std::__1::unique_ptr.2"* %122 to i64*
  store i64 %121, i64* %125, align 8
  %126 = icmp eq %"class.WTF::Vector"* %124, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %112
  %128 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %124, i64 0, i32 0, i32 0, i32 0
  %129 = load i32*, i32** %128, align 8
  %130 = icmp eq i32* %129, null
  %131 = bitcast i32* %129 to i8*
  br i1 %130, label %138, label %132, !prof !2

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %124, i64 0, i32 0, i32 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %137, label %136, !prof !3

136:                                              ; preds = %132
  store i32 0, i32* %133, align 4
  br label %137

137:                                              ; preds = %136, %132
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %131) #18
  store i32* null, i32** %128, align 8
  br label %138

138:                                              ; preds = %137, %127
  %139 = bitcast %"class.WTF::Vector"* %124 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %139) #18
  br label %140

140:                                              ; preds = %138, %112
  %141 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 2
  %142 = load %"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase::Listener"** %141, align 8
  %143 = icmp eq %"class.blink::InspectorStyleSheetBase::Listener"* %142, null
  br i1 %143, label %149, label %144

144:                                              ; preds = %140
  %145 = bitcast %"class.blink::InspectorStyleSheetBase::Listener"* %142 to void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)***
  %146 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)**, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %146, i64 2
  %148 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %147, align 8
  tail call void %148(%"class.blink::InspectorStyleSheetBase::Listener"* nonnull %142, %"class.blink::InspectorStyleSheetBase"* %119) #18
  br label %149

149:                                              ; preds = %144, %140, %50, %92, %11
  %150 = phi %"class.blink::CSSRule"* [ null, %11 ], [ null, %50 ], [ null, %92 ], [ %52, %140 ], [ %52, %144 ]
  ret %"class.blink::CSSRule"* %150
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115VerifyStyleTextEPNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend.2476", align 8
  %5 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = bitcast %"class.WTF::StringAppend.2476"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %85, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %27

17:                                               ; preds = %10
  %18 = zext i32 %16 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #18
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %17
  tail call void @llvm.trap() #18
  unreachable

25:                                               ; preds = %17
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %15, align 4
  br label %27

27:                                               ; preds = %25, %10
  %28 = phi i32 [ %26, %25 ], [ %16, %10 ]
  %29 = load atomic i32, i32* %11 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %42

32:                                               ; preds = %27
  %33 = zext i32 %28 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #18
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !3

39:                                               ; preds = %32
  tail call void @llvm.trap() #18
  unreachable

40:                                               ; preds = %32
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %15, align 4
  br label %42

42:                                               ; preds = %40, %27
  %43 = phi i32 [ %41, %40 ], [ %28, %27 ]
  %44 = load atomic i32, i32* %11 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  %48 = add i32 %43, -1
  store i32 %48, i32* %15, align 4
  br label %49

49:                                               ; preds = %47, %42
  %50 = phi i32 [ %48, %47 ], [ %43, %42 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #18
  br label %53

53:                                               ; preds = %49, %52
  %54 = load atomic i32, i32* %11 monotonic, align 4, !noalias !12
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = load i32, i32* %15, align 4
  br i1 %56, label %58, label %68

58:                                               ; preds = %53
  %59 = zext i32 %57 to i33
  %60 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #18
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !3

65:                                               ; preds = %58
  tail call void @llvm.trap() #18, !noalias !12
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %15, align 4, !noalias !12
  br label %68

68:                                               ; preds = %53, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %53 ]
  %70 = bitcast %"class.WTF::StringAppend.2476"* %4 to i64*
  store i64 ptrtoint ([6 x i8]* @.str.37 to i64), i64* %70, align 8, !alias.scope !12
  %71 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %71, align 8, !alias.scope !12
  %72 = load atomic i32, i32* %11 monotonic, align 4, !noalias !12
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %89

75:                                               ; preds = %68
  %76 = zext i32 %69 to i33
  %77 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #18
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %75
  tail call void @llvm.trap() #18, !noalias !12
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %15, align 4, !noalias !12
  br label %89

85:                                               ; preds = %2
  %86 = bitcast %"class.WTF::StringAppend.2476"* %4 to i64*
  store i64 ptrtoint ([6 x i8]* @.str.37 to i64), i64* %86, align 8, !alias.scope !12
  %87 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %87, align 8, !alias.scope !12
  %88 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), i8** %88, align 8, !alias.scope !12
  br label %101

89:                                               ; preds = %83, %68
  %90 = phi i32 [ %84, %83 ], [ %69, %68 ]
  %91 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), i8** %91, align 8, !alias.scope !12
  %92 = load atomic i32, i32* %11 monotonic, align 4, !noalias !12
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %89
  %96 = add i32 %90, -1
  store i32 %96, i32* %15, align 4, !noalias !12
  br label %97

97:                                               ; preds = %95, %89
  %98 = phi i32 [ %96, %95 ], [ %90, %89 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #18, !noalias !12
  br label %101

101:                                              ; preds = %85, %97, %100
  %102 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.2476"* nonnull %4)
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %103, align 8
  %104 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_114VerifyRuleTextEPNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  %105 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #18
  br label %119

119:                                              ; preds = %101, %115, %118
  %120 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #18
  br label %136

136:                                              ; preds = %119, %132, %135
  br i1 %9, label %150, label %137

137:                                              ; preds = %136
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #18
  br label %150

150:                                              ; preds = %136, %146, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  ret i1 %104
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSRuleSourceData"* @_ZN5blink19InspectorStyleSheet19FindRuleByBodyRangeERKNS_11SourceRangeE(%"class.blink::InspectorStyleSheet"* nocapture readonly, %"class.blink::SourceRange"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %3, align 8
  %5 = icmp eq %"class.blink::HeapVector"* %4, null
  br i1 %5, label %35, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %35, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 1
  br label %13

13:                                               ; preds = %10, %29
  %14 = phi %"class.blink::HeapVector"* [ %4, %10 ], [ %31, %29 ]
  %15 = phi i32 [ 0, %10 ], [ %30, %29 ]
  %16 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %14, i64 0, i32 0
  %17 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %16, i32 %15)
  %18 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %19, i64 0, i32 2, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = load i32, i32* %11, align 4
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %19, i64 0, i32 2, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = load i32, i32* %12, align 4
  %28 = icmp eq i32 %26, %27
  br i1 %28, label %35, label %29

29:                                               ; preds = %13, %24
  %30 = add nuw i32 %15, 1
  %31 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %3, align 8
  %32 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %31, i64 0, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp ult i32 %30, %33
  br i1 %34, label %13, label %35

35:                                               ; preds = %24, %29, %6, %2
  %36 = phi %"class.blink::CSSRuleSourceData"* [ null, %2 ], [ null, %6 ], [ %19, %24 ], [ null, %29 ]
  ret %"class.blink::CSSRuleSourceData"* %36
}

declare %"class.blink::CSSStyleDeclaration"* @_ZNK5blink12CSSStyleRule5styleEv(%"class.blink::CSSStyleRule"*) local_unnamed_addr #2

declare %"class.blink::CSSStyleDeclaration"* @_ZNK5blink15CSSKeyframeRule5styleEv(%"class.blink::CSSKeyframeRule"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMediaRule"* @_ZN5blink19InspectorStyleSheet16SetMediaRuleTextERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"*, %"class.blink::SourceRange"* nocapture readonly dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceRange"*, %"class.WTF::String"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::StringAppend.2763", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend.2762", align 8
  %11 = alloca %"class.WTF::StringAppend.2763", align 8
  %12 = alloca %"class.WTF::StringAppend.2476", align 8
  %13 = alloca %"class.blink::(anonymous namespace)::StyleSheetHandler", align 8
  %14 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %14, align 8
  %16 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %15) #18
  %17 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_115VerifyMediaTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name to i8*) acquire, align 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %23, !prof !5

19:                                               ; preds = %6
  %20 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_115VerifyMediaTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name) #18
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115VerifyMediaTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name to %"class.WTF::String"*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i64 0, i64 0), i64 23) #18
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_115VerifyMediaTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name) #18
  br label %23

23:                                               ; preds = %22, %19, %6
  %24 = icmp eq %"class.blink::Document"* %16, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %23
  %26 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #18
  %27 = bitcast i8* %26 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"* %27, %"class.blink::Document"* nonnull dereferenceable(2848) %16) #18
  %28 = getelementptr inbounds i8, i8* %26, i64 -4
  %29 = bitcast i8* %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = or i16 %30, 1
  store atomic i16 %31, i16* %29 release, align 2
  br label %34

32:                                               ; preds = %23
  %33 = tail call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 0) #18
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi %"class.blink::CSSParserContext"* [ %27, %25 ], [ %33, %32 ]
  %36 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm(i64 192) #18
  %37 = bitcast i8* %36 to %"class.blink::StyleSheetContents"*
  %38 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #18
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %39, align 8
  call void @_ZN5blink18StyleSheetContentsC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE(%"class.blink::StyleSheetContents"* %37, %"class.blink::CSSParserContext"* %35, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::StyleRuleImport"* null) #18
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #18
  br label %55

55:                                               ; preds = %54, %51, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #18
  %56 = getelementptr inbounds i8, i8* %36, i64 -4
  %57 = bitcast i8* %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = or i16 %58, 1
  store atomic i16 %59, i16* %57 release, align 2
  %60 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEEEPhm(i64 16) #18
  %61 = getelementptr inbounds i8, i8* %60, i64 -4
  %62 = bitcast i8* %61 to i16*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #18
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = or i16 %63, 1
  store atomic i16 %64, i16* %62 release, align 2
  %65 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #18
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %66, align 8
  %67 = bitcast %"class.WTF::StringAppend.2762"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %67) #18
  %68 = bitcast %"class.WTF::StringAppend.2763"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #18
  %69 = bitcast %"class.WTF::StringAppend.2476"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #18
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %149, label %73

73:                                               ; preds = %55
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #18
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %80
  call void @llvm.trap() #18
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %88, %73
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = load atomic i32, i32* %74 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %105

95:                                               ; preds = %90
  %96 = zext i32 %91 to i33
  %97 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %96, i33 1) #18
  %98 = extractvalue { i33, i1 } %97, 1
  %99 = extractvalue { i33, i1 } %97, 0
  %100 = icmp slt i33 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %102, label %103, !prof !3

102:                                              ; preds = %95
  call void @llvm.trap() #18
  unreachable

103:                                              ; preds = %95
  %104 = trunc i33 %99 to i32
  store i32 %104, i32* %78, align 4
  br label %105

105:                                              ; preds = %103, %90
  %106 = phi i32 [ %104, %103 ], [ %91, %90 ]
  %107 = load atomic i32, i32* %74 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  %111 = add i32 %106, -1
  store i32 %111, i32* %78, align 4
  br label %112

112:                                              ; preds = %110, %105
  %113 = phi i32 [ %111, %110 ], [ %106, %105 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #18
  %116 = load i32, i32* %78, align 4
  br label %117

117:                                              ; preds = %115, %112
  %118 = phi i32 [ %116, %115 ], [ %113, %112 ]
  %119 = load atomic i32, i32* %74 monotonic, align 4, !noalias !15
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %132

122:                                              ; preds = %117
  %123 = zext i32 %118 to i33
  %124 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %123, i33 1) #18
  %125 = extractvalue { i33, i1 } %124, 1
  %126 = extractvalue { i33, i1 } %124, 0
  %127 = icmp slt i33 %126, 0
  %128 = or i1 %125, %127
  br i1 %128, label %129, label %130, !prof !3

129:                                              ; preds = %122
  call void @llvm.trap() #18, !noalias !15
  unreachable

130:                                              ; preds = %122
  %131 = trunc i33 %126 to i32
  store i32 %131, i32* %78, align 4, !noalias !15
  br label %132

132:                                              ; preds = %130, %117
  %133 = phi i32 [ %131, %130 ], [ %118, %117 ]
  %134 = bitcast %"class.WTF::StringAppend.2476"* %12 to i64*
  store i64 ptrtoint ([8 x i8]* @.str.39 to i64), i64* %134, align 8, !alias.scope !15
  %135 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %135, align 8, !alias.scope !15
  %136 = load atomic i32, i32* %74 monotonic, align 4, !noalias !15
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %153

139:                                              ; preds = %132
  %140 = zext i32 %133 to i33
  %141 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %140, i33 1) #18
  %142 = extractvalue { i33, i1 } %141, 1
  %143 = extractvalue { i33, i1 } %141, 0
  %144 = icmp slt i33 %143, 0
  %145 = or i1 %142, %144
  br i1 %145, label %146, label %147, !prof !3

146:                                              ; preds = %139
  call void @llvm.trap() #18, !noalias !15
  unreachable

147:                                              ; preds = %139
  %148 = trunc i33 %143 to i32
  store i32 %148, i32* %78, align 4, !noalias !15
  br label %153

149:                                              ; preds = %55
  %150 = bitcast %"class.WTF::StringAppend.2476"* %12 to i64*
  store i64 ptrtoint ([8 x i8]* @.str.39 to i64), i64* %150, align 8, !alias.scope !15
  %151 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %151, align 8, !alias.scope !15
  %152 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0), i8** %152, align 8, !alias.scope !15
  br label %165

153:                                              ; preds = %147, %132
  %154 = phi i32 [ %148, %147 ], [ %133, %132 ]
  %155 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0), i8** %155, align 8, !alias.scope !15
  %156 = load atomic i32, i32* %74 monotonic, align 4, !noalias !15
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %161

159:                                              ; preds = %153
  %160 = add i32 %154, -1
  store i32 %160, i32* %78, align 4, !noalias !15
  br label %161

161:                                              ; preds = %159, %153
  %162 = phi i32 [ %160, %159 ], [ %154, %153 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #18, !noalias !15
  br label %165

165:                                              ; preds = %164, %161, %149
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115VerifyMediaTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name to %"class.WTF::StringImpl"**), align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %185, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %185

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = zext i32 %175 to i33
  %177 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %176, i33 1) #18
  %178 = extractvalue { i33, i1 } %177, 1
  %179 = extractvalue { i33, i1 } %177, 0
  %180 = icmp slt i33 %179, 0
  %181 = or i1 %178, %180
  br i1 %181, label %182, label %183, !prof !3

182:                                              ; preds = %173
  call void @llvm.trap() #18
  unreachable

183:                                              ; preds = %173
  %184 = trunc i33 %179 to i32
  store i32 %184, i32* %174, align 4
  br label %185

185:                                              ; preds = %183, %168, %165
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2763"* nonnull sret %11, %"class.WTF::StringAppend.2476"* nonnull dereferenceable(24) %12, %"class.WTF::StringImpl"* %166) #18
  %186 = bitcast %"class.WTF::StringAppend.2763"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %186) #18
  %187 = bitcast %"class.WTF::StringAppend.2763"* %11 to i64*
  %188 = load i64, i64* %187, align 8, !noalias !18
  %189 = bitcast %"class.WTF::StringAppend.2763"* %7 to i64*
  store i64 %188, i64* %189, align 8, !noalias !18
  %190 = getelementptr inbounds %"class.WTF::StringAppend.2763", %"class.WTF::StringAppend.2763"* %11, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8, !noalias !18
  %192 = getelementptr inbounds %"class.WTF::StringAppend.2763", %"class.WTF::StringAppend.2763"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8, !noalias !18
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %185
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #18
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !3

208:                                              ; preds = %199
  call void @llvm.trap() #18
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %185
  %212 = getelementptr inbounds %"class.WTF::StringAppend.2763", %"class.WTF::StringAppend.2763"* %7, i64 0, i32 0, i32 1
  %213 = getelementptr inbounds %"class.WTF::StringAppend.2763", %"class.WTF::StringAppend.2763"* %11, i64 0, i32 0, i32 1
  %214 = bitcast i8** %213 to i64*
  %215 = load i64, i64* %214, align 8, !noalias !18
  %216 = bitcast i8** %212 to i64*
  store i64 %215, i64* %216, align 8, !noalias !18
  %217 = getelementptr inbounds %"class.WTF::StringAppend.2763", %"class.WTF::StringAppend.2763"* %11, i64 0, i32 1, i32 0, i32 0
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %217, align 8, !noalias !18
  %219 = getelementptr inbounds %"class.WTF::StringAppend.2763", %"class.WTF::StringAppend.2763"* %7, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %218, %"class.WTF::StringImpl"** %219, align 8, !noalias !18
  %220 = icmp eq %"class.WTF::StringImpl"* %218, null
  br i1 %220, label %238, label %221

221:                                              ; preds = %211
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %238

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  %229 = zext i32 %228 to i33
  %230 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %229, i33 1) #18
  %231 = extractvalue { i33, i1 } %230, 1
  %232 = extractvalue { i33, i1 } %230, 0
  %233 = icmp slt i33 %232, 0
  %234 = or i1 %231, %233
  br i1 %234, label %235, label %236, !prof !3

235:                                              ; preds = %226
  call void @llvm.trap() #18
  unreachable

236:                                              ; preds = %226
  %237 = trunc i33 %232 to i32
  store i32 %237, i32* %227, align 4
  br label %238

238:                                              ; preds = %236, %221, %211
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.2762"* nonnull %10, %"class.WTF::StringAppend.2763"* nonnull byval(%"class.WTF::StringAppend.2763") align 8 %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0)) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %186) #18
  %239 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.2762"* nonnull %10) #18
  store %"class.WTF::StringImpl"* %239, %"class.WTF::StringImpl"** %66, align 8
  %240 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %240, align 8
  %242 = icmp eq %"class.WTF::StringImpl"* %241, null
  br i1 %242, label %256, label %243

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = and i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 0
  %249 = load i32, i32* %248, align 4
  br i1 %247, label %250, label %252

250:                                              ; preds = %243
  %251 = add i32 %249, -1
  store i32 %251, i32* %248, align 4
  br label %252

252:                                              ; preds = %250, %243
  %253 = phi i32 [ %251, %250 ], [ %249, %243 ]
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %252
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %241) #18
  br label %256

256:                                              ; preds = %255, %252, %238
  %257 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #18
  br label %273

273:                                              ; preds = %272, %269, %256
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %217, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %289, label %276

276:                                              ; preds = %273
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = and i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  br i1 %280, label %283, label %285

283:                                              ; preds = %276
  %284 = add i32 %282, -1
  store i32 %284, i32* %281, align 4
  br label %285

285:                                              ; preds = %283, %276
  %286 = phi i32 [ %284, %283 ], [ %282, %276 ]
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %274) #18
  br label %289

289:                                              ; preds = %288, %285, %273
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %291 = icmp eq %"class.WTF::StringImpl"* %290, null
  br i1 %291, label %305, label %292

292:                                              ; preds = %289
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 0
  %298 = load i32, i32* %297, align 4
  br i1 %296, label %299, label %301

299:                                              ; preds = %292
  %300 = add i32 %298, -1
  store i32 %300, i32* %297, align 4
  br label %301

301:                                              ; preds = %299, %292
  %302 = phi i32 [ %300, %299 ], [ %298, %292 ]
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %305

304:                                              ; preds = %301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %290) #18
  br label %305

305:                                              ; preds = %304, %301, %289
  %306 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  %308 = icmp eq %"class.WTF::StringImpl"* %307, null
  br i1 %308, label %322, label %309

309:                                              ; preds = %305
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load atomic i32, i32* %310 monotonic, align 4
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 0
  %315 = load i32, i32* %314, align 4
  br i1 %313, label %316, label %318

316:                                              ; preds = %309
  %317 = add i32 %315, -1
  store i32 %317, i32* %314, align 4
  br label %318

318:                                              ; preds = %316, %309
  %319 = phi i32 [ %317, %316 ], [ %315, %309 ]
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %322

321:                                              ; preds = %318
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %307) #18
  br label %322

322:                                              ; preds = %321, %318, %305
  br i1 %72, label %336, label %323

323:                                              ; preds = %322
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = and i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %329 = load i32, i32* %328, align 4
  br i1 %327, label %330, label %332

330:                                              ; preds = %323
  %331 = add i32 %329, -1
  store i32 %331, i32* %328, align 4
  br label %332

332:                                              ; preds = %330, %323
  %333 = phi i32 [ %331, %330 ], [ %329, %323 ]
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %336

335:                                              ; preds = %332
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #18
  br label %336

336:                                              ; preds = %335, %332, %322
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #18
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %67) #18
  %337 = bitcast %"class.blink::(anonymous namespace)::StyleSheetHandler"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %337) #18
  %338 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %13, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_117StyleSheetHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %338, align 8
  %339 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %13, i64 0, i32 1
  store %"class.WTF::String"* %9, %"class.WTF::String"** %339, align 8
  %340 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %13, i64 0, i32 2
  store %"class.blink::Document"* %16, %"class.blink::Document"** %340, align 8
  %341 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %13, i64 0, i32 3
  %342 = bitcast %"class.blink::HeapVector"** %341 to i8**
  store i8* %60, i8** %342, align 8
  %343 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %13, i64 0, i32 4
  %344 = bitcast %"class.blink::HeapVector"* %343 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %344, i8 0, i64 24, i1 false) #18
  br i1 %24, label %352, label %345

345:                                              ; preds = %336
  %346 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #18
  %347 = bitcast i8* %346 to %"class.blink::CSSParserContext"*
  call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"* %347, %"class.blink::Document"* nonnull dereferenceable(2848) %16) #18
  %348 = getelementptr inbounds i8, i8* %346, i64 -4
  %349 = bitcast i8* %348 to i16*
  %350 = load atomic i16, i16* %349 monotonic, align 2
  %351 = or i16 %350, 1
  store atomic i16 %351, i16* %349 release, align 2
  br label %354

352:                                              ; preds = %336
  %353 = call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 0) #18
  br label %354

354:                                              ; preds = %352, %345
  %355 = phi %"class.blink::CSSParserContext"* [ %347, %345 ], [ %353, %352 ]
  %356 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %13, i64 0, i32 0
  call void @_ZN5blink9CSSParser22ParseSheetForInspectorEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringERNS_17CSSParserObserverE(%"class.blink::CSSParserContext"* %355, %"class.blink::StyleSheetContents"* %37, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::CSSParserObserver"* nonnull dereferenceable(8) %356) #18
  %357 = bitcast i8* %60 to %"class.WTF::Vector.33"*
  %358 = getelementptr inbounds i8, i8* %60, i64 12
  %359 = bitcast i8* %358 to i32*
  %360 = load i32, i32* %359, align 4
  %361 = icmp eq i32 %360, 1
  br i1 %361, label %362, label %397

362:                                              ; preds = %354
  %363 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %357, i32 0) #18
  %364 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %363, i64 0, i32 0, i32 0
  %365 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %364, align 8
  %366 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %365, i64 0, i32 0
  %367 = load i32, i32* %366, align 8
  %368 = icmp eq i32 %367, 3
  br i1 %368, label %369, label %397

369:                                              ; preds = %362
  %370 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %357, i32 0) #18
  %371 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %370, i64 0, i32 0, i32 0
  %372 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %371, align 8
  %373 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %372, i64 0, i32 5, i32 0
  %374 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %372, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %375 = load i32, i32* %374, align 4
  %376 = icmp eq i32 %375, 1
  br i1 %376, label %377, label %397

377:                                              ; preds = %369
  %378 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %373, i32 0) #18
  %379 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %378, i64 0, i32 0, i32 0
  %380 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %379, align 8
  %381 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %380, i64 0, i32 0
  %382 = load i32, i32* %381, align 8
  switch i32 %382, label %397 [
    i32 1, label %383
    i32 4, label %383
    i32 5, label %383
    i32 8, label %383
  ]

383:                                              ; preds = %377, %377, %377, %377
  %384 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %373, i32 0) #18
  %385 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %384, i64 0, i32 0, i32 0
  %386 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %385, align 8
  %387 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %386, i64 0, i32 4, i32 0, i32 0, i32 2
  %388 = load i32, i32* %387, align 4
  %389 = icmp eq i32 %388, 1
  br i1 %389, label %390, label %397

390:                                              ; preds = %383
  %391 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %386, i64 0, i32 4
  %392 = call dereferenceable(32) %"class.blink::CSSPropertySourceData"* @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.26"* %391, i32 0) #18
  %393 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %392, i64 0, i32 0, i32 0, i32 0
  %394 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %393, align 8
  %395 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115VerifyMediaTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name to %"class.WTF::StringImpl"**), align 8
  %396 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %394, %"class.WTF::StringImpl"* %395) #18
  br label %397

397:                                              ; preds = %390, %383, %377, %369, %362, %354
  %398 = phi i1 [ false, %362 ], [ false, %354 ], [ false, %369 ], [ false, %383 ], [ %396, %390 ], [ false, %377 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %337) #18
  %399 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %400 = icmp eq %"class.WTF::StringImpl"* %399, null
  br i1 %400, label %414, label %401

401:                                              ; preds = %397
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = load atomic i32, i32* %402 monotonic, align 4
  %404 = and i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 0
  %407 = load i32, i32* %406, align 4
  br i1 %405, label %408, label %410

408:                                              ; preds = %401
  %409 = add i32 %407, -1
  store i32 %409, i32* %406, align 4
  br label %410

410:                                              ; preds = %408, %401
  %411 = phi i32 [ %409, %408 ], [ %407, %401 ]
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %414

413:                                              ; preds = %410
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %399) #18
  br label %414

414:                                              ; preds = %397, %410, %413
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #18
  br i1 %398, label %416, label %415

415:                                              ; preds = %414
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0)) #18
  br label %530

416:                                              ; preds = %414
  %417 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %418 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %417, align 8
  %419 = icmp eq %"class.blink::HeapVector"* %418, null
  br i1 %419, label %456, label %420

420:                                              ; preds = %416
  %421 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %418, i64 0, i32 0, i32 0, i32 0, i32 2
  %422 = load i32, i32* %421, align 4
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %456, label %424

424:                                              ; preds = %420
  %425 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 0
  %426 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 1
  br label %427

427:                                              ; preds = %443, %424
  %428 = phi %"class.blink::HeapVector"* [ %418, %424 ], [ %445, %443 ]
  %429 = phi i32 [ 0, %424 ], [ %444, %443 ]
  %430 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %428, i64 0, i32 0
  %431 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %430, i32 %429) #18
  %432 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %431, i64 0, i32 0, i32 0
  %433 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %432, align 8
  %434 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %433, i64 0, i32 1, i32 0
  %435 = load i32, i32* %434, align 4
  %436 = load i32, i32* %425, align 4
  %437 = icmp eq i32 %435, %436
  br i1 %437, label %438, label %443

438:                                              ; preds = %427
  %439 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %433, i64 0, i32 1, i32 1
  %440 = load i32, i32* %439, align 4
  %441 = load i32, i32* %426, align 4
  %442 = icmp eq i32 %440, %441
  br i1 %442, label %449, label %443

443:                                              ; preds = %438, %427
  %444 = add nuw i32 %429, 1
  %445 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %417, align 8
  %446 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %445, i64 0, i32 0, i32 0, i32 0, i32 2
  %447 = load i32, i32* %446, align 4
  %448 = icmp ult i32 %444, %447
  br i1 %448, label %427, label %456

449:                                              ; preds = %438
  %450 = icmp eq %"class.blink::CSSRuleSourceData"* %433, null
  br i1 %450, label %456, label %451

451:                                              ; preds = %449
  %452 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %433, i64 0, i32 0
  %453 = load i32, i32* %452, align 8
  %454 = or i32 %453, 1
  %455 = icmp eq i32 %454, 3
  br i1 %455, label %457, label %456

456:                                              ; preds = %443, %420, %416, %449, %451
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 8, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0)) #18
  br label %530

457:                                              ; preds = %451
  %458 = call %"class.blink::CSSRule"* @_ZN5blink19InspectorStyleSheet17RuleForSourceDataEPNS_17CSSRuleSourceDataE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRuleSourceData"* nonnull %433)
  %459 = icmp eq %"class.blink::CSSRule"* %458, null
  br i1 %459, label %492, label %460

460:                                              ; preds = %457
  %461 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %458, i64 0, i32 1
  %462 = load i8, i8* %461, align 8
  %463 = and i8 %462, 2
  %464 = icmp eq i8 %463, 0
  %465 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %458, i64 0, i32 2, i32 0, i32 0
  br i1 %464, label %480, label %466

466:                                              ; preds = %460, %471
  %467 = phi %"class.blink::ScriptWrappable"** [ %479, %471 ], [ %465, %460 ]
  %468 = phi %"class.blink::CSSRule"* [ %474, %471 ], [ %458, %460 ]
  %469 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %467, align 8
  %470 = icmp eq %"class.blink::ScriptWrappable"* %469, null
  br i1 %470, label %492, label %471

471:                                              ; preds = %466
  %472 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %468, i64 0, i32 2, i32 0, i32 0
  %473 = bitcast %"class.blink::ScriptWrappable"** %472 to %"class.blink::CSSRule"**
  %474 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %473, align 8
  %475 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %474, i64 0, i32 1
  %476 = load i8, i8* %475, align 8
  %477 = and i8 %476, 2
  %478 = icmp eq i8 %477, 0
  %479 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %474, i64 0, i32 2, i32 0, i32 0
  br i1 %478, label %480, label %466

480:                                              ; preds = %471, %460
  %481 = phi %"class.blink::ScriptWrappable"** [ %465, %460 ], [ %479, %471 ]
  %482 = bitcast %"class.blink::ScriptWrappable"** %481 to %"class.blink::CSSStyleSheet"**
  %483 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %482, align 8
  %484 = icmp eq %"class.blink::CSSStyleSheet"* %483, null
  br i1 %484, label %492, label %485

485:                                              ; preds = %480
  %486 = bitcast %"class.blink::CSSRule"* %458 to i32 (%"class.blink::CSSRule"*)***
  %487 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %486, align 8
  %488 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %487, i64 9
  %489 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %488, align 8
  %490 = call i32 %489(%"class.blink::CSSRule"* nonnull %458) #18
  %491 = icmp eq i32 %490, 4
  br i1 %491, label %493, label %492

492:                                              ; preds = %466, %485, %480, %457
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 8, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i64 0, i64 0)) #18
  br label %530

493:                                              ; preds = %485
  %494 = call %"class.blink::CSSMediaRule"* @_ZN5blink17InspectorCSSAgent14AsCSSMediaRuleEPNS_7CSSRuleE(%"class.blink::CSSRule"* nonnull %458) #18
  %495 = call %"class.blink::MediaList"* @_ZNK5blink12CSSMediaRule5mediaEv(%"class.blink::CSSMediaRule"* %494) #18
  %496 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %14, align 8
  %497 = call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %496) #18
  %498 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %497) #18
  call void @_ZN5blink9MediaList12setMediaTextEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::MediaList"* %495, %"class.blink::ExecutionContext"* %498, %"class.WTF::String"* dereferenceable(8) %2) #18
  %499 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %433, i64 0, i32 1
  call void @_ZN5blink19InspectorStyleSheet11ReplaceTextERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::SourceRange"* dereferenceable(8) %499, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::SourceRange"* %3, %"class.WTF::String"* %4)
  %500 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0
  %501 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %501, i8 0, i64 16, i1 false) #18
  %502 = ptrtoint i8* %501 to i64
  %503 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 3
  %504 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %503, i64 0, i32 0, i32 0, i32 0
  %505 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %504, align 8
  %506 = bitcast %"class.std::__1::unique_ptr.2"* %503 to i64*
  store i64 %502, i64* %506, align 8
  %507 = icmp eq %"class.WTF::Vector"* %505, null
  br i1 %507, label %521, label %508

508:                                              ; preds = %493
  %509 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %505, i64 0, i32 0, i32 0, i32 0
  %510 = load i32*, i32** %509, align 8
  %511 = icmp eq i32* %510, null
  %512 = bitcast i32* %510 to i8*
  br i1 %511, label %519, label %513, !prof !2

513:                                              ; preds = %508
  %514 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %505, i64 0, i32 0, i32 0, i32 2
  %515 = load i32, i32* %514, align 4
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %518, label %517, !prof !3

517:                                              ; preds = %513
  store i32 0, i32* %514, align 4
  br label %518

518:                                              ; preds = %517, %513
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %512) #18
  store i32* null, i32** %509, align 8
  br label %519

519:                                              ; preds = %518, %508
  %520 = bitcast %"class.WTF::Vector"* %505 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %520) #18
  br label %521

521:                                              ; preds = %519, %493
  %522 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 2
  %523 = load %"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase::Listener"** %522, align 8
  %524 = icmp eq %"class.blink::InspectorStyleSheetBase::Listener"* %523, null
  br i1 %524, label %530, label %525

525:                                              ; preds = %521
  %526 = bitcast %"class.blink::InspectorStyleSheetBase::Listener"* %523 to void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)***
  %527 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)**, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*** %526, align 8
  %528 = getelementptr inbounds void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %527, i64 2
  %529 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %528, align 8
  call void %529(%"class.blink::InspectorStyleSheetBase::Listener"* nonnull %523, %"class.blink::InspectorStyleSheetBase"* %500) #18
  br label %530

530:                                              ; preds = %525, %521, %456, %492, %415
  %531 = phi %"class.blink::CSSMediaRule"* [ null, %415 ], [ null, %456 ], [ null, %492 ], [ %494, %521 ], [ %494, %525 ]
  ret %"class.blink::CSSMediaRule"* %531
}

declare %"class.blink::CSSMediaRule"* @_ZN5blink17InspectorCSSAgent14AsCSSMediaRuleEPNS_7CSSRuleE(%"class.blink::CSSRule"*) local_unnamed_addr #2

declare %"class.blink::MediaList"* @_ZNK5blink12CSSMediaRule5mediaEv(%"class.blink::CSSMediaRule"*) local_unnamed_addr #2

declare void @_ZN5blink9MediaList12setMediaTextEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::MediaList"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSRuleSourceData"* @_ZN5blink19InspectorStyleSheet30RuleSourceDataAfterSourceRangeERKNS_11SourceRangeE(%"class.blink::InspectorStyleSheet"* nocapture readonly, %"class.blink::SourceRange"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %41, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 1
  br label %10

10:                                               ; preds = %8, %25
  %11 = phi %"class.blink::HeapVector"* [ %4, %8 ], [ %27, %25 ]
  %12 = phi i32 [ 0, %8 ], [ %26, %25 ]
  %13 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %11, i64 0, i32 0
  %14 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %13, i32 %12)
  %15 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %16, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* %9, align 4
  %20 = icmp ult i32 %18, %19
  br i1 %20, label %25, label %21

21:                                               ; preds = %10
  %22 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %3, align 8
  %23 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %22, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  br label %31

25:                                               ; preds = %10
  %26 = add nuw i32 %12, 1
  %27 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %3, align 8
  %28 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %27, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp ult i32 %26, %29
  br i1 %30, label %10, label %31

31:                                               ; preds = %25, %21
  %32 = phi i32 [ %24, %21 ], [ %29, %25 ]
  %33 = phi %"class.blink::HeapVector"* [ %22, %21 ], [ %27, %25 ]
  %34 = phi i32 [ %12, %21 ], [ %26, %25 ]
  %35 = icmp ult i32 %34, %32
  br i1 %35, label %36, label %41

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %33, i64 0, i32 0
  %38 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %37, i32 %34)
  %39 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %39, align 8
  br label %41

41:                                               ; preds = %2, %31, %36
  %42 = phi %"class.blink::CSSRuleSourceData"* [ %40, %36 ], [ null, %31 ], [ null, %2 ]
  ret %"class.blink::CSSRuleSourceData"* %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %24, i64 %25
  ret %"class.blink::Member.17"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSStyleRule"* @_ZN5blink19InspectorStyleSheet27InsertCSSOMRuleInStyleSheetEPNS_7CSSRuleERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"* nocapture readonly, %"class.blink::CSSRule"* readnone, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend.2476", align 8
  %8 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %8, align 8
  %10 = tail call i32 @_ZNK5blink13CSSStyleSheet6lengthEv(%"class.blink::CSSStyleSheet"* %9) #18
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %4, %17
  %13 = phi i32 [ %18, %17 ], [ 0, %4 ]
  %14 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %8, align 8
  %15 = tail call %"class.blink::CSSRule"* @_ZN5blink13CSSStyleSheet4itemEj(%"class.blink::CSSStyleSheet"* %14, i32 %13) #18
  %16 = icmp eq %"class.blink::CSSRule"* %15, %1
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = add nuw i32 %13, 1
  %19 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %8, align 8
  %20 = tail call i32 @_ZNK5blink13CSSStyleSheet6lengthEv(%"class.blink::CSSStyleSheet"* %19) #18
  %21 = icmp ult i32 %18, %20
  br i1 %21, label %12, label %22

22:                                               ; preds = %17, %12, %4
  %23 = phi i32 [ 0, %4 ], [ %13, %12 ], [ %18, %17 ]
  %24 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %8, align 8
  %25 = tail call i32 @_ZN5blink13CSSStyleSheet10insertRuleERKN3WTF6StringEjRNS_14ExceptionStateE(%"class.blink::CSSStyleSheet"* %24, %"class.WTF::String"* dereferenceable(8) %2, i32 %23, %"class.blink::ExceptionState"* dereferenceable(72) %3) #18
  %26 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %8, align 8
  %27 = tail call %"class.blink::CSSRule"* @_ZN5blink13CSSStyleSheet4itemEj(%"class.blink::CSSStyleSheet"* %26, i32 %23) #18
  %28 = tail call %"class.blink::CSSStyleRule"* @_ZN5blink17InspectorCSSAgent14AsCSSStyleRuleEPNS_7CSSRuleE(%"class.blink::CSSRule"* %27) #18
  %29 = icmp eq %"class.blink::CSSStyleRule"* %28, null
  br i1 %29, label %30, label %225

30:                                               ; preds = %22
  %31 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %8, align 8
  %32 = bitcast %"class.blink::DummyExceptionStateForTesting"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %32) #18
  %33 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %34, align 8
  %35 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %35, align 2
  %36 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 2
  %37 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %38 = bitcast %"class.WTF::StringImpl"** %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #18
  %39 = bitcast i8** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 36, i1 false) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %40 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0
  call void @_ZN5blink13CSSStyleSheet10deleteRuleEjRNS_14ExceptionStateE(%"class.blink::CSSStyleSheet"* %31, i32 %23, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %40) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %41 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 4
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %30
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %40) #18
  br label %45

45:                                               ; preds = %30, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %46 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = icmp eq i64* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 3
  %51 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %52 = bitcast %"class.v8::Isolate"* %51 to %"class.v8::internal::Isolate"*
  %53 = load i64, i64* %47, align 8
  %54 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %52, i64 %53) #18
  %55 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %51) #18
  br i1 %55, label %59, label %56

56:                                               ; preds = %49
  %57 = bitcast i64* %54 to %"class.v8::Value"*
  %58 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %51, %"class.v8::Value"* %57) #18
  br label %59

59:                                               ; preds = %56, %49, %45
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #18
  br label %75

75:                                               ; preds = %59, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %32) #18
  %76 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #18
  %77 = bitcast %"class.WTF::StringAppend.2476"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #18
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %156, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %98

88:                                               ; preds = %81
  %89 = zext i32 %87 to i33
  %90 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %89, i33 1) #18
  %91 = extractvalue { i33, i1 } %90, 1
  %92 = extractvalue { i33, i1 } %90, 0
  %93 = icmp slt i33 %92, 0
  %94 = or i1 %91, %93
  br i1 %94, label %95, label %96, !prof !3

95:                                               ; preds = %88
  call void @llvm.trap() #18
  unreachable

96:                                               ; preds = %88
  %97 = trunc i33 %92 to i32
  store i32 %97, i32* %86, align 4
  br label %98

98:                                               ; preds = %96, %81
  %99 = phi i32 [ %97, %96 ], [ %87, %81 ]
  %100 = load atomic i32, i32* %82 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %113

103:                                              ; preds = %98
  %104 = zext i32 %99 to i33
  %105 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %104, i33 1) #18
  %106 = extractvalue { i33, i1 } %105, 1
  %107 = extractvalue { i33, i1 } %105, 0
  %108 = icmp slt i33 %107, 0
  %109 = or i1 %106, %108
  br i1 %109, label %110, label %111, !prof !3

110:                                              ; preds = %103
  call void @llvm.trap() #18
  unreachable

111:                                              ; preds = %103
  %112 = trunc i33 %107 to i32
  store i32 %112, i32* %86, align 4
  br label %113

113:                                              ; preds = %111, %98
  %114 = phi i32 [ %112, %111 ], [ %99, %98 ]
  %115 = load atomic i32, i32* %82 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %113
  %119 = add i32 %114, -1
  store i32 %119, i32* %86, align 4
  br label %120

120:                                              ; preds = %118, %113
  %121 = phi i32 [ %119, %118 ], [ %114, %113 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #18
  br label %124

124:                                              ; preds = %120, %123
  %125 = load atomic i32, i32* %82 monotonic, align 4, !noalias !21
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = load i32, i32* %86, align 4
  br i1 %127, label %129, label %139

129:                                              ; preds = %124
  %130 = zext i32 %128 to i33
  %131 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %130, i33 1) #18
  %132 = extractvalue { i33, i1 } %131, 1
  %133 = extractvalue { i33, i1 } %131, 0
  %134 = icmp slt i33 %133, 0
  %135 = or i1 %132, %134
  br i1 %135, label %136, label %137, !prof !3

136:                                              ; preds = %129
  call void @llvm.trap() #18, !noalias !21
  unreachable

137:                                              ; preds = %129
  %138 = trunc i33 %133 to i32
  store i32 %138, i32* %86, align 4, !noalias !21
  br label %139

139:                                              ; preds = %124, %137
  %140 = phi i32 [ %138, %137 ], [ %128, %124 ]
  %141 = bitcast %"class.WTF::StringAppend.2476"* %7 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.7 to i64), i64* %141, align 8, !alias.scope !21
  %142 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %142, align 8, !alias.scope !21
  %143 = load atomic i32, i32* %82 monotonic, align 4, !noalias !21
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %160

146:                                              ; preds = %139
  %147 = zext i32 %140 to i33
  %148 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %147, i33 1) #18
  %149 = extractvalue { i33, i1 } %148, 1
  %150 = extractvalue { i33, i1 } %148, 0
  %151 = icmp slt i33 %150, 0
  %152 = or i1 %149, %151
  br i1 %152, label %153, label %154, !prof !3

153:                                              ; preds = %146
  call void @llvm.trap() #18, !noalias !21
  unreachable

154:                                              ; preds = %146
  %155 = trunc i33 %150 to i32
  store i32 %155, i32* %86, align 4, !noalias !21
  br label %160

156:                                              ; preds = %75
  %157 = bitcast %"class.WTF::StringAppend.2476"* %7 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.7 to i64), i64* %157, align 8, !alias.scope !21
  %158 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %158, align 8, !alias.scope !21
  %159 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i64 0, i64 0), i8** %159, align 8, !alias.scope !21
  br label %172

160:                                              ; preds = %154, %139
  %161 = phi i32 [ %155, %154 ], [ %140, %139 ]
  %162 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i64 0, i64 0), i8** %162, align 8, !alias.scope !21
  %163 = load atomic i32, i32* %82 monotonic, align 4, !noalias !21
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %160
  %167 = add i32 %161, -1
  store i32 %167, i32* %86, align 4, !noalias !21
  br label %168

168:                                              ; preds = %166, %160
  %169 = phi i32 [ %167, %166 ], [ %161, %160 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #18, !noalias !21
  br label %172

172:                                              ; preds = %156, %168, %171
  %173 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.2476"* nonnull %7)
  %174 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %173, %"class.WTF::StringImpl"** %174, align 8
  %175 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %176 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %175, align 8
  %177 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %176, align 8
  call void %177(%"class.blink::ExceptionState"* %3, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %6) #18
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %172
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #18
  br label %193

193:                                              ; preds = %172, %189, %192
  %194 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %196, label %210, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load atomic i32, i32* %198 monotonic, align 4
  %200 = and i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  br i1 %201, label %204, label %206

204:                                              ; preds = %197
  %205 = add i32 %203, -1
  store i32 %205, i32* %202, align 4
  br label %206

206:                                              ; preds = %204, %197
  %207 = phi i32 [ %205, %204 ], [ %203, %197 ]
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %206
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %195) #18
  br label %210

210:                                              ; preds = %193, %206, %209
  br i1 %80, label %224, label %211

211:                                              ; preds = %210
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #18
  br label %224

224:                                              ; preds = %210, %220, %223
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #18
  br label %225

225:                                              ; preds = %22, %224
  ret %"class.blink::CSSStyleRule"* %28
}

declare i32 @_ZNK5blink13CSSStyleSheet6lengthEv(%"class.blink::CSSStyleSheet"*) local_unnamed_addr #2

declare %"class.blink::CSSRule"* @_ZN5blink13CSSStyleSheet4itemEj(%"class.blink::CSSStyleSheet"*, i32) local_unnamed_addr #2

declare i32 @_ZN5blink13CSSStyleSheet10insertRuleERKN3WTF6StringEjRNS_14ExceptionStateE(%"class.blink::CSSStyleSheet"*, %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink13CSSStyleSheet10deleteRuleEjRNS_14ExceptionStateE(%"class.blink::CSSStyleSheet"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.2476"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.2754"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #18
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %3, i8* %8) #18
  %9 = bitcast %"class.WTF::StringTypeAdapter.2754"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #18
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %2, i8* %11) #18
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #18
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #18
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2476"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #18
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2476"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #18
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %34
  call void @llvm.trap() #18
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #18
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #18
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2476"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #18
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2476"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #18
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %70
  call void @llvm.trap() #18
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #18
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #18
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSStyleRule"* @_ZN5blink19InspectorStyleSheet26InsertCSSOMRuleInMediaRuleEPNS_12CSSMediaRuleEPNS_7CSSRuleERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"* nocapture readonly, %"class.blink::CSSMediaRule"*, %"class.blink::CSSRule"* readnone, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend.2476", align 8
  %9 = getelementptr inbounds %"class.blink::CSSMediaRule", %"class.blink::CSSMediaRule"* %1, i64 0, i32 0, i32 0
  %10 = tail call i32 @_ZNK5blink15CSSGroupingRule6lengthEv(%"class.blink::CSSGroupingRule"* %9) #18
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %5, %16
  %13 = phi i32 [ %17, %16 ], [ 0, %5 ]
  %14 = tail call %"class.blink::CSSRule"* @_ZNK5blink15CSSGroupingRule4ItemEj(%"class.blink::CSSGroupingRule"* %9, i32 %13) #18
  %15 = icmp eq %"class.blink::CSSRule"* %14, %2
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = add nuw i32 %13, 1
  %18 = tail call i32 @_ZNK5blink15CSSGroupingRule6lengthEv(%"class.blink::CSSGroupingRule"* %9) #18
  %19 = icmp ult i32 %17, %18
  br i1 %19, label %12, label %20

20:                                               ; preds = %16, %12, %5
  %21 = phi i32 [ 0, %5 ], [ %13, %12 ], [ %17, %16 ]
  %22 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %22, align 8
  %24 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %23) #18
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %24) #18
  %26 = tail call i32 @_ZN5blink15CSSGroupingRule10insertRuleEPKNS_16ExecutionContextERKN3WTF6StringEjRNS_14ExceptionStateE(%"class.blink::CSSGroupingRule"* %9, %"class.blink::ExecutionContext"* %25, %"class.WTF::String"* dereferenceable(8) %3, i32 %21, %"class.blink::ExceptionState"* dereferenceable(72) %4) #18
  %27 = tail call %"class.blink::CSSRule"* @_ZNK5blink15CSSGroupingRule4ItemEj(%"class.blink::CSSGroupingRule"* %9, i32 %21) #18
  %28 = tail call %"class.blink::CSSStyleRule"* @_ZN5blink17InspectorCSSAgent14AsCSSStyleRuleEPNS_7CSSRuleE(%"class.blink::CSSRule"* %27) #18
  %29 = icmp eq %"class.blink::CSSStyleRule"* %28, null
  br i1 %29, label %30, label %224

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::DummyExceptionStateForTesting"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #18
  %32 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %33, align 8
  %34 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 2
  %36 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 5, i32 0, i32 0
  %37 = bitcast %"class.WTF::StringImpl"** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #18
  %38 = bitcast i8** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 36, i1 false) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %39 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0
  call void @_ZN5blink15CSSGroupingRule10deleteRuleEjRNS_14ExceptionStateE(%"class.blink::CSSGroupingRule"* %9, i32 %21, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %39) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %40 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %30
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %39) #18
  br label %44

44:                                               ; preds = %30, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %45 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = icmp eq i64* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 3
  %50 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, align 8
  %51 = bitcast %"class.v8::Isolate"* %50 to %"class.v8::internal::Isolate"*
  %52 = load i64, i64* %46, align 8
  %53 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %51, i64 %52) #18
  %54 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %50) #18
  br i1 %54, label %58, label %55

55:                                               ; preds = %48
  %56 = bitcast i64* %53 to %"class.v8::Value"*
  %57 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %50, %"class.v8::Value"* %56) #18
  br label %58

58:                                               ; preds = %55, %48, %44
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #18
  br label %74

74:                                               ; preds = %58, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #18
  %75 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #18
  %76 = bitcast %"class.WTF::StringAppend.2476"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #18
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %155, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %97

87:                                               ; preds = %80
  %88 = zext i32 %86 to i33
  %89 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %88, i33 1) #18
  %90 = extractvalue { i33, i1 } %89, 1
  %91 = extractvalue { i33, i1 } %89, 0
  %92 = icmp slt i33 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %95, !prof !3

94:                                               ; preds = %87
  call void @llvm.trap() #18
  unreachable

95:                                               ; preds = %87
  %96 = trunc i33 %91 to i32
  store i32 %96, i32* %85, align 4
  br label %97

97:                                               ; preds = %95, %80
  %98 = phi i32 [ %96, %95 ], [ %86, %80 ]
  %99 = load atomic i32, i32* %81 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %112

102:                                              ; preds = %97
  %103 = zext i32 %98 to i33
  %104 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #18
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !3

109:                                              ; preds = %102
  call void @llvm.trap() #18
  unreachable

110:                                              ; preds = %102
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %85, align 4
  br label %112

112:                                              ; preds = %110, %97
  %113 = phi i32 [ %111, %110 ], [ %98, %97 ]
  %114 = load atomic i32, i32* %81 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %112
  %118 = add i32 %113, -1
  store i32 %118, i32* %85, align 4
  br label %119

119:                                              ; preds = %117, %112
  %120 = phi i32 [ %118, %117 ], [ %113, %112 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #18
  br label %123

123:                                              ; preds = %119, %122
  %124 = load atomic i32, i32* %81 monotonic, align 4, !noalias !24
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = load i32, i32* %85, align 4
  br i1 %126, label %128, label %138

128:                                              ; preds = %123
  %129 = zext i32 %127 to i33
  %130 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #18
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !3

135:                                              ; preds = %128
  call void @llvm.trap() #18, !noalias !24
  unreachable

136:                                              ; preds = %128
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %85, align 4, !noalias !24
  br label %138

138:                                              ; preds = %123, %136
  %139 = phi i32 [ %137, %136 ], [ %127, %123 ]
  %140 = bitcast %"class.WTF::StringAppend.2476"* %8 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.7 to i64), i64* %140, align 8, !alias.scope !24
  %141 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %141, align 8, !alias.scope !24
  %142 = load atomic i32, i32* %81 monotonic, align 4, !noalias !24
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %159

145:                                              ; preds = %138
  %146 = zext i32 %139 to i33
  %147 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %146, i33 1) #18
  %148 = extractvalue { i33, i1 } %147, 1
  %149 = extractvalue { i33, i1 } %147, 0
  %150 = icmp slt i33 %149, 0
  %151 = or i1 %148, %150
  br i1 %151, label %152, label %153, !prof !3

152:                                              ; preds = %145
  call void @llvm.trap() #18, !noalias !24
  unreachable

153:                                              ; preds = %145
  %154 = trunc i33 %149 to i32
  store i32 %154, i32* %85, align 4, !noalias !24
  br label %159

155:                                              ; preds = %74
  %156 = bitcast %"class.WTF::StringAppend.2476"* %8 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.7 to i64), i64* %156, align 8, !alias.scope !24
  %157 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %157, align 8, !alias.scope !24
  %158 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i64 0, i64 0), i8** %158, align 8, !alias.scope !24
  br label %171

159:                                              ; preds = %153, %138
  %160 = phi i32 [ %154, %153 ], [ %139, %138 ]
  %161 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i64 0, i64 0), i8** %161, align 8, !alias.scope !24
  %162 = load atomic i32, i32* %81 monotonic, align 4, !noalias !24
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %159
  %166 = add i32 %160, -1
  store i32 %166, i32* %85, align 4, !noalias !24
  br label %167

167:                                              ; preds = %165, %159
  %168 = phi i32 [ %166, %165 ], [ %160, %159 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #18, !noalias !24
  br label %171

171:                                              ; preds = %155, %167, %170
  %172 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.2476"* nonnull %8)
  %173 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %172, %"class.WTF::StringImpl"** %173, align 8
  %174 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %175 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %174, align 8
  %176 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %175, align 8
  call void %176(%"class.blink::ExceptionState"* %4, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %7) #18
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %171
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #18
  br label %192

192:                                              ; preds = %171, %188, %191
  %193 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %209, label %196

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  br i1 %200, label %203, label %205

203:                                              ; preds = %196
  %204 = add i32 %202, -1
  store i32 %204, i32* %201, align 4
  br label %205

205:                                              ; preds = %203, %196
  %206 = phi i32 [ %204, %203 ], [ %202, %196 ]
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %194) #18
  br label %209

209:                                              ; preds = %192, %205, %208
  br i1 %79, label %223, label %210

210:                                              ; preds = %209
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #18
  br label %223

223:                                              ; preds = %209, %219, %222
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #18
  br label %224

224:                                              ; preds = %20, %223
  ret %"class.blink::CSSStyleRule"* %28
}

declare i32 @_ZNK5blink15CSSGroupingRule6lengthEv(%"class.blink::CSSGroupingRule"*) local_unnamed_addr #2

declare %"class.blink::CSSRule"* @_ZNK5blink15CSSGroupingRule4ItemEj(%"class.blink::CSSGroupingRule"*, i32) local_unnamed_addr #2

declare i32 @_ZN5blink15CSSGroupingRule10insertRuleEPKNS_16ExecutionContextERKN3WTF6StringEjRNS_14ExceptionStateE(%"class.blink::CSSGroupingRule"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink15CSSGroupingRule10deleteRuleEjRNS_14ExceptionStateE(%"class.blink::CSSGroupingRule"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSStyleRule"* @_ZN5blink19InspectorStyleSheet28InsertCSSOMRuleBySourceRangeERKNS_11SourceRangeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"*, %"class.blink::SourceRange"* nocapture readonly dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %6 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %4
  %11 = tail call %"class.blink::CSSRule"* @_ZN5blink19InspectorStyleSheet17RuleForSourceDataEPNS_17CSSRuleSourceDataE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRuleSourceData"* null)
  br label %92

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 0
  br label %14

14:                                               ; preds = %12, %45
  %15 = phi %"class.blink::HeapVector"* [ %6, %12 ], [ %48, %45 ]
  %16 = phi i32 [ 0, %12 ], [ %47, %45 ]
  %17 = phi %"class.blink::CSSRuleSourceData"* [ null, %12 ], [ %46, %45 ]
  %18 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %15, i64 0, i32 0
  %19 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %18, i32 %16)
  %20 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %21, i64 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %13, align 4
  %25 = icmp ult i32 %23, %24
  %26 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %21, i64 0, i32 2, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp ult i32 %24, %27
  %29 = and i1 %25, %28
  br i1 %29, label %52, label %30

30:                                               ; preds = %14
  %31 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %21, i64 0, i32 2
  %32 = icmp ult i32 %24, %27
  br i1 %32, label %45, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %21, i64 0, i32 2, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp ult i32 %35, %24
  br i1 %36, label %45, label %37

37:                                               ; preds = %33
  %38 = icmp eq %"class.blink::CSSRuleSourceData"* %17, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %17, i64 0, i32 2
  %41 = tail call i32 @_ZNK5blink11SourceRange6lengthEv(%"class.blink::SourceRange"* %40) #18
  %42 = tail call i32 @_ZNK5blink11SourceRange6lengthEv(%"class.blink::SourceRange"* %31) #18
  %43 = icmp ugt i32 %41, %42
  br i1 %43, label %44, label %45

44:                                               ; preds = %37, %39
  br label %45

45:                                               ; preds = %33, %30, %44, %39
  %46 = phi %"class.blink::CSSRuleSourceData"* [ %17, %39 ], [ %21, %44 ], [ %17, %30 ], [ %17, %33 ]
  %47 = add nuw i32 %16, 1
  %48 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %5, align 8
  %49 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %48, i64 0, i32 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp ult i32 %47, %50
  br i1 %51, label %14, label %53

52:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 8, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0)) #18
  br label %109

53:                                               ; preds = %45
  %54 = icmp eq i32 %50, 0
  br i1 %54, label %88, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 1
  br label %57

57:                                               ; preds = %72, %55
  %58 = phi %"class.blink::HeapVector"* [ %48, %55 ], [ %74, %72 ]
  %59 = phi i32 [ 0, %55 ], [ %73, %72 ]
  %60 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %58, i64 0, i32 0
  %61 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %60, i32 %59) #18
  %62 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %63, i64 0, i32 1, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = load i32, i32* %56, align 4
  %67 = icmp ult i32 %65, %66
  br i1 %67, label %72, label %68

68:                                               ; preds = %57
  %69 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %5, align 8
  %70 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %69, i64 0, i32 0, i32 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  br label %78

72:                                               ; preds = %57
  %73 = add nuw i32 %59, 1
  %74 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %5, align 8
  %75 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %74, i64 0, i32 0, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = icmp ult i32 %73, %76
  br i1 %77, label %57, label %78

78:                                               ; preds = %72, %68
  %79 = phi i32 [ %71, %68 ], [ %76, %72 ]
  %80 = phi %"class.blink::HeapVector"* [ %69, %68 ], [ %74, %72 ]
  %81 = phi i32 [ %59, %68 ], [ %73, %72 ]
  %82 = icmp ult i32 %81, %79
  br i1 %82, label %83, label %88

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %80, i64 0, i32 0
  %85 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %84, i32 %81) #18
  %86 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %86, align 8
  br label %88

88:                                               ; preds = %53, %78, %83
  %89 = phi %"class.blink::CSSRuleSourceData"* [ %87, %83 ], [ null, %78 ], [ null, %53 ]
  %90 = tail call %"class.blink::CSSRule"* @_ZN5blink19InspectorStyleSheet17RuleForSourceDataEPNS_17CSSRuleSourceDataE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRuleSourceData"* %89)
  %91 = icmp eq %"class.blink::CSSRuleSourceData"* %46, null
  br i1 %91, label %92, label %95

92:                                               ; preds = %10, %88
  %93 = phi %"class.blink::CSSRule"* [ %11, %10 ], [ %90, %88 ]
  %94 = tail call %"class.blink::CSSStyleRule"* @_ZN5blink19InspectorStyleSheet27InsertCSSOMRuleInStyleSheetEPNS_7CSSRuleERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRule"* %93, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %109

95:                                               ; preds = %88
  %96 = tail call %"class.blink::CSSRule"* @_ZN5blink19InspectorStyleSheet17RuleForSourceDataEPNS_17CSSRuleSourceDataE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRuleSourceData"* nonnull %46)
  %97 = icmp eq %"class.blink::CSSRule"* %96, null
  br i1 %97, label %105, label %98

98:                                               ; preds = %95
  %99 = bitcast %"class.blink::CSSRule"* %96 to i32 (%"class.blink::CSSRule"*)***
  %100 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %99, align 8
  %101 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %100, i64 9
  %102 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %101, align 8
  %103 = tail call i32 %102(%"class.blink::CSSRule"* nonnull %96) #18
  %104 = icmp eq i32 %103, 4
  br i1 %104, label %106, label %105

105:                                              ; preds = %98, %95
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11, i64 0, i64 0)) #18
  br label %109

106:                                              ; preds = %98
  %107 = bitcast %"class.blink::CSSRule"* %96 to %"class.blink::CSSMediaRule"*
  %108 = tail call %"class.blink::CSSStyleRule"* @_ZN5blink19InspectorStyleSheet26InsertCSSOMRuleInMediaRuleEPNS_12CSSMediaRuleEPNS_7CSSRuleERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSMediaRule"* nonnull %107, %"class.blink::CSSRule"* %90, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %109

109:                                              ; preds = %52, %92, %106, %105
  %110 = phi %"class.blink::CSSStyleRule"* [ null, %52 ], [ %94, %92 ], [ null, %105 ], [ %108, %106 ]
  ret %"class.blink::CSSStyleRule"* %110
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSStyleRule"* @_ZN5blink19InspectorStyleSheet7AddRuleERKN3WTF6StringERKNS_11SourceRangeEPS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceRange"* dereferenceable(8), %"class.blink::SourceRange"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %2, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %12, label %11

11:                                               ; preds = %5
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0)) #18
  br label %59

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %13, align 8
  %15 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %14) #18
  %16 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_114VerifyRuleTextEPNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* %15, %"class.WTF::String"* dereferenceable(8) %1)
  br i1 %16, label %18, label %17

17:                                               ; preds = %12
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0)) #18
  br label %59

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %20 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %19, align 8
  %21 = icmp eq %"class.blink::HeapVector"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0)) #18
  br label %59

23:                                               ; preds = %18
  %24 = tail call %"class.blink::CSSStyleRule"* @_ZN5blink19InspectorStyleSheet28InsertCSSOMRuleBySourceRangeERKNS_11SourceRangeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::SourceRange"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %59

28:                                               ; preds = %23
  tail call void @_ZN5blink19InspectorStyleSheet11ReplaceTextERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::SourceRange"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::SourceRange"* %3, %"class.WTF::String"* null)
  %29 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0
  %30 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #18
  %31 = ptrtoint i8* %30 to i64
  %32 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 3
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %33, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.2"* %32 to i64*
  store i64 %31, i64* %35, align 8
  %36 = icmp eq %"class.WTF::Vector"* %34, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 0, i32 0, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = icmp eq i32* %39, null
  %41 = bitcast i32* %39 to i8*
  br i1 %40, label %48, label %42, !prof !2

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !3

46:                                               ; preds = %42
  store i32 0, i32* %43, align 4
  br label %47

47:                                               ; preds = %46, %42
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %41) #18
  store i32* null, i32** %38, align 8
  br label %48

48:                                               ; preds = %47, %37
  %49 = bitcast %"class.WTF::Vector"* %34 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %49) #18
  br label %50

50:                                               ; preds = %48, %28
  %51 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 2
  %52 = load %"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase::Listener"** %51, align 8
  %53 = icmp eq %"class.blink::InspectorStyleSheetBase::Listener"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.blink::InspectorStyleSheetBase::Listener"* %52 to void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)***
  %56 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)**, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %56, i64 2
  %58 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %57, align 8
  tail call void %58(%"class.blink::InspectorStyleSheetBase::Listener"* nonnull %52, %"class.blink::InspectorStyleSheetBase"* %29) #18
  br label %59

59:                                               ; preds = %23, %54, %50, %22, %17, %11
  %60 = phi %"class.blink::CSSStyleRule"* [ null, %11 ], [ null, %22 ], [ null, %17 ], [ null, %23 ], [ %24, %50 ], [ %24, %54 ]
  ret %"class.blink::CSSStyleRule"* %60
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_114VerifyRuleTextEPNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringAppend.2753", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend.2752", align 8
  %7 = alloca %"class.WTF::StringAppend.2753", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.blink::(anonymous namespace)::StyleSheetHandler", align 8
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_114VerifyRuleTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %16, !prof !5

12:                                               ; preds = %2
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114VerifyRuleTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name) #18
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114VerifyRuleTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name to %"class.WTF::String"*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i64 0, i64 0), i64 23) #18
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114VerifyRuleTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name) #18
  br label %16

16:                                               ; preds = %12, %15, %2
  %17 = icmp eq %"class.blink::Document"* %0, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %16
  %19 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #18
  %20 = bitcast i8* %19 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"* %20, %"class.blink::Document"* nonnull dereferenceable(2848) %0) #18
  %21 = getelementptr inbounds i8, i8* %19, i64 -4
  %22 = bitcast i8* %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = or i16 %23, 1
  store atomic i16 %24, i16* %22 release, align 2
  br label %27

25:                                               ; preds = %16
  %26 = tail call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 0) #18
  br label %27

27:                                               ; preds = %18, %25
  %28 = phi %"class.blink::CSSParserContext"* [ %20, %18 ], [ %26, %25 ]
  %29 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm(i64 192) #18
  %30 = bitcast i8* %29 to %"class.blink::StyleSheetContents"*
  %31 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #18
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %32, align 8
  call void @_ZN5blink18StyleSheetContentsC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE(%"class.blink::StyleSheetContents"* %30, %"class.blink::CSSParserContext"* %28, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::StyleRuleImport"* null) #18
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #18
  br label %48

48:                                               ; preds = %27, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #18
  %49 = getelementptr inbounds i8, i8* %29, i64 -4
  %50 = bitcast i8* %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = or i16 %51, 1
  store atomic i16 %52, i16* %50 release, align 2
  %53 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEEEPhm(i64 16) #18
  %54 = getelementptr inbounds i8, i8* %53, i64 -4
  %55 = bitcast i8* %54 to i16*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #18
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  %58 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #18
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %59, align 8
  %60 = bitcast %"class.WTF::StringAppend.2752"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %60) #18
  %61 = bitcast %"class.WTF::StringAppend.2753"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #18
  %62 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #18
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %110, label %66

66:                                               ; preds = %48
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %83

73:                                               ; preds = %66
  %74 = zext i32 %72 to i33
  %75 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #18
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !3

80:                                               ; preds = %73
  call void @llvm.trap() #18
  unreachable

81:                                               ; preds = %73
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %71, align 4
  br label %83

83:                                               ; preds = %66, %81
  %84 = phi i32 [ %82, %81 ], [ %72, %66 ]
  %85 = load atomic i32, i32* %67 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  br i1 %87, label %89, label %99

89:                                               ; preds = %83
  %90 = zext i32 %84 to i33
  %91 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #18
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %89
  call void @llvm.trap() #18
  unreachable

97:                                               ; preds = %89
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %83
  %100 = phi i32 [ %98, %97 ], [ %84, %83 ]
  %101 = load atomic i32, i32* %67 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  %105 = add i32 %100, -1
  store i32 %105, i32* %88, align 4
  br label %106

106:                                              ; preds = %104, %99
  %107 = phi i32 [ %105, %104 ], [ %100, %99 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #18
  br label %110

110:                                              ; preds = %48, %106, %109
  %111 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %111, align 8
  %112 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i64 0, i64 0), i8** %112, align 8
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114VerifyRuleTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name to %"class.WTF::StringImpl"**), align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %132, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %132

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i33
  %124 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %123, i33 1) #18
  %125 = extractvalue { i33, i1 } %124, 1
  %126 = extractvalue { i33, i1 } %124, 0
  %127 = icmp slt i33 %126, 0
  %128 = or i1 %125, %127
  br i1 %128, label %129, label %130, !prof !3

129:                                              ; preds = %120
  call void @llvm.trap() #18
  unreachable

130:                                              ; preds = %120
  %131 = trunc i33 %126 to i32
  store i32 %131, i32* %121, align 4
  br label %132

132:                                              ; preds = %110, %115, %130
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2753"* nonnull sret %7, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %8, %"class.WTF::StringImpl"* %113)
  %133 = bitcast %"class.WTF::StringAppend.2753"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133)
  %134 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8, !noalias !27
  %136 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %136, align 8, !noalias !27
  %137 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %137, label %155, label %138

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %155

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i33
  %147 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %146, i33 1) #18
  %148 = extractvalue { i33, i1 } %147, 1
  %149 = extractvalue { i33, i1 } %147, 0
  %150 = icmp slt i33 %149, 0
  %151 = or i1 %148, %150
  br i1 %151, label %152, label %153, !prof !3

152:                                              ; preds = %143
  call void @llvm.trap() #18
  unreachable

153:                                              ; preds = %143
  %154 = trunc i33 %149 to i32
  store i32 %154, i32* %144, align 4
  br label %155

155:                                              ; preds = %153, %138, %132
  %156 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %3, i64 0, i32 0, i32 1
  %157 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %7, i64 0, i32 0, i32 1
  %158 = bitcast i8** %157 to i64*
  %159 = load i64, i64* %158, align 8, !noalias !27
  %160 = bitcast i8** %156 to i64*
  store i64 %159, i64* %160, align 8, !noalias !27
  %161 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %7, i64 0, i32 1, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8, !noalias !27
  %163 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %3, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %162, %"class.WTF::StringImpl"** %163, align 8, !noalias !27
  %164 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %164, label %182, label %165

165:                                              ; preds = %155
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %182

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i33
  %174 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %173, i33 1) #18
  %175 = extractvalue { i33, i1 } %174, 1
  %176 = extractvalue { i33, i1 } %174, 0
  %177 = icmp slt i33 %176, 0
  %178 = or i1 %175, %177
  br i1 %178, label %179, label %180, !prof !3

179:                                              ; preds = %170
  call void @llvm.trap() #18
  unreachable

180:                                              ; preds = %170
  %181 = trunc i33 %176 to i32
  store i32 %181, i32* %171, align 4
  br label %182

182:                                              ; preds = %155, %165, %180
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2752"* nonnull %6, %"class.WTF::StringAppend.2753"* nonnull byval(%"class.WTF::StringAppend.2753") align 8 %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0)) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133)
  %183 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.2752"* nonnull %6)
  store %"class.WTF::StringImpl"* %183, %"class.WTF::StringImpl"** %59, align 8
  %184 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %200, label %187

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  br i1 %191, label %194, label %196

194:                                              ; preds = %187
  %195 = add i32 %193, -1
  store i32 %195, i32* %192, align 4
  br label %196

196:                                              ; preds = %194, %187
  %197 = phi i32 [ %195, %194 ], [ %193, %187 ]
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %185) #18
  br label %200

200:                                              ; preds = %199, %196, %182
  %201 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %201, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %202, null
  br i1 %203, label %217, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 0
  %210 = load i32, i32* %209, align 4
  br i1 %208, label %211, label %213

211:                                              ; preds = %204
  %212 = add i32 %210, -1
  store i32 %212, i32* %209, align 4
  br label %213

213:                                              ; preds = %211, %204
  %214 = phi i32 [ %212, %211 ], [ %210, %204 ]
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %202) #18
  br label %217

217:                                              ; preds = %200, %213, %216
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %219 = icmp eq %"class.WTF::StringImpl"* %218, null
  br i1 %219, label %233, label %220

220:                                              ; preds = %217
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  br i1 %224, label %227, label %229

227:                                              ; preds = %220
  %228 = add i32 %226, -1
  store i32 %228, i32* %225, align 4
  br label %229

229:                                              ; preds = %227, %220
  %230 = phi i32 [ %228, %227 ], [ %226, %220 ]
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %218) #18
  br label %233

233:                                              ; preds = %232, %229, %217
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %233
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #18
  br label %249

249:                                              ; preds = %233, %245, %248
  %250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %251 = icmp eq %"class.WTF::StringImpl"* %250, null
  br i1 %251, label %265, label %252

252:                                              ; preds = %249
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  br i1 %256, label %259, label %261

259:                                              ; preds = %252
  %260 = add i32 %258, -1
  store i32 %260, i32* %257, align 4
  br label %261

261:                                              ; preds = %259, %252
  %262 = phi i32 [ %260, %259 ], [ %258, %252 ]
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %261
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %250) #18
  br label %265

265:                                              ; preds = %249, %261, %264
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %60) #18
  %266 = bitcast %"class.blink::(anonymous namespace)::StyleSheetHandler"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %266) #18
  %267 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_117StyleSheetHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %267, align 8
  %268 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %9, i64 0, i32 1
  store %"class.WTF::String"* %5, %"class.WTF::String"** %268, align 8
  %269 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %9, i64 0, i32 2
  store %"class.blink::Document"* %0, %"class.blink::Document"** %269, align 8
  %270 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %9, i64 0, i32 3
  %271 = bitcast %"class.blink::HeapVector"** %270 to i8**
  store i8* %53, i8** %271, align 8
  %272 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %9, i64 0, i32 4
  %273 = bitcast %"class.blink::HeapVector"* %272 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %273, i8 0, i64 24, i1 false) #18
  br i1 %17, label %281, label %274

274:                                              ; preds = %265
  %275 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #18
  %276 = bitcast i8* %275 to %"class.blink::CSSParserContext"*
  call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"* %276, %"class.blink::Document"* nonnull dereferenceable(2848) %0) #18
  %277 = getelementptr inbounds i8, i8* %275, i64 -4
  %278 = bitcast i8* %277 to i16*
  %279 = load atomic i16, i16* %278 monotonic, align 2
  %280 = or i16 %279, 1
  store atomic i16 %280, i16* %278 release, align 2
  br label %283

281:                                              ; preds = %265
  %282 = call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 0) #18
  br label %283

283:                                              ; preds = %274, %281
  %284 = phi %"class.blink::CSSParserContext"* [ %276, %274 ], [ %282, %281 ]
  %285 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %9, i64 0, i32 0
  call void @_ZN5blink9CSSParser22ParseSheetForInspectorEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringERNS_17CSSParserObserverE(%"class.blink::CSSParserContext"* %284, %"class.blink::StyleSheetContents"* %30, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::CSSParserObserver"* nonnull dereferenceable(8) %285) #18
  %286 = bitcast i8* %53 to %"class.WTF::Vector.33"*
  %287 = getelementptr inbounds i8, i8* %53, i64 12
  %288 = bitcast i8* %287 to i32*
  %289 = load i32, i32* %288, align 4
  %290 = icmp eq i32 %289, 2
  br i1 %290, label %291, label %311

291:                                              ; preds = %283
  %292 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %286, i32 0)
  %293 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %292, i64 0, i32 0, i32 0
  %294 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %293, align 8
  %295 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %294, i64 0, i32 0
  %296 = load i32, i32* %295, align 8
  switch i32 %296, label %311 [
    i32 1, label %297
    i32 4, label %297
    i32 5, label %297
    i32 8, label %297
  ]

297:                                              ; preds = %291, %291, %291, %291
  %298 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %286, i32 1)
  %299 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %298, i64 0, i32 0, i32 0
  %300 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %299, align 8
  %301 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %300, i64 0, i32 4, i32 0, i32 0, i32 2
  %302 = load i32, i32* %301, align 4
  %303 = icmp eq i32 %302, 1
  br i1 %303, label %304, label %311

304:                                              ; preds = %297
  %305 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %300, i64 0, i32 4
  %306 = call dereferenceable(32) %"class.blink::CSSPropertySourceData"* @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.26"* %305, i32 0)
  %307 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %306, i64 0, i32 0, i32 0, i32 0
  %308 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %307, align 8
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114VerifyRuleTextEPNS_8DocumentERKN3WTF6StringEE21s_bogus_property_name to %"class.WTF::StringImpl"**), align 8
  %310 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %308, %"class.WTF::StringImpl"* %309) #18
  br label %311

311:                                              ; preds = %291, %297, %304, %283
  %312 = phi i1 [ false, %283 ], [ false, %297 ], [ %310, %304 ], [ false, %291 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %266) #18
  %313 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %314 = icmp eq %"class.WTF::StringImpl"* %313, null
  br i1 %314, label %328, label %315

315:                                              ; preds = %311
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %313, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = load atomic i32, i32* %316 monotonic, align 4
  %318 = and i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %313, i64 0, i32 0
  %321 = load i32, i32* %320, align 4
  br i1 %319, label %322, label %324

322:                                              ; preds = %315
  %323 = add i32 %321, -1
  store i32 %323, i32* %320, align 4
  br label %324

324:                                              ; preds = %322, %315
  %325 = phi i32 [ %323, %322 ], [ %321, %315 ]
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %328

327:                                              ; preds = %324
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %313) #18
  br label %328

328:                                              ; preds = %311, %324, %327
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #18
  ret i1 %312
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19InspectorStyleSheet10DeleteRuleERKNS_11SourceRangeERNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"*, %"class.blink::SourceRange"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %6 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %5, align 8
  %7 = icmp eq %"class.blink::HeapVector"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %58, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %1, i64 0, i32 1
  br label %16

15:                                               ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0)) #18
  br label %182

16:                                               ; preds = %12, %51
  %17 = phi %"class.blink::HeapVector"* [ %6, %12 ], [ %54, %51 ]
  %18 = phi i32 [ 0, %12 ], [ %53, %51 ]
  %19 = phi %"class.blink::CSSRuleSourceData"* [ null, %12 ], [ %52, %51 ]
  %20 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %17, i64 0, i32 0
  %21 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %20, i32 %18)
  %22 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %23, i64 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %23, i64 0, i32 2
  %27 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %23, i64 0, i32 2, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, 1
  %30 = load i32, i32* %13, align 4
  %31 = icmp uge i32 %25, %30
  %32 = load i32, i32* %14, align 4
  %33 = icmp ult i32 %25, %32
  %34 = and i1 %31, %33
  %35 = icmp ugt i32 %29, %30
  %36 = icmp ule i32 %29, %32
  %37 = and i1 %35, %36
  %38 = xor i1 %34, %37
  %39 = and i1 %31, %33
  %40 = xor i1 %39, true
  %41 = or i1 %38, %40
  br i1 %41, label %50, label %42

42:                                               ; preds = %16
  %43 = icmp eq %"class.blink::CSSRuleSourceData"* %19, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %19, i64 0, i32 2
  %46 = tail call i32 @_ZNK5blink11SourceRange6lengthEv(%"class.blink::SourceRange"* %45) #18
  %47 = tail call i32 @_ZNK5blink11SourceRange6lengthEv(%"class.blink::SourceRange"* %26) #18
  %48 = icmp ugt i32 %46, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %42, %44
  br label %51

50:                                               ; preds = %16
  br i1 %38, label %58, label %51

51:                                               ; preds = %50, %44, %49
  %52 = phi %"class.blink::CSSRuleSourceData"* [ %19, %50 ], [ %19, %44 ], [ %23, %49 ]
  %53 = add nuw i32 %18, 1
  %54 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %5, align 8
  %55 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %54, i64 0, i32 0, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp ult i32 %53, %56
  br i1 %57, label %16, label %58

58:                                               ; preds = %51, %50, %8
  %59 = phi %"class.blink::CSSRuleSourceData"* [ null, %8 ], [ %19, %50 ], [ %52, %51 ]
  %60 = tail call %"class.blink::CSSRule"* @_ZN5blink19InspectorStyleSheet17RuleForSourceDataEPNS_17CSSRuleSourceDataE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRuleSourceData"* %59)
  %61 = icmp eq %"class.blink::CSSRule"* %60, null
  br i1 %61, label %62, label %63

62:                                               ; preds = %58
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i64 0, i64 0)) #18
  br label %182

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %60, i64 0, i32 1
  %65 = load i8, i8* %64, align 8
  %66 = and i8 %65, 2
  %67 = icmp eq i8 %66, 0
  %68 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %60, i64 0, i32 2, i32 0, i32 0
  br i1 %67, label %83, label %69

69:                                               ; preds = %63, %74
  %70 = phi %"class.blink::ScriptWrappable"** [ %82, %74 ], [ %68, %63 ]
  %71 = phi %"class.blink::CSSRule"* [ %77, %74 ], [ %60, %63 ]
  %72 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %70, align 8
  %73 = icmp eq %"class.blink::ScriptWrappable"* %72, null
  br i1 %73, label %88, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %71, i64 0, i32 2, i32 0, i32 0
  %76 = bitcast %"class.blink::ScriptWrappable"** %75 to %"class.blink::CSSRule"**
  %77 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %77, i64 0, i32 1
  %79 = load i8, i8* %78, align 8
  %80 = and i8 %79, 2
  %81 = icmp eq i8 %80, 0
  %82 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %77, i64 0, i32 2, i32 0, i32 0
  br i1 %81, label %83, label %69

83:                                               ; preds = %74, %63
  %84 = phi %"class.blink::ScriptWrappable"** [ %68, %63 ], [ %82, %74 ]
  %85 = bitcast %"class.blink::ScriptWrappable"** %84 to %"class.blink::CSSStyleSheet"**
  %86 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %85, align 8
  %87 = icmp eq %"class.blink::CSSStyleSheet"* %86, null
  br i1 %87, label %88, label %89

88:                                               ; preds = %69, %83
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i64 0, i64 0)) #18
  br label %182

89:                                               ; preds = %83
  br i1 %67, label %94, label %90

90:                                               ; preds = %89
  %91 = bitcast %"class.blink::ScriptWrappable"** %68 to %"class.blink::CSSRule"**
  %92 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %91, align 8
  %93 = icmp eq %"class.blink::CSSRule"* %92, null
  br i1 %93, label %94, label %97

94:                                               ; preds = %89, %90
  %95 = tail call i32 @_ZNK5blink13CSSStyleSheet6lengthEv(%"class.blink::CSSStyleSheet"* nonnull %86) #18
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %127, label %119

97:                                               ; preds = %90
  %98 = bitcast %"class.blink::CSSRule"* %92 to i32 (%"class.blink::CSSRule"*)***
  %99 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %98, align 8
  %100 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %99, i64 9
  %101 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %100, align 8
  %102 = tail call i32 %101(%"class.blink::CSSRule"* nonnull %92) #18
  %103 = icmp eq i32 %102, 4
  br i1 %103, label %104, label %108

104:                                              ; preds = %97
  %105 = bitcast %"class.blink::CSSRule"* %92 to %"class.blink::CSSGroupingRule"*
  %106 = tail call i32 @_ZNK5blink15CSSGroupingRule6lengthEv(%"class.blink::CSSGroupingRule"* nonnull %105) #18
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %117, label %109

108:                                              ; preds = %97
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.17, i64 0, i64 0)) #18
  br label %182

109:                                              ; preds = %104, %113
  %110 = phi i32 [ %114, %113 ], [ 0, %104 ]
  %111 = tail call %"class.blink::CSSRule"* @_ZNK5blink15CSSGroupingRule4ItemEj(%"class.blink::CSSGroupingRule"* nonnull %105, i32 %110) #18
  %112 = icmp eq %"class.blink::CSSRule"* %111, %60
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = add nuw i32 %110, 1
  %115 = tail call i32 @_ZNK5blink15CSSGroupingRule6lengthEv(%"class.blink::CSSGroupingRule"* nonnull %105) #18
  %116 = icmp ult i32 %114, %115
  br i1 %116, label %109, label %117

117:                                              ; preds = %113, %109, %104
  %118 = phi i32 [ 0, %104 ], [ %110, %109 ], [ %114, %113 ]
  tail call void @_ZN5blink15CSSGroupingRule10deleteRuleEjRNS_14ExceptionStateE(%"class.blink::CSSGroupingRule"* nonnull %105, i32 %118, %"class.blink::ExceptionState"* dereferenceable(72) %2) #18
  br label %129

119:                                              ; preds = %94, %123
  %120 = phi i32 [ %124, %123 ], [ 0, %94 ]
  %121 = tail call %"class.blink::CSSRule"* @_ZN5blink13CSSStyleSheet4itemEj(%"class.blink::CSSStyleSheet"* nonnull %86, i32 %120) #18
  %122 = icmp eq %"class.blink::CSSRule"* %121, %60
  br i1 %122, label %127, label %123

123:                                              ; preds = %119
  %124 = add nuw i32 %120, 1
  %125 = tail call i32 @_ZNK5blink13CSSStyleSheet6lengthEv(%"class.blink::CSSStyleSheet"* nonnull %86) #18
  %126 = icmp ult i32 %124, %125
  br i1 %126, label %119, label %127

127:                                              ; preds = %123, %119, %94
  %128 = phi i32 [ 0, %94 ], [ %120, %119 ], [ %124, %123 ]
  tail call void @_ZN5blink13CSSStyleSheet10deleteRuleEjRNS_14ExceptionStateE(%"class.blink::CSSStyleSheet"* nonnull %86, i32 %128, %"class.blink::ExceptionState"* dereferenceable(72) %2) #18
  br label %129

129:                                              ; preds = %127, %117
  %130 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %182

133:                                              ; preds = %129
  %134 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0), i64 0) #18
  call void @_ZN5blink19InspectorStyleSheet11ReplaceTextERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::SourceRange"* dereferenceable(8) %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceRange"* null, %"class.WTF::String"* null)
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #18
  br label %151

151:                                              ; preds = %133, %147, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #18
  %152 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0
  %153 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 16, i1 false) #18
  %154 = ptrtoint i8* %153 to i64
  %155 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 3
  %156 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %155, i64 0, i32 0, i32 0, i32 0
  %157 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %156, align 8
  %158 = bitcast %"class.std::__1::unique_ptr.2"* %155 to i64*
  store i64 %154, i64* %158, align 8
  %159 = icmp eq %"class.WTF::Vector"* %157, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %151
  %161 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %157, i64 0, i32 0, i32 0, i32 0
  %162 = load i32*, i32** %161, align 8
  %163 = icmp eq i32* %162, null
  %164 = bitcast i32* %162 to i8*
  br i1 %163, label %171, label %165, !prof !2

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %157, i64 0, i32 0, i32 0, i32 2
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %170, label %169, !prof !3

169:                                              ; preds = %165
  store i32 0, i32* %166, align 4
  br label %170

170:                                              ; preds = %169, %165
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %164) #18
  store i32* null, i32** %161, align 8
  br label %171

171:                                              ; preds = %170, %160
  %172 = bitcast %"class.WTF::Vector"* %157 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %172) #18
  br label %173

173:                                              ; preds = %171, %151
  %174 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 2
  %175 = load %"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase::Listener"** %174, align 8
  %176 = icmp eq %"class.blink::InspectorStyleSheetBase::Listener"* %175, null
  br i1 %176, label %182, label %177

177:                                              ; preds = %173
  %178 = bitcast %"class.blink::InspectorStyleSheetBase::Listener"* %175 to void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)***
  %179 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)**, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %179, i64 2
  %181 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %180, align 8
  call void %181(%"class.blink::InspectorStyleSheetBase::Listener"* nonnull %175, %"class.blink::InspectorStyleSheetBase"* %152) #18
  br label %182

182:                                              ; preds = %129, %177, %173, %62, %108, %88, %15
  %183 = phi i1 [ false, %15 ], [ false, %62 ], [ false, %88 ], [ false, %108 ], [ false, %129 ], [ true, %173 ], [ true, %177 ]
  ret i1 %183
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.2481"* @_ZN5blink19InspectorStyleSheet17CollectClassNamesEv(%"class.blink::InspectorStyleSheet"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::HashSet.330", align 8
  %3 = bitcast %"class.WTF::HashSet.330"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #18
  %4 = getelementptr inbounds %"class.WTF::HashSet.330", %"class.WTF::HashSet.330"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::HashSet.330", %"class.WTF::HashSet.330"* %2, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::HashSet.330", %"class.WTF::HashSet.330"* %2, i64 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::HashSet.330"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 20, i1 false) #18
  %8 = tail call i8* @_Znwm(i64 24) #19
  %9 = bitcast i8* %8 to %"class.std::__1::vector.2481"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #18
  %10 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %140, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 9, i32 0
  %15 = getelementptr inbounds %"class.WTF::HashSet.330", %"class.WTF::HashSet.330"* %2, i64 0, i32 0
  br label %42

16:                                               ; preds = %99
  %17 = load i32, i32* %6, align 4
  %18 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %19 = bitcast %"class.WTF::String"* %18 to i8*
  %20 = load i32, i32* %5, align 8
  %21 = icmp eq i32 %17, 0
  %22 = zext i32 %20 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 %22
  br i1 %21, label %106, label %24

24:                                               ; preds = %16
  %25 = icmp eq i32 %20, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %24, %30
  %27 = phi %"class.WTF::String"* [ %31, %30 ], [ %18, %24 ]
  %28 = bitcast %"class.WTF::String"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  switch i64 %29, label %33 [
    i64 -1, label %30
    i64 0, label %30
  ]

30:                                               ; preds = %26, %26
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %32 = icmp eq %"class.WTF::String"* %31, %23
  br i1 %32, label %106, label %26

33:                                               ; preds = %26, %24
  %34 = phi %"class.WTF::String"* [ %18, %24 ], [ %27, %26 ]
  %35 = icmp eq %"class.WTF::String"* %34, %23
  br i1 %35, label %106, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* %8, i64 8
  %38 = bitcast i8* %37 to %"class.WTF::String"**
  %39 = getelementptr inbounds i8, i8* %8, i64 16
  %40 = bitcast i8* %39 to %"class.WTF::String"**
  %41 = bitcast i8* %37 to i64*
  br label %141

42:                                               ; preds = %13, %99
  %43 = phi i32 [ 0, %13 ], [ %100, %99 ]
  %44 = call dereferenceable(8) %"class.blink::Member.1117"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1135"* %14, i32 %43)
  %45 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %45, align 8
  %47 = icmp eq %"class.blink::CSSRule"* %46, null
  br i1 %47, label %99, label %48

48:                                               ; preds = %42
  %49 = bitcast %"class.blink::CSSRule"* %46 to i32 (%"class.blink::CSSRule"*)***
  %50 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %50, i64 9
  %52 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %51, align 8
  %53 = call i32 %52(%"class.blink::CSSRule"* nonnull %46) #18
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %99

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %46, i64 1
  %57 = bitcast %"class.blink::CSSRule"* %56 to %"class.blink::StyleRule"**
  %58 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %58, i64 0, i32 2, i32 0
  %60 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %59, align 8
  %61 = icmp eq %"class.blink::CSSSelector"* %60, null
  br i1 %61, label %99, label %62

62:                                               ; preds = %55, %96
  %63 = phi %"class.blink::CSSSelector"* [ %95, %96 ], [ %60, %55 ]
  br label %64

64:                                               ; preds = %84, %62
  %65 = phi %"class.blink::CSSSelector"* [ %88, %84 ], [ %63, %62 ]
  %66 = bitcast %"class.blink::CSSSelector"* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 240
  %69 = icmp eq i32 %68, 48
  br i1 %69, label %70, label %84

70:                                               ; preds = %64
  %71 = and i32 %67, 262144
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %65, i64 0, i32 1
  br i1 %72, label %78, label %74

74:                                               ; preds = %70
  %75 = bitcast %"union.blink::CSSSelector::DataUnion"* %73 to %"struct.blink::CSSSelector::RareData"**
  %76 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %75, align 8
  %77 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %76, i64 0, i32 1
  br label %80

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %73, i64 0, i32 0
  br label %80

80:                                               ; preds = %78, %74
  %81 = phi %"class.WTF::AtomicString"* [ %77, %74 ], [ %79, %78 ]
  %82 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKNS_12AtomicStringESD_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.331"* nonnull %15, %"class.WTF::AtomicString"* dereferenceable(8) %81, %"class.WTF::AtomicString"* dereferenceable(8) %81) #18
  %83 = load i32, i32* %66, align 8
  br label %84

84:                                               ; preds = %80, %64
  %85 = phi i32 [ %83, %80 ], [ %67, %64 ]
  %86 = and i32 %85, 131072
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %65, i64 1
  br i1 %87, label %64, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.blink::CSSSelector"* [ %95, %89 ], [ %63, %84 ]
  %91 = bitcast %"class.blink::CSSSelector"* %90 to i32*
  %92 = load i32, i32* %91, align 8
  %93 = and i32 %92, 131072
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %90, i64 1
  br i1 %94, label %89, label %96

96:                                               ; preds = %89
  %97 = and i32 %92, 2097152
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %62, label %99

99:                                               ; preds = %96, %48, %42, %55
  %100 = add nuw i32 %43, 1
  %101 = load i32, i32* %10, align 4
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %42, label %16

103:                                              ; preds = %172, %182, %179
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %105 = bitcast %"class.WTF::String"* %104 to i8*
  br label %106

106:                                              ; preds = %30, %16, %103, %33
  %107 = phi i8* [ %105, %103 ], [ %19, %33 ], [ %19, %16 ], [ %19, %30 ]
  %108 = phi %"class.WTF::String"* [ %104, %103 ], [ %18, %33 ], [ %18, %16 ], [ %18, %30 ]
  %109 = icmp eq %"class.WTF::String"* %108, null
  br i1 %109, label %140, label %110, !prof !2

110:                                              ; preds = %106
  %111 = load i32, i32* %5, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %139, label %113

113:                                              ; preds = %110
  %114 = zext i32 %111 to i64
  br label %115

115:                                              ; preds = %136, %113
  %116 = phi i64 [ 0, %113 ], [ %137, %136 ]
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %108, i64 %116
  %118 = bitcast %"class.WTF::String"* %117 to i8**
  %119 = load i8*, i8** %118, align 8
  %120 = bitcast i8* %119 to %"class.WTF::StringImpl"*
  %121 = ptrtoint i8* %119 to i64
  switch i64 %121, label %122 [
    i64 -1, label %136
    i64 0, label %136
  ]

122:                                              ; preds = %115
  %123 = getelementptr inbounds i8, i8* %119, i64 8
  %124 = bitcast i8* %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = bitcast i8* %119 to i32*
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %122
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %122
  %133 = phi i32 [ %131, %130 ], [ %129, %122 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #18
  br label %136

136:                                              ; preds = %135, %132, %115, %115
  %137 = add nuw nsw i64 %116, 1
  %138 = icmp eq i64 %137, %114
  br i1 %138, label %139, label %115

139:                                              ; preds = %136, %110
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %107) #18
  store %"class.WTF::String"* null, %"class.WTF::String"** %4, align 8
  br label %140

140:                                              ; preds = %1, %106, %139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #18
  ret %"class.std::__1::vector.2481"* %9

141:                                              ; preds = %36, %182
  %142 = phi %"class.WTF::String"* [ %34, %36 ], [ %176, %182 ]
  %143 = load %"class.WTF::String"*, %"class.WTF::String"** %38, align 8
  %144 = load %"class.WTF::String"*, %"class.WTF::String"** %40, align 8
  %145 = icmp ult %"class.WTF::String"* %143, %144
  br i1 %145, label %146, label %171

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %142, i64 0, i32 0, i32 0
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %143, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %148, %"class.WTF::StringImpl"** %149, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %150, label %168, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %168

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = zext i32 %158 to i33
  %160 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %159, i33 1) #18
  %161 = extractvalue { i33, i1 } %160, 1
  %162 = extractvalue { i33, i1 } %160, 0
  %163 = icmp slt i33 %162, 0
  %164 = or i1 %161, %163
  br i1 %164, label %165, label %166, !prof !3

165:                                              ; preds = %156
  call void @llvm.trap() #18
  unreachable

166:                                              ; preds = %156
  %167 = trunc i33 %162 to i32
  store i32 %167, i32* %157, align 4
  br label %168

168:                                              ; preds = %166, %151, %146
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %143, i64 1
  %170 = ptrtoint %"class.WTF::String"* %169 to i64
  store i64 %170, i64* %41, align 8
  br label %172

171:                                              ; preds = %141
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_(%"class.std::__1::vector.2481"* nonnull %9, %"class.WTF::String"* dereferenceable(8) %142) #18
  br label %172

172:                                              ; preds = %168, %171
  %173 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %142, i64 1
  %174 = icmp eq %"class.WTF::String"* %173, %23
  br i1 %174, label %103, label %175

175:                                              ; preds = %172, %179
  %176 = phi %"class.WTF::String"* [ %180, %179 ], [ %173, %172 ]
  %177 = bitcast %"class.WTF::String"* %176 to i64*
  %178 = load i64, i64* %177, align 8
  switch i64 %178, label %182 [
    i64 -1, label %179
    i64 0, label %179
  ]

179:                                              ; preds = %175, %175
  %180 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 1
  %181 = icmp eq %"class.WTF::String"* %180, %23
  br i1 %181, label %103, label %175

182:                                              ; preds = %175
  %183 = icmp eq %"class.WTF::String"* %176, %23
  br i1 %183, label %103, label %141
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.1117"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1135"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1135", %"class.WTF::Vector.1135"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.1135", %"class.WTF::Vector.1135"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.1117"*, %"class.blink::Member.1117"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %24, i64 %25
  ret %"class.blink::Member.1117"* %26
}

declare void @_ZN5blink11SourceRangeC1Ejj(%"class.blink::SourceRange"*, i32, i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19InspectorStyleSheet9ParseTextERKN3WTF6StringE(%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::(anonymous namespace)::StyleSheetHandler", align 8
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEEEPhm(i64 16) #18
  %7 = bitcast i8* %6 to %"class.blink::HeapVector"*
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #18
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %13, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %15, i64 0, i32 10, i32 0, i32 0
  %17 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %16, align 8
  %18 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm(i64 192) #18
  %19 = bitcast i8* %18 to %"class.blink::StyleSheetContents"*
  %20 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %21, align 8
  call void @_ZN5blink18StyleSheetContentsC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE(%"class.blink::StyleSheetContents"* %19, %"class.blink::CSSParserContext"* %17, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::StyleRuleImport"* null) #18
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #18
  br label %37

37:                                               ; preds = %2, %33, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  %38 = getelementptr inbounds i8, i8* %18, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  %42 = bitcast %"class.blink::(anonymous namespace)::StyleSheetHandler"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %42) #18
  %43 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %5, i64 0, i32 4
  %44 = bitcast %"class.blink::HeapVector"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 24, i1 false)
  %45 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %12, align 8
  %46 = call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %45) #18
  %47 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_117StyleSheetHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %5, i64 0, i32 1
  store %"class.WTF::String"* %1, %"class.WTF::String"** %48, align 8
  %49 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %5, i64 0, i32 2
  store %"class.blink::Document"* %46, %"class.blink::Document"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %5, i64 0, i32 3
  %51 = bitcast %"class.blink::HeapVector"** %50 to i8**
  store i8* %6, i8** %51, align 8
  %52 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %5, i64 0, i32 4
  %53 = bitcast %"class.blink::HeapVector"* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #18
  %54 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %12, align 8
  %55 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %54, i64 0, i32 1, i32 0, i32 0
  %56 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %56, i64 0, i32 10, i32 0, i32 0
  %58 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %5, i64 0, i32 0
  call void @_ZN5blink9CSSParser22ParseSheetForInspectorEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringERNS_17CSSParserObserverE(%"class.blink::CSSParserContext"* %58, %"class.blink::StyleSheetContents"* %19, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::CSSParserObserver"* nonnull dereferenceable(8) %59) #18
  %60 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %12, align 8
  %61 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %60, i64 0, i32 12, i32 0, i32 0
  %62 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %61, align 8
  %63 = icmp eq %"class.blink::CSSRule"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %37
  %65 = bitcast %"class.blink::CSSRule"* %62 to i32 (%"class.blink::CSSRule"*)***
  %66 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %65, align 8
  %67 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %66, i64 9
  %68 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %67, align 8
  %69 = call i32 %68(%"class.blink::CSSRule"* nonnull %62) #18
  %70 = icmp eq i32 %69, 3
  br i1 %70, label %73, label %71

71:                                               ; preds = %64
  %72 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %12, align 8
  br label %77

73:                                               ; preds = %64
  %74 = bitcast %"class.blink::CSSRule"* %62 to %"class.blink::CSSImportRule"*
  %75 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 192) #18
  %76 = bitcast i8* %75 to %"class.blink::CSSStyleSheet"*
  call void @_ZN5blink13CSSStyleSheetC1EPNS_18StyleSheetContentsEPNS_13CSSImportRuleE(%"class.blink::CSSStyleSheet"* %76, %"class.blink::StyleSheetContents"* %19, %"class.blink::CSSImportRule"* nonnull %74) #18
  br label %90

77:                                               ; preds = %71, %37
  %78 = phi %"class.blink::CSSStyleSheet"* [ %72, %71 ], [ %60, %37 ]
  %79 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %78, i64 0, i32 11, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %77
  %83 = bitcast i64* %3 to %"class.WTF::TextPosition"*
  %84 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 192) #18
  %85 = bitcast i8* %84 to %"class.blink::CSSStyleSheet"*
  %86 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #18
  store i64 0, i64* %3, align 8
  call void @_ZN5blink13CSSStyleSheetC1EPNS_18StyleSheetContentsERNS_4NodeEbRKN3WTF12TextPositionE(%"class.blink::CSSStyleSheet"* %85, %"class.blink::StyleSheetContents"* %19, %"class.blink::Node"* nonnull dereferenceable(64) %80, i1 zeroext false, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %83) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #18
  br label %90

87:                                               ; preds = %77
  %88 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 192) #18
  %89 = bitcast i8* %88 to %"class.blink::CSSStyleSheet"*
  call void @_ZN5blink13CSSStyleSheetC1EPNS_18StyleSheetContentsEPNS_13CSSImportRuleE(%"class.blink::CSSStyleSheet"* %89, %"class.blink::StyleSheetContents"* %19, %"class.blink::CSSImportRule"* null) #18
  br label %90

90:                                               ; preds = %82, %87, %73
  %91 = phi i8* [ %84, %82 ], [ %88, %87 ], [ %75, %73 ]
  %92 = phi %"class.blink::CSSStyleSheet"* [ %85, %82 ], [ %89, %87 ], [ %76, %73 ]
  %93 = getelementptr inbounds i8, i8* %91, i64 -4
  %94 = bitcast i8* %93 to i16*
  %95 = load atomic i16, i16* %94 monotonic, align 2
  %96 = or i16 %95, 1
  store atomic i16 %96, i16* %94 release, align 2
  %97 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 9
  %98 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %113, label %101

101:                                              ; preds = %90
  %102 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  %105 = bitcast %"class.blink::HeapVector.1132"* %97 to i8**
  br i1 %104, label %110, label %106

106:                                              ; preds = %101
  %107 = load i8*, i8** %105, align 8
  %108 = zext i32 %103 to i64
  %109 = shl nuw nsw i64 %108, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %107, i64 %109) #18
  store i32 0, i32* %102, align 4
  br label %110

110:                                              ; preds = %106, %101
  %111 = load i8*, i8** %105, align 8
  %112 = bitcast %"class.blink::HeapVector.1132"* %97 to i64*
  store atomic i64 0, i64* %112 monotonic, align 8
  store i32 0, i32* %98, align 8
  call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %111) #18
  br label %113

113:                                              ; preds = %90, %110
  call fastcc void @_ZN5blink12_GLOBAL__N_116CollectFlatRulesIPNS_13CSSStyleSheetEEEvT_PNS_10HeapVectorINS_6MemberINS_7CSSRuleEEELj0EEE(%"class.blink::CSSStyleSheet"* %92, %"class.blink::HeapVector.1132"* %97)
  %114 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEEEPhm(i64 16) #18
  %115 = getelementptr inbounds i8, i8* %114, i64 -4
  %116 = bitcast i8* %115 to i16*
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 16, i1 false) #18
  %117 = load atomic i16, i16* %116 monotonic, align 2
  %118 = or i16 %117, 1
  store atomic i16 %118, i16* %116 release, align 2
  %119 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6
  %120 = ptrtoint i8* %114 to i64
  %121 = bitcast %"class.blink::Member.1141"* %119 to i64*
  store atomic i64 %120, i64* %121 monotonic, align 8
  %122 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %123 = icmp eq i32 %122, 0
  %124 = bitcast i8* %114 to %"class.blink::HeapVector"*
  br i1 %123, label %129, label %125

125:                                              ; preds = %113
  %126 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %114) #18
  %127 = getelementptr inbounds %"class.blink::Member.1141", %"class.blink::Member.1141"* %119, i64 0, i32 0, i32 0
  %128 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %127, align 8
  br label %129

129:                                              ; preds = %113, %125
  %130 = phi %"class.blink::HeapVector"* [ %124, %113 ], [ %128, %125 ]
  call fastcc void @_ZN5blink12_GLOBAL__N_117FlattenSourceDataERKNS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEPS5_(%"class.blink::HeapVector"* dereferenceable(16) %7, %"class.blink::HeapVector"* %130)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %42) #18
  ret void
}

declare void @_ZN5blink9CSSParser22ParseSheetForInspectorEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringERNS_17CSSParserObserverE(%"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::CSSParserObserver"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_116CollectFlatRulesIPNS_13CSSStyleSheetEEEvT_PNS_10HeapVectorINS_6MemberINS_7CSSRuleEEELj0EEE(%"class.blink::CSSStyleSheet"*, %"class.blink::HeapVector.1132"*) unnamed_addr #0 {
  %3 = alloca %"class.blink::CSSRule"*, align 8
  %4 = icmp eq %"class.blink::CSSStyleSheet"* %0, null
  br i1 %4, label %97, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @_ZNK5blink13CSSStyleSheet6lengthEv(%"class.blink::CSSStyleSheet"* nonnull %0) #18
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %97, label %8

8:                                                ; preds = %5
  %9 = bitcast %"class.blink::CSSRule"** %3 to i8*
  %10 = getelementptr inbounds %"class.blink::HeapVector.1132", %"class.blink::HeapVector.1132"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.blink::HeapVector.1132", %"class.blink::HeapVector.1132"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapVector.1132", %"class.blink::HeapVector.1132"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.blink::CSSRule"** %3 to i64*
  %14 = getelementptr inbounds %"class.blink::HeapVector.1132", %"class.blink::HeapVector.1132"* %1, i64 0, i32 0
  br label %15

15:                                               ; preds = %94, %8
  %16 = phi i32 [ 0, %8 ], [ %95, %94 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  store %"class.blink::CSSRule"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSRule"*), %"class.blink::CSSRule"** %3, align 8
  %17 = call %"class.blink::CSSRule"* @_ZN5blink13CSSStyleSheet4itemEj(%"class.blink::CSSStyleSheet"* nonnull %0, i32 %16) #18
  store %"class.blink::CSSRule"* %17, %"class.blink::CSSRule"** %3, align 8
  %18 = bitcast %"class.blink::CSSRule"* %17 to i32 (%"class.blink::CSSRule"*)***
  %19 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %19, i64 9
  %21 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %20, align 8
  %22 = call i32 %21(%"class.blink::CSSRule"* %17) #18
  switch i32 %22, label %94 [
    i32 1, label %23
    i32 3, label %23
    i32 2, label %23
    i32 6, label %23
    i32 5, label %23
    i32 15, label %23
    i32 8, label %23
    i32 4, label %42
    i32 12, label %42
    i32 7, label %42
  ]

23:                                               ; preds = %15, %15, %15, %15, %15, %15, %15
  %24 = load i32, i32* %10, align 4
  %25 = load i32, i32* %11, align 8
  %26 = icmp eq i32 %24, %25
  br i1 %26, label %41, label %27, !prof !3

27:                                               ; preds = %23
  %28 = load %"class.blink::Member.1117"*, %"class.blink::Member.1117"** %12, align 8
  %29 = zext i32 %24 to i64
  %30 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %28, i64 %29
  %31 = load i64, i64* %13, align 8
  %32 = bitcast %"class.blink::Member.1117"* %30 to i64*
  store atomic i64 %31, i64* %32 monotonic, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = inttoptr i64 %31 to i8*
  %37 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %36) #18
  br label %38

38:                                               ; preds = %35, %27
  %39 = load i32, i32* %10, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %10, align 4
  br label %94

41:                                               ; preds = %23
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1135"* %14, %"class.blink::CSSRule"** nonnull dereferenceable(8) %3) #18
  br label %94

42:                                               ; preds = %15, %15, %15
  %43 = load i32, i32* %10, align 4
  %44 = load i32, i32* %11, align 8
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %60, label %46, !prof !3

46:                                               ; preds = %42
  %47 = load %"class.blink::Member.1117"*, %"class.blink::Member.1117"** %12, align 8
  %48 = zext i32 %43 to i64
  %49 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %47, i64 %48
  %50 = load i64, i64* %13, align 8
  %51 = bitcast %"class.blink::Member.1117"* %49 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = inttoptr i64 %50 to i8*
  %56 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #18
  br label %57

57:                                               ; preds = %54, %46
  %58 = load i32, i32* %10, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %10, align 4
  br label %61

60:                                               ; preds = %42
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1135"* %14, %"class.blink::CSSRule"** nonnull dereferenceable(8) %3) #18
  br label %61

61:                                               ; preds = %57, %60
  %62 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %3, align 8
  %63 = icmp eq %"class.blink::CSSRule"* %62, null
  br i1 %63, label %92, label %64

64:                                               ; preds = %61
  %65 = bitcast %"class.blink::CSSRule"* %62 to i32 (%"class.blink::CSSRule"*)***
  %66 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %65, align 8
  %67 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %66, i64 9
  %68 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %67, align 8
  %69 = call i32 %68(%"class.blink::CSSRule"* nonnull %62) #18
  %70 = icmp eq i32 %69, 4
  br i1 %70, label %71, label %74

71:                                               ; preds = %64
  %72 = bitcast %"class.blink::CSSRule"* %62 to %"class.blink::CSSGroupingRule"*
  %73 = call %"class.blink::CSSRuleList"* @_ZNK5blink15CSSGroupingRule8cssRulesEv(%"class.blink::CSSGroupingRule"* nonnull %72) #18
  br label %92

74:                                               ; preds = %64
  %75 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %65, align 8
  %76 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %75, i64 9
  %77 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %76, align 8
  %78 = call i32 %77(%"class.blink::CSSRule"* nonnull %62) #18
  %79 = icmp eq i32 %78, 12
  br i1 %79, label %80, label %83

80:                                               ; preds = %74
  %81 = bitcast %"class.blink::CSSRule"* %62 to %"class.blink::CSSGroupingRule"*
  %82 = call %"class.blink::CSSRuleList"* @_ZNK5blink15CSSGroupingRule8cssRulesEv(%"class.blink::CSSGroupingRule"* nonnull %81) #18
  br label %92

83:                                               ; preds = %74
  %84 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %65, align 8
  %85 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %84, i64 9
  %86 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %85, align 8
  %87 = call i32 %86(%"class.blink::CSSRule"* nonnull %62) #18
  %88 = icmp eq i32 %87, 7
  br i1 %88, label %89, label %92

89:                                               ; preds = %83
  %90 = bitcast %"class.blink::CSSRule"* %62 to %"class.blink::CSSKeyframesRule"*
  %91 = call %"class.blink::CSSRuleList"* @_ZNK5blink16CSSKeyframesRule8cssRulesEv(%"class.blink::CSSKeyframesRule"* nonnull %90) #18
  br label %92

92:                                               ; preds = %61, %71, %80, %83, %89
  %93 = phi %"class.blink::CSSRuleList"* [ %91, %89 ], [ null, %83 ], [ %82, %80 ], [ %73, %71 ], [ null, %61 ]
  call fastcc void @_ZN5blink12_GLOBAL__N_116CollectFlatRulesIPNS_11CSSRuleListEEEvT_PNS_10HeapVectorINS_6MemberINS_7CSSRuleEEELj0EEE(%"class.blink::CSSRuleList"* %93, %"class.blink::HeapVector.1132"* %1)
  br label %94

94:                                               ; preds = %41, %38, %15, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  %95 = add nuw i32 %16, 1
  %96 = icmp eq i32 %95, %6
  br i1 %96, label %97, label %15

97:                                               ; preds = %94, %5, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_117FlattenSourceDataERKNS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEPS5_(%"class.blink::HeapVector"* nocapture readonly dereferenceable(16), %"class.blink::HeapVector"*) unnamed_addr #0 {
  %3 = alloca %"class.blink::CSSRuleSourceData"*, align 8
  %4 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::CSSRuleSourceData"** %3 to i8*
  %13 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0
  br label %18

17:                                               ; preds = %64, %2
  ret void

18:                                               ; preds = %11, %64
  %19 = phi %"class.blink::Member.17"* [ %5, %11 ], [ %65, %64 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #18
  store %"class.blink::CSSRuleSourceData"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSRuleSourceData"*), %"class.blink::CSSRuleSourceData"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %20, align 8
  store %"class.blink::CSSRuleSourceData"* %21, %"class.blink::CSSRuleSourceData"** %3, align 8
  %22 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = ptrtoint %"class.blink::CSSRuleSourceData"* %21 to i64
  switch i32 %23, label %64 [
    i32 1, label %25
    i32 2, label %25
    i32 5, label %25
    i32 4, label %25
    i32 14, label %25
    i32 8, label %25
    i32 3, label %43
    i32 13, label %43
    i32 7, label %43
  ]

25:                                               ; preds = %18, %18, %18, %18, %18, %18
  %26 = load i32, i32* %13, align 4
  %27 = load i32, i32* %14, align 8
  %28 = icmp eq i32 %26, %27
  br i1 %28, label %42, label %29, !prof !3

29:                                               ; preds = %25
  %30 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %15, align 8
  %31 = zext i32 %26 to i64
  %32 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %30, i64 %31
  %33 = bitcast %"class.blink::Member.17"* %32 to i64*
  store atomic i64 %24, i64* %33 monotonic, align 8
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %29
  %37 = bitcast %"class.blink::CSSRuleSourceData"* %21 to i8*
  %38 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #18
  br label %39

39:                                               ; preds = %36, %29
  %40 = load i32, i32* %13, align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* %13, align 4
  br label %64

42:                                               ; preds = %25
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.33"* %16, %"class.blink::CSSRuleSourceData"** nonnull dereferenceable(8) %3) #18
  br label %64

43:                                               ; preds = %18, %18, %18
  %44 = load i32, i32* %13, align 4
  %45 = load i32, i32* %14, align 8
  %46 = icmp eq i32 %44, %45
  br i1 %46, label %60, label %47, !prof !3

47:                                               ; preds = %43
  %48 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %15, align 8
  %49 = zext i32 %44 to i64
  %50 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %48, i64 %49
  %51 = bitcast %"class.blink::Member.17"* %50 to i64*
  store atomic i64 %24, i64* %51 monotonic, align 8
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %47
  %55 = bitcast %"class.blink::CSSRuleSourceData"* %21 to i8*
  %56 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #18
  br label %57

57:                                               ; preds = %54, %47
  %58 = load i32, i32* %13, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %13, align 4
  br label %61

60:                                               ; preds = %43
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.33"* %16, %"class.blink::CSSRuleSourceData"** nonnull dereferenceable(8) %3) #18
  br label %61

61:                                               ; preds = %57, %60
  %62 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %3, align 8
  %63 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %62, i64 0, i32 5
  call fastcc void @_ZN5blink12_GLOBAL__N_117FlattenSourceDataERKNS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEPS5_(%"class.blink::HeapVector"* dereferenceable(16) %63, %"class.blink::HeapVector"* %1)
  br label %64

64:                                               ; preds = %42, %39, %18, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #18
  %65 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %19, i64 1
  %66 = icmp eq %"class.blink::Member.17"* %65, %9
  br i1 %66, label %17, label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink19InspectorStyleSheet23MergeCSSOMRulesWithTextERKN3WTF6StringE(%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #18
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #18
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %2, %8, %23
  %26 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %26, align 8
  %28 = call i32 @_ZNK5blink13CSSStyleSheet6lengthEv(%"class.blink::CSSStyleSheet"* %27) #18
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.WTF::StringView"* %3 to i8*
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  %35 = bitcast %"class.WTF::StringView"* %3 to i64*
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %77

37:                                               ; preds = %143, %25
  %38 = phi i64 [ %6, %25 ], [ %144, %143 ]
  %39 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 10
  %40 = getelementptr inbounds %"class.WTF::HashMap.1143", %"class.WTF::HashMap.1143"* %39, i64 0, i32 0, i32 0
  %41 = load %"struct.WTF::KeyValuePair.1147"*, %"struct.WTF::KeyValuePair.1147"** %40, align 8
  %42 = icmp eq %"struct.WTF::KeyValuePair.1147"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 10, i32 0, i32 1
  %45 = bitcast %"struct.WTF::KeyValuePair.1147"* %41 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %45) #18
  %46 = bitcast %"class.WTF::HashMap.1143"* %39 to i64*
  store atomic i64 0, i64* %46 monotonic, align 8
  store i32 0, i32* %44, align 8
  %47 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 10, i32 0, i32 2
  store i32 0, i32* %47, align 4
  br label %48

48:                                               ; preds = %37, %43
  %49 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 11
  %50 = getelementptr inbounds %"class.WTF::HashMap.1143", %"class.WTF::HashMap.1143"* %49, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair.1147"*, %"struct.WTF::KeyValuePair.1147"** %50, align 8
  %52 = icmp eq %"struct.WTF::KeyValuePair.1147"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 11, i32 0, i32 1
  %55 = bitcast %"struct.WTF::KeyValuePair.1147"* %51 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %55) #18
  %56 = bitcast %"class.WTF::HashMap.1143"* %49 to i64*
  store atomic i64 0, i64* %56 monotonic, align 8
  store i32 0, i32* %54, align 8
  %57 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 11, i32 0, i32 2
  store i32 0, i32* %57, align 4
  br label %58

58:                                               ; preds = %48, %53
  %59 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8, i32 0
  %60 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %75, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  %67 = bitcast %"class.WTF::Vector.1135"* %59 to i8**
  br i1 %66, label %72, label %68

68:                                               ; preds = %63
  %69 = load i8*, i8** %67, align 8
  %70 = zext i32 %65 to i64
  %71 = shl nuw nsw i64 %70, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %69, i64 %71) #18
  store i32 0, i32* %64, align 4
  br label %72

72:                                               ; preds = %68, %63
  %73 = load i8*, i8** %67, align 8
  %74 = bitcast %"class.WTF::Vector.1135"* %59 to i64*
  store atomic i64 0, i64* %74 monotonic, align 8
  store i32 0, i32* %60, align 8
  call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %73) #18
  br label %75

75:                                               ; preds = %58, %72
  %76 = inttoptr i64 %38 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %76

77:                                               ; preds = %30, %143
  %78 = phi i32 [ 0, %30 ], [ %147, %143 ]
  %79 = phi i32 [ 0, %30 ], [ %146, %143 ]
  %80 = phi i32 [ 0, %30 ], [ %145, %143 ]
  %81 = phi i64 [ %6, %30 ], [ %144, %143 ]
  %82 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %26, align 8
  %83 = call %"class.blink::CSSRule"* @_ZN5blink13CSSStyleSheet4itemEj(%"class.blink::CSSStyleSheet"* %82, i32 %78) #18
  %84 = call %"class.blink::CSSRuleSourceData"* @_ZN5blink19InspectorStyleSheet17SourceDataForRuleEPNS_7CSSRuleE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRule"* %83)
  %85 = icmp eq %"class.blink::CSSRuleSourceData"* %84, null
  br i1 %85, label %90, label %86

86:                                               ; preds = %77
  %87 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %84, i64 0, i32 2, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %88, 1
  br label %143

90:                                               ; preds = %77
  %91 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %26, align 8
  %92 = call %"class.blink::CSSRule"* @_ZN5blink13CSSStyleSheet4itemEj(%"class.blink::CSSStyleSheet"* %91, i32 %78) #18
  %93 = bitcast %"class.blink::CSSRule"* %92 to %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)***
  %94 = load %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)*** %93, align 8
  %95 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)** %94, i64 10
  %96 = load %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)** %95, align 8
  %97 = call %"class.WTF::StringImpl"* %96(%"class.blink::CSSRule"* %92) #18
  %98 = add i32 %79, %80
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #18
  %99 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %99, label %100, label %102

100:                                              ; preds = %90
  store i8* null, i8** %33, align 8
  %101 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %101, i64* %35, align 8
  br label %106

102:                                              ; preds = %90
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %32, align 8
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 1
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %34, align 8
  br label %106

106:                                              ; preds = %100, %102
  %107 = phi i32 [ %104, %102 ], [ 0, %100 ]
  store i32 %107, i32* %36, align 8
  %108 = inttoptr i64 %81 to %"class.WTF::StringImpl"*
  %109 = icmp eq i64 %81, 0
  br i1 %109, label %125, label %110

110:                                              ; preds = %106
  %111 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEjjRKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %108, i32 %98, i32 0, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #18
  %112 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %110
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %110
  %122 = phi i32 [ %120, %119 ], [ %118, %110 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #18
  br label %125

125:                                              ; preds = %106, %121, %124
  %126 = phi i64 [ 0, %106 ], [ %112, %124 ], [ %112, %121 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #18
  br i1 %99, label %143, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, %79
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %127
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %127
  %140 = phi i32 [ %138, %137 ], [ %136, %127 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #18
  br label %143

143:                                              ; preds = %125, %142, %139, %86
  %144 = phi i64 [ %81, %86 ], [ %126, %139 ], [ %126, %142 ], [ %126, %125 ]
  %145 = phi i32 [ %89, %86 ], [ %80, %139 ], [ %80, %142 ], [ %80, %125 ]
  %146 = phi i32 [ %79, %86 ], [ %130, %139 ], [ %130, %142 ], [ %79, %125 ]
  %147 = add nuw i32 %78, 1
  %148 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %26, align 8
  %149 = call i32 @_ZNK5blink13CSSStyleSheet6lengthEv(%"class.blink::CSSStyleSheet"* %148) #18
  %150 = icmp ult i32 %147, %149
  br i1 %150, label %77, label %37
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSRuleSourceData"* @_ZN5blink19InspectorStyleSheet17SourceDataForRuleEPNS_7CSSRuleE(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSRule"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %3, align 8
  %5 = icmp ne %"class.blink::HeapVector"* %4, null
  %6 = icmp ne %"class.blink::CSSRule"* %1, null
  %7 = and i1 %6, %5
  br i1 %7, label %8, label %148

8:                                                ; preds = %2
  tail call void @_ZN5blink19InspectorStyleSheet33RemapSourceDataToCSSOMIfNecessaryEv(%"class.blink::InspectorStyleSheet"* %0)
  %9 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::Member.1117"*, %"class.blink::Member.1117"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %148, label %16

16:                                               ; preds = %8, %21
  %17 = phi %"class.blink::Member.1117"* [ %22, %21 ], [ %10, %8 ]
  %18 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %18, align 8
  %20 = icmp eq %"class.blink::CSSRule"* %19, %1
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %17, i64 1
  %23 = icmp ult %"class.blink::Member.1117"* %22, %14
  br i1 %23, label %16, label %148

24:                                               ; preds = %16
  %25 = ptrtoint %"class.blink::Member.1117"* %17 to i64
  %26 = ptrtoint %"class.blink::Member.1117"* %10 to i64
  %27 = sub i64 %25, %26
  %28 = lshr exact i64 %27, 3
  %29 = trunc i64 %28 to i32
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %148, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 10, i32 0, i32 0
  %33 = load %"struct.WTF::KeyValuePair.1147"*, %"struct.WTF::KeyValuePair.1147"** %32, align 8
  %34 = icmp eq %"struct.WTF::KeyValuePair.1147"* %33, null
  %35 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 10, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  br i1 %34, label %93, label %37

37:                                               ; preds = %31
  %38 = add i32 %36, -1
  %39 = zext i32 %38 to i64
  %40 = trunc i64 %27 to i32
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, -1
  %43 = add i32 %29, %42
  %44 = lshr i32 %43, 10
  %45 = xor i32 %44, %43
  %46 = mul i32 %45, 9
  %47 = lshr i32 %46, 6
  %48 = xor i32 %47, %46
  %49 = shl i32 %48, 11
  %50 = xor i32 %49, -1
  %51 = add i32 %48, %50
  %52 = lshr i32 %51, 16
  %53 = xor i32 %52, %51
  %54 = and i32 %38, %53
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %33, i64 %55
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %56, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %29
  br i1 %59, label %88, label %60

60:                                               ; preds = %37
  %61 = xor i32 %53, -1
  %62 = lshr i32 %51, 23
  %63 = add i32 %62, %61
  %64 = shl i32 %63, 12
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 7
  %67 = xor i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 20
  %71 = xor i32 %70, %69
  %72 = or i32 %71, 1
  %73 = zext i32 %72 to i64
  br label %74

74:                                               ; preds = %79, %60
  %75 = phi i32 [ %58, %60 ], [ %86, %79 ]
  %76 = phi i64 [ %55, %60 ], [ %83, %79 ]
  %77 = phi i64 [ 0, %60 ], [ %81, %79 ]
  %78 = icmp eq i32 %75, -1
  br i1 %78, label %93, label %79

79:                                               ; preds = %74
  %80 = icmp eq i64 %77, 0
  %81 = select i1 %80, i64 %73, i64 %77
  %82 = add i64 %81, %76
  %83 = and i64 %82, %39
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %33, i64 %83
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %84, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, %29
  br i1 %87, label %88, label %74

88:                                               ; preds = %79, %37
  %89 = phi %"struct.WTF::KeyValuePair.1147"* [ %56, %37 ], [ %84, %79 ]
  %90 = icmp eq %"struct.WTF::KeyValuePair.1147"* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %88
  %92 = zext i32 %36 to i64
  br label %96

93:                                               ; preds = %74, %88, %31
  %94 = zext i32 %36 to i64
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %33, i64 %94
  br label %96

96:                                               ; preds = %91, %93
  %97 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %98 = phi %"struct.WTF::KeyValuePair.1147"* [ %89, %91 ], [ %95, %93 ]
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %33, i64 %97
  %100 = icmp eq %"struct.WTF::KeyValuePair.1147"* %98, %99
  br i1 %100, label %148, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 9, i32 0
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %98, i64 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = tail call dereferenceable(8) %"class.blink::Member.1117"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1135"* %102, i32 %104)
  %106 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %106, align 8
  %108 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116CanonicalCSSTextEPNS_7CSSRuleE(%"class.blink::CSSRule"* nonnull %1)
  %109 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116CanonicalCSSTextEPNS_7CSSRuleE(%"class.blink::CSSRule"* %107)
  %110 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"* %109) #18
  %111 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %101
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #18
  br label %125

125:                                              ; preds = %101, %121, %124
  %126 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %127
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %127
  %137 = phi i32 [ %135, %134 ], [ %133, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #18
  br label %140

140:                                              ; preds = %125, %136, %139
  br i1 %110, label %141, label %148

141:                                              ; preds = %140
  %142 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %3, align 8
  %143 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %142, i64 0, i32 0
  %144 = load i32, i32* %103, align 4
  %145 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %143, i32 %144)
  %146 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %145, i64 0, i32 0, i32 0
  %147 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %146, align 8
  br label %148

148:                                              ; preds = %21, %140, %8, %24, %141, %96, %2
  %149 = phi %"class.blink::CSSRuleSourceData"* [ null, %2 ], [ null, %24 ], [ null, %96 ], [ %147, %141 ], [ null, %140 ], [ null, %8 ], [ null, %21 ]
  ret %"class.blink::CSSRuleSourceData"* %149
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink19InspectorStyleSheet17OwnerStyleElementEv(%"class.blink::InspectorStyleSheet"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %3, i64 0, i32 11, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %40, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 12
  %11 = icmp eq i32 %10, 0
  %12 = bitcast %"class.blink::Node"* %5 to %"class.blink::Element"*
  br i1 %11, label %13, label %40

13:                                               ; preds = %7
  %14 = and i32 %9, 48
  switch i32 %14, label %40 [
    i32 0, label %15
    i32 32, label %27
  ]

15:                                               ; preds = %13
  %16 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 2
  %20 = bitcast %"class.blink::Member.1115"* %19 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %23, %25
  br i1 %26, label %39, label %40

27:                                               ; preds = %13
  %28 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kStyleTagE, align 8
  %29 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 2
  %32 = bitcast %"class.blink::Member.1115"* %31 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %27, %15
  br label %40

40:                                               ; preds = %13, %15, %7, %1, %27, %39
  %41 = phi %"class.blink::Element"* [ %12, %39 ], [ null, %27 ], [ null, %7 ], [ null, %1 ], [ null, %15 ], [ null, %13 ]
  ret %"class.blink::Element"* %41
}

declare void @_ZN5blink26InspectorResourceContainer24StoreStyleElementContentEiRKN3WTF6StringE(%"class.blink::InspectorResourceContainer"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink26InspectorResourceContainer22StoreStyleSheetContentERKN3WTF6StringES4_(%"class.blink::InspectorResourceContainer"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::CSS::CSSStyleSheetHeader"* @_ZN5blink19InspectorStyleSheet28BuildObjectForStyleSheetInfoEv(%"class.blink::InspectorStyleSheet"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %3, align 8
  %5 = icmp eq %"class.blink::CSSStyleSheet"* %4, null
  br i1 %5, label %484, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* nonnull %4) #18
  %8 = icmp eq %"class.blink::Document"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  %10 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %7) #18
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi %"class.blink::LocalFrame"* [ %10, %9 ], [ null, %6 ]
  %13 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0
  %14 = tail call %"class.WTF::Vector"* @_ZN5blink23InspectorStyleSheetBase14GetLineEndingsEv(%"class.blink::InspectorStyleSheetBase"* %13)
  %15 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %4, i64 0, i32 16
  %16 = bitcast %"class.WTF::TextPosition"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = trunc i64 %17 to i32
  %19 = lshr i64 %17, 32
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %14, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %38, label %24

24:                                               ; preds = %11
  %25 = add i32 %22, -1
  %26 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %25) #18
  %27 = load i32, i32* %26, align 4
  %28 = tail call i64 @_ZN3WTF12TextPosition24FromOffsetAndLineEndingsEjRKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(i32 %27, %"class.WTF::Vector"* dereferenceable(16) %14) #18
  %29 = trunc i64 %28 to i32
  %30 = lshr i64 %28, 32
  %31 = trunc i64 %30 to i32
  %32 = icmp eq i32 %29, 0
  %33 = select i1 %32, i32 %20, i32 0
  %34 = add i32 %33, %31
  %35 = add i64 %28, %17
  %36 = uitofp i32 %27 to double
  %37 = trunc i64 %35 to i32
  br label %38

38:                                               ; preds = %11, %24
  %39 = phi i32 [ %18, %11 ], [ %37, %24 ]
  %40 = phi i32 [ %20, %11 ], [ %34, %24 ]
  %41 = phi double [ 0.000000e+00, %11 ], [ %36, %24 ]
  %42 = tail call i8* @_Znwm(i64 120) #19
  %43 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS19CSSStyleSheetHeaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds i8, i8* %42, i64 8
  %45 = getelementptr inbounds i8, i8* %42, i64 40
  %46 = getelementptr inbounds i8, i8* %42, i64 68
  %47 = getelementptr inbounds i8, i8* %42, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 25, i1 false) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 25, i1 false) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 10, i1 false) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 40, i1 false) #18
  %48 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %68, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %70

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i33
  %60 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #18
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !3

65:                                               ; preds = %56
  tail call void @llvm.trap() #18
  unreachable

66:                                               ; preds = %56
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %57, align 4
  br label %70

68:                                               ; preds = %38
  %69 = bitcast i8* %44 to %"class.WTF::String"*
  br label %87

70:                                               ; preds = %51, %66
  %71 = bitcast i8* %44 to %"class.WTF::String"*
  %72 = load atomic i32, i32* %52 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %87

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i33
  %79 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %78, i33 1) #18
  %80 = extractvalue { i33, i1 } %79, 1
  %81 = extractvalue { i33, i1 } %79, 0
  %82 = icmp slt i33 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %84, label %85, !prof !3

84:                                               ; preds = %75
  tail call void @llvm.trap() #18
  unreachable

85:                                               ; preds = %75
  %86 = trunc i33 %81 to i32
  store i32 %86, i32* %76, align 4
  br label %87

87:                                               ; preds = %68, %85, %70
  %88 = phi %"class.WTF::String"* [ %71, %85 ], [ %71, %70 ], [ %69, %68 ]
  %89 = ptrtoint %"class.WTF::StringImpl"* %49 to i64
  %90 = bitcast %"class.WTF::String"* %88 to i64*
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  store i64 %89, i64* %90, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #18
  br label %107

107:                                              ; preds = %87, %103, %106
  %108 = getelementptr inbounds i8, i8* %42, i64 48
  %109 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 4, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %129, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %129

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = zext i32 %119 to i33
  %121 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %120, i33 1) #18
  %122 = extractvalue { i33, i1 } %121, 1
  %123 = extractvalue { i33, i1 } %121, 0
  %124 = icmp slt i33 %123, 0
  %125 = or i1 %122, %124
  br i1 %125, label %126, label %127, !prof !3

126:                                              ; preds = %117
  tail call void @llvm.trap() #18
  unreachable

127:                                              ; preds = %117
  %128 = trunc i33 %123 to i32
  store i32 %128, i32* %118, align 4
  br label %129

129:                                              ; preds = %127, %112, %107
  %130 = ptrtoint %"class.WTF::StringImpl"* %110 to i64
  %131 = bitcast i8* %108 to i64*
  %132 = bitcast i8* %108 to %"class.WTF::StringImpl"**
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  store i64 %130, i64* %131, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #18
  br label %148

148:                                              ; preds = %129, %144, %147
  %149 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %4, i64 0, i32 3
  %150 = load i8, i8* %149, align 1, !range !4
  %151 = getelementptr inbounds i8, i8* %42, i64 72
  store i8 %150, i8* %151, align 8
  %152 = tail call %"class.WTF::StringImpl"* @_ZN5blink19InspectorStyleSheet3UrlEv(%"class.blink::InspectorStyleSheet"* %0)
  %153 = getelementptr inbounds i8, i8* %42, i64 24
  %154 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %154, label %172, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %172

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i33
  %164 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %163, i33 1) #18
  %165 = extractvalue { i33, i1 } %164, 1
  %166 = extractvalue { i33, i1 } %164, 0
  %167 = icmp slt i33 %166, 0
  %168 = or i1 %165, %167
  br i1 %168, label %169, label %170, !prof !3

169:                                              ; preds = %160
  tail call void @llvm.trap() #18
  unreachable

170:                                              ; preds = %160
  %171 = trunc i33 %166 to i32
  store i32 %171, i32* %161, align 4
  br label %172

172:                                              ; preds = %170, %155, %148
  %173 = ptrtoint %"class.WTF::StringImpl"* %152 to i64
  %174 = bitcast i8* %153 to i64*
  %175 = bitcast i8* %153 to %"class.WTF::StringImpl"**
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  store i64 %173, i64* %174, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %172
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #18
  br label %191

191:                                              ; preds = %172, %187, %190
  %192 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %4, i64 0, i32 7, i32 0, i32 0
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %212, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %215

200:                                              ; preds = %195
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = zext i32 %202 to i33
  %204 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %203, i33 1) #18
  %205 = extractvalue { i33, i1 } %204, 1
  %206 = extractvalue { i33, i1 } %204, 0
  %207 = icmp slt i33 %206, 0
  %208 = or i1 %205, %207
  br i1 %208, label %209, label %210, !prof !3

209:                                              ; preds = %200
  tail call void @llvm.trap() #18
  unreachable

210:                                              ; preds = %200
  %211 = trunc i33 %206 to i32
  store i32 %211, i32* %201, align 4
  br label %215

212:                                              ; preds = %191
  %213 = getelementptr inbounds i8, i8* %42, i64 56
  %214 = bitcast i8* %213 to %"class.WTF::String"*
  br label %233

215:                                              ; preds = %195, %210
  %216 = getelementptr inbounds i8, i8* %42, i64 56
  %217 = bitcast i8* %216 to %"class.WTF::String"*
  %218 = load atomic i32, i32* %196 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %233

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = zext i32 %223 to i33
  %225 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %224, i33 1) #18
  %226 = extractvalue { i33, i1 } %225, 1
  %227 = extractvalue { i33, i1 } %225, 0
  %228 = icmp slt i33 %227, 0
  %229 = or i1 %226, %228
  br i1 %229, label %230, label %231, !prof !3

230:                                              ; preds = %221
  tail call void @llvm.trap() #18
  unreachable

231:                                              ; preds = %221
  %232 = trunc i33 %227 to i32
  store i32 %232, i32* %222, align 4
  br label %233

233:                                              ; preds = %212, %231, %215
  %234 = phi %"class.WTF::String"* [ %217, %231 ], [ %217, %215 ], [ %214, %212 ]
  %235 = ptrtoint %"class.WTF::StringImpl"* %193 to i64
  %236 = bitcast %"class.WTF::String"* %234 to i64*
  %237 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %234, i64 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  store i64 %235, i64* %236, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %233
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #18
  br label %253

253:                                              ; preds = %233, %249, %252
  %254 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254) #18
  %255 = icmp eq %"class.blink::LocalFrame"* %12, null
  br i1 %255, label %260, label %256

256:                                              ; preds = %253
  %257 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %12, i64 0, i32 0
  %258 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %257) #18
  %259 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %258, %"class.WTF::StringImpl"** %259, align 8
  br label %263

260:                                              ; preds = %253
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0), i64 0) #18
  %261 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %261, align 8
  br label %263

263:                                              ; preds = %260, %256
  %264 = phi %"class.WTF::StringImpl"* [ %262, %260 ], [ %258, %256 ]
  %265 = getelementptr inbounds i8, i8* %42, i64 16
  %266 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %267 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %267, label %285, label %268

268:                                              ; preds = %263
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load atomic i32, i32* %269 monotonic, align 4
  %271 = and i32 %270, 2
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %285

273:                                              ; preds = %268
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  %276 = zext i32 %275 to i33
  %277 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %276, i33 1) #18
  %278 = extractvalue { i33, i1 } %277, 1
  %279 = extractvalue { i33, i1 } %277, 0
  %280 = icmp slt i33 %279, 0
  %281 = or i1 %278, %280
  br i1 %281, label %282, label %283, !prof !3

282:                                              ; preds = %273
  call void @llvm.trap() #18
  unreachable

283:                                              ; preds = %273
  %284 = trunc i33 %279 to i32
  store i32 %284, i32* %274, align 4
  br label %285

285:                                              ; preds = %283, %268, %263
  %286 = ptrtoint %"class.WTF::StringImpl"* %264 to i64
  %287 = bitcast i8* %265 to i64*
  %288 = bitcast i8* %265 to %"class.WTF::StringImpl"**
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %288, align 8
  store i64 %286, i64* %287, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %290, label %304, label %291

291:                                              ; preds = %285
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  br i1 %295, label %298, label %300

298:                                              ; preds = %291
  %299 = add i32 %297, -1
  store i32 %299, i32* %296, align 4
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i32 [ %299, %298 ], [ %297, %291 ]
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %289) #18
  br label %304

304:                                              ; preds = %285, %300, %303
  %305 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %4, i64 0, i32 2
  %306 = load i8, i8* %305, align 8, !range !4
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %322, label %308

308:                                              ; preds = %304
  %309 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %3, align 8
  %310 = icmp eq %"class.blink::CSSStyleSheet"* %309, null
  br i1 %310, label %319, label %311

311:                                              ; preds = %308
  %312 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %309, i64 0, i32 16
  %313 = bitcast %"class.WTF::TextPosition"* %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = trunc i64 %314 to i32
  %316 = icmp eq i32 %315, 0
  %317 = icmp ult i64 %314, 4294967296
  %318 = and i1 %317, %316
  br label %319

319:                                              ; preds = %308, %311
  %320 = phi i1 [ %318, %311 ], [ true, %308 ]
  %321 = xor i1 %320, true
  br label %322

322:                                              ; preds = %304, %319
  %323 = phi i1 [ false, %304 ], [ %321, %319 ]
  %324 = zext i1 %323 to i8
  %325 = getelementptr inbounds i8, i8* %42, i64 75
  store i8 %324, i8* %325, align 1
  %326 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %4, i64 0, i32 14, i32 0, i32 0
  %327 = load %"class.blink::Document"*, %"class.blink::Document"** %326, align 8
  %328 = icmp ne %"class.blink::Document"* %327, null
  %329 = zext i1 %328 to i8
  %330 = getelementptr inbounds i8, i8* %42, i64 77
  store i8 %329, i8* %330, align 1
  %331 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %4, i64 0, i32 1, i32 0, i32 0
  %332 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %331, align 8
  %333 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %332, i64 0, i32 8
  %334 = load i8, i8* %333, align 8
  %335 = lshr i8 %334, 2
  %336 = and i8 %335, 1
  %337 = getelementptr inbounds i8, i8* %42, i64 76
  store i8 %336, i8* %337, align 4
  %338 = sitofp i32 %18 to double
  %339 = bitcast i8* %47 to double*
  store double %338, double* %339, align 8
  %340 = sitofp i32 %20 to double
  %341 = getelementptr inbounds i8, i8* %42, i64 88
  %342 = bitcast i8* %341 to double*
  store double %340, double* %342, align 8
  %343 = getelementptr inbounds i8, i8* %42, i64 96
  %344 = bitcast i8* %343 to double*
  store double %41, double* %344, align 8
  %345 = sitofp i32 %39 to double
  %346 = getelementptr inbounds i8, i8* %42, i64 104
  %347 = bitcast i8* %346 to double*
  store double %345, double* %347, align 8
  %348 = sitofp i32 %40 to double
  %349 = getelementptr inbounds i8, i8* %42, i64 112
  %350 = bitcast i8* %349 to double*
  store double %348, double* %350, align 8
  %351 = ptrtoint i8* %42 to i64
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %266, align 8
  %353 = icmp eq %"class.WTF::StringImpl"* %352, null
  br i1 %353, label %367, label %354

354:                                              ; preds = %322
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load atomic i32, i32* %355 monotonic, align 4
  %357 = and i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 0
  %360 = load i32, i32* %359, align 4
  br i1 %358, label %361, label %363

361:                                              ; preds = %354
  %362 = add i32 %360, -1
  store i32 %362, i32* %359, align 4
  br label %363

363:                                              ; preds = %361, %354
  %364 = phi i32 [ %362, %361 ], [ %360, %354 ]
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %367

366:                                              ; preds = %363
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %352) #18
  br label %367

367:                                              ; preds = %322, %363, %366
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #18
  br i1 %194, label %381, label %368

368:                                              ; preds = %367
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %370 = load atomic i32, i32* %369 monotonic, align 4
  %371 = and i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %374 = load i32, i32* %373, align 4
  br i1 %372, label %375, label %377

375:                                              ; preds = %368
  %376 = add i32 %374, -1
  store i32 %376, i32* %373, align 4
  br label %377

377:                                              ; preds = %375, %368
  %378 = phi i32 [ %376, %375 ], [ %374, %368 ]
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %380, label %381

380:                                              ; preds = %377
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #18
  br label %381

381:                                              ; preds = %367, %377, %380
  br i1 %154, label %395, label %382

382:                                              ; preds = %381
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #18
  br label %395

395:                                              ; preds = %381, %391, %394
  br i1 %50, label %409, label %396

396:                                              ; preds = %395
  %397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %398 = load atomic i32, i32* %397 monotonic, align 4
  %399 = and i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %402 = load i32, i32* %401, align 4
  br i1 %400, label %403, label %405

403:                                              ; preds = %396
  %404 = add i32 %402, -1
  store i32 %404, i32* %401, align 4
  br label %405

405:                                              ; preds = %403, %396
  %406 = phi i32 [ %404, %403 ], [ %402, %396 ]
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %408, label %409

408:                                              ; preds = %405
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #18
  br label %409

409:                                              ; preds = %408, %405, %395
  %410 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorStyleSheet9SourceURLEv(%"class.blink::InspectorStyleSheet"* %0) #18
  %411 = icmp eq %"class.WTF::StringImpl"* %410, null
  br i1 %411, label %432, label %412

412:                                              ; preds = %409
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 1
  %414 = load i32, i32* %413, align 4
  %415 = icmp ne i32 %414, 0
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %417 = load atomic i32, i32* %416 monotonic, align 4
  %418 = and i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 0
  %421 = load i32, i32* %420, align 4
  br i1 %419, label %422, label %424

422:                                              ; preds = %412
  %423 = add i32 %421, -1
  store i32 %423, i32* %420, align 4
  br label %424

424:                                              ; preds = %422, %412
  %425 = phi i32 [ %423, %422 ], [ %421, %412 ]
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %427, label %428

427:                                              ; preds = %424
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %410) #18
  br i1 %415, label %429, label %432

428:                                              ; preds = %424
  br i1 %415, label %429, label %432

429:                                              ; preds = %427, %428
  %430 = getelementptr inbounds i8, i8* %42, i64 74
  store i8 1, i8* %430, align 1
  %431 = getelementptr inbounds i8, i8* %42, i64 73
  store i8 1, i8* %431, align 1
  br label %432

432:                                              ; preds = %409, %427, %429, %428
  %433 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %4, i64 0, i32 11, i32 0, i32 0
  %434 = load %"class.blink::Node"*, %"class.blink::Node"** %433, align 8
  %435 = icmp eq %"class.blink::Node"* %434, null
  br i1 %435, label %440, label %436

436:                                              ; preds = %432
  %437 = call i32 @_ZN5blink18IdentifiersFactory12IntIdForNodeEPNS_4NodeE(%"class.blink::Node"* nonnull %434) #18
  %438 = bitcast i8* %46 to i32*
  store i32 %437, i32* %438, align 4
  %439 = getelementptr inbounds i8, i8* %42, i64 64
  store i8 1, i8* %439, align 4
  br label %440

440:                                              ; preds = %432, %436
  %441 = bitcast %"class.blink::InspectorStyleSheet"* %0 to %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheet"*)***
  %442 = load %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheet"*)**, %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheet"*)*** %441, align 8
  %443 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheet"*)*, %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheet"*)** %442, i64 5
  %444 = load %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheet"*)*, %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheet"*)** %443, align 8
  %445 = call %"class.WTF::StringImpl"* %444(%"class.blink::InspectorStyleSheet"* %0) #18
  %446 = icmp eq %"class.WTF::StringImpl"* %445, null
  br i1 %446, label %484, label %447

447:                                              ; preds = %440
  %448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %445, i64 0, i32 1
  %449 = load i32, i32* %448, align 4
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %471, label %451

451:                                              ; preds = %447
  %452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %445, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %453 = load atomic i32, i32* %452 monotonic, align 4
  %454 = and i32 %453, 2
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %456, label %468

456:                                              ; preds = %451
  %457 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %445, i64 0, i32 0
  %458 = load i32, i32* %457, align 4
  %459 = zext i32 %458 to i33
  %460 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %459, i33 1) #18
  %461 = extractvalue { i33, i1 } %460, 1
  %462 = extractvalue { i33, i1 } %460, 0
  %463 = icmp slt i33 %462, 0
  %464 = or i1 %461, %463
  br i1 %464, label %465, label %466, !prof !3

465:                                              ; preds = %456
  call void @llvm.trap() #18
  unreachable

466:                                              ; preds = %456
  %467 = trunc i33 %462 to i32
  store i32 %467, i32* %457, align 4
  br label %468

468:                                              ; preds = %451, %466
  %469 = getelementptr inbounds i8, i8* %42, i64 32
  %470 = bitcast i8* %469 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %470, %"class.WTF::StringImpl"* nonnull %445) #18
  br label %471

471:                                              ; preds = %468, %447
  %472 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %445, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %473 = load atomic i32, i32* %472 monotonic, align 4
  %474 = and i32 %473, 2
  %475 = icmp eq i32 %474, 0
  %476 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %445, i64 0, i32 0
  %477 = load i32, i32* %476, align 4
  br i1 %475, label %478, label %480

478:                                              ; preds = %471
  %479 = add i32 %477, -1
  store i32 %479, i32* %476, align 4
  br label %480

480:                                              ; preds = %478, %471
  %481 = phi i32 [ %479, %478 ], [ %477, %471 ]
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %483, label %484

483:                                              ; preds = %480
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %445) #18
  br label %484

484:                                              ; preds = %440, %480, %483, %1
  %485 = phi i64 [ 0, %1 ], [ %351, %483 ], [ %351, %480 ], [ %351, %440 ]
  %486 = inttoptr i64 %485 to %"class.blink::protocol::CSS::CSSStyleSheetHeader"*
  ret %"class.blink::protocol::CSS::CSSStyleSheetHeader"* %486
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink19InspectorStyleSheet3UrlEv(%"class.blink::InspectorStyleSheet"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #18
  %5 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %9, align 8
  %10 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %11 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %10, i64* %11, align 8
  br label %19

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %18 = bitcast i8** %17 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %18, align 8
  br label %19

19:                                               ; preds = %12, %8
  %20 = phi i32 [ %15, %12 ], [ 0, %8 ]
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %20, i32* %21, align 8
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #18
  %23 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum7RegularE, i64 0, i64 0)) #20
  %24 = icmp ult i64 %23, 4294967296
  br i1 %24, label %26, label %25, !prof !2

25:                                               ; preds = %19
  tail call void @llvm.trap() #18
  unreachable

26:                                               ; preds = %19
  %27 = trunc i64 %23 to i32
  %28 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %29 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum7RegularE, i64 0, i64 0), i8** %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %27, i32* %31, align 8
  %32 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #18
  br i1 %32, label %33, label %78

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %34, align 8
  %36 = icmp eq %"class.blink::CSSStyleSheet"* %35, null
  br i1 %36, label %78, label %37

37:                                               ; preds = %33
  %38 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorStyleSheet9SourceURLEv(%"class.blink::InspectorStyleSheet"* %0) #18
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %60, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp ne i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %40
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %40
  %53 = phi i32 [ %51, %50 ], [ %49, %40 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #18
  br i1 %43, label %57, label %60

56:                                               ; preds = %52
  br i1 %43, label %57, label %60

57:                                               ; preds = %55, %56
  %58 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorStyleSheet9SourceURLEv(%"class.blink::InspectorStyleSheet"* %0)
  %59 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  br label %78

60:                                               ; preds = %37, %55, %56
  %61 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %35, i64 0, i32 2
  %62 = load i8, i8* %61, align 8, !range !4
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %75, label %64

64:                                               ; preds = %60
  %65 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %34, align 8
  %66 = icmp eq %"class.blink::CSSStyleSheet"* %65, null
  br i1 %66, label %78, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %65, i64 0, i32 16
  %69 = bitcast %"class.WTF::TextPosition"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = trunc i64 %70 to i32
  %72 = icmp eq i32 %71, 0
  %73 = icmp ult i64 %70, 4294967296
  %74 = and i1 %73, %72
  br i1 %74, label %78, label %75

75:                                               ; preds = %60, %67
  %76 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorStyleSheet8FinalURLEv(%"class.blink::InspectorStyleSheet"* %0)
  %77 = ptrtoint %"class.WTF::StringImpl"* %76 to i64
  br label %78

78:                                               ; preds = %26, %64, %67, %33, %57, %75
  %79 = phi i64 [ %59, %57 ], [ %77, %75 ], [ 0, %26 ], [ 0, %33 ], [ 0, %67 ], [ 0, %64 ]
  %80 = inttoptr i64 %79 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %80
}

declare %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"*) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink19InspectorStyleSheet12StartsAtZeroEv(%"class.blink::InspectorStyleSheet"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %2, align 8
  %4 = icmp eq %"class.blink::CSSStyleSheet"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %3, i64 0, i32 16
  %7 = bitcast %"class.WTF::TextPosition"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = icmp eq i32 %9, 0
  %11 = icmp ult i64 %8, 4294967296
  %12 = and i1 %10, %11
  ret i1 %12

13:                                               ; preds = %1
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19InspectorStyleSheet12HasSourceURLEv(%"class.blink::InspectorStyleSheet"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.WTF::StringImpl"* @_ZN5blink19InspectorStyleSheet9SourceURLEv(%"class.blink::InspectorStyleSheet"* %0)
  %3 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp ne i32 %6, 0
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %4
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %4
  %17 = phi i32 [ %15, %14 ], [ %13, %4 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #18
  br label %20

20:                                               ; preds = %1, %16, %19
  %21 = phi i1 [ %7, %16 ], [ %7, %19 ], [ false, %1 ]
  ret i1 %21
}

declare i32 @_ZN5blink18IdentifiersFactory12IntIdForNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.2518"* @_ZN5blink19InspectorStyleSheet19SelectorsFromSourceEPNS_17CSSRuleSourceDataERKN3WTF6StringE(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSRuleSourceData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.std::__1::unique_ptr.2520", align 8
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #18
  store i32 0, i32* %4, align 4
  %12 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #18
  store i32 1, i32* %5, align 4
  %13 = call %"class.blink::ScriptRegexp"* @_ZN5blink25MakeGarbageCollectedTraitINS_12ScriptRegexpEE4CallIJRA12_KcN3WTF19TextCaseSensitivityENS_13MultilineModeEEEEPS1_DpOT_([12 x i8]* nonnull dereferenceable(12) @.str.19, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #18
  %14 = call i8* @_Znwm(i64 24) #19
  %15 = bitcast i8* %14 to %"class.std::__1::vector.2518"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #18
  %16 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %1, i64 0, i32 3
  %17 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %1, i64 0, i32 3, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %223, label %20

20:                                               ; preds = %3
  %21 = bitcast %"class.WTF::String"* %6 to i8*
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %23 = bitcast i32* %7 to i8*
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  %27 = bitcast %"class.WTF::StringView"* %8 to i64*
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %29 = bitcast %"class.WTF::StringView"* %9 to i8*
  %30 = bitcast %"class.WTF::StringView"* %9 to i64*
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %33 = bitcast %"class.WTF::String"* %6 to i64*
  %34 = bitcast %"class.std::__1::unique_ptr.2520"* %10 to i8*
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %10, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::unique_ptr.2520"* %10 to i8**
  %37 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0
  %38 = getelementptr inbounds i8, i8* %14, i64 8
  %39 = bitcast i8* %38 to %"class.std::__1::unique_ptr.2520"**
  %40 = getelementptr inbounds i8, i8* %14, i64 16
  %41 = bitcast i8* %40 to %"class.std::__1::unique_ptr.2520"**
  %42 = bitcast %"class.std::__1::unique_ptr.2520"* %10 to i64*
  %43 = bitcast i8* %38 to i64*
  br label %44

44:                                               ; preds = %220, %20
  %45 = phi i32 [ 0, %20 ], [ %221, %220 ]
  %46 = call dereferenceable(8) %"class.blink::SourceRange"* @_ZNK3WTF6VectorIN5blink11SourceRangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.21"* %16, i32 %45)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #18
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %22, align 8
  %47 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %46, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = call i32 @_ZNK5blink11SourceRange6lengthEv(%"class.blink::SourceRange"* %46) #18
  %50 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %2, i32 %48, i32 %49) #18
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #18
  store i32 -1431655766, i32* %7, align 4
  br label %51

51:                                               ; preds = %88, %44
  %52 = phi %"class.WTF::StringImpl"* [ %89, %88 ], [ %50, %44 ]
  %53 = phi i32 [ %63, %88 ], [ 0, %44 ]
  %54 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  store i8* null, i8** %25, align 8
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %56, i64* %27, align 8
  br label %61

57:                                               ; preds = %51
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %24, align 8
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %26, align 8
  br label %61

61:                                               ; preds = %55, %57
  %62 = phi i32 [ %59, %57 ], [ 0, %55 ]
  store i32 %62, i32* %28, align 8
  %63 = call i32 @_ZNK5blink12ScriptRegexp5MatchEN3WTF10StringViewEiPiPNS1_6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ScriptRegexp"* %13, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %8, i32 %53, i32* nonnull %7, %"class.WTF::Vector.152"* null) #18
  %64 = icmp sgt i32 %63, -1
  br i1 %64, label %65, label %90

65:                                               ; preds = %61
  %66 = load i32, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #18
  %67 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %67, i64* %30, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0), i8** %31, align 8
  store i32 0, i32* %32, align 8
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %88, label %70

70:                                               ; preds = %65
  %71 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEjjRKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %68, i32 %63, i32 %66, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #18
  %72 = ptrtoint %"class.WTF::StringImpl"* %71 to i64
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  store i64 %72, i64* %33, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #18
  br label %88

88:                                               ; preds = %65, %70, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #18
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  br label %51

90:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #18
  store %"class.blink::protocol::CSS::Value"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::CSS::Value"*), %"class.blink::protocol::CSS::Value"** %35, align 8
  %91 = call i8* @_Znwm(i64 24) #19
  %92 = bitcast i8* %91 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS5ValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %93 = getelementptr inbounds i8, i8* %91, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 16, i1 false) #18
  %94 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %6) #18
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %113, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %113

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i33
  %105 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %104, i33 1) #18
  %106 = extractvalue { i33, i1 } %105, 1
  %107 = extractvalue { i33, i1 } %105, 0
  %108 = icmp slt i33 %107, 0
  %109 = or i1 %106, %108
  br i1 %109, label %110, label %111, !prof !3

110:                                              ; preds = %101
  call void @llvm.trap() #18
  unreachable

111:                                              ; preds = %101
  %112 = trunc i33 %107 to i32
  store i32 %112, i32* %102, align 4
  br label %113

113:                                              ; preds = %111, %96, %90
  %114 = ptrtoint %"class.WTF::StringImpl"* %94 to i64
  %115 = bitcast i8* %93 to i64*
  %116 = bitcast i8* %93 to %"class.WTF::StringImpl"**
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  store i64 %114, i64* %115, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #18
  br label %132

132:                                              ; preds = %113, %128, %131
  store i8* %91, i8** %36, align 8
  br i1 %95, label %146, label %133

133:                                              ; preds = %132
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %142

140:                                              ; preds = %133
  %141 = add i32 %139, -1
  store i32 %141, i32* %138, align 4
  br label %142

142:                                              ; preds = %140, %133
  %143 = phi i32 [ %141, %140 ], [ %139, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #18
  br label %146

146:                                              ; preds = %145, %142, %132
  %147 = load %"class.blink::protocol::CSS::Value"*, %"class.blink::protocol::CSS::Value"** %35, align 8
  %148 = call %"class.WTF::Vector"* @_ZN5blink23InspectorStyleSheetBase14GetLineEndingsEv(%"class.blink::InspectorStyleSheetBase"* %37) #18
  %149 = icmp eq %"class.WTF::Vector"* %148, null
  br i1 %149, label %173, label %150

150:                                              ; preds = %146
  %151 = load i32, i32* %47, align 4
  %152 = call i64 @_ZN3WTF12TextPosition24FromOffsetAndLineEndingsEjRKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(i32 %151, %"class.WTF::Vector"* nonnull dereferenceable(16) %148) #18
  %153 = trunc i64 %152 to i32
  %154 = lshr i64 %152, 32
  %155 = trunc i64 %154 to i32
  %156 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %46, i64 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = call i64 @_ZN3WTF12TextPosition24FromOffsetAndLineEndingsEjRKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(i32 %157, %"class.WTF::Vector"* nonnull dereferenceable(16) %148) #18
  %159 = trunc i64 %158 to i32
  %160 = lshr i64 %158, 32
  %161 = trunc i64 %160 to i32
  %162 = call i8* @_Znwm(i64 24) #19
  %163 = bitcast i8* %162 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS11SourceRangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %163, align 8
  %164 = getelementptr inbounds i8, i8* %162, i64 8
  %165 = bitcast i8* %164 to i32*
  store i32 %153, i32* %165, align 8
  %166 = getelementptr inbounds i8, i8* %162, i64 12
  %167 = bitcast i8* %166 to i32*
  store i32 %155, i32* %167, align 4
  %168 = getelementptr inbounds i8, i8* %162, i64 16
  %169 = bitcast i8* %168 to i32*
  store i32 %159, i32* %169, align 8
  %170 = getelementptr inbounds i8, i8* %162, i64 20
  %171 = bitcast i8* %170 to i32*
  store i32 %161, i32* %171, align 4
  %172 = bitcast i8* %162 to %"class.blink::protocol::CSS::SourceRange"*
  br label %173

173:                                              ; preds = %146, %150
  %174 = phi %"class.blink::protocol::CSS::SourceRange"* [ %172, %150 ], [ null, %146 ]
  %175 = ptrtoint %"class.blink::protocol::CSS::SourceRange"* %174 to i64
  %176 = getelementptr inbounds %"class.blink::protocol::CSS::Value", %"class.blink::protocol::CSS::Value"* %147, i64 0, i32 2
  %177 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe"* %176, i64 0, i32 0, i32 0, i32 0, i32 0
  %178 = load %"class.blink::protocol::CSS::SourceRange"*, %"class.blink::protocol::CSS::SourceRange"** %177, align 8
  %179 = bitcast %"class.crdtp::detail::PtrMaybe"* %176 to i64*
  store i64 %175, i64* %179, align 8
  %180 = icmp eq %"class.blink::protocol::CSS::SourceRange"* %178, null
  br i1 %180, label %186, label %181

181:                                              ; preds = %173
  %182 = bitcast %"class.blink::protocol::CSS::SourceRange"* %178 to void (%"class.blink::protocol::CSS::SourceRange"*)***
  %183 = load void (%"class.blink::protocol::CSS::SourceRange"*)**, void (%"class.blink::protocol::CSS::SourceRange"*)*** %182, align 8
  %184 = getelementptr inbounds void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %183, i64 2
  %185 = load void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %184, align 8
  call void %185(%"class.blink::protocol::CSS::SourceRange"* nonnull %178) #18
  br label %186

186:                                              ; preds = %173, %181
  %187 = load %"class.std::__1::unique_ptr.2520"*, %"class.std::__1::unique_ptr.2520"** %39, align 8
  %188 = load %"class.std::__1::unique_ptr.2520"*, %"class.std::__1::unique_ptr.2520"** %41, align 8
  %189 = icmp ult %"class.std::__1::unique_ptr.2520"* %187, %188
  br i1 %189, label %190, label %195

190:                                              ; preds = %186
  %191 = load i64, i64* %42, align 8
  store %"class.blink::protocol::CSS::Value"* null, %"class.blink::protocol::CSS::Value"** %35, align 8
  %192 = bitcast %"class.std::__1::unique_ptr.2520"* %187 to i64*
  store i64 %191, i64* %192, align 8
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %187, i64 1
  %194 = ptrtoint %"class.std::__1::unique_ptr.2520"* %193 to i64
  store i64 %194, i64* %43, align 8
  br label %196

195:                                              ; preds = %186
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS5ValueENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2518"* nonnull %15, %"class.std::__1::unique_ptr.2520"* nonnull dereferenceable(8) %10) #18
  br label %196

196:                                              ; preds = %190, %195
  %197 = load %"class.blink::protocol::CSS::Value"*, %"class.blink::protocol::CSS::Value"** %35, align 8
  store %"class.blink::protocol::CSS::Value"* null, %"class.blink::protocol::CSS::Value"** %35, align 8
  %198 = icmp eq %"class.blink::protocol::CSS::Value"* %197, null
  br i1 %198, label %204, label %199

199:                                              ; preds = %196
  %200 = bitcast %"class.blink::protocol::CSS::Value"* %197 to void (%"class.blink::protocol::CSS::Value"*)***
  %201 = load void (%"class.blink::protocol::CSS::Value"*)**, void (%"class.blink::protocol::CSS::Value"*)*** %200, align 8
  %202 = getelementptr inbounds void (%"class.blink::protocol::CSS::Value"*)*, void (%"class.blink::protocol::CSS::Value"*)** %201, i64 2
  %203 = load void (%"class.blink::protocol::CSS::Value"*)*, void (%"class.blink::protocol::CSS::Value"*)** %202, align 8
  call void %203(%"class.blink::protocol::CSS::Value"* nonnull %197) #18
  br label %204

204:                                              ; preds = %196, %199
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #18
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %205) #18
  br label %220

220:                                              ; preds = %204, %216, %219
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #18
  %221 = add nuw i32 %45, 1
  %222 = icmp eq i32 %221, %18
  br i1 %222, label %223, label %44

223:                                              ; preds = %220, %3
  ret %"class.std::__1::vector.2518"* %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::SourceRange"* @_ZNK3WTF6VectorIN5blink11SourceRangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.21"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::SourceRange"*, %"class.blink::SourceRange"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %24, i64 %25
  ret %"class.blink::SourceRange"* %26
}

declare i32 @_ZNK5blink12ScriptRegexp5MatchEN3WTF10StringViewEiPiPNS1_6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ScriptRegexp"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8, i32, i32*, %"class.WTF::Vector.152"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::CSS::SelectorList"* @_ZN5blink19InspectorStyleSheet26BuildObjectForSelectorListEPNS_12CSSStyleRuleE(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSStyleRule"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.2520", align 8
  %4 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %1, i64 0, i32 0
  %5 = tail call %"class.blink::CSSRuleSourceData"* @_ZN5blink19InspectorStyleSheet17SourceDataForRuleEPNS_7CSSRuleE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRule"* %4)
  %6 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12CSSStyleRule12selectorTextEv(%"class.blink::CSSStyleRule"* %1) #18
  %7 = icmp eq %"class.blink::CSSRuleSourceData"* %5, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 7
  %10 = tail call %"class.std::__1::vector.2518"* @_ZN5blink19InspectorStyleSheet19SelectorsFromSourceEPNS_17CSSRuleSourceDataERKN3WTF6StringE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRuleSourceData"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %9)
  br label %116

11:                                               ; preds = %2
  %12 = tail call i8* @_Znwm(i64 24) #19
  %13 = bitcast i8* %12 to %"class.std::__1::vector.2518"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #18
  %14 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %1, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %15, i64 0, i32 2, i32 0
  %17 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %16, align 8
  %18 = icmp eq %"class.blink::CSSSelector"* %17, null
  br i1 %18, label %116, label %19

19:                                               ; preds = %11
  %20 = bitcast %"class.std::__1::unique_ptr.2520"* %3 to i8*
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %3, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::unique_ptr.2520"* %3 to i8**
  %23 = getelementptr inbounds i8, i8* %12, i64 8
  %24 = bitcast i8* %23 to %"class.std::__1::unique_ptr.2520"**
  %25 = getelementptr inbounds i8, i8* %12, i64 16
  %26 = bitcast i8* %25 to %"class.std::__1::unique_ptr.2520"**
  %27 = bitcast i8* %23 to i64*
  br label %28

28:                                               ; preds = %19, %111
  %29 = phi %"class.blink::CSSSelector"* [ %17, %19 ], [ %110, %111 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  %30 = call i8* @_Znwm(i64 24) #19
  %31 = bitcast i8* %30 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS5ValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds i8, i8* %30, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #18
  %33 = call %"class.WTF::StringImpl"* @_ZNK5blink11CSSSelector12SelectorTextEv(%"class.blink::CSSSelector"* nonnull %29) #18
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #18
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !3

49:                                               ; preds = %40
  call void @llvm.trap() #18
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35, %28
  %53 = ptrtoint %"class.WTF::StringImpl"* %33 to i64
  %54 = bitcast i8* %32 to i64*
  %55 = bitcast i8* %32 to %"class.WTF::StringImpl"**
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  store i64 %53, i64* %54, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #18
  br label %71

71:                                               ; preds = %52, %67, %70
  store i8* %30, i8** %22, align 8
  %72 = load %"class.std::__1::unique_ptr.2520"*, %"class.std::__1::unique_ptr.2520"** %24, align 8
  %73 = load %"class.std::__1::unique_ptr.2520"*, %"class.std::__1::unique_ptr.2520"** %26, align 8
  %74 = icmp ult %"class.std::__1::unique_ptr.2520"* %72, %73
  br i1 %74, label %75, label %80

75:                                               ; preds = %71
  %76 = ptrtoint i8* %30 to i64
  store %"class.blink::protocol::CSS::Value"* null, %"class.blink::protocol::CSS::Value"** %21, align 8
  %77 = bitcast %"class.std::__1::unique_ptr.2520"* %72 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %72, i64 1
  %79 = ptrtoint %"class.std::__1::unique_ptr.2520"* %78 to i64
  store i64 %79, i64* %27, align 8
  br label %81

80:                                               ; preds = %71
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS5ValueENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2518"* nonnull %13, %"class.std::__1::unique_ptr.2520"* nonnull dereferenceable(8) %3) #18
  br label %81

81:                                               ; preds = %75, %80
  %82 = load %"class.blink::protocol::CSS::Value"*, %"class.blink::protocol::CSS::Value"** %21, align 8
  store %"class.blink::protocol::CSS::Value"* null, %"class.blink::protocol::CSS::Value"** %21, align 8
  %83 = icmp eq %"class.blink::protocol::CSS::Value"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = bitcast %"class.blink::protocol::CSS::Value"* %82 to void (%"class.blink::protocol::CSS::Value"*)***
  %86 = load void (%"class.blink::protocol::CSS::Value"*)**, void (%"class.blink::protocol::CSS::Value"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.blink::protocol::CSS::Value"*)*, void (%"class.blink::protocol::CSS::Value"*)** %86, i64 2
  %88 = load void (%"class.blink::protocol::CSS::Value"*)*, void (%"class.blink::protocol::CSS::Value"*)** %87, align 8
  call void %88(%"class.blink::protocol::CSS::Value"* nonnull %82) #18
  br label %89

89:                                               ; preds = %81, %84
  br i1 %34, label %103, label %90

90:                                               ; preds = %89
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #18
  br label %103

103:                                              ; preds = %102, %99, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %104

104:                                              ; preds = %104, %103
  %105 = phi %"class.blink::CSSSelector"* [ %29, %103 ], [ %110, %104 ]
  %106 = bitcast %"class.blink::CSSSelector"* %105 to i32*
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 131072
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %105, i64 1
  br i1 %109, label %104, label %111

111:                                              ; preds = %104
  %112 = and i32 %107, 2097152
  %113 = icmp ne i32 %112, 0
  %114 = icmp eq %"class.blink::CSSSelector"* %110, null
  %115 = or i1 %114, %113
  br i1 %115, label %116, label %28

116:                                              ; preds = %111, %8, %11
  %117 = phi %"class.std::__1::vector.2518"* [ %10, %8 ], [ %13, %11 ], [ %13, %111 ]
  %118 = ptrtoint %"class.std::__1::vector.2518"* %117 to i64
  %119 = call i8* @_Znwm(i64 24) #19
  %120 = bitcast i8* %119 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS12SelectorListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds i8, i8* %119, i64 8
  %122 = getelementptr inbounds i8, i8* %119, i64 16
  %123 = bitcast i8* %122 to i64*
  store i64 0, i64* %123, align 8
  %124 = bitcast i8* %119 to %"class.blink::protocol::CSS::SelectorList"*
  %125 = bitcast i8* %121 to i64*
  store i64 %118, i64* %125, align 8
  %126 = getelementptr inbounds i8, i8* %119, i64 16
  %127 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %127, label %145, label %128

128:                                              ; preds = %116
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %148

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = zext i32 %135 to i33
  %137 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %136, i33 1) #18
  %138 = extractvalue { i33, i1 } %137, 1
  %139 = extractvalue { i33, i1 } %137, 0
  %140 = icmp slt i33 %139, 0
  %141 = or i1 %138, %140
  br i1 %141, label %142, label %143, !prof !3

142:                                              ; preds = %133
  call void @llvm.trap() #18
  unreachable

143:                                              ; preds = %133
  %144 = trunc i33 %139 to i32
  store i32 %144, i32* %134, align 4
  br label %148

145:                                              ; preds = %116
  %146 = ptrtoint %"class.WTF::StringImpl"* %6 to i64
  %147 = bitcast i8* %126 to i64*
  store i64 %146, i64* %147, align 8
  br label %163

148:                                              ; preds = %128, %143
  %149 = ptrtoint %"class.WTF::StringImpl"* %6 to i64
  %150 = bitcast i8* %126 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %148
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %148
  %160 = phi i32 [ %158, %157 ], [ %156, %148 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #18
  br label %163

163:                                              ; preds = %145, %162, %159
  ret %"class.blink::protocol::CSS::SelectorList"* %124
}

declare %"class.WTF::StringImpl"* @_ZNK5blink12CSSStyleRule12selectorTextEv(%"class.blink::CSSStyleRule"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink11CSSSelector12SelectorTextEv(%"class.blink::CSSSelector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.blink::protocol::CSS::CSSRule"* @_ZN5blink19InspectorStyleSheet30BuildObjectForRuleWithoutMediaEPNS_12CSSStyleRuleE(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSStyleRule"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = tail call i8* @_Znwm(i64 56) #19
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS7CSSRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 40, i1 false) #18
  %11 = bitcast i8* %7 to %"class.blink::protocol::CSS::CSSRule"*
  %12 = tail call %"class.blink::protocol::CSS::SelectorList"* @_ZN5blink19InspectorStyleSheet26BuildObjectForSelectorListEPNS_12CSSStyleRuleE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSStyleRule"* %1)
  %13 = ptrtoint %"class.blink::protocol::CSS::SelectorList"* %12 to i64
  %14 = getelementptr inbounds i8, i8* %7, i64 24
  %15 = bitcast i8* %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 4, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds i8, i8* %7, i64 32
  %19 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #18
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !3

34:                                               ; preds = %25
  tail call void @llvm.trap() #18
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  br label %37

37:                                               ; preds = %2, %20, %35
  %38 = ptrtoint %"class.WTF::StringImpl"* %17 to i64
  %39 = bitcast i8* %18 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0
  %41 = tail call %"class.blink::CSSStyleDeclaration"* @_ZNK5blink12CSSStyleRule5styleEv(%"class.blink::CSSStyleRule"* %1) #18
  %42 = bitcast %"class.blink::InspectorStyleSheet"* %0 to %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)***
  %43 = load %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)**, %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)*, %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)** %43, i64 8
  %45 = load %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)*, %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)** %44, align 8
  %46 = tail call %"class.blink::InspectorStyle"* %45(%"class.blink::InspectorStyleSheetBase"* %40, %"class.blink::CSSStyleDeclaration"* %41) #18
  %47 = tail call %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink14InspectorStyle19BuildObjectForStyleEv(%"class.blink::InspectorStyle"* %46) #18
  %48 = ptrtoint %"class.blink::protocol::CSS::CSSStyle"* %47 to i64
  %49 = getelementptr inbounds i8, i8* %7, i64 40
  %50 = bitcast i8* %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %52 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #18
  %53 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %53, label %54, label %58

54:                                               ; preds = %37
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %55, align 8
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %57 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %56, i64* %57, align 8
  br label %65

58:                                               ; preds = %37
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %59, align 8
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 1
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %64 = bitcast i8** %63 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %64, align 8
  br label %65

65:                                               ; preds = %58, %54
  %66 = phi i32 [ %61, %58 ], [ 0, %54 ]
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %66, i32* %67, align 8
  %68 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #18
  %69 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum9UserAgentE, i64 0, i64 0)) #20
  %70 = icmp ult i64 %69, 4294967296
  br i1 %70, label %72, label %71, !prof !2

71:                                               ; preds = %65
  tail call void @llvm.trap() #18
  unreachable

72:                                               ; preds = %65
  %73 = trunc i64 %69 to i32
  %74 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %75 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum9UserAgentE, i64 0, i64 0), i8** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %73, i32* %77, align 8
  %78 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #18
  br i1 %78, label %224, label %79

79:                                               ; preds = %72
  %80 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #18
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %83, label %87

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %84, align 8
  %85 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %86 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %85, i64* %86, align 8
  br label %94

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 1
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %93 = bitcast i8** %92 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %93, align 8
  br label %94

94:                                               ; preds = %87, %83
  %95 = phi i32 [ %90, %87 ], [ 0, %83 ]
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %95, i32* %96, align 8
  %97 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #18
  %98 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum8InjectedE, i64 0, i64 0)) #20
  %99 = icmp ult i64 %98, 4294967296
  br i1 %99, label %101, label %100, !prof !2

100:                                              ; preds = %94
  call void @llvm.trap() #18
  unreachable

101:                                              ; preds = %94
  %102 = trunc i64 %98 to i32
  %103 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %104 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum8InjectedE, i64 0, i64 0), i8** %105, align 8
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %102, i32* %106, align 8
  %107 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #18
  br i1 %107, label %224, label %108

108:                                              ; preds = %101
  %109 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %224, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %129

119:                                              ; preds = %112
  %120 = zext i32 %118 to i33
  %121 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %120, i33 1) #18
  %122 = extractvalue { i33, i1 } %121, 1
  %123 = extractvalue { i33, i1 } %121, 0
  %124 = icmp slt i33 %123, 0
  %125 = or i1 %122, %124
  br i1 %125, label %126, label %127, !prof !3

126:                                              ; preds = %119
  call void @llvm.trap() #18
  unreachable

127:                                              ; preds = %119
  %128 = trunc i33 %123 to i32
  store i32 %128, i32* %117, align 4
  br label %129

129:                                              ; preds = %112, %127
  %130 = phi i32 [ %128, %127 ], [ %118, %112 ]
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  %134 = load atomic i32, i32* %113 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %129
  %138 = add i32 %130, -1
  store i32 %138, i32* %117, align 4
  br label %139

139:                                              ; preds = %137, %129
  %140 = phi i32 [ %138, %137 ], [ %130, %129 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #18
  br i1 %133, label %224, label %144

143:                                              ; preds = %139
  br i1 %133, label %224, label %144

144:                                              ; preds = %142, %143
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %180, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %164

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = zext i32 %154 to i33
  %156 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %155, i33 1) #18
  %157 = extractvalue { i33, i1 } %156, 1
  %158 = extractvalue { i33, i1 } %156, 0
  %159 = icmp slt i33 %158, 0
  %160 = or i1 %157, %159
  br i1 %160, label %161, label %162, !prof !3

161:                                              ; preds = %152
  call void @llvm.trap() #18
  unreachable

162:                                              ; preds = %152
  %163 = trunc i33 %158 to i32
  store i32 %163, i32* %153, align 4
  br label %164

164:                                              ; preds = %147, %162
  %165 = load atomic i32, i32* %148 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %182

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = zext i32 %170 to i33
  %172 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %171, i33 1) #18
  %173 = extractvalue { i33, i1 } %172, 1
  %174 = extractvalue { i33, i1 } %172, 0
  %175 = icmp slt i33 %174, 0
  %176 = or i1 %173, %175
  br i1 %176, label %177, label %178, !prof !3

177:                                              ; preds = %168
  call void @llvm.trap() #18
  unreachable

178:                                              ; preds = %168
  %179 = trunc i33 %174 to i32
  store i32 %179, i32* %169, align 4
  br label %182

180:                                              ; preds = %144
  %181 = bitcast i8* %10 to i64*
  store i64 0, i64* %181, align 8
  store i8 1, i8* %9, align 8
  br label %224

182:                                              ; preds = %178, %164
  %183 = load atomic i32, i32* %148 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %198

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = zext i32 %188 to i33
  %190 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %189, i33 1) #18
  %191 = extractvalue { i33, i1 } %190, 1
  %192 = extractvalue { i33, i1 } %190, 0
  %193 = icmp slt i33 %192, 0
  %194 = or i1 %191, %193
  br i1 %194, label %195, label %196, !prof !3

195:                                              ; preds = %186
  call void @llvm.trap() #18
  unreachable

196:                                              ; preds = %186
  %197 = trunc i33 %192 to i32
  store i32 %197, i32* %187, align 4
  br label %198

198:                                              ; preds = %182, %196
  %199 = ptrtoint %"class.WTF::StringImpl"* %145 to i64
  %200 = bitcast i8* %10 to i64*
  store i64 %199, i64* %200, align 8
  store i8 1, i8* %9, align 8
  %201 = load atomic i32, i32* %148 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %198
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %198
  %209 = phi i32 [ %207, %206 ], [ %205, %198 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %213

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #18
  %212 = load i32, i32* %204, align 4
  br label %213

213:                                              ; preds = %208, %211
  %214 = phi i32 [ %209, %208 ], [ %212, %211 ]
  %215 = load atomic i32, i32* %148 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %220

218:                                              ; preds = %213
  %219 = add i32 %214, -1
  store i32 %219, i32* %204, align 4
  br label %220

220:                                              ; preds = %218, %213
  %221 = phi i32 [ %219, %218 ], [ %214, %213 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #18
  br label %224

224:                                              ; preds = %101, %108, %72, %223, %220, %180, %142, %143
  ret %"class.blink::protocol::CSS::CSSRule"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::CSS::RuleUsage"* @_ZN5blink19InspectorStyleSheet23BuildObjectForRuleUsageEPNS_7CSSRuleEb(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSRule"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::SourceRange", align 4
  %5 = tail call %"class.blink::CSSRuleSourceData"* @_ZN5blink19InspectorStyleSheet17SourceDataForRuleEPNS_7CSSRuleE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRule"* %1)
  %6 = icmp eq %"class.blink::CSSRuleSourceData"* %5, null
  br i1 %6, label %104, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::SourceRange"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #18
  %9 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %4, i64 0, i32 0
  store i32 -1431655766, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %4, i64 0, i32 1
  store i32 -1431655766, i32* %10, align 4
  %11 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %5, i64 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %5, i64 0, i32 2, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, 1
  call void @_ZN5blink11SourceRangeC1Ejj(%"class.blink::SourceRange"* nonnull %4, i32 %12, i32 %15) #18
  %16 = call i8* @_Znwm(i64 40) #19
  %17 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS9RuleUsageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 25, i1 false) #18
  %19 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %39, label %22

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %41

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i33
  %31 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #18
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !3

36:                                               ; preds = %27
  call void @llvm.trap() #18
  unreachable

37:                                               ; preds = %27
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %28, align 4
  br label %41

39:                                               ; preds = %7
  %40 = bitcast i8* %18 to %"class.WTF::String"*
  br label %58

41:                                               ; preds = %22, %37
  %42 = bitcast i8* %18 to %"class.WTF::String"*
  %43 = load atomic i32, i32* %23 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #18
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  call void @llvm.trap() #18
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %39, %56, %41
  %59 = phi %"class.WTF::String"* [ %42, %56 ], [ %42, %41 ], [ %40, %39 ]
  %60 = ptrtoint %"class.WTF::StringImpl"* %20 to i64
  %61 = bitcast %"class.WTF::String"* %59 to i64*
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %59, i64 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  store i64 %60, i64* %61, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #18
  br label %78

78:                                               ; preds = %58, %74, %77
  %79 = load i32, i32* %9, align 4
  %80 = uitofp i32 %79 to double
  %81 = getelementptr inbounds i8, i8* %16, i64 16
  %82 = bitcast i8* %81 to double*
  store double %80, double* %82, align 8
  %83 = load i32, i32* %10, align 4
  %84 = uitofp i32 %83 to double
  %85 = getelementptr inbounds i8, i8* %16, i64 24
  %86 = bitcast i8* %85 to double*
  store double %84, double* %86, align 8
  %87 = zext i1 %2 to i8
  %88 = getelementptr inbounds i8, i8* %16, i64 32
  store i8 %87, i8* %88, align 8
  br i1 %21, label %102, label %89

89:                                               ; preds = %78
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #18
  br label %102

102:                                              ; preds = %78, %98, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #18
  %103 = bitcast i8* %16 to %"class.blink::protocol::CSS::RuleUsage"*
  br label %104

104:                                              ; preds = %3, %102
  %105 = phi %"class.blink::protocol::CSS::RuleUsage"* [ %103, %102 ], [ null, %3 ]
  ret %"class.blink::protocol::CSS::RuleUsage"* %105
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.blink::protocol::CSS::CSSKeyframeRule"* @_ZN5blink19InspectorStyleSheet26BuildObjectForKeyframeRuleEPNS_15CSSKeyframeRuleE(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSKeyframeRule"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = tail call i8* @_Znwm(i64 24) #19
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS5ValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #18
  %10 = getelementptr inbounds %"class.blink::CSSKeyframeRule", %"class.blink::CSSKeyframeRule"* %1, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::StyleRuleKeyframe"*, %"class.blink::StyleRuleKeyframe"** %10, align 8
  %12 = tail call %"class.WTF::StringImpl"* @_ZNK5blink17StyleRuleKeyframe7KeyTextEv(%"class.blink::StyleRuleKeyframe"* %11) #18
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = bitcast i8* %9 to i64*
  store i64 0, i64* %15, align 8
  %16 = ptrtoint i8* %7 to i64
  br label %68

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %52

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #18
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !3

31:                                               ; preds = %22
  tail call void @llvm.trap() #18
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  %34 = bitcast i8* %9 to %"class.WTF::StringImpl"**
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %37 = bitcast i8* %9 to i64*
  store i64 %36, i64* %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %38, label %55, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #18
  br label %55

52:                                               ; preds = %17
  %53 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %54 = bitcast i8* %9 to i64*
  store i64 %53, i64* %54, align 8
  br label %55

55:                                               ; preds = %51, %48, %32, %52
  %56 = ptrtoint i8* %7 to i64
  %57 = load atomic i32, i32* %18 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #18
  br label %68

68:                                               ; preds = %14, %67, %64
  %69 = phi i64 [ %56, %67 ], [ %56, %64 ], [ %16, %14 ]
  %70 = getelementptr inbounds %"class.blink::CSSKeyframeRule", %"class.blink::CSSKeyframeRule"* %1, i64 0, i32 0
  %71 = tail call %"class.blink::CSSRuleSourceData"* @_ZN5blink19InspectorStyleSheet17SourceDataForRuleEPNS_7CSSRuleE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRule"* %70)
  %72 = icmp eq %"class.blink::CSSRuleSourceData"* %71, null
  br i1 %72, label %114, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0
  %75 = tail call %"class.WTF::Vector"* @_ZN5blink23InspectorStyleSheetBase14GetLineEndingsEv(%"class.blink::InspectorStyleSheetBase"* %74) #18
  %76 = icmp eq %"class.WTF::Vector"* %75, null
  br i1 %76, label %101, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %71, i64 0, i32 1, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = tail call i64 @_ZN3WTF12TextPosition24FromOffsetAndLineEndingsEjRKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(i32 %79, %"class.WTF::Vector"* nonnull dereferenceable(16) %75) #18
  %81 = trunc i64 %80 to i32
  %82 = lshr i64 %80, 32
  %83 = trunc i64 %82 to i32
  %84 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %71, i64 0, i32 1, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = tail call i64 @_ZN3WTF12TextPosition24FromOffsetAndLineEndingsEjRKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(i32 %85, %"class.WTF::Vector"* nonnull dereferenceable(16) %75) #18
  %87 = trunc i64 %86 to i32
  %88 = lshr i64 %86, 32
  %89 = trunc i64 %88 to i32
  %90 = tail call i8* @_Znwm(i64 24) #19
  %91 = bitcast i8* %90 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS11SourceRangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds i8, i8* %90, i64 8
  %93 = bitcast i8* %92 to i32*
  store i32 %81, i32* %93, align 8
  %94 = getelementptr inbounds i8, i8* %90, i64 12
  %95 = bitcast i8* %94 to i32*
  store i32 %83, i32* %95, align 4
  %96 = getelementptr inbounds i8, i8* %90, i64 16
  %97 = bitcast i8* %96 to i32*
  store i32 %87, i32* %97, align 8
  %98 = getelementptr inbounds i8, i8* %90, i64 20
  %99 = bitcast i8* %98 to i32*
  store i32 %89, i32* %99, align 4
  %100 = bitcast i8* %90 to %"class.blink::protocol::CSS::SourceRange"*
  br label %101

101:                                              ; preds = %73, %77
  %102 = phi %"class.blink::protocol::CSS::SourceRange"* [ %100, %77 ], [ null, %73 ]
  %103 = ptrtoint %"class.blink::protocol::CSS::SourceRange"* %102 to i64
  %104 = getelementptr inbounds i8, i8* %7, i64 16
  %105 = bitcast i8* %104 to %"class.blink::protocol::CSS::SourceRange"**
  %106 = load %"class.blink::protocol::CSS::SourceRange"*, %"class.blink::protocol::CSS::SourceRange"** %105, align 8
  %107 = bitcast i8* %104 to i64*
  store i64 %103, i64* %107, align 8
  %108 = icmp eq %"class.blink::protocol::CSS::SourceRange"* %106, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %101
  %110 = bitcast %"class.blink::protocol::CSS::SourceRange"* %106 to void (%"class.blink::protocol::CSS::SourceRange"*)***
  %111 = load void (%"class.blink::protocol::CSS::SourceRange"*)**, void (%"class.blink::protocol::CSS::SourceRange"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %111, i64 2
  %113 = load void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %112, align 8
  tail call void %113(%"class.blink::protocol::CSS::SourceRange"* nonnull %106) #18
  br label %114

114:                                              ; preds = %109, %101, %68
  %115 = tail call i8* @_Znwm(i64 48) #19
  %116 = bitcast i8* %115 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS15CSSKeyframeRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %117 = getelementptr inbounds i8, i8* %115, i64 8
  store i8 0, i8* %117, align 8
  %118 = getelementptr inbounds i8, i8* %115, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 32, i1 false) #18
  %119 = bitcast i8* %115 to %"class.blink::protocol::CSS::CSSKeyframeRule"*
  %120 = getelementptr inbounds i8, i8* %115, i64 32
  %121 = bitcast i8* %120 to i64*
  store i64 %69, i64* %121, align 8
  %122 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 4, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = getelementptr inbounds i8, i8* %115, i64 24
  %125 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %125, label %143, label %126

126:                                              ; preds = %114
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %143

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i33
  %135 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %134, i33 1) #18
  %136 = extractvalue { i33, i1 } %135, 1
  %137 = extractvalue { i33, i1 } %135, 0
  %138 = icmp slt i33 %137, 0
  %139 = or i1 %136, %138
  br i1 %139, label %140, label %141, !prof !3

140:                                              ; preds = %131
  tail call void @llvm.trap() #18
  unreachable

141:                                              ; preds = %131
  %142 = trunc i33 %137 to i32
  store i32 %142, i32* %132, align 4
  br label %143

143:                                              ; preds = %114, %126, %141
  %144 = ptrtoint %"class.WTF::StringImpl"* %123 to i64
  %145 = bitcast i8* %124 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0
  %147 = tail call %"class.blink::CSSStyleDeclaration"* @_ZNK5blink15CSSKeyframeRule5styleEv(%"class.blink::CSSKeyframeRule"* %1) #18
  %148 = bitcast %"class.blink::InspectorStyleSheet"* %0 to %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)***
  %149 = load %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)**, %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)*** %148, align 8
  %150 = getelementptr inbounds %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)*, %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)** %149, i64 8
  %151 = load %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)*, %"class.blink::InspectorStyle"* (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*)** %150, align 8
  %152 = tail call %"class.blink::InspectorStyle"* %151(%"class.blink::InspectorStyleSheetBase"* %146, %"class.blink::CSSStyleDeclaration"* %147) #18
  %153 = tail call %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink14InspectorStyle19BuildObjectForStyleEv(%"class.blink::InspectorStyle"* %152) #18
  %154 = ptrtoint %"class.blink::protocol::CSS::CSSStyle"* %153 to i64
  %155 = getelementptr inbounds i8, i8* %115, i64 40
  %156 = bitcast i8* %155 to i64*
  store i64 %154, i64* %156, align 8
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %158 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %158) #18
  %159 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %159, label %160, label %164

160:                                              ; preds = %143
  %161 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %161, align 8
  %162 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %163 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %162, i64* %163, align 8
  br label %171

164:                                              ; preds = %143
  %165 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %157, %"class.WTF::StringImpl"** %165, align 8
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 1
  %169 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %170 = bitcast i8** %169 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %168, %"class.WTF::StringImpl"** %170, align 8
  br label %171

171:                                              ; preds = %164, %160
  %172 = phi i32 [ %167, %164 ], [ 0, %160 ]
  %173 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %172, i32* %173, align 8
  %174 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %174) #18
  %175 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum9UserAgentE, i64 0, i64 0)) #20
  %176 = icmp ult i64 %175, 4294967296
  br i1 %176, label %178, label %177, !prof !2

177:                                              ; preds = %171
  tail call void @llvm.trap() #18
  unreachable

178:                                              ; preds = %171
  %179 = trunc i64 %175 to i32
  %180 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %181 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum9UserAgentE, i64 0, i64 0), i8** %182, align 8
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %179, i32* %183, align 8
  %184 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %158) #18
  br i1 %184, label %330, label %185

185:                                              ; preds = %178
  %186 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186) #18
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %188, label %189, label %193

189:                                              ; preds = %185
  %190 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %190, align 8
  %191 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %192 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %191, i64* %192, align 8
  br label %200

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %187, %"class.WTF::StringImpl"** %194, align 8
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 1
  %198 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %199 = bitcast i8** %198 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %197, %"class.WTF::StringImpl"** %199, align 8
  br label %200

200:                                              ; preds = %193, %189
  %201 = phi i32 [ %196, %193 ], [ 0, %189 ]
  %202 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %201, i32* %202, align 8
  %203 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %203) #18
  %204 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum8InjectedE, i64 0, i64 0)) #20
  %205 = icmp ult i64 %204, 4294967296
  br i1 %205, label %207, label %206, !prof !2

206:                                              ; preds = %200
  call void @llvm.trap() #18
  unreachable

207:                                              ; preds = %200
  %208 = trunc i64 %204 to i32
  %209 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %210 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %209, i64* %210, align 8
  %211 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum8InjectedE, i64 0, i64 0), i8** %211, align 8
  %212 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %208, i32* %212, align 8
  %213 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %203) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #18
  br i1 %213, label %330, label %214

214:                                              ; preds = %207
  %215 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %217, label %330, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  br i1 %222, label %225, label %235

225:                                              ; preds = %218
  %226 = zext i32 %224 to i33
  %227 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %226, i33 1) #18
  %228 = extractvalue { i33, i1 } %227, 1
  %229 = extractvalue { i33, i1 } %227, 0
  %230 = icmp slt i33 %229, 0
  %231 = or i1 %228, %230
  br i1 %231, label %232, label %233, !prof !3

232:                                              ; preds = %225
  call void @llvm.trap() #18
  unreachable

233:                                              ; preds = %225
  %234 = trunc i33 %229 to i32
  store i32 %234, i32* %223, align 4
  br label %235

235:                                              ; preds = %218, %233
  %236 = phi i32 [ %234, %233 ], [ %224, %218 ]
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 1
  %238 = load i32, i32* %237, align 4
  %239 = icmp ne i32 %238, 0
  %240 = load atomic i32, i32* %219 monotonic, align 4
  %241 = and i32 %240, 2
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %245

243:                                              ; preds = %235
  %244 = add i32 %236, -1
  store i32 %244, i32* %223, align 4
  br label %245

245:                                              ; preds = %243, %235
  %246 = phi i32 [ %244, %243 ], [ %236, %235 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #18
  br i1 %239, label %250, label %330

249:                                              ; preds = %245
  br i1 %239, label %250, label %330

250:                                              ; preds = %248, %249
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %251, null
  br i1 %252, label %286, label %253

253:                                              ; preds = %250
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = and i32 %255, 2
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %270

258:                                              ; preds = %253
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = zext i32 %260 to i33
  %262 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %261, i33 1) #18
  %263 = extractvalue { i33, i1 } %262, 1
  %264 = extractvalue { i33, i1 } %262, 0
  %265 = icmp slt i33 %264, 0
  %266 = or i1 %263, %265
  br i1 %266, label %267, label %268, !prof !3

267:                                              ; preds = %258
  call void @llvm.trap() #18
  unreachable

268:                                              ; preds = %258
  %269 = trunc i33 %264 to i32
  store i32 %269, i32* %259, align 4
  br label %270

270:                                              ; preds = %253, %268
  %271 = load atomic i32, i32* %254 monotonic, align 4
  %272 = and i32 %271, 2
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %288

274:                                              ; preds = %270
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  %277 = zext i32 %276 to i33
  %278 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %277, i33 1) #18
  %279 = extractvalue { i33, i1 } %278, 1
  %280 = extractvalue { i33, i1 } %278, 0
  %281 = icmp slt i33 %280, 0
  %282 = or i1 %279, %281
  br i1 %282, label %283, label %284, !prof !3

283:                                              ; preds = %274
  call void @llvm.trap() #18
  unreachable

284:                                              ; preds = %274
  %285 = trunc i33 %280 to i32
  store i32 %285, i32* %275, align 4
  br label %288

286:                                              ; preds = %250
  %287 = bitcast i8* %118 to i64*
  store i64 0, i64* %287, align 8
  store i8 1, i8* %117, align 8
  br label %330

288:                                              ; preds = %284, %270
  %289 = load atomic i32, i32* %254 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %304

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 0
  %294 = load i32, i32* %293, align 4
  %295 = zext i32 %294 to i33
  %296 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %295, i33 1) #18
  %297 = extractvalue { i33, i1 } %296, 1
  %298 = extractvalue { i33, i1 } %296, 0
  %299 = icmp slt i33 %298, 0
  %300 = or i1 %297, %299
  br i1 %300, label %301, label %302, !prof !3

301:                                              ; preds = %292
  call void @llvm.trap() #18
  unreachable

302:                                              ; preds = %292
  %303 = trunc i33 %298 to i32
  store i32 %303, i32* %293, align 4
  br label %304

304:                                              ; preds = %288, %302
  %305 = ptrtoint %"class.WTF::StringImpl"* %251 to i64
  %306 = bitcast i8* %118 to i64*
  store i64 %305, i64* %306, align 8
  store i8 1, i8* %117, align 8
  %307 = load atomic i32, i32* %254 monotonic, align 4
  %308 = and i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 0
  %311 = load i32, i32* %310, align 4
  br i1 %309, label %312, label %314

312:                                              ; preds = %304
  %313 = add i32 %311, -1
  store i32 %313, i32* %310, align 4
  br label %314

314:                                              ; preds = %312, %304
  %315 = phi i32 [ %313, %312 ], [ %311, %304 ]
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %319

317:                                              ; preds = %314
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %251) #18
  %318 = load i32, i32* %310, align 4
  br label %319

319:                                              ; preds = %314, %317
  %320 = phi i32 [ %315, %314 ], [ %318, %317 ]
  %321 = load atomic i32, i32* %254 monotonic, align 4
  %322 = and i32 %321, 2
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %326

324:                                              ; preds = %319
  %325 = add i32 %320, -1
  store i32 %325, i32* %310, align 4
  br label %326

326:                                              ; preds = %324, %319
  %327 = phi i32 [ %325, %324 ], [ %320, %319 ]
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %326
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %251) #18
  br label %330

330:                                              ; preds = %207, %178, %214, %249, %248, %286, %326, %329
  ret %"class.blink::protocol::CSS::CSSKeyframeRule"* %119
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19InspectorStyleSheet7GetTextEPN3WTF6StringE(%"class.blink::InspectorStyleSheet"* nocapture readonly, %"class.WTF::String"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %3, align 8
  %5 = icmp eq %"class.blink::HeapVector"* %4, null
  br i1 %5, label %46, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 7, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #18
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #18
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10, %6
  %28 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %29 = bitcast %"class.WTF::String"* %1 to i64*
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #18
  br label %46

46:                                               ; preds = %2, %45, %42, %27
  %47 = phi i1 [ false, %2 ], [ true, %27 ], [ true, %42 ], [ true, %45 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::CSS::SourceRange"* @_ZN5blink19InspectorStyleSheet21RuleHeaderSourceRangeEPNS_7CSSRuleE(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSRule"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %3, align 8
  %5 = icmp eq %"class.blink::HeapVector"* %4, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.blink::CSSRuleSourceData"* @_ZN5blink19InspectorStyleSheet17SourceDataForRuleEPNS_7CSSRuleE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRule"* %1)
  %8 = icmp eq %"class.blink::CSSRuleSourceData"* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0
  %11 = tail call %"class.WTF::Vector"* @_ZN5blink23InspectorStyleSheetBase14GetLineEndingsEv(%"class.blink::InspectorStyleSheetBase"* %10) #18
  %12 = icmp eq %"class.WTF::Vector"* %11, null
  br i1 %12, label %37, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %7, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = tail call i64 @_ZN3WTF12TextPosition24FromOffsetAndLineEndingsEjRKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(i32 %15, %"class.WTF::Vector"* nonnull dereferenceable(16) %11) #18
  %17 = trunc i64 %16 to i32
  %18 = lshr i64 %16, 32
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %7, i64 0, i32 1, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = tail call i64 @_ZN3WTF12TextPosition24FromOffsetAndLineEndingsEjRKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(i32 %21, %"class.WTF::Vector"* nonnull dereferenceable(16) %11) #18
  %23 = trunc i64 %22 to i32
  %24 = lshr i64 %22, 32
  %25 = trunc i64 %24 to i32
  %26 = tail call i8* @_Znwm(i64 24) #19
  %27 = bitcast i8* %26 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS11SourceRangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds i8, i8* %26, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 %17, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %26, i64 12
  %31 = bitcast i8* %30 to i32*
  store i32 %19, i32* %31, align 4
  %32 = getelementptr inbounds i8, i8* %26, i64 16
  %33 = bitcast i8* %32 to i32*
  store i32 %23, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %26, i64 20
  %35 = bitcast i8* %34 to i32*
  store i32 %25, i32* %35, align 4
  %36 = bitcast i8* %26 to %"class.blink::protocol::CSS::SourceRange"*
  br label %37

37:                                               ; preds = %13, %9, %2, %6
  %38 = phi %"class.blink::protocol::CSS::SourceRange"* [ null, %2 ], [ null, %6 ], [ %36, %13 ], [ null, %9 ]
  ret %"class.blink::protocol::CSS::SourceRange"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::CSS::SourceRange"* @_ZN5blink19InspectorStyleSheet29MediaQueryExpValueSourceRangeEPNS_7CSSRuleEjj(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSRule"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %6 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %5, align 8
  %7 = icmp eq %"class.blink::HeapVector"* %6, null
  br i1 %7, label %55, label %8

8:                                                ; preds = %4
  %9 = tail call %"class.blink::CSSRuleSourceData"* @_ZN5blink19InspectorStyleSheet17SourceDataForRuleEPNS_7CSSRuleE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRule"* %1)
  %10 = icmp eq %"class.blink::CSSRuleSourceData"* %9, null
  br i1 %10, label %55, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %9, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = or i32 %13, 1
  %15 = icmp eq i32 %14, 3
  br i1 %15, label %16, label %55

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %9, i64 0, i32 6, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp ugt i32 %18, %2
  br i1 %19, label %20, label %55

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %9, i64 0, i32 6
  %22 = tail call dereferenceable(16) %"class.WTF::Vector.21"* @_ZN3WTF6VectorINS0_IN5blink11SourceRangeELj0ENS_18PartitionAllocatorEEELj0ES3_E2atEj(%"class.WTF::Vector.37"* %21, i32 %2) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %22, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp ugt i32 %24, %3
  br i1 %25, label %26, label %55

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0
  %28 = tail call dereferenceable(8) %"class.blink::SourceRange"* @_ZNK3WTF6VectorIN5blink11SourceRangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.21"* %22, i32 %3) #18
  %29 = tail call %"class.WTF::Vector"* @_ZN5blink23InspectorStyleSheetBase14GetLineEndingsEv(%"class.blink::InspectorStyleSheetBase"* %27) #18
  %30 = icmp eq %"class.WTF::Vector"* %29, null
  br i1 %30, label %55, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %28, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = tail call i64 @_ZN3WTF12TextPosition24FromOffsetAndLineEndingsEjRKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(i32 %33, %"class.WTF::Vector"* nonnull dereferenceable(16) %29) #18
  %35 = trunc i64 %34 to i32
  %36 = lshr i64 %34, 32
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %28, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = tail call i64 @_ZN3WTF12TextPosition24FromOffsetAndLineEndingsEjRKNS_6VectorIjLj0ENS_18PartitionAllocatorEEE(i32 %39, %"class.WTF::Vector"* nonnull dereferenceable(16) %29) #18
  %41 = trunc i64 %40 to i32
  %42 = lshr i64 %40, 32
  %43 = trunc i64 %42 to i32
  %44 = tail call i8* @_Znwm(i64 24) #19
  %45 = bitcast i8* %44 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS11SourceRangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds i8, i8* %44, i64 8
  %47 = bitcast i8* %46 to i32*
  store i32 %35, i32* %47, align 8
  %48 = getelementptr inbounds i8, i8* %44, i64 12
  %49 = bitcast i8* %48 to i32*
  store i32 %37, i32* %49, align 4
  %50 = getelementptr inbounds i8, i8* %44, i64 16
  %51 = bitcast i8* %50 to i32*
  store i32 %41, i32* %51, align 8
  %52 = getelementptr inbounds i8, i8* %44, i64 20
  %53 = bitcast i8* %52 to i32*
  store i32 %43, i32* %53, align 4
  %54 = bitcast i8* %44 to %"class.blink::protocol::CSS::SourceRange"*
  br label %55

55:                                               ; preds = %31, %26, %4, %20, %11, %8, %16
  %56 = phi %"class.blink::protocol::CSS::SourceRange"* [ null, %4 ], [ null, %16 ], [ null, %8 ], [ null, %11 ], [ null, %20 ], [ %54, %31 ], [ null, %26 ]
  ret %"class.blink::protocol::CSS::SourceRange"* %56
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InspectorStyle"* @_ZN5blink19InspectorStyleSheet17GetInspectorStyleEPNS_19CSSStyleDeclarationE(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSStyleDeclaration"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::CSSStyleDeclaration"* %1, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = ptrtoint %"class.blink::CSSStyleDeclaration"* %1 to i64
  %6 = bitcast %"class.blink::CSSStyleDeclaration"* %1 to %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)***
  %7 = load %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)**, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)** %7, i64 9
  %9 = load %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)** %8, align 8
  %10 = tail call %"class.blink::CSSRule"* %9(%"class.blink::CSSStyleDeclaration"* nonnull %1) #18
  %11 = tail call %"class.blink::CSSRuleSourceData"* @_ZN5blink19InspectorStyleSheet17SourceDataForRuleEPNS_7CSSRuleE(%"class.blink::InspectorStyleSheet"* %0, %"class.blink::CSSRule"* %10)
  %12 = ptrtoint %"class.blink::CSSRuleSourceData"* %11 to i64
  %13 = ptrtoint %"class.blink::InspectorStyleSheet"* %0 to i64
  %14 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14InspectorStyleEEEPhm(i64 24) #18
  %15 = bitcast i8* %14 to %"class.blink::InspectorStyle"*
  %16 = bitcast i8* %14 to i64*
  store i64 %5, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %14, i64 8
  %18 = bitcast i8* %17 to i64*
  store i64 %12, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %14, i64 16
  %20 = bitcast i8* %19 to i64*
  store i64 %13, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 -4
  %22 = bitcast i8* %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = or i16 %23, 1
  store atomic i16 %24, i16* %22 release, align 2
  br label %25

25:                                               ; preds = %2, %4
  %26 = phi %"class.blink::InspectorStyle"* [ %15, %4 ], [ null, %2 ]
  ret %"class.blink::InspectorStyle"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink19InspectorStyleSheet9SourceURLEv(%"class.blink::InspectorStyleSheet"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 12
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %276

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #18
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #18
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %276

29:                                               ; preds = %1
  %30 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #18
  %31 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 4, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %38

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %35, align 8
  %36 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %37 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %36, i64* %37, align 8
  br label %45

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %44 = bitcast i8** %43 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %44, align 8
  br label %45

45:                                               ; preds = %38, %34
  %46 = phi i32 [ %41, %38 ], [ 0, %34 ]
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %46, i32* %47, align 8
  %48 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #18
  %49 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum7RegularE, i64 0, i64 0)) #20
  %50 = icmp ult i64 %49, 4294967296
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %45
  tail call void @llvm.trap() #18
  unreachable

52:                                               ; preds = %45
  %53 = trunc i64 %49 to i32
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %55 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum7RegularE, i64 0, i64 0), i8** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %53, i32* %57, align 8
  %58 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #18
  br i1 %58, label %120, label %59

59:                                               ; preds = %52
  %60 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0), i64 0) #18
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::String"* %4 to i64*
  %63 = load i64, i64* %62, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %61, align 8
  %64 = bitcast %"class.WTF::String"* %8 to i64*
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store i64 %63, i64* %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %67, label %69

67:                                               ; preds = %59
  %68 = inttoptr i64 %63 to %"class.WTF::StringImpl"*
  br label %100

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #18
  br label %82

82:                                               ; preds = %78, %81
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #18
  br label %98

98:                                               ; preds = %97, %94, %82
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  br label %100

100:                                              ; preds = %98, %67
  %101 = phi %"class.WTF::StringImpl"* [ %99, %98 ], [ %68, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #18
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %276, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %276

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i33
  %112 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %111, i33 1) #18
  %113 = extractvalue { i33, i1 } %112, 1
  %114 = extractvalue { i33, i1 } %112, 0
  %115 = icmp slt i33 %114, 0
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %118, !prof !3

117:                                              ; preds = %108
  call void @llvm.trap() #18
  unreachable

118:                                              ; preds = %108
  %119 = trunc i33 %114 to i32
  store i32 %119, i32* %109, align 4
  br label %276

120:                                              ; preds = %52
  %121 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #18
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %122, align 8
  %123 = bitcast %"class.blink::InspectorStyleSheet"* %0 to i1 (%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*)***
  %124 = load i1 (%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*)**, i1 (%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*)*** %123, align 8
  %125 = getelementptr inbounds i1 (%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*)** %124, i64 4
  %126 = load i1 (%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*)** %125, align 8
  %127 = call zeroext i1 %126(%"class.blink::InspectorStyleSheet"* %0, %"class.WTF::String"* nonnull %5) #18
  br i1 %127, label %128, label %197

128:                                              ; preds = %120
  %129 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i64 9) #18
  %130 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116FindMagicCommentERKN3WTF6StringES4_(%"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6)
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #18
  br label %147

147:                                              ; preds = %128, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #18
  %148 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %148, label %197, label %149

149:                                              ; preds = %147
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  br i1 %152, label %188, label %157

157:                                              ; preds = %149
  br i1 %156, label %158, label %170

158:                                              ; preds = %157
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = zext i32 %160 to i33
  %162 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %161, i33 1) #18
  %163 = extractvalue { i33, i1 } %162, 1
  %164 = extractvalue { i33, i1 } %162, 0
  %165 = icmp slt i33 %164, 0
  %166 = or i1 %163, %165
  br i1 %166, label %167, label %168, !prof !3

167:                                              ; preds = %158
  call void @llvm.trap() #18
  unreachable

168:                                              ; preds = %158
  %169 = trunc i33 %164 to i32
  store i32 %169, i32* %159, align 4
  br label %170

170:                                              ; preds = %168, %157
  %171 = ptrtoint %"class.WTF::StringImpl"* %130 to i64
  %172 = bitcast %"class.WTF::String"* %8 to i64*
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store i64 %171, i64* %172, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %174, label %258, label %175

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  br i1 %179, label %182, label %184

182:                                              ; preds = %175
  %183 = add i32 %181, -1
  store i32 %183, i32* %180, align 4
  br label %184

184:                                              ; preds = %182, %175
  %185 = phi i32 [ %183, %182 ], [ %181, %175 ]
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %258

187:                                              ; preds = %184
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %173) #18
  br label %258

188:                                              ; preds = %149
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %156, label %191, label %193

191:                                              ; preds = %188
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %188
  %194 = phi i32 [ %192, %191 ], [ %190, %188 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #18
  br label %197

197:                                              ; preds = %147, %196, %193, %120
  %198 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0), i64 0) #18
  %199 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %200 = bitcast %"class.WTF::String"* %7 to i64*
  %201 = load i64, i64* %200, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %199, align 8
  %202 = bitcast %"class.WTF::String"* %8 to i64*
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store i64 %201, i64* %202, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %205, label %207

205:                                              ; preds = %197
  %206 = inttoptr i64 %201 to %"class.WTF::StringImpl"*
  br label %238

207:                                              ; preds = %197
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #18
  br label %220

220:                                              ; preds = %216, %219
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #18
  br label %236

236:                                              ; preds = %235, %232, %220
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  br label %238

238:                                              ; preds = %236, %205
  %239 = phi %"class.WTF::StringImpl"* [ %237, %236 ], [ %206, %205 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #18
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %258, label %241

241:                                              ; preds = %238
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %258

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %248 = load i32, i32* %247, align 4
  %249 = zext i32 %248 to i33
  %250 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %249, i33 1) #18
  %251 = extractvalue { i33, i1 } %250, 1
  %252 = extractvalue { i33, i1 } %250, 0
  %253 = icmp slt i33 %252, 0
  %254 = or i1 %251, %253
  br i1 %254, label %255, label %256, !prof !3

255:                                              ; preds = %246
  call void @llvm.trap() #18
  unreachable

256:                                              ; preds = %246
  %257 = trunc i33 %252 to i32
  store i32 %257, i32* %247, align 4
  br label %258

258:                                              ; preds = %256, %241, %238, %187, %184, %170
  %259 = phi %"class.WTF::StringImpl"* [ %130, %170 ], [ %130, %184 ], [ %130, %187 ], [ null, %238 ], [ %239, %241 ], [ %239, %256 ]
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %275, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %260) #18
  br label %275

275:                                              ; preds = %258, %271, %274
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #18
  br label %276

276:                                              ; preds = %118, %103, %100, %27, %12, %275
  %277 = phi %"class.WTF::StringImpl"* [ %259, %275 ], [ %10, %12 ], [ %10, %27 ], [ null, %100 ], [ %101, %103 ], [ %101, %118 ]
  ret %"class.WTF::StringImpl"* %277
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116FindMagicCommentERKN3WTF6StringES4_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %2 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = bitcast %"class.WTF::StringView"* %3 to i8*
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %27 = bitcast i8** %26 to %"class.WTF::StringImpl"**
  %28 = bitcast %"class.WTF::StringView"* %3 to i64*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %30

30:                                               ; preds = %124, %22
  %31 = phi %"class.WTF::StringImpl"* [ %9, %22 ], [ %98, %124 ]
  %32 = phi %"class.WTF::StringImpl"* [ %17, %22 ], [ %125, %124 ]
  %33 = phi i32 [ %15, %22 ], [ %97, %124 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #18
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  store i8* null, i8** %26, align 8
  %36 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %36, i64* %28, align 8
  br label %41

37:                                               ; preds = %30
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %25, align 8
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %27, align 8
  br label %41

41:                                               ; preds = %35, %37
  %42 = phi i32 [ %39, %37 ], [ 0, %35 ]
  store i32 %42, i32* %29, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #18
  br label %48

45:                                               ; preds = %41
  %46 = call i32 @_ZN3WTF10StringImpl11ReverseFindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %31, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, i32 %33) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #18
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %48, label %71

48:                                               ; preds = %45, %44
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = ptrtoint %"class.WTF::StringImpl"* %51 to i64
  %53 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %53, label %496, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %496

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i33
  %63 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #18
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !3

68:                                               ; preds = %59
  call void @llvm.trap() #18
  unreachable

69:                                               ; preds = %59
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %60, align 4
  br label %496

71:                                               ; preds = %45
  %72 = icmp ult i32 %46, 4
  br i1 %72, label %73, label %96

73:                                               ; preds = %71
  %74 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = ptrtoint %"class.WTF::StringImpl"* %76 to i64
  %78 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %78, label %496, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %496

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #18
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !3

93:                                               ; preds = %84
  call void @llvm.trap() #18
  unreachable

94:                                               ; preds = %84
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %85, align 4
  br label %496

96:                                               ; preds = %71
  %97 = add i32 %46, -4
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %124, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = icmp ugt i32 %102, %97
  br i1 %103, label %104, label %124

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 1
  br i1 %108, label %116, label %110

110:                                              ; preds = %104
  %111 = bitcast %"class.WTF::StringImpl"* %109 to i8*
  %112 = zext i32 %97 to i64
  %113 = getelementptr inbounds i8, i8* %111, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i16
  br label %121

116:                                              ; preds = %104
  %117 = bitcast %"class.WTF::StringImpl"* %109 to i16*
  %118 = zext i32 %97 to i64
  %119 = getelementptr inbounds i16, i16* %117, i64 %118
  %120 = load i16, i16* %119, align 2
  br label %121

121:                                              ; preds = %110, %116
  %122 = phi i16 [ %115, %110 ], [ %120, %116 ]
  %123 = icmp eq i16 %122, 47
  br i1 %123, label %126, label %124

124:                                              ; preds = %248, %201, %153, %126, %96, %100, %121, %150, %269, %242, %195
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %30

126:                                              ; preds = %121
  %127 = add i32 %46, -3
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = icmp ugt i32 %129, %127
  br i1 %130, label %131, label %124

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 1
  br i1 %137, label %145, label %139

139:                                              ; preds = %131
  %140 = bitcast %"class.WTF::StringImpl"* %138 to i8*
  %141 = zext i32 %127 to i64
  %142 = getelementptr inbounds i8, i8* %140, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i16
  br label %150

145:                                              ; preds = %131
  %146 = bitcast %"class.WTF::StringImpl"* %138 to i16*
  %147 = zext i32 %127 to i64
  %148 = getelementptr inbounds i16, i16* %146, i64 %147
  %149 = load i16, i16* %148, align 2
  br label %150

150:                                              ; preds = %139, %145
  %151 = phi i16 [ %144, %139 ], [ %149, %145 ]
  %152 = icmp eq i16 %151, 42
  br i1 %152, label %153, label %124

153:                                              ; preds = %150
  %154 = add i32 %46, -2
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = icmp ugt i32 %156, %154
  br i1 %157, label %158, label %124

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 1
  br i1 %162, label %170, label %164

164:                                              ; preds = %158
  %165 = bitcast %"class.WTF::StringImpl"* %163 to i8*
  %166 = zext i32 %154 to i64
  %167 = getelementptr inbounds i8, i8* %165, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i16
  br label %175

170:                                              ; preds = %158
  %171 = bitcast %"class.WTF::StringImpl"* %163 to i16*
  %172 = zext i32 %154 to i64
  %173 = getelementptr inbounds i16, i16* %171, i64 %172
  %174 = load i16, i16* %173, align 2
  br label %175

175:                                              ; preds = %164, %170
  %176 = phi i16 [ %169, %164 ], [ %174, %170 ]
  %177 = icmp eq i16 %176, 35
  br i1 %177, label %201, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 1
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 1
  br i1 %182, label %190, label %184

184:                                              ; preds = %178
  %185 = bitcast %"class.WTF::StringImpl"* %183 to i8*
  %186 = zext i32 %154 to i64
  %187 = getelementptr inbounds i8, i8* %185, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i16
  br label %195

190:                                              ; preds = %178
  %191 = bitcast %"class.WTF::StringImpl"* %183 to i16*
  %192 = zext i32 %154 to i64
  %193 = getelementptr inbounds i16, i16* %191, i64 %192
  %194 = load i16, i16* %193, align 2
  br label %195

195:                                              ; preds = %184, %190
  %196 = phi i16 [ %189, %184 ], [ %194, %190 ]
  %197 = icmp eq i16 %196, 64
  br i1 %197, label %198, label %124

198:                                              ; preds = %195
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 1
  %200 = load i32, i32* %199, align 4
  br label %201

201:                                              ; preds = %198, %175
  %202 = phi i32 [ %200, %198 ], [ %156, %175 ]
  %203 = add i32 %46, -1
  %204 = icmp ugt i32 %202, %203
  br i1 %204, label %205, label %124

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 1
  br i1 %209, label %217, label %211

211:                                              ; preds = %205
  %212 = bitcast %"class.WTF::StringImpl"* %210 to i8*
  %213 = zext i32 %203 to i64
  %214 = getelementptr inbounds i8, i8* %212, i64 %213
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i16
  br label %222

217:                                              ; preds = %205
  %218 = bitcast %"class.WTF::StringImpl"* %210 to i16*
  %219 = zext i32 %203 to i64
  %220 = getelementptr inbounds i16, i16* %218, i64 %219
  %221 = load i16, i16* %220, align 2
  br label %222

222:                                              ; preds = %211, %217
  %223 = phi i16 [ %216, %211 ], [ %221, %217 ]
  %224 = icmp eq i16 %223, 32
  br i1 %224, label %245, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 1
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 1
  br i1 %229, label %237, label %231

231:                                              ; preds = %225
  %232 = bitcast %"class.WTF::StringImpl"* %230 to i8*
  %233 = zext i32 %203 to i64
  %234 = getelementptr inbounds i8, i8* %232, i64 %233
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i16
  br label %242

237:                                              ; preds = %225
  %238 = bitcast %"class.WTF::StringImpl"* %230 to i16*
  %239 = zext i32 %203 to i64
  %240 = getelementptr inbounds i16, i16* %238, i64 %239
  %241 = load i16, i16* %240, align 2
  br label %242

242:                                              ; preds = %231, %237
  %243 = phi i16 [ %236, %231 ], [ %241, %237 ]
  %244 = icmp eq i16 %243, 9
  br i1 %244, label %245, label %124

245:                                              ; preds = %242, %222
  %246 = add i32 %46, %23
  %247 = icmp ult i32 %246, %15
  br i1 %247, label %248, label %272

248:                                              ; preds = %245
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 1
  %250 = load i32, i32* %249, align 4
  %251 = icmp ugt i32 %250, %246
  br i1 %251, label %252, label %124

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = and i32 %254, 1
  %256 = icmp eq i32 %255, 0
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 1
  br i1 %256, label %264, label %258

258:                                              ; preds = %252
  %259 = bitcast %"class.WTF::StringImpl"* %257 to i8*
  %260 = zext i32 %246 to i64
  %261 = getelementptr inbounds i8, i8* %259, i64 %260
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i16
  br label %269

264:                                              ; preds = %252
  %265 = bitcast %"class.WTF::StringImpl"* %257 to i16*
  %266 = zext i32 %246 to i64
  %267 = getelementptr inbounds i16, i16* %265, i64 %266
  %268 = load i16, i16* %267, align 2
  br label %269

269:                                              ; preds = %258, %264
  %270 = phi i16 [ %263, %258 ], [ %268, %264 ]
  %271 = icmp eq i16 %270, 61
  br i1 %271, label %272, label %124

272:                                              ; preds = %245, %269
  %273 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %273) #18
  %274 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %275 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %274, i64* %275, align 8
  %276 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i64 0, i64 0), i8** %276, align 8
  %277 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 2, i32* %277, align 8
  %278 = add i32 %246, 1
  %279 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %98, %"class.WTF::StringView"* nonnull dereferenceable(24) %4, i32 %278) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %273) #18
  %280 = icmp eq i32 %279, -1
  br i1 %280, label %281, label %304

281:                                              ; preds = %272
  %282 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %283 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %282, i64 0, i32 0, i32 0
  %284 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %283, align 8
  %285 = ptrtoint %"class.WTF::StringImpl"* %284 to i64
  %286 = icmp eq %"class.WTF::StringImpl"* %284, null
  br i1 %286, label %496, label %287

287:                                              ; preds = %281
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %496

292:                                              ; preds = %287
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 0
  %294 = load i32, i32* %293, align 4
  %295 = zext i32 %294 to i33
  %296 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %295, i33 1) #18
  %297 = extractvalue { i33, i1 } %296, 1
  %298 = extractvalue { i33, i1 } %296, 0
  %299 = icmp slt i33 %298, 0
  %300 = or i1 %297, %299
  br i1 %300, label %301, label %302, !prof !3

301:                                              ; preds = %292
  call void @llvm.trap() #18
  unreachable

302:                                              ; preds = %292
  %303 = trunc i33 %298 to i32
  store i32 %303, i32* %293, align 4
  br label %496

304:                                              ; preds = %272
  %305 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #18
  %306 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %306, align 8
  %307 = sub i32 %279, %278
  %308 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %0, i32 %278, i32 %307) #18
  store %"class.WTF::StringImpl"* %308, %"class.WTF::StringImpl"** %306, align 8
  %309 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %309) #18
  %310 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %311 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.56, i64 0, i64 0), i8** %312, align 8
  %313 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 1, i32* %313, align 8
  %314 = icmp eq %"class.WTF::StringImpl"* %308, null
  br i1 %314, label %315, label %316

315:                                              ; preds = %304
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %309) #18
  br label %338

316:                                              ; preds = %304
  %317 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %308, %"class.WTF::StringView"* nonnull dereferenceable(24) %6, i32 0) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %309) #18
  %318 = icmp eq i32 %317, -1
  br i1 %318, label %338, label %319

319:                                              ; preds = %316
  %320 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %5, i32 0, i32 %317) #18
  %321 = ptrtoint %"class.WTF::StringImpl"* %320 to i64
  %322 = bitcast %"class.WTF::String"* %5 to i64*
  %323 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  store i64 %321, i64* %322, align 8
  %324 = icmp eq %"class.WTF::StringImpl"* %323, null
  br i1 %324, label %338, label %325

325:                                              ; preds = %319
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = load atomic i32, i32* %326 monotonic, align 4
  %328 = and i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 0
  %331 = load i32, i32* %330, align 4
  br i1 %329, label %332, label %334

332:                                              ; preds = %325
  %333 = add i32 %331, -1
  store i32 %333, i32* %330, align 4
  br label %334

334:                                              ; preds = %332, %325
  %335 = phi i32 [ %333, %332 ], [ %331, %325 ]
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %338

337:                                              ; preds = %334
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %323) #18
  br label %338

338:                                              ; preds = %319, %334, %337, %315, %316
  %339 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %5) #18
  %340 = ptrtoint %"class.WTF::StringImpl"* %339 to i64
  %341 = bitcast %"class.WTF::String"* %5 to i64*
  %342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  store i64 %340, i64* %341, align 8
  %343 = icmp eq %"class.WTF::StringImpl"* %342, null
  br i1 %343, label %357, label %344

344:                                              ; preds = %338
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load atomic i32, i32* %345 monotonic, align 4
  %347 = and i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 0
  %350 = load i32, i32* %349, align 4
  br i1 %348, label %351, label %353

351:                                              ; preds = %344
  %352 = add i32 %350, -1
  store i32 %352, i32* %349, align 4
  br label %353

353:                                              ; preds = %351, %344
  %354 = phi i32 [ %352, %351 ], [ %350, %344 ]
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %357

356:                                              ; preds = %353
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %342) #18
  br label %357

357:                                              ; preds = %356, %353, %338
  %358 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %358) #18
  %359 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %359, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0), i64 4) #18
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  %361 = icmp eq %"class.WTF::StringImpl"* %360, null
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 1
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 1
  %365 = bitcast %"class.WTF::StringImpl"* %364 to i8*
  %366 = bitcast %"class.WTF::StringImpl"* %364 to i16*
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %359, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 1
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 1
  %372 = bitcast %"class.WTF::StringImpl"* %370 to i8*
  %373 = ptrtoint %"class.WTF::StringImpl"* %370 to i64
  %374 = bitcast %"class.WTF::StringImpl"* %370 to i16*
  %375 = ptrtoint %"class.WTF::StringImpl"* %360 to i64
  br label %376

376:                                              ; preds = %459, %357
  %377 = phi i64 [ %460, %459 ], [ 0, %357 ]
  br i1 %361, label %380, label %378

378:                                              ; preds = %376
  %379 = load i32, i32* %362, align 4
  br label %380

380:                                              ; preds = %376, %378
  %381 = phi i32 [ %379, %378 ], [ 0, %376 ]
  %382 = zext i32 %381 to i64
  %383 = icmp ult i64 %377, %382
  br i1 %383, label %384, label %461

384:                                              ; preds = %380
  br i1 %361, label %400, label %385

385:                                              ; preds = %384
  %386 = load i32, i32* %362, align 4
  %387 = zext i32 %386 to i64
  %388 = icmp ult i64 %377, %387
  br i1 %388, label %389, label %400

389:                                              ; preds = %385
  %390 = load atomic i32, i32* %363 monotonic, align 4
  %391 = and i32 %390, 1
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %397, label %393

393:                                              ; preds = %389
  %394 = getelementptr inbounds i8, i8* %365, i64 %377
  %395 = load i8, i8* %394, align 1
  %396 = zext i8 %395 to i16
  br label %400

397:                                              ; preds = %389
  %398 = getelementptr inbounds i16, i16* %366, i64 %377
  %399 = load i16, i16* %398, align 2
  br label %400

400:                                              ; preds = %384, %385, %393, %397
  %401 = phi i16 [ 0, %385 ], [ 0, %384 ], [ %396, %393 ], [ %399, %397 ]
  br i1 %368, label %459, label %402

402:                                              ; preds = %400
  %403 = load atomic i32, i32* %369 monotonic, align 4
  %404 = and i32 %403, 1
  %405 = icmp eq i32 %404, 0
  %406 = load i32, i32* %371, align 4
  br i1 %405, label %419, label %407

407:                                              ; preds = %402
  %408 = icmp ult i16 %401, 256
  %409 = icmp ne i32 %406, 0
  %410 = and i1 %408, %409
  br i1 %410, label %411, label %459

411:                                              ; preds = %407
  %412 = and i16 %401, 255
  %413 = zext i16 %412 to i32
  %414 = zext i32 %406 to i64
  %415 = call i8* @memchr(i8* %372, i32 %413, i64 %414) #20
  %416 = icmp eq i8* %415, null
  %417 = ptrtoint i8* %415 to i64
  %418 = sub i64 %417, %373
  br i1 %416, label %459, label %431

419:                                              ; preds = %402
  %420 = icmp eq i32 %406, 0
  br i1 %420, label %459, label %421

421:                                              ; preds = %419
  %422 = zext i32 %406 to i64
  br label %423

423:                                              ; preds = %421, %428
  %424 = phi i64 [ %429, %428 ], [ 0, %421 ]
  %425 = getelementptr inbounds i16, i16* %374, i64 %424
  %426 = load i16, i16* %425, align 2
  %427 = icmp eq i16 %426, %401
  br i1 %427, label %431, label %428

428:                                              ; preds = %423
  %429 = add nuw nsw i64 %424, 1
  %430 = icmp eq i64 %429, %422
  br i1 %430, label %459, label %423

431:                                              ; preds = %423, %411
  %432 = phi i64 [ %418, %411 ], [ %424, %423 ]
  %433 = trunc i64 %432 to i32
  %434 = icmp eq i32 %433, -1
  br i1 %434, label %459, label %435

435:                                              ; preds = %431
  %436 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %437 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %436, i64 0, i32 0, i32 0
  %438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %437, align 8
  %439 = ptrtoint %"class.WTF::StringImpl"* %438 to i64
  %440 = icmp eq %"class.WTF::StringImpl"* %438, null
  br i1 %440, label %462, label %441

441:                                              ; preds = %435
  %442 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %443 = load atomic i32, i32* %442 monotonic, align 4
  %444 = and i32 %443, 2
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %446, label %462

446:                                              ; preds = %441
  %447 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 0
  %448 = load i32, i32* %447, align 4
  %449 = zext i32 %448 to i33
  %450 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %449, i33 1) #18
  %451 = extractvalue { i33, i1 } %450, 1
  %452 = extractvalue { i33, i1 } %450, 0
  %453 = icmp slt i33 %452, 0
  %454 = or i1 %451, %453
  br i1 %454, label %455, label %456, !prof !3

455:                                              ; preds = %446
  call void @llvm.trap() #18
  unreachable

456:                                              ; preds = %446
  %457 = trunc i33 %452 to i32
  store i32 %457, i32* %447, align 4
  %458 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %359, align 8
  br label %462

459:                                              ; preds = %428, %419, %411, %407, %400, %431
  %460 = add nuw nsw i64 %377, 1
  br label %376

461:                                              ; preds = %380
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %306, align 8
  br label %462

462:                                              ; preds = %456, %441, %435, %461
  %463 = phi %"class.WTF::StringImpl"* [ %367, %461 ], [ %367, %435 ], [ %367, %441 ], [ %458, %456 ]
  %464 = phi i64 [ %375, %461 ], [ %439, %435 ], [ %439, %441 ], [ %439, %456 ]
  %465 = icmp eq %"class.WTF::StringImpl"* %463, null
  br i1 %465, label %479, label %466

466:                                              ; preds = %462
  %467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %463, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %468 = load atomic i32, i32* %467 monotonic, align 4
  %469 = and i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %463, i64 0, i32 0
  %472 = load i32, i32* %471, align 4
  br i1 %470, label %473, label %475

473:                                              ; preds = %466
  %474 = add i32 %472, -1
  store i32 %474, i32* %471, align 4
  br label %475

475:                                              ; preds = %473, %466
  %476 = phi i32 [ %474, %473 ], [ %472, %466 ]
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %478, label %479

478:                                              ; preds = %475
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %463) #18
  br label %479

479:                                              ; preds = %462, %475, %478
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %358) #18
  %480 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  %481 = icmp eq %"class.WTF::StringImpl"* %480, null
  br i1 %481, label %495, label %482

482:                                              ; preds = %479
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %480, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %484 = load atomic i32, i32* %483 monotonic, align 4
  %485 = and i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %480, i64 0, i32 0
  %488 = load i32, i32* %487, align 4
  br i1 %486, label %489, label %491

489:                                              ; preds = %482
  %490 = add i32 %488, -1
  store i32 %490, i32* %487, align 4
  br label %491

491:                                              ; preds = %489, %482
  %492 = phi i32 [ %490, %489 ], [ %488, %482 ]
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %494, label %495

494:                                              ; preds = %491
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %480) #18
  br label %495

495:                                              ; preds = %479, %491, %494
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #18
  br label %496

496:                                              ; preds = %302, %287, %281, %94, %79, %73, %69, %54, %48, %495
  %497 = phi i64 [ %464, %495 ], [ %52, %48 ], [ %52, %54 ], [ %52, %69 ], [ %77, %73 ], [ %77, %79 ], [ %77, %94 ], [ %285, %281 ], [ %285, %287 ], [ %285, %302 ]
  %498 = inttoptr i64 %497 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %498
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink19InspectorStyleSheet12SourceMapURLEv(%"class.blink::InspectorStyleSheet"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %13 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %12, i64* %13, align 8
  br label %21

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %20, align 8
  br label %21

21:                                               ; preds = %14, %10
  %22 = phi i32 [ %17, %14 ], [ 0, %10 ]
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %22, i32* %23, align 8
  %24 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #18
  %25 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum7RegularE, i64 0, i64 0)) #20
  %26 = icmp ult i64 %25, 4294967296
  br i1 %26, label %28, label %27, !prof !2

27:                                               ; preds = %21
  tail call void @llvm.trap() #18
  unreachable

28:                                               ; preds = %21
  %29 = trunc i64 %25 to i32
  %30 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %31 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum7RegularE, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %29, i32* %33, align 8
  %34 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #18
  br i1 %34, label %35, label %124

35:                                               ; preds = %28
  %36 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #18
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %37, align 8
  %38 = bitcast %"class.blink::InspectorStyleSheet"* %0 to i1 (%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*)***
  %39 = load i1 (%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*)**, i1 (%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*)** %39, i64 4
  %41 = load i1 (%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*)** %40, align 8
  %42 = call zeroext i1 %41(%"class.blink::InspectorStyleSheet"* %0, %"class.WTF::String"* nonnull %4) #18
  br i1 %42, label %43, label %81

43:                                               ; preds = %35
  %44 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0), i64 16) #18
  %45 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116FindMagicCommentERKN3WTF6StringES4_(%"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5)
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #18
  br label %62

62:                                               ; preds = %43, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #18
  %63 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %106

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #18
  br label %81

81:                                               ; preds = %62, %80, %77, %35
  %82 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %83 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %83, i64 0, i32 1, i32 0, i32 0
  %85 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %85, i64 0, i32 14, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %106, label %89

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #18
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !3

103:                                              ; preds = %94
  call void @llvm.trap() #18
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %106

106:                                              ; preds = %104, %89, %81, %64
  %107 = phi %"class.WTF::StringImpl"* [ %45, %64 ], [ null, %81 ], [ %87, %89 ], [ %87, %104 ]
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #18
  br label %123

123:                                              ; preds = %106, %119, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #18
  br label %124

124:                                              ; preds = %28, %123
  %125 = phi %"class.WTF::StringImpl"* [ %107, %123 ], [ null, %28 ]
  ret %"class.WTF::StringImpl"* %125
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Document"* @_ZN5blink19InspectorStyleSheet11GetDocumentEv(%"class.blink::InspectorStyleSheet"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %2, align 8
  %4 = tail call %"class.blink::Document"* @_ZN5blink13CSSStyleSheet19SingleOwnerDocumentEPKS0_(%"class.blink::CSSStyleSheet"* %3) #18
  ret %"class.blink::Document"* %4
}

declare %"class.blink::Document"* @_ZN5blink13CSSStyleSheet19SingleOwnerDocumentEPKS0_(%"class.blink::CSSStyleSheet"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19InspectorStyleSheet33RemapSourceDataToCSSOMIfNecessaryEv(%"class.blink::InspectorStyleSheet"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapVector.1132", align 8
  %3 = bitcast %"class.blink::HeapVector.1132"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #18
  %4 = getelementptr inbounds %"class.blink::HeapVector.1132", %"class.blink::HeapVector.1132"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 16, i1 false) #18
  %5 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %5, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_116CollectFlatRulesIPNS_13CSSStyleSheetEEEvT_PNS_10HeapVectorINS_6MemberINS_7CSSRuleEEELj0EEE(%"class.blink::CSSStyleSheet"* %6, %"class.blink::HeapVector.1132"* nonnull %2)
  %7 = getelementptr inbounds %"class.blink::HeapVector.1132", %"class.blink::HeapVector.1132"* %2, i64 0, i32 0
  %8 = load i32, i32* %4, align 4
  %9 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8, i32 0
  %10 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %8, %11
  br i1 %12, label %13, label %15

13:                                               ; preds = %1
  %14 = icmp eq i32 %8, 0
  br i1 %14, label %30, label %19

15:                                               ; preds = %1
  call void @_ZN5blink19InspectorStyleSheet20MapSourceDataToCSSOMEv(%"class.blink::InspectorStyleSheet"* %0)
  br label %30

16:                                               ; preds = %19
  %17 = load i32, i32* %10, align 4
  %18 = icmp ult i32 %28, %17
  br i1 %18, label %19, label %30

19:                                               ; preds = %13, %16
  %20 = phi i32 [ %28, %16 ], [ 0, %13 ]
  %21 = call dereferenceable(8) %"class.blink::Member.1117"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1135"* %9, i32 %20)
  %22 = call dereferenceable(8) %"class.blink::Member.1117"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1135"* nonnull %7, i32 %20)
  %23 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %22, i64 0, i32 0, i32 0
  %26 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %25, align 8
  %27 = icmp eq %"class.blink::CSSRule"* %24, %26
  %28 = add nuw i32 %20, 1
  br i1 %27, label %16, label %29

29:                                               ; preds = %19
  call void @_ZN5blink19InspectorStyleSheet20MapSourceDataToCSSOMEv(%"class.blink::InspectorStyleSheet"* %0)
  br label %30

30:                                               ; preds = %16, %13, %29, %15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116CanonicalCSSTextEPNS_7CSSRuleE(%"class.blink::CSSRule"*) unnamed_addr #0 {
  %2 = alloca i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, align 8
  %3 = alloca %"class.WTF::Vector.152", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringBuilder", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = icmp eq %"class.blink::CSSRule"* %0, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::CSSRule"* %0 to i32 (%"class.blink::CSSRule"*)***
  %14 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %14, i64 9
  %16 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %15, align 8
  %17 = tail call i32 %16(%"class.blink::CSSRule"* nonnull %0) #18
  %18 = icmp eq i32 %17, 1
  %19 = bitcast %"class.blink::CSSRule"* %0 to %"class.blink::CSSStyleRule"*
  br i1 %18, label %26, label %20

20:                                               ; preds = %12, %1
  %21 = bitcast %"class.blink::CSSRule"* %0 to %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)***
  %22 = load %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)** %22, i64 10
  %24 = load %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)** %23, align 8
  %25 = tail call %"class.WTF::StringImpl"* %24(%"class.blink::CSSRule"* %0) #18
  br label %327

26:                                               ; preds = %12
  %27 = bitcast %"class.WTF::Vector.152"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #18
  %28 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %3, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %3, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false) #18
  %31 = tail call %"class.blink::CSSStyleDeclaration"* @_ZNK5blink12CSSStyleRule5styleEv(%"class.blink::CSSStyleRule"* nonnull %19) #18
  %32 = bitcast %"class.blink::CSSStyleDeclaration"* %31 to i32 (%"class.blink::CSSStyleDeclaration"*)***
  %33 = load i32 (%"class.blink::CSSStyleDeclaration"*)**, i32 (%"class.blink::CSSStyleDeclaration"*)*** %32, align 8
  %34 = getelementptr inbounds i32 (%"class.blink::CSSStyleDeclaration"*)*, i32 (%"class.blink::CSSStyleDeclaration"*)** %33, i64 12
  %35 = load i32 (%"class.blink::CSSStyleDeclaration"*)*, i32 (%"class.blink::CSSStyleDeclaration"*)** %34, align 8
  %36 = call i32 %35(%"class.blink::CSSStyleDeclaration"* %31) #18
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %26
  %39 = bitcast %"class.WTF::String"* %4 to i8*
  %40 = bitcast %"class.blink::CSSStyleDeclaration"* %31 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)***
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  br label %108

42:                                               ; preds = %141, %26
  %43 = load %"class.WTF::String"*, %"class.WTF::String"** %28, align 8
  %44 = load i32, i32* %30, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 %45
  %47 = bitcast i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47)
  store i1 (%"class.WTF::String"*, %"class.WTF::String"*)* @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  call void @_ZNSt3__16__sortIRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_(%"class.WTF::String"* %43, %"class.WTF::String"* %46, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** nonnull dereferenceable(8) %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  %48 = bitcast %"class.WTF::StringBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %48) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 48, i1 false)
  %49 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 1
  %51 = bitcast %union.anon.340* %50 to i8*
  store i8 0, i8* %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 2
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 3
  store i8 1, i8* %53, align 4
  %54 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 4
  store i8 0, i8* %54, align 1
  %55 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #18
  %56 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSStyleRule12selectorTextEv(%"class.blink::CSSStyleRule"* nonnull %19) #18
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %58, label %63

58:                                               ; preds = %42
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %59, align 8
  %60 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %61 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 0, i32* %62, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  br label %83

63:                                               ; preds = %42
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 1
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %69 = bitcast i8** %68 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %66, i32* %70, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %63
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %63
  %80 = phi i32 [ %78, %77 ], [ %76, %63 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #18
  br label %83

83:                                               ; preds = %58, %79, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #18
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %5, i8 zeroext 123) #18
  %84 = load i32, i32* %30, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %148, label %86

86:                                               ; preds = %83
  %87 = bitcast %"class.WTF::String"* %7 to i8*
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %89 = bitcast %"class.WTF::StringView"* %8 to i8*
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %92 = bitcast i8** %91 to %"class.WTF::StringImpl"**
  %93 = bitcast %"class.WTF::StringView"* %8 to i64*
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %95 = bitcast %"class.WTF::StringView"* %9 to i8*
  %96 = bitcast %"class.blink::CSSStyleDeclaration"* %31 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)***
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %99 = bitcast i8** %98 to %"class.WTF::StringImpl"**
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %101 = bitcast %"class.WTF::StringView"* %9 to i64*
  %102 = bitcast %"class.WTF::StringView"* %10 to i8*
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %105 = bitcast i8** %104 to %"class.WTF::StringImpl"**
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  %107 = bitcast %"class.WTF::StringView"* %10 to i64*
  br label %202

108:                                              ; preds = %38, %141
  %109 = phi i32 [ 0, %38 ], [ %142, %141 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #18
  %110 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)*** %40, align 8
  %111 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)** %110, i64 13
  %112 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, i32)** %111, align 8
  %113 = call %"class.WTF::StringImpl"* %112(%"class.blink::CSSStyleDeclaration"* %31, i32 %109) #18
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %41, align 8
  %114 = load i32, i32* %30, align 4
  %115 = load i32, i32* %29, align 8
  %116 = icmp eq i32 %114, %115
  br i1 %116, label %125, label %117, !prof !3

117:                                              ; preds = %108
  %118 = ptrtoint %"class.WTF::StringImpl"* %113 to i64
  %119 = load %"class.WTF::String"*, %"class.WTF::String"** %28, align 8
  %120 = zext i32 %114 to i64
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 %120
  %122 = bitcast %"class.WTF::String"* %121 to i64*
  store i64 %118, i64* %122, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %41, align 8
  %123 = load i32, i32* %30, align 4
  %124 = add i32 %123, 1
  store i32 %124, i32* %30, align 4
  br label %141

125:                                              ; preds = %108
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.152"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #18
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #18
  br label %141

141:                                              ; preds = %117, %125, %137, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #18
  %142 = add nuw i32 %109, 1
  %143 = load i32 (%"class.blink::CSSStyleDeclaration"*)**, i32 (%"class.blink::CSSStyleDeclaration"*)*** %32, align 8
  %144 = getelementptr inbounds i32 (%"class.blink::CSSStyleDeclaration"*)*, i32 (%"class.blink::CSSStyleDeclaration"*)** %143, i64 12
  %145 = load i32 (%"class.blink::CSSStyleDeclaration"*)*, i32 (%"class.blink::CSSStyleDeclaration"*)** %144, align 8
  %146 = call i32 %145(%"class.blink::CSSStyleDeclaration"* %31) #18
  %147 = icmp ult i32 %142, %146
  br i1 %147, label %108, label %42

148:                                              ; preds = %323, %83
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %5, i8 zeroext 125) #18
  %149 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %5) #18
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %5) #18
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #18
  br label %165

165:                                              ; preds = %148, %161, %164
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %48) #18
  %166 = load %"class.WTF::String"*, %"class.WTF::String"** %28, align 8
  %167 = icmp eq %"class.WTF::String"* %166, null
  br i1 %167, label %201, label %168, !prof !2

168:                                              ; preds = %165
  %169 = bitcast %"class.WTF::String"* %166 to i8*
  %170 = load i32, i32* %30, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %199, label %172, !prof !3

172:                                              ; preds = %168
  %173 = zext i32 %170 to i64
  %174 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %166, i64 %173
  br label %175

175:                                              ; preds = %193, %172
  %176 = phi %"class.WTF::String"* [ %194, %193 ], [ %166, %172 ]
  %177 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #18
  br label %193

193:                                              ; preds = %192, %189, %175
  %194 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 1
  %195 = icmp eq %"class.WTF::String"* %194, %174
  br i1 %195, label %196, label %175

196:                                              ; preds = %193
  store i32 0, i32* %30, align 4
  %197 = bitcast %"class.WTF::Vector.152"* %3 to i8**
  %198 = load i8*, i8** %197, align 8
  br label %199

199:                                              ; preds = %196, %168
  %200 = phi i8* [ %198, %196 ], [ %169, %168 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %200) #18
  store %"class.WTF::String"* null, %"class.WTF::String"** %28, align 8
  br label %201

201:                                              ; preds = %165, %199
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #18
  br label %327

202:                                              ; preds = %86, %323
  %203 = phi i32 [ 0, %86 ], [ %324, %323 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #18
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %88, align 8
  %204 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.152"* nonnull %3, i32 %203)
  %205 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %204, i64 0, i32 0, i32 0
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %88, align 8
  %207 = icmp eq %"class.WTF::StringImpl"* %206, null
  br i1 %207, label %225, label %208

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = and i32 %210, 2
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %225

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = zext i32 %215 to i33
  %217 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %216, i33 1) #18
  %218 = extractvalue { i33, i1 } %217, 1
  %219 = extractvalue { i33, i1 } %217, 0
  %220 = icmp slt i33 %219, 0
  %221 = or i1 %218, %220
  br i1 %221, label %222, label %223, !prof !3

222:                                              ; preds = %213
  call void @llvm.trap() #18
  unreachable

223:                                              ; preds = %213
  %224 = trunc i33 %219 to i32
  store i32 %224, i32* %214, align 4
  br label %225

225:                                              ; preds = %202, %208, %223
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %5, i8 zeroext 32) #18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #18
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %227, label %228, label %230

228:                                              ; preds = %225
  store i8* null, i8** %91, align 8
  %229 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %229, i64* %93, align 8
  br label %234

230:                                              ; preds = %225
  store %"class.WTF::StringImpl"* %226, %"class.WTF::StringImpl"** %90, align 8
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 1
  store %"class.WTF::StringImpl"* %233, %"class.WTF::StringImpl"** %92, align 8
  br label %234

234:                                              ; preds = %228, %230
  %235 = phi i32 [ %232, %230 ], [ 0, %228 ]
  store i32 %235, i32* %94, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #18
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %5, i8 zeroext 58) #18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #18
  %236 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %96, align 8
  %237 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %236, i64 14
  %238 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %237, align 8
  %239 = call %"class.WTF::StringImpl"* %238(%"class.blink::CSSStyleDeclaration"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %7) #18
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %241, label %243

241:                                              ; preds = %234
  store i8* null, i8** %98, align 8
  %242 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %242, i64* %101, align 8
  store i32 0, i32* %100, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  br label %259

243:                                              ; preds = %234
  store %"class.WTF::StringImpl"* %239, %"class.WTF::StringImpl"** %97, align 8
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 1
  %245 = load i32, i32* %244, align 4
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 1
  store %"class.WTF::StringImpl"* %246, %"class.WTF::StringImpl"** %99, align 8
  store i32 %245, i32* %100, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = and i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  br i1 %250, label %253, label %255

253:                                              ; preds = %243
  %254 = add i32 %252, -1
  store i32 %254, i32* %251, align 4
  br label %255

255:                                              ; preds = %253, %243
  %256 = phi i32 [ %254, %253 ], [ %252, %243 ]
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %259

258:                                              ; preds = %255
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #18
  br label %259

259:                                              ; preds = %241, %255, %258
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #18
  %260 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %96, align 8
  %261 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %260, i64 15
  %262 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %261, align 8
  %263 = call %"class.WTF::StringImpl"* %262(%"class.blink::CSSStyleDeclaration"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %7) #18
  %264 = icmp eq %"class.WTF::StringImpl"* %263, null
  br i1 %264, label %307, label %265

265:                                              ; preds = %259
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 1
  %267 = load i32, i32* %266, align 4
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load atomic i32, i32* %269 monotonic, align 4
  %271 = and i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 0
  %274 = load i32, i32* %273, align 4
  br i1 %272, label %275, label %277

275:                                              ; preds = %265
  %276 = add i32 %274, -1
  store i32 %276, i32* %273, align 4
  br label %277

277:                                              ; preds = %275, %265
  %278 = phi i32 [ %276, %275 ], [ %274, %265 ]
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %281

280:                                              ; preds = %277
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %263) #18
  br i1 %268, label %307, label %282

281:                                              ; preds = %277
  br i1 %268, label %307, label %282

282:                                              ; preds = %280, %281
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %5, i8 zeroext 32) #18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #18
  %283 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %96, align 8
  %284 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %283, i64 15
  %285 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %284, align 8
  %286 = call %"class.WTF::StringImpl"* %285(%"class.blink::CSSStyleDeclaration"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %7) #18
  %287 = icmp eq %"class.WTF::StringImpl"* %286, null
  br i1 %287, label %288, label %290

288:                                              ; preds = %282
  store i8* null, i8** %104, align 8
  %289 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %289, i64* %107, align 8
  store i32 0, i32* %106, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  br label %306

290:                                              ; preds = %282
  store %"class.WTF::StringImpl"* %286, %"class.WTF::StringImpl"** %103, align 8
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 1
  %292 = load i32, i32* %291, align 4
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 1
  store %"class.WTF::StringImpl"* %293, %"class.WTF::StringImpl"** %105, align 8
  store i32 %292, i32* %106, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  br i1 %297, label %300, label %302

300:                                              ; preds = %290
  %301 = add i32 %299, -1
  store i32 %301, i32* %298, align 4
  br label %302

302:                                              ; preds = %300, %290
  %303 = phi i32 [ %301, %300 ], [ %299, %290 ]
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %306

305:                                              ; preds = %302
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %286) #18
  br label %306

306:                                              ; preds = %288, %302, %305
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #18
  br label %307

307:                                              ; preds = %259, %280, %281, %306
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %5, i8 zeroext 59) #18
  %308 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %309 = icmp eq %"class.WTF::StringImpl"* %308, null
  br i1 %309, label %323, label %310

310:                                              ; preds = %307
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load atomic i32, i32* %311 monotonic, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 0
  %316 = load i32, i32* %315, align 4
  br i1 %314, label %317, label %319

317:                                              ; preds = %310
  %318 = add i32 %316, -1
  store i32 %318, i32* %315, align 4
  br label %319

319:                                              ; preds = %317, %310
  %320 = phi i32 [ %318, %317 ], [ %316, %310 ]
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %323

322:                                              ; preds = %319
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %308) #18
  br label %323

323:                                              ; preds = %307, %319, %322
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #18
  %324 = add nuw i32 %203, 1
  %325 = load i32, i32* %30, align 4
  %326 = icmp ult i32 %324, %325
  br i1 %326, label %202, label %148

327:                                              ; preds = %201, %20
  %328 = phi %"class.WTF::StringImpl"* [ %149, %201 ], [ %25, %20 ]
  ret %"class.WTF::StringImpl"* %328
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19InspectorStyleSheet20MapSourceDataToCSSOMEv(%"class.blink::InspectorStyleSheet"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.WTF::Vector.152", align 8
  %11 = alloca %"class.WTF::Vector.152", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 10
  %15 = getelementptr inbounds %"class.WTF::HashMap.1143", %"class.WTF::HashMap.1143"* %14, i64 0, i32 0, i32 0
  %16 = load %"struct.WTF::KeyValuePair.1147"*, %"struct.WTF::KeyValuePair.1147"** %15, align 8
  %17 = icmp eq %"struct.WTF::KeyValuePair.1147"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 10, i32 0, i32 1
  %20 = bitcast %"struct.WTF::KeyValuePair.1147"* %16 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #18
  %21 = bitcast %"class.WTF::HashMap.1143"* %14 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store i32 0, i32* %19, align 8
  %22 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 10, i32 0, i32 2
  store i32 0, i32* %22, align 4
  br label %23

23:                                               ; preds = %1, %18
  %24 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 11
  %25 = getelementptr inbounds %"class.WTF::HashMap.1143", %"class.WTF::HashMap.1143"* %24, i64 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair.1147"*, %"struct.WTF::KeyValuePair.1147"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair.1147"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 11, i32 0, i32 1
  %30 = bitcast %"struct.WTF::KeyValuePair.1147"* %26 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %30) #18
  %31 = bitcast %"class.WTF::HashMap.1143"* %24 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store i32 0, i32* %29, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 11, i32 0, i32 2
  store i32 0, i32* %32, align 4
  br label %33

33:                                               ; preds = %23, %28
  %34 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8
  %35 = getelementptr inbounds %"class.blink::HeapVector.1132", %"class.blink::HeapVector.1132"* %34, i64 0, i32 0
  %36 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  %43 = bitcast %"class.blink::HeapVector.1132"* %34 to i8**
  br i1 %42, label %48, label %44

44:                                               ; preds = %39
  %45 = load i8*, i8** %43, align 8
  %46 = zext i32 %41 to i64
  %47 = shl nuw nsw i64 %46, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %45, i64 %47) #18
  store i32 0, i32* %40, align 4
  br label %48

48:                                               ; preds = %44, %39
  %49 = load i8*, i8** %43, align 8
  %50 = bitcast %"class.blink::HeapVector.1132"* %34 to i64*
  store atomic i64 0, i64* %50 monotonic, align 8
  store i32 0, i32* %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %49) #18
  br label %51

51:                                               ; preds = %33, %48
  %52 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %52, align 8
  tail call fastcc void @_ZN5blink12_GLOBAL__N_116CollectFlatRulesIPNS_13CSSStyleSheetEEEvT_PNS_10HeapVectorINS_6MemberINS_7CSSRuleEEELj0EEE(%"class.blink::CSSStyleSheet"* %53, %"class.blink::HeapVector.1132"* %34)
  %54 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %55 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %54, align 8
  %56 = icmp eq %"class.blink::HeapVector"* %55, null
  br i1 %56, label %553, label %57

57:                                               ; preds = %51
  %58 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %52, align 8
  %59 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %58, i64 0, i32 14, i32 0, i32 0
  %60 = load %"class.blink::Document"*, %"class.blink::Document"** %59, align 8
  %61 = icmp eq %"class.blink::Document"* %60, null
  br i1 %61, label %99, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp ult i32 %66, %64
  %68 = select i1 %67, i32 %66, i32 %64
  %69 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #18
  store i32 0, i32* %9, align 4
  %70 = icmp eq i32 %68, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"class.WTF::HashMap.1143", %"class.WTF::HashMap.1143"* %14, i64 0, i32 0
  %73 = getelementptr inbounds %"class.WTF::HashMap.1143", %"class.WTF::HashMap.1143"* %24, i64 0, i32 0
  br label %75

74:                                               ; preds = %95, %62
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #18
  br label %553

75:                                               ; preds = %71, %95
  %76 = call { %"struct.WTF::KeyValuePair.1147"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERjSH_EENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable.1144"* %72, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %9) #18
  %77 = extractvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %76, 1
  %78 = and i8 %77, 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %75
  %81 = extractvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %76, 0
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %81, i64 0, i32 1
  %83 = load i32, i32* %9, align 4
  store i32 %83, i32* %82, align 4
  br label %84

84:                                               ; preds = %75, %80
  %85 = call { %"struct.WTF::KeyValuePair.1147"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERjSH_EENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable.1144"* %73, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %9) #18
  %86 = extractvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %85, 1
  %87 = and i8 %86, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %84
  %90 = load i32, i32* %9, align 4
  br label %95

91:                                               ; preds = %84
  %92 = extractvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %85, 0
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %92, i64 0, i32 1
  %94 = load i32, i32* %9, align 4
  store i32 %94, i32* %93, align 4
  br label %95

95:                                               ; preds = %89, %91
  %96 = phi i32 [ %90, %89 ], [ %94, %91 ]
  %97 = add i32 %96, 1
  store i32 %97, i32* %9, align 4
  %98 = icmp ult i32 %97, %68
  br i1 %98, label %75, label %74

99:                                               ; preds = %57
  %100 = bitcast %"class.WTF::Vector.152"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #18
  %101 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %10, i64 0, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %10, i64 0, i32 0, i32 0, i32 1
  %103 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %10, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 0, i64 16, i1 false) #18
  %104 = bitcast %"class.WTF::Vector.152"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #18
  %105 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %11, i64 0, i32 0, i32 0, i32 0
  %106 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %11, i64 0, i32 0, i32 0, i32 1
  %107 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %11, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 0, i64 16, i1 false) #18
  %108 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %99
  %112 = bitcast %"class.WTF::String"* %12 to i8*
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  br label %122

114:                                              ; preds = %155, %99
  %115 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %159, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 9, i32 0
  %120 = bitcast %"class.WTF::String"* %13 to i8*
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  br label %516

122:                                              ; preds = %111, %155
  %123 = phi i32 [ 0, %111 ], [ %156, %155 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #18
  %124 = call dereferenceable(8) %"class.blink::Member.1117"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1135"* %35, i32 %123)
  %125 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %124, i64 0, i32 0, i32 0
  %126 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %125, align 8
  %127 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116CanonicalCSSTextEPNS_7CSSRuleE(%"class.blink::CSSRule"* %126)
  store %"class.WTF::StringImpl"* %127, %"class.WTF::StringImpl"** %113, align 8
  %128 = load i32, i32* %103, align 4
  %129 = load i32, i32* %102, align 8
  %130 = icmp eq i32 %128, %129
  br i1 %130, label %139, label %131, !prof !3

131:                                              ; preds = %122
  %132 = ptrtoint %"class.WTF::StringImpl"* %127 to i64
  %133 = load %"class.WTF::String"*, %"class.WTF::String"** %101, align 8
  %134 = zext i32 %128 to i64
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %133, i64 %134
  %136 = bitcast %"class.WTF::String"* %135 to i64*
  store i64 %132, i64* %136, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %113, align 8
  %137 = load i32, i32* %103, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %103, align 4
  br label %155

139:                                              ; preds = %122
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.152"* nonnull %10, %"class.WTF::String"* nonnull dereferenceable(8) %12) #18
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #18
  br label %155

155:                                              ; preds = %131, %139, %151, %154
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #18
  %156 = add nuw i32 %123, 1
  %157 = load i32, i32* %108, align 4
  %158 = icmp ult i32 %156, %157
  br i1 %158, label %122, label %114

159:                                              ; preds = %549, %114
  %160 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %160) #18
  store i32 0, i32* %2, align 4
  %161 = load i32, i32* %103, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %265, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.WTF::HashMap.1143", %"class.WTF::HashMap.1143"* %14, i64 0, i32 0
  %165 = getelementptr inbounds %"class.WTF::HashMap.1143", %"class.WTF::HashMap.1143"* %24, i64 0, i32 0
  %166 = load i32, i32* %107, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %213, label %168

168:                                              ; preds = %163, %201
  %169 = phi i32 [ %203, %201 ], [ 0, %163 ]
  %170 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.152"* nonnull %10, i32 %169) #18
  %171 = load i32, i32* %2, align 4
  %172 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.152"* nonnull %11, i32 %171) #18
  %173 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %170, i64 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %175 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %172, i64 0, i32 0, i32 0
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %177 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %174, %"class.WTF::StringImpl"* %176) #18
  br i1 %177, label %181, label %178

178:                                              ; preds = %168
  %179 = load i32, i32* %103, align 4
  %180 = load i32, i32* %2, align 4
  br label %209

181:                                              ; preds = %168
  %182 = call { %"struct.WTF::KeyValuePair.1147"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERjSH_EENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable.1144"* %164, i32* nonnull dereferenceable(4) %2, i32* nonnull dereferenceable(4) %2) #18
  %183 = extractvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %182, 1
  %184 = and i8 %183, 1
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %190

186:                                              ; preds = %181
  %187 = extractvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %182, 0
  %188 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %187, i64 0, i32 1
  %189 = load i32, i32* %2, align 4
  store i32 %189, i32* %188, align 4
  br label %190

190:                                              ; preds = %186, %181
  %191 = call { %"struct.WTF::KeyValuePair.1147"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERjSH_EENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable.1144"* %165, i32* nonnull dereferenceable(4) %2, i32* nonnull dereferenceable(4) %2) #18
  %192 = extractvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %191, 1
  %193 = and i8 %192, 1
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %197, label %195

195:                                              ; preds = %190
  %196 = load i32, i32* %2, align 4
  br label %201

197:                                              ; preds = %190
  %198 = extractvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %191, 0
  %199 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %198, i64 0, i32 1
  %200 = load i32, i32* %2, align 4
  store i32 %200, i32* %199, align 4
  br label %201

201:                                              ; preds = %197, %195
  %202 = phi i32 [ %196, %195 ], [ %200, %197 ]
  %203 = add i32 %202, 1
  store i32 %203, i32* %2, align 4
  %204 = load i32, i32* %103, align 4
  %205 = icmp ult i32 %203, %204
  %206 = load i32, i32* %107, align 4
  %207 = icmp ult i32 %203, %206
  %208 = and i1 %205, %207
  br i1 %208, label %168, label %209

209:                                              ; preds = %201, %178
  %210 = phi i32 [ %180, %178 ], [ %203, %201 ]
  %211 = phi i32 [ %179, %178 ], [ %204, %201 ]
  %212 = icmp eq i32 %211, %210
  br i1 %212, label %265, label %213

213:                                              ; preds = %163, %209
  %214 = phi i32 [ %211, %209 ], [ %161, %163 ]
  %215 = phi i32 [ %210, %209 ], [ 0, %163 ]
  %216 = bitcast i32* %3 to i8*
  %217 = bitcast i32* %4 to i8*
  br label %218

218:                                              ; preds = %259, %213
  %219 = phi i32 [ %215, %213 ], [ %262, %259 ]
  %220 = phi i32 [ %214, %213 ], [ %261, %259 ]
  %221 = phi i32 [ 0, %213 ], [ %227, %259 ]
  %222 = phi i32 [ 0, %213 ], [ %260, %259 ]
  %223 = load i32, i32* %107, align 4
  %224 = sub i32 %223, %219
  %225 = icmp ult i32 %222, %224
  br i1 %225, label %226, label %265

226:                                              ; preds = %218
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %216) #18
  %227 = xor i32 %222, -1
  %228 = add i32 %220, %227
  store i32 %228, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %217) #18
  %229 = add i32 %223, %227
  store i32 %229, i32* %4, align 4
  %230 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.152"* nonnull %10, i32 %228) #18
  %231 = load i32, i32* %4, align 4
  %232 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.152"* nonnull %11, i32 %231) #18
  %233 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %230, i64 0, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %232, i64 0, i32 0, i32 0
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  %237 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %234, %"class.WTF::StringImpl"* %236) #18
  br i1 %237, label %241, label %238

238:                                              ; preds = %226
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %217) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %216) #18
  %239 = load i32, i32* %103, align 4
  %240 = load i32, i32* %2, align 4
  br label %265

241:                                              ; preds = %226
  %242 = call { %"struct.WTF::KeyValuePair.1147"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERjSH_EENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable.1144"* %164, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4) #18
  %243 = extractvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %242, 1
  %244 = and i8 %243, 1
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %246, label %250

246:                                              ; preds = %241
  %247 = extractvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %242, 0
  %248 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %247, i64 0, i32 1
  %249 = load i32, i32* %4, align 4
  store i32 %249, i32* %248, align 4
  br label %250

250:                                              ; preds = %246, %241
  %251 = call { %"struct.WTF::KeyValuePair.1147"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERjSH_EENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable.1144"* %165, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %3) #18
  %252 = extractvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %251, 1
  %253 = and i8 %252, 1
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %255, label %259

255:                                              ; preds = %250
  %256 = extractvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %251, 0
  %257 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %256, i64 0, i32 1
  %258 = load i32, i32* %3, align 4
  store i32 %258, i32* %257, align 4
  br label %259

259:                                              ; preds = %255, %250
  %260 = add nuw i32 %222, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %217) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %216) #18
  %261 = load i32, i32* %103, align 4
  %262 = load i32, i32* %2, align 4
  %263 = sub i32 %261, %262
  %264 = icmp ult i32 %260, %263
  br i1 %264, label %218, label %265

265:                                              ; preds = %259, %218, %238, %209, %159
  %266 = phi i32 [ %240, %238 ], [ %210, %209 ], [ 0, %159 ], [ %262, %259 ], [ %219, %218 ]
  %267 = phi i32 [ %239, %238 ], [ %210, %209 ], [ 0, %159 ], [ %261, %259 ], [ %220, %218 ]
  %268 = phi i32 [ %221, %238 ], [ 0, %209 ], [ 0, %159 ], [ %227, %259 ], [ %221, %218 ]
  %269 = sub i32 %267, %266
  %270 = add i32 %269, %268
  %271 = load i32, i32* %107, align 4
  %272 = sub i32 %271, %266
  %273 = add i32 %272, %268
  %274 = icmp eq i32 %270, 0
  %275 = icmp eq i32 %273, 0
  %276 = or i1 %274, %275
  br i1 %276, label %443, label %277

277:                                              ; preds = %265
  %278 = zext i32 %270 to i64
  %279 = shl nuw nsw i64 %278, 3
  %280 = call i8* @_Znam(i64 %279) #19
  %281 = bitcast i8* %280 to i32**
  %282 = call i8* @_Znam(i64 %279) #19
  %283 = bitcast i8* %282 to i32**
  %284 = zext i32 %273 to i64
  %285 = shl nuw nsw i64 %284, 2
  br label %286

286:                                              ; preds = %286, %277
  %287 = phi i64 [ 0, %277 ], [ %294, %286 ]
  %288 = call i8* @_Znam(i64 %285) #19
  %289 = getelementptr inbounds i32*, i32** %281, i64 %287
  %290 = bitcast i32** %289 to i8**
  store i8* %288, i8** %290, align 8
  %291 = call i8* @_Znam(i64 %285) #19
  %292 = getelementptr inbounds i32*, i32** %283, i64 %287
  %293 = bitcast i32** %292 to i8**
  store i8* %291, i8** %293, align 8
  %294 = add nuw nsw i64 %287, 1
  %295 = icmp eq i64 %294, %278
  br i1 %295, label %296, label %286

296:                                              ; preds = %286, %317
  %297 = phi i64 [ %318, %317 ], [ 0, %286 ]
  %298 = icmp ne i64 %297, 0
  %299 = trunc i64 %297 to i32
  %300 = add nuw nsw i64 %297, 4294967295
  %301 = and i64 %300, 4294967295
  %302 = getelementptr inbounds i32*, i32** %281, i64 %301
  %303 = getelementptr inbounds i32*, i32** %281, i64 %297
  %304 = getelementptr inbounds i32*, i32** %283, i64 %297
  br label %320

305:                                              ; preds = %317
  %306 = add i32 %270, -1
  %307 = add i32 %273, -1
  %308 = or i32 %307, %306
  %309 = icmp sgt i32 %308, -1
  br i1 %309, label %310, label %425

310:                                              ; preds = %305
  %311 = bitcast i32* %5 to i8*
  %312 = bitcast i32* %6 to i8*
  %313 = getelementptr inbounds %"class.WTF::HashMap.1143", %"class.WTF::HashMap.1143"* %14, i64 0, i32 0
  %314 = bitcast i32* %7 to i8*
  %315 = bitcast i32* %8 to i8*
  %316 = getelementptr inbounds %"class.WTF::HashMap.1143", %"class.WTF::HashMap.1143"* %24, i64 0, i32 0
  br label %380

317:                                              ; preds = %371
  %318 = add nuw nsw i64 %297, 1
  %319 = icmp eq i64 %318, %278
  br i1 %319, label %305, label %296

320:                                              ; preds = %371, %296
  %321 = phi i64 [ 0, %296 ], [ %378, %371 ]
  br i1 %298, label %322, label %329

322:                                              ; preds = %320
  %323 = load i32*, i32** %302, align 8
  %324 = getelementptr inbounds i32, i32* %323, i64 %321
  %325 = load i32, i32* %324, align 4
  %326 = icmp sgt i32 %325, 0
  %327 = select i1 %326, i32 %325, i32 0
  %328 = zext i1 %326 to i32
  br label %329

329:                                              ; preds = %322, %320
  %330 = phi i32 [ 0, %320 ], [ %327, %322 ]
  %331 = phi i32 [ 0, %320 ], [ %328, %322 ]
  %332 = icmp ne i64 %321, 0
  br i1 %332, label %333, label %342

333:                                              ; preds = %329
  %334 = load i32*, i32** %303, align 8
  %335 = add nuw nsw i64 %321, 4294967295
  %336 = and i64 %335, 4294967295
  %337 = getelementptr inbounds i32, i32* %334, i64 %336
  %338 = load i32, i32* %337, align 4
  %339 = icmp sgt i32 %338, %330
  %340 = select i1 %339, i32 %338, i32 %330
  %341 = select i1 %339, i32 2, i32 %331
  br label %342

342:                                              ; preds = %333, %329
  %343 = phi i32 [ %340, %333 ], [ %330, %329 ]
  %344 = phi i32 [ %341, %333 ], [ %331, %329 ]
  %345 = trunc i64 %321 to i32
  %346 = load i32, i32* %2, align 4
  %347 = add i32 %346, %299
  %348 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.152"* nonnull %10, i32 %347) #18
  %349 = load i32, i32* %2, align 4
  %350 = add i32 %349, %345
  %351 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.152"* nonnull %11, i32 %350) #18
  %352 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %348, i64 0, i32 0, i32 0
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %352, align 8
  %354 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %351, i64 0, i32 0, i32 0
  %355 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %354, align 8
  %356 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %353, %"class.WTF::StringImpl"* %355) #18
  br i1 %356, label %357, label %371

357:                                              ; preds = %342
  %358 = and i1 %298, %332
  br i1 %358, label %359, label %366

359:                                              ; preds = %357
  %360 = load i32*, i32** %302, align 8
  %361 = add nuw nsw i64 %321, 4294967295
  %362 = and i64 %361, 4294967295
  %363 = getelementptr inbounds i32, i32* %360, i64 %362
  %364 = load i32, i32* %363, align 4
  %365 = add nsw i32 %364, 1
  br label %366

366:                                              ; preds = %359, %357
  %367 = phi i32 [ %365, %359 ], [ 1, %357 ]
  %368 = icmp sgt i32 %367, %343
  %369 = select i1 %368, i32 %367, i32 %343
  %370 = select i1 %368, i32 3, i32 %344
  br label %371

371:                                              ; preds = %366, %342
  %372 = phi i32 [ %369, %366 ], [ %343, %342 ]
  %373 = phi i32 [ %370, %366 ], [ %344, %342 ]
  %374 = load i32*, i32** %303, align 8
  %375 = getelementptr inbounds i32, i32* %374, i64 %321
  store i32 %372, i32* %375, align 4
  %376 = load i32*, i32** %304, align 8
  %377 = getelementptr inbounds i32, i32* %376, i64 %321
  store i32 %373, i32* %377, align 4
  %378 = add nuw nsw i64 %321, 1
  %379 = icmp eq i64 %378, %284
  br i1 %379, label %317, label %320

380:                                              ; preds = %420, %310
  %381 = phi i32 [ %307, %310 ], [ %422, %420 ]
  %382 = phi i32 [ %306, %310 ], [ %421, %420 ]
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds i32*, i32** %283, i64 %383
  %385 = load i32*, i32** %384, align 8
  %386 = sext i32 %381 to i64
  %387 = getelementptr inbounds i32, i32* %385, i64 %386
  %388 = load i32, i32* %387, align 4
  switch i32 %388, label %420 [
    i32 0, label %425
    i32 1, label %389
    i32 2, label %391
    i32 3, label %393
  ]

389:                                              ; preds = %380
  %390 = add nsw i32 %382, -1
  br label %420

391:                                              ; preds = %380
  %392 = add nsw i32 %381, -1
  br label %420

393:                                              ; preds = %380
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %311) #18
  %394 = load i32, i32* %2, align 4
  %395 = add i32 %394, %382
  store i32 %395, i32* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %312) #18
  %396 = add i32 %394, %381
  store i32 %396, i32* %6, align 4
  %397 = call { %"struct.WTF::KeyValuePair.1147"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EEjjEENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable.1144"* %313, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %6) #18
  %398 = extractvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %397, 1
  %399 = and i8 %398, 1
  %400 = icmp eq i8 %399, 0
  br i1 %400, label %401, label %405

401:                                              ; preds = %393
  %402 = extractvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %397, 0
  %403 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %402, i64 0, i32 1
  %404 = load i32, i32* %6, align 4
  store i32 %404, i32* %403, align 4
  br label %405

405:                                              ; preds = %401, %393
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %312) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %311) #18
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %314) #18
  %406 = load i32, i32* %2, align 4
  %407 = add i32 %406, %381
  store i32 %407, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %315) #18
  %408 = add i32 %406, %382
  store i32 %408, i32* %8, align 4
  %409 = call { %"struct.WTF::KeyValuePair.1147"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EEjjEENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable.1144"* %316, i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %8) #18
  %410 = extractvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %409, 1
  %411 = and i8 %410, 1
  %412 = icmp eq i8 %411, 0
  br i1 %412, label %413, label %417

413:                                              ; preds = %405
  %414 = extractvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %409, 0
  %415 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %414, i64 0, i32 1
  %416 = load i32, i32* %8, align 4
  store i32 %416, i32* %415, align 4
  br label %417

417:                                              ; preds = %413, %405
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %315) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %314) #18
  %418 = add nsw i32 %382, -1
  %419 = add nsw i32 %381, -1
  br label %420

420:                                              ; preds = %417, %391, %389, %380
  %421 = phi i32 [ %418, %417 ], [ %382, %391 ], [ %390, %389 ], [ %382, %380 ]
  %422 = phi i32 [ %419, %417 ], [ %392, %391 ], [ %381, %389 ], [ %381, %380 ]
  %423 = or i32 %422, %421
  %424 = icmp sgt i32 %423, -1
  br i1 %424, label %380, label %425

425:                                              ; preds = %420, %380, %305
  br label %426

426:                                              ; preds = %425, %439
  %427 = phi i64 [ %440, %439 ], [ 0, %425 ]
  %428 = getelementptr inbounds i32*, i32** %281, i64 %427
  %429 = load i32*, i32** %428, align 8
  %430 = icmp eq i32* %429, null
  br i1 %430, label %433, label %431

431:                                              ; preds = %426
  %432 = bitcast i32* %429 to i8*
  call void @_ZdaPv(i8* %432) #19
  br label %433

433:                                              ; preds = %431, %426
  %434 = getelementptr inbounds i32*, i32** %283, i64 %427
  %435 = load i32*, i32** %434, align 8
  %436 = icmp eq i32* %435, null
  br i1 %436, label %439, label %437

437:                                              ; preds = %433
  %438 = bitcast i32* %435 to i8*
  call void @_ZdaPv(i8* %438) #19
  br label %439

439:                                              ; preds = %437, %433
  %440 = add nuw nsw i64 %427, 1
  %441 = icmp eq i64 %440, %278
  br i1 %441, label %442, label %426

442:                                              ; preds = %439
  call void @_ZdaPv(i8* nonnull %280) #19
  call void @_ZdaPv(i8* nonnull %282) #19
  br label %443

443:                                              ; preds = %265, %442
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %160) #18
  %444 = load %"class.WTF::String"*, %"class.WTF::String"** %105, align 8
  %445 = icmp eq %"class.WTF::String"* %444, null
  br i1 %445, label %479, label %446, !prof !2

446:                                              ; preds = %443
  %447 = bitcast %"class.WTF::String"* %444 to i8*
  %448 = load i32, i32* %107, align 4
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %477, label %450, !prof !3

450:                                              ; preds = %446
  %451 = zext i32 %448 to i64
  %452 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %444, i64 %451
  br label %453

453:                                              ; preds = %471, %450
  %454 = phi %"class.WTF::String"* [ %472, %471 ], [ %444, %450 ]
  %455 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %454, i64 0, i32 0, i32 0
  %456 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %455, align 8
  %457 = icmp eq %"class.WTF::StringImpl"* %456, null
  br i1 %457, label %471, label %458

458:                                              ; preds = %453
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %460 = load atomic i32, i32* %459 monotonic, align 4
  %461 = and i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 0
  %464 = load i32, i32* %463, align 4
  br i1 %462, label %465, label %467

465:                                              ; preds = %458
  %466 = add i32 %464, -1
  store i32 %466, i32* %463, align 4
  br label %467

467:                                              ; preds = %465, %458
  %468 = phi i32 [ %466, %465 ], [ %464, %458 ]
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %471

470:                                              ; preds = %467
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %456) #18
  br label %471

471:                                              ; preds = %470, %467, %453
  %472 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %454, i64 1
  %473 = icmp eq %"class.WTF::String"* %472, %452
  br i1 %473, label %474, label %453

474:                                              ; preds = %471
  store i32 0, i32* %107, align 4
  %475 = bitcast %"class.WTF::Vector.152"* %11 to i8**
  %476 = load i8*, i8** %475, align 8
  br label %477

477:                                              ; preds = %474, %446
  %478 = phi i8* [ %476, %474 ], [ %447, %446 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %478) #18
  store %"class.WTF::String"* null, %"class.WTF::String"** %105, align 8
  br label %479

479:                                              ; preds = %443, %477
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #18
  %480 = load %"class.WTF::String"*, %"class.WTF::String"** %101, align 8
  %481 = icmp eq %"class.WTF::String"* %480, null
  br i1 %481, label %515, label %482, !prof !2

482:                                              ; preds = %479
  %483 = bitcast %"class.WTF::String"* %480 to i8*
  %484 = load i32, i32* %103, align 4
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %513, label %486, !prof !3

486:                                              ; preds = %482
  %487 = zext i32 %484 to i64
  %488 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %480, i64 %487
  br label %489

489:                                              ; preds = %507, %486
  %490 = phi %"class.WTF::String"* [ %508, %507 ], [ %480, %486 ]
  %491 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %490, i64 0, i32 0, i32 0
  %492 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %491, align 8
  %493 = icmp eq %"class.WTF::StringImpl"* %492, null
  br i1 %493, label %507, label %494

494:                                              ; preds = %489
  %495 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %492, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %496 = load atomic i32, i32* %495 monotonic, align 4
  %497 = and i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %492, i64 0, i32 0
  %500 = load i32, i32* %499, align 4
  br i1 %498, label %501, label %503

501:                                              ; preds = %494
  %502 = add i32 %500, -1
  store i32 %502, i32* %499, align 4
  br label %503

503:                                              ; preds = %501, %494
  %504 = phi i32 [ %502, %501 ], [ %500, %494 ]
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %506, label %507

506:                                              ; preds = %503
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %492) #18
  br label %507

507:                                              ; preds = %506, %503, %489
  %508 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %490, i64 1
  %509 = icmp eq %"class.WTF::String"* %508, %488
  br i1 %509, label %510, label %489

510:                                              ; preds = %507
  store i32 0, i32* %103, align 4
  %511 = bitcast %"class.WTF::Vector.152"* %10 to i8**
  %512 = load i8*, i8** %511, align 8
  br label %513

513:                                              ; preds = %510, %482
  %514 = phi i8* [ %512, %510 ], [ %483, %482 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %514) #18
  store %"class.WTF::String"* null, %"class.WTF::String"** %101, align 8
  br label %515

515:                                              ; preds = %479, %513
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #18
  br label %553

516:                                              ; preds = %118, %549
  %517 = phi i32 [ 0, %118 ], [ %550, %549 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #18
  %518 = call dereferenceable(8) %"class.blink::Member.1117"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1135"* %119, i32 %517)
  %519 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %518, i64 0, i32 0, i32 0
  %520 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %519, align 8
  %521 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116CanonicalCSSTextEPNS_7CSSRuleE(%"class.blink::CSSRule"* %520)
  store %"class.WTF::StringImpl"* %521, %"class.WTF::StringImpl"** %121, align 8
  %522 = load i32, i32* %107, align 4
  %523 = load i32, i32* %106, align 8
  %524 = icmp eq i32 %522, %523
  br i1 %524, label %533, label %525, !prof !3

525:                                              ; preds = %516
  %526 = ptrtoint %"class.WTF::StringImpl"* %521 to i64
  %527 = load %"class.WTF::String"*, %"class.WTF::String"** %105, align 8
  %528 = zext i32 %522 to i64
  %529 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %527, i64 %528
  %530 = bitcast %"class.WTF::String"* %529 to i64*
  store i64 %526, i64* %530, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %121, align 8
  %531 = load i32, i32* %107, align 4
  %532 = add i32 %531, 1
  store i32 %532, i32* %107, align 4
  br label %549

533:                                              ; preds = %516
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.152"* nonnull %11, %"class.WTF::String"* nonnull dereferenceable(8) %13) #18
  %534 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %535 = icmp eq %"class.WTF::StringImpl"* %534, null
  br i1 %535, label %549, label %536

536:                                              ; preds = %533
  %537 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %538 = load atomic i32, i32* %537 monotonic, align 4
  %539 = and i32 %538, 2
  %540 = icmp eq i32 %539, 0
  %541 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 0
  %542 = load i32, i32* %541, align 4
  br i1 %540, label %543, label %545

543:                                              ; preds = %536
  %544 = add i32 %542, -1
  store i32 %544, i32* %541, align 4
  br label %545

545:                                              ; preds = %543, %536
  %546 = phi i32 [ %544, %543 ], [ %542, %536 ]
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %548, label %549

548:                                              ; preds = %545
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %534) #18
  br label %549

549:                                              ; preds = %525, %533, %545, %548
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #18
  %550 = add nuw i32 %517, 1
  %551 = load i32, i32* %115, align 4
  %552 = icmp ult i32 %550, %551
  br i1 %552, label %516, label %159

553:                                              ; preds = %51, %74, %515
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::HeapVector.1132"* @_ZN5blink19InspectorStyleSheet9FlatRulesEv(%"class.blink::InspectorStyleSheet"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19InspectorStyleSheet33RemapSourceDataToCSSOMIfNecessaryEv(%"class.blink::InspectorStyleSheet"* %0)
  %2 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8
  ret %"class.blink::HeapVector.1132"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19InspectorStyleSheet22ResourceStyleSheetTextEPN3WTF6StringE(%"class.blink::InspectorStyleSheet"* nocapture readonly, %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.blink::KURL", align 8
  %12 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #18
  %13 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 4, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %17, align 8
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %18, i64* %19, align 8
  br label %27

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %26, align 8
  br label %27

27:                                               ; preds = %20, %16
  %28 = phi i32 [ %23, %20 ], [ 0, %16 ]
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %28, i32* %29, align 8
  %30 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #18
  %31 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum8InjectedE, i64 0, i64 0)) #20
  %32 = icmp ult i64 %31, 4294967296
  br i1 %32, label %34, label %33, !prof !2

33:                                               ; preds = %27
  tail call void @llvm.trap() #18
  unreachable

34:                                               ; preds = %27
  %35 = trunc i64 %31 to i32
  %36 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %37 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum8InjectedE, i64 0, i64 0), i8** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %35, i32* %39, align 8
  %40 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #18
  br i1 %40, label %135, label %41

41:                                               ; preds = %34
  %42 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #18
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %45, label %49

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %46, align 8
  %47 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %48 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %47, i64* %48, align 8
  br label %56

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 1
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %55 = bitcast i8** %54 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %55, align 8
  br label %56

56:                                               ; preds = %49, %45
  %57 = phi i32 [ %52, %49 ], [ 0, %45 ]
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %57, i32* %58, align 8
  %59 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #18
  %60 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum9UserAgentE, i64 0, i64 0)) #20
  %61 = icmp ult i64 %60, 4294967296
  br i1 %61, label %63, label %62, !prof !2

62:                                               ; preds = %56
  call void @llvm.trap() #18
  unreachable

63:                                               ; preds = %56
  %64 = trunc i64 %60 to i32
  %65 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %66 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum9UserAgentE, i64 0, i64 0), i8** %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %64, i32* %68, align 8
  %69 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #18
  br i1 %69, label %135, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %72 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %71, align 8
  %73 = call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %72) #18
  %74 = icmp eq %"class.blink::Document"* %73, null
  br i1 %74, label %135, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #18
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %78 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %71, align 8
  %79 = call %"class.WTF::StringImpl"* @_ZNK5blink13CSSStyleSheet4hrefEv(%"class.blink::CSSStyleSheet"* %78) #18
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %77, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %133, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %83 = load %"class.blink::InspectorResourceContainer"*, %"class.blink::InspectorResourceContainer"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %84) #18
  %85 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #18
  %86 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorStyleSheet8FinalURLEv(%"class.blink::InspectorStyleSheet"* %0)
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %87, align 8
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #18
  %88 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 4
  %89 = call zeroext i1 @_ZN5blink26InspectorResourceContainer21LoadStyleSheetContentERKN3WTF6StringEPS2_(%"class.blink::InspectorResourceContainer"* %83, %"class.WTF::String"* dereferenceable(8) %88, %"class.WTF::String"* %1) #18
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #18
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %81
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #18
  br label %105

105:                                              ; preds = %81, %101, %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #18
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %84) #18
  br i1 %89, label %116, label %106

106:                                              ; preds = %105
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #18
  store i8 -86, i8* %10, align 1
  %107 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 2, i32 0, i32 0
  %108 = load %"class.blink::InspectorNetworkAgent"*, %"class.blink::InspectorNetworkAgent"** %107, align 8
  %109 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %71, align 8
  %110 = call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %109) #18
  %111 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %111) #18
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %11, %"class.WTF::String"* nonnull dereferenceable(8) %7) #18
  %112 = call zeroext i1 @_ZN5blink21InspectorNetworkAgent20FetchResourceContentEPNS_8DocumentERKNS_4KURLEPN3WTF6StringEPb(%"class.blink::InspectorNetworkAgent"* %108, %"class.blink::Document"* %110, %"class.blink::KURL"* nonnull dereferenceable(112) %11, %"class.WTF::String"* %1, i8* nonnull %10) #18
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %11) #18
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %111) #18
  %113 = load i8, i8* %10, align 1
  %114 = icmp eq i8 %113, 0
  %115 = and i1 %112, %114
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #18
  br label %116

116:                                              ; preds = %105, %106
  %117 = phi i1 [ true, %105 ], [ %115, %106 ]
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %133, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %120
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 [ %128, %127 ], [ %126, %120 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #18
  br label %133

133:                                              ; preds = %75, %116, %129, %132
  %134 = phi i1 [ %117, %116 ], [ %117, %129 ], [ %117, %132 ], [ false, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #18
  br label %135

135:                                              ; preds = %70, %34, %63, %133
  %136 = phi i1 [ %134, %133 ], [ false, %63 ], [ false, %34 ], [ false, %70 ]
  ret i1 %136
}

declare %"class.WTF::StringImpl"* @_ZNK5blink13CSSStyleSheet4hrefEv(%"class.blink::CSSStyleSheet"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink26InspectorResourceContainer21LoadStyleSheetContentERKN3WTF6StringEPS2_(%"class.blink::InspectorResourceContainer"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #6

declare zeroext i1 @_ZN5blink21InspectorNetworkAgent20FetchResourceContentEPNS_8DocumentERKNS_4KURLEPN3WTF6StringEPb(%"class.blink::InspectorNetworkAgent"*, %"class.blink::Document"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink19InspectorStyleSheet22CollectStyleSheetRulesEv(%"class.blink::InspectorStyleSheet"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false)
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %7 = bitcast %union.anon.340* %6 to i8*
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %9, align 4
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %11, align 8
  %13 = call i32 @_ZNK5blink13CSSStyleSheet6lengthEv(%"class.blink::CSSStyleSheet"* %12) #18
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.WTF::StringView"* %3 to i8*
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %19 = bitcast i8** %18 to %"class.WTF::StringImpl"**
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %21 = bitcast %"class.WTF::StringView"* %3 to i64*
  br label %40

22:                                               ; preds = %68, %1
  %23 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #18
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #18
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #18
  br label %39

39:                                               ; preds = %22, %35, %38
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #18
  ret %"class.WTF::StringImpl"* %23

40:                                               ; preds = %15, %68
  %41 = phi i32 [ 0, %15 ], [ %69, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #18
  %42 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %11, align 8
  %43 = call %"class.blink::CSSRule"* @_ZN5blink13CSSStyleSheet4itemEj(%"class.blink::CSSStyleSheet"* %42, i32 %41) #18
  %44 = bitcast %"class.blink::CSSRule"* %43 to %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)***
  %45 = load %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)** %45, i64 10
  %47 = load %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSRule"*)** %46, align 8
  %48 = call %"class.WTF::StringImpl"* %47(%"class.blink::CSSRule"* %43) #18
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %40
  store i8* null, i8** %18, align 8
  %51 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %51, i64* %21, align 8
  store i32 0, i32* %20, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  br label %68

52:                                               ; preds = %40
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %17, align 8
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 1
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %19, align 8
  store i32 %54, i32* %20, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %52
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %52
  %65 = phi i32 [ %63, %62 ], [ %61, %52 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #18
  br label %68

68:                                               ; preds = %50, %64, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #18
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 10) #18
  %69 = add nuw i32 %41, 1
  %70 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %11, align 8
  %71 = call i32 @_ZNK5blink13CSSStyleSheet6lengthEv(%"class.blink::CSSStyleSheet"* %70) #18
  %72 = icmp ult i32 %69, %71
  br i1 %72, label %40, label %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19InspectorStyleSheet19CSSOMStyleSheetTextEPN3WTF6StringE(%"class.blink::InspectorStyleSheet"* nocapture readonly, %"class.WTF::String"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 4, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %10, align 8
  %11 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %12 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %11, i64* %12, align 8
  br label %20

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 1
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %19 = bitcast i8** %18 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %19, align 8
  br label %20

20:                                               ; preds = %13, %9
  %21 = phi i32 [ %16, %13 ], [ 0, %9 ]
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %21, i32* %22, align 8
  %23 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #18
  %24 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum7RegularE, i64 0, i64 0)) #20
  %25 = icmp ult i64 %24, 4294967296
  br i1 %25, label %27, label %26, !prof !2

26:                                               ; preds = %20
  tail call void @llvm.trap() #18
  unreachable

27:                                               ; preds = %20
  %28 = trunc i64 %24 to i32
  %29 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %30 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum7RegularE, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %28, i32* %32, align 8
  %33 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #18
  br i1 %33, label %34, label %54

34:                                               ; preds = %27
  %35 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorStyleSheet22CollectStyleSheetRulesEv(%"class.blink::InspectorStyleSheet"* %0)
  %36 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %37 = bitcast %"class.WTF::String"* %1 to i64*
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  store i64 %36, i64* %37, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #18
  br label %54

54:                                               ; preds = %27, %34, %50, %53
  %55 = phi i1 [ false, %27 ], [ true, %53 ], [ true, %50 ], [ true, %34 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19InspectorStyleSheet5ResetEv(%"class.blink::InspectorStyleSheet"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false) #18
  %3 = ptrtoint i8* %2 to i64
  %4 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 0, i32 3
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.2"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.WTF::Vector"* %6, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  %13 = bitcast i32* %11 to i8*
  br i1 %12, label %20, label %14, !prof !2

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18, !prof !3

18:                                               ; preds = %14
  store i32 0, i32* %15, align 4
  br label %19

19:                                               ; preds = %18, %14
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %13) #18
  store i32* null, i32** %10, align 8
  br label %20

20:                                               ; preds = %19, %9
  %21 = bitcast %"class.WTF::Vector"* %6 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %21) #18
  br label %22

22:                                               ; preds = %1, %20
  %23 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 6, i32 0, i32 0
  %24 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %23, align 8
  %25 = icmp eq %"class.blink::HeapVector"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %24, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %42, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %24, i64 0, i32 0, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  %34 = bitcast %"class.blink::HeapVector"* %24 to i8**
  br i1 %33, label %39, label %35

35:                                               ; preds = %30
  %36 = load i8*, i8** %34, align 8
  %37 = zext i32 %32 to i64
  %38 = shl nuw nsw i64 %37, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %36, i64 %38) #18
  store i32 0, i32* %31, align 4
  br label %39

39:                                               ; preds = %35, %30
  %40 = load i8*, i8** %34, align 8
  %41 = bitcast %"class.blink::HeapVector"* %24 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  store i32 0, i32* %27, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %40) #18
  br label %42

42:                                               ; preds = %22, %39, %26
  %43 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8, i32 0
  %44 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %59, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  %51 = bitcast %"class.WTF::Vector.1135"* %43 to i8**
  br i1 %50, label %56, label %52

52:                                               ; preds = %47
  %53 = load i8*, i8** %51, align 8
  %54 = zext i32 %49 to i64
  %55 = shl nuw nsw i64 %54, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %53, i64 %55) #18
  store i32 0, i32* %48, align 4
  br label %56

56:                                               ; preds = %52, %47
  %57 = load i8*, i8** %51, align 8
  %58 = bitcast %"class.WTF::Vector.1135"* %43 to i64*
  store atomic i64 0, i64* %58 monotonic, align 8
  store i32 0, i32* %44, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %57) #18
  br label %59

59:                                               ; preds = %42, %56
  %60 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 9, i32 0
  %61 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %76, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  %68 = bitcast %"class.WTF::Vector.1135"* %60 to i8**
  br i1 %67, label %73, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  %71 = zext i32 %66 to i64
  %72 = shl nuw nsw i64 %71, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %70, i64 %72) #18
  store i32 0, i32* %65, align 4
  br label %73

73:                                               ; preds = %69, %64
  %74 = load i8*, i8** %68, align 8
  %75 = bitcast %"class.WTF::Vector.1135"* %60 to i64*
  store atomic i64 0, i64* %75 monotonic, align 8
  store i32 0, i32* %61, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %74) #18
  br label %76

76:                                               ; preds = %59, %73
  %77 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 10
  %78 = getelementptr inbounds %"class.WTF::HashMap.1143", %"class.WTF::HashMap.1143"* %77, i64 0, i32 0, i32 0
  %79 = load %"struct.WTF::KeyValuePair.1147"*, %"struct.WTF::KeyValuePair.1147"** %78, align 8
  %80 = icmp eq %"struct.WTF::KeyValuePair.1147"* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 10, i32 0, i32 1
  %83 = bitcast %"struct.WTF::KeyValuePair.1147"* %79 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %83) #18
  %84 = bitcast %"class.WTF::HashMap.1143"* %77 to i64*
  store atomic i64 0, i64* %84 monotonic, align 8
  store i32 0, i32* %82, align 8
  %85 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 10, i32 0, i32 2
  store i32 0, i32* %85, align 4
  br label %86

86:                                               ; preds = %76, %81
  %87 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 11
  %88 = getelementptr inbounds %"class.WTF::HashMap.1143", %"class.WTF::HashMap.1143"* %87, i64 0, i32 0, i32 0
  %89 = load %"struct.WTF::KeyValuePair.1147"*, %"struct.WTF::KeyValuePair.1147"** %88, align 8
  %90 = icmp eq %"struct.WTF::KeyValuePair.1147"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 11, i32 0, i32 1
  %93 = bitcast %"struct.WTF::KeyValuePair.1147"* %89 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %93) #18
  %94 = bitcast %"class.WTF::HashMap.1143"* %87 to i64*
  store atomic i64 0, i64* %94 monotonic, align 8
  store i32 0, i32* %92, align 8
  %95 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 11, i32 0, i32 2
  store i32 0, i32* %95, align 4
  br label %96

96:                                               ; preds = %86, %91
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19InspectorStyleSheet16SyncTextIfNeededEv(%"class.blink::InspectorStyleSheet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 13
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink19InspectorStyleSheet5ResetEv(%"class.blink::InspectorStyleSheet"* %0)
  tail call void @_ZN5blink19InspectorStyleSheet10UpdateTextEv(%"class.blink::InspectorStyleSheet"* %0)
  store i8 0, i8* %2, align 8
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19InspectorStyleSheet23InspectorStyleSheetTextEPN3WTF6StringE(%"class.blink::InspectorStyleSheet"* nocapture readonly, %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %13 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %12, i64* %13, align 8
  br label %21

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %20, align 8
  br label %21

21:                                               ; preds = %14, %10
  %22 = phi i32 [ %17, %14 ], [ 0, %10 ]
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %22, i32* %23, align 8
  %24 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #18
  %25 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum9InspectorE, i64 0, i64 0)) #20
  %26 = icmp ult i64 %25, 4294967296
  br i1 %26, label %28, label %27, !prof !2

27:                                               ; preds = %21
  tail call void @llvm.trap() #18
  unreachable

28:                                               ; preds = %21
  %29 = trunc i64 %25 to i32
  %30 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %31 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum9InspectorE, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %29, i32* %33, align 8
  %34 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #18
  br i1 %34, label %35, label %87

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %36, align 8
  %38 = call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %37) #18
  %39 = icmp eq %"class.blink::Document"* %38, null
  br i1 %39, label %87, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %42 = load %"class.blink::InspectorResourceContainer"*, %"class.blink::InspectorResourceContainer"** %41, align 8
  %43 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %36, align 8
  %44 = call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %43) #18
  %45 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %44, i64 0, i32 0, i32 0
  %46 = call i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"* %45) #18
  %47 = call zeroext i1 @_ZN5blink26InspectorResourceContainer23LoadStyleElementContentEiPN3WTF6StringE(%"class.blink::InspectorResourceContainer"* %42, i32 %46, %"class.WTF::String"* %1) #18
  br i1 %47, label %87, label %48

48:                                               ; preds = %40
  %49 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0), i64 0) #18
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %51 = bitcast %"class.WTF::String"* %5 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %53 = bitcast %"class.WTF::String"* %1 to i64*
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  store i64 %52, i64* %53, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #18
  br label %70

70:                                               ; preds = %48, %66, %69
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #18
  br label %86

86:                                               ; preds = %70, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #18
  br label %87

87:                                               ; preds = %28, %40, %35, %86
  %88 = phi i1 [ true, %86 ], [ false, %28 ], [ false, %35 ], [ true, %40 ]
  ret i1 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19InspectorStyleSheet20InlineStyleSheetTextEPN3WTF6StringE(%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %4, i64 0, i32 11, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %92, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 12
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %92

13:                                               ; preds = %8
  %14 = and i32 %10, 48
  switch i32 %14, label %92 [
    i32 0, label %15
    i32 32, label %27
  ]

15:                                               ; preds = %13
  %16 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %20 = bitcast %"class.blink::Member.1115"* %19 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %23, %25
  br i1 %26, label %39, label %92

27:                                               ; preds = %13
  %28 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kStyleTagE, align 8
  %29 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %32 = bitcast %"class.blink::Member.1115"* %31 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, %37
  br i1 %38, label %39, label %92

39:                                               ; preds = %15, %27
  %40 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.blink::InspectorResourceContainer"*, %"class.blink::InspectorResourceContainer"** %40, align 8
  %42 = tail call i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"* nonnull %6) #18
  %43 = tail call zeroext i1 @_ZN5blink26InspectorResourceContainer23LoadStyleElementContentEiPN3WTF6StringE(%"class.blink::InspectorResourceContainer"* %41, i32 %42, %"class.WTF::String"* %1) #18
  br i1 %43, label %64, label %44

44:                                               ; preds = %39
  %45 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"* nonnull %6, i1 zeroext false) #18
  %46 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %47 = bitcast %"class.WTF::String"* %1 to i64*
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %46, i64* %47, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #18
  br label %64

64:                                               ; preds = %39, %63, %60, %44
  %65 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %3, align 8
  %66 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %65, i64 0, i32 1, i32 0, i32 0
  %67 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %67, i64 0, i32 8
  %69 = load i8, i8* %68, align 8
  %70 = and i8 %69, 4
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %92, label %72

72:                                               ; preds = %64
  tail call void @_ZN5blink19InspectorStyleSheet9ParseTextERKN3WTF6StringE(%"class.blink::InspectorStyleSheet"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  %73 = tail call %"class.WTF::StringImpl"* @_ZN5blink19InspectorStyleSheet23MergeCSSOMRulesWithTextERKN3WTF6StringE(%"class.blink::InspectorStyleSheet"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  %74 = ptrtoint %"class.WTF::StringImpl"* %73 to i64
  %75 = bitcast %"class.WTF::String"* %1 to i64*
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  store i64 %74, i64* %75, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #18
  br label %92

92:                                               ; preds = %15, %64, %27, %13, %2, %8, %72, %88, %91
  %93 = phi i1 [ true, %64 ], [ true, %91 ], [ true, %88 ], [ true, %72 ], [ false, %27 ], [ false, %8 ], [ false, %2 ], [ false, %15 ], [ false, %13 ]
  ret i1 %93
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink19InspectorStyleSheet9IsMutableEv(%"class.blink::InspectorStyleSheet"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %3, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %5, i64 0, i32 8
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 4
  %9 = icmp ne i8 %8, 0
  ret i1 %9
}

declare zeroext i1 @_ZN5blink26InspectorResourceContainer23LoadStyleElementContentEiPN3WTF6StringE(%"class.blink::InspectorResourceContainer"*, i32, %"class.WTF::String"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33InspectorStyleSheetForInlineStyleC2EPNS_7ElementEPNS_23InspectorStyleSheetBase8ListenerE(%"class.blink::InspectorStyleSheetForInlineStyle"* nocapture, %"class.blink::Element"*, %"class.blink::InspectorStyleSheetBase::Listener"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink23InspectorStyleSheetBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory16CreateIdentifierEv() #18
  %6 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 0, i32 2
  store %"class.blink::InspectorStyleSheetBase::Listener"* %2, %"class.blink::InspectorStyleSheetBase::Listener"** %7, align 8
  %8 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #18
  %9 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %10 = bitcast %"class.WTF::Vector"** %9 to i8**
  store i8* %8, i8** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink33InspectorStyleSheetForInlineStyleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::Element"* %1, %"class.blink::Element"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::InspectorStyle"* null, %"class.blink::InspectorStyle"** %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33InspectorStyleSheetForInlineStyle25DidModifyElementAttributeEv(%"class.blink::InspectorStyleSheetForInlineStyle"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 2, i32 0
  %3 = bitcast %"class.blink::MemberBase.2602"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 0
  %5 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #18
  %6 = ptrtoint i8* %5 to i64
  %7 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 0, i32 3
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %8, align 8
  %10 = bitcast %"class.std::__1::unique_ptr.2"* %7 to i64*
  store i64 %6, i64* %10, align 8
  %11 = icmp eq %"class.WTF::Vector"* %9, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  %16 = bitcast i32* %14 to i8*
  br i1 %15, label %23, label %17, !prof !2

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !3

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #18
  store i32* null, i32** %13, align 8
  br label %23

23:                                               ; preds = %22, %12
  %24 = bitcast %"class.WTF::Vector"* %9 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %24) #18
  br label %25

25:                                               ; preds = %23, %1
  %26 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 0, i32 2
  %27 = load %"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase::Listener"** %26, align 8
  %28 = icmp eq %"class.blink::InspectorStyleSheetBase::Listener"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.blink::InspectorStyleSheetBase::Listener"* %27 to void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)***
  %31 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)**, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %31, i64 2
  %33 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %32, align 8
  tail call void %33(%"class.blink::InspectorStyleSheetBase::Listener"* nonnull %27, %"class.blink::InspectorStyleSheetBase"* %4) #18
  br label %34

34:                                               ; preds = %25, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink33InspectorStyleSheetForInlineStyle7SetTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %8, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115VerifyStyleTextEPNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* %12, %"class.WTF::String"* dereferenceable(8) %1)
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0)) #18
  br label %144

15:                                               ; preds = %3
  %16 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  %17 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %16, i64 0, i32 0, i32 0
  %18 = bitcast %"class.blink::Element"* %16 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %19 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %19, i64 10
  %21 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %20, align 8
  %22 = tail call %"class.blink::ExecutionContext"* %21(%"class.blink::Node"* %17) #18
  %23 = tail call %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"* %22) #18
  tail call void @_ZN5blink21ContentSecurityPolicy27SetOverrideAllowInlineStyleEb(%"class.blink::ContentSecurityPolicy"* %23, i1 zeroext true) #18
  %24 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  %25 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #18
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0), i64 5) #18
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %52, label %29

29:                                               ; preds = %15
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 acquire, align 4
  %32 = and i32 %31, 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %50, label %34

34:                                               ; preds = %29
  %35 = load atomic i32, i32* %30 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %52

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #18
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !3

47:                                               ; preds = %38
  call void @llvm.trap() #18
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %52

50:                                               ; preds = %29
  %51 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %27) #18
  br label %52

52:                                               ; preds = %15, %34, %48, %50
  %53 = phi %"class.WTF::StringImpl"* [ %51, %50 ], [ %27, %34 ], [ %27, %48 ], [ null, %15 ]
  %54 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %55, align 8
  %56 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #18
  %57 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %60, label %64

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %61, align 8
  %62 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %63 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %62, i64* %63, align 8
  br label %71

64:                                               ; preds = %52
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %65, align 8
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 1
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %70 = bitcast i8** %69 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %70, align 8
  br label %71

71:                                               ; preds = %64, %60
  %72 = phi i32 [ %67, %64 ], [ 0, %60 ]
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %72, i32* %73, align 8
  %74 = call i64 @_ZNK5blink7Element24WeakLowercaseIfNecessaryERKN3WTF10StringViewE(%"class.blink::Element"* %24, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #18
  call void @_ZN5blink7Element18SetAttributeHintedERKN3WTF12AtomicStringENS1_17AtomicStringTable10WeakResultES4_RNS_14ExceptionStateE(%"class.blink::Element"* %24, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, i64 %74, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.blink::ExceptionState"* dereferenceable(72) %2) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #18
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #18
  br label %90

90:                                               ; preds = %71, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #18
  br label %106

106:                                              ; preds = %90, %102, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #18
  call void @_ZN5blink21ContentSecurityPolicy27SetOverrideAllowInlineStyleEb(%"class.blink::ContentSecurityPolicy"* %23, i1 zeroext false) #18
  %107 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %141

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 0
  %112 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 16, i1 false) #18
  %113 = ptrtoint i8* %112 to i64
  %114 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 0, i32 3
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %114, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %115, align 8
  %117 = bitcast %"class.std::__1::unique_ptr.2"* %114 to i64*
  store i64 %113, i64* %117, align 8
  %118 = icmp eq %"class.WTF::Vector"* %116, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %116, i64 0, i32 0, i32 0, i32 0
  %121 = load i32*, i32** %120, align 8
  %122 = icmp eq i32* %121, null
  %123 = bitcast i32* %121 to i8*
  br i1 %122, label %130, label %124, !prof !2

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %116, i64 0, i32 0, i32 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %129, label %128, !prof !3

128:                                              ; preds = %124
  store i32 0, i32* %125, align 4
  br label %129

129:                                              ; preds = %128, %124
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %123) #18
  store i32* null, i32** %120, align 8
  br label %130

130:                                              ; preds = %129, %119
  %131 = bitcast %"class.WTF::Vector"* %116 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %131) #18
  br label %132

132:                                              ; preds = %130, %110
  %133 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 0, i32 2
  %134 = load %"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase::Listener"** %133, align 8
  %135 = icmp eq %"class.blink::InspectorStyleSheetBase::Listener"* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %132
  %137 = bitcast %"class.blink::InspectorStyleSheetBase::Listener"* %134 to void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)***
  %138 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)**, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %138, i64 2
  %140 = load void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorStyleSheetBase"*)** %139, align 8
  call void %140(%"class.blink::InspectorStyleSheetBase::Listener"* nonnull %134, %"class.blink::InspectorStyleSheetBase"* %111) #18
  br label %141

141:                                              ; preds = %106, %136, %132
  %142 = load i32, i32* %107, align 8
  %143 = icmp eq i32 %142, 0
  br label %144

144:                                              ; preds = %141, %14
  %145 = phi i1 [ %143, %141 ], [ false, %14 ]
  ret i1 %145
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink33InspectorStyleSheetForInlineStyle7GetTextEPN3WTF6StringE(%"class.blink::InspectorStyleSheetForInlineStyle"* nocapture readonly, %"class.WTF::String"* nocapture) unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(8) %"class.WTF::String"* @_ZN5blink33InspectorStyleSheetForInlineStyle16ElementStyleTextEv(%"class.blink::InspectorStyleSheetForInlineStyle"* %0)
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #18
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #18
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %2
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"class.WTF::String"* %1 to i64*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #18
  br label %43

43:                                               ; preds = %24, %39, %42
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::String"* @_ZN5blink33InspectorStyleSheetForInlineStyle16ElementStyleTextEv(%"class.blink::InspectorStyleSheetForInlineStyle"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::Element"*, %"class.blink::Element"** %4, align 8
  %6 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0), i64 5) #18
  %7 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %12, align 8
  %13 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %14 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %13, i64* %14, align 8
  br label %22

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %21 = bitcast i8** %20 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %21, align 8
  br label %22

22:                                               ; preds = %11, %15
  %23 = phi i32 [ %18, %15 ], [ 0, %11 ]
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %23, i32* %24, align 8
  %25 = call i64 @_ZNK5blink7Element24WeakLowercaseIfNecessaryERKN3WTF10StringViewE(%"class.blink::Element"* %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %2) #18
  %26 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element18GetAttributeHintedERKN3WTF12AtomicStringENS1_17AtomicStringTable10WeakResultE(%"class.blink::Element"* %5, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, i64 %25) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #18
  %27 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %26, i64 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #18
  br label %43

43:                                               ; preds = %22, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  ret %"class.WTF::String"* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InspectorStyle"* @_ZN5blink33InspectorStyleSheetForInlineStyle17GetInspectorStyleEPNS_19CSSStyleDeclarationE(%"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::CSSStyleDeclaration"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::Member.2601", %"class.blink::Member.2601"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::InspectorStyle"*, %"class.blink::InspectorStyle"** %4, align 8
  %6 = icmp eq %"class.blink::InspectorStyle"* %5, null
  br i1 %6, label %7, label %33

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = tail call %"class.blink::CSSStyleDeclaration"* @_ZN5blink7Element5styleEv(%"class.blink::Element"* %9) #18
  %11 = ptrtoint %"class.blink::CSSStyleDeclaration"* %10 to i64
  %12 = tail call %"class.blink::CSSRuleSourceData"* @_ZN5blink33InspectorStyleSheetForInlineStyle14RuleSourceDataEv(%"class.blink::InspectorStyleSheetForInlineStyle"* %0)
  %13 = ptrtoint %"class.blink::CSSRuleSourceData"* %12 to i64
  %14 = ptrtoint %"class.blink::InspectorStyleSheetForInlineStyle"* %0 to i64
  %15 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14InspectorStyleEEEPhm(i64 24) #18
  %16 = bitcast i8* %15 to i64*
  store i64 %11, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  %18 = bitcast i8* %17 to i64*
  store i64 %13, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 16
  %20 = bitcast i8* %19 to i64*
  store i64 %14, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %15, i64 -4
  %22 = bitcast i8* %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = or i16 %23, 1
  store atomic i16 %24, i16* %22 release, align 2
  %25 = ptrtoint i8* %15 to i64
  %26 = bitcast %"class.blink::Member.2601"* %3 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  %29 = bitcast i8* %15 to %"class.blink::InspectorStyle"*
  br i1 %28, label %33, label %30

30:                                               ; preds = %7
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %15) #18
  %32 = load %"class.blink::InspectorStyle"*, %"class.blink::InspectorStyle"** %4, align 8
  br label %33

33:                                               ; preds = %2, %30, %7
  %34 = phi %"class.blink::InspectorStyle"* [ %5, %2 ], [ %32, %30 ], [ %29, %7 ]
  ret %"class.blink::InspectorStyle"* %34
}

declare %"class.blink::CSSStyleDeclaration"* @_ZN5blink7Element5styleEv(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSRuleSourceData"* @_ZN5blink33InspectorStyleSheetForInlineStyle14RuleSourceDataEv(%"class.blink::InspectorStyleSheetForInlineStyle"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::(anonymous namespace)::StyleSheetHandler", align 8
  %3 = tail call dereferenceable(8) %"class.WTF::String"* @_ZN5blink33InspectorStyleSheetForInlineStyle16ElementStyleTextEv(%"class.blink::InspectorStyleSheetForInlineStyle"* %0)
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %27

11:                                               ; preds = %1, %7
  %12 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17CSSRuleSourceDataEEEPhm(i64 88) #18
  %13 = bitcast i8* %12 to %"class.blink::CSSRuleSourceData"*
  %14 = bitcast i8* %12 to i32*
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %12, i64 4
  %16 = bitcast i8* %15 to %"class.blink::SourceRange"*
  tail call void @_ZN5blink11SourceRangeC1Ev(%"class.blink::SourceRange"* %16) #18
  %17 = getelementptr inbounds i8, i8* %12, i64 12
  %18 = bitcast i8* %17 to %"class.blink::SourceRange"*
  tail call void @_ZN5blink11SourceRangeC1Ev(%"class.blink::SourceRange"* %18) #18
  %19 = getelementptr inbounds i8, i8* %12, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 64, i1 false) #18
  %20 = getelementptr inbounds i8, i8* %12, i64 -4
  %21 = bitcast i8* %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = or i16 %22, 1
  store atomic i16 %23, i16* %21 release, align 2
  %24 = bitcast i8* %17 to i32*
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %12, i64 16
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 4
  br label %71

27:                                               ; preds = %7
  %28 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEEEPhm(i64 16) #18
  %29 = getelementptr inbounds i8, i8* %28, i64 -4
  %30 = bitcast i8* %29 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #18
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  %33 = bitcast %"class.blink::(anonymous namespace)::StyleSheetHandler"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %33) #18
  %34 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %2, i64 0, i32 2
  %35 = bitcast %"class.blink::Document"** %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 40, i1 false)
  %36 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.blink::Element"*, %"class.blink::Element"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %37, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %39 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %39, i64 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.blink::Document"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_117StyleSheetHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %2, i64 0, i32 1
  store %"class.WTF::String"* %3, %"class.WTF::String"** %44, align 8
  %45 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %2, i64 0, i32 2
  %46 = bitcast %"class.blink::Document"** %45 to i64*
  store i64 %42, i64* %46, align 8
  %47 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %2, i64 0, i32 3
  %48 = bitcast %"class.blink::HeapVector"** %47 to i8**
  store i8* %28, i8** %48, align 8
  %49 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %2, i64 0, i32 4
  %50 = bitcast %"class.blink::HeapVector"* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #18
  %51 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %38, align 8
  %52 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %51, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::Document"*, %"class.blink::Document"** %52, align 8
  %54 = icmp eq %"class.blink::Document"* %53, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %27
  %56 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #18
  %57 = bitcast i8* %56 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"* %57, %"class.blink::Document"* nonnull dereferenceable(2848) %53) #18
  %58 = getelementptr inbounds i8, i8* %56, i64 -4
  %59 = bitcast i8* %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = or i16 %60, 1
  store atomic i16 %61, i16* %59 release, align 2
  br label %64

62:                                               ; preds = %27
  %63 = tail call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 0) #18
  br label %64

64:                                               ; preds = %55, %62
  %65 = phi %"class.blink::CSSParserContext"* [ %57, %55 ], [ %63, %62 ]
  %66 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %2, i64 0, i32 0
  call void @_ZN5blink9CSSParser32ParseDeclarationListForInspectorEPKNS_16CSSParserContextERKN3WTF6StringERNS_17CSSParserObserverE(%"class.blink::CSSParserContext"* %65, %"class.WTF::String"* dereferenceable(8) %3, %"class.blink::CSSParserObserver"* nonnull dereferenceable(8) %66) #18
  %67 = bitcast i8* %28 to %"class.WTF::Vector.33"*
  %68 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %67, i32 0) #18
  %69 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %33) #18
  br label %71

71:                                               ; preds = %64, %11
  %72 = phi %"class.blink::CSSRuleSourceData"* [ %13, %11 ], [ %70, %64 ]
  ret %"class.blink::CSSRuleSourceData"* %72
}

declare void @_ZN5blink9CSSParser32ParseDeclarationListForInspectorEPKNS_16CSSParserContextERKN3WTF6StringERNS_17CSSParserObserverE(%"class.blink::CSSParserContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::CSSParserObserver"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSStyleDeclaration"* @_ZN5blink33InspectorStyleSheetForInlineStyle11InlineStyleEv(%"class.blink::InspectorStyleSheetForInlineStyle"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = tail call %"class.blink::CSSStyleDeclaration"* @_ZN5blink7Element5styleEv(%"class.blink::Element"* %3) #18
  ret %"class.blink::CSSStyleDeclaration"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink33InspectorStyleSheetForInlineStyle5TraceEPNS_7VisitorE(%"class.blink::InspectorStyleSheetForInlineStyle"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.1171"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #18
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.2601"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14InspectorStyleEE5TraceEPNS_7VisitorEPKv) #18
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::Document"* @_ZN5blink33InspectorStyleSheetForInlineStyle11GetDocumentEv(%"class.blink::InspectorStyleSheetForInlineStyle"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  ret %"class.blink::Document"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink19InspectorStyleSheet13IsInlineStyleEv(%"class.blink::InspectorStyleSheet"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23InspectorStyleSheetBaseD2Ev(%"class.blink::InspectorStyleSheetBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorStyleSheetBase", %"class.blink::InspectorStyleSheetBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink23InspectorStyleSheetBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheetBase", %"class.blink::InspectorStyleSheetBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %3, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %3, align 8
  %5 = icmp eq %"class.WTF::Vector"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  %10 = bitcast i32* %8 to i8*
  br i1 %9, label %17, label %11, !prof !2

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !3

15:                                               ; preds = %11
  store i32 0, i32* %12, align 4
  br label %16

16:                                               ; preds = %15, %11
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #18
  store i32* null, i32** %7, align 8
  br label %17

17:                                               ; preds = %16, %6
  %18 = bitcast %"class.WTF::Vector"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %18) #18
  br label %19

19:                                               ; preds = %1, %17
  %20 = getelementptr inbounds %"class.blink::InspectorStyleSheetBase", %"class.blink::InspectorStyleSheetBase"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #18
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33InspectorStyleSheetForInlineStyleD0Ev(%"class.blink::InspectorStyleSheetForInlineStyle"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink23InspectorStyleSheetBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %3, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %3, align 8
  %5 = icmp eq %"class.WTF::Vector"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  %10 = bitcast i32* %8 to i8*
  br i1 %9, label %17, label %11, !prof !2

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !3

15:                                               ; preds = %11
  store i32 0, i32* %12, align 4
  br label %16

16:                                               ; preds = %15, %11
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #18
  store i32* null, i32** %7, align 8
  br label %17

17:                                               ; preds = %16, %6
  %18 = bitcast %"class.WTF::Vector"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %18) #18
  br label %19

19:                                               ; preds = %17, %1
  %20 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #18
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink23InspectorStyleSheetBase12SourceMapURLEv(%"class.blink::InspectorStyleSheetBase"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink33InspectorStyleSheetForInlineStyle13IsInlineStyleEv(%"class.blink::InspectorStyleSheetForInlineStyle"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23InspectorStyleSheetBaseD0Ev(%"class.blink::InspectorStyleSheetBase"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #21
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %0, i64 0, i32 1
  %4 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #18
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %10
  tail call void @llvm.trap() #18
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %20, %5, %2
  %23 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %24 = bitcast %"class.WTF::String"* %3 to i64*
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %23, i64* %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #18
  br label %41

41:                                               ; preds = %22, %37, %40
  %42 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %0, i64 0, i32 0
  store i8 1, i8* %42, align 8
  br i1 %4, label %56, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #18
  br label %56

56:                                               ; preds = %41, %52, %55
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #18
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon.340* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.340* %16 to %"class.WTF::Vector.346"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.346"* %30, i16* nonnull dereferenceable(2) %3) #18
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #18
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.341"* %41, i8* nonnull dereferenceable(1) %4) #18
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.346"*, i16* dereferenceable(2)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.346", %"class.WTF::Vector.346"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.346", %"class.WTF::Vector.346"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.346"* %0, i32 %5) #18
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.346"* %0, i32 %5) #18
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.346"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.346", %"class.WTF::Vector.346"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #18
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0), i8* %15, i8* %16) #18
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #18
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #18
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.346", %"class.WTF::Vector.346"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #18
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #18
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.346"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.346", %"class.WTF::Vector.346"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.346"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.346"* %0, i32 %27) #18
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.346"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.346", %"class.WTF::Vector.346"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.346", %"class.WTF::Vector.346"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.346"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.346", %"class.WTF::Vector.346"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.346", %"class.WTF::Vector.346"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.346", %"class.WTF::Vector.346"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.346"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.346", %"class.WTF::Vector.346"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #18
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.347"* %19, i16* nonnull %6) #18
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #18
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #18
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.346", %"class.WTF::Vector.346"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.346", %"class.WTF::Vector.346"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #18
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.346", %"class.WTF::Vector.346"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.346", %"class.WTF::Vector.346"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.347"* %53, i16* %48) #18
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.346"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.346", %"class.WTF::Vector.346"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.27, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #18
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.347"*, i16*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #18
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.341"*, i8* dereferenceable(1)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.341"* %0, i32 %5) #18
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.341"* %0, i32 %5) #18
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.341"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #18
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0), i8* %15, i8* %16) #18
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #18
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #18
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #18
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #18
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.341"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.341"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.341"* %0, i32 %27) #18
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.341"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.341"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.341"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #18
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.342"* %18, i8* nonnull %6) #18
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #18
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #18
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !2

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #18
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !2

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.342"* %46, i8* %42) #18
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.341"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.341", %"class.WTF::Vector.341"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.27, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #18
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.342"*, i8*) local_unnamed_addr #10 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #18
  ret void
}

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #13

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2753"* noalias sret, %"class.WTF::StringAppend"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #18
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #18
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #18
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !3

43:                                               ; preds = %34
  tail call void @llvm.trap() #18
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2753"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2753"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #18
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.2752"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = bitcast %"class.WTF::StringTypeAdapter.2754"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #18
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false) #18
  %10 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %5, i8* %10) #18
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  %17 = select i1 %16, %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %15
  %18 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #18
  %19 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false) #18
  %20 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %4, i8* %20) #18
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #18
  br i1 %24, label %25, label %26

25:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #18
  br label %75

26:                                               ; preds = %1
  %27 = icmp eq %"class.WTF::StringImpl"* %12, null
  %28 = select i1 %27, %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %12
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #18
  br i1 %32, label %75, label %33

33:                                               ; preds = %26
  %34 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #18
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %35 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.2752"* %0)
  %36 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %35, i8** nonnull dereferenceable(8) %6) #18
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %0, i64 0, i32 0
  %39 = bitcast %"class.WTF::StringTypeAdapter.2754"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false) #18
  %40 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %3, i8* %40) #18
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.2753"* %38, i8* %37) #18
  %41 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2753"* %38) #18
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %37, i64 %42
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2754"* nonnull %3, i8* %43) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #18
  %44 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %44, label %117, label %45

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %62

52:                                               ; preds = %45
  %53 = zext i32 %51 to i33
  %54 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #18
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !3

59:                                               ; preds = %52
  call void @llvm.trap() #18
  unreachable

60:                                               ; preds = %52
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %50, align 4
  br label %62

62:                                               ; preds = %45, %60
  %63 = phi i32 [ %61, %60 ], [ %51, %45 ]
  %64 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %65 = load atomic i32, i32* %46 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %70 = add i32 %63, -1
  store i32 %70, i32* %69, align 4
  br label %71

71:                                               ; preds = %68, %62
  %72 = phi i32 [ %70, %68 ], [ %63, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %117

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #18
  br label %117

75:                                               ; preds = %26, %25
  %76 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #18
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %77 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.2752"* %0)
  %78 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %77, i16** nonnull dereferenceable(8) %7) #18
  %79 = load i16*, i16** %7, align 8
  %80 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %0, i64 0, i32 0
  %81 = bitcast %"class.WTF::StringTypeAdapter.2754"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false) #18
  %82 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %2, i8* %82) #18
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.2753"* %80, i16* %79) #18
  %83 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2753"* %80) #18
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i16, i16* %79, i64 %84
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2754"* nonnull %2, i16* %85) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #18
  %86 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %86, label %117, label %87

87:                                               ; preds = %75
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %104

94:                                               ; preds = %87
  %95 = zext i32 %93 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #18
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !3

101:                                              ; preds = %94
  call void @llvm.trap() #18
  unreachable

102:                                              ; preds = %94
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %92, align 4
  br label %104

104:                                              ; preds = %87, %102
  %105 = phi i32 [ %103, %102 ], [ %93, %87 ]
  %106 = ptrtoint %"class.WTF::StringImpl"* %78 to i64
  %107 = load atomic i32, i32* %88 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %112 = add i32 %105, -1
  store i32 %112, i32* %111, align 4
  br label %113

113:                                              ; preds = %110, %104
  %114 = phi i32 [ %112, %110 ], [ %105, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #18
  br label %117

117:                                              ; preds = %116, %113, %75, %74, %71, %33
  %118 = phi i8* [ %34, %33 ], [ %34, %71 ], [ %34, %74 ], [ %76, %75 ], [ %76, %113 ], [ %76, %116 ]
  %119 = phi i64 [ 0, %33 ], [ %64, %71 ], [ %64, %74 ], [ 0, %75 ], [ %106, %113 ], [ %106, %116 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #18
  %120 = inttoptr i64 %119 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %120
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::CSSPropertySourceData"* @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.26"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %24, i64 %25
  ret %"class.blink::CSSPropertySourceData"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2752"*, %"class.WTF::StringAppend.2753"* byval(%"class.WTF::StringAppend.2753") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #18
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #18
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %0, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %1, i64 0, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8** %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %1, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #18
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !3

49:                                               ; preds = %40
  tail call void @llvm.trap() #18
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %54

52:                                               ; preds = %25
  %53 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %0, i64 0, i32 1
  store i8* %2, i8** %53, align 8
  br label %67

54:                                               ; preds = %35, %50
  %55 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %0, i64 0, i32 1
  store i8* %2, i8** %55, align 8
  %56 = load atomic i32, i32* %36 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #18
  br label %67

67:                                               ; preds = %52, %66, %63
  br i1 %7, label %81, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #18
  br label %81

81:                                               ; preds = %67, %77, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2753"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #18
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #18
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #18
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %37
  tail call void @llvm.trap() #18
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #18
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #18
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.2752"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2754", %"class.WTF::StringTypeAdapter.2754"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2752", %"class.WTF::StringAppend.2752"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %4, i8* %14) #18
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2753"* %9) #18
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #18
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2753"* %9) #18
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #18
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %25, i8* %26) #18
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #18
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #18
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #18
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #18
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #18
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* %41, i8* %42) #18
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #18
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #18
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #18
  ret i32 %17
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2753"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %8) #18
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #18
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %8) #18
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #18
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %26, i8* %27) #18
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #18
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #18
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #18
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #18
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #18
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* %41, i8* %42) #18
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #18
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #18
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #18
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #18
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2754", %"class.WTF::StringTypeAdapter.2754"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %4, i8* %21) #18
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #18
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #18
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %30, i8* %31) #18
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #18
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #18
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #18
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #18
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #18
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* %46, i8* %47) #18
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #18
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #18
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #18
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2754"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.2753"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2756", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2756", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2756"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2756"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2756"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2756"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #18
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #18
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2756"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #18
  %47 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #18
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %4, i8* %48) #18
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2757"* nonnull %49, i8* %1) #18
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2754"* nonnull %4, i8* %52) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #18
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %6) #18
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2757"* nonnull %53, i8* %56) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #18
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2757"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2754"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.2753"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2756", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2756", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2756"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2756"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2756"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2756"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #18
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #18
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2756"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #18
  %47 = getelementptr inbounds %"class.WTF::StringAppend.2753", %"class.WTF::StringAppend.2753"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #18
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %4, i8* %48) #18
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2757"* nonnull %49, i16* %1) #18
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2754"* nonnull %4, i16* %52) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #18
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %6) #18
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2757"* nonnull %53, i16* %56) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #18
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2757"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.17"* @_ZNK3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %24, i64 %25
  ret %"class.blink::Member.17"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2763"* noalias sret, %"class.WTF::StringAppend.2476"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.2476", align 8
  %5 = bitcast %"class.WTF::StringAppend.2476"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.2476"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #18
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #18
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #18
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #18
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2763"* %0, %"class.WTF::StringAppend.2476"* nonnull byval(%"class.WTF::StringAppend.2476") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2763"* %0, %"class.WTF::StringAppend.2476"* nonnull byval(%"class.WTF::StringAppend.2476") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #18
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.2762"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #18
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %4, i8* %9) #18
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.2754"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #18
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #18
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %3, i8* %15) #18
  %16 = bitcast %"class.WTF::StringTypeAdapter.2754"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #18
  %17 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #18
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %2, i8* %18) #18
  %19 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #18
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #18
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #18
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #18
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.2762"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #18
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.2762"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #18
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !3

56:                                               ; preds = %49
  call void @llvm.trap() #18
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #18
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #18
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.2762"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #18
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.2762"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #18
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %85
  call void @llvm.trap() #18
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #18
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #18
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.2762"*, %"class.WTF::StringAppend.2763"* byval(%"class.WTF::StringAppend.2763") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.2763"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.2762"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2763", %"class.WTF::StringAppend.2763"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #18
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #18
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2763", %"class.WTF::StringAppend.2763"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2763", %"class.WTF::StringAppend.2763"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #18
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #18
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #18
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #18
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2763"*, %"class.WTF::StringAppend.2476"* byval(%"class.WTF::StringAppend.2476") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.2476"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.2763"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2763", %"class.WTF::StringAppend.2763"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #18
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #18
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2763", %"class.WTF::StringAppend.2763"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2763", %"class.WTF::StringAppend.2763"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #18
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %43
  tail call void @llvm.trap() #18
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #18
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #18
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.2762"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2754", %"class.WTF::StringTypeAdapter.2754"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %4, i8* %14) #18
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2763"* %9) #18
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #18
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2763"* %9) #18
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #18
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %25, i8* %26) #18
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #18
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #18
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #18
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #18
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #18
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* %41, i8* %42) #18
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #18
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #18
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #18
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.2762"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2756", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %4, i8* %9) #18
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2756"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #18
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2756"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2476"* %10, i8* %1) #18
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2476"* %10) #18
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2757"* nonnull %30, i8* %33) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #18
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2763"* %5) #18
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2754"* nonnull %4, i8* %36) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.2762"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2756", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %4, i8* %9) #18
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2756"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2762", %"class.WTF::StringAppend.2762"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #18
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2756"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2476"* %10, i16* %1) #18
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2476"* %10) #18
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2757"* nonnull %30, i16* %33) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #18
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2763"* %5) #18
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2754"* nonnull %4, i16* %36) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2763"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2763", %"class.WTF::StringAppend.2763"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2763", %"class.WTF::StringAppend.2763"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2476"* %8) #18
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #18
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2476"* %8) #18
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #18
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %26, i8* %27) #18
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #18
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #18
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #18
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #18
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #18
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* %41, i8* %42) #18
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #18
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #18
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #18
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2476"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2754", %"class.WTF::StringTypeAdapter.2754"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %4, i8* %14) #18
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2477"* %9) #18
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #18
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2477"* %9) #18
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #18
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %25, i8* %26) #18
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #18
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #18
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #18
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #18
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #18
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* %41, i8* %42) #18
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #18
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #18
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #18
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2477"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2754", %"class.WTF::StringTypeAdapter.2754"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2477", %"class.WTF::StringAppend.2477"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2754"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %4, i8* %13) #18
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2477", %"class.WTF::StringAppend.2477"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #18
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #18
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %30, i8* %31) #18
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #18
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #18
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #18
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #18
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #18
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* %45, i8* %46) #18
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #18
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #18
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #18
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2476"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2756", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2754"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2754"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %5, i8* %10) #18
  %11 = bitcast %"class.WTF::StringTypeAdapter.2754"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2754", %"class.WTF::StringTypeAdapter.2754"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #18
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %3, i8* %14) #18
  %15 = bitcast %"class.WTF::StringTypeAdapter.2756"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #18
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #18
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2756"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2754"* nonnull %3, i8* %1) #18
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2757"* nonnull %34, i8* %37) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #18
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2477"* %6) #18
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2754"* nonnull %5, i8* %40) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2476"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2756", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2754", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2754"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2754"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %5, i8* %10) #18
  %11 = bitcast %"class.WTF::StringTypeAdapter.2754"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2754", %"class.WTF::StringTypeAdapter.2754"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #18
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2754"* nonnull %3, i8* %14) #18
  %15 = bitcast %"class.WTF::StringTypeAdapter.2756"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #18
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2476", %"class.WTF::StringAppend.2476"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #18
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2756"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2754"* nonnull %3, i16* %1) #18
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2756", %"class.WTF::StringTypeAdapter.2756"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2757"* nonnull %34, i16* %37) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #18
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2477"* %6) #18
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2754"* nonnull %5, i16* %40) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #18
  ret void
}

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKNS_12AtomicStringESD_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.331"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.331"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #18
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #18
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #18
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %88
  tail call void @llvm.trap() #18
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #18
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.331"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.331"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #18
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #18
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i64 0, i64 0), i8* %22, i8* %23) #18
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.44, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #18
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #18
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #18
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #18
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #18
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.331"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #18
  ret %"class.WTF::String"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.331"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.331", align 8
  %6 = bitcast %"class.WTF::HashTable.331"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.331"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.331"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.331"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable.331"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.331"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #18
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #18
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #18
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.331"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #18
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #18
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.331"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #18
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #18
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEjjRKNS_10StringViewE(%"class.WTF::StringImpl"*, i32, i32, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117StyleSheetHandler15StartRuleHeaderENS_13StyleRuleBase8RuleTypeEj(%"class.blink::(anonymous namespace)::StyleSheetHandler"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSRuleSourceData"*, align 8
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 5
  %6 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %5, align 8
  %7 = icmp eq %"class.blink::CSSRuleSourceData"* %6, null
  br i1 %7, label %22, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, -1
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %12, align 8
  %14 = zext i32 %11 to i64
  %15 = zext i32 %10 to i64
  %16 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %13, i64 %14
  %17 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %13, i64 %15
  %18 = bitcast %"class.blink::Member.17"* %16 to i8*
  %19 = ptrtoint %"class.blink::Member.17"* %17 to i64
  %20 = ptrtoint %"class.blink::Member.17"* %16 to i64
  %21 = sub i64 %19, %20
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %18, i64 %21) #18
  store i32 %11, i32* %9, align 4
  br label %22

22:                                               ; preds = %3, %8
  %23 = bitcast %"class.blink::CSSRuleSourceData"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #18
  store %"class.blink::CSSRuleSourceData"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSRuleSourceData"*), %"class.blink::CSSRuleSourceData"** %4, align 8
  %24 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17CSSRuleSourceDataEEEPhm(i64 88) #18
  %25 = bitcast i8* %24 to i32*
  store i32 %1, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 4
  %27 = bitcast i8* %26 to %"class.blink::SourceRange"*
  tail call void @_ZN5blink11SourceRangeC1Ev(%"class.blink::SourceRange"* %27) #18
  %28 = getelementptr inbounds i8, i8* %24, i64 12
  %29 = bitcast i8* %28 to %"class.blink::SourceRange"*
  tail call void @_ZN5blink11SourceRangeC1Ev(%"class.blink::SourceRange"* %29) #18
  %30 = getelementptr inbounds i8, i8* %24, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 64, i1 false) #18
  %31 = getelementptr inbounds i8, i8* %24, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  %35 = bitcast %"class.blink::CSSRuleSourceData"** %4 to i8**
  store i8* %24, i8** %35, align 8
  %36 = bitcast i8* %26 to i32*
  store i32 %2, i32* %36, align 4
  %37 = bitcast %"class.blink::CSSRuleSourceData"** %4 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::CSSRuleSourceData"** %5 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0
  %41 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %60, label %46, !prof !3

46:                                               ; preds = %22
  %47 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %40, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %47, align 8
  %49 = zext i32 %42 to i64
  %50 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %48, i64 %49
  %51 = bitcast %"class.blink::Member.17"* %50 to i64*
  store atomic i64 %38, i64* %51 monotonic, align 8
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = inttoptr i64 %38 to i8*
  %56 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #18
  br label %57

57:                                               ; preds = %54, %46
  %58 = load i32, i32* %41, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %41, align 4
  br label %61

60:                                               ; preds = %22
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.33"* %40, %"class.blink::CSSRuleSourceData"** nonnull dereferenceable(8) %4) #18
  br label %61

61:                                               ; preds = %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117StyleSheetHandler13EndRuleHeaderEj(%"class.blink::(anonymous namespace)::StyleSheetHandler"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 1
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = icmp eq %"class.WTF::StringImpl"* %6, null
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %13 = icmp ugt i32 %1, 1
  br i1 %10, label %59, label %14

14:                                               ; preds = %2
  br i1 %13, label %15, label %29

15:                                               ; preds = %14
  %16 = bitcast %"class.WTF::StringImpl"* %12 to i8*
  %17 = select i1 %11, i8* null, i8* %16
  %18 = getelementptr inbounds i8, i8* %17, i64 -1
  br label %19

19:                                               ; preds = %26, %15
  %20 = phi i32 [ %1, %15 ], [ %27, %26 ]
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %18, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = icmp ult i8 %23, 33
  br i1 %24, label %25, label %29

25:                                               ; preds = %19
  switch i8 %23, label %29 [
    i8 32, label %26
    i8 10, label %26
    i8 9, label %26
    i8 13, label %26
    i8 12, label %26
  ]

26:                                               ; preds = %25, %25, %25, %25, %25
  %27 = add i32 %20, -1
  %28 = icmp ugt i32 %27, 1
  br i1 %28, label %19, label %29

29:                                               ; preds = %26, %25, %19, %14
  %30 = phi i32 [ %1, %14 ], [ %27, %26 ], [ %20, %19 ], [ %20, %25 ]
  %31 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0
  %32 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, -1
  %35 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %31, i32 %34) #18
  %36 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %37, i64 0, i32 1, i32 1
  store i32 %30, i32* %38, align 4
  %39 = load i32, i32* %32, align 4
  %40 = add i32 %39, -1
  %41 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %31, i32 %40) #18
  %42 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %43, i64 0, i32 3, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %104, label %47

47:                                               ; preds = %29
  %48 = load i32, i32* %32, align 4
  %49 = add i32 %48, -1
  %50 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %31, i32 %49) #18
  %51 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %52, i64 0, i32 3
  %54 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %52, i64 0, i32 3, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = add i32 %55, -1
  %57 = tail call dereferenceable(8) %"class.blink::SourceRange"* @_ZN3WTF6VectorIN5blink11SourceRangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.21"* %53, i32 %56) #18
  %58 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %57, i64 0, i32 1
  store i32 %30, i32* %58, align 4
  br label %104

59:                                               ; preds = %2
  br i1 %13, label %60, label %74

60:                                               ; preds = %59
  %61 = bitcast %"class.WTF::StringImpl"* %12 to i16*
  %62 = select i1 %11, i16* null, i16* %61
  %63 = getelementptr inbounds i16, i16* %62, i64 -1
  br label %64

64:                                               ; preds = %71, %60
  %65 = phi i32 [ %1, %60 ], [ %72, %71 ]
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i16, i16* %63, i64 %66
  %68 = load i16, i16* %67, align 2
  %69 = icmp ult i16 %68, 33
  br i1 %69, label %70, label %74

70:                                               ; preds = %64
  switch i16 %68, label %74 [
    i16 32, label %71
    i16 10, label %71
    i16 9, label %71
    i16 13, label %71
    i16 12, label %71
  ]

71:                                               ; preds = %70, %70, %70, %70, %70
  %72 = add i32 %65, -1
  %73 = icmp ugt i32 %72, 1
  br i1 %73, label %64, label %74

74:                                               ; preds = %71, %70, %64, %59
  %75 = phi i32 [ %1, %59 ], [ %72, %71 ], [ %65, %64 ], [ %65, %70 ]
  %76 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0
  %77 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %78, -1
  %80 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %76, i32 %79) #18
  %81 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %80, i64 0, i32 0, i32 0
  %82 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %82, i64 0, i32 1, i32 1
  store i32 %75, i32* %83, align 4
  %84 = load i32, i32* %77, align 4
  %85 = add i32 %84, -1
  %86 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %76, i32 %85) #18
  %87 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %88, i64 0, i32 3, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %104, label %92

92:                                               ; preds = %74
  %93 = load i32, i32* %77, align 4
  %94 = add i32 %93, -1
  %95 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %76, i32 %94) #18
  %96 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %97, i64 0, i32 3
  %99 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %97, i64 0, i32 3, i32 0, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = add i32 %100, -1
  %102 = tail call dereferenceable(8) %"class.blink::SourceRange"* @_ZN3WTF6VectorIN5blink11SourceRangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.21"* %98, i32 %101) #18
  %103 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %102, i64 0, i32 1
  store i32 %75, i32* %103, align 4
  br label %104

104:                                              ; preds = %92, %74, %47, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117StyleSheetHandler15ObserveSelectorEjj(%"class.blink::(anonymous namespace)::StyleSheetHandler"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::SourceRange"*
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -1
  %10 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %6, i32 %9) #18
  %11 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %12, i64 0, i32 3
  %14 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #18
  call void @_ZN5blink11SourceRangeC1Ejj(%"class.blink::SourceRange"* nonnull %5, i32 %1, i32 %2) #18
  %15 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %12, i64 0, i32 3, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %12, i64 0, i32 3, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %29, label %20, !prof !3

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %13, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::SourceRange"*, %"class.blink::SourceRange"** %21, align 8
  %23 = zext i32 %16 to i64
  %24 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %22, i64 %23
  %25 = bitcast %"class.blink::SourceRange"* %24 to i64*
  %26 = load i64, i64* %4, align 8
  store i64 %26, i64* %25, align 4
  %27 = load i32, i32* %15, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %15, align 4
  br label %30

29:                                               ; preds = %3
  call void @_ZN3WTF6VectorIN5blink11SourceRangeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.21"* %13, %"class.blink::SourceRange"* nonnull dereferenceable(8) %5) #18
  br label %30

30:                                               ; preds = %20, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117StyleSheetHandler13StartRuleBodyEj(%"class.blink::(anonymous namespace)::StyleSheetHandler"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 5
  store %"class.blink::CSSRuleSourceData"* null, %"class.blink::CSSRuleSourceData"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 1
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %35, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp ugt i32 %11, %1
  br i1 %12, label %13, label %35

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 1
  br i1 %17, label %25, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::StringImpl"* %18 to i8*
  %21 = zext i32 %1 to i64
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i16
  br label %30

25:                                               ; preds = %13
  %26 = bitcast %"class.WTF::StringImpl"* %18 to i16*
  %27 = zext i32 %1 to i64
  %28 = getelementptr inbounds i16, i16* %26, i64 %27
  %29 = load i16, i16* %28, align 2
  br label %30

30:                                               ; preds = %19, %25
  %31 = phi i16 [ %24, %19 ], [ %29, %25 ]
  %32 = icmp eq i16 %31, 123
  %33 = zext i1 %32 to i32
  %34 = add nuw i32 %33, %1
  br label %35

35:                                               ; preds = %30, %2, %9
  %36 = phi i32 [ %1, %9 ], [ %1, %2 ], [ %34, %30 ]
  %37 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0
  %38 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, -1
  %41 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %37, i32 %40) #18
  %42 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %43, i64 0, i32 2, i32 0
  store i32 %36, i32* %44, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117StyleSheetHandler11EndRuleBodyEj(%"class.blink::(anonymous namespace)::StyleSheetHandler"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSRuleSourceData"*, align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 5
  %5 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %4, align 8
  %6 = icmp eq %"class.blink::CSSRuleSourceData"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  br label %24

10:                                               ; preds = %2
  store %"class.blink::CSSRuleSourceData"* null, %"class.blink::CSSRuleSourceData"** %4, align 8
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, -1
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %14, align 8
  %16 = zext i32 %13 to i64
  %17 = zext i32 %12 to i64
  %18 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %15, i64 %16
  %19 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %15, i64 %17
  %20 = bitcast %"class.blink::Member.17"* %18 to i8*
  %21 = ptrtoint %"class.blink::Member.17"* %19 to i64
  %22 = ptrtoint %"class.blink::Member.17"* %18 to i64
  %23 = sub i64 %21, %22
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %20, i64 %23) #18
  store i32 %13, i32* %11, align 4
  br label %24

24:                                               ; preds = %7, %10
  %25 = phi i32 [ %9, %7 ], [ %13, %10 ]
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %28 = add i32 %25, -1
  %29 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %26, i32 %28) #18
  %30 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %31, i64 0, i32 2, i32 1
  store i32 %1, i32* %32, align 4
  store %"class.blink::CSSRuleSourceData"* null, %"class.blink::CSSRuleSourceData"** %4, align 8
  %33 = load i32, i32* %27, align 4
  %34 = add i32 %33, -1
  %35 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %26, i32 %34) #18
  %36 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %36, align 8
  %38 = load i32, i32* %27, align 4
  %39 = add i32 %38, -1
  %40 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %26, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %40, align 8
  %42 = zext i32 %39 to i64
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %41, i64 %42
  %45 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %41, i64 %43
  %46 = bitcast %"class.blink::Member.17"* %44 to i8*
  %47 = ptrtoint %"class.blink::Member.17"* %45 to i64
  %48 = ptrtoint %"class.blink::Member.17"* %44 to i64
  %49 = sub i64 %47, %48
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %46, i64 %49) #18
  store i32 %39, i32* %27, align 4
  %50 = bitcast %"class.blink::CSSRuleSourceData"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  store %"class.blink::CSSRuleSourceData"* %37, %"class.blink::CSSRuleSourceData"** %3, align 8
  %51 = icmp eq i32 %39, 0
  %52 = ptrtoint %"class.blink::CSSRuleSourceData"* %37 to i64
  br i1 %51, label %53, label %77

53:                                               ; preds = %24
  %54 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 3
  %55 = bitcast %"class.blink::HeapVector"** %54 to %"class.WTF::Vector.33"**
  %56 = load %"class.WTF::Vector.33"*, %"class.WTF::Vector.33"** %55, align 8
  %57 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %56, i64 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %56, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %76, label %62, !prof !3

62:                                               ; preds = %53
  %63 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %56, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %63, align 8
  %65 = zext i32 %58 to i64
  %66 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %64, i64 %65
  %67 = bitcast %"class.blink::Member.17"* %66 to i64*
  store atomic i64 %52, i64* %67 monotonic, align 8
  %68 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %62
  %71 = bitcast %"class.blink::CSSRuleSourceData"* %37 to i8*
  %72 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %71) #18
  br label %73

73:                                               ; preds = %70, %62
  %74 = load i32, i32* %57, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %57, align 4
  br label %103

76:                                               ; preds = %53
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.33"* %56, %"class.blink::CSSRuleSourceData"** nonnull dereferenceable(8) %3) #18
  br label %103

77:                                               ; preds = %24
  %78 = add i32 %38, -2
  %79 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %26, i32 %78) #18
  %80 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %79, i64 0, i32 0, i32 0
  %81 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %81, i64 0, i32 5, i32 0
  %83 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %81, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %81, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %84, %86
  br i1 %87, label %102, label %88, !prof !3

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %82, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %89, align 8
  %91 = zext i32 %84 to i64
  %92 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %90, i64 %91
  %93 = bitcast %"class.blink::Member.17"* %92 to i64*
  store atomic i64 %52, i64* %93 monotonic, align 8
  %94 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %88
  %97 = bitcast %"class.blink::CSSRuleSourceData"* %37 to i8*
  %98 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %97) #18
  br label %99

99:                                               ; preds = %96, %88
  %100 = load i32, i32* %83, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %83, align 4
  br label %103

102:                                              ; preds = %77
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.33"* %82, %"class.blink::CSSRuleSourceData"** nonnull dereferenceable(8) %3) #18
  br label %103

103:                                              ; preds = %73, %76, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117StyleSheetHandler15ObservePropertyEjjbb(%"class.blink::(anonymous namespace)::StyleSheetHandler"*, i32, i32, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::CSSPropertySourceData", align 8
  %13 = alloca %"class.blink::SourceRange", align 4
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %315, label %18

18:                                               ; preds = %5
  %19 = add i32 %16, -1
  %20 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %14, i32 %19) #18
  %21 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  switch i32 %24, label %315 [
    i32 1, label %25
    i32 4, label %25
    i32 5, label %25
    i32 8, label %25
  ]

25:                                               ; preds = %18, %18, %18, %18
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 1
  %27 = load %"class.WTF::String"*, %"class.WTF::String"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %57, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %33, %2
  br i1 %34, label %35, label %57

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  br i1 %39, label %47, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  %43 = zext i32 %2 to i64
  %44 = getelementptr inbounds i8, i8* %42, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i16
  br label %52

47:                                               ; preds = %35
  %48 = bitcast %"class.WTF::StringImpl"* %40 to i16*
  %49 = zext i32 %2 to i64
  %50 = getelementptr inbounds i16, i16* %48, i64 %49
  %51 = load i16, i16* %50, align 2
  br label %52

52:                                               ; preds = %41, %47
  %53 = phi i16 [ %46, %41 ], [ %51, %47 ]
  %54 = icmp eq i16 %53, 59
  %55 = zext i1 %54 to i32
  %56 = add nuw i32 %55, %2
  br label %57

57:                                               ; preds = %52, %25, %31
  %58 = phi i32 [ %2, %31 ], [ %2, %25 ], [ %56, %52 ]
  %59 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #18
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %60, align 8
  %61 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #18
  %62 = sub i32 %58, %1
  %63 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %27, i32 %1, i32 %62) #18
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  %65 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %7) #18
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %60, align 8
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %83, label %68

68:                                               ; preds = %57
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #18
  br label %81

81:                                               ; preds = %80, %77
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  br label %83

83:                                               ; preds = %81, %57
  %84 = phi %"class.WTF::StringImpl"* [ %82, %81 ], [ %65, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #18
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %115, label %86

86:                                               ; preds = %83
  %87 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"* nonnull %84, i16 zeroext 59) #18
  br i1 %87, label %88, label %115

88:                                               ; preds = %86
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  br label %94

94:                                               ; preds = %88, %91
  %95 = phi i32 [ %93, %91 ], [ 0, %88 ]
  %96 = add i32 %95, -1
  %97 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %6, i32 0, i32 %96) #18
  %98 = ptrtoint %"class.WTF::StringImpl"* %97 to i64
  %99 = bitcast %"class.WTF::String"* %6 to i64*
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  store i64 %98, i64* %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %117, label %102

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #18
  br label %115

115:                                              ; preds = %83, %86, %114, %111
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  br label %117

117:                                              ; preds = %115, %94
  %118 = phi %"class.WTF::StringImpl"* [ %116, %115 ], [ %97, %94 ]
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %157, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 1
  br i1 %124, label %140, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %157, label %130

130:                                              ; preds = %126
  %131 = bitcast %"class.WTF::StringImpl"* %125 to i8*
  %132 = zext i32 %128 to i64
  %133 = call i8* @memchr(i8* %131, i32 58, i64 %132) #20
  %134 = icmp eq i8* %133, null
  %135 = ptrtoint i8* %133 to i64
  %136 = ptrtoint %"class.WTF::StringImpl"* %125 to i64
  %137 = sub i64 %135, %136
  %138 = trunc i64 %137 to i32
  %139 = select i1 %134, i32 -1, i32 %138
  br label %157

140:                                              ; preds = %120
  %141 = bitcast %"class.WTF::StringImpl"* %125 to i16*
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %140
  %146 = zext i32 %143 to i64
  br label %147

147:                                              ; preds = %145, %152
  %148 = phi i64 [ %153, %152 ], [ 0, %145 ]
  %149 = getelementptr inbounds i16, i16* %141, i64 %148
  %150 = load i16, i16* %149, align 2
  %151 = icmp eq i16 %150, 58
  br i1 %151, label %155, label %152

152:                                              ; preds = %147
  %153 = add nuw nsw i64 %148, 1
  %154 = icmp eq i64 %153, %146
  br i1 %154, label %157, label %147

155:                                              ; preds = %147
  %156 = trunc i64 %148 to i32
  br label %157

157:                                              ; preds = %152, %140, %126, %117, %130, %155
  %158 = phi i32 [ -1, %117 ], [ -1, %126 ], [ %139, %130 ], [ -1, %140 ], [ %156, %155 ], [ -1, %152 ]
  %159 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #18
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %161 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #18
  %162 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %6, i32 0, i32 %158) #18
  %163 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %162, %"class.WTF::StringImpl"** %163, align 8
  %164 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %9) #18
  store %"class.WTF::StringImpl"* %164, %"class.WTF::StringImpl"** %160, align 8
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %157
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #18
  br label %180

180:                                              ; preds = %157, %176, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #18
  %181 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #18
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %182, align 8
  %183 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #18
  %184 = add i32 %158, 1
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %190, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 1
  %189 = load i32, i32* %188, align 4
  br label %190

190:                                              ; preds = %180, %187
  %191 = phi i32 [ %189, %187 ], [ 0, %180 ]
  %192 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %6, i32 %184, i32 %191) #18
  %193 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %192, %"class.WTF::StringImpl"** %193, align 8
  %194 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %11) #18
  store %"class.WTF::StringImpl"* %194, %"class.WTF::StringImpl"** %182, align 8
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %196, label %210, label %197

197:                                              ; preds = %190
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load atomic i32, i32* %198 monotonic, align 4
  %200 = and i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  br i1 %201, label %204, label %206

204:                                              ; preds = %197
  %205 = add i32 %203, -1
  store i32 %205, i32* %202, align 4
  br label %206

206:                                              ; preds = %204, %197
  %207 = phi i32 [ %205, %204 ], [ %203, %197 ]
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %206
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %195) #18
  br label %210

210:                                              ; preds = %190, %206, %209
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #18
  %211 = load i32, i32* %15, align 4
  %212 = add i32 %211, -1
  %213 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %14, i32 %212) #18
  %214 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %213, i64 0, i32 0, i32 0
  %215 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %214, align 8
  %216 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %215, i64 0, i32 4
  %217 = bitcast %"class.blink::CSSPropertySourceData"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %217) #18
  %218 = bitcast %"class.blink::SourceRange"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #18
  call void @_ZN5blink11SourceRangeC1Ejj(%"class.blink::SourceRange"* nonnull %13, i32 %1, i32 %58) #18
  call void @_ZN5blink21CSSPropertySourceDataC1ERKN3WTF6StringES4_bbbRKNS_11SourceRangeE(%"class.blink::CSSPropertySourceData"* nonnull %12, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %10, i1 zeroext %3, i1 zeroext false, i1 zeroext %4, %"class.blink::SourceRange"* nonnull dereferenceable(8) %13) #18
  %219 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %215, i64 0, i32 4, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %215, i64 0, i32 4, i32 0, i32 0, i32 1
  %222 = load i32, i32* %221, align 8
  %223 = icmp eq i32 %220, %222
  br i1 %223, label %231, label %224, !prof !3

224:                                              ; preds = %210
  %225 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %216, i64 0, i32 0, i32 0, i32 0
  %226 = load %"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"** %225, align 8
  %227 = zext i32 %220 to i64
  %228 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %226, i64 %227
  call void @_ZN5blink21CSSPropertySourceDataC1ERKS0_(%"class.blink::CSSPropertySourceData"* %228, %"class.blink::CSSPropertySourceData"* nonnull dereferenceable(32) %12) #18
  %229 = load i32, i32* %219, align 4
  %230 = add i32 %229, 1
  store i32 %230, i32* %219, align 4
  br label %232

231:                                              ; preds = %210
  call void @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.26"* %216, %"class.blink::CSSPropertySourceData"* nonnull dereferenceable(32) %12) #18
  br label %232

232:                                              ; preds = %224, %231
  %233 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %12, i64 0, i32 1, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #18
  br label %249

249:                                              ; preds = %248, %245, %232
  %250 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %12, i64 0, i32 0, i32 0, i32 0
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %250, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = and i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 0
  %259 = load i32, i32* %258, align 4
  br i1 %257, label %260, label %262

260:                                              ; preds = %253
  %261 = add i32 %259, -1
  store i32 %261, i32* %258, align 4
  br label %262

262:                                              ; preds = %260, %253
  %263 = phi i32 [ %261, %260 ], [ %259, %253 ]
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %262
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %251) #18
  br label %266

266:                                              ; preds = %249, %262, %265
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %217) #18
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %268 = icmp eq %"class.WTF::StringImpl"* %267, null
  br i1 %268, label %282, label %269

269:                                              ; preds = %266
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = load atomic i32, i32* %270 monotonic, align 4
  %272 = and i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  br i1 %273, label %276, label %278

276:                                              ; preds = %269
  %277 = add i32 %275, -1
  store i32 %277, i32* %274, align 4
  br label %278

278:                                              ; preds = %276, %269
  %279 = phi i32 [ %277, %276 ], [ %275, %269 ]
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %278
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %267) #18
  br label %282

282:                                              ; preds = %266, %278, %281
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #18
  %283 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %284 = icmp eq %"class.WTF::StringImpl"* %283, null
  br i1 %284, label %298, label %285

285:                                              ; preds = %282
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = and i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  br i1 %289, label %292, label %294

292:                                              ; preds = %285
  %293 = add i32 %291, -1
  store i32 %293, i32* %290, align 4
  br label %294

294:                                              ; preds = %292, %285
  %295 = phi i32 [ %293, %292 ], [ %291, %285 ]
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %294
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %283) #18
  br label %298

298:                                              ; preds = %282, %294, %297
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #18
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %300 = icmp eq %"class.WTF::StringImpl"* %299, null
  br i1 %300, label %314, label %301

301:                                              ; preds = %298
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load atomic i32, i32* %302 monotonic, align 4
  %304 = and i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 0
  %307 = load i32, i32* %306, align 4
  br i1 %305, label %308, label %310

308:                                              ; preds = %301
  %309 = add i32 %307, -1
  store i32 %309, i32* %306, align 4
  br label %310

310:                                              ; preds = %308, %301
  %311 = phi i32 [ %309, %308 ], [ %307, %301 ]
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %310
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %299) #18
  br label %314

314:                                              ; preds = %298, %310, %313
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #18
  br label %315

315:                                              ; preds = %18, %5, %314
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117StyleSheetHandler14ObserveCommentEjj(%"class.blink::(anonymous namespace)::StyleSheetHandler"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::(anonymous namespace)::StyleSheetHandler", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.blink::CSSPropertySourceData", align 8
  %13 = alloca %"class.blink::SourceRange", align 4
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %301, label %18

18:                                               ; preds = %3
  %19 = add i32 %16, -1
  %20 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %14, i32 %19) #18
  %21 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %22, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %301, label %26

26:                                               ; preds = %18
  %27 = load i32, i32* %15, align 4
  %28 = add i32 %27, -1
  %29 = tail call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %14, i32 %28) #18
  %30 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %31, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  switch i32 %33, label %301 [
    i32 1, label %34
    i32 4, label %34
    i32 5, label %34
    i32 8, label %34
  ]

34:                                               ; preds = %26, %26, %26, %26
  %35 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #18
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 1
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %37, align 8
  %39 = sub i32 %2, %1
  %40 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %38, i32 %1, i32 %39) #18
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %36, align 8
  %41 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %4, i32 2, i32 -1) #18
  %42 = ptrtoint %"class.WTF::StringImpl"* %41 to i64
  %43 = bitcast %"class.WTF::String"* %4 to i64*
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  store i64 %42, i64* %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #18
  br label %59

59:                                               ; preds = %58, %55, %34
  %60 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #18
  %61 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %62 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i64 0, i64 0), i8** %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 2, i32* %64, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %67, label %68

67:                                               ; preds = %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #18
  br label %300

68:                                               ; preds = %59
  %69 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %65, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #18
  br i1 %69, label %70, label %284

70:                                               ; preds = %68
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %72 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #18
  %73 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  br label %77

77:                                               ; preds = %70, %74
  %78 = phi i32 [ %76, %74 ], [ 0, %70 ]
  %79 = add i32 %78, -2
  %80 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %4, i32 0, i32 %79) #18
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %81, align 8
  %82 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %6) #18
  %83 = ptrtoint %"class.WTF::StringImpl"* %82 to i64
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  store i64 %83, i64* %43, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %77
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #18
  br label %99

99:                                               ; preds = %98, %95, %77
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #18
  br label %115

115:                                              ; preds = %99, %111, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #18
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %300, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %284, label %122

122:                                              ; preds = %118
  %123 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEEEPhm(i64 16) #18
  %124 = getelementptr inbounds i8, i8* %123, i64 -4
  %125 = bitcast i8* %124 to i16*
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 16, i1 false) #18
  %126 = load atomic i16, i16* %125 monotonic, align 2
  %127 = or i16 %126, 1
  store atomic i16 %127, i16* %125 release, align 2
  %128 = bitcast %"class.blink::(anonymous namespace)::StyleSheetHandler"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %128) #18
  %129 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %0, i64 0, i32 2
  %130 = load %"class.blink::Document"*, %"class.blink::Document"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_117StyleSheetHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  %132 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %7, i64 0, i32 1
  store %"class.WTF::String"* %4, %"class.WTF::String"** %132, align 8
  %133 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %7, i64 0, i32 2
  store %"class.blink::Document"* %130, %"class.blink::Document"** %133, align 8
  %134 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %7, i64 0, i32 3
  %135 = bitcast %"class.blink::HeapVector"** %134 to i8**
  store i8* %123, i8** %135, align 8
  %136 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %7, i64 0, i32 4
  %137 = bitcast %"class.blink::HeapVector"* %136 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 24, i1 false) #18
  %138 = icmp eq %"class.blink::Document"* %130, null
  br i1 %138, label %146, label %139

139:                                              ; preds = %122
  %140 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #18
  %141 = bitcast i8* %140 to %"class.blink::CSSParserContext"*
  call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"* %141, %"class.blink::Document"* nonnull dereferenceable(2848) %130) #18
  %142 = getelementptr inbounds i8, i8* %140, i64 -4
  %143 = bitcast i8* %142 to i16*
  %144 = load atomic i16, i16* %143 monotonic, align 2
  %145 = or i16 %144, 1
  store atomic i16 %145, i16* %143 release, align 2
  br label %148

146:                                              ; preds = %122
  %147 = call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 0) #18
  br label %148

148:                                              ; preds = %139, %146
  %149 = phi %"class.blink::CSSParserContext"* [ %141, %139 ], [ %147, %146 ]
  %150 = getelementptr inbounds %"class.blink::(anonymous namespace)::StyleSheetHandler", %"class.blink::(anonymous namespace)::StyleSheetHandler"* %7, i64 0, i32 0
  call void @_ZN5blink9CSSParser32ParseDeclarationListForInspectorEPKNS_16CSSParserContextERKN3WTF6StringERNS_17CSSParserObserverE(%"class.blink::CSSParserContext"* %149, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::CSSParserObserver"* nonnull dereferenceable(8) %150) #18
  %151 = bitcast i8* %123 to %"class.WTF::Vector.33"*
  %152 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %151, i32 0) #18
  %153 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %152, i64 0, i32 0, i32 0
  %154 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %154, i64 0, i32 4, i32 0, i32 0, i32 2
  %156 = load i32, i32* %155, align 4
  %157 = icmp eq i32 %156, 1
  br i1 %157, label %158, label %283

158:                                              ; preds = %148
  %159 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %154, i64 0, i32 4
  %160 = call dereferenceable(32) %"class.blink::CSSPropertySourceData"* @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.26"* %159, i32 0)
  %161 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %160, i64 0, i32 4
  %162 = load i8, i8* %161, align 2, !range !4
  %163 = icmp eq i8 %162, 0
  %164 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %164) #18
  %165 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #18
  %166 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #18
  %167 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #18
  br i1 %163, label %168, label %211

168:                                              ; preds = %158
  %169 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %170 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %169, i64* %170, align 8
  %171 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0), i8** %171, align 8
  %172 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 5, i32* %172, align 8
  %173 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %160, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %175, label %180, label %176

176:                                              ; preds = %168
  %177 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %174, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #18
  br i1 %177, label %211, label %178

178:                                              ; preds = %176
  %179 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %180

180:                                              ; preds = %178, %168
  %181 = phi i64 [ %179, %178 ], [ %169, %168 ]
  %182 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0), i8** %183, align 8
  %184 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 3, i32* %184, align 8
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %191, label %187

187:                                              ; preds = %180
  %188 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %185, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #18
  br i1 %188, label %211, label %189

189:                                              ; preds = %187
  %190 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %191

191:                                              ; preds = %189, %180
  %192 = phi i64 [ %190, %189 ], [ %181, %180 ]
  %193 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %192, i64* %193, align 8
  %194 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i64 0, i64 0), i8** %194, align 8
  %195 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 8, i32* %195, align 8
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %202, label %198

198:                                              ; preds = %191
  %199 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %196, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #18
  br i1 %199, label %211, label %200

200:                                              ; preds = %198
  %201 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %202

202:                                              ; preds = %200, %191
  %203 = phi i64 [ %201, %200 ], [ %192, %191 ]
  %204 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %203, i64* %204, align 8
  %205 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i64 0, i64 0), i8** %205, align 8
  %206 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 4, i32* %206, align 8
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %282, label %209

209:                                              ; preds = %202
  %210 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %207, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #18
  br i1 %210, label %212, label %283

211:                                              ; preds = %158, %176, %187, %198
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #18
  br label %212

212:                                              ; preds = %211, %209
  %213 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %160, i64 0, i32 6
  %214 = call i32 @_ZNK5blink11SourceRange6lengthEv(%"class.blink::SourceRange"* %213) #18
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %220, label %217

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 1
  %219 = load i32, i32* %218, align 4
  br label %220

220:                                              ; preds = %212, %217
  %221 = phi i32 [ %219, %217 ], [ 0, %212 ]
  %222 = icmp eq i32 %214, %221
  br i1 %222, label %223, label %283

223:                                              ; preds = %220
  %224 = load i32, i32* %15, align 4
  %225 = add i32 %224, -1
  %226 = call dereferenceable(8) %"class.blink::Member.17"* @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.33"* %14, i32 %225) #18
  %227 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %226, i64 0, i32 0, i32 0
  %228 = load %"class.blink::CSSRuleSourceData"*, %"class.blink::CSSRuleSourceData"** %227, align 8
  %229 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %228, i64 0, i32 4
  %230 = bitcast %"class.blink::CSSPropertySourceData"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %230) #18
  %231 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %160, i64 0, i32 0
  %232 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %160, i64 0, i32 1
  %233 = bitcast %"class.blink::SourceRange"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #18
  call void @_ZN5blink11SourceRangeC1Ejj(%"class.blink::SourceRange"* nonnull %13, i32 %1, i32 %2) #18
  call void @_ZN5blink21CSSPropertySourceDataC1ERKN3WTF6StringES4_bbbRKNS_11SourceRangeE(%"class.blink::CSSPropertySourceData"* nonnull %12, %"class.WTF::String"* dereferenceable(8) %231, %"class.WTF::String"* dereferenceable(8) %232, i1 zeroext false, i1 zeroext true, i1 zeroext true, %"class.blink::SourceRange"* nonnull dereferenceable(8) %13) #18
  %234 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %228, i64 0, i32 4, i32 0, i32 0, i32 2
  %235 = load i32, i32* %234, align 4
  %236 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %228, i64 0, i32 4, i32 0, i32 0, i32 1
  %237 = load i32, i32* %236, align 8
  %238 = icmp eq i32 %235, %237
  br i1 %238, label %246, label %239, !prof !3

239:                                              ; preds = %223
  %240 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %229, i64 0, i32 0, i32 0, i32 0
  %241 = load %"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"** %240, align 8
  %242 = zext i32 %235 to i64
  %243 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %241, i64 %242
  call void @_ZN5blink21CSSPropertySourceDataC1ERKS0_(%"class.blink::CSSPropertySourceData"* %243, %"class.blink::CSSPropertySourceData"* nonnull dereferenceable(32) %12) #18
  %244 = load i32, i32* %234, align 4
  %245 = add i32 %244, 1
  store i32 %245, i32* %234, align 4
  br label %247

246:                                              ; preds = %223
  call void @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.26"* %229, %"class.blink::CSSPropertySourceData"* nonnull dereferenceable(32) %12) #18
  br label %247

247:                                              ; preds = %239, %246
  %248 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %12, i64 0, i32 1, i32 0, i32 0
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #18
  br label %264

264:                                              ; preds = %263, %260, %247
  %265 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %12, i64 0, i32 0, i32 0, i32 0
  %266 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %265, align 8
  %267 = icmp eq %"class.WTF::StringImpl"* %266, null
  br i1 %267, label %281, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load atomic i32, i32* %269 monotonic, align 4
  %271 = and i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 0
  %274 = load i32, i32* %273, align 4
  br i1 %272, label %275, label %277

275:                                              ; preds = %268
  %276 = add i32 %274, -1
  store i32 %276, i32* %273, align 4
  br label %277

277:                                              ; preds = %275, %268
  %278 = phi i32 [ %276, %275 ], [ %274, %268 ]
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %281

280:                                              ; preds = %277
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %266) #18
  br label %281

281:                                              ; preds = %264, %277, %280
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %230) #18
  br label %283

282:                                              ; preds = %202
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #18
  br label %283

283:                                              ; preds = %282, %281, %220, %209, %148
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %128) #18
  br label %284

284:                                              ; preds = %118, %68, %283
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %284
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #18
  br label %300

300:                                              ; preds = %67, %115, %284, %296, %299
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #18
  br label %301

301:                                              ; preds = %26, %18, %3, %300
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17CSSRuleSourceDataEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #18
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17CSSRuleSourceDataEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17CSSRuleSourceDataEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17CSSRuleSourceDataEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17CSSRuleSourceDataEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #18
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #18
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #18
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #18
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.45, i64 0, i64 0), i8* %21, i8* %22) #18
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #18
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.46, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #18
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #18
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #18
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #18
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17CSSRuleSourceDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 56
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast i8* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #18
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %0, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #18
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17CSSRuleSourceDataEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSRuleSourceData"*
  tail call void @_ZN5blink17CSSRuleSourceDataD2Ev(%"class.blink::CSSRuleSourceData"* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17CSSRuleSourceDataEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast i8* %1 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #18
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #18
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.17"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.17"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17CSSRuleSourceDataEE5TraceEPNS_7VisitorEPKv) #18
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17CSSRuleSourceDataD2Ev(%"class.blink::CSSRuleSourceData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.WTF::Vector.37", %"class.WTF::Vector.37"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::Vector.21"*, %"class.WTF::Vector.21"** %3, align 8
  %5 = icmp eq %"class.WTF::Vector.21"* %4, null
  br i1 %5, label %34, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::Vector.21"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %32, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %4, i64 %12
  br label %14

14:                                               ; preds = %26, %11
  %15 = phi %"class.WTF::Vector.21"* [ %27, %26 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::SourceRange"*, %"class.blink::SourceRange"** %16, align 8
  %18 = icmp eq %"class.blink::SourceRange"* %17, null
  %19 = bitcast %"class.blink::SourceRange"* %17 to i8*
  br i1 %18, label %26, label %20, !prof !2

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %15, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24, !prof !3

24:                                               ; preds = %20
  store i32 0, i32* %21, align 4
  br label %25

25:                                               ; preds = %24, %20
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %19) #18
  store %"class.blink::SourceRange"* null, %"class.blink::SourceRange"** %16, align 8
  br label %26

26:                                               ; preds = %25, %14
  %27 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %15, i64 1
  %28 = icmp eq %"class.WTF::Vector.21"* %27, %13
  br i1 %28, label %29, label %14

29:                                               ; preds = %26
  store i32 0, i32* %8, align 4
  %30 = bitcast %"class.WTF::Vector.37"* %2 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %29, %6
  %33 = phi i8* [ %31, %29 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %33) #18
  store %"class.WTF::Vector.21"* null, %"class.WTF::Vector.21"** %3, align 8
  br label %34

34:                                               ; preds = %1, %32
  %35 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %0, i64 0, i32 4
  %36 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"** %36, align 8
  %38 = icmp eq %"class.blink::CSSPropertySourceData"* %37, null
  br i1 %38, label %90, label %39, !prof !2

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::CSSPropertySourceData"* %37 to i8*
  %41 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %88, label %44, !prof !3

44:                                               ; preds = %39
  %45 = zext i32 %42 to i64
  %46 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %37, i64 %45
  br label %47

47:                                               ; preds = %44, %82
  %48 = phi %"class.blink::CSSPropertySourceData"* [ %83, %82 ], [ %37, %44 ]
  %49 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %48, i64 0, i32 1, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #18
  br label %65

65:                                               ; preds = %64, %61, %47
  %66 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %48, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #18
  br label %82

82:                                               ; preds = %81, %78, %65
  %83 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %48, i64 1
  %84 = icmp eq %"class.blink::CSSPropertySourceData"* %83, %46
  br i1 %84, label %85, label %47

85:                                               ; preds = %82
  store i32 0, i32* %41, align 4
  %86 = bitcast %"class.WTF::Vector.26"* %35 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %85, %39
  %89 = phi i8* [ %87, %85 ], [ %40, %39 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #18
  store %"class.blink::CSSPropertySourceData"* null, %"class.blink::CSSPropertySourceData"** %36, align 8
  br label %90

90:                                               ; preds = %34, %88
  %91 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %92 = load %"class.blink::SourceRange"*, %"class.blink::SourceRange"** %91, align 8
  %93 = icmp eq %"class.blink::SourceRange"* %92, null
  %94 = bitcast %"class.blink::SourceRange"* %92 to i8*
  br i1 %93, label %101, label %95, !prof !2

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99, !prof !3

99:                                               ; preds = %95
  store i32 0, i32* %96, align 4
  br label %100

100:                                              ; preds = %99, %95
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %94) #18
  store %"class.blink::SourceRange"* null, %"class.blink::SourceRange"** %91, align 8
  br label %101

101:                                              ; preds = %90, %100
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.33"*, %"class.blink::CSSRuleSourceData"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.33"* %0, i32 %14) #18
  %15 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %16, i64 %18
  %20 = bitcast %"class.blink::CSSRuleSourceData"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.17"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #18
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.33"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %8, align 8
  %10 = icmp eq %"class.blink::Member.17"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17CSSRuleSourceDataEEEEEmm(i64 %11) #18
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #18
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.33"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #18
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %8, align 8
  %26 = icmp eq %"class.blink::Member.17"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.17"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #18
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #18
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #18
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25, i64 0, i64 0)) #18
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #18
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.33"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17CSSRuleSourceDataEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.33"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.33"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.33"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #18
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #18
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17CSSRuleSourceDataEEEEEmm(i64 %14) #18
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #18
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.17"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.17"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.33"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #18
  %33 = bitcast %"class.WTF::Vector.33"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #18
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #18
  %42 = bitcast %"class.WTF::Vector.33"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #18
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17CSSRuleSourceDataEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.48, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.49, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.50, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #18
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([175 x i8], [175 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17CSSRuleSourceDataEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSRuleSourceDataEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::SourceRange"* @_ZN3WTF6VectorIN5blink11SourceRangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.21"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::SourceRange"*, %"class.blink::SourceRange"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %24, i64 %25
  ret %"class.blink::SourceRange"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11SourceRangeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.21"*, %"class.blink::SourceRange"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::SourceRange"*, %"class.blink::SourceRange"** %6, align 8
  %8 = icmp ugt %"class.blink::SourceRange"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %7, i64 %10
  %12 = icmp ugt %"class.blink::SourceRange"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::SourceRange"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11SourceRangeEEEmm(i64 %26) #18
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11SourceRangeEEEPKcv, i64 0, i64 0)) #18
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::SourceRange"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::SourceRange"*, %"class.blink::SourceRange"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::SourceRange"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::SourceRange"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #18
  %47 = bitcast %"class.WTF::Vector.21"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #18
  %51 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::SourceRange"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::SourceRange"* %1 to i64
  %56 = ptrtoint %"class.blink::SourceRange"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::SourceRange"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11SourceRangeEEEmm(i64 %71) #18
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11SourceRangeEEEPKcv, i64 0, i64 0)) #18
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::SourceRange"*, %"class.blink::SourceRange"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::SourceRange"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::SourceRange"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #18
  %87 = bitcast %"class.WTF::Vector.21"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #18
  %91 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::SourceRange"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::SourceRange"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::SourceRange"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::SourceRange"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %100, i64 %103
  %105 = bitcast %"class.blink::SourceRange"* %101 to i64*
  %106 = bitcast %"class.blink::SourceRange"* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11SourceRangeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.27, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #18
  ret i64 %21
}

declare zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"*, i16 zeroext) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #14

declare zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink17StyleRuleKeyframe7KeyTextEv(%"class.blink::StyleRuleKeyframe"*) local_unnamed_addr #2

declare i32 @_ZN3WTF10StringImpl11ReverseFindERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #2

declare i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) #7 comdat {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %4, null
  %8 = icmp ne %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %9, label %15

9:                                                ; preds = %2
  br i1 %8, label %10, label %168

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = sext i1 %13 to i32
  br label %168

15:                                               ; preds = %2
  br i1 %8, label %21, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  %20 = zext i1 %19 to i32
  br label %168

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 1
  %29 = icmp ne i32 %28, 0
  br i1 %25, label %94, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %32, %34
  %36 = select i1 %35, i32 %32, i32 %34
  %37 = icmp eq i32 %36, 0
  br i1 %29, label %38, label %64

38:                                               ; preds = %30
  br i1 %37, label %59, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %51, %39
  %45 = phi i32 [ %54, %51 ], [ 0, %39 ]
  %46 = phi i8* [ %53, %51 ], [ %41, %39 ]
  %47 = phi i8* [ %52, %51 ], [ %43, %39 ]
  %48 = load i8, i8* %47, align 1
  %49 = load i8, i8* %46, align 1
  %50 = icmp eq i8 %48, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = getelementptr inbounds i8, i8* %46, i64 1
  %54 = add nuw i32 %45, 1
  %55 = icmp ult i32 %54, %36
  br i1 %55, label %44, label %59

56:                                               ; preds = %44
  %57 = icmp ugt i8 %48, %49
  %58 = select i1 %57, i32 1, i32 -1
  br label %168

59:                                               ; preds = %51, %38
  %60 = icmp eq i32 %32, %34
  br i1 %60, label %168, label %61

61:                                               ; preds = %59
  %62 = icmp ugt i32 %32, %34
  %63 = select i1 %62, i32 1, i32 -1
  br label %168

64:                                               ; preds = %30
  br i1 %37, label %89, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %67 = bitcast %"class.WTF::StringImpl"* %66 to i16*
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %69 = bitcast %"class.WTF::StringImpl"* %68 to i8*
  br label %70

70:                                               ; preds = %79, %65
  %71 = phi i32 [ %82, %79 ], [ 0, %65 ]
  %72 = phi i16* [ %81, %79 ], [ %67, %65 ]
  %73 = phi i8* [ %80, %79 ], [ %69, %65 ]
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = load i16, i16* %72, align 2
  %77 = zext i16 %76 to i32
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %70
  %80 = getelementptr inbounds i8, i8* %73, i64 1
  %81 = getelementptr inbounds i16, i16* %72, i64 1
  %82 = add nuw i32 %71, 1
  %83 = icmp ult i32 %82, %36
  br i1 %83, label %70, label %89

84:                                               ; preds = %70
  %85 = zext i8 %74 to i32
  %86 = zext i16 %76 to i32
  %87 = icmp ugt i32 %85, %86
  %88 = select i1 %87, i32 1, i32 -1
  br label %168

89:                                               ; preds = %79, %64
  %90 = icmp eq i32 %32, %34
  br i1 %90, label %168, label %91

91:                                               ; preds = %89
  %92 = icmp ugt i32 %32, %34
  %93 = select i1 %92, i32 1, i32 -1
  br label %168

94:                                               ; preds = %21
  br i1 %29, label %95, label %135

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp ult i32 %97, %99
  %101 = select i1 %100, i32 %97, i32 %99
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %127, label %103

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %105 = bitcast %"class.WTF::StringImpl"* %104 to i16*
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %107 = bitcast %"class.WTF::StringImpl"* %106 to i8*
  br label %108

108:                                              ; preds = %117, %103
  %109 = phi i32 [ %120, %117 ], [ 0, %103 ]
  %110 = phi i16* [ %119, %117 ], [ %105, %103 ]
  %111 = phi i8* [ %118, %117 ], [ %107, %103 ]
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = load i16, i16* %110, align 2
  %115 = zext i16 %114 to i32
  %116 = icmp eq i32 %113, %115
  br i1 %116, label %117, label %122

117:                                              ; preds = %108
  %118 = getelementptr inbounds i8, i8* %111, i64 1
  %119 = getelementptr inbounds i16, i16* %110, i64 1
  %120 = add nuw i32 %109, 1
  %121 = icmp ult i32 %120, %101
  br i1 %121, label %108, label %127

122:                                              ; preds = %108
  %123 = zext i8 %112 to i32
  %124 = zext i16 %114 to i32
  %125 = icmp ugt i32 %123, %124
  %126 = select i1 %125, i32 1, i32 -1
  br label %132

127:                                              ; preds = %117, %95
  %128 = icmp eq i32 %97, %99
  br i1 %128, label %132, label %129

129:                                              ; preds = %127
  %130 = icmp ugt i32 %97, %99
  %131 = select i1 %130, i32 1, i32 -1
  br label %132

132:                                              ; preds = %129, %127, %122
  %133 = phi i32 [ %126, %122 ], [ %131, %129 ], [ 0, %127 ]
  %134 = sub nsw i32 0, %133
  br label %168

135:                                              ; preds = %94
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp ult i32 %137, %139
  %141 = select i1 %140, i32 %137, i32 %139
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %163, label %143

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %145 = bitcast %"class.WTF::StringImpl"* %144 to i16*
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %147 = bitcast %"class.WTF::StringImpl"* %146 to i16*
  br label %148

148:                                              ; preds = %155, %143
  %149 = phi i32 [ %158, %155 ], [ 0, %143 ]
  %150 = phi i16* [ %157, %155 ], [ %145, %143 ]
  %151 = phi i16* [ %156, %155 ], [ %147, %143 ]
  %152 = load i16, i16* %151, align 2
  %153 = load i16, i16* %150, align 2
  %154 = icmp eq i16 %152, %153
  br i1 %154, label %155, label %160

155:                                              ; preds = %148
  %156 = getelementptr inbounds i16, i16* %151, i64 1
  %157 = getelementptr inbounds i16, i16* %150, i64 1
  %158 = add nuw i32 %149, 1
  %159 = icmp ult i32 %158, %141
  br i1 %159, label %148, label %163

160:                                              ; preds = %148
  %161 = icmp ugt i16 %152, %153
  %162 = select i1 %161, i32 1, i32 -1
  br label %168

163:                                              ; preds = %155, %135
  %164 = icmp eq i32 %137, %139
  br i1 %164, label %168, label %165

165:                                              ; preds = %163
  %166 = icmp ugt i32 %137, %139
  %167 = select i1 %166, i32 1, i32 -1
  br label %168

168:                                              ; preds = %9, %10, %16, %56, %59, %61, %84, %89, %91, %132, %160, %163, %165
  %169 = phi i32 [ %20, %16 ], [ 0, %9 ], [ %14, %10 ], [ %134, %132 ], [ %58, %56 ], [ %63, %61 ], [ 0, %59 ], [ %88, %84 ], [ %93, %91 ], [ 0, %89 ], [ %162, %160 ], [ %167, %165 ], [ 0, %163 ]
  %170 = icmp slt i32 %169, 0
  ret i1 %170
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.152"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_(%"class.WTF::String"*, %"class.WTF::String"*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %285, %3
  %5 = phi %"class.WTF::String"* [ %1, %3 ], [ %266, %285 ]
  %6 = phi %"class.WTF::String"* [ %0, %3 ], [ %18, %285 ]
  %7 = ptrtoint %"class.WTF::String"* %5 to i64
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 -1
  %9 = bitcast %"class.WTF::String"* %8 to i64*
  %10 = bitcast %"class.WTF::String"* %8 to i64*
  %11 = bitcast %"class.WTF::String"* %8 to i64*
  %12 = bitcast %"class.WTF::String"* %8 to i64*
  %13 = bitcast %"class.WTF::String"* %8 to i64*
  %14 = ptrtoint %"class.WTF::String"* %5 to i64
  br label %15

15:                                               ; preds = %294, %4
  %16 = phi %"class.WTF::String"* [ %6, %4 ], [ %295, %294 ]
  br label %17

17:                                               ; preds = %216, %15
  %18 = phi %"class.WTF::String"* [ %16, %15 ], [ %207, %216 ]
  %19 = ptrtoint %"class.WTF::String"* %18 to i64
  %20 = sub i64 %7, %19
  %21 = ashr exact i64 %20, 3
  switch i64 %21, label %105 [
    i64 0, label %298
    i64 1, label %298
    i64 2, label %22
    i64 3, label %31
    i64 4, label %66
    i64 5, label %71
  ]

22:                                               ; preds = %17
  %23 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 -1
  %25 = tail call zeroext i1 %23(%"class.WTF::String"* dereferenceable(8) %24, %"class.WTF::String"* dereferenceable(8) %18) #18
  br i1 %25, label %26, label %298

26:                                               ; preds = %22
  %27 = bitcast %"class.WTF::String"* %18 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.WTF::String"* %24 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  store i64 %28, i64* %29, align 8
  br label %298

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 -1
  %34 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %35 = tail call zeroext i1 %34(%"class.WTF::String"* dereferenceable(8) %32, %"class.WTF::String"* dereferenceable(8) %18) #18
  %36 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %37 = tail call zeroext i1 %36(%"class.WTF::String"* dereferenceable(8) %33, %"class.WTF::String"* dereferenceable(8) %32) #18
  br i1 %35, label %51, label %38

38:                                               ; preds = %31
  br i1 %37, label %39, label %298

39:                                               ; preds = %38
  %40 = bitcast %"class.WTF::String"* %32 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.WTF::String"* %33 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %40, align 8
  store i64 %41, i64* %42, align 8
  %44 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %45 = tail call zeroext i1 %44(%"class.WTF::String"* dereferenceable(8) %32, %"class.WTF::String"* dereferenceable(8) %18) #18
  br i1 %45, label %46, label %298

46:                                               ; preds = %39
  %47 = bitcast %"class.WTF::String"* %18 to <2 x i64>*
  %48 = load <2 x i64>, <2 x i64>* %47, align 8
  %49 = shufflevector <2 x i64> %48, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %50 = bitcast %"class.WTF::String"* %18 to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %50, align 8
  br label %298

51:                                               ; preds = %31
  %52 = bitcast %"class.WTF::String"* %18 to i64*
  %53 = load i64, i64* %52, align 8
  br i1 %37, label %54, label %57

54:                                               ; preds = %51
  %55 = bitcast %"class.WTF::String"* %33 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %52, align 8
  store i64 %53, i64* %55, align 8
  br label %298

57:                                               ; preds = %51
  %58 = bitcast %"class.WTF::String"* %32 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %52, align 8
  store i64 %53, i64* %58, align 8
  %60 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %61 = tail call zeroext i1 %60(%"class.WTF::String"* dereferenceable(8) %33, %"class.WTF::String"* dereferenceable(8) %32) #18
  br i1 %61, label %62, label %298

62:                                               ; preds = %57
  %63 = load i64, i64* %58, align 8
  %64 = bitcast %"class.WTF::String"* %33 to i64*
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %58, align 8
  store i64 %63, i64* %64, align 8
  br label %298

66:                                               ; preds = %17
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 2
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 -1
  %70 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3WTF6StringES4_EPS2_EEjT0_S9_S9_S9_T_(%"class.WTF::String"* %18, %"class.WTF::String"* %67, %"class.WTF::String"* %68, %"class.WTF::String"* %69, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2)
  br label %298

71:                                               ; preds = %17
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 2
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 3
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 -1
  %76 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3WTF6StringES4_EPS2_EEjT0_S9_S9_S9_T_(%"class.WTF::String"* %18, %"class.WTF::String"* %72, %"class.WTF::String"* %73, %"class.WTF::String"* %74, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2) #18
  %77 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %78 = tail call zeroext i1 %77(%"class.WTF::String"* dereferenceable(8) %75, %"class.WTF::String"* dereferenceable(8) %74) #18
  br i1 %78, label %79, label %298

79:                                               ; preds = %71
  %80 = bitcast %"class.WTF::String"* %74 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.WTF::String"* %75 to i64*
  %83 = load i64, i64* %82, align 8
  store i64 %83, i64* %80, align 8
  store i64 %81, i64* %82, align 8
  %84 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %85 = tail call zeroext i1 %84(%"class.WTF::String"* dereferenceable(8) %74, %"class.WTF::String"* dereferenceable(8) %73) #18
  br i1 %85, label %86, label %298

86:                                               ; preds = %79
  %87 = bitcast %"class.WTF::String"* %73 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8
  %89 = shufflevector <2 x i64> %88, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %90 = bitcast %"class.WTF::String"* %73 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %90, align 8
  %91 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %92 = tail call zeroext i1 %91(%"class.WTF::String"* dereferenceable(8) %73, %"class.WTF::String"* dereferenceable(8) %72) #18
  br i1 %92, label %93, label %298

93:                                               ; preds = %86
  %94 = bitcast %"class.WTF::String"* %72 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8
  %96 = shufflevector <2 x i64> %95, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %97 = bitcast %"class.WTF::String"* %72 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %97, align 8
  %98 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %99 = tail call zeroext i1 %98(%"class.WTF::String"* dereferenceable(8) %72, %"class.WTF::String"* dereferenceable(8) %18) #18
  br i1 %99, label %100, label %298

100:                                              ; preds = %93
  %101 = bitcast %"class.WTF::String"* %18 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8
  %103 = shufflevector <2 x i64> %102, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %104 = bitcast %"class.WTF::String"* %18 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %104, align 8
  br label %298

105:                                              ; preds = %17
  %106 = icmp slt i64 %20, 56
  br i1 %106, label %107, label %108

107:                                              ; preds = %105
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_(%"class.WTF::String"* %18, %"class.WTF::String"* %5, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2)
  br label %298

108:                                              ; preds = %105
  %109 = icmp sgt i64 %20, 7992
  %110 = sdiv i64 %21, 2
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 %110
  br i1 %109, label %112, label %145

112:                                              ; preds = %108
  %113 = sdiv i64 %21, 4
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 %113
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %111, i64 %113
  %116 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3WTF6StringES4_EPS2_EEjT0_S9_S9_S9_T_(%"class.WTF::String"* %18, %"class.WTF::String"* %114, %"class.WTF::String"* %111, %"class.WTF::String"* %115, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2) #18
  %117 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %118 = tail call zeroext i1 %117(%"class.WTF::String"* dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %115) #18
  br i1 %118, label %119, label %174

119:                                              ; preds = %112
  %120 = bitcast %"class.WTF::String"* %115 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = load i64, i64* %12, align 8
  store i64 %122, i64* %120, align 8
  store i64 %121, i64* %12, align 8
  %123 = add i32 %116, 1
  %124 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %125 = tail call zeroext i1 %124(%"class.WTF::String"* dereferenceable(8) %115, %"class.WTF::String"* dereferenceable(8) %111) #18
  br i1 %125, label %126, label %174

126:                                              ; preds = %119
  %127 = bitcast %"class.WTF::String"* %111 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = load i64, i64* %120, align 8
  store i64 %129, i64* %127, align 8
  store i64 %128, i64* %120, align 8
  %130 = add i32 %116, 2
  %131 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %132 = tail call zeroext i1 %131(%"class.WTF::String"* dereferenceable(8) %111, %"class.WTF::String"* dereferenceable(8) %114) #18
  br i1 %132, label %133, label %174

133:                                              ; preds = %126
  %134 = bitcast %"class.WTF::String"* %114 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = load i64, i64* %127, align 8
  store i64 %136, i64* %134, align 8
  store i64 %135, i64* %127, align 8
  %137 = add i32 %116, 3
  %138 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %139 = tail call zeroext i1 %138(%"class.WTF::String"* dereferenceable(8) %114, %"class.WTF::String"* dereferenceable(8) %18) #18
  br i1 %139, label %140, label %174

140:                                              ; preds = %133
  %141 = bitcast %"class.WTF::String"* %18 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = load i64, i64* %134, align 8
  store i64 %143, i64* %141, align 8
  store i64 %142, i64* %134, align 8
  %144 = add i32 %116, 4
  br label %174

145:                                              ; preds = %108
  %146 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %147 = tail call zeroext i1 %146(%"class.WTF::String"* dereferenceable(8) %111, %"class.WTF::String"* dereferenceable(8) %18) #18
  %148 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %149 = tail call zeroext i1 %148(%"class.WTF::String"* dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %111) #18
  br i1 %147, label %161, label %150

150:                                              ; preds = %145
  br i1 %149, label %151, label %174

151:                                              ; preds = %150
  %152 = bitcast %"class.WTF::String"* %111 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = load i64, i64* %9, align 8
  store i64 %154, i64* %152, align 8
  store i64 %153, i64* %9, align 8
  %155 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %156 = tail call zeroext i1 %155(%"class.WTF::String"* dereferenceable(8) %111, %"class.WTF::String"* dereferenceable(8) %18) #18
  br i1 %156, label %157, label %174

157:                                              ; preds = %151
  %158 = bitcast %"class.WTF::String"* %18 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = load i64, i64* %152, align 8
  store i64 %160, i64* %158, align 8
  store i64 %159, i64* %152, align 8
  br label %174

161:                                              ; preds = %145
  %162 = bitcast %"class.WTF::String"* %18 to i64*
  %163 = load i64, i64* %162, align 8
  br i1 %149, label %164, label %166

164:                                              ; preds = %161
  %165 = load i64, i64* %11, align 8
  store i64 %165, i64* %162, align 8
  store i64 %163, i64* %11, align 8
  br label %174

166:                                              ; preds = %161
  %167 = bitcast %"class.WTF::String"* %111 to i64*
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  store i64 %163, i64* %167, align 8
  %169 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %170 = tail call zeroext i1 %169(%"class.WTF::String"* dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %111) #18
  br i1 %170, label %171, label %174

171:                                              ; preds = %166
  %172 = load i64, i64* %167, align 8
  %173 = load i64, i64* %10, align 8
  store i64 %173, i64* %167, align 8
  store i64 %172, i64* %10, align 8
  br label %174

174:                                              ; preds = %171, %166, %164, %157, %151, %150, %140, %133, %126, %119, %112
  %175 = phi i32 [ %144, %140 ], [ %137, %133 ], [ %130, %126 ], [ %123, %119 ], [ %116, %112 ], [ 1, %164 ], [ 0, %150 ], [ 2, %157 ], [ 1, %151 ], [ 2, %171 ], [ 1, %166 ]
  %176 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %177 = tail call zeroext i1 %176(%"class.WTF::String"* dereferenceable(8) %18, %"class.WTF::String"* dereferenceable(8) %111) #18
  br i1 %177, label %232, label %178

178:                                              ; preds = %174, %223
  %179 = phi %"class.WTF::String"* [ %180, %223 ], [ %8, %174 ]
  %180 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %179, i64 -1
  %181 = icmp eq %"class.WTF::String"* %18, %180
  br i1 %181, label %182, label %223

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %184 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %185 = tail call zeroext i1 %184(%"class.WTF::String"* dereferenceable(8) %18, %"class.WTF::String"* dereferenceable(8) %8) #18
  br i1 %185, label %200, label %186

186:                                              ; preds = %182
  %187 = icmp eq %"class.WTF::String"* %183, %8
  br i1 %187, label %298, label %188

188:                                              ; preds = %186, %197
  %189 = phi %"class.WTF::String"* [ %198, %197 ], [ %183, %186 ]
  %190 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %191 = tail call zeroext i1 %190(%"class.WTF::String"* dereferenceable(8) %18, %"class.WTF::String"* dereferenceable(8) %189) #18
  br i1 %191, label %192, label %197

192:                                              ; preds = %188
  %193 = bitcast %"class.WTF::String"* %189 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = load i64, i64* %13, align 8
  store i64 %195, i64* %193, align 8
  store i64 %194, i64* %13, align 8
  %196 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  br label %200

197:                                              ; preds = %188
  %198 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %199 = icmp eq %"class.WTF::String"* %198, %8
  br i1 %199, label %298, label %188

200:                                              ; preds = %192, %182
  %201 = phi %"class.WTF::String"* [ %183, %182 ], [ %196, %192 ]
  %202 = icmp eq %"class.WTF::String"* %201, %8
  br i1 %202, label %298, label %203

203:                                              ; preds = %200, %218
  %204 = phi %"class.WTF::String"* [ %210, %218 ], [ %201, %200 ]
  %205 = phi %"class.WTF::String"* [ %214, %218 ], [ %8, %200 ]
  br label %206

206:                                              ; preds = %206, %203
  %207 = phi %"class.WTF::String"* [ %204, %203 ], [ %210, %206 ]
  %208 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %209 = tail call zeroext i1 %208(%"class.WTF::String"* dereferenceable(8) %18, %"class.WTF::String"* dereferenceable(8) %207) #18
  %210 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %207, i64 1
  br i1 %209, label %211, label %206

211:                                              ; preds = %206, %211
  %212 = phi %"class.WTF::String"* [ %214, %211 ], [ %205, %206 ]
  %213 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %214 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %212, i64 -1
  %215 = tail call zeroext i1 %213(%"class.WTF::String"* dereferenceable(8) %18, %"class.WTF::String"* dereferenceable(8) %214) #18
  br i1 %215, label %211, label %216

216:                                              ; preds = %211
  %217 = icmp ult %"class.WTF::String"* %207, %214
  br i1 %217, label %218, label %17

218:                                              ; preds = %216
  %219 = bitcast %"class.WTF::String"* %207 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.WTF::String"* %214 to i64*
  %222 = load i64, i64* %221, align 8
  store i64 %222, i64* %219, align 8
  store i64 %220, i64* %221, align 8
  br label %203

223:                                              ; preds = %178
  %224 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %225 = tail call zeroext i1 %224(%"class.WTF::String"* dereferenceable(8) %180, %"class.WTF::String"* dereferenceable(8) %111) #18
  br i1 %225, label %226, label %178

226:                                              ; preds = %223
  %227 = bitcast %"class.WTF::String"* %18 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast %"class.WTF::String"* %180 to i64*
  %230 = load i64, i64* %229, align 8
  store i64 %230, i64* %227, align 8
  store i64 %228, i64* %229, align 8
  %231 = add i32 %175, 1
  br label %232

232:                                              ; preds = %174, %226
  %233 = phi i32 [ %231, %226 ], [ %175, %174 ]
  %234 = phi %"class.WTF::String"* [ %180, %226 ], [ %8, %174 ]
  %235 = ptrtoint %"class.WTF::String"* %18 to i64
  %236 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %237 = icmp ult %"class.WTF::String"* %236, %234
  br i1 %237, label %238, label %263

238:                                              ; preds = %232, %255
  %239 = phi %"class.WTF::String"* [ %262, %255 ], [ %111, %232 ]
  %240 = phi i32 [ %260, %255 ], [ %233, %232 ]
  %241 = phi %"class.WTF::String"* [ %247, %255 ], [ %236, %232 ]
  %242 = phi %"class.WTF::String"* [ %251, %255 ], [ %234, %232 ]
  br label %243

243:                                              ; preds = %243, %238
  %244 = phi %"class.WTF::String"* [ %241, %238 ], [ %247, %243 ]
  %245 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %246 = tail call zeroext i1 %245(%"class.WTF::String"* dereferenceable(8) %244, %"class.WTF::String"* dereferenceable(8) %239) #18
  %247 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %244, i64 1
  br i1 %246, label %243, label %248

248:                                              ; preds = %243, %248
  %249 = phi %"class.WTF::String"* [ %251, %248 ], [ %242, %243 ]
  %250 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %251 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %249, i64 -1
  %252 = tail call zeroext i1 %250(%"class.WTF::String"* dereferenceable(8) %251, %"class.WTF::String"* dereferenceable(8) %239) #18
  br i1 %252, label %253, label %248

253:                                              ; preds = %248
  %254 = icmp ugt %"class.WTF::String"* %244, %251
  br i1 %254, label %263, label %255

255:                                              ; preds = %253
  %256 = bitcast %"class.WTF::String"* %244 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = bitcast %"class.WTF::String"* %251 to i64*
  %259 = load i64, i64* %258, align 8
  store i64 %259, i64* %256, align 8
  store i64 %257, i64* %258, align 8
  %260 = add i32 %240, 1
  %261 = icmp eq %"class.WTF::String"* %239, %244
  %262 = select i1 %261, %"class.WTF::String"* %251, %"class.WTF::String"* %239
  br label %238

263:                                              ; preds = %253, %232
  %264 = phi %"class.WTF::String"* [ %111, %232 ], [ %239, %253 ]
  %265 = phi i32 [ %233, %232 ], [ %240, %253 ]
  %266 = phi %"class.WTF::String"* [ %236, %232 ], [ %244, %253 ]
  %267 = icmp eq %"class.WTF::String"* %266, %264
  br i1 %267, label %277, label %268

268:                                              ; preds = %263
  %269 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %270 = tail call zeroext i1 %269(%"class.WTF::String"* dereferenceable(8) %264, %"class.WTF::String"* dereferenceable(8) %266) #18
  br i1 %270, label %271, label %277

271:                                              ; preds = %268
  %272 = bitcast %"class.WTF::String"* %266 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = bitcast %"class.WTF::String"* %264 to i64*
  %275 = load i64, i64* %274, align 8
  store i64 %275, i64* %272, align 8
  store i64 %273, i64* %274, align 8
  %276 = add i32 %265, 1
  br label %277

277:                                              ; preds = %263, %271, %268
  %278 = phi i32 [ %276, %271 ], [ %265, %268 ], [ %265, %263 ]
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %287

280:                                              ; preds = %277
  %281 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN3WTF6StringES4_EPS2_EEbT0_S9_T_(%"class.WTF::String"* %18, %"class.WTF::String"* %266, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2)
  %282 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %266, i64 1
  %283 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN3WTF6StringES4_EPS2_EEbT0_S9_T_(%"class.WTF::String"* %282, %"class.WTF::String"* %5, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2)
  br i1 %283, label %284, label %286

284:                                              ; preds = %280
  br i1 %281, label %298, label %285

285:                                              ; preds = %284, %296
  br label %4

286:                                              ; preds = %280
  br i1 %281, label %294, label %287

287:                                              ; preds = %286, %277
  %288 = ptrtoint %"class.WTF::String"* %266 to i64
  %289 = sub i64 %288, %235
  %290 = sub i64 %14, %288
  %291 = icmp slt i64 %289, %290
  br i1 %291, label %292, label %296

292:                                              ; preds = %287
  tail call void @_ZNSt3__16__sortIRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_(%"class.WTF::String"* %18, %"class.WTF::String"* %266, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2)
  %293 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %266, i64 1
  br label %294

294:                                              ; preds = %292, %286
  %295 = phi %"class.WTF::String"* [ %282, %286 ], [ %293, %292 ]
  br label %15

296:                                              ; preds = %287
  %297 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %266, i64 1
  tail call void @_ZNSt3__16__sortIRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_(%"class.WTF::String"* %297, %"class.WTF::String"* %5, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2)
  br label %285

298:                                              ; preds = %284, %200, %17, %17, %186, %197, %100, %93, %86, %79, %71, %62, %57, %54, %46, %39, %38, %22, %26, %66, %107
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbRKN3WTF6StringES4_EPS2_EEjT0_S9_S9_S9_T_(%"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %4, align 8
  %7 = tail call zeroext i1 %6(%"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %0) #18
  %8 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %4, align 8
  %9 = tail call zeroext i1 %8(%"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %1) #18
  br i1 %7, label %22, label %10

10:                                               ; preds = %5
  br i1 %9, label %11, label %37

11:                                               ; preds = %10
  %12 = bitcast %"class.WTF::String"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.WTF::String"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 %13, i64* %14, align 8
  %16 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %4, align 8
  %17 = tail call zeroext i1 %16(%"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %0) #18
  br i1 %17, label %18, label %37

18:                                               ; preds = %11
  %19 = bitcast %"class.WTF::String"* %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = load i64, i64* %12, align 8
  store i64 %21, i64* %19, align 8
  store i64 %20, i64* %12, align 8
  br label %37

22:                                               ; preds = %5
  %23 = bitcast %"class.WTF::String"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  br i1 %9, label %25, label %28

25:                                               ; preds = %22
  %26 = bitcast %"class.WTF::String"* %2 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %23, align 8
  store i64 %24, i64* %26, align 8
  br label %37

28:                                               ; preds = %22
  %29 = bitcast %"class.WTF::String"* %1 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %23, align 8
  store i64 %24, i64* %29, align 8
  %31 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %4, align 8
  %32 = tail call zeroext i1 %31(%"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %1) #18
  br i1 %32, label %33, label %37

33:                                               ; preds = %28
  %34 = load i64, i64* %29, align 8
  %35 = bitcast %"class.WTF::String"* %2 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %29, align 8
  store i64 %34, i64* %35, align 8
  br label %37

37:                                               ; preds = %10, %11, %18, %25, %28, %33
  %38 = phi i32 [ 1, %25 ], [ 0, %10 ], [ 2, %18 ], [ 1, %11 ], [ 2, %33 ], [ 1, %28 ]
  %39 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %4, align 8
  %40 = tail call zeroext i1 %39(%"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %2) #18
  br i1 %40, label %41, label %61

41:                                               ; preds = %37
  %42 = bitcast %"class.WTF::String"* %2 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.WTF::String"* %3 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  store i64 %43, i64* %44, align 8
  %46 = add nuw nsw i32 %38, 1
  %47 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %4, align 8
  %48 = tail call zeroext i1 %47(%"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %1) #18
  br i1 %48, label %49, label %61

49:                                               ; preds = %41
  %50 = bitcast %"class.WTF::String"* %1 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = load i64, i64* %42, align 8
  store i64 %52, i64* %50, align 8
  store i64 %51, i64* %42, align 8
  %53 = add nuw nsw i32 %38, 2
  %54 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %4, align 8
  %55 = tail call zeroext i1 %54(%"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %0) #18
  br i1 %55, label %56, label %61

56:                                               ; preds = %49
  %57 = bitcast %"class.WTF::String"* %0 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = load i64, i64* %50, align 8
  store i64 %59, i64* %57, align 8
  store i64 %58, i64* %50, align 8
  %60 = add nuw nsw i32 %38, 3
  br label %61

61:                                               ; preds = %41, %56, %49, %37
  %62 = phi i32 [ %60, %56 ], [ %53, %49 ], [ %46, %41 ], [ %38, %37 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_(%"class.WTF::String"*, %"class.WTF::String"*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 2
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 1
  %7 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %8 = tail call zeroext i1 %7(%"class.WTF::String"* dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %0) #18
  %9 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %10 = tail call zeroext i1 %9(%"class.WTF::String"* dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %6) #18
  br i1 %8, label %24, label %11

11:                                               ; preds = %3
  br i1 %10, label %12, label %40

12:                                               ; preds = %11
  %13 = bitcast %"class.WTF::String"* %6 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8
  %15 = shufflevector <2 x i64> %14, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %16 = bitcast %"class.WTF::String"* %6 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %16, align 8
  %17 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %18 = tail call zeroext i1 %17(%"class.WTF::String"* dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %0) #18
  br i1 %18, label %19, label %40

19:                                               ; preds = %12
  %20 = bitcast %"class.WTF::String"* %0 to <2 x i64>*
  %21 = load <2 x i64>, <2 x i64>* %20, align 8
  %22 = shufflevector <2 x i64> %21, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %23 = bitcast %"class.WTF::String"* %0 to <2 x i64>*
  store <2 x i64> %22, <2 x i64>* %23, align 8
  br label %40

24:                                               ; preds = %3
  %25 = bitcast %"class.WTF::String"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  br i1 %10, label %27, label %30

27:                                               ; preds = %24
  %28 = bitcast %"class.WTF::String"* %5 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %25, align 8
  store i64 %26, i64* %28, align 8
  br label %40

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::String"* %6 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %25, align 8
  store i64 %26, i64* %31, align 8
  %33 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %34 = tail call zeroext i1 %33(%"class.WTF::String"* dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %6) #18
  br i1 %34, label %35, label %40

35:                                               ; preds = %30
  %36 = bitcast %"class.WTF::String"* %6 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8
  %38 = shufflevector <2 x i64> %37, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %39 = bitcast %"class.WTF::String"* %6 to <2 x i64>*
  store <2 x i64> %38, <2 x i64>* %39, align 8
  br label %40

40:                                               ; preds = %11, %12, %19, %27, %30, %35
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 3
  %42 = icmp eq %"class.WTF::String"* %41, %1
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.WTF::String"* %4 to i8*
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %46 = bitcast %"class.WTF::String"* %4 to i64*
  br label %48

47:                                               ; preds = %123, %40
  ret void

48:                                               ; preds = %43, %123
  %49 = phi %"class.WTF::String"* [ %41, %43 ], [ %124, %123 ]
  %50 = phi %"class.WTF::String"* [ %5, %43 ], [ %49, %123 ]
  %51 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %52 = call zeroext i1 %51(%"class.WTF::String"* dereferenceable(8) %49, %"class.WTF::String"* dereferenceable(8) %50) #18
  br i1 %52, label %53, label %123

53:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #18
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 0, i32 0, i32 0
  %55 = bitcast %"class.WTF::String"* %49 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %46, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %54, align 8
  br label %57

57:                                               ; preds = %82, %53
  %58 = phi %"class.WTF::String"* [ %49, %53 ], [ %59, %82 ]
  %59 = phi %"class.WTF::String"* [ %50, %53 ], [ %84, %82 ]
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %59, i64 0, i32 0, i32 0
  %61 = bitcast %"class.WTF::String"* %59 to i64*
  %62 = load i64, i64* %61, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %60, align 8
  %63 = bitcast %"class.WTF::String"* %58 to i64*
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  store i64 %62, i64* %63, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %57
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #18
  br label %80

80:                                               ; preds = %57, %76, %79
  %81 = icmp eq %"class.WTF::String"* %59, %0
  br i1 %81, label %86, label %82

82:                                               ; preds = %80
  %83 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %59, i64 -1
  %85 = call zeroext i1 %83(%"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %84) #18
  br i1 %85, label %57, label %86

86:                                               ; preds = %80, %82
  %87 = phi %"class.WTF::String"* [ %59, %82 ], [ %0, %80 ]
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %87, i64 0, i32 0, i32 0
  %89 = bitcast %"class.WTF::String"* %87 to i64*
  %90 = load i64, i64* %46, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  store i64 %90, i64* %89, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #18
  br label %106

106:                                              ; preds = %86, %102, %105
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #18
  br label %122

122:                                              ; preds = %106, %118, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #18
  br label %123

123:                                              ; preds = %122, %48
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 1
  %125 = icmp eq %"class.WTF::String"* %124, %1
  br i1 %125, label %47, label %48
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN3WTF6StringES4_EPS2_EEbT0_S9_T_(%"class.WTF::String"*, %"class.WTF::String"*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::String", align 8
  %5 = ptrtoint %"class.WTF::String"* %1 to i64
  %6 = ptrtoint %"class.WTF::String"* %0 to i64
  %7 = sub i64 %5, %6
  %8 = ashr exact i64 %7, 3
  switch i64 %8, label %92 [
    i64 0, label %220
    i64 1, label %220
    i64 2, label %9
    i64 3, label %18
    i64 4, label %53
    i64 5, label %58
  ]

9:                                                ; preds = %3
  %10 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 -1
  %12 = tail call zeroext i1 %10(%"class.WTF::String"* dereferenceable(8) %11, %"class.WTF::String"* dereferenceable(8) %0) #18
  br i1 %12, label %13, label %220

13:                                               ; preds = %9
  %14 = bitcast %"class.WTF::String"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.WTF::String"* %11 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 %15, i64* %16, align 8
  br label %220

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 1
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 -1
  %21 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %22 = tail call zeroext i1 %21(%"class.WTF::String"* dereferenceable(8) %19, %"class.WTF::String"* dereferenceable(8) %0) #18
  %23 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %24 = tail call zeroext i1 %23(%"class.WTF::String"* dereferenceable(8) %20, %"class.WTF::String"* dereferenceable(8) %19) #18
  br i1 %22, label %38, label %25

25:                                               ; preds = %18
  br i1 %24, label %26, label %220

26:                                               ; preds = %25
  %27 = bitcast %"class.WTF::String"* %19 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.WTF::String"* %20 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  store i64 %28, i64* %29, align 8
  %31 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %32 = tail call zeroext i1 %31(%"class.WTF::String"* dereferenceable(8) %19, %"class.WTF::String"* dereferenceable(8) %0) #18
  br i1 %32, label %33, label %220

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::String"* %0 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 8
  %36 = shufflevector <2 x i64> %35, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %37 = bitcast %"class.WTF::String"* %0 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %37, align 8
  br label %220

38:                                               ; preds = %18
  %39 = bitcast %"class.WTF::String"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  br i1 %24, label %41, label %44

41:                                               ; preds = %38
  %42 = bitcast %"class.WTF::String"* %20 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %39, align 8
  store i64 %40, i64* %42, align 8
  br label %220

44:                                               ; preds = %38
  %45 = bitcast %"class.WTF::String"* %19 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %39, align 8
  store i64 %40, i64* %45, align 8
  %47 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %48 = tail call zeroext i1 %47(%"class.WTF::String"* dereferenceable(8) %20, %"class.WTF::String"* dereferenceable(8) %19) #18
  br i1 %48, label %49, label %220

49:                                               ; preds = %44
  %50 = load i64, i64* %45, align 8
  %51 = bitcast %"class.WTF::String"* %20 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %45, align 8
  store i64 %50, i64* %51, align 8
  br label %220

53:                                               ; preds = %3
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 1
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 2
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 -1
  %57 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3WTF6StringES4_EPS2_EEjT0_S9_S9_S9_T_(%"class.WTF::String"* %0, %"class.WTF::String"* %54, %"class.WTF::String"* %55, %"class.WTF::String"* %56, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2)
  br label %220

58:                                               ; preds = %3
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 1
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 2
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 3
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 -1
  %63 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3WTF6StringES4_EPS2_EEjT0_S9_S9_S9_T_(%"class.WTF::String"* %0, %"class.WTF::String"* %59, %"class.WTF::String"* %60, %"class.WTF::String"* %61, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2) #18
  %64 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %65 = tail call zeroext i1 %64(%"class.WTF::String"* dereferenceable(8) %62, %"class.WTF::String"* dereferenceable(8) %61) #18
  br i1 %65, label %66, label %220

66:                                               ; preds = %58
  %67 = bitcast %"class.WTF::String"* %61 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.WTF::String"* %62 to i64*
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %67, align 8
  store i64 %68, i64* %69, align 8
  %71 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %72 = tail call zeroext i1 %71(%"class.WTF::String"* dereferenceable(8) %61, %"class.WTF::String"* dereferenceable(8) %60) #18
  br i1 %72, label %73, label %220

73:                                               ; preds = %66
  %74 = bitcast %"class.WTF::String"* %60 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8
  %76 = shufflevector <2 x i64> %75, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %77 = bitcast %"class.WTF::String"* %60 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %77, align 8
  %78 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %79 = tail call zeroext i1 %78(%"class.WTF::String"* dereferenceable(8) %60, %"class.WTF::String"* dereferenceable(8) %59) #18
  br i1 %79, label %80, label %220

80:                                               ; preds = %73
  %81 = bitcast %"class.WTF::String"* %59 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8
  %83 = shufflevector <2 x i64> %82, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %84 = bitcast %"class.WTF::String"* %59 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %84, align 8
  %85 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %86 = tail call zeroext i1 %85(%"class.WTF::String"* dereferenceable(8) %59, %"class.WTF::String"* dereferenceable(8) %0) #18
  br i1 %86, label %87, label %220

87:                                               ; preds = %80
  %88 = bitcast %"class.WTF::String"* %0 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8
  %90 = shufflevector <2 x i64> %89, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %91 = bitcast %"class.WTF::String"* %0 to <2 x i64>*
  store <2 x i64> %90, <2 x i64>* %91, align 8
  br label %220

92:                                               ; preds = %3
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 2
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 1
  %95 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %96 = tail call zeroext i1 %95(%"class.WTF::String"* dereferenceable(8) %94, %"class.WTF::String"* dereferenceable(8) %0) #18
  %97 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %98 = tail call zeroext i1 %97(%"class.WTF::String"* dereferenceable(8) %93, %"class.WTF::String"* dereferenceable(8) %94) #18
  br i1 %96, label %112, label %99

99:                                               ; preds = %92
  br i1 %98, label %100, label %128

100:                                              ; preds = %99
  %101 = bitcast %"class.WTF::String"* %94 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8
  %103 = shufflevector <2 x i64> %102, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %104 = bitcast %"class.WTF::String"* %94 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %104, align 8
  %105 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %106 = tail call zeroext i1 %105(%"class.WTF::String"* dereferenceable(8) %94, %"class.WTF::String"* dereferenceable(8) %0) #18
  br i1 %106, label %107, label %128

107:                                              ; preds = %100
  %108 = bitcast %"class.WTF::String"* %0 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8
  %110 = shufflevector <2 x i64> %109, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %111 = bitcast %"class.WTF::String"* %0 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %111, align 8
  br label %128

112:                                              ; preds = %92
  %113 = bitcast %"class.WTF::String"* %0 to i64*
  %114 = load i64, i64* %113, align 8
  br i1 %98, label %115, label %118

115:                                              ; preds = %112
  %116 = bitcast %"class.WTF::String"* %93 to i64*
  %117 = load i64, i64* %116, align 8
  store i64 %117, i64* %113, align 8
  store i64 %114, i64* %116, align 8
  br label %128

118:                                              ; preds = %112
  %119 = bitcast %"class.WTF::String"* %94 to i64*
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %113, align 8
  store i64 %114, i64* %119, align 8
  %121 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %122 = tail call zeroext i1 %121(%"class.WTF::String"* dereferenceable(8) %93, %"class.WTF::String"* dereferenceable(8) %94) #18
  br i1 %122, label %123, label %128

123:                                              ; preds = %118
  %124 = bitcast %"class.WTF::String"* %94 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8
  %126 = shufflevector <2 x i64> %125, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %127 = bitcast %"class.WTF::String"* %94 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %127, align 8
  br label %128

128:                                              ; preds = %99, %100, %107, %115, %118, %123
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 3
  %130 = icmp eq %"class.WTF::String"* %129, %1
  br i1 %130, label %220, label %131

131:                                              ; preds = %128
  %132 = bitcast %"class.WTF::String"* %4 to i8*
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %134 = bitcast %"class.WTF::String"* %4 to i64*
  br label %135

135:                                              ; preds = %131, %213
  %136 = phi %"class.WTF::String"* [ %129, %131 ], [ %215, %213 ]
  %137 = phi i32 [ 0, %131 ], [ %214, %213 ]
  %138 = phi %"class.WTF::String"* [ %93, %131 ], [ %136, %213 ]
  %139 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %140 = call zeroext i1 %139(%"class.WTF::String"* dereferenceable(8) %136, %"class.WTF::String"* dereferenceable(8) %138) #18
  br i1 %140, label %141, label %213

141:                                              ; preds = %135
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #18
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %136, i64 0, i32 0, i32 0
  %143 = bitcast %"class.WTF::String"* %136 to i64*
  %144 = load i64, i64* %143, align 8
  store i64 %144, i64* %134, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %142, align 8
  br label %145

145:                                              ; preds = %170, %141
  %146 = phi %"class.WTF::String"* [ %136, %141 ], [ %147, %170 ]
  %147 = phi %"class.WTF::String"* [ %138, %141 ], [ %172, %170 ]
  %148 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %147, i64 0, i32 0, i32 0
  %149 = bitcast %"class.WTF::String"* %147 to i64*
  %150 = load i64, i64* %149, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %148, align 8
  %151 = bitcast %"class.WTF::String"* %146 to i64*
  %152 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %146, i64 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  store i64 %150, i64* %151, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %145
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #18
  br label %168

168:                                              ; preds = %145, %164, %167
  %169 = icmp eq %"class.WTF::String"* %147, %0
  br i1 %169, label %174, label %170

170:                                              ; preds = %168
  %171 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %172 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %147, i64 -1
  %173 = call zeroext i1 %171(%"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %172) #18
  br i1 %173, label %145, label %174

174:                                              ; preds = %168, %170
  %175 = phi %"class.WTF::String"* [ %147, %170 ], [ %0, %168 ]
  %176 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %175, i64 0, i32 0, i32 0
  %177 = bitcast %"class.WTF::String"* %175 to i64*
  %178 = load i64, i64* %134, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %133, align 8
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  store i64 %178, i64* %177, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %174
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #18
  br label %194

194:                                              ; preds = %174, %190, %193
  %195 = add i32 %137, 1
  %196 = icmp eq i32 %195, 8
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #18
  br label %212

212:                                              ; preds = %194, %208, %211
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #18
  br i1 %196, label %217, label %213

213:                                              ; preds = %212, %135
  %214 = phi i32 [ %195, %212 ], [ %137, %135 ]
  %215 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %136, i64 1
  %216 = icmp eq %"class.WTF::String"* %215, %1
  br i1 %216, label %220, label %135

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %136, i64 1
  %219 = icmp eq %"class.WTF::String"* %218, %1
  br label %220

220:                                              ; preds = %213, %217, %128, %87, %80, %73, %66, %58, %49, %44, %41, %33, %26, %25, %9, %13, %3, %3, %53
  %221 = phi i1 [ true, %53 ], [ true, %3 ], [ true, %3 ], [ true, %13 ], [ true, %9 ], [ true, %25 ], [ true, %26 ], [ true, %33 ], [ true, %41 ], [ true, %44 ], [ true, %49 ], [ true, %58 ], [ true, %66 ], [ true, %73 ], [ true, %80 ], [ true, %87 ], [ true, %128 ], [ %219, %217 ], [ true, %213 ]
  ret i1 %221
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.152"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1147"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EEjjEENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable.1144"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1144", %"class.WTF::HashTable.1144"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1147"*, %"struct.WTF::KeyValuePair.1147"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1147"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1147"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1144"* %0, %"struct.WTF::KeyValuePair.1147"* null)
  %9 = load %"struct.WTF::KeyValuePair.1147"*, %"struct.WTF::KeyValuePair.1147"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1147"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1144", %"class.WTF::HashTable.1144"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.1147"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.1147"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %96, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -2
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.1147"* %52, %"struct.WTF::KeyValuePair.1147"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.1147"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.1147"* %59 to i64*
  store i64 4294967295, i64* %71, align 4
  %72 = getelementptr inbounds %"class.WTF::HashTable.1144", %"class.WTF::HashTable.1144"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.1147"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %81, i64 0, i32 1
  %84 = load i32, i32* %2, align 4
  store i32 %84, i32* %83, align 4
  %85 = getelementptr inbounds %"class.WTF::HashTable.1144", %"class.WTF::HashTable.1144"* %0, i64 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %85, align 4
  %88 = getelementptr inbounds %"class.WTF::HashTable.1144", %"class.WTF::HashTable.1144"* %0, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, %87
  %91 = shl i32 %90, 1
  %92 = load i32, i32* %12, align 8
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %79
  %95 = tail call %"struct.WTF::KeyValuePair.1147"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1144"* %0, %"struct.WTF::KeyValuePair.1147"* %81)
  br label %96

96:                                               ; preds = %50, %79, %94
  %97 = phi i8 [ 1, %79 ], [ 1, %94 ], [ 0, %50 ]
  %98 = phi %"struct.WTF::KeyValuePair.1147"* [ %81, %79 ], [ %95, %94 ], [ %52, %50 ]
  %99 = insertvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } undef, %"struct.WTF::KeyValuePair.1147"* %98, 0
  %100 = insertvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %99, i8 %97, 1
  ret { %"struct.WTF::KeyValuePair.1147"*, i8 } %100
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1147"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1144"*, %"struct.WTF::KeyValuePair.1147"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1144", %"class.WTF::HashTable.1144"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1144", %"class.WTF::HashTable.1144"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #18
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #18
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i64 0, i64 0), i8* %22, i8* %23) #18
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.44, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #18
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #18
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #18
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjjEEEEPKcv, i64 0, i64 0)) #18
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1147"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %117, label %38

38:                                               ; preds = %31
  %39 = icmp ult i32 %32, 4
  br i1 %39, label %109, label %40

40:                                               ; preds = %38
  %41 = and i64 %33, 4294967292
  %42 = add nsw i64 %41, -4
  %43 = lshr exact i64 %42, 2
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 7
  %46 = icmp ult i64 %42, 28
  br i1 %46, label %94, label %47

47:                                               ; preds = %40
  %48 = sub nsw i64 %44, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 0, %47 ], [ %91, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %92, %49 ]
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %36, i64 %50
  %53 = bitcast %"struct.WTF::KeyValuePair.1147"* %52 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %53, align 4
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %52, i64 2
  %55 = bitcast %"struct.WTF::KeyValuePair.1147"* %54 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %55, align 4
  %56 = or i64 %50, 4
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %36, i64 %56
  %58 = bitcast %"struct.WTF::KeyValuePair.1147"* %57 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %58, align 4
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %57, i64 2
  %60 = bitcast %"struct.WTF::KeyValuePair.1147"* %59 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %60, align 4
  %61 = or i64 %50, 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %36, i64 %61
  %63 = bitcast %"struct.WTF::KeyValuePair.1147"* %62 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %63, align 4
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %62, i64 2
  %65 = bitcast %"struct.WTF::KeyValuePair.1147"* %64 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %65, align 4
  %66 = or i64 %50, 12
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %36, i64 %66
  %68 = bitcast %"struct.WTF::KeyValuePair.1147"* %67 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %68, align 4
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %67, i64 2
  %70 = bitcast %"struct.WTF::KeyValuePair.1147"* %69 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %70, align 4
  %71 = or i64 %50, 16
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %36, i64 %71
  %73 = bitcast %"struct.WTF::KeyValuePair.1147"* %72 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %73, align 4
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %72, i64 2
  %75 = bitcast %"struct.WTF::KeyValuePair.1147"* %74 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %75, align 4
  %76 = or i64 %50, 20
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %36, i64 %76
  %78 = bitcast %"struct.WTF::KeyValuePair.1147"* %77 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %78, align 4
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %77, i64 2
  %80 = bitcast %"struct.WTF::KeyValuePair.1147"* %79 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %80, align 4
  %81 = or i64 %50, 24
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %36, i64 %81
  %83 = bitcast %"struct.WTF::KeyValuePair.1147"* %82 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %83, align 4
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %82, i64 2
  %85 = bitcast %"struct.WTF::KeyValuePair.1147"* %84 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %85, align 4
  %86 = or i64 %50, 28
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %36, i64 %86
  %88 = bitcast %"struct.WTF::KeyValuePair.1147"* %87 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %88, align 4
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %87, i64 2
  %90 = bitcast %"struct.WTF::KeyValuePair.1147"* %89 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %90, align 4
  %91 = add i64 %50, 32
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %49, !llvm.loop !30

94:                                               ; preds = %49, %40
  %95 = phi i64 [ 0, %40 ], [ %91, %49 ]
  %96 = icmp eq i64 %45, 0
  br i1 %96, label %107, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %104, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %105, %97 ], [ %45, %94 ]
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %36, i64 %98
  %101 = bitcast %"struct.WTF::KeyValuePair.1147"* %100 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %101, align 4
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %100, i64 2
  %103 = bitcast %"struct.WTF::KeyValuePair.1147"* %102 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %103, align 4
  %104 = add i64 %98, 4
  %105 = add i64 %99, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %97, !llvm.loop !32

107:                                              ; preds = %97, %94
  %108 = icmp eq i64 %41, %33
  br i1 %108, label %117, label %109

109:                                              ; preds = %107, %38
  %110 = phi i64 [ 0, %38 ], [ %41, %107 ]
  br label %111

111:                                              ; preds = %109, %111
  %112 = phi i64 [ %115, %111 ], [ %110, %109 ]
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %36, i64 %112
  %114 = bitcast %"struct.WTF::KeyValuePair.1147"* %113 to i64*
  store i64 4294967295, i64* %114, align 4
  %115 = add nuw nsw i64 %112, 1
  %116 = icmp eq i64 %115, %33
  br i1 %116, label %117, label %111, !llvm.loop !34

117:                                              ; preds = %111, %107, %31
  %118 = call %"struct.WTF::KeyValuePair.1147"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSE_(%"class.WTF::HashTable.1144"* %0, %"struct.WTF::KeyValuePair.1147"* %36, i32 %32, %"struct.WTF::KeyValuePair.1147"* %1) #18
  ret %"struct.WTF::KeyValuePair.1147"* %118
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1147"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSE_(%"class.WTF::HashTable.1144"*, %"struct.WTF::KeyValuePair.1147"*, i32, %"struct.WTF::KeyValuePair.1147"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.1147"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.1144", %"class.WTF::HashTable.1144"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.1144", %"class.WTF::HashTable.1144"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.1144"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.1147"*, %"struct.WTF::KeyValuePair.1147"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1147"* %16 to i64
  br label %31

18:                                               ; preds = %117
  %19 = bitcast %"class.WTF::HashTable.1144"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %118, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.1147"* [ null, %10 ], [ %121, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #18
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.1144", %"class.WTF::HashTable.1144"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair.1147"* %23

31:                                               ; preds = %13, %117
  %32 = phi i64 [ %17, %13 ], [ %118, %117 ]
  %33 = phi i32 [ %7, %13 ], [ %119, %117 ]
  %34 = phi %"struct.WTF::KeyValuePair.1147"* [ %16, %13 ], [ %120, %117 ]
  %35 = phi %"struct.WTF::KeyValuePair.1147"* [ null, %13 ], [ %121, %117 ]
  %36 = phi i32 [ 0, %13 ], [ %122, %117 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp ugt i32 %40, -3
  br i1 %41, label %117, label %42

42:                                               ; preds = %31
  %43 = shl i32 %40, 15
  %44 = xor i32 %43, -1
  %45 = add i32 %40, %44
  %46 = lshr i32 %45, 10
  %47 = xor i32 %46, %45
  %48 = mul i32 %47, 9
  %49 = lshr i32 %48, 6
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 11
  %52 = xor i32 %51, -1
  %53 = add i32 %50, %52
  %54 = lshr i32 %53, 16
  %55 = xor i32 %54, %53
  %56 = and i32 %55, %14
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %1, i64 %57
  %59 = ptrtoint %"struct.WTF::KeyValuePair.1147"* %58 to i64
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %58, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %80, label %63

63:                                               ; preds = %42
  %64 = xor i32 %55, -1
  %65 = lshr i32 %53, 23
  %66 = add i32 %65, %64
  %67 = shl i32 %66, 12
  %68 = xor i32 %67, %66
  %69 = lshr i32 %68, 7
  %70 = xor i32 %69, %68
  %71 = shl i32 %70, 2
  %72 = xor i32 %71, %70
  %73 = lshr i32 %72, 20
  %74 = xor i32 %73, %72
  %75 = or i32 %74, 1
  %76 = zext i32 %75 to i64
  br label %86

77:                                               ; preds = %93
  %78 = ptrtoint %"struct.WTF::KeyValuePair.1147"* %100 to i64
  %79 = inttoptr i64 %95 to %"struct.WTF::KeyValuePair.1147"*
  br label %80

80:                                               ; preds = %77, %42
  %81 = phi i64 [ %78, %77 ], [ %59, %42 ]
  %82 = phi %"struct.WTF::KeyValuePair.1147"* [ %79, %77 ], [ null, %42 ]
  %83 = icmp eq %"struct.WTF::KeyValuePair.1147"* %82, null
  %84 = ptrtoint %"struct.WTF::KeyValuePair.1147"* %82 to i64
  %85 = select i1 %83, i64 %81, i64 %84
  br label %105

86:                                               ; preds = %93, %63
  %87 = phi i64 [ 0, %63 ], [ %95, %93 ]
  %88 = phi i32 [ %61, %63 ], [ %103, %93 ]
  %89 = phi i64 [ %59, %63 ], [ %101, %93 ]
  %90 = phi i64 [ %57, %63 ], [ %99, %93 ]
  %91 = phi i64 [ 0, %63 ], [ %97, %93 ]
  %92 = icmp eq i32 %88, %40
  br i1 %92, label %105, label %93

93:                                               ; preds = %86
  %94 = icmp eq i32 %88, -2
  %95 = select i1 %94, i64 %89, i64 %87
  %96 = icmp eq i64 %91, 0
  %97 = select i1 %96, i64 %76, i64 %91
  %98 = add i64 %97, %90
  %99 = and i64 %98, %15
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %1, i64 %99
  %101 = ptrtoint %"struct.WTF::KeyValuePair.1147"* %100 to i64
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %100, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, -1
  br i1 %104, label %77, label %86

105:                                              ; preds = %86, %80
  %106 = phi i64 [ %85, %80 ], [ %89, %86 ]
  %107 = inttoptr i64 %106 to %"struct.WTF::KeyValuePair.1147"*
  %108 = bitcast %"struct.WTF::KeyValuePair.1147"* %38 to i64*
  %109 = inttoptr i64 %106 to i64*
  %110 = load i64, i64* %108, align 4
  store i64 %110, i64* %109, align 4
  %111 = load %"struct.WTF::KeyValuePair.1147"*, %"struct.WTF::KeyValuePair.1147"** %9, align 8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %111, i64 %37
  %113 = icmp eq %"struct.WTF::KeyValuePair.1147"* %112, %3
  %114 = select i1 %113, %"struct.WTF::KeyValuePair.1147"* %107, %"struct.WTF::KeyValuePair.1147"* %35
  %115 = load i32, i32* %6, align 8
  %116 = ptrtoint %"struct.WTF::KeyValuePair.1147"* %111 to i64
  br label %117

117:                                              ; preds = %31, %105
  %118 = phi i64 [ %32, %31 ], [ %116, %105 ]
  %119 = phi i32 [ %33, %31 ], [ %115, %105 ]
  %120 = phi %"struct.WTF::KeyValuePair.1147"* [ %34, %31 ], [ %111, %105 ]
  %121 = phi %"struct.WTF::KeyValuePair.1147"* [ %35, %31 ], [ %114, %105 ]
  %122 = add i32 %36, 1
  %123 = icmp eq i32 %122, %119
  br i1 %123, label %18, label %31
}

declare %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink21ContentSecurityPolicy27SetOverrideAllowInlineStyleEb(%"class.blink::ContentSecurityPolicy"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink7Element18SetAttributeHintedERKN3WTF12AtomicStringENS1_17AtomicStringTable10WeakResultES4_RNS_14ExceptionStateE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), i64, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare i64 @_ZNK5blink7Element24WeakLowercaseIfNecessaryERKN3WTF10StringViewE(%"class.blink::Element"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32) local_unnamed_addr #2

declare void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #18
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSParserContext"*
  tail call void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8* %0) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 128
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #18
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 112
  %21 = bitcast i8* %20 to %"class.blink::DOMWrapperWorld"**
  %22 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %21, align 8
  %23 = icmp eq %"class.blink::DOMWrapperWorld"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #18
  %26 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %22) #18
  %30 = bitcast %"class.blink::DOMWrapperWorld"* %22 to i8*
  tail call void @free(i8* %30) #18
  br label %31

31:                                               ; preds = %19, %24, %29
  %32 = bitcast i8* %0 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #18
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element18GetAttributeHintedERKN3WTF12AtomicStringENS1_17AtomicStringTable10WeakResultE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #15

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.26"*, %"class.blink::CSSPropertySourceData"* dereferenceable(32)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.blink::CSSPropertySourceData"* @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.26"* %0, i32 %5, %"class.blink::CSSPropertySourceData"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %8, i64 %10
  tail call void @_ZN5blink21CSSPropertySourceDataC1ERKS0_(%"class.blink::CSSPropertySourceData"* %11, %"class.blink::CSSPropertySourceData"* dereferenceable(32) %6) #18
  %12 = load i32, i32* %3, align 4
  %13 = add i32 %12, 1
  store i32 %13, i32* %3, align 4
  ret void
}

declare void @_ZN5blink21CSSPropertySourceDataC1ERKS0_(%"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertySourceData"* @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.26"*, i32, %"class.blink::CSSPropertySourceData"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"** %4, align 8
  %6 = icmp ugt %"class.blink::CSSPropertySourceData"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %5, i64 %10
  %12 = icmp ugt %"class.blink::CSSPropertySourceData"* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::CSSPropertySourceData"* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21CSSPropertySourceDataEEEmm(i64 %26) #18
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CSSPropertySourceDataEEEPKcv, i64 0, i64 0)) #18
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 5
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 5
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"class.blink::CSSPropertySourceData"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"class.blink::CSSPropertySourceData"* %37 to i8*
  br i1 %40, label %42, label %49, !prof !2

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %46, i1 false) #18
  %47 = bitcast %"class.WTF::Vector.26"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #18
  %51 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %"class.blink::CSSPropertySourceData"* %2 to i64
  %55 = ptrtoint %"class.blink::CSSPropertySourceData"* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 5
  %58 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !2

68:                                               ; preds = %53
  %69 = icmp eq %"class.blink::CSSPropertySourceData"* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21CSSPropertySourceDataEEEmm(i64 %70) #18
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CSSPropertySourceDataEEEPKcv, i64 0, i64 0)) #18
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %"class.blink::CSSPropertySourceData"* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %"class.blink::CSSPropertySourceData"* %77 to i8*
  br i1 %80, label %82, label %88, !prof !2

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %81, i64 %85, i1 false) #18
  %86 = bitcast %"class.WTF::Vector.26"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #18
  %90 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 5
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %"class.blink::CSSPropertySourceData"*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %"class.blink::CSSPropertySourceData"* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %"class.blink::CSSPropertySourceData"* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %"class.blink::CSSPropertySourceData"* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21CSSPropertySourceDataEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.27, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #18
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #18
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_17CSSRuleSourceDataEEELj0EEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_17CSSRuleSourceDataEEELj0EEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink18StyleSheetContentsC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE(%"class.blink::StyleSheetContents"*, %"class.blink::CSSParserContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::StyleRuleImport"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #18
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18StyleSheetContentsEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleSheetContents"*
  tail call void @_ZNK5blink18StyleSheetContents5TraceEPNS_7VisitorE(%"class.blink::StyleSheetContents"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_18StyleSheetContentsEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::StyleSheetContents"*
  tail call void @_ZN5blink18StyleSheetContentsD1Ev(%"class.blink::StyleSheetContents"* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_18StyleSheetContentsEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink18StyleSheetContents5TraceEPNS_7VisitorE(%"class.blink::StyleSheetContents"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink18StyleSheetContentsD1Ev(%"class.blink::StyleSheetContents"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1147"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERjSH_EENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable.1144"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1144", %"class.WTF::HashTable.1144"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1147"*, %"struct.WTF::KeyValuePair.1147"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1147"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1147"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1144"* %0, %"struct.WTF::KeyValuePair.1147"* null)
  %9 = load %"struct.WTF::KeyValuePair.1147"*, %"struct.WTF::KeyValuePair.1147"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1147"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1144", %"class.WTF::HashTable.1144"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.1147"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.1147"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %96, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -2
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.1147"* %52, %"struct.WTF::KeyValuePair.1147"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.1147"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.1147"* %59 to i64*
  store i64 4294967295, i64* %71, align 4
  %72 = getelementptr inbounds %"class.WTF::HashTable.1144", %"class.WTF::HashTable.1144"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.1147"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.1147", %"struct.WTF::KeyValuePair.1147"* %81, i64 0, i32 1
  %84 = load i32, i32* %2, align 4
  store i32 %84, i32* %83, align 4
  %85 = getelementptr inbounds %"class.WTF::HashTable.1144", %"class.WTF::HashTable.1144"* %0, i64 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %85, align 4
  %88 = getelementptr inbounds %"class.WTF::HashTable.1144", %"class.WTF::HashTable.1144"* %0, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, %87
  %91 = shl i32 %90, 1
  %92 = load i32, i32* %12, align 8
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %79
  %95 = tail call %"struct.WTF::KeyValuePair.1147"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1144"* %0, %"struct.WTF::KeyValuePair.1147"* %81)
  br label %96

96:                                               ; preds = %50, %79, %94
  %97 = phi i8 [ 1, %79 ], [ 1, %94 ], [ 0, %50 ]
  %98 = phi %"struct.WTF::KeyValuePair.1147"* [ %81, %79 ], [ %95, %94 ], [ %52, %50 ]
  %99 = insertvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } undef, %"struct.WTF::KeyValuePair.1147"* %98, 0
  %100 = insertvalue { %"struct.WTF::KeyValuePair.1147"*, i8 } %99, i8 %97, 1
  ret { %"struct.WTF::KeyValuePair.1147"*, i8 } %100
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.152"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #18
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #18
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.152"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #18
  %47 = bitcast %"class.WTF::Vector.152"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #18
  %51 = bitcast %"class.WTF::Vector.152"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.152", %"class.WTF::Vector.152"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #18
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #18
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.152"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #18
  %87 = bitcast %"class.WTF::Vector.152"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #18
  %91 = bitcast %"class.WTF::Vector.152"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.27, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #18
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.26"*, %"class.blink::CSSPropertySourceData"* dereferenceable(32)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.blink::CSSPropertySourceData"* @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.26"* %0, i32 %5, %"class.blink::CSSPropertySourceData"* %1) #18
  %7 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %8, i64 %10
  tail call void @_ZN5blink21CSSPropertySourceDataC1ERKS0_(%"class.blink::CSSPropertySourceData"* %11, %"class.blink::CSSPropertySourceData"* dereferenceable(32) %6) #18
  %12 = load i32, i32* %3, align 4
  %13 = add i32 %12, 1
  store i32 %13, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.331"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.331"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #18
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %70, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #18
  br i1 %57, label %115, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %24, %68
  %71 = phi %"class.WTF::String"* [ %64, %68 ], [ %28, %24 ]
  %72 = bitcast %"class.WTF::String"* %71 to i64*
  br label %81

73:                                               ; preds = %68
  %74 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 2147483647
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  br label %81

81:                                               ; preds = %70, %73
  %82 = phi i64* [ %72, %70 ], [ %74, %73 ]
  %83 = phi %"class.WTF::String"* [ %71, %70 ], [ %59, %73 ]
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %85 = bitcast %"class.WTF::String"* %2 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %84, align 8
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  store i64 %86, i64* %82, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #18
  br label %103

103:                                              ; preds = %81, %99, %102
  %104 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.331"* %0, %"class.WTF::String"* %83)
  br label %115

115:                                              ; preds = %55, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %55 ]
  %117 = phi %"class.WTF::String"* [ %83, %103 ], [ %114, %113 ], [ %48, %55 ]
  %118 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %117, 0
  %119 = insertvalue { %"class.WTF::String"*, i8 } %118, i8 %116, 1
  ret { %"class.WTF::String"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_RS1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.331"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.331"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #18
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #18
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #18
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %88
  tail call void @llvm.trap() #18
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #18
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.331", %"class.WTF::HashTable.331"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.331"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS14ShorthandEntryENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.308"*, %"class.std::__1::unique_ptr.310"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.308", %"class.std::__1::vector.308"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.310"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.308"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.308"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #21
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.308", %"class.std::__1::vector.308"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.310"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #21
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.310"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.310"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.310"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.310"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CSS::ShorthandEntry"* null, %"class.blink::protocol::CSS::ShorthandEntry"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.310"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.310"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.308", %"class.std::__1::vector.308"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.310"*, %"class.std::__1::unique_ptr.310"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.310"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.310"*, %"class.std::__1::unique_ptr.310"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.310"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CSS::ShorthandEntry"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.310"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.310"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.310"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CSS::ShorthandEntry"* null, %"class.blink::protocol::CSS::ShorthandEntry"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.310"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !36

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.310"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.310"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.310"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.310"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.310"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.310"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CSS::ShorthandEntry"* null, %"class.blink::protocol::CSS::ShorthandEntry"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.310"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.310"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CSS::ShorthandEntry"* null, %"class.blink::protocol::CSS::ShorthandEntry"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.310"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.310"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CSS::ShorthandEntry"* null, %"class.blink::protocol::CSS::ShorthandEntry"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.310"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.310"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CSS::ShorthandEntry"* null, %"class.blink::protocol::CSS::ShorthandEntry"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.310"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.310"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CSS::ShorthandEntry"* null, %"class.blink::protocol::CSS::ShorthandEntry"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.310"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.310"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CSS::ShorthandEntry"* null, %"class.blink::protocol::CSS::ShorthandEntry"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.310"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.310"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CSS::ShorthandEntry"* null, %"class.blink::protocol::CSS::ShorthandEntry"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.310"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.310"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CSS::ShorthandEntry"* null, %"class.blink::protocol::CSS::ShorthandEntry"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.310"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.310"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.310"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.310"*, %"class.std::__1::unique_ptr.310"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.310"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.310"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.310"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.310"*
  %138 = icmp eq %"class.std::__1::unique_ptr.310"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.310"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CSS::ShorthandEntry"*, %"class.blink::protocol::CSS::ShorthandEntry"** %142, align 8
  store %"class.blink::protocol::CSS::ShorthandEntry"* null, %"class.blink::protocol::CSS::ShorthandEntry"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CSS::ShorthandEntry"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CSS::ShorthandEntry"* %143 to void (%"class.blink::protocol::CSS::ShorthandEntry"*)***
  %147 = load void (%"class.blink::protocol::CSS::ShorthandEntry"*)**, void (%"class.blink::protocol::CSS::ShorthandEntry"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CSS::ShorthandEntry"*)*, void (%"class.blink::protocol::CSS::ShorthandEntry"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CSS::ShorthandEntry"*)*, void (%"class.blink::protocol::CSS::ShorthandEntry"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CSS::ShorthandEntry"* nonnull %143) #18
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.310"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #19
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #16

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #17

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS11CSSPropertyENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr.287"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.287"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #21
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.287"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #21
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.287"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.287"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.287"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.287"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CSS::CSSProperty"* null, %"class.blink::protocol::CSS::CSSProperty"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.287"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.287"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.287"*, %"class.std::__1::unique_ptr.287"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.287"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.287"*, %"class.std::__1::unique_ptr.287"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.287"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CSS::CSSProperty"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.287"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.287"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.287"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CSS::CSSProperty"* null, %"class.blink::protocol::CSS::CSSProperty"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.287"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !37

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.287"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.287"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.287"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.287"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.287"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.287"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CSS::CSSProperty"* null, %"class.blink::protocol::CSS::CSSProperty"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.287"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.287"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CSS::CSSProperty"* null, %"class.blink::protocol::CSS::CSSProperty"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.287"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.287"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CSS::CSSProperty"* null, %"class.blink::protocol::CSS::CSSProperty"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.287"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.287"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CSS::CSSProperty"* null, %"class.blink::protocol::CSS::CSSProperty"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.287"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.287"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CSS::CSSProperty"* null, %"class.blink::protocol::CSS::CSSProperty"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.287"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.287"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CSS::CSSProperty"* null, %"class.blink::protocol::CSS::CSSProperty"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.287"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.287"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CSS::CSSProperty"* null, %"class.blink::protocol::CSS::CSSProperty"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.287"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.287"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CSS::CSSProperty"* null, %"class.blink::protocol::CSS::CSSProperty"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.287"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.287"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.287"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.287"*, %"class.std::__1::unique_ptr.287"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.287"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.287"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.287"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.287"*
  %138 = icmp eq %"class.std::__1::unique_ptr.287"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.287"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CSS::CSSProperty"*, %"class.blink::protocol::CSS::CSSProperty"** %142, align 8
  store %"class.blink::protocol::CSS::CSSProperty"* null, %"class.blink::protocol::CSS::CSSProperty"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CSS::CSSProperty"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CSS::CSSProperty"* %143 to void (%"class.blink::protocol::CSS::CSSProperty"*)***
  %147 = load void (%"class.blink::protocol::CSS::CSSProperty"*)**, void (%"class.blink::protocol::CSS::CSSProperty"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSProperty"*)*, void (%"class.blink::protocol::CSS::CSSProperty"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CSS::CSSProperty"*)*, void (%"class.blink::protocol::CSS::CSSProperty"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CSS::CSSProperty"* nonnull %143) #18
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.287"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #19
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19CSSStyleDeclarationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSStyleDeclaration"*
  %4 = bitcast i8* %1 to void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::Visitor"*)**, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CSSStyleDeclaration"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23InspectorStyleSheetBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorStyleSheetBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::InspectorStyleSheetBase"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_26InspectorResourceContainerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorResourceContainer"*
  tail call void @_ZNK5blink26InspectorResourceContainer5TraceEPNS_7VisitorE(%"class.blink::InspectorResourceContainer"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

declare void @_ZNK5blink26InspectorResourceContainer5TraceEPNS_7VisitorE(%"class.blink::InspectorResourceContainer"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21InspectorNetworkAgentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZNK5blink21InspectorNetworkAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorNetworkAgent"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

declare void @_ZNK5blink21InspectorNetworkAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorNetworkAgent"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSStyleSheet"*
  tail call void @_ZNK5blink13CSSStyleSheet5TraceEPNS_7VisitorE(%"class.blink::CSSStyleSheet"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

declare void @_ZNK5blink13CSSStyleSheet5TraceEPNS_7VisitorE(%"class.blink::CSSStyleSheet"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1117"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1117"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7CSSRuleEE5TraceEPNS_7VisitorEPKv) #18
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7CSSRuleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSRule"*
  %4 = bitcast i8* %1 to void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)**, void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CSSRule"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_(%"class.std::__1::vector.2481"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2481", %"class.std::__1::vector.2481"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2481"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2481"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #21
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2481", %"class.std::__1::vector.2481"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #21
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %43, label %61, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i33
  %53 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %52, i33 1) #18
  %54 = extractvalue { i33, i1 } %53, 1
  %55 = extractvalue { i33, i1 } %53, 0
  %56 = icmp slt i33 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %59, !prof !3

58:                                               ; preds = %49
  tail call void @llvm.trap() #18
  unreachable

59:                                               ; preds = %49
  %60 = trunc i33 %55 to i32
  store i32 %60, i32* %50, align 4
  br label %61

61:                                               ; preds = %34, %44, %59
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %63 = ptrtoint %"class.WTF::String"* %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.2481", %"class.std::__1::vector.2481"* %0, i64 0, i32 0, i32 0
  %65 = load %"class.WTF::String"*, %"class.WTF::String"** %64, align 8
  %66 = ptrtoint %"class.WTF::String"* %65 to i64
  %67 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %68 = icmp eq %"class.WTF::String"* %67, %65
  br i1 %68, label %150, label %69

69:                                               ; preds = %61
  %70 = getelementptr %"class.WTF::String", %"class.WTF::String"* %67, i64 -1, i32 0, i32 0
  %71 = ptrtoint %"class.WTF::StringImpl"** %70 to i64
  %72 = sub i64 %71, %66
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %89, label %77

77:                                               ; preds = %69, %77
  %78 = phi %"class.WTF::String"* [ %81, %77 ], [ %37, %69 ]
  %79 = phi %"class.WTF::String"* [ %82, %77 ], [ %67, %69 ]
  %80 = phi i64 [ %87, %77 ], [ %75, %69 ]
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -1
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -1
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %82, i64 0, i32 0, i32 0
  %84 = bitcast %"class.WTF::String"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.WTF::String"* %81 to i64*
  store i64 %85, i64* %86, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %87 = add i64 %80, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %77, !llvm.loop !38

89:                                               ; preds = %77, %69
  %90 = phi %"class.WTF::String"* [ undef, %69 ], [ %81, %77 ]
  %91 = phi %"class.WTF::String"* [ %37, %69 ], [ %81, %77 ]
  %92 = phi %"class.WTF::String"* [ %67, %69 ], [ %82, %77 ]
  %93 = icmp ult i64 %72, 56
  br i1 %93, label %146, label %94

94:                                               ; preds = %89, %94
  %95 = phi %"class.WTF::String"* [ %139, %94 ], [ %91, %89 ]
  %96 = phi %"class.WTF::String"* [ %140, %94 ], [ %92, %89 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -1
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -1
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %100 = bitcast %"class.WTF::String"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.WTF::String"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %99, align 8
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -2
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -2
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -3
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -3
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.WTF::String"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -4
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -4
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 0, i32 0, i32 0
  %118 = bitcast %"class.WTF::String"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.WTF::String"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -5
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -5
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 0, i32 0, i32 0
  %124 = bitcast %"class.WTF::String"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.WTF::String"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %123, align 8
  %127 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -6
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -6
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %128, i64 0, i32 0, i32 0
  %130 = bitcast %"class.WTF::String"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.WTF::String"* %127 to i64*
  store i64 %131, i64* %132, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %129, align 8
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -7
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -7
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %134, i64 0, i32 0, i32 0
  %136 = bitcast %"class.WTF::String"* %134 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.WTF::String"* %133 to i64*
  store i64 %137, i64* %138, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %135, align 8
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -8
  %140 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -8
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 0, i32 0, i32 0
  %142 = bitcast %"class.WTF::String"* %140 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.WTF::String"* %139 to i64*
  store i64 %143, i64* %144, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %141, align 8
  %145 = icmp eq %"class.WTF::String"* %140, %65
  br i1 %145, label %146, label %94

146:                                              ; preds = %94, %89
  %147 = phi %"class.WTF::String"* [ %90, %89 ], [ %139, %94 ]
  %148 = load i64, i64* %6, align 8
  %149 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %150

150:                                              ; preds = %61, %146
  %151 = phi %"class.WTF::String"* [ %149, %146 ], [ %65, %61 ]
  %152 = phi %"class.WTF::String"* [ %147, %146 ], [ %37, %61 ]
  %153 = phi i64 [ %148, %146 ], [ %66, %61 ]
  %154 = ptrtoint %"class.WTF::String"* %152 to i64
  store i64 %154, i64* %6, align 8
  store i64 %63, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %155 = inttoptr i64 %153 to %"class.WTF::String"*
  %156 = icmp eq %"class.WTF::String"* %151, %155
  br i1 %156, label %178, label %157

157:                                              ; preds = %150, %176
  %158 = phi %"class.WTF::String"* [ %159, %176 ], [ %151, %150 ]
  %159 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %158, i64 -1
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %159, i64 0, i32 0, i32 0
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #18
  br label %176

176:                                              ; preds = %175, %172, %157
  %177 = icmp eq %"class.WTF::String"* %159, %155
  br i1 %177, label %178, label %157

178:                                              ; preds = %176, %150
  %179 = icmp eq i64 %153, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %178
  %181 = inttoptr i64 %153 to i8*
  tail call void @_ZdlPv(i8* %181) #19
  br label %182

182:                                              ; preds = %178, %180
  ret void
}

declare void @_ZN5blink13CSSStyleSheetC1EPNS_18StyleSheetContentsEPNS_13CSSImportRuleE(%"class.blink::CSSStyleSheet"*, %"class.blink::StyleSheetContents"*, %"class.blink::CSSImportRule"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #18
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #18
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink13CSSStyleSheetC1EPNS_18StyleSheetContentsERNS_4NodeEbRKN3WTF12TextPositionE(%"class.blink::CSSStyleSheet"*, %"class.blink::StyleSheetContents"*, %"class.blink::Node"* dereferenceable(64), i1 zeroext, %"class.WTF::TextPosition"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1135"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1135"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1135", %"class.WTF::Vector.1135"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1135"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1135", %"class.WTF::Vector.1135"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #18
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #18
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7CSSRuleEEEEEmm(i64 %14) #18
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.2849"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #18
  %18 = ptrtoint %"class.blink::HeapVectorBacking.2849"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1135", %"class.WTF::Vector.1135"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.1117"*, %"class.blink::Member.1117"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1135", %"class.WTF::Vector.1135"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.2849"* %17, null
  %23 = icmp ne %"class.blink::Member.1117"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.1117"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1135"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.2849", %"class.blink::HeapVectorBacking.2849"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #18
  %33 = bitcast %"class.WTF::Vector.1135"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #18
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #18
  %42 = bitcast %"class.WTF::Vector.1135"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1135", %"class.WTF::Vector.1135"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.2849", %"class.blink::HeapVectorBacking.2849"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #18
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7CSSRuleEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.48, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.2849"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.49, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.50, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.2849"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.2849"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #18
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7CSSRuleEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_116CollectFlatRulesIPNS_11CSSRuleListEEEvT_PNS_10HeapVectorINS_6MemberINS_7CSSRuleEEELj0EEE(%"class.blink::CSSRuleList"*, %"class.blink::HeapVector.1132"*) unnamed_addr #0 {
  %3 = alloca %"class.blink::CSSRule"*, align 8
  %4 = icmp eq %"class.blink::CSSRuleList"* %0, null
  br i1 %4, label %105, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.blink::CSSRuleList"* %0 to i32 (%"class.blink::CSSRuleList"*)***
  %7 = load i32 (%"class.blink::CSSRuleList"*)**, i32 (%"class.blink::CSSRuleList"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::CSSRuleList"*)*, i32 (%"class.blink::CSSRuleList"*)** %7, i64 9
  %9 = load i32 (%"class.blink::CSSRuleList"*)*, i32 (%"class.blink::CSSRuleList"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::CSSRuleList"* nonnull %0) #18
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %105, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::CSSRule"** %3 to i8*
  %14 = bitcast %"class.blink::CSSRuleList"* %0 to %"class.blink::CSSRule"* (%"class.blink::CSSRuleList"*, i32)***
  %15 = getelementptr inbounds %"class.blink::HeapVector.1132", %"class.blink::HeapVector.1132"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %16 = getelementptr inbounds %"class.blink::HeapVector.1132", %"class.blink::HeapVector.1132"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::HeapVector.1132", %"class.blink::HeapVector.1132"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.blink::CSSRule"** %3 to i64*
  %19 = getelementptr inbounds %"class.blink::HeapVector.1132", %"class.blink::HeapVector.1132"* %1, i64 0, i32 0
  br label %20

20:                                               ; preds = %102, %12
  %21 = phi i32 [ 0, %12 ], [ %103, %102 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #18
  store %"class.blink::CSSRule"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSRule"*), %"class.blink::CSSRule"** %3, align 8
  %22 = load %"class.blink::CSSRule"* (%"class.blink::CSSRuleList"*, i32)**, %"class.blink::CSSRule"* (%"class.blink::CSSRuleList"*, i32)*** %14, align 8
  %23 = getelementptr inbounds %"class.blink::CSSRule"* (%"class.blink::CSSRuleList"*, i32)*, %"class.blink::CSSRule"* (%"class.blink::CSSRuleList"*, i32)** %22, i64 10
  %24 = load %"class.blink::CSSRule"* (%"class.blink::CSSRuleList"*, i32)*, %"class.blink::CSSRule"* (%"class.blink::CSSRuleList"*, i32)** %23, align 8
  %25 = call %"class.blink::CSSRule"* %24(%"class.blink::CSSRuleList"* nonnull %0, i32 %21) #18
  store %"class.blink::CSSRule"* %25, %"class.blink::CSSRule"** %3, align 8
  %26 = bitcast %"class.blink::CSSRule"* %25 to i32 (%"class.blink::CSSRule"*)***
  %27 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %26, align 8
  %28 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %27, i64 9
  %29 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %28, align 8
  %30 = call i32 %29(%"class.blink::CSSRule"* %25) #18
  switch i32 %30, label %102 [
    i32 1, label %31
    i32 3, label %31
    i32 2, label %31
    i32 6, label %31
    i32 5, label %31
    i32 15, label %31
    i32 8, label %31
    i32 4, label %50
    i32 12, label %50
    i32 7, label %50
  ]

31:                                               ; preds = %20, %20, %20, %20, %20, %20, %20
  %32 = load i32, i32* %15, align 4
  %33 = load i32, i32* %16, align 8
  %34 = icmp eq i32 %32, %33
  br i1 %34, label %49, label %35, !prof !3

35:                                               ; preds = %31
  %36 = load %"class.blink::Member.1117"*, %"class.blink::Member.1117"** %17, align 8
  %37 = zext i32 %32 to i64
  %38 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %36, i64 %37
  %39 = load i64, i64* %18, align 8
  %40 = bitcast %"class.blink::Member.1117"* %38 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %35
  %44 = inttoptr i64 %39 to i8*
  %45 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %44) #18
  br label %46

46:                                               ; preds = %43, %35
  %47 = load i32, i32* %15, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %15, align 4
  br label %102

49:                                               ; preds = %31
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1135"* %19, %"class.blink::CSSRule"** nonnull dereferenceable(8) %3) #18
  br label %102

50:                                               ; preds = %20, %20, %20
  %51 = load i32, i32* %15, align 4
  %52 = load i32, i32* %16, align 8
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %68, label %54, !prof !3

54:                                               ; preds = %50
  %55 = load %"class.blink::Member.1117"*, %"class.blink::Member.1117"** %17, align 8
  %56 = zext i32 %51 to i64
  %57 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %55, i64 %56
  %58 = load i64, i64* %18, align 8
  %59 = bitcast %"class.blink::Member.1117"* %57 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %54
  %63 = inttoptr i64 %58 to i8*
  %64 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %63) #18
  br label %65

65:                                               ; preds = %62, %54
  %66 = load i32, i32* %15, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %15, align 4
  br label %69

68:                                               ; preds = %50
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1135"* %19, %"class.blink::CSSRule"** nonnull dereferenceable(8) %3) #18
  br label %69

69:                                               ; preds = %65, %68
  %70 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %3, align 8
  %71 = icmp eq %"class.blink::CSSRule"* %70, null
  br i1 %71, label %100, label %72

72:                                               ; preds = %69
  %73 = bitcast %"class.blink::CSSRule"* %70 to i32 (%"class.blink::CSSRule"*)***
  %74 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %73, align 8
  %75 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %74, i64 9
  %76 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %75, align 8
  %77 = call i32 %76(%"class.blink::CSSRule"* nonnull %70) #18
  %78 = icmp eq i32 %77, 4
  br i1 %78, label %79, label %82

79:                                               ; preds = %72
  %80 = bitcast %"class.blink::CSSRule"* %70 to %"class.blink::CSSGroupingRule"*
  %81 = call %"class.blink::CSSRuleList"* @_ZNK5blink15CSSGroupingRule8cssRulesEv(%"class.blink::CSSGroupingRule"* nonnull %80) #18
  br label %100

82:                                               ; preds = %72
  %83 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %73, align 8
  %84 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %83, i64 9
  %85 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %84, align 8
  %86 = call i32 %85(%"class.blink::CSSRule"* nonnull %70) #18
  %87 = icmp eq i32 %86, 12
  br i1 %87, label %88, label %91

88:                                               ; preds = %82
  %89 = bitcast %"class.blink::CSSRule"* %70 to %"class.blink::CSSGroupingRule"*
  %90 = call %"class.blink::CSSRuleList"* @_ZNK5blink15CSSGroupingRule8cssRulesEv(%"class.blink::CSSGroupingRule"* nonnull %89) #18
  br label %100

91:                                               ; preds = %82
  %92 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %73, align 8
  %93 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %92, i64 9
  %94 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %93, align 8
  %95 = call i32 %94(%"class.blink::CSSRule"* nonnull %70) #18
  %96 = icmp eq i32 %95, 7
  br i1 %96, label %97, label %100

97:                                               ; preds = %91
  %98 = bitcast %"class.blink::CSSRule"* %70 to %"class.blink::CSSKeyframesRule"*
  %99 = call %"class.blink::CSSRuleList"* @_ZNK5blink16CSSKeyframesRule8cssRulesEv(%"class.blink::CSSKeyframesRule"* nonnull %98) #18
  br label %100

100:                                              ; preds = %69, %79, %88, %91, %97
  %101 = phi %"class.blink::CSSRuleList"* [ %99, %97 ], [ null, %91 ], [ %90, %88 ], [ %81, %79 ], [ null, %69 ]
  call fastcc void @_ZN5blink12_GLOBAL__N_116CollectFlatRulesIPNS_11CSSRuleListEEEvT_PNS_10HeapVectorINS_6MemberINS_7CSSRuleEEELj0EEE(%"class.blink::CSSRuleList"* %101, %"class.blink::HeapVector.1132"* %1)
  br label %102

102:                                              ; preds = %49, %46, %20, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #18
  %103 = add nuw i32 %21, 1
  %104 = icmp eq i32 %103, %10
  br i1 %104, label %105, label %20

105:                                              ; preds = %102, %5, %2
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1135"*, %"class.blink::CSSRule"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1135", %"class.WTF::Vector.1135"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1135", %"class.WTF::Vector.1135"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1135"* %0, i32 %14) #18
  %15 = getelementptr inbounds %"class.WTF::Vector.1135", %"class.WTF::Vector.1135"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.1117"*, %"class.blink::Member.1117"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.1117", %"class.blink::Member.1117"* %16, i64 %18
  %20 = bitcast %"class.blink::CSSRule"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.1117"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #18
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1135"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1135", %"class.WTF::Vector.1135"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1135", %"class.WTF::Vector.1135"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.1117"*, %"class.blink::Member.1117"** %8, align 8
  %10 = icmp eq %"class.blink::Member.1117"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7CSSRuleEEEEEmm(i64 %11) #18
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.2849"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #18
  %16 = ptrtoint %"class.blink::HeapVectorBacking.2849"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1135"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.2849", %"class.blink::HeapVectorBacking.2849"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #18
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.1117"*, %"class.blink::Member.1117"** %8, align 8
  %26 = icmp eq %"class.blink::Member.1117"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.1117"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #18
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #18
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #18
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25, i64 0, i64 0)) #18
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #18
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1135"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare %"class.blink::CSSRuleList"* @_ZNK5blink15CSSGroupingRule8cssRulesEv(%"class.blink::CSSGroupingRule"*) unnamed_addr #2

declare %"class.blink::CSSRuleList"* @_ZNK5blink16CSSKeyframesRule8cssRulesEv(%"class.blink::CSSKeyframesRule"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptRegexp"* @_ZN5blink25MakeGarbageCollectedTraitINS_12ScriptRegexpEE4CallIJRA12_KcN3WTF19TextCaseSensitivityENS_13MultilineModeEEEEPS1_DpOT_([12 x i8]* dereferenceable(12), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12ScriptRegexpEEEPhm(i64 16) #18
  %6 = bitcast i8* %5 to %"class.blink::ScriptRegexp"*
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #18
  %8 = getelementptr inbounds [12 x i8], [12 x i8]* %0, i64 0, i64 0
  %9 = icmp eq [12 x i8]* %0, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = tail call i64 @strlen(i8* nonnull %8) #20
  br label %12

12:                                               ; preds = %3, %10
  %13 = phi i64 [ %11, %10 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %8, i64 %13) #18
  %14 = load i32, i32* %1, align 4
  %15 = load i32, i32* %2, align 4
  call void @_ZN5blink12ScriptRegexpC1ERKN3WTF6StringENS1_19TextCaseSensitivityENS_13MultilineModeENS0_13CharacterModeE(%"class.blink::ScriptRegexp"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 %14, i32 %15, i32 0) #18
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #18
  br label %32

32:                                               ; preds = %12, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #18
  %33 = getelementptr inbounds i8, i8* %5, i64 -4
  %34 = bitcast i8* %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = or i16 %35, 1
  store atomic i16 %36, i16* %34 release, align 2
  ret %"class.blink::ScriptRegexp"* %6
}

declare void @_ZN5blink12ScriptRegexpC1ERKN3WTF6StringENS1_19TextCaseSensitivityENS_13MultilineModeENS0_13CharacterModeE(%"class.blink::ScriptRegexp"*, %"class.WTF::String"* dereferenceable(8), i32, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12ScriptRegexpEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #18
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12ScriptRegexpEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12ScriptRegexpEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12ScriptRegexpEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12ScriptRegexpEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12ScriptRegexpEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptRegexp"*
  tail call void @_ZNK5blink12ScriptRegexp5TraceEPNS_7VisitorE(%"class.blink::ScriptRegexp"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_12ScriptRegexpEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 8
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #18
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12ScriptRegexpEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink12ScriptRegexp5TraceEPNS_7VisitorE(%"class.blink::ScriptRegexp"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS5ValueENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2518"*, %"class.std::__1::unique_ptr.2520"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2518", %"class.std::__1::vector.2518"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.2520"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2518"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2518"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #21
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2518", %"class.std::__1::vector.2518"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.2520"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #21
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.2520"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.2520"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.2520"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.2520"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CSS::Value"* null, %"class.blink::protocol::CSS::Value"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.2520"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.2520"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2518", %"class.std::__1::vector.2518"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.2520"*, %"class.std::__1::unique_ptr.2520"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.2520"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.2520"*, %"class.std::__1::unique_ptr.2520"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.2520"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CSS::Value"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.2520"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.2520"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.2520"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CSS::Value"* null, %"class.blink::protocol::CSS::Value"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.2520"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !39

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.2520"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.2520"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.2520"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.2520"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.2520"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.2520"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CSS::Value"* null, %"class.blink::protocol::CSS::Value"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.2520"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.2520"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CSS::Value"* null, %"class.blink::protocol::CSS::Value"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.2520"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.2520"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CSS::Value"* null, %"class.blink::protocol::CSS::Value"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.2520"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.2520"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CSS::Value"* null, %"class.blink::protocol::CSS::Value"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.2520"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.2520"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CSS::Value"* null, %"class.blink::protocol::CSS::Value"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.2520"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.2520"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CSS::Value"* null, %"class.blink::protocol::CSS::Value"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.2520"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.2520"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CSS::Value"* null, %"class.blink::protocol::CSS::Value"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.2520"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.2520"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CSS::Value"* null, %"class.blink::protocol::CSS::Value"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.2520"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.2520"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.2520"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.2520"*, %"class.std::__1::unique_ptr.2520"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.2520"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.2520"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.2520"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.2520"*
  %138 = icmp eq %"class.std::__1::unique_ptr.2520"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.2520"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.2520", %"class.std::__1::unique_ptr.2520"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CSS::Value"*, %"class.blink::protocol::CSS::Value"** %142, align 8
  store %"class.blink::protocol::CSS::Value"* null, %"class.blink::protocol::CSS::Value"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CSS::Value"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CSS::Value"* %143 to void (%"class.blink::protocol::CSS::Value"*)***
  %147 = load void (%"class.blink::protocol::CSS::Value"*)**, void (%"class.blink::protocol::CSS::Value"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CSS::Value"*)*, void (%"class.blink::protocol::CSS::Value"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CSS::Value"*)*, void (%"class.blink::protocol::CSS::Value"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CSS::Value"* nonnull %143) #18
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.2520"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #19
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.21"* @_ZN3WTF6VectorINS0_IN5blink11SourceRangeELj0ENS_18PartitionAllocatorEEELj0ES3_E2atEj(%"class.WTF::Vector.37"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.37", %"class.WTF::Vector.37"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.37", %"class.WTF::Vector.37"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::Vector.21"*, %"class.WTF::Vector.21"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %24, i64 %25
  ret %"class.WTF::Vector.21"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14InspectorStyleEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #18
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14InspectorStyleEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14InspectorStyleEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14InspectorStyleEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14InspectorStyleEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14InspectorStyleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19CSSStyleDeclarationEE5TraceEPNS_7VisitorEPKv) #18
  br label %12

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds i8, i8* %1, i64 16
  %14 = bitcast i8* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %0, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23InspectorStyleSheetBaseEE5TraceEPNS_7VisitorEPKv) #18
  br label %23

23:                                               ; preds = %17, %12
  %24 = getelementptr inbounds i8, i8* %1, i64 8
  %25 = bitcast i8* %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = inttoptr i64 %26 to i8*
  %30 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %0, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17CSSRuleSourceDataEE5TraceEPNS_7VisitorEPKv) #18
  br label %34

34:                                               ; preds = %23, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14InspectorStyleEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind }
attributes #14 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind }
attributes #19 = { builtin nounwind }
attributes #20 = { nounwind readonly }
attributes #21 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 1, i32 1048575}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!8 = distinct !{!8, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!11 = distinct !{!11, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!14 = distinct !{!14, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!17 = distinct !{!17, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!20 = distinct !{!20, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!23 = distinct !{!23, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!26 = distinct !{!26, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!29 = distinct !{!29, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!30 = distinct !{!30, !31}
!31 = !{!"llvm.loop.isvectorized", i32 1}
!32 = distinct !{!32, !33}
!33 = !{!"llvm.loop.unroll.disable"}
!34 = distinct !{!34, !35, !31}
!35 = !{!"llvm.loop.unroll.runtime.disable"}
!36 = distinct !{!36, !33}
!37 = distinct !{!37, !33}
!38 = distinct !{!38, !33}
!39 = distinct !{!39, !33}
