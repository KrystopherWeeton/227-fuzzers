; ModuleID = '../../third_party/blink/renderer/core/editing/commands/smart_replace_icu.cc'
source_filename = "../../third_party/blink/renderer/core/editing/commands/smart_replace_icu.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.USet = type opaque
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZZN5blinkL11GetSmartSetEbE13pre_smart_set = internal unnamed_addr global %struct.USet* null, align 8
@_ZZN5blinkL11GetSmartSetEbE14post_smart_set = internal unnamed_addr global %struct.USet* null, align 8
@.str = private unnamed_addr constant [46 x i16] [i16 91, i16 91, i16 58, i16 87, i16 83, i16 112, i16 97, i16 99, i16 101, i16 58, i16 93, i16 32, i16 91, i16 92, i16 117, i16 48, i16 48, i16 48, i16 65, i16 92, i16 117, i16 48, i16 48, i16 48, i16 66, i16 92, i16 117, i16 48, i16 48, i16 48, i16 67, i16 92, i16 117, i16 48, i16 48, i16 48, i16 68, i16 92, i16 117, i16 48, i16 48, i16 56, i16 53, i16 93, i16 93, i16 0], align 2
@.str.1 = private unnamed_addr constant [11 x i8] c"([\22'#$/-`{\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c")].,;:?'!\22%*-/}\00", align 1
@.str.3 = private unnamed_addr constant [6 x i16] [i16 91, i16 58, i16 80, i16 58, i16 93, i16 0], align 2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink29IsCharacterSmartReplaceExemptEib(i32, i1 zeroext) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = load %struct.USet*, %struct.USet** @_ZZN5blinkL11GetSmartSetEbE13pre_smart_set, align 8
  %7 = load %struct.USet*, %struct.USet** @_ZZN5blinkL11GetSmartSetEbE14post_smart_set, align 8
  %8 = select i1 %1, %struct.USet* %6, %struct.USet* %7
  %9 = icmp eq %struct.USet* %8, null
  br i1 %9, label %10, label %124

10:                                               ; preds = %2
  %11 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #3
  store i32 0, i32* %3, align 4
  %12 = call %struct.USet* @uset_openPattern_69(i16* getelementptr inbounds ([46 x i16], [46 x i16]* @.str, i64 0, i64 0), i32 45, i32* nonnull %3) #3
  call void @uset_addRange_69(%struct.USet* %12, i32 4352, i32 4608) #3
  call void @uset_addRange_69(%struct.USet* %12, i32 11904, i32 12256) #3
  call void @uset_addRange_69(%struct.USet* %12, i32 12272, i32 12736) #3
  call void @uset_addRange_69(%struct.USet* %12, i32 12800, i32 42192) #3
  call void @uset_addRange_69(%struct.USet* %12, i32 44032, i32 55215) #3
  call void @uset_addRange_69(%struct.USet* %12, i32 63744, i32 64096) #3
  call void @uset_addRange_69(%struct.USet* %12, i32 65072, i32 65104) #3
  call void @uset_addRange_69(%struct.USet* %12, i32 65280, i32 65520) #3
  call void @uset_addRange_69(%struct.USet* %12, i32 131072, i32 173783) #3
  call void @uset_addRange_69(%struct.USet* %12, i32 194560, i32 195102) #3
  br i1 %1, label %13, label %67

13:                                               ; preds = %10
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #3
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i64 10) #3
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %48, %13
  %17 = phi i64 [ %51, %48 ], [ 0, %13 ]
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  br label %23

23:                                               ; preds = %20, %16
  %24 = phi i32 [ %22, %20 ], [ 0, %16 ]
  %25 = zext i32 %24 to i64
  %26 = icmp ult i64 %17, %25
  br i1 %26, label %27, label %52

27:                                               ; preds = %23
  br i1 %19, label %48, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = icmp ult i64 %17, %31
  br i1 %32, label %33, label %48

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 1
  br i1 %37, label %44, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.WTF::StringImpl"* %38 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 %17
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i16
  br label %48

44:                                               ; preds = %33
  %45 = bitcast %"class.WTF::StringImpl"* %38 to i16*
  %46 = getelementptr inbounds i16, i16* %45, i64 %17
  %47 = load i16, i16* %46, align 2
  br label %48

48:                                               ; preds = %44, %39, %28, %27
  %49 = phi i16 [ 0, %28 ], [ 0, %27 ], [ %43, %39 ], [ %47, %44 ]
  %50 = zext i16 %49 to i32
  call void @uset_add_69(%struct.USet* %12, i32 %50) #3
  %51 = add nuw nsw i64 %17, 1
  br label %16

52:                                               ; preds = %23
  br i1 %19, label %66, label %53

53:                                               ; preds = %52
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #3
  br label %66

66:                                               ; preds = %65, %62, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #3
  br label %122

67:                                               ; preds = %10
  %68 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #3
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 15) #3
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  br label %70

70:                                               ; preds = %102, %67
  %71 = phi i64 [ %105, %102 ], [ 0, %67 ]
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %70
  %78 = phi i32 [ %76, %74 ], [ 0, %70 ]
  %79 = zext i32 %78 to i64
  %80 = icmp ult i64 %71, %79
  br i1 %80, label %81, label %106

81:                                               ; preds = %77
  br i1 %73, label %102, label %82

82:                                               ; preds = %81
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = icmp ult i64 %71, %85
  br i1 %86, label %87, label %102

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 1
  br i1 %91, label %98, label %93

93:                                               ; preds = %87
  %94 = bitcast %"class.WTF::StringImpl"* %92 to i8*
  %95 = getelementptr inbounds i8, i8* %94, i64 %71
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i16
  br label %102

98:                                               ; preds = %87
  %99 = bitcast %"class.WTF::StringImpl"* %92 to i16*
  %100 = getelementptr inbounds i16, i16* %99, i64 %71
  %101 = load i16, i16* %100, align 2
  br label %102

102:                                              ; preds = %98, %93, %82, %81
  %103 = phi i16 [ 0, %82 ], [ 0, %81 ], [ %97, %93 ], [ %101, %98 ]
  %104 = zext i16 %103 to i32
  call void @uset_add_69(%struct.USet* %12, i32 %104) #3
  %105 = add nuw nsw i64 %71, 1
  br label %70

106:                                              ; preds = %77
  br i1 %73, label %120, label %107

107:                                              ; preds = %106
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #3
  br label %120

120:                                              ; preds = %119, %116, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #3
  store i32 0, i32* %3, align 4
  %121 = call %struct.USet* @uset_openPattern_69(i16* getelementptr inbounds ([6 x i16], [6 x i16]* @.str.3, i64 0, i64 0), i32 5, i32* nonnull %3) #3
  call void @uset_addAll_69(%struct.USet* %12, %struct.USet* %121) #3
  call void @uset_close_69(%struct.USet* %121) #3
  br label %122

122:                                              ; preds = %120, %66
  %123 = phi %struct.USet** [ @_ZZN5blinkL11GetSmartSetEbE14post_smart_set, %120 ], [ @_ZZN5blinkL11GetSmartSetEbE13pre_smart_set, %66 ]
  store %struct.USet* %12, %struct.USet** %123, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #3
  br label %124

124:                                              ; preds = %2, %122
  %125 = phi %struct.USet* [ %8, %2 ], [ %12, %122 ]
  %126 = call signext i8 @uset_contains_69(%struct.USet* %125, i32 %0) #3
  %127 = icmp ne i8 %126, 0
  ret i1 %127
}

declare signext i8 @uset_contains_69(%struct.USet*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %struct.USet* @uset_openPattern_69(i16*, i32, i32*) local_unnamed_addr #1

declare void @uset_addRange_69(%struct.USet*, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @uset_addAll_69(%struct.USet*, %struct.USet*) local_unnamed_addr #1

declare void @uset_close_69(%struct.USet*) local_unnamed_addr #1

declare void @uset_add_69(%struct.USet*, i32) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
