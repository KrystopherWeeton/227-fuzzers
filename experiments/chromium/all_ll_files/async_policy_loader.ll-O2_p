; ModuleID = '../../components/policy/core/common/async_policy_loader.cc'
source_filename = "../../components/policy/core/common/async_policy_loader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"class.policy::AsyncPolicyLoader" = type { i32 (...)**, %class.scoped_refptr, i8, %"class.base::RepeatingCallback", %"class.base::Time", %"class.base::Time", %class.scoped_refptr.3, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.2", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.3 = type { %"class.policy::SchemaMap"* }
%"class.policy::SchemaMap" = type { %"class.base::RefCountedThreadSafe.4", %"class.std::__1::map" }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.10", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.policy::PolicyBundle"* }
%"class.policy::PolicyBundle" = type { i32 (...)**, %"class.std::__1::map.18", %"class.policy::PolicyMap" }
%"class.std::__1::map.18" = type { %"class.std::__1::__tree.19" }
%"class.std::__1::__tree.19" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.policy::PolicyMap" = type { %"class.std::__1::map.29", i8, %"class.base::internal::flat_tree", %"class.base::internal::flat_tree" }
%"class.std::__1::map.29" = type { %"class.std::__1::__tree.30" }
%"class.std::__1::__tree.30" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::basic_string"* }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.51 }
%class.scoped_refptr.51 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN6policy17AsyncPolicyLoaderEFvbEJNS_7WeakPtrIS4_EEbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN6policy17AsyncPolicyLoaderEFvbEJNS_7WeakPtrIS3_EEbEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN6policy17AsyncPolicyLoaderEFvbEJNS_7WeakPtrIS4_EEbEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

@_ZTVN6policy17AsyncPolicyLoaderE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.policy::AsyncPolicyLoader"*)* @_ZN6policy17AsyncPolicyLoaderD2Ev to i8*), i8* bitcast (void (%"class.policy::AsyncPolicyLoader"*)* @_ZN6policy17AsyncPolicyLoaderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.policy::AsyncPolicyLoader"*)* @_ZN6policy17AsyncPolicyLoader20LastModificationTimeEv to i8*)] }, align 8
@.str = private unnamed_addr constant [19 x i8] c"ScheduleNextReload\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../components/policy/core/common/async_policy_loader.cc\00", align 1
@_ZN6policy12_GLOBAL__N_115kSettleIntervalE = internal constant %"class.base::TimeDelta" { i64 5000000 }, align 8
@.str.2 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN6policy17AsyncPolicyLoaderD1Ev = hidden unnamed_addr alias void (%"class.policy::AsyncPolicyLoader"*), void (%"class.policy::AsyncPolicyLoader"*)* @_ZN6policy17AsyncPolicyLoaderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy17AsyncPolicyLoaderC2ERK13scoped_refptrIN4base19SequencedTaskRunnerEEb(%"class.policy::AsyncPolicyLoader"*, %class.scoped_refptr* nocapture readonly dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6policy17AsyncPolicyLoaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %7 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %6, align 8
  %8 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 1, i32 0
  store %"class.base::SequencedTaskRunner"* %7, %"class.base::SequencedTaskRunner"** %8, align 8
  %9 = icmp eq %"class.base::SequencedTaskRunner"* %7, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %3, %10
  %14 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 2
  store i8 %4, i8* %14, align 8
  %15 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 7, i32 0
  %17 = ptrtoint %"class.policy::AsyncPolicyLoader"* %0 to i64
  %18 = bitcast %"class.base::internal::BindStateBase"** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %16, i64 %17) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy17AsyncPolicyLoaderD2Ev(%"class.policy::AsyncPolicyLoader"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6policy17AsyncPolicyLoaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 6, i32 0
  %5 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %4, align 8
  %6 = icmp eq %"class.policy::SchemaMap"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  tail call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %5) #10
  %12 = bitcast %"class.policy::SchemaMap"* %5 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  br label %13

13:                                               ; preds = %1, %7, %11
  %14 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %14) #10
  %15 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 1, i32 0
  %16 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %15, align 8
  %17 = icmp eq %"class.base::SequencedTaskRunner"* %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %16, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %19, i64 -2
  %25 = bitcast %"class.base::RefCountedThreadSafe"* %24 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %25) #10
  br label %26

26:                                               ; preds = %13, %18, %23
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6policy17AsyncPolicyLoaderD0Ev(%"class.policy::AsyncPolicyLoader"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN6policy17AsyncPolicyLoader20LastModificationTimeEv(%"class.policy::AsyncPolicyLoader"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy17AsyncPolicyLoader6ReloadEb(%"class.policy::AsyncPolicyLoader"*, i1 zeroext) #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = tail call i64 @_ZN4base4Time3NowEv() #10
  br i1 %1, label %27, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.policy::AsyncPolicyLoader"* %0 to i64 (%"class.policy::AsyncPolicyLoader"*)***
  %7 = load i64 (%"class.policy::AsyncPolicyLoader"*)**, i64 (%"class.policy::AsyncPolicyLoader"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.policy::AsyncPolicyLoader"*)*, i64 (%"class.policy::AsyncPolicyLoader"*)** %7, i64 4
  %9 = load i64 (%"class.policy::AsyncPolicyLoader"*)*, i64 (%"class.policy::AsyncPolicyLoader"*)** %8, align 8
  %10 = tail call i64 %9(%"class.policy::AsyncPolicyLoader"* %0) #10
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %27, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 4, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %10, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  store i64 %10, i64* %13, align 8
  %17 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %4, i64* %17, align 8
  br label %25

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 5, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = sub nsw i64 %4, %20
  %22 = icmp slt i64 %21, 5000000
  br i1 %22, label %23, label %27

23:                                               ; preds = %18
  %24 = tail call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull @_ZN6policy12_GLOBAL__N_115kSettleIntervalE, i64 %21) #10
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i64 [ %24, %23 ], [ 5000000, %16 ]
  tail call void @_ZN6policy17AsyncPolicyLoader18ScheduleNextReloadEN4base9TimeDeltaE(%"class.policy::AsyncPolicyLoader"* %0, i64 %26)
  br label %83

27:                                               ; preds = %18, %5, %2
  %28 = bitcast %"class.policy::AsyncPolicyLoader"* %0 to %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)***
  %29 = load %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)**, %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)*, %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)** %29, i64 2
  %31 = load %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)*, %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)** %30, align 8
  %32 = tail call %"class.policy::PolicyBundle"* %31(%"class.policy::AsyncPolicyLoader"* %0) #10
  br i1 %1, label %53, label %33

33:                                               ; preds = %27
  %34 = bitcast %"class.policy::AsyncPolicyLoader"* %0 to i64 (%"class.policy::AsyncPolicyLoader"*)***
  %35 = load i64 (%"class.policy::AsyncPolicyLoader"*)**, i64 (%"class.policy::AsyncPolicyLoader"*)*** %34, align 8
  %36 = getelementptr inbounds i64 (%"class.policy::AsyncPolicyLoader"*)*, i64 (%"class.policy::AsyncPolicyLoader"*)** %35, i64 4
  %37 = load i64 (%"class.policy::AsyncPolicyLoader"*)*, i64 (%"class.policy::AsyncPolicyLoader"*)** %36, align 8
  %38 = tail call i64 %37(%"class.policy::AsyncPolicyLoader"* %0) #10
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 4, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %38, %42
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  store i64 %38, i64* %41, align 8
  %45 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %4, i64* %45, align 8
  br label %75

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 5, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = sub nsw i64 %4, %48
  %50 = icmp slt i64 %49, 5000000
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = tail call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull @_ZN6policy12_GLOBAL__N_115kSettleIntervalE, i64 %49) #10
  br label %75

53:                                               ; preds = %46, %33, %27
  %54 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 6, i32 0
  %55 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %54, align 8
  tail call void @_ZNK6policy9SchemaMap12FilterBundleEPNS_12PolicyBundleEb(%"class.policy::SchemaMap"* %55, %"class.policy::PolicyBundle"* %32, i1 zeroext true) #10
  %56 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56)
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.policy::PolicyBundle"* %32, %"class.policy::PolicyBundle"** %57, align 8
  %58 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %58, align 8
  %60 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %59, i64 0, i32 1
  %61 = bitcast void ()** %60 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr"*)**
  %62 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr"*)** %61, align 8
  call void %62(%"class.base::internal::BindStateBase"* %59, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #10
  %63 = load %"class.policy::PolicyBundle"*, %"class.policy::PolicyBundle"** %57, align 8
  store %"class.policy::PolicyBundle"* null, %"class.policy::PolicyBundle"** %57, align 8
  %64 = icmp eq %"class.policy::PolicyBundle"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %53
  %66 = bitcast %"class.policy::PolicyBundle"* %63 to void (%"class.policy::PolicyBundle"*)***
  %67 = load void (%"class.policy::PolicyBundle"*)**, void (%"class.policy::PolicyBundle"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.policy::PolicyBundle"*)*, void (%"class.policy::PolicyBundle"*)** %67, i64 1
  %69 = load void (%"class.policy::PolicyBundle"*)*, void (%"class.policy::PolicyBundle"*)** %68, align 8
  call void %69(%"class.policy::PolicyBundle"* nonnull %63) #10
  br label %70

70:                                               ; preds = %53, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56)
  %71 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 2
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %83, label %74

74:                                               ; preds = %70
  call void @_ZN6policy17AsyncPolicyLoader18ScheduleNextReloadEN4base9TimeDeltaE(%"class.policy::AsyncPolicyLoader"* %0, i64 900000000)
  br label %83

75:                                               ; preds = %44, %51
  %76 = phi i64 [ %52, %51 ], [ 5000000, %44 ]
  tail call void @_ZN6policy17AsyncPolicyLoader18ScheduleNextReloadEN4base9TimeDeltaE(%"class.policy::AsyncPolicyLoader"* %0, i64 %76)
  %77 = icmp eq %"class.policy::PolicyBundle"* %32, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.policy::PolicyBundle"* %32 to void (%"class.policy::PolicyBundle"*)***
  %80 = load void (%"class.policy::PolicyBundle"*)**, void (%"class.policy::PolicyBundle"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.policy::PolicyBundle"*)*, void (%"class.policy::PolicyBundle"*)** %80, i64 1
  %82 = load void (%"class.policy::PolicyBundle"*)*, void (%"class.policy::PolicyBundle"*)** %81, align 8
  tail call void %82(%"class.policy::PolicyBundle"* nonnull %32) #10
  br label %83

83:                                               ; preds = %74, %70, %78, %75, %25
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6policy17AsyncPolicyLoader14IsSafeToReloadERKN4base4TimeEPNS1_9TimeDeltaE(%"class.policy::AsyncPolicyLoader"*, %"class.base::Time"* nocapture readonly dereferenceable(8), %"class.base::TimeDelta"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.policy::AsyncPolicyLoader"* %0 to i64 (%"class.policy::AsyncPolicyLoader"*)***
  %5 = load i64 (%"class.policy::AsyncPolicyLoader"*)**, i64 (%"class.policy::AsyncPolicyLoader"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.policy::AsyncPolicyLoader"*)*, i64 (%"class.policy::AsyncPolicyLoader"*)** %5, i64 4
  %7 = load i64 (%"class.policy::AsyncPolicyLoader"*)*, i64 (%"class.policy::AsyncPolicyLoader"*)** %6, align 8
  %8 = tail call i64 %7(%"class.policy::AsyncPolicyLoader"* %0) #10
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 4, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %8, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  store i64 %8, i64* %11, align 8
  %15 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 5, i32 0, i32 0
  %17 = load i64, i64* %15, align 8
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 5000000, i64* %18, align 8
  br label %29

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 5, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = sub nsw i64 %23, %21
  %25 = icmp slt i64 %24, 5000000
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = tail call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull @_ZN6policy12_GLOBAL__N_115kSettleIntervalE, i64 %24)
  %28 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %27, i64* %28, align 8
  br label %29

29:                                               ; preds = %26, %19, %3, %14
  %30 = phi i1 [ false, %14 ], [ true, %3 ], [ false, %26 ], [ true, %19 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy17AsyncPolicyLoader18ScheduleNextReloadEN4base9TimeDeltaE(%"class.policy::AsyncPolicyLoader"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 7, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %7) #10
  %8 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 1, i32 0
  %9 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %8, align 8
  %10 = bitcast %"class.base::SequencedTaskRunner"* %9 to %"class.base::TaskRunner"*
  %11 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 115) #10
  %12 = bitcast %"class.base::WeakPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  %13 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10, !noalias !3
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %7) #10, !noalias !3
  %14 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 7, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !3
  %16 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %16, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %15) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10, !noalias !3
  %17 = call i8* @_Znwm(i64 72) #11, !noalias !6
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN6policy17AsyncPolicyLoaderEFvbEJNS_7WeakPtrIS4_EEbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN6policy17AsyncPolicyLoaderEFvbEJNS_7WeakPtrIS3_EEbEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN6policy17AsyncPolicyLoaderEFvbEJNS_7WeakPtrIS4_EEbEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #10, !noalias !6
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.policy::AsyncPolicyLoader"*, i1)* @_ZN6policy17AsyncPolicyLoader6ReloadEb to i64), i64 0>, <2 x i64>* %20, align 8, !noalias !6
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = bitcast i8* %21 to %"class.base::internal::WeakReference"*
  %23 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %22, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %23) #10, !noalias !6
  %24 = getelementptr inbounds i8, i8* %17, i64 56
  %25 = bitcast i8* %24 to i64*
  %26 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !noalias !6
  store i64 %27, i64* %25, align 8, !noalias !6
  %28 = getelementptr inbounds i8, i8* %17, i64 64
  store i8 0, i8* %28, align 1, !noalias !6
  %29 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %17, i8** %29, align 8, !alias.scope !6
  %30 = bitcast %"class.base::SequencedTaskRunner"* %9 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %31 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %30, align 8
  %32 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %31, align 8
  %33 = call zeroext i1 %32(%"class.base::TaskRunner"* %10, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5, i64 %1) #10
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #10
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #10
  ret void
}

declare void @_ZNK6policy9SchemaMap12FilterBundleEPNS_12PolicyBundleEb(%"class.policy::SchemaMap"*, %"class.policy::PolicyBundle"*, i1 zeroext) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.policy::PolicyBundle"* @_ZN6policy17AsyncPolicyLoader11InitialLoadERK13scoped_refptrINS_9SchemaMapEE(%"class.policy::AsyncPolicyLoader"*, %class.scoped_refptr.3* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.policy::AsyncPolicyLoader"* %0 to i64 (%"class.policy::AsyncPolicyLoader"*)***
  %4 = load i64 (%"class.policy::AsyncPolicyLoader"*)**, i64 (%"class.policy::AsyncPolicyLoader"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.policy::AsyncPolicyLoader"*)*, i64 (%"class.policy::AsyncPolicyLoader"*)** %4, i64 4
  %6 = load i64 (%"class.policy::AsyncPolicyLoader"*)*, i64 (%"class.policy::AsyncPolicyLoader"*)** %5, align 8
  %7 = tail call i64 %6(%"class.policy::AsyncPolicyLoader"* %0) #10
  %8 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %1, i64 0, i32 0
  %10 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %9, align 8
  %11 = icmp eq %"class.policy::SchemaMap"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  br label %15

15:                                               ; preds = %2, %12
  %16 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 6
  %17 = ptrtoint %"class.policy::SchemaMap"* %10 to i64
  %18 = bitcast %class.scoped_refptr.3* %16 to i64*
  %19 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %16, i64 0, i32 0
  %20 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %19, align 8
  store i64 %17, i64* %18, align 8
  %21 = icmp eq %"class.policy::SchemaMap"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  tail call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %20) #10
  %27 = bitcast %"class.policy::SchemaMap"* %20 to i8*
  tail call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %15, %22, %26
  %29 = bitcast %"class.policy::AsyncPolicyLoader"* %0 to %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)***
  %30 = load %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)**, %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)*, %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)** %30, i64 2
  %32 = load %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)*, %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)** %31, align 8
  %33 = tail call %"class.policy::PolicyBundle"* %32(%"class.policy::AsyncPolicyLoader"* %0) #10
  %34 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %19, align 8
  tail call void @_ZNK6policy9SchemaMap12FilterBundleEPNS_12PolicyBundleEb(%"class.policy::SchemaMap"* %34, %"class.policy::PolicyBundle"* %33, i1 zeroext true) #10
  ret %"class.policy::PolicyBundle"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy17AsyncPolicyLoader4InitERKN4base17RepeatingCallbackIFvNSt3__110unique_ptrINS_12PolicyBundleENS3_14default_deleteIS5_EEEEEEE(%"class.policy::AsyncPolicyLoader"*, %"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 3, i32 0
  %4 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #10
  %6 = bitcast %"class.policy::AsyncPolicyLoader"* %0 to void (%"class.policy::AsyncPolicyLoader"*)***
  %7 = load void (%"class.policy::AsyncPolicyLoader"*)**, void (%"class.policy::AsyncPolicyLoader"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.policy::AsyncPolicyLoader"*)*, void (%"class.policy::AsyncPolicyLoader"*)** %7, i64 3
  %9 = load void (%"class.policy::AsyncPolicyLoader"*)*, void (%"class.policy::AsyncPolicyLoader"*)** %8, align 8
  tail call void %9(%"class.policy::AsyncPolicyLoader"* %0) #10
  %10 = bitcast %"class.policy::AsyncPolicyLoader"* %0 to i64 (%"class.policy::AsyncPolicyLoader"*)***
  %11 = load i64 (%"class.policy::AsyncPolicyLoader"*)**, i64 (%"class.policy::AsyncPolicyLoader"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.policy::AsyncPolicyLoader"*)*, i64 (%"class.policy::AsyncPolicyLoader"*)** %11, i64 4
  %13 = load i64 (%"class.policy::AsyncPolicyLoader"*)*, i64 (%"class.policy::AsyncPolicyLoader"*)** %12, align 8
  %14 = tail call i64 %13(%"class.policy::AsyncPolicyLoader"* %0) #10
  %15 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 4, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %14, %16
  br i1 %17, label %19, label %18

18:                                               ; preds = %2
  tail call void @_ZN6policy17AsyncPolicyLoader6ReloadEb(%"class.policy::AsyncPolicyLoader"* %0, i1 zeroext false)
  br label %19

19:                                               ; preds = %2, %18
  %20 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 2
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @_ZN6policy17AsyncPolicyLoader18ScheduleNextReloadEN4base9TimeDeltaE(%"class.policy::AsyncPolicyLoader"* %0, i64 900000000)
  br label %24

24:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy17AsyncPolicyLoader15RefreshPoliciesE13scoped_refptrINS_9SchemaMapEE(%"class.policy::AsyncPolicyLoader"*, %"class.policy::SchemaMap"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = icmp eq %"class.policy::SchemaMap"* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 1 monotonic
  br label %8

8:                                                ; preds = %2, %5
  %9 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 6
  %10 = ptrtoint %"class.policy::SchemaMap"* %1 to i64
  %11 = bitcast %class.scoped_refptr.3* %9 to i64*
  %12 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %9, i64 0, i32 0
  %13 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %12, align 8
  store i64 %10, i64* %11, align 8
  %14 = icmp eq %"class.policy::SchemaMap"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  tail call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %13) #10
  %20 = bitcast %"class.policy::SchemaMap"* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %8, %15, %19
  %22 = tail call i64 @_ZN4base4Time3NowEv() #10
  %23 = bitcast %"class.policy::AsyncPolicyLoader"* %0 to %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)***
  %24 = load %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)**, %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)*, %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)** %24, i64 2
  %26 = load %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)*, %"class.policy::PolicyBundle"* (%"class.policy::AsyncPolicyLoader"*)** %25, align 8
  %27 = tail call %"class.policy::PolicyBundle"* %26(%"class.policy::AsyncPolicyLoader"* %0) #10
  %28 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 6, i32 0
  %29 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %28, align 8
  tail call void @_ZNK6policy9SchemaMap12FilterBundleEPNS_12PolicyBundleEb(%"class.policy::SchemaMap"* %29, %"class.policy::PolicyBundle"* %27, i1 zeroext true) #10
  %30 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.policy::PolicyBundle"* %27, %"class.policy::PolicyBundle"** %31, align 8
  %32 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %32, align 8
  %34 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %33, i64 0, i32 1
  %35 = bitcast void ()** %34 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr"*)**
  %36 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr"*)** %35, align 8
  call void %36(%"class.base::internal::BindStateBase"* %33, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #10
  %37 = load %"class.policy::PolicyBundle"*, %"class.policy::PolicyBundle"** %31, align 8
  store %"class.policy::PolicyBundle"* null, %"class.policy::PolicyBundle"** %31, align 8
  %38 = icmp eq %"class.policy::PolicyBundle"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %21
  %40 = bitcast %"class.policy::PolicyBundle"* %37 to void (%"class.policy::PolicyBundle"*)***
  %41 = load void (%"class.policy::PolicyBundle"*)**, void (%"class.policy::PolicyBundle"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.policy::PolicyBundle"*)*, void (%"class.policy::PolicyBundle"*)** %41, i64 1
  %43 = load void (%"class.policy::PolicyBundle"*)*, void (%"class.policy::PolicyBundle"*)** %42, align 8
  call void %43(%"class.policy::PolicyBundle"* nonnull %37) #10
  br label %44

44:                                               ; preds = %39, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  %45 = getelementptr inbounds %"class.policy::AsyncPolicyLoader", %"class.policy::AsyncPolicyLoader"* %0, i64 0, i32 2
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %44
  call void @_ZN6policy17AsyncPolicyLoader18ScheduleNextReloadEN4base9TimeDeltaE(%"class.policy::AsyncPolicyLoader"* %0, i64 900000000) #10
  br label %49

49:                                               ; preds = %44, %48
  br i1 %4, label %56, label %50

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw sub i32* %51, i32 1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %1) #10
  %55 = bitcast %"class.policy::SchemaMap"* %1 to i8*
  call void @_ZdlPv(i8* %55) #11
  br label %56

56:                                               ; preds = %49, %50, %54
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #10
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !11
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #10
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %26, i8* %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @__cxa_pure_virtual() unnamed_addr

declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #6

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #7

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #6

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #6

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #6

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #6

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #1

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN6policy17AsyncPolicyLoaderEFvbEJNS_7WeakPtrIS4_EEbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #10
  br i1 %8, label %9, label %46

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.policy::AsyncPolicyLoader"**
  %12 = load %"class.policy::AsyncPolicyLoader"*, %"class.policy::AsyncPolicyLoader"** %11, align 8
  %13 = icmp eq %"class.policy::AsyncPolicyLoader"* %12, null
  br i1 %13, label %46, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #10
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)) #10
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #10
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.policy::AsyncPolicyLoader"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.policy::AsyncPolicyLoader"*, i1)**
  %39 = load void (%"class.policy::AsyncPolicyLoader"*, i1)*, void (%"class.policy::AsyncPolicyLoader"*, i1)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.policy::AsyncPolicyLoader"*, i1)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.policy::AsyncPolicyLoader"*, i1)* [ %39, %33 ], [ %41, %40 ]
  %44 = load i8, i8* %6, align 1, !range !2
  %45 = icmp ne i8 %44, 0
  call void %43(%"class.policy::AsyncPolicyLoader"* %30, i1 zeroext %45) #10
  br label %46

46:                                               ; preds = %1, %9, %42
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #6

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN6policy17AsyncPolicyLoaderEFvbEJNS_7WeakPtrIS3_EEbEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN6policy17AsyncPolicyLoaderEFvbEJNS_7WeakPtrIS4_EEbEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.policy::AsyncPolicyLoader"**
  %9 = load %"class.policy::AsyncPolicyLoader"*, %"class.policy::AsyncPolicyLoader"** %8, align 8
  %10 = icmp ne %"class.policy::AsyncPolicyLoader"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #10
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #6

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryIN6policy17AsyncPolicyLoaderEE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryIN6policy17AsyncPolicyLoaderEE10GetWeakPtrEv"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN6policy17AsyncPolicyLoaderEFvbEJNS_7WeakPtrIS4_EEbEEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN6policy17AsyncPolicyLoaderEFvbEJNS_7WeakPtrIS4_EEbEEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceIMN6policy17AsyncPolicyLoaderEFvbEJNS_7WeakPtrIS2_EEbEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceIMN6policy17AsyncPolicyLoaderEFvbEJNS_7WeakPtrIS2_EEbEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!11 = !{!"branch_weights", i32 1, i32 2000}
