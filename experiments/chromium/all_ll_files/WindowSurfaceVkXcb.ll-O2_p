; ModuleID = '../../third_party/angle/src/libANGLE/renderer/vulkan/xcb/WindowSurfaceVkXcb.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/vulkan/xcb/WindowSurfaceVkXcb.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.VkInstance_T = type opaque
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkSurfaceKHR_T = type opaque
%"class.rx::WindowSurfaceVkXcb" = type { %"class.rx::WindowSurfaceVk", %struct.xcb_connection_t* }
%"class.rx::WindowSurfaceVk" = type { %"class.rx::SurfaceVk", i64, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR, %"class.std::__1::vector.33", %struct.VkSwapchainKHR_T*, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.40", i64, %"class.std::__1::vector.41", %"class.std::__1::vector.56", %"class.std::__1::vector.65", %"class.rx::vk::Semaphore", i32, %"class.rx::vk::Recycler", %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageViewHelper", %"class.angle::ObserverBinding", %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageViewHelper", %"class.angle::ObserverBinding", %"class.rx::vk::Framebuffer", i8, i64 }
%"class.rx::SurfaceVk" = type { %"class.rx::SurfaceImpl", %"class.angle::ObserverInterface", %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk" }
%"class.rx::SurfaceImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"struct.egl::SurfaceState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.rx::RenderTargetVk" = type { %"class.rx::FramebufferAttachmentRenderTarget", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageViewHelper"*, %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageViewHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, i32 }
%"class.rx::FramebufferAttachmentRenderTarget" = type { i32 (...)** }
%"class.gl::LevelIndexWrapper" = type { i32 }
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { i32*, i32*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { i32* }
%struct.VkSwapchainKHR_T = type opaque
%"struct.std::__1::array.40" = type { [2 x %"class.rx::Serial"] }
%"class.rx::Serial" = type { i64 }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.rx::impl::SwapchainCleanupData"*, %"struct.rx::impl::SwapchainCleanupData"*, %"class.std::__1::__compressed_pair.51" }
%"struct.rx::impl::SwapchainCleanupData" = type { %struct.VkSwapchainKHR_T*, %"class.std::__1::vector.43" }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"class.rx::vk::Semaphore"*, %"class.rx::vk::Semaphore"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.rx::vk::Semaphore"* }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.rx::impl::SwapchainCleanupData"* }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"struct.rx::impl::SwapchainImage"*, %"struct.rx::impl::SwapchainImage"*, %"class.std::__1::__compressed_pair.60" }
%"struct.rx::impl::SwapchainImage" = type { [8 x i8], %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageViewHelper", %"class.rx::vk::Framebuffer", %"struct.std::__1::array.59", i64, i64 }
%"struct.std::__1::array.59" = type { [3 x %"struct.rx::impl::ImagePresentHistory"] }
%"struct.rx::impl::ImagePresentHistory" = type { [8 x i8], %"class.rx::vk::Semaphore", %"class.std::__1::vector.41" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.rx::impl::SwapchainImage"* }
%"class.std::__1::vector.65" = type { %"class.std::__1::__vector_base.66" }
%"class.std::__1::__vector_base.66" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.angle::ObserverBinding"* }
%"class.rx::vk::Semaphore" = type { %"class.rx::vk::WrappedObject.45" }
%"class.rx::vk::WrappedObject.45" = type { %struct.VkSemaphore_T* }
%struct.VkSemaphore_T = type opaque
%"class.rx::vk::Recycler" = type { %"class.std::__1::vector.43" }
%"class.rx::vk::ImageHelper" = type <{ %"class.rx::vk::Resource", %"class.angle::Subject", %"class.rx::vk::Image", %"class.rx::vk::DeviceMemory", i32, i32, i32, i32, %struct.VkExtent3D, i8, [3 x i8], %"struct.rx::vk::Format"*, i32, %"class.rx::vk::ImageSerial", i32, i32, i32, i32, %"class.angle::BitSetT", [6 x i8], %"class.rx::vk::BindingPointer", i64, %"class.gl::LevelIndexWrapper", i32, i32, [4 x i8], %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.7", %struct.Optional, %"struct.std::__1::array.15", %"struct.std::__1::array.15", [4 x i8] }>
%"class.rx::vk::Resource" = type { i32 (...)**, %"class.rx::vk::SharedResourceUse" }
%"class.rx::vk::SharedResourceUse" = type { %"struct.rx::vk::ResourceUse"* }
%"struct.rx::vk::ResourceUse" = type { i32, %"class.rx::Serial" }
%"class.rx::vk::Image" = type { %"class.rx::vk::WrappedObject" }
%"class.rx::vk::WrappedObject" = type { %struct.VkImage_T* }
%struct.VkImage_T = type opaque
%"class.rx::vk::DeviceMemory" = type { %"class.rx::vk::WrappedObject.0" }
%"class.rx::vk::WrappedObject.0" = type { %struct.VkDeviceMemory_T* }
%struct.VkDeviceMemory_T = type opaque
%struct.VkExtent3D = type { i32, i32, i32 }
%"struct.rx::vk::Format" = type <{ i32, i32, i32, i32, i32, [4 x i8], void (i64, i64, i64, i8*, i64, i64)*, { void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, i8 } (i32)*, void (i8*, i64, i64, i8*)*, void (i8*, i64, i64, i8*)*, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.rx::vk::ImageSerial" = type { i32 }
%"class.angle::BitSetT" = type { i16 }
%"class.rx::vk::BindingPointer" = type { %"class.rx::vk::RefCounted"* }
%"class.rx::vk::RefCounted" = type opaque
%"class.rx::vk::DynamicBuffer" = type { i32, i8, i32, i64, %"class.std::__1::unique_ptr", i32, i32, i64, i64, i32, %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.rx::vk::BufferHelper"* }
%"class.rx::vk::BufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Buffer", %"class.rx::vk::BufferMemory", i32, i64, i32, i32, i32, i32, i32, %"class.rx::vk::BufferSerial" }
%"class.rx::vk::Buffer" = type { %"class.rx::vk::WrappedObject.1" }
%"class.rx::vk::WrappedObject.1" = type { %struct.VkBuffer_T* }
%struct.VkBuffer_T = type opaque
%"class.rx::vk::BufferMemory" = type { [8 x i8], %"class.rx::vk::Allocation", %"class.rx::vk::DeviceMemory", i8*, i8* }
%"class.rx::vk::Allocation" = type { %"class.rx::vk::WrappedObject.2" }
%"class.rx::vk::WrappedObject.2" = type { %struct.VmaAllocation_T* }
%struct.VmaAllocation_T = type opaque
%"class.rx::vk::BufferSerial" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.std::__1::vector.9"*, %"class.std::__1::vector.9"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::vector.9" = type opaque
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::vector.9"* }
%struct.Optional = type { i8, %"struct.rx::vk::ImageHelper::ClearUpdate" }
%"struct.rx::vk::ImageHelper::ClearUpdate" = type { i32, %union.VkClearValue, i32, i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"struct.std::__1::array.15" = type { [16 x %"class.angle::BitSetT.16"] }
%"class.angle::BitSetT.16" = type { i8 }
%"class.rx::vk::ImageViewHelper" = type <{ %"class.rx::vk::Resource", %"class.gl::LevelIndexWrapper.17", [4 x i8], %"class.std::__1::vector.18", %"class.std::__1::vector.18", %"class.std::__1::vector.18", %"class.std::__1::vector.18", %"class.std::__1::vector.18", %"class.std::__1::vector.18", %"class.std::__1::vector.18", i8, [7 x i8], %"class.std::__1::vector.18", %"class.std::__1::vector.26", %"class.std::__1::vector.18", %"class.std::__1::vector.26", %"class.std::__1::vector.18", %"class.std::__1::vector.26", %"class.rx::vk::ImageOrBufferViewSerial", [4 x i8] }>
%"class.gl::LevelIndexWrapper.17" = type { i32 }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.rx::vk::ImageView"*, %"class.rx::vk::ImageView"*, %"class.std::__1::__compressed_pair.21" }
%"class.rx::vk::ImageView" = type { %"class.rx::vk::WrappedObject.20" }
%"class.rx::vk::WrappedObject.20" = type { %struct.VkImageView_T* }
%struct.VkImageView_T = type opaque
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.rx::vk::ImageView"* }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::vector.18"*, %"class.std::__1::vector.18"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::vector.18"* }
%"class.rx::vk::ImageOrBufferViewSerial" = type { i32 }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.rx::vk::Framebuffer" = type { %"class.rx::vk::WrappedObject.58" }
%"class.rx::vk::WrappedObject.58" = type { %struct.VkFramebuffer_T* }
%struct.VkFramebuffer_T = type opaque
%"struct.egl::SurfaceState" = type opaque
%"class.rx::vk::Context" = type { i32 (...)**, %"class.rx::RendererVk"* }
%"class.rx::RendererVk" = type { %"class.egl::Display"*, i8, [7 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"struct.angle::FeaturesVk", %struct.VkInstance_T*, i8, i8, i8, i32, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT, %struct.VkPhysicalDeviceProvokingVertexFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT, %struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT, %struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT, %struct.VkPhysicalDeviceSubgroupProperties, %struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT, %struct.VkDeviceDeviceMemoryReportCreateInfoEXT, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDeviceDepthStencilResolveProperties, %struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT, %struct.VkExternalFenceProperties, %struct.VkExternalSemaphoreProperties, %struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures, %"class.std::__1::vector.104", %"class.angle::PackedEnumMap.111", i32, i32, i64, i64, i32, %struct.VkDevice_T*, %"class.rx::SerialFactoryBase", i8, %"class.std::__1::mutex", %"class.std::__1::vector.114", %"class.rx::vk::MemoryProperties", %"class.rx::vk::FormatTable", %"class.std::__1::mutex", %"class.rx::vk::PipelineCache", i32, i8, i8, %"class.angle::PackedEnumMap.130", %"class.std::__1::basic_string", i32, %"class.rx::DebugAnnotatorVk", i32, %"class.rx::vk::CommandPool", %"class.std::__1::deque", %"class.std::__1::mutex", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::vector.181", %"class.rx::vk::CommandProcessor", %"class.rx::vk::Allocator", %"class.rx::SamplerCache", %"class.rx::SamplerYcbcrConversionCache", %"class.rx::vk::ActiveHandleCounter", %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::MemoryReport", %"class.angle::PackedEnumMap.363", i32, %"class.std::__1::shared_ptr" }
%"class.egl::Display" = type opaque
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector.72", %"class.std::__1::vector.72", %"class.std::__1::vector.72", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.81", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.83", %"struct.std::__1::array.83", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { i32*, i32*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i32* }
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.79", i32 }
%"struct.std::__1::array.79" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.80" }
%"struct.std::__1::array.80" = type { [6 x i32] }
%"class.angle::PackedEnumMap.81" = type { %"struct.std::__1::array.82" }
%"struct.std::__1::array.82" = type { [6 x i64] }
%"struct.std::__1::array.83" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.84" }
%"class.angle::PackedEnumMap.84" = type { %"struct.std::__1::array.85" }
%"struct.std::__1::array.85" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.86", %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { i64 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.angle::FeaturesVk" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.std::__1::array.103", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.94" }
%"class.std::__1::__tree.94" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::array.103" = type { [4 x %"struct.angle::Feature"] }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugReportCallbackEXT_T = type opaque
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceLineRasterizationFeaturesEXT = type { i32, i8*, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProvokingVertexFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceSubgroupProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT = type { i32, i8*, i32 }
%struct.VkDeviceDeviceMemoryReportCreateInfoEXT = type { i32, i8*, i32, void (%struct.VkDeviceMemoryReportCallbackDataEXT*, i8*)*, i8* }
%struct.VkDeviceMemoryReportCallbackDataEXT = type { i32, i8*, i32, i32, i64, i64, i32, i64, i32 }
%struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceDepthStencilResolveProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures = type { i32, i8*, i32 }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.106" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %struct.VkQueueFamilyProperties* }
%"class.angle::PackedEnumMap.111" = type { %"struct.std::__1::array.112" }
%"struct.std::__1::array.112" = type { [3 x i8] }
%struct.VkDevice_T = type opaque
%"class.rx::SerialFactoryBase" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.113" }
%"struct.std::__1::__atomic_base.113" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"*, %"class.std::__1::__compressed_pair.123" }
%"class.rx::vk::SharedGarbage" = type { %"class.rx::vk::SharedResourceUse", %"class.std::__1::vector.116" }
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"*, %"class.std::__1::__compressed_pair.118" }
%"class.rx::vk::GarbageObject" = type { i32, %"struct.rx::vk::GarbageHandle_T"* }
%"struct.rx::vk::GarbageHandle_T" = type opaque
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.rx::vk::GarbageObject"* }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.rx::vk::SharedGarbage"* }
%"class.rx::vk::MemoryProperties" = type { %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.rx::vk::FormatTable" = type { [8 x i8], %"struct.std::__1::array.128" }
%"struct.std::__1::array.128" = type { [227 x %"struct.rx::vk::Format"] }
%"class.rx::vk::PipelineCache" = type { %"class.rx::vk::WrappedObject.129" }
%"class.rx::vk::WrappedObject.129" = type { %struct.VkPipelineCache_T* }
%struct.VkPipelineCache_T = type opaque
%"class.angle::PackedEnumMap.130" = type { %"struct.std::__1::array.131" }
%"struct.std::__1::array.131" = type { [227 x %struct.VkFormatProperties] }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rx::DebugAnnotatorVk" = type { %"class.angle::LoggingAnnotator" }
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.rx::vk::CommandPool" = type { %"class.rx::vk::WrappedObject.137" }
%"class.rx::vk::WrappedObject.137" = type { %struct.VkCommandPool_T* }
%struct.VkCommandPool_T = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.144" }
%"struct.std::__1::__split_buffer" = type { %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"class.std::__1::__compressed_pair.139" }
%"struct.rx::RendererVk::PendingOneOffCommands" = type { %"class.rx::Serial", %"class.rx::vk::priv::CommandBuffer" }
%"class.rx::vk::priv::CommandBuffer" = type { %"class.rx::vk::WrappedObject.138" }
%"class.rx::vk::WrappedObject.138" = type { %struct.VkCommandBuffer_T* }
%struct.VkCommandBuffer_T = type opaque
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.rx::RendererVk::PendingOneOffCommands"** }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.rx::vk::CommandQueue" = type { %"class.rx::vk::CommandQueueInterface", %"class.std::__1::vector.148", %"class.std::__1::vector.155", %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::PersistentCommandPool", %"class.rx::SerialFactoryBase", %"class.rx::Serial", %"class.rx::Serial", %"class.rx::Serial", %"class.angle::PackedEnumMap.170", %"class.rx::vk::FenceRecycler" }
%"class.rx::vk::CommandQueueInterface" = type { i32 (...)** }
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { %"class.rx::vk::ObjectAndSerial"*, %"class.rx::vk::ObjectAndSerial"*, %"class.std::__1::__compressed_pair.150" }
%"class.rx::vk::ObjectAndSerial" = type opaque
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.rx::vk::ObjectAndSerial"* }
%"class.std::__1::vector.155" = type { %"class.std::__1::__vector_base.156" }
%"class.std::__1::__vector_base.156" = type { %"struct.rx::vk::CommandBatch"*, %"struct.rx::vk::CommandBatch"*, %"class.std::__1::__compressed_pair.158" }
%"struct.rx::vk::CommandBatch" = type { [8 x i8], %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::CommandPool", %"class.rx::vk::Shared", %"class.rx::Serial" }
%"class.rx::vk::Shared" = type { %"class.rx::vk::RefCounted.157"* }
%"class.rx::vk::RefCounted.157" = type { i32, %"class.rx::vk::Fence" }
%"class.rx::vk::Fence" = type { %"class.rx::vk::WrappedObject.175" }
%"class.rx::vk::WrappedObject.175" = type { %struct.VkFence_T* }
%struct.VkFence_T = type opaque
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.rx::vk::CommandBatch"* }
%"class.rx::vk::PersistentCommandPool" = type { %"class.std::__1::vector.163", %"class.rx::vk::CommandPool" }
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"class.rx::vk::priv::CommandBuffer"*, %"class.rx::vk::priv::CommandBuffer"*, %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.rx::vk::priv::CommandBuffer"* }
%"class.angle::PackedEnumMap.170" = type { %"struct.std::__1::array.171" }
%"struct.std::__1::array.171" = type { [3 x %struct.VkQueue_T*] }
%struct.VkQueue_T = type opaque
%"class.rx::vk::FenceRecycler" = type { %"class.std::__1::mutex", %"class.rx::vk::Recycler.172" }
%"class.rx::vk::Recycler.172" = type { %"class.std::__1::vector.173" }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"class.rx::vk::Fence"*, %"class.rx::vk::Fence"*, %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.rx::vk::Fence"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.181" = type { %"class.std::__1::__vector_base.182" }
%"class.std::__1::__vector_base.182" = type { %"class.rx::vk::CommandBufferHelper"**, %"class.rx::vk::CommandBufferHelper"**, %"class.std::__1::__compressed_pair.227" }
%"class.rx::vk::CommandBufferHelper" = type { [8 x i8], %"class.angle::PoolAllocator", %"class.angle::PackedEnumMap.190", %"class.angle::BitSetT.199", %"class.rx::vk::priv::SecondaryCommandBuffer", i32, %"class.rx::vk::RenderPassDesc", %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::Framebuffer", %"struct.gl::Rectangle", %"class.rx::vk::PackedClearValuesArray", i8, %"struct.std::__1::array.210", i32, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, %"struct.gl::Rectangle", %"struct.gl::Rectangle", %"class.rx::vk::PackedAttachmentIndex", %"class.angle::FastIntegerMap", %"class.angle::FastIntegerSet", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, %"class.rx::vk::PackedAttachmentIndex", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::ImageHelper"* }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.183", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.185" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.angle::PackedEnumMap.190" = type { %"struct.std::__1::array.191" }
%"struct.std::__1::array.191" = type { [14 x %"class.rx::vk::PipelineBarrier"] }
%"class.rx::vk::PipelineBarrier" = type { i32, i32, i32, i32, %"class.std::__1::vector.192" }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %struct.VkImageMemoryBarrier*, %struct.VkImageMemoryBarrier*, %"class.std::__1::__compressed_pair.194" }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %struct.VkImageMemoryBarrier* }
%"class.angle::BitSetT.199" = type { i16 }
%"class.rx::vk::priv::SecondaryCommandBuffer" = type { i8, %"class.std::__1::vector.200", %"class.angle::PoolAllocator"*, i8*, i64 }
%"class.std::__1::vector.200" = type { %"class.std::__1::__vector_base.201" }
%"class.std::__1::__vector_base.201" = type { %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"**, %"class.std::__1::__compressed_pair.202" }
%"struct.rx::vk::priv::CommandHeader" = type { i16, i16 }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.rx::vk::priv::CommandHeader"** }
%"class.rx::vk::RenderPassDesc" = type { i8, %"class.angle::BitSetT.16", %"class.angle::BitSetT.16", %"struct.std::__1::array.207" }
%"struct.std::__1::array.207" = type { [9 x i8] }
%"class.rx::vk::AttachmentOpsArray" = type { %"struct.std::__1::array.208" }
%"struct.std::__1::array.208" = type { [10 x %"struct.rx::vk::PackedAttachmentOpsDesc"] }
%"struct.rx::vk::PackedAttachmentOpsDesc" = type { i32 }
%"class.rx::vk::PackedClearValuesArray" = type { %"struct.std::__1::array.209" }
%"struct.std::__1::array.209" = type { [10 x %union.VkClearValue] }
%"struct.std::__1::array.210" = type { [4 x %struct.VkBuffer_T*] }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.angle::FastIntegerMap" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.219" }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { i32*, i32*, %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { i32* }
%"class.angle::FastIntegerSet" = type { %"class.std::__1::vector.211" }
%"class.std::__1::vector.211" = type { %"class.std::__1::__vector_base.212" }
%"class.std::__1::__vector_base.212" = type { %"class.angle::BitSetT.213"*, %"class.angle::BitSetT.213"*, %"class.std::__1::__compressed_pair.214" }
%"class.angle::BitSetT.213" = type { i64 }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.angle::BitSetT.213"* }
%"class.rx::vk::PackedAttachmentIndex" = type { i32 }
%"class.rx::vk::PackedImageAttachmentArray" = type { %"struct.std::__1::array.226" }
%"struct.std::__1::array.226" = type { [10 x %"class.rx::vk::ImageHelper"*] }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.rx::vk::CommandBufferHelper"** }
%"class.rx::vk::CommandProcessor" = type { %"class.rx::vk::Context", %"class.rx::vk::CommandQueueInterface", %"class.std::__1::queue", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, %"class.rx::vk::CommandPool", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::mutex", %"class.std::__1::queue.263", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::map.276", %"class.std::__1::thread" }
%"class.std::__1::queue" = type { %"class.std::__1::deque.232" }
%"class.std::__1::deque.232" = type { %"class.std::__1::__deque_base.233" }
%"class.std::__1::__deque_base.233" = type { %"struct.std::__1::__split_buffer.234", i64, %"class.std::__1::__compressed_pair.255" }
%"struct.std::__1::__split_buffer.234" = type { %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.std::__1::__compressed_pair.250" }
%"class.rx::vk::CommandProcessorTask" = type <{ i32, [4 x i8], %"class.rx::vk::RenderPass"*, %"class.rx::vk::CommandBufferHelper"*, %"class.std::__1::vector.236", %"class.std::__1::vector.72", %"class.rx::vk::Semaphore"*, %"class.std::__1::vector.116", %"class.rx::Serial", %struct.VkPresentInfoKHR, %struct.VkSwapchainKHR_T*, %struct.VkSemaphore_T*, i32, [4 x i8], %struct.VkPresentRegionKHR, %struct.VkPresentRegionsKHR, %"class.std::__1::vector.243", %struct.VkCommandBuffer_T*, %"class.rx::vk::Fence"*, i8, [7 x i8] }>
%"class.rx::vk::RenderPass" = type { %"class.rx::vk::WrappedObject.235" }
%"class.rx::vk::WrappedObject.235" = type { %struct.VkRenderPass_T* }
%struct.VkRenderPass_T = type opaque
%"class.std::__1::vector.236" = type { %"class.std::__1::__vector_base.237" }
%"class.std::__1::__vector_base.237" = type { %struct.VkSemaphore_T**, %struct.VkSemaphore_T**, %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %struct.VkSemaphore_T** }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkPresentRegionKHR = type { i32, %struct.VkRectLayerKHR* }
%struct.VkRectLayerKHR = type { %struct.VkOffset2D, %struct.VkExtent2D, i32 }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkPresentRegionsKHR = type { i32, i8*, i32, %struct.VkPresentRegionKHR* }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %struct.VkRectLayerKHR*, %struct.VkRectLayerKHR*, %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %struct.VkRectLayerKHR* }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.rx::vk::CommandProcessorTask"** }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::queue.263" = type { %"class.std::__1::deque.264" }
%"class.std::__1::deque.264" = type { %"class.std::__1::__deque_base.265" }
%"class.std::__1::__deque_base.265" = type { %"struct.std::__1::__split_buffer.266", i64, %"class.std::__1::__compressed_pair.272" }
%"struct.std::__1::__split_buffer.266" = type { %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"class.std::__1::__compressed_pair.267" }
%"struct.rx::vk::Error" = type { i32, i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.rx::vk::Error"** }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.259, %union.anon.261, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.259 = type { i64 }
%union.anon.261 = type { i64 }
%"class.std::__1::map.276" = type { %"class.std::__1::__tree.277" }
%"class.std::__1::__tree.277" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.278", %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::thread" = type { i64 }
%"class.rx::vk::Allocator" = type { %"class.rx::vk::WrappedObject.287" }
%"class.rx::vk::WrappedObject.287" = type { %struct.VmaAllocator_T* }
%struct.VmaAllocator_T = type opaque
%"class.rx::SamplerCache" = type { %"class.rx::HasCacheStats", %"class.std::__1::unordered_map" }
%"class.rx::HasCacheStats" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.rx::CacheStats" = type { i64, i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.288", %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.301", %"class.std::__1::__compressed_pair.303", [4 x i8] }>
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290", %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { float }
%"class.rx::SamplerYcbcrConversionCache" = type { %"class.rx::HasCacheStats.307", %"class.std::__1::unordered_map.308" }
%"class.rx::HasCacheStats.307" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.308" = type { %"class.std::__1::__hash_table.309" }
%"class.std::__1::__hash_table.309" = type <{ %"class.std::__1::unique_ptr.310", %"class.std::__1::__compressed_pair.320", %"class.std::__1::__compressed_pair.325", %"class.std::__1::__compressed_pair.329", [4 x i8] }>
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312", %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"struct.std::__1::__hash_node_base.313"** }
%"struct.std::__1::__hash_node_base.313" = type { %"struct.std::__1::__hash_node_base.313"* }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.std::__1::__bucket_list_deallocator.315" }
%"class.std::__1::__bucket_list_deallocator.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.std::__1::__hash_node_base.313" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"class.rx::vk::ActiveHandleCounter" = type { %"class.angle::PackedEnumMap.335", %"class.angle::PackedEnumMap.335" }
%"class.angle::PackedEnumMap.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [24 x i32] }
%"class.rx::vk::ResourceSerialFactory" = type { %"struct.std::__1::atomic.337" }
%"struct.std::__1::atomic.337" = type { %"struct.std::__1::__atomic_base.338" }
%"struct.std::__1::__atomic_base.338" = type { %"struct.std::__1::__atomic_base.339" }
%"struct.std::__1::__atomic_base.339" = type { %"struct.std::__1::__cxx_atomic_impl.340" }
%"struct.std::__1::__cxx_atomic_impl.340" = type { %"struct.std::__1::__cxx_atomic_base_impl.341" }
%"struct.std::__1::__cxx_atomic_base_impl.341" = type { i32 }
%"class.rx::vk::MemoryReport" = type { %"class.std::__1::mutex", i64, i64, %"class.absl::flat_hash_map", i64, i64, %"class.absl::flat_hash_map.350" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.absl::flat_hash_map.350" = type { %"class.absl::container_internal::raw_hash_map.351" }
%"class.absl::container_internal::raw_hash_map.351" = type { %"class.absl::container_internal::raw_hash_set.352" }
%"class.absl::container_internal::raw_hash_set.352" = type { i8*, %"union.absl::container_internal::map_slot_type.353"*, i64, i64, %"class.absl::container_internal::CompressedTuple.354" }
%"union.absl::container_internal::map_slot_type.353" = type opaque
%"class.absl::container_internal::CompressedTuple.354" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.355" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.355" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::PackedEnumMap.363" = type { %"struct.std::__1::array.364" }
%"struct.std::__1::array.364" = type { [12 x %"class.rx::CacheStats"] }
%"class.std::__1::shared_ptr" = type { %"class.rx::WaitableCompressEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::WaitableCompressEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.365" }
%"class.std::__1::shared_ptr.365" = type { %"class.angle::WaitableEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WaitableEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.366" }
%"class.std::__1::shared_ptr.366" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.gl::Extents" = type { i32, i32, i32 }
%struct.xcb_generic_error_t = type { i8, i8, i16, i32, i16, i8, i8, [5 x i32], i32 }
%struct.xcb_get_geometry_reply_t = type { i8, i8, i16, i32, i32, i16, i16, i16, i16, i16, [2 x i8] }
%"class.gl::Context" = type opaque
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.egl::Error" = type { i32, i32, %"class.std::__1::unique_ptr.367" }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.std::__1::basic_string"* }
%"class.rx::FramebufferImpl" = type opaque
%"class.gl::FramebufferState" = type opaque
%"class.gl::Texture" = type opaque
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }

$_ZN2rx18WindowSurfaceVkXcbD0Ev = comdat any

$_ZThn104_N2rx18WindowSurfaceVkXcbD1Ev = comdat any

$_ZThn104_N2rx18WindowSurfaceVkXcbD0Ev = comdat any

@_ZTVN2rx18WindowSurfaceVkXcbE = hidden unnamed_addr constant { [41 x i8*], [5 x i8*] } { [41 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::WindowSurfaceVk"*)* @_ZN2rx15WindowSurfaceVkD2Ev to i8*), i8* bitcast (void (%"class.rx::WindowSurfaceVkXcb"*)* @_ZN2rx18WindowSurfaceVkXcbD0Ev to i8*), i8* bitcast (i32 (%"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*, i32, %"class.gl::ImageIndex"*, i32, %"class.rx::FramebufferAttachmentRenderTarget"**)* @_ZN2rx15WindowSurfaceVk25getAttachmentRenderTargetEPKN2gl7ContextEjRKNS1_10ImageIndexEiPPNS_33FramebufferAttachmentRenderTargetE to i8*), i8* bitcast (i32 (%"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*, %"class.gl::ImageIndex"*)* @_ZN2rx15WindowSurfaceVk18initializeContentsEPKN2gl7ContextERKNS1_10ImageIndexE to i8*), i8* bitcast (void (%"class.rx::WindowSurfaceVk"*, %"class.egl::Display"*)* @_ZN2rx15WindowSurfaceVk7destroyEPKN3egl7DisplayE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::WindowSurfaceVk"*, %"class.egl::Display"*)* @_ZN2rx15WindowSurfaceVk10initializeEPKN3egl7DisplayE to i8*), i8* bitcast (%"class.rx::FramebufferImpl"* (%"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*, %"class.gl::FramebufferState"*)* @_ZN2rx15WindowSurfaceVk24createDefaultFramebufferEPKN2gl7ContextERKNS1_16FramebufferStateE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)* @_ZN2rx11SurfaceImpl11makeCurrentEPKN2gl7ContextE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)* @_ZN2rx11SurfaceImpl13unMakeCurrentEPKN2gl7ContextE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*)* @_ZN2rx15WindowSurfaceVk4swapEPKN2gl7ContextE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*, i32*, i32)* @_ZN2rx15WindowSurfaceVk14swapWithDamageEPKN2gl7ContextEPKii to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i64)* @_ZN2rx11SurfaceImpl18swapWithFrameTokenEPKN2gl7ContextEm to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*, i32, i32, i32, i32)* @_ZN2rx15WindowSurfaceVk13postSubBufferEPKN2gl7ContextEiiii to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64)* @_ZN2rx11SurfaceImpl19setPresentationTimeEl to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::WindowSurfaceVk"*, i32, i8**)* @_ZN2rx15WindowSurfaceVk24querySurfacePointerANGLEEiPPv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*, %"class.gl::Texture"*, i32)* @_ZN2rx15WindowSurfaceVk12bindTexImageEPKN2gl7ContextEPNS1_7TextureEi to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*, i32)* @_ZN2rx15WindowSurfaceVk15releaseTexImageEPKN2gl7ContextEi to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::WindowSurfaceVk"*, i64*, i64*, i64*)* @_ZN2rx15WindowSurfaceVk13getSyncValuesEPmS1_S1_ to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::WindowSurfaceVk"*, i32*, i32*)* @_ZN2rx15WindowSurfaceVk10getMscRateEPiS1_ to i8*), i8* bitcast (void (%"class.rx::WindowSurfaceVk"*, i32)* @_ZN2rx15WindowSurfaceVk15setSwapIntervalEi to i8*), i8* bitcast (void (%"class.rx::SurfaceImpl"*, i32)* @_ZN2rx11SurfaceImpl13setFixedWidthEi to i8*), i8* bitcast (void (%"class.rx::SurfaceImpl"*, i32)* @_ZN2rx11SurfaceImpl14setFixedHeightEi to i8*), i8* bitcast (i32 (%"class.rx::WindowSurfaceVk"*)* @_ZNK2rx15WindowSurfaceVk8getWidthEv to i8*), i8* bitcast (i32 (%"class.rx::WindowSurfaceVk"*)* @_ZNK2rx15WindowSurfaceVk9getHeightEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::WindowSurfaceVk"*, %"class.egl::Display"*, i32*)* @_ZNK2rx15WindowSurfaceVk12getUserWidthEPKN3egl7DisplayEPi to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::WindowSurfaceVk"*, %"class.egl::Display"*, i32*)* @_ZNK2rx15WindowSurfaceVk13getUserHeightEPKN3egl7DisplayEPi to i8*), i8* bitcast (i32 (%"class.rx::WindowSurfaceVk"*)* @_ZNK2rx15WindowSurfaceVk24isPostSubBufferSupportedEv to i8*), i8* bitcast (i32 (%"class.rx::WindowSurfaceVk"*)* @_ZNK2rx15WindowSurfaceVk15getSwapBehaviorEv to i8*), i8* bitcast (%"struct.angle::Format"* (%"class.rx::SurfaceImpl"*)* @_ZNK2rx11SurfaceImpl24getD3DTextureColorFormatEv to i8*), i8* bitcast (void (%"class.rx::SurfaceImpl"*, i1)* @_ZN2rx11SurfaceImpl20setTimestampsEnabledEb to i8*), i8* bitcast (void ()* @_ZNK2rx11SurfaceImpl29getSupportedCompositorTimingsEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32, i32*, i64*)* @_ZNK2rx11SurfaceImpl19getCompositorTimingEiPKiPl to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64*)* @_ZNK2rx11SurfaceImpl14getNextFrameIdEPm to i8*), i8* bitcast (void ()* @_ZNK2rx11SurfaceImpl22getSupportedTimestampsEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64, i32, i32*, i64*)* @_ZNK2rx11SurfaceImpl18getFrameTimestampsEmiPKiPl to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*, i32*)* @_ZN2rx15WindowSurfaceVk12getBufferAgeEPKN2gl7ContextEPi to i8*), i8* bitcast (void (%"class.rx::SurfaceVk"*, i64, i32)* @_ZN2rx9SurfaceVk20onSubjectStateChangeEmN5angle14SubjectMessageE to i8*), i8* bitcast (i32 (%"class.rx::WindowSurfaceVkXcb"*, %"class.rx::vk::Context"*, %"struct.gl::Extents"*)* @_ZN2rx18WindowSurfaceVkXcb15createSurfaceVkEPNS_2vk7ContextEPN2gl7ExtentsE to i8*), i8* bitcast (i32 (%"class.rx::WindowSurfaceVkXcb"*, %"class.rx::vk::Context"*, %"struct.gl::Extents"*)* @_ZN2rx18WindowSurfaceVkXcb20getCurrentWindowSizeEPNS_2vk7ContextEPN2gl7ExtentsE to i8*)], [5 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.rx::WindowSurfaceVkXcb"*)* @_ZThn104_N2rx18WindowSurfaceVkXcbD1Ev to i8*), i8* bitcast (void (%"class.rx::WindowSurfaceVkXcb"*)* @_ZThn104_N2rx18WindowSurfaceVkXcbD0Ev to i8*), i8* bitcast (void (%"class.rx::SurfaceVk"*, i64, i32)* @_ZThn104_N2rx9SurfaceVk20onSubjectStateChangeEmN5angle14SubjectMessageE to i8*)] }, align 8
@vkCreateXcbSurfaceKHR = external local_unnamed_addr global i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, align 8
@.str = private unnamed_addr constant [80 x i8] c"../../third_party/angle/src/libANGLE/renderer/vulkan/xcb/WindowSurfaceVkXcb.cpp\00", align 1
@__func__._ZN2rx18WindowSurfaceVkXcb15createSurfaceVkEPNS_2vk7ContextEPN2gl7ExtentsE = private unnamed_addr constant [16 x i8] c"createSurfaceVk\00", align 1
@__func__._ZN2rx18WindowSurfaceVkXcb20getCurrentWindowSizeEPNS_2vk7ContextEPN2gl7ExtentsE = private unnamed_addr constant [21 x i8] c"getCurrentWindowSize\00", align 1

@_ZN2rx18WindowSurfaceVkXcbC1ERKN3egl12SurfaceStateElP16xcb_connection_t = hidden unnamed_addr alias void (%"class.rx::WindowSurfaceVkXcb"*, %"struct.egl::SurfaceState"*, i64, %struct.xcb_connection_t*), void (%"class.rx::WindowSurfaceVkXcb"*, %"struct.egl::SurfaceState"*, i64, %struct.xcb_connection_t*)* @_ZN2rx18WindowSurfaceVkXcbC2ERKN3egl12SurfaceStateElP16xcb_connection_t

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx18WindowSurfaceVkXcbC2ERKN3egl12SurfaceStateElP16xcb_connection_t(%"class.rx::WindowSurfaceVkXcb"*, %"struct.egl::SurfaceState"*, i64, %struct.xcb_connection_t*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.rx::WindowSurfaceVkXcb", %"class.rx::WindowSurfaceVkXcb"* %0, i64 0, i32 0
  tail call void @_ZN2rx15WindowSurfaceVkC2ERKN3egl12SurfaceStateEl(%"class.rx::WindowSurfaceVk"* %5, %"struct.egl::SurfaceState"* %1, i64 %2) #6
  %6 = getelementptr inbounds %"class.rx::WindowSurfaceVkXcb", %"class.rx::WindowSurfaceVkXcb"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [41 x i8*], [5 x i8*] }, { [41 x i8*], [5 x i8*] }* @_ZTVN2rx18WindowSurfaceVkXcbE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.rx::WindowSurfaceVkXcb", %"class.rx::WindowSurfaceVkXcb"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [41 x i8*], [5 x i8*] }, { [41 x i8*], [5 x i8*] }* @_ZTVN2rx18WindowSurfaceVkXcbE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.rx::WindowSurfaceVkXcb", %"class.rx::WindowSurfaceVkXcb"* %0, i64 0, i32 1
  store %struct.xcb_connection_t* %3, %struct.xcb_connection_t** %8, align 8
  ret void
}

declare void @_ZN2rx15WindowSurfaceVkC2ERKN3egl12SurfaceStateEl(%"class.rx::WindowSurfaceVk"*, %"struct.egl::SurfaceState"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx18WindowSurfaceVkXcb15createSurfaceVkEPNS_2vk7ContextEPN2gl7ExtentsE(%"class.rx::WindowSurfaceVkXcb"*, %"class.rx::vk::Context"*, %"struct.gl::Extents"*) unnamed_addr #0 align 2 {
  %4 = alloca %struct.VkXcbSurfaceCreateInfoKHR, align 8
  %5 = bitcast %struct.VkXcbSurfaceCreateInfoKHR* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 40, i1 false)
  %6 = getelementptr inbounds %struct.VkXcbSurfaceCreateInfoKHR, %struct.VkXcbSurfaceCreateInfoKHR* %4, i64 0, i32 0
  store i32 1000005000, i32* %6, align 8
  %7 = getelementptr inbounds %struct.VkXcbSurfaceCreateInfoKHR, %struct.VkXcbSurfaceCreateInfoKHR* %4, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.rx::WindowSurfaceVkXcb", %"class.rx::WindowSurfaceVkXcb"* %0, i64 0, i32 1
  %9 = bitcast %struct.xcb_connection_t** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.VkXcbSurfaceCreateInfoKHR, %struct.VkXcbSurfaceCreateInfoKHR* %4, i64 0, i32 3
  %12 = bitcast %struct.xcb_connection_t** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"class.rx::WindowSurfaceVkXcb", %"class.rx::WindowSurfaceVkXcb"* %0, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %struct.VkXcbSurfaceCreateInfoKHR, %struct.VkXcbSurfaceCreateInfoKHR* %4, i64 0, i32 4
  store i32 %15, i32* %16, align 8
  %17 = load i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)** @vkCreateXcbSurfaceKHR, align 8
  %18 = getelementptr inbounds %"class.rx::vk::Context", %"class.rx::vk::Context"* %1, i64 0, i32 1
  %19 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %18, align 8
  %20 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %19, i64 0, i32 8
  %21 = load %struct.VkInstance_T*, %struct.VkInstance_T** %20, align 8
  %22 = getelementptr inbounds %"class.rx::WindowSurfaceVkXcb", %"class.rx::WindowSurfaceVkXcb"* %0, i64 0, i32 0, i32 2
  %23 = call i32 %17(%struct.VkInstance_T* %21, %struct.VkXcbSurfaceCreateInfoKHR* nonnull %4, %struct.VkAllocationCallbacks* null, %struct.VkSurfaceKHR_T** %22) #6
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25, !prof !2

25:                                               ; preds = %3
  %26 = bitcast %"class.rx::vk::Context"* %1 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %27 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %27, i64 2
  %29 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %28, align 8
  call void %29(%"class.rx::vk::Context"* %1, i32 %23, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__._ZN2rx18WindowSurfaceVkXcb15createSurfaceVkEPNS_2vk7ContextEPN2gl7ExtentsE, i64 0, i64 0), i32 32) #6
  br label %36

30:                                               ; preds = %3
  %31 = bitcast %"class.rx::WindowSurfaceVkXcb"* %0 to i32 (%"class.rx::WindowSurfaceVkXcb"*, %"class.rx::vk::Context"*, %"struct.gl::Extents"*)***
  %32 = load i32 (%"class.rx::WindowSurfaceVkXcb"*, %"class.rx::vk::Context"*, %"struct.gl::Extents"*)**, i32 (%"class.rx::WindowSurfaceVkXcb"*, %"class.rx::vk::Context"*, %"struct.gl::Extents"*)*** %31, align 8
  %33 = getelementptr inbounds i32 (%"class.rx::WindowSurfaceVkXcb"*, %"class.rx::vk::Context"*, %"struct.gl::Extents"*)*, i32 (%"class.rx::WindowSurfaceVkXcb"*, %"class.rx::vk::Context"*, %"struct.gl::Extents"*)** %32, i64 38
  %34 = load i32 (%"class.rx::WindowSurfaceVkXcb"*, %"class.rx::vk::Context"*, %"struct.gl::Extents"*)*, i32 (%"class.rx::WindowSurfaceVkXcb"*, %"class.rx::vk::Context"*, %"struct.gl::Extents"*)** %33, align 8
  %35 = call i32 %34(%"class.rx::WindowSurfaceVkXcb"* %0, %"class.rx::vk::Context"* %1, %"struct.gl::Extents"* %2) #6
  br label %36

36:                                               ; preds = %25, %30
  %37 = phi i32 [ %35, %30 ], [ 1, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #6
  ret i32 %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx18WindowSurfaceVkXcb20getCurrentWindowSizeEPNS_2vk7ContextEPN2gl7ExtentsE(%"class.rx::WindowSurfaceVkXcb"* nocapture readonly, %"class.rx::vk::Context"*, %"struct.gl::Extents"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %struct.xcb_generic_error_t*, align 8
  %5 = getelementptr inbounds %"class.rx::WindowSurfaceVkXcb", %"class.rx::WindowSurfaceVkXcb"* %0, i64 0, i32 1
  %6 = load %struct.xcb_connection_t*, %struct.xcb_connection_t** %5, align 8
  %7 = getelementptr inbounds %"class.rx::WindowSurfaceVkXcb", %"class.rx::WindowSurfaceVkXcb"* %0, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = tail call i32 @xcb_get_geometry(%struct.xcb_connection_t* %6, i32 %9) #6
  %11 = bitcast %struct.xcb_generic_error_t** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6
  store %struct.xcb_generic_error_t* null, %struct.xcb_generic_error_t** %4, align 8
  %12 = load %struct.xcb_connection_t*, %struct.xcb_connection_t** %5, align 8
  %13 = call %struct.xcb_get_geometry_reply_t* @xcb_get_geometry_reply(%struct.xcb_connection_t* %12, i32 %10, %struct.xcb_generic_error_t** nonnull %4) #6
  %14 = load %struct.xcb_generic_error_t*, %struct.xcb_generic_error_t** %4, align 8
  %15 = icmp eq %struct.xcb_generic_error_t* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.xcb_generic_error_t, %struct.xcb_generic_error_t* %14, i64 0, i32 0
  call void @free(i8* %17) #6
  %18 = bitcast %"class.rx::vk::Context"* %1 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %19 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %19, i64 2
  %21 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %20, align 8
  call void %21(%"class.rx::vk::Context"* %1, i32 -3, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__._ZN2rx18WindowSurfaceVkXcb20getCurrentWindowSizeEPNS_2vk7ContextEPN2gl7ExtentsE, i64 0, i64 0), i32 47) #6
  br label %33

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.xcb_get_geometry_reply_t, %struct.xcb_get_geometry_reply_t* %13, i64 0, i32 7
  %24 = load i16, i16* %23, align 4
  %25 = zext i16 %24 to i32
  %26 = getelementptr inbounds %struct.xcb_get_geometry_reply_t, %struct.xcb_get_geometry_reply_t* %13, i64 0, i32 8
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %2, i64 0, i32 0
  store i32 %25, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %2, i64 0, i32 1
  store i32 %28, i32* %30, align 4
  %31 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %2, i64 0, i32 2
  store i32 1, i32* %31, align 4
  %32 = getelementptr inbounds %struct.xcb_get_geometry_reply_t, %struct.xcb_get_geometry_reply_t* %13, i64 0, i32 0
  call void @free(i8* %32) #6
  br label %33

33:                                               ; preds = %16, %22
  %34 = phi i32 [ 0, %22 ], [ 1, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6
  ret i32 %34
}

declare i32 @xcb_get_geometry(%struct.xcb_connection_t*, i32) local_unnamed_addr #1

declare %struct.xcb_get_geometry_reply_t* @xcb_get_geometry_reply(%struct.xcb_connection_t*, i32, %struct.xcb_generic_error_t**) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2rx15WindowSurfaceVkD2Ev(%"class.rx::WindowSurfaceVk"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx18WindowSurfaceVkXcbD0Ev(%"class.rx::WindowSurfaceVkXcb"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.rx::WindowSurfaceVkXcb", %"class.rx::WindowSurfaceVkXcb"* %0, i64 0, i32 0
  tail call void @_ZN2rx15WindowSurfaceVkD2Ev(%"class.rx::WindowSurfaceVk"* %2) #6
  %3 = bitcast %"class.rx::WindowSurfaceVkXcb"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

declare i32 @_ZN2rx15WindowSurfaceVk25getAttachmentRenderTargetEPKN2gl7ContextEjRKNS1_10ImageIndexEiPPNS_33FramebufferAttachmentRenderTargetE(%"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*, i32, %"class.gl::ImageIndex"* dereferenceable(16), i32, %"class.rx::FramebufferAttachmentRenderTarget"**) unnamed_addr #1

declare i32 @_ZN2rx15WindowSurfaceVk18initializeContentsEPKN2gl7ContextERKNS1_10ImageIndexE(%"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*, %"class.gl::ImageIndex"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN2rx15WindowSurfaceVk7destroyEPKN3egl7DisplayE(%"class.rx::WindowSurfaceVk"*, %"class.egl::Display"*) unnamed_addr #1

declare void @_ZN2rx15WindowSurfaceVk10initializeEPKN3egl7DisplayE(%"class.egl::Error"* sret, %"class.rx::WindowSurfaceVk"*, %"class.egl::Display"*) unnamed_addr #1

declare %"class.rx::FramebufferImpl"* @_ZN2rx15WindowSurfaceVk24createDefaultFramebufferEPKN2gl7ContextERKNS1_16FramebufferStateE(%"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*, %"class.gl::FramebufferState"*) unnamed_addr #1

declare void @_ZN2rx11SurfaceImpl11makeCurrentEPKN2gl7ContextE(%"class.egl::Error"* sret, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*) unnamed_addr #1

declare void @_ZN2rx11SurfaceImpl13unMakeCurrentEPKN2gl7ContextE(%"class.egl::Error"* sret, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*) unnamed_addr #1

declare void @_ZN2rx15WindowSurfaceVk4swapEPKN2gl7ContextE(%"class.egl::Error"* sret, %"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*) unnamed_addr #1

declare void @_ZN2rx15WindowSurfaceVk14swapWithDamageEPKN2gl7ContextEPKii(%"class.egl::Error"* sret, %"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*, i32*, i32) unnamed_addr #1

declare void @_ZN2rx11SurfaceImpl18swapWithFrameTokenEPKN2gl7ContextEm(%"class.egl::Error"* sret, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i64) unnamed_addr #1

declare void @_ZN2rx15WindowSurfaceVk13postSubBufferEPKN2gl7ContextEiiii(%"class.egl::Error"* sret, %"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*, i32, i32, i32, i32) unnamed_addr #1

declare void @_ZN2rx11SurfaceImpl19setPresentationTimeEl(%"class.egl::Error"* sret, %"class.rx::SurfaceImpl"*, i64) unnamed_addr #1

declare void @_ZN2rx15WindowSurfaceVk24querySurfacePointerANGLEEiPPv(%"class.egl::Error"* sret, %"class.rx::WindowSurfaceVk"*, i32, i8**) unnamed_addr #1

declare void @_ZN2rx15WindowSurfaceVk12bindTexImageEPKN2gl7ContextEPNS1_7TextureEi(%"class.egl::Error"* sret, %"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*, %"class.gl::Texture"*, i32) unnamed_addr #1

declare void @_ZN2rx15WindowSurfaceVk15releaseTexImageEPKN2gl7ContextEi(%"class.egl::Error"* sret, %"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*, i32) unnamed_addr #1

declare void @_ZN2rx15WindowSurfaceVk13getSyncValuesEPmS1_S1_(%"class.egl::Error"* sret, %"class.rx::WindowSurfaceVk"*, i64*, i64*, i64*) unnamed_addr #1

declare void @_ZN2rx15WindowSurfaceVk10getMscRateEPiS1_(%"class.egl::Error"* sret, %"class.rx::WindowSurfaceVk"*, i32*, i32*) unnamed_addr #1

declare void @_ZN2rx15WindowSurfaceVk15setSwapIntervalEi(%"class.rx::WindowSurfaceVk"*, i32) unnamed_addr #1

declare void @_ZN2rx11SurfaceImpl13setFixedWidthEi(%"class.rx::SurfaceImpl"*, i32) unnamed_addr #1

declare void @_ZN2rx11SurfaceImpl14setFixedHeightEi(%"class.rx::SurfaceImpl"*, i32) unnamed_addr #1

declare i32 @_ZNK2rx15WindowSurfaceVk8getWidthEv(%"class.rx::WindowSurfaceVk"*) unnamed_addr #1

declare i32 @_ZNK2rx15WindowSurfaceVk9getHeightEv(%"class.rx::WindowSurfaceVk"*) unnamed_addr #1

declare void @_ZNK2rx15WindowSurfaceVk12getUserWidthEPKN3egl7DisplayEPi(%"class.egl::Error"* sret, %"class.rx::WindowSurfaceVk"*, %"class.egl::Display"*, i32*) unnamed_addr #1

declare void @_ZNK2rx15WindowSurfaceVk13getUserHeightEPKN3egl7DisplayEPi(%"class.egl::Error"* sret, %"class.rx::WindowSurfaceVk"*, %"class.egl::Display"*, i32*) unnamed_addr #1

declare i32 @_ZNK2rx15WindowSurfaceVk24isPostSubBufferSupportedEv(%"class.rx::WindowSurfaceVk"*) unnamed_addr #1

declare i32 @_ZNK2rx15WindowSurfaceVk15getSwapBehaviorEv(%"class.rx::WindowSurfaceVk"*) unnamed_addr #1

declare %"struct.angle::Format"* @_ZNK2rx11SurfaceImpl24getD3DTextureColorFormatEv(%"class.rx::SurfaceImpl"*) unnamed_addr #1

declare void @_ZN2rx11SurfaceImpl20setTimestampsEnabledEb(%"class.rx::SurfaceImpl"*, i1 zeroext) unnamed_addr #1

declare void @_ZNK2rx11SurfaceImpl29getSupportedCompositorTimingsEv() unnamed_addr

declare void @_ZNK2rx11SurfaceImpl19getCompositorTimingEiPKiPl(%"class.egl::Error"* sret, %"class.rx::SurfaceImpl"*, i32, i32*, i64*) unnamed_addr #1

declare void @_ZNK2rx11SurfaceImpl14getNextFrameIdEPm(%"class.egl::Error"* sret, %"class.rx::SurfaceImpl"*, i64*) unnamed_addr #1

declare void @_ZNK2rx11SurfaceImpl22getSupportedTimestampsEv() unnamed_addr

declare void @_ZNK2rx11SurfaceImpl18getFrameTimestampsEmiPKiPl(%"class.egl::Error"* sret, %"class.rx::SurfaceImpl"*, i64, i32, i32*, i64*) unnamed_addr #1

declare void @_ZN2rx15WindowSurfaceVk12getBufferAgeEPKN2gl7ContextEPi(%"class.egl::Error"* sret, %"class.rx::WindowSurfaceVk"*, %"class.gl::Context"*, i32*) unnamed_addr #1

declare void @_ZN2rx9SurfaceVk20onSubjectStateChangeEmN5angle14SubjectMessageE(%"class.rx::SurfaceVk"*, i64, i32) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N2rx18WindowSurfaceVkXcbD1Ev(%"class.rx::WindowSurfaceVkXcb"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.rx::WindowSurfaceVkXcb", %"class.rx::WindowSurfaceVkXcb"* %0, i64 -1, i32 0, i32 24, i32 16, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.21"* %2 to %"class.rx::WindowSurfaceVk"*
  tail call void @_ZN2rx15WindowSurfaceVkD2Ev(%"class.rx::WindowSurfaceVk"* %3) #6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N2rx18WindowSurfaceVkXcbD0Ev(%"class.rx::WindowSurfaceVkXcb"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.rx::WindowSurfaceVkXcb", %"class.rx::WindowSurfaceVkXcb"* %0, i64 -1, i32 0, i32 24, i32 16, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.21"* %2 to %"class.rx::WindowSurfaceVk"*
  tail call void @_ZN2rx15WindowSurfaceVkD2Ev(%"class.rx::WindowSurfaceVk"* %3) #6
  %4 = bitcast %"class.std::__1::__compressed_pair.21"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N2rx9SurfaceVk20onSubjectStateChangeEmN5angle14SubjectMessageE(%"class.rx::SurfaceVk"*, i64, i32) unnamed_addr #0 align 2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
