; ModuleID = '../../v8/src/objects/string-table.cc'
source_filename = "../../v8/src/objects/string-table.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::StringTable::Data" = type { %"class.std::__1::unique_ptr", i32, i32, i32, [1 x i32] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.7", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.658", %"class.std::__1::unique_ptr.679", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.685", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.825", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.838", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.848", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.860", %"struct.std::__1::atomic.163", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.935", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.978"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.986", i32, i8, i8, i32, i32, %"class.std::__1::vector.992", %"class.std::__1::vector.992", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.999", i64, %"class.std::__1::unordered_map.1000", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.554", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.171", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1052", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1090", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1124", %"class.std::__1::vector.1128", %"class.std::__1::vector.1128", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.1", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.5", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.5" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.30", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.30", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.30", i64, i64, %"struct.std::__1::atomic.30", %"struct.std::__1::atomic.40", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.172", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.30", i64, i8, %"struct.std::__1::atomic.30", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.176", %"class.std::__1::vector.176", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.325", %"class.std::__1::unique_ptr.331", %"class.std::__1::unique_ptr.370", %"class.std::__1::unique_ptr.409", %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.455", %"class.std::__1::unique_ptr.461", %"class.std::__1::unique_ptr.461", %"class.std::__1::unique_ptr.467", %"class.std::__1::unique_ptr.473", %"class.std::__1::unique_ptr.473", %"class.std::__1::unique_ptr.479", %"class.std::__1::unique_ptr.485", %"class.std::__1::shared_ptr.491", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.514", %"class.std::__1::unique_ptr.540", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.546", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.561", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.341", i8, [7 x i8], %"class.std::__1::unordered_map.567", %"class.std::__1::unordered_map.593", %"class.std::__1::unordered_map.567", %"class.std::__1::unordered_map.617", %"class.std::__1::vector.645", i8, %"class.std::__1::unique_ptr.652", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.13", %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.27", [4 x i8] }>
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i64 }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.35", %"struct.std::__1::atomic.35", %"struct.std::__1::atomic.35" }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i64 }
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.44" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.30", %"struct.std::__1::atomic.30", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.114" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.30"*, %"class.std::__1::unique_ptr.108" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.30", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.49", %"class.std::__1::vector.49", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.51" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.56" }
%"class.std::__1::__hash_table.56" = type <{ %"class.std::__1::unique_ptr.57", %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.72", %"class.std::__1::__compressed_pair.74", [4 x i8] }>
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59", %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::__hash_node_base.60"** }
%"struct.std::__1::__hash_node_base.60" = type { %"struct.std::__1::__hash_node_base.60"* }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.std::__1::__bucket_list_deallocator.62" }
%"class.std::__1::__bucket_list_deallocator.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::__hash_node_base.60" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.30", %"struct.std::__1::atomic.35", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.97", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.30"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.35", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.35", %"struct.std::__1::atomic.79", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__cxx_atomic_impl.81" }
%"struct.std::__1::__cxx_atomic_impl.81" = type { %"struct.std::__1::__cxx_atomic_base_impl.82" }
%"struct.std::__1::__cxx_atomic_base_impl.82" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.83" }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.85" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.90", %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__cxx_atomic_impl.99" }
%"struct.std::__1::__cxx_atomic_impl.99" = type { %"struct.std::__1::__cxx_atomic_base_impl.100" }
%"struct.std::__1::__cxx_atomic_base_impl.100" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.101", i8, [7 x i8] }>
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { i64*, i64*, %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.30", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"struct.std::__1::pair.116"*, %"struct.std::__1::pair.116"*, %"class.std::__1::__compressed_pair.117" }
%"struct.std::__1::pair.116" = type { i32, i64 }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.std::__1::pair.116"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.30", i64, %"struct.std::__1::atomic.30" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.30", i32, %"struct.std::__1::atomic.30", %"class.v8::base::Mutex", %"struct.std::__1::atomic.30" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.122" }
%"class.std::__1::unordered_map.122" = type { %"class.std::__1::__hash_table.123" }
%"class.std::__1::__hash_table.123" = type <{ %"class.std::__1::unique_ptr.124", %"class.std::__1::__compressed_pair.134", %"class.std::__1::__compressed_pair.139", %"class.std::__1::__compressed_pair.144", [4 x i8] }>
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126", %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::__hash_node_base.127"** }
%"struct.std::__1::__hash_node_base.127" = type { %"struct.std::__1::__hash_node_base.127"* }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::__bucket_list_deallocator.129" }
%"class.std::__1::__bucket_list_deallocator.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.std::__1::__hash_node_base.127" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.150", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.152" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1057", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1061", %"class.std::__1::unique_ptr.1067", %"class.std::__1::unique_ptr.485", %"class.std::__1::vector.1073", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1057" = type { %"struct.std::__1::__atomic_base.1058" }
%"struct.std::__1::__atomic_base.1058" = type { %"struct.std::__1::__cxx_atomic_impl.1059" }
%"struct.std::__1::__cxx_atomic_impl.1059" = type { %"struct.std::__1::__cxx_atomic_base_impl.1060" }
%"struct.std::__1::__cxx_atomic_base_impl.1060" = type { i32 }
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.818" }
%"class.std::__1::vector.818" = type { %"class.std::__1::__vector_base.819" }
%"class.std::__1::__vector_base.819" = type { i64**, i64**, %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { i64** }
%"class.std::__1::unique_ptr.1067" = type { %"class.std::__1::__compressed_pair.1068" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.1069" }
%"struct.std::__1::__compressed_pair_elem.1069" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.818", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1073" = type { %"class.std::__1::__vector_base.1074" }
%"class.std::__1::__vector_base.1074" = type { %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"*, %"class.std::__1::__compressed_pair.1076" }
%"struct.std::__1::pair.1075" = type opaque
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"struct.std::__1::pair.1075"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.163", %"struct.std::__1::atomic.167", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.30" }
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.30", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.171" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.172" = type { %"struct.std::__1::__atomic_base.173" }
%"struct.std::__1::__atomic_base.173" = type { %"struct.std::__1::__cxx_atomic_impl.174" }
%"struct.std::__1::__cxx_atomic_impl.174" = type { %"struct.std::__1::__cxx_atomic_base_impl.175" }
%"struct.std::__1::__cxx_atomic_base_impl.175" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { i64 }
%"class.std::__1::vector.176" = type { %"class.std::__1::__vector_base.177" }
%"class.std::__1::__vector_base.177" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.178" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.237", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.291", %"class.std::__1::vector.291", %"class.std::__1::vector.291", %"class.std::__1::vector.298", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.192", %"class.std::__1::vector.193", %"class.std::__1::vector.200", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.192" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.30" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.193" = type { %"class.std::__1::__vector_base.194" }
%"class.std::__1::__vector_base.194" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.195" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.200" = type { %"class.std::__1::__vector_base.201" }
%"class.std::__1::__vector_base.201" = type { %"class.std::__1::unique_ptr.202"*, %"class.std::__1::unique_ptr.202"*, %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::unique_ptr.202" = type opaque
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.std::__1::unique_ptr.202"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.30" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212", %"class.v8::internal::Worklist.214", %"class.v8::internal::Worklist.216", %"class.v8::internal::Worklist.218", %"class.v8::internal::Worklist.220", %"class.v8::internal::Worklist.222" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.30" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.30" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.30" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.30" }
%"class.v8::internal::Worklist.214" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.30" }
%"class.v8::internal::Worklist.216" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.30" }
%"class.v8::internal::Worklist.218" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.30" }
%"class.v8::internal::Worklist.220" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.30" }
%"class.v8::internal::Worklist.222" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.30" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.224", i8, i64 }
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.240" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.192"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.240" = type { %"class.std::__1::__hash_table.241" }
%"class.std::__1::__hash_table.241" = type <{ %"class.std::__1::unique_ptr.242", %"class.std::__1::__compressed_pair.252", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.260", [4 x i8] }>
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244", %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base.245"** }
%"struct.std::__1::__hash_node_base.245" = type { %"struct.std::__1::__hash_node_base.245"* }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.std::__1::__bucket_list_deallocator.247" }
%"class.std::__1::__bucket_list_deallocator.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.245" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.267" }
%"class.std::__1::unordered_map.267" = type { %"class.std::__1::__hash_table.268" }
%"class.std::__1::__hash_table.268" = type <{ %"class.std::__1::unique_ptr.269", %"class.std::__1::__compressed_pair.279", %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.287", [4 x i8] }>
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271", %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.272"** }
%"struct.std::__1::__hash_node_base.272" = type { %"struct.std::__1::__hash_node_base.272"* }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.std::__1::__bucket_list_deallocator.274" }
%"class.std::__1::__bucket_list_deallocator.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.272" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::vector.291" = type { %"class.std::__1::__vector_base.292" }
%"class.std::__1::__vector_base.292" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.298" = type { %"class.std::__1::__vector_base.299" }
%"class.std::__1::__vector_base.299" = type { %"struct.std::__1::pair.300"*, %"struct.std::__1::pair.300"*, %"class.std::__1::__compressed_pair.301" }
%"struct.std::__1::pair.300" = type opaque
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"struct.std::__1::pair.300"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.306", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.291"], [3 x %"class.std::__1::vector.291"], i8, %"struct.std::__1::atomic.163", [6 x i8], %"class.std::__1::vector.291", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.316"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.291", %"class.std::__1::vector.291", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.316" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.30", %"struct.std::__1::atomic.30", %"struct.std::__1::atomic.30", %"struct.std::__1::atomic.30", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.341", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.334"], %"class.std::__1::unique_ptr.306" }
%"class.std::__1::vector.334" = type { %"class.std::__1::__vector_base.335" }
%"class.std::__1::__vector_base.335" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.373", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.377", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.382" }
%"struct.std::__1::atomic.373" = type { %"struct.std::__1::__atomic_base.374" }
%"struct.std::__1::__atomic_base.374" = type { %"struct.std::__1::__cxx_atomic_impl.375" }
%"struct.std::__1::__cxx_atomic_impl.375" = type { %"struct.std::__1::__cxx_atomic_base_impl.376" }
%"struct.std::__1::__cxx_atomic_base_impl.376" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.377" = type { %"struct.std::__1::__atomic_base.378" }
%"struct.std::__1::__atomic_base.378" = type { %"struct.std::__1::__cxx_atomic_impl.379" }
%"struct.std::__1::__cxx_atomic_impl.379" = type { %"struct.std::__1::__cxx_atomic_base_impl.380" }
%"struct.std::__1::__cxx_atomic_base_impl.380" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.382" = type { %"class.std::__1::__hash_table.383" }
%"class.std::__1::__hash_table.383" = type <{ %"class.std::__1::unique_ptr.384", %"class.std::__1::__compressed_pair.394", %"class.std::__1::__compressed_pair.399", %"class.std::__1::__compressed_pair.402", [4 x i8] }>
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386", %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.387"** }
%"struct.std::__1::__hash_node_base.387" = type { %"struct.std::__1::__hash_node_base.387"* }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.std::__1::__bucket_list_deallocator.389" }
%"class.std::__1::__bucket_list_deallocator.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"struct.std::__1::__hash_node_base.387" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.306", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.30", %"struct.std::__1::atomic.163", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.412", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.412" = type { %"class.std::__1::__hash_table.413" }
%"class.std::__1::__hash_table.413" = type <{ %"class.std::__1::unique_ptr.414", %"class.std::__1::__compressed_pair.424", %"class.std::__1::__compressed_pair.429", %"class.std::__1::__compressed_pair.432", [4 x i8] }>
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416", %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.417"** }
%"struct.std::__1::__hash_node_base.417" = type { %"struct.std::__1::__hash_node_base.417"* }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.std::__1::__bucket_list_deallocator.419" }
%"class.std::__1::__bucket_list_deallocator.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"struct.std::__1::__hash_node_base.417" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.448" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.455" = type { %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.491" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.510", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.492", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.495", %"class.std::__1::set.503" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.495" = type { %"class.std::__1::__tree.496" }
%"class.std::__1::__tree.496" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.497", %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::set.503" = type { %"class.std::__1::__tree.504" }
%"class.std::__1::__tree.504" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.497", %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.510" = type { %"struct.std::__1::__atomic_base.511" }
%"struct.std::__1::__atomic_base.511" = type { %"struct.std::__1::__cxx_atomic_impl.512" }
%"struct.std::__1::__cxx_atomic_impl.512" = type { %"struct.std::__1::__cxx_atomic_base_impl.513" }
%"struct.std::__1::__cxx_atomic_base_impl.513" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.514" = type { %"class.std::__1::__hash_table.515" }
%"class.std::__1::__hash_table.515" = type <{ %"class.std::__1::unique_ptr.516", %"class.std::__1::__compressed_pair.526", %"class.std::__1::__compressed_pair.531", %"class.std::__1::__compressed_pair.534", [4 x i8] }>
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518", %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"struct.std::__1::__hash_node_base.519"** }
%"struct.std::__1::__hash_node_base.519" = type { %"struct.std::__1::__hash_node_base.519"* }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.std::__1::__bucket_list_deallocator.521" }
%"class.std::__1::__bucket_list_deallocator.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"struct.std::__1::__hash_node_base.519" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type <{ %"class.v8::internal::GlobalSafepoint::Barrier", %"class.v8::internal::Heap"*, %"class.v8::base::Mutex", %"class.v8::internal::LocalHeap"*, i32, [4 x i8] }>
%"class.v8::internal::GlobalSafepoint::Barrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", %"class.v8::base::ConditionVariable", i8, i32 }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.549, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.549 = type { i64 }
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.554", %"class.std::__1::vector.554" }
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.341" = type { %"class.std::__1::__hash_table.342" }
%"class.std::__1::__hash_table.342" = type <{ %"class.std::__1::unique_ptr.343", %"class.std::__1::__compressed_pair.353", %"class.std::__1::__compressed_pair.358", %"class.std::__1::__compressed_pair.362", [4 x i8] }>
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345", %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.std::__1::__hash_node_base.346"** }
%"struct.std::__1::__hash_node_base.346" = type { %"struct.std::__1::__hash_node_base.346"* }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.std::__1::__bucket_list_deallocator.348" }
%"class.std::__1::__bucket_list_deallocator.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"struct.std::__1::__hash_node_base.346" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::unordered_map.593" = type { %"class.std::__1::__hash_table.594" }
%"class.std::__1::__hash_table.594" = type <{ %"class.std::__1::unique_ptr.595", %"class.std::__1::__compressed_pair.605", %"class.std::__1::__compressed_pair.610", %"class.std::__1::__compressed_pair.613", [4 x i8] }>
%"class.std::__1::unique_ptr.595" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597", %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"struct.std::__1::__hash_node_base.598"** }
%"struct.std::__1::__hash_node_base.598" = type { %"struct.std::__1::__hash_node_base.598"* }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.std::__1::__bucket_list_deallocator.600" }
%"class.std::__1::__bucket_list_deallocator.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"struct.std::__1::__hash_node_base.598" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::unordered_map.567" = type { %"class.std::__1::__hash_table.568" }
%"class.std::__1::__hash_table.568" = type <{ %"class.std::__1::unique_ptr.569", %"class.std::__1::__compressed_pair.579", %"class.std::__1::__compressed_pair.584", %"class.std::__1::__compressed_pair.587", [4 x i8] }>
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571", %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"struct.std::__1::__hash_node_base.572"** }
%"struct.std::__1::__hash_node_base.572" = type { %"struct.std::__1::__hash_node_base.572"* }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"class.std::__1::__bucket_list_deallocator.574" }
%"class.std::__1::__bucket_list_deallocator.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"struct.std::__1::__hash_node_base.572" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::unordered_map.617" = type { %"class.std::__1::__hash_table.618" }
%"class.std::__1::__hash_table.618" = type <{ %"class.std::__1::unique_ptr.619", %"class.std::__1::__compressed_pair.629", %"class.std::__1::__compressed_pair.634", %"class.std::__1::__compressed_pair.639", [4 x i8] }>
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621", %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"struct.std::__1::__hash_node_base.622"** }
%"struct.std::__1::__hash_node_base.622" = type { %"struct.std::__1::__hash_node_base.622"* }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.std::__1::__bucket_list_deallocator.624" }
%"class.std::__1::__bucket_list_deallocator.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"struct.std::__1::__hash_node_base.622" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::vector.645" = type { %"class.std::__1::__vector_base.646" }
%"class.std::__1::__vector_base.646" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.647" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.554" }
%"class.std::__1::shared_ptr.658" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.150", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.659", %"class.std::__1::unique_ptr.673" }
%"class.std::__1::unique_ptr.659" = type { %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.662" }
%"class.std::__1::vector.662" = type { %"class.std::__1::__vector_base.663" }
%"class.std::__1::__vector_base.663" = type { %"class.std::__1::unique_ptr.664"*, %"class.std::__1::unique_ptr.664"*, %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::unique_ptr.664" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.std::__1::unique_ptr.664"* }
%"class.std::__1::unique_ptr.673" = type { %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.679" = type { %"class.std::__1::__compressed_pair.680" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.685" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.686", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.686" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.687", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.687" = type { %"class.std::__1::__vector_base.688" }
%"class.std::__1::__vector_base.688" = type { %"class.std::__1::unique_ptr.689"*, %"class.std::__1::unique_ptr.689"*, %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::unique_ptr.689" = type opaque
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.std::__1::unique_ptr.689"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.695 }
%union.anon.695 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.696", %"class.std::__1::unique_ptr.702", %"struct.std::__1::atomic.163", %"class.std::__1::unique_ptr.708", %"class.std::__1::unique_ptr.714", %"class.std::__1::unique_ptr.720", %"class.std::__1::unique_ptr.726", %"class.std::__1::unique_ptr.732", %"class.std::__1::set.738", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.702" = type { %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.732" = type { %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.738" = type { %"class.std::__1::__tree.739" }
%"class.std::__1::__tree.739" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.740", %"class.std::__1::__compressed_pair.744" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.747" }
%"class.v8::internal::TaggedImpl.747" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.746" }
%"class.v8::internal::TaggedImpl.746" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.754", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.760", %"class.v8::internal::DetachableVector.761", %"class.v8::internal::DetachableVector.760", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.761" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.760" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.30", %"struct.std::__1::atomic.30", %"class.std::__1::unique_ptr.748", %"class.std::__1::unique_ptr.492" }
%"class.std::__1::unique_ptr.748" = type { %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.762", %"class.std::__1::vector.768", %"class.std::__1::unique_ptr.775", %"class.std::__1::vector.782", %"class.std::__1::unique_ptr.789", i64, %"class.std::__1::vector.795", %"class.std::__1::vector.803", %"class.std::__1::vector.811", i8, i8, i32 }
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.768" = type { %"class.std::__1::__vector_base.769" }
%"class.std::__1::__vector_base.769" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.770" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.v8::internal::GlobalHandles::NodeSpace.778"* }
%"class.v8::internal::GlobalHandles::NodeSpace.778" = type opaque
%"class.std::__1::vector.782" = type { %"class.std::__1::__vector_base.783" }
%"class.std::__1::__vector_base.783" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.784" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"struct.std::__1::pair.797"*, %"struct.std::__1::pair.797"*, %"class.std::__1::__compressed_pair.798" }
%"struct.std::__1::pair.797" = type opaque
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"struct.std::__1::pair.797"* }
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { %"struct.std::__1::pair.805"*, %"struct.std::__1::pair.805"*, %"class.std::__1::__compressed_pair.806" }
%"struct.std::__1::pair.805" = type opaque
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"struct.std::__1::pair.805"* }
%"class.std::__1::vector.811" = type { %"class.std::__1::__vector_base.812" }
%"class.std::__1::__vector_base.812" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.813" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.818", %"class.std::__1::vector.825" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.832" }
%"class.std::__1::unique_ptr.832" = type { %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.825" = type { %"class.std::__1::__vector_base.826" }
%"class.std::__1::__vector_base.826" = type { i32*, i32*, %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.848" = type { %"struct.std::__1::__atomic_base.849" }
%"struct.std::__1::__atomic_base.849" = type { %"struct.std::__1::__cxx_atomic_impl.850" }
%"struct.std::__1::__cxx_atomic_impl.850" = type { %"struct.std::__1::__cxx_atomic_base_impl.851" }
%"struct.std::__1::__cxx_atomic_base_impl.851" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.855 }
%union.anon.855 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.860" = type { %"class.std::__1::__hash_table.861" }
%"class.std::__1::__hash_table.861" = type <{ %"class.std::__1::unique_ptr.862", %"class.std::__1::__compressed_pair.872", %"class.std::__1::__compressed_pair.877", %"class.std::__1::__compressed_pair.880", [4 x i8] }>
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864", %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"struct.std::__1::__hash_node_base.865"** }
%"struct.std::__1::__hash_node_base.865" = type { %"struct.std::__1::__hash_node_base.865"* }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.std::__1::__bucket_list_deallocator.867" }
%"class.std::__1::__bucket_list_deallocator.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.873" }
%"struct.std::__1::__compressed_pair_elem.873" = type { %"struct.std::__1::__hash_node_base.865" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::atomic.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__cxx_atomic_impl.165" }
%"struct.std::__1::__cxx_atomic_impl.165" = type { %"struct.std::__1::__cxx_atomic_base_impl.166" }
%"struct.std::__1::__cxx_atomic_base_impl.166" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.886", %"class.v8::internal::Handle.892", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.893", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.886" = type { %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.888" }
%"struct.std::__1::__compressed_pair_elem.888" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.892" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.893" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.894", %"class.std::__1::vector.900", %"class.std::__1::unique_ptr.908", %"class.std::__1::unique_ptr.914", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.920", %"class.std::__1::vector.926", %"struct.std::__1::pair.934" }
%"class.std::__1::unique_ptr.894" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { %"class.std::__1::unique_ptr.902"*, %"class.std::__1::unique_ptr.902"*, %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::unique_ptr.902" = type opaque
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.std::__1::unique_ptr.902"* }
%"class.std::__1::unique_ptr.908" = type { %"class.std::__1::__compressed_pair.909" }
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.910" }
%"struct.std::__1::__compressed_pair_elem.910" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.914" = type { %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.920" = type { %"class.std::__1::__compressed_pair.921" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.926" = type { %"class.std::__1::__vector_base.927" }
%"class.std::__1::__vector_base.927" = type { %"struct.std::__1::pair.928"*, %"struct.std::__1::pair.928"*, %"class.std::__1::__compressed_pair.929" }
%"struct.std::__1::pair.928" = type opaque
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"struct.std::__1::pair.928"* }
%"struct.std::__1::pair.934" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.6"*, i16, i8*)*, i8* }
%"class.v8::Local.6" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.938", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.938" = type { %"class.std::__1::__hash_table.939" }
%"class.std::__1::__hash_table.939" = type <{ %"class.std::__1::unique_ptr.940", %"class.std::__1::__compressed_pair.950", %"class.std::__1::__compressed_pair.955", %"class.std::__1::__compressed_pair.959", [4 x i8] }>
%"class.std::__1::unique_ptr.940" = type { %"class.std::__1::__compressed_pair.941" }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942", %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"struct.std::__1::__hash_node_base.943"** }
%"struct.std::__1::__hash_node_base.943" = type { %"struct.std::__1::__hash_node_base.943"* }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"class.std::__1::__bucket_list_deallocator.945" }
%"class.std::__1::__bucket_list_deallocator.945" = type { %"class.std::__1::__compressed_pair.946" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"struct.std::__1::__hash_node_base.943" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.973" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.967"**, %"struct.std::__1::pair.967"**, %"struct.std::__1::pair.967"**, %"class.std::__1::__compressed_pair.968" }
%"struct.std::__1::pair.967" = type opaque
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"struct.std::__1::pair.967"** }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.978" = type { %"class.std::__1::__vector_base.979" }
%"class.std::__1::__vector_base.979" = type { %"class.v8::internal::Handle.980"*, %"class.v8::internal::Handle.980"*, %"class.std::__1::__compressed_pair.981" }
%"class.v8::internal::Handle.980" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"class.v8::internal::Handle.980"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.843", i32, %"class.v8::Local.6" }
%"class.v8::Local.843" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.986" = type { %"class.std::__1::__compressed_pair.987" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.988" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.992" = type { %"class.std::__1::__vector_base.993" }
%"class.std::__1::__vector_base.993" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.999" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1000" = type { %"class.std::__1::__hash_table.1001" }
%"class.std::__1::__hash_table.1001" = type <{ %"class.std::__1::unique_ptr.1002", %"class.std::__1::__compressed_pair.1012", %"class.std::__1::__compressed_pair.1017", %"class.std::__1::__compressed_pair.1020", [4 x i8] }>
%"class.std::__1::unique_ptr.1002" = type { %"class.std::__1::__compressed_pair.1003" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.1004", %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"struct.std::__1::__hash_node_base.1005"** }
%"struct.std::__1::__hash_node_base.1005" = type { %"struct.std::__1::__hash_node_base.1005"* }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"class.std::__1::__bucket_list_deallocator.1007" }
%"class.std::__1::__bucket_list_deallocator.1007" = type { %"class.std::__1::__compressed_pair.1008" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { %"struct.std::__1::__hash_node_base.1005" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.554" = type { %"class.std::__1::__vector_base.555" }
%"class.std::__1::__vector_base.555" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.171" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1024", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1049", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1050", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1024" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.std::__1::weak_ptr.1049" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1050" = type { %"class.v8::PersistentBase.1051" }
%"class.v8::PersistentBase.1051" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1025", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1025" = type { %"class.std::__1::__hash_table.1026" }
%"class.std::__1::__hash_table.1026" = type <{ %"class.std::__1::unique_ptr.1027", %"class.std::__1::__compressed_pair.1037", %"class.std::__1::__compressed_pair.1042", %"class.std::__1::__compressed_pair.1045", [4 x i8] }>
%"class.std::__1::unique_ptr.1027" = type { %"class.std::__1::__compressed_pair.1028" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.1029", %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"struct.std::__1::__hash_node_base.1030"** }
%"struct.std::__1::__hash_node_base.1030" = type { %"struct.std::__1::__hash_node_base.1030"* }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"class.std::__1::__bucket_list_deallocator.1032" }
%"class.std::__1::__bucket_list_deallocator.1032" = type { %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { %"struct.std::__1::__hash_node_base.1030" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1052" = type { %"class.std::__1::__compressed_pair.1053" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.1054" }
%"struct.std::__1::__compressed_pair_elem.1054" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1081", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1090" = type { %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.844", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.844" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1098" }
%"class.std::__1::unordered_map.1098" = type { %"class.std::__1::__hash_table.1099" }
%"class.std::__1::__hash_table.1099" = type <{ %"class.std::__1::unique_ptr.1100", %"class.std::__1::__compressed_pair.1110", %"class.std::__1::__compressed_pair.1115", %"class.std::__1::__compressed_pair.1118", [4 x i8] }>
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102", %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"struct.std::__1::__hash_node_base.1103"** }
%"struct.std::__1::__hash_node_base.1103" = type { %"struct.std::__1::__hash_node_base.1103"* }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.std::__1::__bucket_list_deallocator.1105" }
%"class.std::__1::__bucket_list_deallocator.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"struct.std::__1::__hash_node_base.1103" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::atomic.1124" = type { %"struct.std::__1::__atomic_base.1125" }
%"struct.std::__1::__atomic_base.1125" = type { %"struct.std::__1::__cxx_atomic_impl.1126" }
%"struct.std::__1::__cxx_atomic_impl.1126" = type { %"struct.std::__1::__cxx_atomic_base_impl.1127" }
%"struct.std::__1::__cxx_atomic_base_impl.1127" = type { %"class.std::__1::vector.1128"* }
%"class.std::__1::vector.1128" = type { %"class.std::__1::__vector_base.1129" }
%"class.std::__1::__vector_base.1129" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1130" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::SequentialStringKey" = type <{ %"class.v8::internal::StringTableKey", %"class.v8::internal::Vector.1135", i8, [7 x i8] }>
%"class.v8::internal::StringTableKey" = type { i32 (...)**, i32, i32 }
%"class.v8::internal::Vector.1135" = type { i8*, i64 }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::SequentialStringKey.1136" = type <{ %"class.v8::internal::StringTableKey", %"class.v8::internal::Vector.1137", i8, [7 x i8] }>
%"class.v8::internal::Vector.1137" = type { i16*, i64 }
%"class.v8::internal::SeqSubStringKey" = type <{ %"class.v8::internal::StringTableKey", %"class.v8::internal::Handle.1138", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.1138" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::SeqSubStringKey.1139" = type <{ %"class.v8::internal::StringTableKey", %"class.v8::internal::Handle.1140", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.1140" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FactoryBase.1055" = type { i8 }
%"class.v8::internal::StringTableInsertionKey" = type { %"class.v8::internal::StringTableKey", %"class.v8::internal::Handle" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.v8::internal::Brief" = type { i64 }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.v8::internal::InternalizedStringKey" = type { %"class.v8::internal::StringTableKey", %"class.v8::internal::Handle" }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.856 }
%struct.anon.856 = type { i8 }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::SharedStringAccessGuardIfNeeded" = type { %"class.v8::base::Optional.1172" }
%"class.v8::base::Optional.1172" = type { %"class.v8::base::internal::OptionalBase.1173" }
%"class.v8::base::internal::OptionalBase.1173" = type { %"struct.v8::base::internal::OptionalStorage.1174" }
%"struct.v8::base::internal::OptionalStorage.1174" = type { %"struct.v8::base::internal::OptionalStorageBase.1175" }
%"struct.v8::base::internal::OptionalStorageBase.1175" = type { i8, %union.anon.1176 }
%union.anon.1176 = type { %"class.v8::base::SharedMutexGuard" }
%"class.v8::base::SharedMutexGuard" = type { %"class.v8::base::SharedMutex"* }
%"class.v8::internal::ConsStringIterator" = type <{ [32 x %"class.v8::internal::ConsString"], %"class.v8::internal::ConsString", i32, i32, i32, [4 x i8] }>
%"class.v8::internal::ConsString" = type { %"class.v8::internal::TorqueGeneratedConsString" }
%"class.v8::internal::TorqueGeneratedConsString" = type { %"class.v8::internal::String" }

$_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyIhEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_ = comdat any

$_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyItEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_ = comdat any

$_ZN2v88internal11StringTable9LookupKeyINS0_15SeqSubStringKeyINS0_16SeqOneByteStringEEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_ = comdat any

$_ZN2v88internal15SeqSubStringKeyINS0_16SeqOneByteStringEE8AsHandleEPNS0_7IsolateE = comdat any

$_ZN2v88internal11StringTable9LookupKeyINS0_15SeqSubStringKeyINS0_16SeqTwoByteStringEEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_ = comdat any

$_ZN2v88internal15SeqSubStringKeyINS0_16SeqTwoByteStringEE8AsHandleEPNS0_7IsolateE = comdat any

$_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyIhEENS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_ = comdat any

$_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyItEENS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_ = comdat any

$_ZN2v88internal11StringTable9LookupKeyINS0_23StringTableInsertionKeyENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_ = comdat any

$_ZNSt3__110unique_ptrIN2v88internal11StringTable4DataENS_14default_deleteIS4_EEED2Ev = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE = comdat any

$_ZN2v88internal11StringTable9LookupKeyINS0_21InternalizedStringKeyENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_ = comdat any

$_ZN2v88internal11StringTable4Data32TryStringToIndexOrLookupExistingIhEEmPNS0_7IsolateENS0_6StringES6_m = comdat any

$_ZN2v88internal11StringTable4Data32TryStringToIndexOrLookupExistingItEEmPNS0_7IsolateENS0_6StringES6_m = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal21InternalizedStringKeyD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2v88internal21InternalizedStringKey8AsHandleEPNS0_7IsolateE = comdat any

$_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EhEEbNS0_6VectorIKT0_EEPNS0_7IsolateE = comdat any

$_ZN2v88internal6String23IsConsStringEqualToImplIhEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE = comdat any

$_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EtEEbNS0_6VectorIKT0_EEPNS0_7IsolateE = comdat any

$_ZN2v88internal6String23IsConsStringEqualToImplItEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE = comdat any

$_ZN2v88internal9CopyCharsIthEEvPT0_PKT_m = comdat any

$_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EhEEbNS0_6VectorIKT0_EEPNS0_12LocalIsolateE = comdat any

$_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EtEEbNS0_6VectorIKT0_EEPNS0_12LocalIsolateE = comdat any

$_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im = comdat any

$_ZN2v88internal14StringTableKeyD2Ev = comdat any

$_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZTVN2v88internal21InternalizedStringKeyE = comdat any

@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [14 x i8] c"StringTable {\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@_ZN2v88internal17FLAG_thin_stringsE = external local_unnamed_addr global i8, align 1
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZTVN2v88internal21InternalizedStringKeyE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StringTableKey"*)* @_ZN2v88internal14StringTableKeyD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::InternalizedStringKey"*)* @_ZN2v88internal21InternalizedStringKeyD0Ev to i8*)] }, comdat, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.5 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1

@_ZN2v88internal11StringTable4DataC1Ei = hidden unnamed_addr alias void (%"class.v8::internal::StringTable::Data"*, i32), void (%"class.v8::internal::StringTable::Data"*, i32)* @_ZN2v88internal11StringTable4DataC2Ei
@_ZN2v88internal11StringTableC1EPNS0_7IsolateE = hidden unnamed_addr alias void (%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal11StringTableC2EPNS0_7IsolateE
@_ZN2v88internal11StringTableD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::StringTable"*), void (%"class.v8::internal::StringTable"*)* @_ZN2v88internal11StringTableD2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyIhEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::SequentialStringKey"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"class.v8::internal::Vector.1135"*
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = alloca %"class.v8::internal::String", align 8
  %8 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %9 = load atomic i64, i64* %8 acquire, align 8
  %10 = inttoptr i64 %9 to %"class.v8::internal::StringTable::Data"*
  %11 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %2, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = lshr i32 %12, 2
  %14 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %10, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, 1073741823
  %17 = and i32 %16, %13
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %19 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %2, i64 0, i32 0, i32 2
  %20 = bitcast %"class.v8::internal::String"* %7 to i8*
  %21 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %2, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %2, i64 0, i32 1, i32 1
  br label %24

24:                                               ; preds = %52, %3
  %25 = phi i32 [ %17, %3 ], [ %57, %52 ]
  %26 = phi i32 [ 1, %3 ], [ %53, %52 ]
  %27 = zext i32 %25 to i64
  %28 = load i64, i64* %18, align 8
  %29 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %10, i64 0, i32 4, i64 %27
  %30 = load atomic i32, i32* %29 acquire, align 4
  %31 = and i64 %28, 4294967295
  %32 = icmp eq i64 %31, 0
  call void @llvm.assume(i1 %32) #8
  %33 = zext i32 %30 to i64
  %34 = or i64 %28, %33
  switch i32 %30, label %35 [
    i32 0, label %85
    i32 2, label %52
  ]

35:                                               ; preds = %24
  %36 = add i64 %34, 3
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %11, align 8
  %40 = xor i32 %39, %38
  %41 = icmp ult i32 %40, 4
  br i1 %41, label %42, label %52

42:                                               ; preds = %35
  %43 = add i64 %34, 7
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = load i32, i32* %19, align 4
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %52

48:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  store i64 %34, i64* %21, align 8
  %49 = load i8*, i8** %22, align 8
  %50 = load i64, i64* %23, align 8
  %51 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EhEEbNS0_6VectorIKT0_EEPNS0_7IsolateE(%"class.v8::internal::String"* nonnull %7, i8* %49, i64 %50, %"class.v8::internal::Isolate"* %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br i1 %51, label %58, label %52

52:                                               ; preds = %48, %42, %35, %24
  %53 = add i32 %26, 1
  %54 = load i32, i32* %14, align 8
  %55 = add i32 %26, %25
  %56 = add i32 %54, -1
  %57 = and i32 %56, %55
  br label %24

58:                                               ; preds = %48
  %59 = zext i32 %25 to i64
  %60 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %10, i64 0, i32 4, i64 %59
  %61 = load i64, i64* %18, align 8
  %62 = load atomic i32, i32* %60 acquire, align 4
  %63 = and i64 %61, 4294967295
  %64 = icmp eq i64 %63, 0
  call void @llvm.assume(i1 %64) #8
  %65 = zext i32 %62 to i64
  %66 = or i64 %61, %65
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %68 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %67, align 8
  %69 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %58
  %71 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %68, i64 %66) #8
  br label %194

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %76 = load i64*, i64** %75, align 8
  %77 = icmp eq i64* %74, %76
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #8
  br label %80

80:                                               ; preds = %78, %72
  %81 = phi i64* [ %79, %78 ], [ %74, %72 ]
  %82 = ptrtoint i64* %81 to i64
  %83 = add i64 %82, 8
  %84 = inttoptr i64 %83 to i64*
  store i64* %84, i64** %73, align 8
  store i64 %66, i64* %81, align 8
  br label %194

85:                                               ; preds = %24
  %86 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %87 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #8
  %88 = bitcast i8** %22 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8
  store <2 x i64> %89, <2 x i64>* %4, align 16
  %90 = load i32, i32* %11, align 8
  %91 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE28NewOneByteInternalizedStringERKNS0_6VectorIKhEEj(%"class.v8::internal::FactoryBase"* %86, %"class.v8::internal::Vector.1135"* nonnull dereferenceable(16) %5, i32 %90) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #8
  %92 = getelementptr inbounds %"class.v8::internal::StringTable", %"class.v8::internal::StringTable"* %0, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %92) #8
  %93 = load i64, i64* %18, align 8
  %94 = call %"class.v8::internal::StringTable::Data"* @_ZN2v88internal11StringTable14EnsureCapacityENS0_16PtrComprCageBaseEi(%"class.v8::internal::StringTable"* %0, i64 %93, i32 undef)
  %95 = load i32, i32* %11, align 8
  %96 = lshr i32 %95, 2
  %97 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %94, i64 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = add i32 %98, 1073741823
  %100 = and i32 %99, %96
  %101 = bitcast %"class.v8::internal::String"* %6 to i8*
  %102 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %103

103:                                              ; preds = %139, %85
  %104 = phi i64 [ -1, %85 ], [ %140, %139 ]
  %105 = phi i32 [ %100, %85 ], [ %145, %139 ]
  %106 = phi i32 [ 1, %85 ], [ %141, %139 ]
  %107 = zext i32 %105 to i64
  %108 = load i64, i64* %18, align 8
  %109 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %94, i64 0, i32 4, i64 %107
  %110 = load atomic i32, i32* %109 acquire, align 4
  %111 = and i64 %108, 4294967295
  %112 = icmp eq i64 %111, 0
  call void @llvm.assume(i1 %112) #8
  %113 = zext i32 %110 to i64
  %114 = or i64 %108, %113
  switch i32 %110, label %122 [
    i32 0, label %115
    i32 2, label %119
  ]

115:                                              ; preds = %103
  %116 = zext i32 %105 to i64
  %117 = icmp eq i64 %104, -1
  %118 = select i1 %117, i64 %116, i64 %104
  br label %148

119:                                              ; preds = %103
  %120 = icmp eq i64 %104, -1
  %121 = select i1 %120, i64 %107, i64 %104
  br label %139

122:                                              ; preds = %103
  %123 = add i64 %114, 3
  %124 = inttoptr i64 %123 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = load i32, i32* %11, align 8
  %127 = xor i32 %126, %125
  %128 = icmp ult i32 %127, 4
  br i1 %128, label %129, label %139

129:                                              ; preds = %122
  %130 = add i64 %114, 7
  %131 = inttoptr i64 %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = load i32, i32* %19, align 4
  %134 = icmp eq i32 %132, %133
  br i1 %134, label %135, label %139

135:                                              ; preds = %129
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #8
  store i64 %114, i64* %102, align 8
  %136 = load i8*, i8** %22, align 8
  %137 = load i64, i64* %23, align 8
  %138 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EhEEbNS0_6VectorIKT0_EEPNS0_7IsolateE(%"class.v8::internal::String"* nonnull %6, i8* %136, i64 %137, %"class.v8::internal::Isolate"* %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #8
  br i1 %138, label %146, label %139

139:                                              ; preds = %135, %129, %122, %119
  %140 = phi i64 [ %104, %135 ], [ %104, %122 ], [ %104, %129 ], [ %121, %119 ]
  %141 = add i32 %106, 1
  %142 = load i32, i32* %97, align 8
  %143 = add i32 %106, %105
  %144 = add i32 %142, -1
  %145 = and i32 %144, %143
  br label %103

146:                                              ; preds = %135
  %147 = zext i32 %105 to i64
  br label %148

148:                                              ; preds = %146, %115
  %149 = phi i64 [ %118, %115 ], [ %147, %146 ]
  %150 = load i64, i64* %18, align 8
  %151 = and i64 %149, 4294967295
  %152 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %94, i64 0, i32 4, i64 %151
  %153 = load atomic i32, i32* %152 acquire, align 4
  %154 = and i64 %150, 4294967295
  %155 = icmp eq i64 %154, 0
  call void @llvm.assume(i1 %155) #8
  %156 = zext i32 %153 to i64
  %157 = or i64 %150, %156
  switch i32 %153, label %173 [
    i32 0, label %158
    i32 2, label %164
  ]

158:                                              ; preds = %148
  %159 = load i64, i64* %91, align 8
  %160 = trunc i64 %159 to i32
  store atomic volatile i32 %160, i32* %152 release, align 4
  %161 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %94, i64 0, i32 1
  %162 = load i32, i32* %161, align 8
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %161, align 8
  br label %192

164:                                              ; preds = %148
  %165 = load i64, i64* %91, align 8
  %166 = trunc i64 %165 to i32
  store atomic volatile i32 %166, i32* %152 release, align 4
  %167 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %94, i64 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %167, align 8
  %170 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %94, i64 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = add nsw i32 %171, -1
  store i32 %172, i32* %170, align 4
  br label %192

173:                                              ; preds = %148
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %175 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %174, align 8
  %176 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %175, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %173
  %178 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %175, i64 %157) #8
  br label %192

179:                                              ; preds = %173
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %181 = load i64*, i64** %180, align 8
  %182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %183 = load i64*, i64** %182, align 8
  %184 = icmp eq i64* %181, %183
  br i1 %184, label %185, label %187

185:                                              ; preds = %179
  %186 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #8
  br label %187

187:                                              ; preds = %185, %179
  %188 = phi i64* [ %186, %185 ], [ %181, %179 ]
  %189 = ptrtoint i64* %188 to i64
  %190 = add i64 %189, 8
  %191 = inttoptr i64 %190 to i64*
  store i64* %191, i64** %180, align 8
  store i64 %157, i64* %188, align 8
  br label %192

192:                                              ; preds = %187, %177, %164, %158
  %193 = phi i64* [ %91, %158 ], [ %91, %164 ], [ %178, %177 ], [ %188, %187 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %92) #8
  br label %194

194:                                              ; preds = %80, %70, %192
  %195 = phi i64* [ %193, %192 ], [ %71, %70 ], [ %81, %80 ]
  ret i64* %195
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::StringTable::Data"* @_ZN2v88internal11StringTable14EnsureCapacityENS0_16PtrComprCageBaseEi(%"class.v8::internal::StringTable"* nocapture, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = inttoptr i64 %6 to %"class.v8::internal::StringTable::Data"*
  %8 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %7, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  %13 = sdiv i32 %9, 4
  %14 = icmp sgt i32 %13, %11
  br i1 %14, label %15, label %22

15:                                               ; preds = %3
  %16 = ashr i32 %12, 1
  %17 = add nsw i32 %16, %12
  %18 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %17) #8
  %19 = icmp sgt i32 %18, 2048
  %20 = select i1 %19, i32 %18, i32 2048
  %21 = icmp slt i32 %20, %9
  br i1 %21, label %40, label %22

22:                                               ; preds = %3, %15
  %23 = icmp sgt i32 %9, %12
  br i1 %23, label %24, label %34

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %7, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = sub nsw i32 %9, %12
  %28 = sdiv i32 %27, 2
  %29 = icmp slt i32 %28, %26
  br i1 %29, label %34, label %30

30:                                               ; preds = %24
  %31 = sdiv i32 %12, 2
  %32 = add nsw i32 %31, %12
  %33 = icmp sgt i32 %32, %9
  br i1 %33, label %34, label %46

34:                                               ; preds = %30, %24, %22
  %35 = ashr i32 %12, 1
  %36 = add nsw i32 %35, %12
  %37 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %36) #8
  %38 = icmp sgt i32 %37, 2048
  %39 = select i1 %38, i32 %37, i32 2048
  br label %40

40:                                               ; preds = %34, %15
  %41 = phi i32 [ %20, %15 ], [ %39, %34 ]
  %42 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #8
  %43 = tail call %"class.v8::internal::StringTable::Data"* @_ZN2v88internal11StringTable4Data6ResizeENS0_16PtrComprCageBaseENSt3__110unique_ptrIS2_NS4_14default_deleteIS2_EEEEi(i64 %1, %"class.v8::internal::StringTable::Data"* %7, i32 %41)
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::StringTable::Data"* null, %"class.v8::internal::StringTable::Data"** %44, align 8
  %45 = ptrtoint %"class.v8::internal::StringTable::Data"* %43 to i64
  store atomic i64 %45, i64* %5 release, align 8
  call void @_ZNSt3__110unique_ptrIN2v88internal11StringTable4DataENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #8
  br label %46

46:                                               ; preds = %30, %40
  %47 = phi %"class.v8::internal::StringTable::Data"* [ %43, %40 ], [ %7, %30 ]
  ret %"class.v8::internal::StringTable::Data"* %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyItEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::SequentialStringKey.1136"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Vector.1137", align 8
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = inttoptr i64 %8 to %"class.v8::internal::StringTable::Data"*
  %10 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1136", %"class.v8::internal::SequentialStringKey.1136"* %2, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = lshr i32 %11, 2
  %13 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %9, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, 1073741823
  %16 = and i32 %15, %12
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %18 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1136", %"class.v8::internal::SequentialStringKey.1136"* %2, i64 0, i32 0, i32 2
  %19 = bitcast %"class.v8::internal::String"* %6 to i8*
  %20 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1136", %"class.v8::internal::SequentialStringKey.1136"* %2, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1136", %"class.v8::internal::SequentialStringKey.1136"* %2, i64 0, i32 1, i32 1
  br label %23

23:                                               ; preds = %51, %3
  %24 = phi i32 [ %16, %3 ], [ %56, %51 ]
  %25 = phi i32 [ 1, %3 ], [ %52, %51 ]
  %26 = zext i32 %24 to i64
  %27 = load i64, i64* %17, align 8
  %28 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %9, i64 0, i32 4, i64 %26
  %29 = load atomic i32, i32* %28 acquire, align 4
  %30 = and i64 %27, 4294967295
  %31 = icmp eq i64 %30, 0
  call void @llvm.assume(i1 %31) #8
  %32 = zext i32 %29 to i64
  %33 = or i64 %27, %32
  switch i32 %29, label %34 [
    i32 0, label %84
    i32 2, label %51
  ]

34:                                               ; preds = %23
  %35 = add i64 %33, 3
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = load i32, i32* %10, align 8
  %39 = xor i32 %38, %37
  %40 = icmp ult i32 %39, 4
  br i1 %40, label %41, label %51

41:                                               ; preds = %34
  %42 = add i64 %33, 7
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = load i32, i32* %18, align 4
  %46 = icmp eq i32 %44, %45
  br i1 %46, label %47, label %51

47:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  store i64 %33, i64* %20, align 8
  %48 = load i16*, i16** %21, align 8
  %49 = load i64, i64* %22, align 8
  %50 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EtEEbNS0_6VectorIKT0_EEPNS0_7IsolateE(%"class.v8::internal::String"* nonnull %6, i16* %48, i64 %49, %"class.v8::internal::Isolate"* %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  br i1 %50, label %57, label %51

51:                                               ; preds = %47, %41, %34, %23
  %52 = add i32 %25, 1
  %53 = load i32, i32* %13, align 8
  %54 = add i32 %25, %24
  %55 = add i32 %53, -1
  %56 = and i32 %55, %54
  br label %23

57:                                               ; preds = %47
  %58 = zext i32 %24 to i64
  %59 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %9, i64 0, i32 4, i64 %58
  %60 = load i64, i64* %17, align 8
  %61 = load atomic i32, i32* %59 acquire, align 4
  %62 = and i64 %60, 4294967295
  %63 = icmp eq i64 %62, 0
  call void @llvm.assume(i1 %63) #8
  %64 = zext i32 %61 to i64
  %65 = or i64 %60, %64
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %67 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %66, align 8
  %68 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %57
  %70 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %67, i64 %65) #8
  br label %197

71:                                               ; preds = %57
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %75 = load i64*, i64** %74, align 8
  %76 = icmp eq i64* %73, %75
  br i1 %76, label %77, label %79

77:                                               ; preds = %71
  %78 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #8
  br label %79

79:                                               ; preds = %77, %71
  %80 = phi i64* [ %78, %77 ], [ %73, %71 ]
  %81 = ptrtoint i64* %80 to i64
  %82 = add i64 %81, 8
  %83 = inttoptr i64 %82 to i64*
  store i64* %83, i64** %72, align 8
  store i64 %65, i64* %80, align 8
  br label %197

84:                                               ; preds = %23
  %85 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %86 = bitcast %"class.v8::internal::Vector.1137"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #8
  %87 = bitcast i16** %21 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = load i64, i64* %22, align 8
  %90 = and i64 %89, 9223372036854775807
  %91 = bitcast %"class.v8::internal::Vector.1137"* %4 to i64*
  store i64 %88, i64* %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Vector.1137", %"class.v8::internal::Vector.1137"* %4, i64 0, i32 1
  store i64 %90, i64* %92, align 8
  %93 = load i32, i32* %10, align 8
  %94 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE28NewTwoByteInternalizedStringERKNS0_6VectorIKtEEj(%"class.v8::internal::FactoryBase"* %85, %"class.v8::internal::Vector.1137"* nonnull dereferenceable(16) %4, i32 %93) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #8
  %95 = getelementptr inbounds %"class.v8::internal::StringTable", %"class.v8::internal::StringTable"* %0, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %95) #8
  %96 = load i64, i64* %17, align 8
  %97 = call %"class.v8::internal::StringTable::Data"* @_ZN2v88internal11StringTable14EnsureCapacityENS0_16PtrComprCageBaseEi(%"class.v8::internal::StringTable"* %0, i64 %96, i32 undef)
  %98 = load i32, i32* %10, align 8
  %99 = lshr i32 %98, 2
  %100 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %97, i64 0, i32 3
  %101 = load i32, i32* %100, align 8
  %102 = add i32 %101, 1073741823
  %103 = and i32 %102, %99
  %104 = bitcast %"class.v8::internal::String"* %5 to i8*
  %105 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %106

106:                                              ; preds = %142, %84
  %107 = phi i64 [ -1, %84 ], [ %143, %142 ]
  %108 = phi i32 [ %103, %84 ], [ %148, %142 ]
  %109 = phi i32 [ 1, %84 ], [ %144, %142 ]
  %110 = zext i32 %108 to i64
  %111 = load i64, i64* %17, align 8
  %112 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %97, i64 0, i32 4, i64 %110
  %113 = load atomic i32, i32* %112 acquire, align 4
  %114 = and i64 %111, 4294967295
  %115 = icmp eq i64 %114, 0
  call void @llvm.assume(i1 %115) #8
  %116 = zext i32 %113 to i64
  %117 = or i64 %111, %116
  switch i32 %113, label %125 [
    i32 0, label %118
    i32 2, label %122
  ]

118:                                              ; preds = %106
  %119 = zext i32 %108 to i64
  %120 = icmp eq i64 %107, -1
  %121 = select i1 %120, i64 %119, i64 %107
  br label %151

122:                                              ; preds = %106
  %123 = icmp eq i64 %107, -1
  %124 = select i1 %123, i64 %110, i64 %107
  br label %142

125:                                              ; preds = %106
  %126 = add i64 %117, 3
  %127 = inttoptr i64 %126 to i32*
  %128 = load i32, i32* %127, align 4
  %129 = load i32, i32* %10, align 8
  %130 = xor i32 %129, %128
  %131 = icmp ult i32 %130, 4
  br i1 %131, label %132, label %142

132:                                              ; preds = %125
  %133 = add i64 %117, 7
  %134 = inttoptr i64 %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = load i32, i32* %18, align 4
  %137 = icmp eq i32 %135, %136
  br i1 %137, label %138, label %142

138:                                              ; preds = %132
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #8
  store i64 %117, i64* %105, align 8
  %139 = load i16*, i16** %21, align 8
  %140 = load i64, i64* %22, align 8
  %141 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EtEEbNS0_6VectorIKT0_EEPNS0_7IsolateE(%"class.v8::internal::String"* nonnull %5, i16* %139, i64 %140, %"class.v8::internal::Isolate"* %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #8
  br i1 %141, label %149, label %142

142:                                              ; preds = %138, %132, %125, %122
  %143 = phi i64 [ %107, %138 ], [ %107, %125 ], [ %107, %132 ], [ %124, %122 ]
  %144 = add i32 %109, 1
  %145 = load i32, i32* %100, align 8
  %146 = add i32 %109, %108
  %147 = add i32 %145, -1
  %148 = and i32 %147, %146
  br label %106

149:                                              ; preds = %138
  %150 = zext i32 %108 to i64
  br label %151

151:                                              ; preds = %149, %118
  %152 = phi i64 [ %121, %118 ], [ %150, %149 ]
  %153 = load i64, i64* %17, align 8
  %154 = and i64 %152, 4294967295
  %155 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %97, i64 0, i32 4, i64 %154
  %156 = load atomic i32, i32* %155 acquire, align 4
  %157 = and i64 %153, 4294967295
  %158 = icmp eq i64 %157, 0
  call void @llvm.assume(i1 %158) #8
  %159 = zext i32 %156 to i64
  %160 = or i64 %153, %159
  switch i32 %156, label %176 [
    i32 0, label %161
    i32 2, label %167
  ]

161:                                              ; preds = %151
  %162 = load i64, i64* %94, align 8
  %163 = trunc i64 %162 to i32
  store atomic volatile i32 %163, i32* %155 release, align 4
  %164 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %97, i64 0, i32 1
  %165 = load i32, i32* %164, align 8
  %166 = add nsw i32 %165, 1
  store i32 %166, i32* %164, align 8
  br label %195

167:                                              ; preds = %151
  %168 = load i64, i64* %94, align 8
  %169 = trunc i64 %168 to i32
  store atomic volatile i32 %169, i32* %155 release, align 4
  %170 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %97, i64 0, i32 1
  %171 = load i32, i32* %170, align 8
  %172 = add nsw i32 %171, 1
  store i32 %172, i32* %170, align 8
  %173 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %97, i64 0, i32 2
  %174 = load i32, i32* %173, align 4
  %175 = add nsw i32 %174, -1
  store i32 %175, i32* %173, align 4
  br label %195

176:                                              ; preds = %151
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %178 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %177, align 8
  %179 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %176
  %181 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %178, i64 %160) #8
  br label %195

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %184 = load i64*, i64** %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %186 = load i64*, i64** %185, align 8
  %187 = icmp eq i64* %184, %186
  br i1 %187, label %188, label %190

188:                                              ; preds = %182
  %189 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #8
  br label %190

190:                                              ; preds = %188, %182
  %191 = phi i64* [ %189, %188 ], [ %184, %182 ]
  %192 = ptrtoint i64* %191 to i64
  %193 = add i64 %192, 8
  %194 = inttoptr i64 %193 to i64*
  store i64* %194, i64** %183, align 8
  store i64 %160, i64* %191, align 8
  br label %195

195:                                              ; preds = %190, %180, %167, %161
  %196 = phi i64* [ %94, %161 ], [ %94, %167 ], [ %181, %180 ], [ %191, %190 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %95) #8
  br label %197

197:                                              ; preds = %79, %69, %195
  %198 = phi i64* [ %196, %195 ], [ %70, %69 ], [ %80, %79 ]
  ret i64* %198
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11StringTable9LookupKeyINS0_15SeqSubStringKeyINS0_16SeqOneByteStringEEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::SeqSubStringKey"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %7 = load atomic i64, i64* %6 acquire, align 8
  %8 = inttoptr i64 %7 to %"class.v8::internal::StringTable::Data"*
  %9 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey", %"class.v8::internal::SeqSubStringKey"* %2, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = lshr i32 %10, 2
  %12 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %8, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, 1073741823
  %15 = and i32 %14, %11
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %17 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey", %"class.v8::internal::SeqSubStringKey"* %2, i64 0, i32 0, i32 2
  %18 = bitcast %"class.v8::internal::String"* %5 to i8*
  %19 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey", %"class.v8::internal::SeqSubStringKey"* %2, i64 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey", %"class.v8::internal::SeqSubStringKey"* %2, i64 0, i32 2
  br label %22

22:                                               ; preds = %56, %3
  %23 = phi i32 [ %15, %3 ], [ %61, %56 ]
  %24 = phi i32 [ 1, %3 ], [ %57, %56 ]
  %25 = zext i32 %23 to i64
  %26 = load i64, i64* %16, align 8
  %27 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %8, i64 0, i32 4, i64 %25
  %28 = load atomic i32, i32* %27 acquire, align 4
  %29 = and i64 %26, 4294967295
  %30 = icmp eq i64 %29, 0
  call void @llvm.assume(i1 %30) #8
  %31 = zext i32 %28 to i64
  %32 = or i64 %26, %31
  switch i32 %28, label %33 [
    i32 0, label %89
    i32 2, label %56
  ]

33:                                               ; preds = %22
  %34 = add i64 %32, 3
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* %9, align 8
  %38 = xor i32 %37, %36
  %39 = icmp ult i32 %38, 4
  br i1 %39, label %40, label %56

40:                                               ; preds = %33
  %41 = add i64 %32, 7
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = load i32, i32* %17, align 4
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %46, label %56

46:                                               ; preds = %40
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  store i64 %32, i64* %19, align 8
  %47 = load i64*, i64** %20, align 8
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, 11
  %50 = inttoptr i64 %49 to i8*
  %51 = load i32, i32* %21, align 8
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %50, i64 %52
  %54 = sext i32 %43 to i64
  %55 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EhEEbNS0_6VectorIKT0_EEPNS0_7IsolateE(%"class.v8::internal::String"* nonnull %5, i8* %53, i64 %54, %"class.v8::internal::Isolate"* %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br i1 %55, label %62, label %56

56:                                               ; preds = %46, %40, %33, %22
  %57 = add i32 %24, 1
  %58 = load i32, i32* %12, align 8
  %59 = add i32 %24, %23
  %60 = add i32 %58, -1
  %61 = and i32 %60, %59
  br label %22

62:                                               ; preds = %46
  %63 = zext i32 %23 to i64
  %64 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %8, i64 0, i32 4, i64 %63
  %65 = load i64, i64* %16, align 8
  %66 = load atomic i32, i32* %64 acquire, align 4
  %67 = and i64 %65, 4294967295
  %68 = icmp eq i64 %67, 0
  call void @llvm.assume(i1 %68) #8
  %69 = zext i32 %66 to i64
  %70 = or i64 %65, %69
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %72 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %71, align 8
  %73 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %62
  %75 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %72, i64 %70) #8
  br label %199

76:                                               ; preds = %62
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %80 = load i64*, i64** %79, align 8
  %81 = icmp eq i64* %78, %80
  br i1 %81, label %82, label %84

82:                                               ; preds = %76
  %83 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #8
  br label %84

84:                                               ; preds = %82, %76
  %85 = phi i64* [ %83, %82 ], [ %78, %76 ]
  %86 = ptrtoint i64* %85 to i64
  %87 = add i64 %86, 8
  %88 = inttoptr i64 %87 to i64*
  store i64* %88, i64** %77, align 8
  store i64 %70, i64* %85, align 8
  br label %199

89:                                               ; preds = %22
  %90 = call i64* @_ZN2v88internal15SeqSubStringKeyINS0_16SeqOneByteStringEE8AsHandleEPNS0_7IsolateE(%"class.v8::internal::SeqSubStringKey"* %2, %"class.v8::internal::Isolate"* %1)
  %91 = getelementptr inbounds %"class.v8::internal::StringTable", %"class.v8::internal::StringTable"* %0, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %91) #8
  %92 = load i64, i64* %16, align 8
  %93 = call %"class.v8::internal::StringTable::Data"* @_ZN2v88internal11StringTable14EnsureCapacityENS0_16PtrComprCageBaseEi(%"class.v8::internal::StringTable"* %0, i64 %92, i32 undef)
  %94 = load i32, i32* %9, align 8
  %95 = lshr i32 %94, 2
  %96 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %93, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, 1073741823
  %99 = and i32 %98, %95
  %100 = bitcast %"class.v8::internal::String"* %4 to i8*
  %101 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %102

102:                                              ; preds = %144, %89
  %103 = phi i64 [ -1, %89 ], [ %145, %144 ]
  %104 = phi i32 [ %99, %89 ], [ %150, %144 ]
  %105 = phi i32 [ 1, %89 ], [ %146, %144 ]
  %106 = zext i32 %104 to i64
  %107 = load i64, i64* %16, align 8
  %108 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %93, i64 0, i32 4, i64 %106
  %109 = load atomic i32, i32* %108 acquire, align 4
  %110 = and i64 %107, 4294967295
  %111 = icmp eq i64 %110, 0
  call void @llvm.assume(i1 %111) #8
  %112 = zext i32 %109 to i64
  %113 = or i64 %107, %112
  switch i32 %109, label %121 [
    i32 0, label %114
    i32 2, label %118
  ]

114:                                              ; preds = %102
  %115 = zext i32 %104 to i64
  %116 = icmp eq i64 %103, -1
  %117 = select i1 %116, i64 %115, i64 %103
  br label %153

118:                                              ; preds = %102
  %119 = icmp eq i64 %103, -1
  %120 = select i1 %119, i64 %106, i64 %103
  br label %144

121:                                              ; preds = %102
  %122 = add i64 %113, 3
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = load i32, i32* %9, align 8
  %126 = xor i32 %125, %124
  %127 = icmp ult i32 %126, 4
  br i1 %127, label %128, label %144

128:                                              ; preds = %121
  %129 = add i64 %113, 7
  %130 = inttoptr i64 %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = load i32, i32* %17, align 4
  %133 = icmp eq i32 %131, %132
  br i1 %133, label %134, label %144

134:                                              ; preds = %128
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #8
  store i64 %113, i64* %101, align 8
  %135 = load i64*, i64** %20, align 8
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 11
  %138 = inttoptr i64 %137 to i8*
  %139 = load i32, i32* %21, align 8
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8, i8* %138, i64 %140
  %142 = sext i32 %131 to i64
  %143 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EhEEbNS0_6VectorIKT0_EEPNS0_7IsolateE(%"class.v8::internal::String"* nonnull %4, i8* %141, i64 %142, %"class.v8::internal::Isolate"* %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #8
  br i1 %143, label %151, label %144

144:                                              ; preds = %134, %128, %121, %118
  %145 = phi i64 [ %103, %134 ], [ %103, %121 ], [ %103, %128 ], [ %120, %118 ]
  %146 = add i32 %105, 1
  %147 = load i32, i32* %96, align 8
  %148 = add i32 %105, %104
  %149 = add i32 %147, -1
  %150 = and i32 %149, %148
  br label %102

151:                                              ; preds = %134
  %152 = zext i32 %104 to i64
  br label %153

153:                                              ; preds = %151, %114
  %154 = phi i64 [ %117, %114 ], [ %152, %151 ]
  %155 = load i64, i64* %16, align 8
  %156 = and i64 %154, 4294967295
  %157 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %93, i64 0, i32 4, i64 %156
  %158 = load atomic i32, i32* %157 acquire, align 4
  %159 = and i64 %155, 4294967295
  %160 = icmp eq i64 %159, 0
  call void @llvm.assume(i1 %160) #8
  %161 = zext i32 %158 to i64
  %162 = or i64 %155, %161
  switch i32 %158, label %178 [
    i32 0, label %163
    i32 2, label %169
  ]

163:                                              ; preds = %153
  %164 = load i64, i64* %90, align 8
  %165 = trunc i64 %164 to i32
  store atomic volatile i32 %165, i32* %157 release, align 4
  %166 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %93, i64 0, i32 1
  %167 = load i32, i32* %166, align 8
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %166, align 8
  br label %197

169:                                              ; preds = %153
  %170 = load i64, i64* %90, align 8
  %171 = trunc i64 %170 to i32
  store atomic volatile i32 %171, i32* %157 release, align 4
  %172 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %93, i64 0, i32 1
  %173 = load i32, i32* %172, align 8
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* %172, align 8
  %175 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %93, i64 0, i32 2
  %176 = load i32, i32* %175, align 4
  %177 = add nsw i32 %176, -1
  store i32 %177, i32* %175, align 4
  br label %197

178:                                              ; preds = %153
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %180 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %179, align 8
  %181 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %178
  %183 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %180, i64 %162) #8
  br label %197

184:                                              ; preds = %178
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %186 = load i64*, i64** %185, align 8
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %188 = load i64*, i64** %187, align 8
  %189 = icmp eq i64* %186, %188
  br i1 %189, label %190, label %192

190:                                              ; preds = %184
  %191 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #8
  br label %192

192:                                              ; preds = %190, %184
  %193 = phi i64* [ %191, %190 ], [ %186, %184 ]
  %194 = ptrtoint i64* %193 to i64
  %195 = add i64 %194, 8
  %196 = inttoptr i64 %195 to i64*
  store i64* %196, i64** %185, align 8
  store i64 %162, i64* %193, align 8
  br label %197

197:                                              ; preds = %192, %182, %169, %163
  %198 = phi i64* [ %90, %163 ], [ %90, %169 ], [ %183, %182 ], [ %193, %192 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %91) #8
  br label %199

199:                                              ; preds = %84, %74, %197
  %200 = phi i64* [ %198, %197 ], [ %75, %74 ], [ %85, %84 ]
  ret i64* %200
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal15SeqSubStringKeyINS0_16SeqOneByteStringEE8AsHandleEPNS0_7IsolateE(%"class.v8::internal::SeqSubStringKey"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %4 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey", %"class.v8::internal::SeqSubStringKey"* %0, i64 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey", %"class.v8::internal::SeqSubStringKey"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE36AllocateRawOneByteInternalizedStringEij(%"class.v8::internal::FactoryBase"* %3, i32 %5, i32 %7) #8
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 11
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey", %"class.v8::internal::SeqSubStringKey"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 11
  %16 = inttoptr i64 %15 to i8*
  %17 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey", %"class.v8::internal::SeqSubStringKey"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  %21 = load i32, i32* %4, align 4
  %22 = sext i32 %21 to i64
  switch i64 %22, label %49 [
    i64 1, label %23
    i64 2, label %25
    i64 3, label %29
    i64 4, label %30
    i64 5, label %34
    i64 6, label %35
    i64 7, label %36
    i64 8, label %37
    i64 9, label %41
    i64 10, label %42
    i64 11, label %43
    i64 12, label %44
    i64 13, label %45
    i64 14, label %46
    i64 15, label %47
    i64 16, label %48
    i64 0, label %50
  ]

23:                                               ; preds = %2
  %24 = load i8, i8* %20, align 1
  store i8 %24, i8* %11, align 1
  br label %50

25:                                               ; preds = %2
  %26 = bitcast i8* %20 to i16*
  %27 = inttoptr i64 %10 to i16*
  %28 = load i16, i16* %26, align 1
  store i16 %28, i16* %27, align 1
  br label %50

29:                                               ; preds = %2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %20, i64 3, i1 false) #8
  br label %50

30:                                               ; preds = %2
  %31 = bitcast i8* %20 to i32*
  %32 = inttoptr i64 %10 to i32*
  %33 = load i32, i32* %31, align 1
  store i32 %33, i32* %32, align 1
  br label %50

34:                                               ; preds = %2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %20, i64 5, i1 false) #8
  br label %50

35:                                               ; preds = %2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %20, i64 6, i1 false) #8
  br label %50

36:                                               ; preds = %2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %20, i64 7, i1 false) #8
  br label %50

37:                                               ; preds = %2
  %38 = bitcast i8* %20 to i64*
  %39 = inttoptr i64 %10 to i64*
  %40 = load i64, i64* %38, align 1
  store i64 %40, i64* %39, align 1
  br label %50

41:                                               ; preds = %2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %20, i64 9, i1 false) #8
  br label %50

42:                                               ; preds = %2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %20, i64 10, i1 false) #8
  br label %50

43:                                               ; preds = %2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %20, i64 11, i1 false) #8
  br label %50

44:                                               ; preds = %2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %20, i64 12, i1 false) #8
  br label %50

45:                                               ; preds = %2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %20, i64 13, i1 false) #8
  br label %50

46:                                               ; preds = %2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %20, i64 14, i1 false) #8
  br label %50

47:                                               ; preds = %2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %20, i64 15, i1 false) #8
  br label %50

48:                                               ; preds = %2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %20, i64 16, i1 false) #8
  br label %50

49:                                               ; preds = %2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %20, i64 %22, i1 false) #8
  br label %50

50:                                               ; preds = %2, %23, %25, %29, %30, %34, %35, %36, %37, %41, %42, %43, %44, %45, %46, %47, %48, %49
  ret i64* %8
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11StringTable9LookupKeyINS0_15SeqSubStringKeyINS0_16SeqTwoByteStringEEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::SeqSubStringKey.1139"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %7 = load atomic i64, i64* %6 acquire, align 8
  %8 = inttoptr i64 %7 to %"class.v8::internal::StringTable::Data"*
  %9 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey.1139", %"class.v8::internal::SeqSubStringKey.1139"* %2, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = lshr i32 %10, 2
  %12 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %8, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, 1073741823
  %15 = and i32 %14, %11
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %17 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey.1139", %"class.v8::internal::SeqSubStringKey.1139"* %2, i64 0, i32 0, i32 2
  %18 = bitcast %"class.v8::internal::String"* %5 to i8*
  %19 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey.1139", %"class.v8::internal::SeqSubStringKey.1139"* %2, i64 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey.1139", %"class.v8::internal::SeqSubStringKey.1139"* %2, i64 0, i32 2
  br label %22

22:                                               ; preds = %56, %3
  %23 = phi i32 [ %15, %3 ], [ %61, %56 ]
  %24 = phi i32 [ 1, %3 ], [ %57, %56 ]
  %25 = zext i32 %23 to i64
  %26 = load i64, i64* %16, align 8
  %27 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %8, i64 0, i32 4, i64 %25
  %28 = load atomic i32, i32* %27 acquire, align 4
  %29 = and i64 %26, 4294967295
  %30 = icmp eq i64 %29, 0
  call void @llvm.assume(i1 %30) #8
  %31 = zext i32 %28 to i64
  %32 = or i64 %26, %31
  switch i32 %28, label %33 [
    i32 0, label %89
    i32 2, label %56
  ]

33:                                               ; preds = %22
  %34 = add i64 %32, 3
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* %9, align 8
  %38 = xor i32 %37, %36
  %39 = icmp ult i32 %38, 4
  br i1 %39, label %40, label %56

40:                                               ; preds = %33
  %41 = add i64 %32, 7
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = load i32, i32* %17, align 4
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %46, label %56

46:                                               ; preds = %40
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  store i64 %32, i64* %19, align 8
  %47 = load i64*, i64** %20, align 8
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, 11
  %50 = inttoptr i64 %49 to i16*
  %51 = load i32, i32* %21, align 8
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i16, i16* %50, i64 %52
  %54 = sext i32 %43 to i64
  %55 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EtEEbNS0_6VectorIKT0_EEPNS0_7IsolateE(%"class.v8::internal::String"* nonnull %5, i16* %53, i64 %54, %"class.v8::internal::Isolate"* %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br i1 %55, label %62, label %56

56:                                               ; preds = %46, %40, %33, %22
  %57 = add i32 %24, 1
  %58 = load i32, i32* %12, align 8
  %59 = add i32 %24, %23
  %60 = add i32 %58, -1
  %61 = and i32 %60, %59
  br label %22

62:                                               ; preds = %46
  %63 = zext i32 %23 to i64
  %64 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %8, i64 0, i32 4, i64 %63
  %65 = load i64, i64* %16, align 8
  %66 = load atomic i32, i32* %64 acquire, align 4
  %67 = and i64 %65, 4294967295
  %68 = icmp eq i64 %67, 0
  call void @llvm.assume(i1 %68) #8
  %69 = zext i32 %66 to i64
  %70 = or i64 %65, %69
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %72 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %71, align 8
  %73 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %62
  %75 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %72, i64 %70) #8
  br label %199

76:                                               ; preds = %62
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %80 = load i64*, i64** %79, align 8
  %81 = icmp eq i64* %78, %80
  br i1 %81, label %82, label %84

82:                                               ; preds = %76
  %83 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #8
  br label %84

84:                                               ; preds = %82, %76
  %85 = phi i64* [ %83, %82 ], [ %78, %76 ]
  %86 = ptrtoint i64* %85 to i64
  %87 = add i64 %86, 8
  %88 = inttoptr i64 %87 to i64*
  store i64* %88, i64** %77, align 8
  store i64 %70, i64* %85, align 8
  br label %199

89:                                               ; preds = %22
  %90 = call i64* @_ZN2v88internal15SeqSubStringKeyINS0_16SeqTwoByteStringEE8AsHandleEPNS0_7IsolateE(%"class.v8::internal::SeqSubStringKey.1139"* %2, %"class.v8::internal::Isolate"* %1)
  %91 = getelementptr inbounds %"class.v8::internal::StringTable", %"class.v8::internal::StringTable"* %0, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %91) #8
  %92 = load i64, i64* %16, align 8
  %93 = call %"class.v8::internal::StringTable::Data"* @_ZN2v88internal11StringTable14EnsureCapacityENS0_16PtrComprCageBaseEi(%"class.v8::internal::StringTable"* %0, i64 %92, i32 undef)
  %94 = load i32, i32* %9, align 8
  %95 = lshr i32 %94, 2
  %96 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %93, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, 1073741823
  %99 = and i32 %98, %95
  %100 = bitcast %"class.v8::internal::String"* %4 to i8*
  %101 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %102

102:                                              ; preds = %144, %89
  %103 = phi i64 [ -1, %89 ], [ %145, %144 ]
  %104 = phi i32 [ %99, %89 ], [ %150, %144 ]
  %105 = phi i32 [ 1, %89 ], [ %146, %144 ]
  %106 = zext i32 %104 to i64
  %107 = load i64, i64* %16, align 8
  %108 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %93, i64 0, i32 4, i64 %106
  %109 = load atomic i32, i32* %108 acquire, align 4
  %110 = and i64 %107, 4294967295
  %111 = icmp eq i64 %110, 0
  call void @llvm.assume(i1 %111) #8
  %112 = zext i32 %109 to i64
  %113 = or i64 %107, %112
  switch i32 %109, label %121 [
    i32 0, label %114
    i32 2, label %118
  ]

114:                                              ; preds = %102
  %115 = zext i32 %104 to i64
  %116 = icmp eq i64 %103, -1
  %117 = select i1 %116, i64 %115, i64 %103
  br label %153

118:                                              ; preds = %102
  %119 = icmp eq i64 %103, -1
  %120 = select i1 %119, i64 %106, i64 %103
  br label %144

121:                                              ; preds = %102
  %122 = add i64 %113, 3
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = load i32, i32* %9, align 8
  %126 = xor i32 %125, %124
  %127 = icmp ult i32 %126, 4
  br i1 %127, label %128, label %144

128:                                              ; preds = %121
  %129 = add i64 %113, 7
  %130 = inttoptr i64 %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = load i32, i32* %17, align 4
  %133 = icmp eq i32 %131, %132
  br i1 %133, label %134, label %144

134:                                              ; preds = %128
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #8
  store i64 %113, i64* %101, align 8
  %135 = load i64*, i64** %20, align 8
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 11
  %138 = inttoptr i64 %137 to i16*
  %139 = load i32, i32* %21, align 8
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i16, i16* %138, i64 %140
  %142 = sext i32 %131 to i64
  %143 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EtEEbNS0_6VectorIKT0_EEPNS0_7IsolateE(%"class.v8::internal::String"* nonnull %4, i16* %141, i64 %142, %"class.v8::internal::Isolate"* %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #8
  br i1 %143, label %151, label %144

144:                                              ; preds = %134, %128, %121, %118
  %145 = phi i64 [ %103, %134 ], [ %103, %121 ], [ %103, %128 ], [ %120, %118 ]
  %146 = add i32 %105, 1
  %147 = load i32, i32* %96, align 8
  %148 = add i32 %105, %104
  %149 = add i32 %147, -1
  %150 = and i32 %149, %148
  br label %102

151:                                              ; preds = %134
  %152 = zext i32 %104 to i64
  br label %153

153:                                              ; preds = %151, %114
  %154 = phi i64 [ %117, %114 ], [ %152, %151 ]
  %155 = load i64, i64* %16, align 8
  %156 = and i64 %154, 4294967295
  %157 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %93, i64 0, i32 4, i64 %156
  %158 = load atomic i32, i32* %157 acquire, align 4
  %159 = and i64 %155, 4294967295
  %160 = icmp eq i64 %159, 0
  call void @llvm.assume(i1 %160) #8
  %161 = zext i32 %158 to i64
  %162 = or i64 %155, %161
  switch i32 %158, label %178 [
    i32 0, label %163
    i32 2, label %169
  ]

163:                                              ; preds = %153
  %164 = load i64, i64* %90, align 8
  %165 = trunc i64 %164 to i32
  store atomic volatile i32 %165, i32* %157 release, align 4
  %166 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %93, i64 0, i32 1
  %167 = load i32, i32* %166, align 8
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %166, align 8
  br label %197

169:                                              ; preds = %153
  %170 = load i64, i64* %90, align 8
  %171 = trunc i64 %170 to i32
  store atomic volatile i32 %171, i32* %157 release, align 4
  %172 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %93, i64 0, i32 1
  %173 = load i32, i32* %172, align 8
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* %172, align 8
  %175 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %93, i64 0, i32 2
  %176 = load i32, i32* %175, align 4
  %177 = add nsw i32 %176, -1
  store i32 %177, i32* %175, align 4
  br label %197

178:                                              ; preds = %153
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %180 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %179, align 8
  %181 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %178
  %183 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %180, i64 %162) #8
  br label %197

184:                                              ; preds = %178
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %186 = load i64*, i64** %185, align 8
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %188 = load i64*, i64** %187, align 8
  %189 = icmp eq i64* %186, %188
  br i1 %189, label %190, label %192

190:                                              ; preds = %184
  %191 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #8
  br label %192

192:                                              ; preds = %190, %184
  %193 = phi i64* [ %191, %190 ], [ %186, %184 ]
  %194 = ptrtoint i64* %193 to i64
  %195 = add i64 %194, 8
  %196 = inttoptr i64 %195 to i64*
  store i64* %196, i64** %185, align 8
  store i64 %162, i64* %193, align 8
  br label %197

197:                                              ; preds = %192, %182, %169, %163
  %198 = phi i64* [ %90, %163 ], [ %90, %169 ], [ %183, %182 ], [ %193, %192 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %91) #8
  br label %199

199:                                              ; preds = %84, %74, %197
  %200 = phi i64* [ %198, %197 ], [ %75, %74 ], [ %85, %84 ]
  ret i64* %200
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal15SeqSubStringKeyINS0_16SeqTwoByteStringEE8AsHandleEPNS0_7IsolateE(%"class.v8::internal::SeqSubStringKey.1139"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey.1139", %"class.v8::internal::SeqSubStringKey.1139"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %7 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey.1139", %"class.v8::internal::SeqSubStringKey.1139"* %0, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey.1139", %"class.v8::internal::SeqSubStringKey.1139"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  br i1 %5, label %27, label %11

11:                                               ; preds = %2
  %12 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE36AllocateRawOneByteInternalizedStringEij(%"class.v8::internal::FactoryBase"* %6, i32 %8, i32 %10) #8
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, 11
  %15 = inttoptr i64 %14 to i8*
  %16 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey.1139", %"class.v8::internal::SeqSubStringKey.1139"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, 11
  %20 = inttoptr i64 %19 to i16*
  %21 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey.1139", %"class.v8::internal::SeqSubStringKey.1139"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i16, i16* %20, i64 %23
  %25 = load i32, i32* %7, align 4
  %26 = sext i32 %25 to i64
  tail call void @_ZN2v88internal9CopyCharsIthEEvPT0_PKT_m(i8* %15, i16* %24, i64 %26)
  br label %96

27:                                               ; preds = %2
  %28 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE36AllocateRawTwoByteInternalizedStringEij(%"class.v8::internal::FactoryBase"* %6, i32 %8, i32 %10) #8
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 11
  %31 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey.1139", %"class.v8::internal::SeqSubStringKey.1139"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 11
  %35 = inttoptr i64 %34 to i16*
  %36 = getelementptr inbounds %"class.v8::internal::SeqSubStringKey.1139", %"class.v8::internal::SeqSubStringKey.1139"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i16, i16* %35, i64 %38
  %40 = load i32, i32* %7, align 4
  %41 = sext i32 %40 to i64
  switch i64 %41, label %92 [
    i64 1, label %42
    i64 2, label %45
    i64 3, label %49
    i64 4, label %52
    i64 5, label %56
    i64 6, label %59
    i64 7, label %62
    i64 8, label %65
    i64 9, label %68
    i64 10, label %71
    i64 11, label %74
    i64 12, label %77
    i64 13, label %80
    i64 14, label %83
    i64 15, label %86
    i64 16, label %89
    i64 0, label %96
  ]

42:                                               ; preds = %27
  %43 = inttoptr i64 %30 to i16*
  %44 = load i16, i16* %39, align 2
  store i16 %44, i16* %43, align 2
  br label %96

45:                                               ; preds = %27
  %46 = bitcast i16* %39 to i32*
  %47 = inttoptr i64 %30 to i32*
  %48 = load i32, i32* %46, align 2
  store i32 %48, i32* %47, align 2
  br label %96

49:                                               ; preds = %27
  %50 = inttoptr i64 %30 to i8*
  %51 = bitcast i16* %39 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %50, i8* align 2 %51, i64 6, i1 false) #8
  br label %96

52:                                               ; preds = %27
  %53 = bitcast i16* %39 to i64*
  %54 = inttoptr i64 %30 to i64*
  %55 = load i64, i64* %53, align 2
  store i64 %55, i64* %54, align 2
  br label %96

56:                                               ; preds = %27
  %57 = inttoptr i64 %30 to i8*
  %58 = bitcast i16* %39 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %57, i8* align 2 %58, i64 10, i1 false) #8
  br label %96

59:                                               ; preds = %27
  %60 = inttoptr i64 %30 to i8*
  %61 = bitcast i16* %39 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %60, i8* align 2 %61, i64 12, i1 false) #8
  br label %96

62:                                               ; preds = %27
  %63 = inttoptr i64 %30 to i8*
  %64 = bitcast i16* %39 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %63, i8* align 2 %64, i64 14, i1 false) #8
  br label %96

65:                                               ; preds = %27
  %66 = inttoptr i64 %30 to i8*
  %67 = bitcast i16* %39 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %66, i8* align 2 %67, i64 16, i1 false) #8
  br label %96

68:                                               ; preds = %27
  %69 = inttoptr i64 %30 to i8*
  %70 = bitcast i16* %39 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %69, i8* align 2 %70, i64 18, i1 false) #8
  br label %96

71:                                               ; preds = %27
  %72 = inttoptr i64 %30 to i8*
  %73 = bitcast i16* %39 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %72, i8* align 2 %73, i64 20, i1 false) #8
  br label %96

74:                                               ; preds = %27
  %75 = inttoptr i64 %30 to i8*
  %76 = bitcast i16* %39 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %75, i8* align 2 %76, i64 22, i1 false) #8
  br label %96

77:                                               ; preds = %27
  %78 = inttoptr i64 %30 to i8*
  %79 = bitcast i16* %39 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %78, i8* align 2 %79, i64 24, i1 false) #8
  br label %96

80:                                               ; preds = %27
  %81 = inttoptr i64 %30 to i8*
  %82 = bitcast i16* %39 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %81, i8* align 2 %82, i64 26, i1 false) #8
  br label %96

83:                                               ; preds = %27
  %84 = inttoptr i64 %30 to i8*
  %85 = bitcast i16* %39 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %84, i8* align 2 %85, i64 28, i1 false) #8
  br label %96

86:                                               ; preds = %27
  %87 = inttoptr i64 %30 to i8*
  %88 = bitcast i16* %39 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %87, i8* align 2 %88, i64 30, i1 false) #8
  br label %96

89:                                               ; preds = %27
  %90 = inttoptr i64 %30 to i8*
  %91 = bitcast i16* %39 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %90, i8* align 2 %91, i64 32, i1 false) #8
  br label %96

92:                                               ; preds = %27
  %93 = shl nuw nsw i64 %41, 1
  %94 = inttoptr i64 %30 to i8*
  %95 = bitcast i16* %39 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %94, i8* align 2 %95, i64 %93, i1 false) #8
  br label %96

96:                                               ; preds = %92, %89, %86, %83, %80, %77, %74, %71, %68, %65, %62, %59, %56, %52, %49, %45, %42, %27, %11
  %97 = phi i64* [ %12, %11 ], [ %28, %27 ], [ %28, %42 ], [ %28, %45 ], [ %28, %49 ], [ %28, %52 ], [ %28, %56 ], [ %28, %59 ], [ %28, %62 ], [ %28, %65 ], [ %28, %68 ], [ %28, %71 ], [ %28, %74 ], [ %28, %77 ], [ %28, %80 ], [ %28, %83 ], [ %28, %86 ], [ %28, %89 ], [ %28, %92 ]
  ret i64* %97
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyIhEENS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"*, %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::SequentialStringKey"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"class.v8::internal::Vector.1135"*
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = alloca %"class.v8::internal::String", align 8
  %8 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %9 = load atomic i64, i64* %8 acquire, align 8
  %10 = inttoptr i64 %9 to %"class.v8::internal::StringTable::Data"*
  %11 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %2, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = lshr i32 %12, 2
  %14 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %10, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, 1073741823
  %17 = and i32 %16, %13
  %18 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 2
  %19 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %2, i64 0, i32 0, i32 2
  %20 = bitcast %"class.v8::internal::String"* %7 to i8*
  %21 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %2, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %2, i64 0, i32 1, i32 1
  br label %24

24:                                               ; preds = %54, %3
  %25 = phi i32 [ %17, %3 ], [ %59, %54 ]
  %26 = phi i32 [ 1, %3 ], [ %55, %54 ]
  %27 = zext i32 %25 to i64
  %28 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %28, i64 0, i32 0, i32 4
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %10, i64 0, i32 4, i64 %27
  %32 = load atomic i32, i32* %31 acquire, align 4
  %33 = and i64 %30, 4294967295
  %34 = icmp eq i64 %33, 0
  call void @llvm.assume(i1 %34) #8
  %35 = zext i32 %32 to i64
  %36 = or i64 %30, %35
  switch i32 %32, label %37 [
    i32 0, label %92
    i32 2, label %54
  ]

37:                                               ; preds = %24
  %38 = add i64 %36, 3
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = load i32, i32* %11, align 8
  %42 = xor i32 %41, %40
  %43 = icmp ult i32 %42, 4
  br i1 %43, label %44, label %54

44:                                               ; preds = %37
  %45 = add i64 %36, 7
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = load i32, i32* %19, align 4
  %49 = icmp eq i32 %47, %48
  br i1 %49, label %50, label %54

50:                                               ; preds = %44
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  store i64 %36, i64* %21, align 8
  %51 = load i8*, i8** %22, align 8
  %52 = load i64, i64* %23, align 8
  %53 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EhEEbNS0_6VectorIKT0_EEPNS0_12LocalIsolateE(%"class.v8::internal::String"* nonnull %7, i8* %51, i64 %52, %"class.v8::internal::LocalIsolate"* %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br i1 %53, label %60, label %54

54:                                               ; preds = %50, %44, %37, %24
  %55 = add i32 %26, 1
  %56 = load i32, i32* %14, align 8
  %57 = add i32 %26, %25
  %58 = add i32 %56, -1
  %59 = and i32 %58, %57
  br label %24

60:                                               ; preds = %50
  %61 = zext i32 %25 to i64
  %62 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %10, i64 0, i32 4, i64 %61
  %63 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %63, i64 0, i32 0, i32 4
  %65 = load i64, i64* %64, align 8
  %66 = load atomic i32, i32* %62 acquire, align 4
  %67 = and i64 %65, 4294967295
  %68 = icmp eq i64 %67, 0
  call void @llvm.assume(i1 %68) #8
  %69 = zext i32 %66 to i64
  %70 = or i64 %65, %69
  %71 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %60
  %75 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1
  %76 = call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %75, i64 %70) #8
  br label %210

77:                                               ; preds = %60
  %78 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %79 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %79, i64 0, i32 0, i32 0
  %81 = load i64*, i64** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %79, i64 0, i32 0, i32 1
  %83 = load i64*, i64** %82, align 8
  %84 = icmp eq i64* %81, %83
  br i1 %84, label %85, label %88

85:                                               ; preds = %77
  %86 = call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %79) #8
  %87 = load i64*, i64** %80, align 8
  br label %88

88:                                               ; preds = %85, %77
  %89 = phi i64* [ %87, %85 ], [ %81, %77 ]
  %90 = phi i64* [ %86, %85 ], [ %81, %77 ]
  %91 = getelementptr inbounds i64, i64* %89, i64 1
  store i64* %91, i64** %80, align 8
  store i64 %70, i64* %90, align 8
  br label %210

92:                                               ; preds = %24
  %93 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1055"*
  %94 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #8
  %95 = bitcast i8** %22 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8
  store <2 x i64> %96, <2 x i64>* %4, align 16
  %97 = load i32, i32* %11, align 8
  %98 = call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE28NewOneByteInternalizedStringERKNS0_6VectorIKhEEj(%"class.v8::internal::FactoryBase.1055"* %93, %"class.v8::internal::Vector.1135"* nonnull dereferenceable(16) %5, i32 %97) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #8
  %99 = getelementptr inbounds %"class.v8::internal::StringTable", %"class.v8::internal::StringTable"* %0, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %99) #8
  %100 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %100, i64 0, i32 0, i32 4
  %102 = load i64, i64* %101, align 8
  %103 = call %"class.v8::internal::StringTable::Data"* @_ZN2v88internal11StringTable14EnsureCapacityENS0_16PtrComprCageBaseEi(%"class.v8::internal::StringTable"* %0, i64 %102, i32 undef)
  %104 = load i32, i32* %11, align 8
  %105 = lshr i32 %104, 2
  %106 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %103, i64 0, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = add i32 %107, 1073741823
  %109 = and i32 %108, %105
  %110 = bitcast %"class.v8::internal::String"* %6 to i8*
  %111 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %112

112:                                              ; preds = %150, %92
  %113 = phi i64 [ -1, %92 ], [ %151, %150 ]
  %114 = phi i32 [ %109, %92 ], [ %156, %150 ]
  %115 = phi i32 [ 1, %92 ], [ %152, %150 ]
  %116 = zext i32 %114 to i64
  %117 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %117, i64 0, i32 0, i32 4
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %103, i64 0, i32 4, i64 %116
  %121 = load atomic i32, i32* %120 acquire, align 4
  %122 = and i64 %119, 4294967295
  %123 = icmp eq i64 %122, 0
  call void @llvm.assume(i1 %123) #8
  %124 = zext i32 %121 to i64
  %125 = or i64 %119, %124
  switch i32 %121, label %133 [
    i32 0, label %126
    i32 2, label %130
  ]

126:                                              ; preds = %112
  %127 = zext i32 %114 to i64
  %128 = icmp eq i64 %113, -1
  %129 = select i1 %128, i64 %127, i64 %113
  br label %159

130:                                              ; preds = %112
  %131 = icmp eq i64 %113, -1
  %132 = select i1 %131, i64 %116, i64 %113
  br label %150

133:                                              ; preds = %112
  %134 = add i64 %125, 3
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = load i32, i32* %11, align 8
  %138 = xor i32 %137, %136
  %139 = icmp ult i32 %138, 4
  br i1 %139, label %140, label %150

140:                                              ; preds = %133
  %141 = add i64 %125, 7
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = load i32, i32* %19, align 4
  %145 = icmp eq i32 %143, %144
  br i1 %145, label %146, label %150

146:                                              ; preds = %140
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #8
  store i64 %125, i64* %111, align 8
  %147 = load i8*, i8** %22, align 8
  %148 = load i64, i64* %23, align 8
  %149 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EhEEbNS0_6VectorIKT0_EEPNS0_12LocalIsolateE(%"class.v8::internal::String"* nonnull %6, i8* %147, i64 %148, %"class.v8::internal::LocalIsolate"* %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #8
  br i1 %149, label %157, label %150

150:                                              ; preds = %146, %140, %133, %130
  %151 = phi i64 [ %113, %146 ], [ %113, %133 ], [ %113, %140 ], [ %132, %130 ]
  %152 = add i32 %115, 1
  %153 = load i32, i32* %106, align 8
  %154 = add i32 %115, %114
  %155 = add i32 %153, -1
  %156 = and i32 %155, %154
  br label %112

157:                                              ; preds = %146
  %158 = zext i32 %114 to i64
  br label %159

159:                                              ; preds = %157, %126
  %160 = phi i64 [ %129, %126 ], [ %158, %157 ]
  %161 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %161, i64 0, i32 0, i32 4
  %163 = load i64, i64* %162, align 8
  %164 = and i64 %160, 4294967295
  %165 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %103, i64 0, i32 4, i64 %164
  %166 = load atomic i32, i32* %165 acquire, align 4
  %167 = and i64 %163, 4294967295
  %168 = icmp eq i64 %167, 0
  call void @llvm.assume(i1 %168) #8
  %169 = zext i32 %166 to i64
  %170 = or i64 %163, %169
  switch i32 %166, label %186 [
    i32 0, label %171
    i32 2, label %177
  ]

171:                                              ; preds = %159
  %172 = load i64, i64* %98, align 8
  %173 = trunc i64 %172 to i32
  store atomic volatile i32 %173, i32* %165 release, align 4
  %174 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %103, i64 0, i32 1
  %175 = load i32, i32* %174, align 8
  %176 = add nsw i32 %175, 1
  store i32 %176, i32* %174, align 8
  br label %208

177:                                              ; preds = %159
  %178 = load i64, i64* %98, align 8
  %179 = trunc i64 %178 to i32
  store atomic volatile i32 %179, i32* %165 release, align 4
  %180 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %103, i64 0, i32 1
  %181 = load i32, i32* %180, align 8
  %182 = add nsw i32 %181, 1
  store i32 %182, i32* %180, align 8
  %183 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %103, i64 0, i32 2
  %184 = load i32, i32* %183, align 4
  %185 = add nsw i32 %184, -1
  store i32 %185, i32* %183, align 4
  br label %208

186:                                              ; preds = %159
  %187 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 1
  %188 = load i8, i8* %187, align 8, !range !2
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %193, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1
  %192 = call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %191, i64 %170) #8
  br label %208

193:                                              ; preds = %186
  %194 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %195 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %194, align 8
  %196 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %195, i64 0, i32 0, i32 0
  %197 = load i64*, i64** %196, align 8
  %198 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %195, i64 0, i32 0, i32 1
  %199 = load i64*, i64** %198, align 8
  %200 = icmp eq i64* %197, %199
  br i1 %200, label %201, label %204

201:                                              ; preds = %193
  %202 = call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %195) #8
  %203 = load i64*, i64** %196, align 8
  br label %204

204:                                              ; preds = %201, %193
  %205 = phi i64* [ %203, %201 ], [ %197, %193 ]
  %206 = phi i64* [ %202, %201 ], [ %197, %193 ]
  %207 = getelementptr inbounds i64, i64* %205, i64 1
  store i64* %207, i64** %196, align 8
  store i64 %170, i64* %206, align 8
  br label %208

208:                                              ; preds = %204, %190, %177, %171
  %209 = phi i64* [ %98, %171 ], [ %98, %177 ], [ %192, %190 ], [ %206, %204 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %99) #8
  br label %210

210:                                              ; preds = %88, %74, %208
  %211 = phi i64* [ %209, %208 ], [ %76, %74 ], [ %90, %88 ]
  ret i64* %211
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyItEENS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"*, %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::SequentialStringKey.1136"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Vector.1137", align 8
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = inttoptr i64 %8 to %"class.v8::internal::StringTable::Data"*
  %10 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1136", %"class.v8::internal::SequentialStringKey.1136"* %2, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = lshr i32 %11, 2
  %13 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %9, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, 1073741823
  %16 = and i32 %15, %12
  %17 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1136", %"class.v8::internal::SequentialStringKey.1136"* %2, i64 0, i32 0, i32 2
  %19 = bitcast %"class.v8::internal::String"* %6 to i8*
  %20 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1136", %"class.v8::internal::SequentialStringKey.1136"* %2, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1136", %"class.v8::internal::SequentialStringKey.1136"* %2, i64 0, i32 1, i32 1
  br label %23

23:                                               ; preds = %53, %3
  %24 = phi i32 [ %16, %3 ], [ %58, %53 ]
  %25 = phi i32 [ 1, %3 ], [ %54, %53 ]
  %26 = zext i32 %24 to i64
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 0, i32 4
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %9, i64 0, i32 4, i64 %26
  %31 = load atomic i32, i32* %30 acquire, align 4
  %32 = and i64 %29, 4294967295
  %33 = icmp eq i64 %32, 0
  call void @llvm.assume(i1 %33) #8
  %34 = zext i32 %31 to i64
  %35 = or i64 %29, %34
  switch i32 %31, label %36 [
    i32 0, label %91
    i32 2, label %53
  ]

36:                                               ; preds = %23
  %37 = add i64 %35, 3
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* %10, align 8
  %41 = xor i32 %40, %39
  %42 = icmp ult i32 %41, 4
  br i1 %42, label %43, label %53

43:                                               ; preds = %36
  %44 = add i64 %35, 7
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* %18, align 4
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %49, label %53

49:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  store i64 %35, i64* %20, align 8
  %50 = load i16*, i16** %21, align 8
  %51 = load i64, i64* %22, align 8
  %52 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EtEEbNS0_6VectorIKT0_EEPNS0_12LocalIsolateE(%"class.v8::internal::String"* nonnull %6, i16* %50, i64 %51, %"class.v8::internal::LocalIsolate"* %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  br i1 %52, label %59, label %53

53:                                               ; preds = %49, %43, %36, %23
  %54 = add i32 %25, 1
  %55 = load i32, i32* %13, align 8
  %56 = add i32 %25, %24
  %57 = add i32 %55, -1
  %58 = and i32 %57, %56
  br label %23

59:                                               ; preds = %49
  %60 = zext i32 %24 to i64
  %61 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %9, i64 0, i32 4, i64 %60
  %62 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %62, i64 0, i32 0, i32 4
  %64 = load i64, i64* %63, align 8
  %65 = load atomic i32, i32* %61 acquire, align 4
  %66 = and i64 %64, 4294967295
  %67 = icmp eq i64 %66, 0
  call void @llvm.assume(i1 %67) #8
  %68 = zext i32 %65 to i64
  %69 = or i64 %64, %68
  %70 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 1
  %71 = load i8, i8* %70, align 8, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %59
  %74 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1
  %75 = call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %74, i64 %69) #8
  br label %213

76:                                               ; preds = %59
  %77 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %78 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %78, i64 0, i32 0, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %78, i64 0, i32 0, i32 1
  %82 = load i64*, i64** %81, align 8
  %83 = icmp eq i64* %80, %82
  br i1 %83, label %84, label %87

84:                                               ; preds = %76
  %85 = call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %78) #8
  %86 = load i64*, i64** %79, align 8
  br label %87

87:                                               ; preds = %84, %76
  %88 = phi i64* [ %86, %84 ], [ %80, %76 ]
  %89 = phi i64* [ %85, %84 ], [ %80, %76 ]
  %90 = getelementptr inbounds i64, i64* %88, i64 1
  store i64* %90, i64** %79, align 8
  store i64 %69, i64* %89, align 8
  br label %213

91:                                               ; preds = %23
  %92 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1055"*
  %93 = bitcast %"class.v8::internal::Vector.1137"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #8
  %94 = bitcast i16** %21 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = load i64, i64* %22, align 8
  %97 = and i64 %96, 9223372036854775807
  %98 = bitcast %"class.v8::internal::Vector.1137"* %4 to i64*
  store i64 %95, i64* %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Vector.1137", %"class.v8::internal::Vector.1137"* %4, i64 0, i32 1
  store i64 %97, i64* %99, align 8
  %100 = load i32, i32* %10, align 8
  %101 = call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE28NewTwoByteInternalizedStringERKNS0_6VectorIKtEEj(%"class.v8::internal::FactoryBase.1055"* %92, %"class.v8::internal::Vector.1137"* nonnull dereferenceable(16) %4, i32 %100) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #8
  %102 = getelementptr inbounds %"class.v8::internal::StringTable", %"class.v8::internal::StringTable"* %0, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %102) #8
  %103 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %103, i64 0, i32 0, i32 4
  %105 = load i64, i64* %104, align 8
  %106 = call %"class.v8::internal::StringTable::Data"* @_ZN2v88internal11StringTable14EnsureCapacityENS0_16PtrComprCageBaseEi(%"class.v8::internal::StringTable"* %0, i64 %105, i32 undef)
  %107 = load i32, i32* %10, align 8
  %108 = lshr i32 %107, 2
  %109 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %106, i64 0, i32 3
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1073741823
  %112 = and i32 %111, %108
  %113 = bitcast %"class.v8::internal::String"* %5 to i8*
  %114 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %115

115:                                              ; preds = %153, %91
  %116 = phi i64 [ -1, %91 ], [ %154, %153 ]
  %117 = phi i32 [ %112, %91 ], [ %159, %153 ]
  %118 = phi i32 [ 1, %91 ], [ %155, %153 ]
  %119 = zext i32 %117 to i64
  %120 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %120, i64 0, i32 0, i32 4
  %122 = load i64, i64* %121, align 8
  %123 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %106, i64 0, i32 4, i64 %119
  %124 = load atomic i32, i32* %123 acquire, align 4
  %125 = and i64 %122, 4294967295
  %126 = icmp eq i64 %125, 0
  call void @llvm.assume(i1 %126) #8
  %127 = zext i32 %124 to i64
  %128 = or i64 %122, %127
  switch i32 %124, label %136 [
    i32 0, label %129
    i32 2, label %133
  ]

129:                                              ; preds = %115
  %130 = zext i32 %117 to i64
  %131 = icmp eq i64 %116, -1
  %132 = select i1 %131, i64 %130, i64 %116
  br label %162

133:                                              ; preds = %115
  %134 = icmp eq i64 %116, -1
  %135 = select i1 %134, i64 %119, i64 %116
  br label %153

136:                                              ; preds = %115
  %137 = add i64 %128, 3
  %138 = inttoptr i64 %137 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = load i32, i32* %10, align 8
  %141 = xor i32 %140, %139
  %142 = icmp ult i32 %141, 4
  br i1 %142, label %143, label %153

143:                                              ; preds = %136
  %144 = add i64 %128, 7
  %145 = inttoptr i64 %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = load i32, i32* %18, align 4
  %148 = icmp eq i32 %146, %147
  br i1 %148, label %149, label %153

149:                                              ; preds = %143
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #8
  store i64 %128, i64* %114, align 8
  %150 = load i16*, i16** %21, align 8
  %151 = load i64, i64* %22, align 8
  %152 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EtEEbNS0_6VectorIKT0_EEPNS0_12LocalIsolateE(%"class.v8::internal::String"* nonnull %5, i16* %150, i64 %151, %"class.v8::internal::LocalIsolate"* %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #8
  br i1 %152, label %160, label %153

153:                                              ; preds = %149, %143, %136, %133
  %154 = phi i64 [ %116, %149 ], [ %116, %136 ], [ %116, %143 ], [ %135, %133 ]
  %155 = add i32 %118, 1
  %156 = load i32, i32* %109, align 8
  %157 = add i32 %118, %117
  %158 = add i32 %156, -1
  %159 = and i32 %158, %157
  br label %115

160:                                              ; preds = %149
  %161 = zext i32 %117 to i64
  br label %162

162:                                              ; preds = %160, %129
  %163 = phi i64 [ %132, %129 ], [ %161, %160 ]
  %164 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %164, i64 0, i32 0, i32 4
  %166 = load i64, i64* %165, align 8
  %167 = and i64 %163, 4294967295
  %168 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %106, i64 0, i32 4, i64 %167
  %169 = load atomic i32, i32* %168 acquire, align 4
  %170 = and i64 %166, 4294967295
  %171 = icmp eq i64 %170, 0
  call void @llvm.assume(i1 %171) #8
  %172 = zext i32 %169 to i64
  %173 = or i64 %166, %172
  switch i32 %169, label %189 [
    i32 0, label %174
    i32 2, label %180
  ]

174:                                              ; preds = %162
  %175 = load i64, i64* %101, align 8
  %176 = trunc i64 %175 to i32
  store atomic volatile i32 %176, i32* %168 release, align 4
  %177 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %106, i64 0, i32 1
  %178 = load i32, i32* %177, align 8
  %179 = add nsw i32 %178, 1
  store i32 %179, i32* %177, align 8
  br label %211

180:                                              ; preds = %162
  %181 = load i64, i64* %101, align 8
  %182 = trunc i64 %181 to i32
  store atomic volatile i32 %182, i32* %168 release, align 4
  %183 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %106, i64 0, i32 1
  %184 = load i32, i32* %183, align 8
  %185 = add nsw i32 %184, 1
  store i32 %185, i32* %183, align 8
  %186 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %106, i64 0, i32 2
  %187 = load i32, i32* %186, align 4
  %188 = add nsw i32 %187, -1
  store i32 %188, i32* %186, align 4
  br label %211

189:                                              ; preds = %162
  %190 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 1
  %191 = load i8, i8* %190, align 8, !range !2
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %196, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1
  %195 = call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %194, i64 %173) #8
  br label %211

196:                                              ; preds = %189
  %197 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %198 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %197, align 8
  %199 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %198, i64 0, i32 0, i32 0
  %200 = load i64*, i64** %199, align 8
  %201 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %198, i64 0, i32 0, i32 1
  %202 = load i64*, i64** %201, align 8
  %203 = icmp eq i64* %200, %202
  br i1 %203, label %204, label %207

204:                                              ; preds = %196
  %205 = call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %198) #8
  %206 = load i64*, i64** %199, align 8
  br label %207

207:                                              ; preds = %204, %196
  %208 = phi i64* [ %206, %204 ], [ %200, %196 ]
  %209 = phi i64* [ %205, %204 ], [ %200, %196 ]
  %210 = getelementptr inbounds i64, i64* %208, i64 1
  store i64* %210, i64** %199, align 8
  store i64 %173, i64* %209, align 8
  br label %211

211:                                              ; preds = %207, %193, %180, %174
  %212 = phi i64* [ %101, %174 ], [ %101, %180 ], [ %195, %193 ], [ %209, %207 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %102) #8
  br label %213

213:                                              ; preds = %87, %73, %211
  %214 = phi i64* [ %212, %211 ], [ %75, %73 ], [ %89, %87 ]
  ret i64* %214
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11StringTable9LookupKeyINS0_23StringTableInsertionKeyENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::StringTableInsertionKey"*) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = inttoptr i64 %5 to %"class.v8::internal::StringTable::Data"*
  %7 = getelementptr inbounds %"class.v8::internal::StringTableInsertionKey", %"class.v8::internal::StringTableInsertionKey"* %2, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = lshr i32 %8, 2
  %10 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %6, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, 1073741823
  %13 = and i32 %12, %9
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %15 = getelementptr inbounds %"class.v8::internal::StringTableInsertionKey", %"class.v8::internal::StringTableInsertionKey"* %2, i64 0, i32 0, i32 2
  br label %16

16:                                               ; preds = %42, %3
  %17 = phi i32 [ %13, %3 ], [ %47, %42 ]
  %18 = phi i32 [ 1, %3 ], [ %43, %42 ]
  %19 = zext i32 %17 to i64
  %20 = load i64, i64* %14, align 8
  %21 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %6, i64 0, i32 4, i64 %19
  %22 = load atomic i32, i32* %21 acquire, align 4
  %23 = and i64 %20, 4294967295
  %24 = icmp eq i64 %23, 0
  tail call void @llvm.assume(i1 %24) #8
  %25 = zext i32 %22 to i64
  %26 = or i64 %20, %25
  switch i32 %22, label %27 [
    i32 0, label %75
    i32 2, label %42
  ]

27:                                               ; preds = %16
  %28 = add i64 %26, 3
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = load i32, i32* %7, align 8
  %32 = xor i32 %31, %30
  %33 = icmp ult i32 %32, 4
  br i1 %33, label %34, label %42

34:                                               ; preds = %27
  %35 = add i64 %26, 7
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = load i32, i32* %15, align 4
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %34
  %41 = tail call zeroext i1 @_ZN2v88internal23StringTableInsertionKey7IsMatchEPNS0_7IsolateENS0_6StringE(%"class.v8::internal::StringTableInsertionKey"* %2, %"class.v8::internal::Isolate"* %1, i64 %26) #8
  br i1 %41, label %48, label %42

42:                                               ; preds = %40, %34, %27, %16
  %43 = add i32 %18, 1
  %44 = load i32, i32* %10, align 8
  %45 = add i32 %18, %17
  %46 = add i32 %44, -1
  %47 = and i32 %46, %45
  br label %16

48:                                               ; preds = %40
  %49 = zext i32 %17 to i64
  %50 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %6, i64 0, i32 4, i64 %49
  %51 = load i64, i64* %14, align 8
  %52 = load atomic i32, i32* %50 acquire, align 4
  %53 = and i64 %51, 4294967295
  %54 = icmp eq i64 %53, 0
  tail call void @llvm.assume(i1 %54) #8
  %55 = zext i32 %52 to i64
  %56 = or i64 %51, %55
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %58 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %57, align 8
  %59 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %48
  %61 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %58, i64 %56) #8
  br label %175

62:                                               ; preds = %48
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %64, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %62
  %69 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #8
  br label %70

70:                                               ; preds = %68, %62
  %71 = phi i64* [ %69, %68 ], [ %64, %62 ]
  %72 = ptrtoint i64* %71 to i64
  %73 = add i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  store i64* %74, i64** %63, align 8
  store i64 %56, i64* %71, align 8
  br label %175

75:                                               ; preds = %16
  %76 = tail call i64* @_ZN2v88internal23StringTableInsertionKey8AsHandleEPNS0_7IsolateE(%"class.v8::internal::StringTableInsertionKey"* %2, %"class.v8::internal::Isolate"* %1) #8
  %77 = getelementptr inbounds %"class.v8::internal::StringTable", %"class.v8::internal::StringTable"* %0, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %77) #8
  %78 = load i64, i64* %14, align 8
  %79 = tail call %"class.v8::internal::StringTable::Data"* @_ZN2v88internal11StringTable14EnsureCapacityENS0_16PtrComprCageBaseEi(%"class.v8::internal::StringTable"* %0, i64 %78, i32 undef)
  %80 = load i32, i32* %7, align 8
  %81 = lshr i32 %80, 2
  %82 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %79, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 1073741823
  br label %85

85:                                               ; preds = %121, %75
  %86 = phi i32 [ %125, %121 ], [ %81, %75 ]
  %87 = phi i32 [ %126, %121 ], [ %84, %75 ]
  %88 = phi i64 [ %122, %121 ], [ -1, %75 ]
  %89 = phi i32 [ %123, %121 ], [ 1, %75 ]
  %90 = and i32 %87, %86
  %91 = zext i32 %90 to i64
  %92 = load i64, i64* %14, align 8
  %93 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %79, i64 0, i32 4, i64 %91
  %94 = load atomic i32, i32* %93 acquire, align 4
  %95 = and i64 %92, 4294967295
  %96 = icmp eq i64 %95, 0
  tail call void @llvm.assume(i1 %96) #8
  %97 = zext i32 %94 to i64
  %98 = or i64 %92, %97
  switch i32 %94, label %106 [
    i32 0, label %99
    i32 2, label %103
  ]

99:                                               ; preds = %85
  %100 = zext i32 %90 to i64
  %101 = icmp eq i64 %88, -1
  %102 = select i1 %101, i64 %100, i64 %88
  br label %129

103:                                              ; preds = %85
  %104 = icmp eq i64 %88, -1
  %105 = select i1 %104, i64 %91, i64 %88
  br label %121

106:                                              ; preds = %85
  %107 = add i64 %98, 3
  %108 = inttoptr i64 %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = load i32, i32* %7, align 8
  %111 = xor i32 %110, %109
  %112 = icmp ult i32 %111, 4
  br i1 %112, label %113, label %121

113:                                              ; preds = %106
  %114 = add i64 %98, 7
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = load i32, i32* %15, align 4
  %118 = icmp eq i32 %116, %117
  br i1 %118, label %119, label %121

119:                                              ; preds = %113
  %120 = tail call zeroext i1 @_ZN2v88internal23StringTableInsertionKey7IsMatchEPNS0_7IsolateENS0_6StringE(%"class.v8::internal::StringTableInsertionKey"* %2, %"class.v8::internal::Isolate"* %1, i64 %98) #8
  br i1 %120, label %127, label %121

121:                                              ; preds = %119, %113, %106, %103
  %122 = phi i64 [ %88, %119 ], [ %88, %106 ], [ %88, %113 ], [ %105, %103 ]
  %123 = add i32 %89, 1
  %124 = load i32, i32* %82, align 8
  %125 = add i32 %89, %90
  %126 = add i32 %124, -1
  br label %85

127:                                              ; preds = %119
  %128 = zext i32 %90 to i64
  br label %129

129:                                              ; preds = %127, %99
  %130 = phi i64 [ %102, %99 ], [ %128, %127 ]
  %131 = load i64, i64* %14, align 8
  %132 = and i64 %130, 4294967295
  %133 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %79, i64 0, i32 4, i64 %132
  %134 = load atomic i32, i32* %133 acquire, align 4
  %135 = and i64 %131, 4294967295
  %136 = icmp eq i64 %135, 0
  tail call void @llvm.assume(i1 %136) #8
  %137 = zext i32 %134 to i64
  %138 = or i64 %131, %137
  switch i32 %134, label %154 [
    i32 0, label %139
    i32 2, label %145
  ]

139:                                              ; preds = %129
  %140 = load i64, i64* %76, align 8
  %141 = trunc i64 %140 to i32
  store atomic volatile i32 %141, i32* %133 release, align 4
  %142 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %79, i64 0, i32 1
  %143 = load i32, i32* %142, align 8
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %142, align 8
  br label %173

145:                                              ; preds = %129
  %146 = load i64, i64* %76, align 8
  %147 = trunc i64 %146 to i32
  store atomic volatile i32 %147, i32* %133 release, align 4
  %148 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %79, i64 0, i32 1
  %149 = load i32, i32* %148, align 8
  %150 = add nsw i32 %149, 1
  store i32 %150, i32* %148, align 8
  %151 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %79, i64 0, i32 2
  %152 = load i32, i32* %151, align 4
  %153 = add nsw i32 %152, -1
  store i32 %153, i32* %151, align 4
  br label %173

154:                                              ; preds = %129
  %155 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %156 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %155, align 8
  %157 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  %159 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %156, i64 %138) #8
  br label %173

160:                                              ; preds = %154
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %162 = load i64*, i64** %161, align 8
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %162, %164
  br i1 %165, label %166, label %168

166:                                              ; preds = %160
  %167 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #8
  br label %168

168:                                              ; preds = %166, %160
  %169 = phi i64* [ %167, %166 ], [ %162, %160 ]
  %170 = ptrtoint i64* %169 to i64
  %171 = add i64 %170, 8
  %172 = inttoptr i64 %171 to i64*
  store i64* %172, i64** %161, align 8
  store i64 %138, i64* %169, align 8
  br label %173

173:                                              ; preds = %168, %158, %145, %139
  %174 = phi i64* [ %76, %139 ], [ %76, %145 ], [ %159, %158 ], [ %169, %168 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %77) #8
  br label %175

175:                                              ; preds = %70, %60, %173
  %176 = phi i64* [ %174, %173 ], [ %61, %60 ], [ %71, %70 ]
  ret i64* %176
}

declare i64* @_ZN2v88internal23StringTableInsertionKey8AsHandleEPNS0_7IsolateE(%"class.v8::internal::StringTableInsertionKey"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal11StringTable4DatanwEmi(i64, i32) local_unnamed_addr #0 align 2 {
  %3 = add nsw i32 %1, -1
  %4 = sext i32 %3 to i64
  %5 = shl nsw i64 %4, 2
  %6 = add i64 %5, %0
  %7 = tail call i8* @_ZN2v88internal12AlignedAllocEmm(i64 %6, i64 8) #8
  ret i8* %7
}

declare i8* @_ZN2v88internal12AlignedAllocEmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11StringTable4DatadlEPv(i8*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* %0) #8
  ret void
}

declare void @_ZN2v88internal11AlignedFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal11StringTable4Data21GetCurrentMemoryUsageEv(%"class.v8::internal::StringTable::Data"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, -1
  %5 = sext i32 %4 to i64
  %6 = shl nsw i64 %5, 2
  %7 = add nsw i64 %6, 24
  %8 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::StringTable::Data"*, %"class.v8::internal::StringTable::Data"** %8, align 8
  %10 = icmp eq %"class.v8::internal::StringTable::Data"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = tail call i64 @_ZNK2v88internal11StringTable4Data21GetCurrentMemoryUsageEv(%"class.v8::internal::StringTable::Data"* nonnull %9)
  %13 = add i64 %12, %7
  ret i64 %13

14:                                               ; preds = %1
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11StringTable4DataC2Ei(%"class.v8::internal::StringTable::Data"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %0, i64 0, i32 3
  %4 = bitcast %"class.v8::internal::StringTable::Data"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  store i32 %1, i32* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %0, i64 0, i32 4, i64 0
  %6 = sext i32 %1 to i64
  %7 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 %6, i32* %5) #8, !srcloc !3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::StringTable::Data"* @_ZN2v88internal11StringTable4Data3NewEi(i32) local_unnamed_addr #0 align 2 {
  %2 = add nsw i32 %0, -1
  %3 = sext i32 %2 to i64
  %4 = shl nsw i64 %3, 2
  %5 = add nsw i64 %4, 24
  %6 = tail call i8* @_ZN2v88internal12AlignedAllocEmm(i64 %5, i64 8) #8
  %7 = bitcast i8* %6 to %"class.v8::internal::StringTable::Data"*
  %8 = getelementptr inbounds i8, i8* %6, i64 16
  %9 = bitcast i8* %8 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #8
  store i32 %0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 20
  %11 = bitcast i8* %10 to i32*
  %12 = sext i32 %0 to i64
  %13 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 %12, i32* %11) #8, !srcloc !3
  ret %"class.v8::internal::StringTable::Data"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::StringTable::Data"* @_ZN2v88internal11StringTable4Data6ResizeENS0_16PtrComprCageBaseENSt3__110unique_ptrIS2_NS4_14default_deleteIS2_EEEEi(i64, %"class.v8::internal::StringTable::Data"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::StringTable::Data"* %1, %"class.v8::internal::StringTable::Data"** %5, align 8
  %6 = add nsw i32 %2, -1
  %7 = sext i32 %6 to i64
  %8 = shl nsw i64 %7, 2
  %9 = add nsw i64 %8, 24
  %10 = tail call i8* @_ZN2v88internal12AlignedAllocEmm(i64 %9, i64 8) #8
  %11 = bitcast i8* %10 to %"class.v8::internal::StringTable::Data"*
  %12 = getelementptr inbounds i8, i8* %10, i64 16
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #8
  store i32 %2, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 20
  %15 = bitcast i8* %14 to i32*
  %16 = sext i32 %2 to i64
  %17 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 %16, i32* %15) #8, !srcloc !3
  %18 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %1, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = icmp eq i32 %19, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %3
  %23 = and i64 %0, 4294967295
  %24 = icmp eq i64 %23, 0
  tail call void @llvm.assume(i1 %24) #8
  br label %40

25:                                               ; preds = %71, %3
  %26 = phi %"class.v8::internal::StringTable::Data"* [ %1, %3 ], [ %74, %71 ]
  %27 = ptrtoint %"class.v8::internal::StringTable::Data"* %26 to i64
  %28 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %26, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds i8, i8* %10, i64 8
  %31 = bitcast i8* %30 to i32*
  store i32 %29, i32* %31, align 8
  store %"class.v8::internal::StringTable::Data"* null, %"class.v8::internal::StringTable::Data"** %5, align 8
  %32 = bitcast i8* %10 to %"class.v8::internal::StringTable::Data"**
  %33 = load %"class.v8::internal::StringTable::Data"*, %"class.v8::internal::StringTable::Data"** %32, align 8
  %34 = bitcast i8* %10 to i64*
  store i64 %27, i64* %34, align 8
  %35 = icmp eq %"class.v8::internal::StringTable::Data"* %33, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %33, i64 0, i32 0
  tail call void @_ZNSt3__110unique_ptrIN2v88internal11StringTable4DataENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %37) #8
  %38 = bitcast %"class.v8::internal::StringTable::Data"* %33 to i8*
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* nonnull %38) #8
  br label %39

39:                                               ; preds = %25, %36
  call void @_ZNSt3__110unique_ptrIN2v88internal11StringTable4DataENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %4) #8
  ret %"class.v8::internal::StringTable::Data"* %11

40:                                               ; preds = %22, %71
  %41 = phi %"class.v8::internal::StringTable::Data"* [ %1, %22 ], [ %74, %71 ]
  %42 = phi i64 [ 0, %22 ], [ %72, %71 ]
  %43 = and i64 %42, 4294967295
  %44 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %41, i64 0, i32 4, i64 %43
  %45 = load atomic i32, i32* %44 acquire, align 4
  switch i32 %45, label %46 [
    i32 0, label %71
    i32 2, label %71
  ]

46:                                               ; preds = %40
  %47 = zext i32 %45 to i64
  %48 = or i64 %47, %0
  %49 = add i64 %48, 3
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = lshr i32 %51, 2
  %53 = load i32, i32* %13, align 8
  %54 = add i32 %53, 1073741823
  br label %55

55:                                               ; preds = %63, %46
  %56 = phi i32 [ %66, %63 ], [ %52, %46 ]
  %57 = phi i32 [ %67, %63 ], [ %54, %46 ]
  %58 = phi i32 [ %64, %63 ], [ 1, %46 ]
  %59 = and i32 %57, %56
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %11, i64 0, i32 4, i64 %60
  %62 = load atomic i32, i32* %61 acquire, align 4
  switch i32 %62, label %63 [
    i32 0, label %68
    i32 2, label %68
  ]

63:                                               ; preds = %55
  %64 = add i32 %58, 1
  %65 = load i32, i32* %13, align 8
  %66 = add i32 %59, %58
  %67 = add i32 %65, -1
  br label %55

68:                                               ; preds = %55, %55
  %69 = zext i32 %59 to i64
  %70 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %11, i64 0, i32 4, i64 %69
  store atomic volatile i32 %45, i32* %70 release, align 4
  br label %71

71:                                               ; preds = %40, %40, %68
  %72 = add i64 %42, 1
  %73 = icmp eq i64 %72, %20
  %74 = load %"class.v8::internal::StringTable::Data"*, %"class.v8::internal::StringTable::Data"** %5, align 8
  br i1 %73, label %25, label %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal11StringTable4Data18FindInsertionEntryENS0_16PtrComprCageBaseEj(%"class.v8::internal::StringTable::Data"* nocapture readonly, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  %7 = and i32 %6, %2
  %8 = and i64 %1, 4294967295
  %9 = icmp eq i64 %8, 0
  tail call void @llvm.assume(i1 %9) #8
  br label %10

10:                                               ; preds = %18, %3
  %11 = phi i32 [ 1, %3 ], [ %19, %18 ]
  %12 = phi i32 [ %7, %3 ], [ %23, %18 ]
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %0, i64 0, i32 4, i64 %13
  %15 = load atomic i32, i32* %14 acquire, align 4
  switch i32 %15, label %18 [
    i32 0, label %16
    i32 2, label %16
  ]

16:                                               ; preds = %10, %10
  %17 = zext i32 %12 to i64
  ret i64 %17

18:                                               ; preds = %10
  %19 = add i32 %11, 1
  %20 = load i32, i32* %4, align 8
  %21 = add i32 %12, %11
  %22 = add i32 %20, -1
  %23 = and i32 %22, %21
  br label %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN2v88internal11StringTable4DataENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::StringTable::Data"*, %"class.v8::internal::StringTable::Data"** %2, align 8
  store %"class.v8::internal::StringTable::Data"* null, %"class.v8::internal::StringTable::Data"** %2, align 8
  %4 = icmp eq %"class.v8::internal::StringTable::Data"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %3, i64 0, i32 0
  tail call void @_ZNSt3__110unique_ptrIN2v88internal11StringTable4DataENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %6) #8
  %7 = bitcast %"class.v8::internal::StringTable::Data"* %3 to i8*
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* nonnull %7) #8
  ret void

8:                                                ; preds = %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11StringTable4Data15IterateElementsEPNS0_11RootVisitorE(%"class.v8::internal::StringTable::Data"*, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %0, i64 0, i32 4, i64 0
  %4 = ptrtoint i32* %3 to i64
  %5 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %0, i64 0, i32 4, i64 %7
  %9 = ptrtoint i32* %8 to i64
  %10 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)***
  %11 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %11, i64 4
  %13 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %12, align 8
  tail call void %13(%"class.v8::internal::RootVisitor"* %1, i32 0, i8* null, i64 %4, i64 %9) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal11StringTable4Data5PrintENS0_16PtrComprCageBaseE(%"class.v8::internal::StringTable::Data"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::locale", align 8
  %6 = alloca %"class.v8::internal::OFStream", align 8
  %7 = alloca %"struct.v8::internal::Brief", align 8
  %8 = bitcast %"class.v8::internal::OFStream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %8) #8
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC1EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %6, %struct._IO_FILE* %9) #8
  %10 = bitcast %"class.v8::internal::OFStream"* %6 to %"class.std::__1::basic_ostream"*
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i64 13) #8
  %12 = bitcast %"class.std::__1::basic_ostream"* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr i8, i8* %13, i64 -24
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::basic_ostream"* %11 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %16
  %19 = bitcast %"class.std::__1::locale"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = bitcast i8* %18 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %5, %"class.std::__1::ios_base"* %20) #8
  %21 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %5, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %22 = bitcast %"class.std::__1::locale::facet"* %21 to %"class.std::__1::ctype"*
  %23 = bitcast %"class.std::__1::locale::facet"* %21 to i8 (%"class.std::__1::ctype"*, i8)***
  %24 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %23, align 8
  %25 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %24, i64 7
  %26 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %25, align 8
  %27 = call signext i8 %26(%"class.std::__1::ctype"* %22, i8 signext 10) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %11, i8 signext %27) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %11) #8
  %30 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = sext i32 %31 to i64
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %2
  %35 = bitcast %"struct.v8::internal::Brief"* %7 to i8*
  %36 = and i64 %1, 4294967295
  %37 = icmp eq i64 %36, 0
  %38 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %7, i64 0, i32 0
  %39 = bitcast %"class.std::__1::locale"* %3 to i8*
  br label %65

40:                                               ; preds = %65, %2
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #8
  %42 = bitcast %"class.std::__1::basic_ostream"* %41 to i8**
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr i8, i8* %43, i64 -24
  %45 = bitcast i8* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::basic_ostream"* %41 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #8
  %50 = bitcast i8* %48 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %50) #8
  %51 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %52 = bitcast %"class.std::__1::locale::facet"* %51 to %"class.std::__1::ctype"*
  %53 = bitcast %"class.std::__1::locale::facet"* %51 to i8 (%"class.std::__1::ctype"*, i8)***
  %54 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %53, align 8
  %55 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %54, i64 7
  %56 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %55, align 8
  %57 = call signext i8 %56(%"class.std::__1::ctype"* %52, i8 signext 10) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #8
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %41, i8 signext %57) #8
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %41) #8
  %60 = bitcast %"class.v8::internal::OFStream"* %6 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %6, i64 0, i32 2
  %62 = bitcast %"class.std::__1::basic_ios.base"* %61 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %6, i64 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %63) #8
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %10, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #8
  %64 = bitcast %"class.std::__1::basic_ios.base"* %61 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %64) #8
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %8) #8
  ret void

65:                                               ; preds = %34, %65
  %66 = phi i64 [ 0, %34 ], [ %94, %65 ]
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i64 2) #8
  %68 = trunc i64 %66 to i32
  %69 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %67, i32 %68) #8
  %70 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %69, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %71 = and i64 %66, 4294967295
  %72 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %0, i64 0, i32 4, i64 %71
  %73 = load atomic i32, i32* %72 acquire, align 4
  call void @llvm.assume(i1 %37) #8
  %74 = zext i32 %73 to i64
  %75 = or i64 %74, %1
  store i64 %75, i64* %38, align 8
  %76 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %70, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %7) #8
  %77 = bitcast %"class.std::__1::basic_ostream"* %76 to i8**
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr i8, i8* %78, i64 -24
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.std::__1::basic_ostream"* %76 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 %81
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  %84 = bitcast i8* %83 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %3, %"class.std::__1::ios_base"* %84) #8
  %85 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %86 = bitcast %"class.std::__1::locale::facet"* %85 to %"class.std::__1::ctype"*
  %87 = bitcast %"class.std::__1::locale::facet"* %85 to i8 (%"class.std::__1::ctype"*, i8)***
  %88 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %87, align 8
  %89 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %88, i64 7
  %90 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %89, align 8
  %91 = call signext i8 %90(%"class.std::__1::ctype"* %86, i8 signext 10) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  %92 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %76, i8 signext %91) #8
  %93 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %76) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  %94 = add i64 %66, 1
  %95 = icmp eq i64 %94, %32
  br i1 %95, label %40, label %65
}

declare void @_ZN2v88internal8OFStreamC1EP8_IO_FILE(%"class.v8::internal::OFStream"*, %struct._IO_FILE*) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"struct.v8::internal::Brief"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #8
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #8
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11StringTableC2EPNS0_7IsolateE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = tail call i8* @_ZN2v88internal12AlignedAllocEmm(i64 8212, i64 8) #8
  %6 = getelementptr inbounds i8, i8* %5, i64 16
  %7 = bitcast i8* %6 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #8
  store i32 2048, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 20
  %9 = bitcast i8* %8 to i32*
  %10 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 2048, i32* %9) #8, !srcloc !3
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::StringTable::Data"* null, %"class.v8::internal::StringTable::Data"** %11, align 8
  %12 = bitcast %"class.v8::internal::StringTable"* %0 to i8**
  store i8* %5, i8** %12, align 8
  call void @_ZNSt3__110unique_ptrIN2v88internal11StringTable4DataENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  %13 = getelementptr inbounds %"class.v8::internal::StringTable", %"class.v8::internal::StringTable"* %0, i64 0, i32 1
  call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %13) #8
  ret void
}

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11StringTableD2Ev(%"class.v8::internal::StringTable"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %3 = load atomic i64, i64* %2 seq_cst, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = inttoptr i64 %3 to %"class.v8::internal::StringTable::Data"*
  %7 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::StringTable::Data"*, %"class.v8::internal::StringTable::Data"** %7, align 8
  store %"class.v8::internal::StringTable::Data"* null, %"class.v8::internal::StringTable::Data"** %7, align 8
  %9 = icmp eq %"class.v8::internal::StringTable::Data"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %8, i64 0, i32 0
  tail call void @_ZNSt3__110unique_ptrIN2v88internal11StringTable4DataENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %11) #8
  %12 = bitcast %"class.v8::internal::StringTable::Data"* %8 to i8*
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* nonnull %12) #8
  br label %13

13:                                               ; preds = %5, %10
  %14 = inttoptr i64 %3 to i8*
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* %14) #8
  br label %15

15:                                               ; preds = %13, %1
  %16 = getelementptr inbounds %"class.v8::internal::StringTable", %"class.v8::internal::StringTable"* %0, i64 0, i32 1
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %16) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"*) unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11StringTable8CapacityEv(%"class.v8::internal::StringTable"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %3 = load atomic i64, i64* %2 acquire, align 8
  %4 = inttoptr i64 %3 to %"class.v8::internal::StringTable::Data"*
  %5 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11StringTable16NumberOfElementsEv(%"class.v8::internal::StringTable"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringTable", %"class.v8::internal::StringTable"* %0, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2) #8
  %3 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = inttoptr i64 %4 to %"class.v8::internal::StringTable::Data"*
  %6 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #8
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca %"class.v8::internal::InternalizedStringKey", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %7 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %1, i64* %2, i8 zeroext 0)
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = icmp ult i16 %17, 32
  br i1 %18, label %265, label %19

19:                                               ; preds = %3
  %20 = bitcast %"class.v8::internal::InternalizedStringKey"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #8
  %21 = ptrtoint i64* %7 to i64
  %22 = add i64 %8, 7
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.v8::internal::InternalizedStringKey", %"class.v8::internal::InternalizedStringKey"* %5, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::InternalizedStringKey", %"class.v8::internal::InternalizedStringKey"* %5, i64 0, i32 0, i32 1
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::InternalizedStringKey", %"class.v8::internal::InternalizedStringKey"* %5, i64 0, i32 0, i32 2
  store i32 %24, i32* %27, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal21InternalizedStringKeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %28 = getelementptr inbounds %"class.v8::internal::InternalizedStringKey", %"class.v8::internal::InternalizedStringKey"* %5, i64 0, i32 1
  %29 = bitcast %"class.v8::internal::Handle"* %28 to i64*
  store i64 %21, i64* %29, align 8
  %30 = load i64, i64* %7, align 8
  %31 = add i64 %30, 3
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %19
  %37 = bitcast %"class.v8::internal::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  %38 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %30, i64* %38, align 8
  %39 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %40 = load i64, i64* %7, align 8
  %41 = add i64 %40, 3
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  br label %44

44:                                               ; preds = %19, %36
  %45 = phi i32 [ %33, %19 ], [ %43, %36 ]
  store i32 %45, i32* %26, align 8
  %46 = call i64* @_ZN2v88internal11StringTable9LookupKeyINS0_21InternalizedStringKeyENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"* %0, %"class.v8::internal::Isolate"* %1, %"class.v8::internal::InternalizedStringKey"* nonnull %5)
  %47 = load i8, i8* @_ZN2v88internal17FLAG_thin_stringsE, align 1, !range !2
  %48 = icmp eq i8 %47, 0
  %49 = load i64, i64* %7, align 8
  %50 = and i64 %49, -4294967296
  %51 = add i64 %49, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %50, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  br i1 %48, label %66, label %59

59:                                               ; preds = %44
  %60 = icmp ult i16 %58, 32
  br i1 %60, label %264, label %61

61:                                               ; preds = %59
  %62 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #8
  %63 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %49, i64* %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %6, i64 0, i32 0
  %65 = load i64, i64* %46, align 8
  call void @_ZN2v88internal6String8MakeThinEPNS0_7IsolateES1_(%"class.v8::internal::String"* nonnull %64, %"class.v8::internal::Isolate"* %1, i64 %65) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #8
  br label %264

66:                                               ; preds = %44
  %67 = icmp ult i16 %58, 64
  br i1 %67, label %68, label %145

68:                                               ; preds = %66
  %69 = load atomic i32, i32* %52 monotonic, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %50, %70
  %72 = add i64 %71, 7
  %73 = inttoptr i64 %72 to i16*
  %74 = load atomic i16, i16* %73 monotonic, align 2
  %75 = and i16 %74, 7
  %76 = icmp eq i16 %75, 1
  br i1 %76, label %77, label %145

77:                                               ; preds = %68
  %78 = load i64, i64* %46, align 8
  %79 = add i64 %49, 11
  %80 = inttoptr i64 %79 to i32*
  %81 = trunc i64 %78 to i32
  store atomic volatile i32 %81, i32* %80 monotonic, align 4
  %82 = and i64 %78, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %95, label %84

84:                                               ; preds = %77
  %85 = and i64 %49, -262144
  %86 = or i64 %85, 8
  %87 = inttoptr i64 %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = and i64 %88, 262144
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %84
  %92 = or i64 %85, 16
  %93 = inttoptr i64 %92 to %"class.v8::internal::Heap"**
  %94 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %93, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %94, i64 %49, i64 %79, i64 %78) #8
  br label %95

95:                                               ; preds = %91, %84, %77
  %96 = and i64 %78, -262144
  %97 = or i64 %96, 8
  %98 = inttoptr i64 %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 24
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %110, label %102

102:                                              ; preds = %95
  %103 = and i64 %49, -262144
  %104 = or i64 %103, 8
  %105 = inttoptr i64 %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = and i64 %106, 24
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %102
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %49, i64 %79, i64 %78) #8
  br label %110

110:                                              ; preds = %95, %102, %109
  %111 = load i64, i64* %7, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 9
  %113 = load i64, i64* %112, align 8
  %114 = add i64 %111, 15
  %115 = inttoptr i64 %114 to i32*
  %116 = trunc i64 %113 to i32
  store atomic volatile i32 %116, i32* %115 monotonic, align 4
  %117 = and i64 %113, 1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %130, label %119

119:                                              ; preds = %110
  %120 = and i64 %111, -262144
  %121 = or i64 %120, 8
  %122 = inttoptr i64 %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = and i64 %123, 262144
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %130, label %126

126:                                              ; preds = %119
  %127 = or i64 %120, 16
  %128 = inttoptr i64 %127 to %"class.v8::internal::Heap"**
  %129 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %128, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %129, i64 %111, i64 %114, i64 %113) #8
  br label %130

130:                                              ; preds = %126, %119, %110
  %131 = and i64 %113, -262144
  %132 = or i64 %131, 8
  %133 = inttoptr i64 %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = and i64 %134, 24
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %264, label %137

137:                                              ; preds = %130
  %138 = and i64 %111, -262144
  %139 = or i64 %138, 8
  %140 = inttoptr i64 %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = and i64 %141, 24
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %264

144:                                              ; preds = %137
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %111, i64 %114, i64 %113) #8
  br label %264

145:                                              ; preds = %66, %68
  %146 = load atomic i32, i32* %52 monotonic, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %50, %147
  %149 = add i64 %148, 7
  %150 = inttoptr i64 %149 to i16*
  %151 = load atomic i16, i16* %150 monotonic, align 2
  %152 = icmp ult i16 %151, 64
  br i1 %152, label %153, label %264

153:                                              ; preds = %145
  %154 = load atomic i32, i32* %52 monotonic, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %50, %155
  %157 = add i64 %156, 7
  %158 = inttoptr i64 %157 to i16*
  %159 = load atomic i16, i16* %158 monotonic, align 2
  %160 = and i16 %159, 7
  %161 = icmp eq i16 %160, 3
  br i1 %161, label %162, label %264

162:                                              ; preds = %153
  %163 = load i64, i64* %46, align 8
  %164 = and i64 %163, -4294967296
  %165 = add i64 %163, -1
  %166 = inttoptr i64 %165 to i32*
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = zext i32 %167 to i64
  %169 = or i64 %164, %168
  %170 = add i64 %169, 7
  %171 = inttoptr i64 %170 to i16*
  %172 = load atomic i16, i16* %171 monotonic, align 2
  %173 = and i16 %172, 8
  %174 = icmp eq i16 %173, 0
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 79
  %176 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 80
  %177 = select i1 %174, i64* %176, i64* %175
  %178 = load i64, i64* %177, align 8
  %179 = trunc i64 %178 to i32
  store atomic volatile i32 %179, i32* %52 monotonic, align 4
  %180 = icmp eq i32 %179, 0
  %181 = and i64 %178, 1
  %182 = icmp eq i64 %181, 0
  %183 = or i1 %180, %182
  br i1 %183, label %195, label %184

184:                                              ; preds = %162
  %185 = and i64 %49, -262144
  %186 = or i64 %185, 8
  %187 = inttoptr i64 %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = and i64 %188, 262144
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %195, label %191

191:                                              ; preds = %184
  %192 = or i64 %185, 16
  %193 = inttoptr i64 %192 to %"class.v8::internal::Heap"**
  %194 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %193, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %194, i64 %49, i64 0, i64 %178) #8
  br label %195

195:                                              ; preds = %162, %184, %191
  %196 = load i64, i64* %7, align 8
  %197 = load i64, i64* %46, align 8
  %198 = add i64 %196, 11
  %199 = inttoptr i64 %198 to i32*
  %200 = trunc i64 %197 to i32
  store atomic volatile i32 %200, i32* %199 monotonic, align 4
  %201 = and i64 %197, 1
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %214, label %203

203:                                              ; preds = %195
  %204 = and i64 %196, -262144
  %205 = or i64 %204, 8
  %206 = inttoptr i64 %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = and i64 %207, 262144
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %214, label %210

210:                                              ; preds = %203
  %211 = or i64 %204, 16
  %212 = inttoptr i64 %211 to %"class.v8::internal::Heap"**
  %213 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %212, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %213, i64 %196, i64 %198, i64 %197) #8
  br label %214

214:                                              ; preds = %210, %203, %195
  %215 = and i64 %197, -262144
  %216 = or i64 %215, 8
  %217 = inttoptr i64 %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = and i64 %218, 24
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %229, label %221

221:                                              ; preds = %214
  %222 = and i64 %196, -262144
  %223 = or i64 %222, 8
  %224 = inttoptr i64 %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = and i64 %225, 24
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %221
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %196, i64 %198, i64 %197) #8
  br label %229

229:                                              ; preds = %214, %221, %228
  %230 = load i64, i64* %7, align 8
  %231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 9
  %232 = load i64, i64* %231, align 8
  %233 = add i64 %230, 15
  %234 = inttoptr i64 %233 to i32*
  %235 = trunc i64 %232 to i32
  store atomic volatile i32 %235, i32* %234 monotonic, align 4
  %236 = and i64 %232, 1
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %249, label %238

238:                                              ; preds = %229
  %239 = and i64 %230, -262144
  %240 = or i64 %239, 8
  %241 = inttoptr i64 %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = and i64 %242, 262144
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %249, label %245

245:                                              ; preds = %238
  %246 = or i64 %239, 16
  %247 = inttoptr i64 %246 to %"class.v8::internal::Heap"**
  %248 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %247, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %248, i64 %230, i64 %233, i64 %232) #8
  br label %249

249:                                              ; preds = %245, %238, %229
  %250 = and i64 %232, -262144
  %251 = or i64 %250, 8
  %252 = inttoptr i64 %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = and i64 %253, 24
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %264, label %256

256:                                              ; preds = %249
  %257 = and i64 %230, -262144
  %258 = or i64 %257, 8
  %259 = inttoptr i64 %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = and i64 %260, 24
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %256
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %230, i64 %233, i64 %232) #8
  br label %264

264:                                              ; preds = %145, %263, %256, %249, %144, %137, %130, %59, %153, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #8
  br label %265

265:                                              ; preds = %3, %264
  %266 = phi i64* [ %46, %264 ], [ %7, %3 ]
  ret i64* %266
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #6 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %15, label %72

15:                                               ; preds = %3
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = and i16 %21, 7
  %23 = icmp eq i16 %22, 1
  br i1 %23, label %24, label %72

24:                                               ; preds = %15
  %25 = load atomic i32, i32* %7 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %5, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = and i16 %30, 7
  %32 = icmp eq i16 %31, 1
  br i1 %32, label %33, label %43

33:                                               ; preds = %24
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %5, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %70

43:                                               ; preds = %24, %33
  %44 = load i64, i64* %1, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, 11
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %52 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %51, align 8
  %53 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %43
  %55 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %52, i64 %50) #8
  %56 = load i64, i64* %55, align 8
  br label %72

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %59, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %65

65:                                               ; preds = %63, %57
  %66 = phi i64* [ %64, %63 ], [ %59, %57 ]
  %67 = ptrtoint i64* %66 to i64
  %68 = add i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  store i64* %69, i64** %58, align 8
  store i64 %50, i64* %66, align 8
  br label %72

70:                                               ; preds = %33
  %71 = tail call i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext %2) #8
  br label %118

72:                                               ; preds = %65, %54, %3, %15
  %73 = phi i64 [ %4, %15 ], [ %4, %3 ], [ %50, %65 ], [ %56, %54 ]
  %74 = phi i64* [ %1, %15 ], [ %1, %3 ], [ %66, %65 ], [ %55, %54 ]
  %75 = and i64 %73, -4294967296
  %76 = add i64 %73, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp ult i16 %83, 64
  br i1 %84, label %85, label %118

85:                                               ; preds = %72
  %86 = load atomic i32, i32* %77 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %75, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 7
  %93 = icmp eq i16 %92, 5
  br i1 %93, label %94, label %118

94:                                               ; preds = %85
  %95 = add i64 %73, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %75, %98
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %94
  %104 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %99) #8
  br label %118

105:                                              ; preds = %94
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i64* [ %112, %111 ], [ %107, %105 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %106, align 8
  store i64 %99, i64* %114, align 8
  br label %118

118:                                              ; preds = %72, %85, %103, %113, %70
  %119 = phi i64* [ %71, %70 ], [ %74, %85 ], [ %104, %103 ], [ %114, %113 ], [ %74, %72 ]
  ret i64* %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal11StringTable9LookupKeyINS0_21InternalizedStringKeyENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::InternalizedStringKey"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %6 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %7 = load atomic i64, i64* %6 acquire, align 8
  %8 = inttoptr i64 %7 to %"class.v8::internal::StringTable::Data"*
  %9 = getelementptr inbounds %"class.v8::internal::InternalizedStringKey", %"class.v8::internal::InternalizedStringKey"* %2, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = lshr i32 %10, 2
  %12 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %8, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, 1073741823
  %15 = and i32 %14, %11
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %17 = getelementptr inbounds %"class.v8::internal::InternalizedStringKey", %"class.v8::internal::InternalizedStringKey"* %2, i64 0, i32 0, i32 2
  %18 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5 to i8*
  %19 = getelementptr inbounds %"class.v8::internal::InternalizedStringKey", %"class.v8::internal::InternalizedStringKey"* %2, i64 0, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0
  br label %22

22:                                               ; preds = %50, %3
  %23 = phi i32 [ %15, %3 ], [ %55, %50 ]
  %24 = phi i32 [ 1, %3 ], [ %51, %50 ]
  %25 = zext i32 %23 to i64
  %26 = load i64, i64* %16, align 8
  %27 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %8, i64 0, i32 4, i64 %25
  %28 = load atomic i32, i32* %27 acquire, align 4
  %29 = and i64 %26, 4294967295
  %30 = icmp eq i64 %29, 0
  call void @llvm.assume(i1 %30) #8
  %31 = zext i32 %28 to i64
  %32 = or i64 %26, %31
  switch i32 %28, label %33 [
    i32 0, label %83
    i32 2, label %50
  ]

33:                                               ; preds = %22
  %34 = add i64 %32, 3
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* %9, align 8
  %38 = xor i32 %37, %36
  %39 = icmp ult i32 %38, 4
  br i1 %39, label %40, label %50

40:                                               ; preds = %33
  %41 = add i64 %32, 7
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = load i32, i32* %17, align 4
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %46, label %50

46:                                               ; preds = %40
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %47 = load i64*, i64** %19, align 8
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %20, align 8
  %49 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %21, i64 %32) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br i1 %49, label %56, label %50

50:                                               ; preds = %46, %40, %33, %22
  %51 = add i32 %24, 1
  %52 = load i32, i32* %12, align 8
  %53 = add i32 %24, %23
  %54 = add i32 %52, -1
  %55 = and i32 %54, %53
  br label %22

56:                                               ; preds = %46
  %57 = zext i32 %23 to i64
  %58 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %8, i64 0, i32 4, i64 %57
  %59 = load i64, i64* %16, align 8
  %60 = load atomic i32, i32* %58 acquire, align 4
  %61 = and i64 %59, 4294967295
  %62 = icmp eq i64 %61, 0
  call void @llvm.assume(i1 %62) #8
  %63 = zext i32 %60 to i64
  %64 = or i64 %59, %63
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %66 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %65, align 8
  %67 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %56
  %69 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %66, i64 %64) #8
  br label %188

70:                                               ; preds = %56
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = icmp eq i64* %72, %74
  br i1 %75, label %76, label %78

76:                                               ; preds = %70
  %77 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #8
  br label %78

78:                                               ; preds = %76, %70
  %79 = phi i64* [ %77, %76 ], [ %72, %70 ]
  %80 = ptrtoint i64* %79 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  store i64* %82, i64** %71, align 8
  store i64 %64, i64* %79, align 8
  br label %188

83:                                               ; preds = %22
  %84 = call i64* @_ZN2v88internal21InternalizedStringKey8AsHandleEPNS0_7IsolateE(%"class.v8::internal::InternalizedStringKey"* %2, %"class.v8::internal::Isolate"* %1)
  %85 = getelementptr inbounds %"class.v8::internal::StringTable", %"class.v8::internal::StringTable"* %0, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %85) #8
  %86 = load i64, i64* %16, align 8
  %87 = call %"class.v8::internal::StringTable::Data"* @_ZN2v88internal11StringTable14EnsureCapacityENS0_16PtrComprCageBaseEi(%"class.v8::internal::StringTable"* %0, i64 %86, i32 undef)
  %88 = load i32, i32* %9, align 8
  %89 = lshr i32 %88, 2
  %90 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %87, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, 1073741823
  %93 = and i32 %92, %89
  %94 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4 to i8*
  %95 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0
  br label %97

97:                                               ; preds = %133, %83
  %98 = phi i64 [ -1, %83 ], [ %134, %133 ]
  %99 = phi i32 [ %93, %83 ], [ %139, %133 ]
  %100 = phi i32 [ 1, %83 ], [ %135, %133 ]
  %101 = zext i32 %99 to i64
  %102 = load i64, i64* %16, align 8
  %103 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %87, i64 0, i32 4, i64 %101
  %104 = load atomic i32, i32* %103 acquire, align 4
  %105 = and i64 %102, 4294967295
  %106 = icmp eq i64 %105, 0
  call void @llvm.assume(i1 %106) #8
  %107 = zext i32 %104 to i64
  %108 = or i64 %102, %107
  switch i32 %104, label %116 [
    i32 0, label %109
    i32 2, label %113
  ]

109:                                              ; preds = %97
  %110 = zext i32 %99 to i64
  %111 = icmp eq i64 %98, -1
  %112 = select i1 %111, i64 %110, i64 %98
  br label %142

113:                                              ; preds = %97
  %114 = icmp eq i64 %98, -1
  %115 = select i1 %114, i64 %101, i64 %98
  br label %133

116:                                              ; preds = %97
  %117 = add i64 %108, 3
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = load i32, i32* %9, align 8
  %121 = xor i32 %120, %119
  %122 = icmp ult i32 %121, 4
  br i1 %122, label %123, label %133

123:                                              ; preds = %116
  %124 = add i64 %108, 7
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = load i32, i32* %17, align 4
  %128 = icmp eq i32 %126, %127
  br i1 %128, label %129, label %133

129:                                              ; preds = %123
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #8
  %130 = load i64*, i64** %19, align 8
  %131 = load i64, i64* %130, align 8
  store i64 %131, i64* %95, align 8
  %132 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %96, i64 %108) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #8
  br i1 %132, label %140, label %133

133:                                              ; preds = %129, %123, %116, %113
  %134 = phi i64 [ %98, %129 ], [ %98, %116 ], [ %98, %123 ], [ %115, %113 ]
  %135 = add i32 %100, 1
  %136 = load i32, i32* %90, align 8
  %137 = add i32 %100, %99
  %138 = add i32 %136, -1
  %139 = and i32 %138, %137
  br label %97

140:                                              ; preds = %129
  %141 = zext i32 %99 to i64
  br label %142

142:                                              ; preds = %140, %109
  %143 = phi i64 [ %112, %109 ], [ %141, %140 ]
  %144 = load i64, i64* %16, align 8
  %145 = and i64 %143, 4294967295
  %146 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %87, i64 0, i32 4, i64 %145
  %147 = load atomic i32, i32* %146 acquire, align 4
  %148 = and i64 %144, 4294967295
  %149 = icmp eq i64 %148, 0
  call void @llvm.assume(i1 %149) #8
  %150 = zext i32 %147 to i64
  %151 = or i64 %144, %150
  switch i32 %147, label %167 [
    i32 0, label %152
    i32 2, label %158
  ]

152:                                              ; preds = %142
  %153 = load i64, i64* %84, align 8
  %154 = trunc i64 %153 to i32
  store atomic volatile i32 %154, i32* %146 release, align 4
  %155 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %87, i64 0, i32 1
  %156 = load i32, i32* %155, align 8
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %155, align 8
  br label %186

158:                                              ; preds = %142
  %159 = load i64, i64* %84, align 8
  %160 = trunc i64 %159 to i32
  store atomic volatile i32 %160, i32* %146 release, align 4
  %161 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %87, i64 0, i32 1
  %162 = load i32, i32* %161, align 8
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %161, align 8
  %164 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %87, i64 0, i32 2
  %165 = load i32, i32* %164, align 4
  %166 = add nsw i32 %165, -1
  store i32 %166, i32* %164, align 4
  br label %186

167:                                              ; preds = %142
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %169 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %168, align 8
  %170 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %167
  %172 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %169, i64 %151) #8
  br label %186

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %175 = load i64*, i64** %174, align 8
  %176 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %177 = load i64*, i64** %176, align 8
  %178 = icmp eq i64* %175, %177
  br i1 %178, label %179, label %181

179:                                              ; preds = %173
  %180 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #8
  br label %181

181:                                              ; preds = %179, %173
  %182 = phi i64* [ %180, %179 ], [ %175, %173 ]
  %183 = ptrtoint i64* %182 to i64
  %184 = add i64 %183, 8
  %185 = inttoptr i64 %184 to i64*
  store i64* %185, i64** %174, align 8
  store i64 %151, i64* %182, align 8
  br label %186

186:                                              ; preds = %181, %171, %158, %152
  %187 = phi i64* [ %84, %152 ], [ %84, %158 ], [ %172, %171 ], [ %182, %181 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %85) #8
  br label %188

188:                                              ; preds = %78, %68, %186
  %189 = phi i64* [ %187, %186 ], [ %69, %68 ], [ %79, %78 ]
  ret i64* %189
}

declare void @_ZN2v88internal6String8MakeThinEPNS0_7IsolateES1_(%"class.v8::internal::String"*, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11StringTable32TryStringToIndexOrLookupExistingEPNS0_7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #0 align 2 {
  %3 = and i64 %1, -4294967296
  %4 = add i64 %1, -1
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = zext i32 %6 to i64
  %8 = or i64 %3, %7
  %9 = add i64 %8, 7
  %10 = inttoptr i64 %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = icmp ult i16 %11, 64
  br i1 %12, label %13, label %33

13:                                               ; preds = %2
  %14 = load atomic i32, i32* %5 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %3, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = and i16 %19, 7
  %21 = icmp eq i16 %20, 3
  br i1 %21, label %22, label %33

22:                                               ; preds = %13
  %23 = add i64 %1, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = ashr i32 %25, 1
  %27 = sext i32 %26 to i64
  %28 = add i64 %1, 11
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %3, %31
  br label %75

33:                                               ; preds = %2, %13
  %34 = load atomic i32, i32* %5 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %3, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = icmp ult i16 %39, 64
  br i1 %40, label %41, label %75

41:                                               ; preds = %33
  %42 = load atomic i32, i32* %5 monotonic, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %3, %43
  %45 = add i64 %44, 7
  %46 = inttoptr i64 %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = and i16 %47, 7
  %49 = icmp eq i16 %48, 1
  br i1 %49, label %50, label %75

50:                                               ; preds = %41
  %51 = load atomic i32, i32* %5 acquire, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %3, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = and i16 %56, 7
  %58 = icmp eq i16 %57, 1
  br i1 %58, label %59, label %69

59:                                               ; preds = %50
  %60 = add i64 %1, 15
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %3, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %75

69:                                               ; preds = %50, %59
  %70 = add i64 %1, 11
  %71 = inttoptr i64 %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %3, %73
  br label %75

75:                                               ; preds = %33, %41, %59, %69, %22
  %76 = phi i64 [ %32, %22 ], [ %74, %69 ], [ %1, %59 ], [ %1, %41 ], [ %1, %33 ]
  %77 = phi i64 [ %27, %22 ], [ 0, %69 ], [ 0, %59 ], [ 0, %41 ], [ 0, %33 ]
  %78 = and i64 %76, -4294967296
  %79 = add i64 %76, -1
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %78, %82
  %84 = add i64 %83, 7
  %85 = inttoptr i64 %84 to i16*
  %86 = load atomic i16, i16* %85 monotonic, align 2
  %87 = icmp ult i16 %86, 64
  br i1 %87, label %88, label %113

88:                                               ; preds = %75
  %89 = load atomic i32, i32* %80 monotonic, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %78, %90
  %92 = add i64 %91, 7
  %93 = inttoptr i64 %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = and i16 %94, 7
  %96 = icmp eq i16 %95, 5
  br i1 %96, label %97, label %113

97:                                               ; preds = %88
  %98 = add i64 %76, 11
  %99 = inttoptr i64 %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i64
  %102 = or i64 %78, %101
  %103 = add i64 %1, 7
  %104 = inttoptr i64 %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = add i64 %102, 7
  %107 = inttoptr i64 %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %105, %108
  br i1 %109, label %128, label %110

110:                                              ; preds = %97
  %111 = add i64 %102, -1
  %112 = inttoptr i64 %111 to i32*
  br label %113

113:                                              ; preds = %110, %75, %88
  %114 = phi i32* [ %112, %110 ], [ %80, %75 ], [ %80, %88 ]
  %115 = phi i64 [ %102, %110 ], [ %76, %75 ], [ %76, %88 ]
  %116 = load atomic i32, i32* %114 monotonic, align 4
  %117 = zext i32 %116 to i64
  %118 = or i64 %78, %117
  %119 = add i64 %118, 7
  %120 = inttoptr i64 %119 to i16*
  %121 = load atomic i16, i16* %120 monotonic, align 2
  %122 = and i16 %121, 8
  %123 = icmp eq i16 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %113
  %125 = tail call i64 @_ZN2v88internal11StringTable4Data32TryStringToIndexOrLookupExistingIhEEmPNS0_7IsolateENS0_6StringES6_m(%"class.v8::internal::Isolate"* %0, i64 %1, i64 %115, i64 %77)
  br label %128

126:                                              ; preds = %113
  %127 = tail call i64 @_ZN2v88internal11StringTable4Data32TryStringToIndexOrLookupExistingItEEmPNS0_7IsolateENS0_6StringES6_m(%"class.v8::internal::Isolate"* %0, i64 %1, i64 %115, i64 %77)
  br label %128

128:                                              ; preds = %97, %126, %124
  %129 = phi i64 [ %125, %124 ], [ %127, %126 ], [ %102, %97 ]
  ret i64 %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal11StringTable4Data32TryStringToIndexOrLookupExistingIhEEmPNS0_7IsolateENS0_6StringES6_m(%"class.v8::internal::Isolate"*, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 134
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = add i64 %1, 7
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %2, -4294967296
  %17 = add i64 %2, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %16, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp ult i16 %24, 64
  br i1 %25, label %26, label %38

26:                                               ; preds = %4
  %27 = load atomic i32, i32* %18 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %16, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = and i16 %32, 7
  %34 = icmp eq i16 %33, 1
  br i1 %34, label %35, label %38

35:                                               ; preds = %26
  %36 = sext i32 %15 to i64
  %37 = tail call i8* @_Znam(i64 %36) #15
  tail call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64 %2, i8* nonnull %37, i32 0, i32 %15) #8
  br label %84

38:                                               ; preds = %4, %26
  %39 = load atomic i32, i32* %18 acquire, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %16, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = and i16 %44, 7
  %46 = icmp eq i16 %45, 2
  br i1 %46, label %47, label %77

47:                                               ; preds = %38
  %48 = load atomic i32, i32* %18 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %16, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = and i16 %53, 16
  %55 = icmp eq i16 %54, 0
  %56 = add i64 %2, 11
  %57 = inttoptr i64 %56 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %55, label %70, label %58

58:                                               ; preds = %47
  %59 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %57, align 1
  %60 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %59, i64 0, i32 0
  %61 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %59 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %62 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %62, i64 2
  %64 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.v8::String::ExternalStringResourceBase"* %60) #8
  br i1 %65, label %66, label %70

66:                                               ; preds = %58
  %67 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %57, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %67) #8
  %68 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %67, i64 0, i32 1
  %69 = load i8*, i8** %68, align 8
  br label %80

70:                                               ; preds = %58, %47
  %71 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %57, align 1
  %72 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %71 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %73 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %72, align 8
  %74 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %73, i64 6
  %75 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %74, align 8
  %76 = tail call i8* %75(%"class.v8::String::ExternalOneByteStringResource"* %71) #8
  br label %80

77:                                               ; preds = %38
  %78 = add i64 %2, 11
  %79 = inttoptr i64 %78 to i8*
  br label %80

80:                                               ; preds = %66, %70, %77
  %81 = phi i8* [ %79, %77 ], [ %69, %66 ], [ %76, %70 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 %3
  %83 = sext i32 %15 to i64
  br label %84

84:                                               ; preds = %80, %35
  %85 = phi i64 [ %83, %80 ], [ %36, %35 ]
  %86 = phi i8* [ null, %80 ], [ %37, %35 ]
  %87 = phi i8* [ %82, %80 ], [ %37, %35 ]
  %88 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* %87, i32 %15, i64 %12) #8
  %89 = and i32 %88, -536870910
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %95

91:                                               ; preds = %84
  %92 = lshr i32 %88, 1
  %93 = and i32 %92, 33554430
  %94 = zext i32 %93 to i64
  br label %154

95:                                               ; preds = %84
  %96 = and i32 %88, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %154, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %100 = bitcast %"class.v8::internal::StringTable"** %99 to i64**
  %101 = load i64*, i64** %100, align 8
  %102 = load atomic i64, i64* %101 acquire, align 8
  %103 = inttoptr i64 %102 to %"class.v8::internal::StringTable::Data"*
  %104 = lshr i32 %88, 2
  %105 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %103, i64 0, i32 3
  %106 = load i32, i32* %105, align 8
  %107 = add i32 %106, 1073741823
  %108 = and i32 %107, %104
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %110 = bitcast %"class.v8::internal::String"* %5 to i8*
  %111 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %112

112:                                              ; preds = %136, %98
  %113 = phi i32 [ %108, %98 ], [ %141, %136 ]
  %114 = phi i32 [ 1, %98 ], [ %137, %136 ]
  %115 = zext i32 %113 to i64
  %116 = load i64, i64* %109, align 8
  %117 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %103, i64 0, i32 4, i64 %115
  %118 = load atomic i32, i32* %117 acquire, align 4
  %119 = and i64 %116, 4294967295
  %120 = icmp eq i64 %119, 0
  call void @llvm.assume(i1 %120) #8
  %121 = zext i32 %118 to i64
  %122 = or i64 %116, %121
  switch i32 %118, label %123 [
    i32 0, label %154
    i32 2, label %136
  ]

123:                                              ; preds = %112
  %124 = add i64 %122, 3
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = xor i32 %126, %88
  %128 = icmp ult i32 %127, 4
  br i1 %128, label %129, label %136

129:                                              ; preds = %123
  %130 = add i64 %122, 7
  %131 = inttoptr i64 %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, %15
  br i1 %133, label %134, label %136

134:                                              ; preds = %129
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #8
  store i64 %122, i64* %111, align 8
  %135 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EhEEbNS0_6VectorIKT0_EEPNS0_7IsolateE(%"class.v8::internal::String"* nonnull %5, i8* %87, i64 %85, %"class.v8::internal::Isolate"* %0) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #8
  br i1 %135, label %142, label %136

136:                                              ; preds = %134, %129, %123, %112
  %137 = add i32 %114, 1
  %138 = load i32, i32* %105, align 8
  %139 = add i32 %114, %113
  %140 = add i32 %138, -1
  %141 = and i32 %140, %139
  br label %112

142:                                              ; preds = %134
  %143 = zext i32 %113 to i64
  %144 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %103, i64 0, i32 4, i64 %143
  %145 = load i64, i64* %109, align 8
  %146 = load atomic i32, i32* %144 acquire, align 4
  %147 = and i64 %145, 4294967295
  %148 = icmp eq i64 %147, 0
  call void @llvm.assume(i1 %148) #8
  %149 = zext i32 %146 to i64
  %150 = or i64 %145, %149
  %151 = load i8, i8* @_ZN2v88internal17FLAG_thin_stringsE, align 1, !range !2
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %154, label %153

153:                                              ; preds = %142
  call void @_ZN2v88internal6String8MakeThinEPNS0_7IsolateES1_(%"class.v8::internal::String"* nonnull %6, %"class.v8::internal::Isolate"* %0, i64 %150) #8
  br label %154

154:                                              ; preds = %112, %142, %153, %95, %91
  %155 = phi i64 [ %94, %91 ], [ -4, %95 ], [ %150, %142 ], [ %150, %153 ], [ -2, %112 ]
  %156 = icmp eq i8* %86, null
  br i1 %156, label %158, label %157

157:                                              ; preds = %154
  call void @_ZdaPv(i8* nonnull %86) #15
  br label %158

158:                                              ; preds = %154, %157
  ret i64 %155
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal11StringTable4Data32TryStringToIndexOrLookupExistingItEEmPNS0_7IsolateENS0_6StringES6_m(%"class.v8::internal::Isolate"*, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 134
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = add i64 %1, 7
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %2, -4294967296
  %17 = add i64 %2, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %16, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp ult i16 %24, 64
  br i1 %25, label %26, label %43

26:                                               ; preds = %4
  %27 = load atomic i32, i32* %18 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %16, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = and i16 %32, 7
  %34 = icmp eq i16 %33, 1
  br i1 %34, label %35, label %43

35:                                               ; preds = %26
  %36 = sext i32 %15 to i64
  %37 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %36, i64 2)
  %38 = extractvalue { i64, i1 } %37, 1
  %39 = extractvalue { i64, i1 } %37, 0
  %40 = select i1 %38, i64 -1, i64 %39
  %41 = tail call i8* @_Znam(i64 %40) #15
  %42 = bitcast i8* %41 to i16*
  tail call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64 %2, i16* nonnull %42, i32 0, i32 %15) #8
  br label %89

43:                                               ; preds = %4, %26
  %44 = load atomic i32, i32* %18 acquire, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %16, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = and i16 %49, 7
  %51 = icmp eq i16 %50, 2
  br i1 %51, label %52, label %82

52:                                               ; preds = %43
  %53 = load atomic i32, i32* %18 monotonic, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %16, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = and i16 %58, 16
  %60 = icmp eq i16 %59, 0
  %61 = add i64 %2, 11
  %62 = inttoptr i64 %61 to %"class.v8::String::ExternalStringResource"**
  br i1 %60, label %75, label %63

63:                                               ; preds = %52
  %64 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %62, align 1
  %65 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %64, i64 0, i32 0
  %66 = bitcast %"class.v8::String::ExternalStringResource"* %64 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %67 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %66, align 8
  %68 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %67, i64 2
  %69 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %68, align 8
  %70 = tail call zeroext i1 %69(%"class.v8::String::ExternalStringResourceBase"* %65) #8
  br i1 %70, label %71, label %75

71:                                               ; preds = %63
  %72 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %62, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %72) #8
  %73 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %72, i64 0, i32 1
  %74 = load i16*, i16** %73, align 8
  br label %85

75:                                               ; preds = %63, %52
  %76 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %62, align 1
  %77 = bitcast %"class.v8::String::ExternalStringResource"* %76 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %78 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %77, align 8
  %79 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %78, i64 6
  %80 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %79, align 8
  %81 = tail call i16* %80(%"class.v8::String::ExternalStringResource"* %76) #8
  br label %85

82:                                               ; preds = %43
  %83 = add i64 %2, 11
  %84 = inttoptr i64 %83 to i16*
  br label %85

85:                                               ; preds = %71, %75, %82
  %86 = phi i16* [ %84, %82 ], [ %74, %71 ], [ %81, %75 ]
  %87 = getelementptr inbounds i16, i16* %86, i64 %3
  %88 = sext i32 %15 to i64
  br label %89

89:                                               ; preds = %85, %35
  %90 = phi i64 [ %88, %85 ], [ %36, %35 ]
  %91 = phi i8* [ null, %85 ], [ %41, %35 ]
  %92 = phi i16* [ null, %85 ], [ %42, %35 ]
  %93 = phi i16* [ %87, %85 ], [ %42, %35 ]
  %94 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im(i16* %93, i32 %15, i64 %12) #8
  %95 = and i32 %94, -536870910
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %89
  %98 = lshr i32 %94, 1
  %99 = and i32 %98, 33554430
  %100 = zext i32 %99 to i64
  br label %160

101:                                              ; preds = %89
  %102 = and i32 %94, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %160, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %106 = bitcast %"class.v8::internal::StringTable"** %105 to i64**
  %107 = load i64*, i64** %106, align 8
  %108 = load atomic i64, i64* %107 acquire, align 8
  %109 = inttoptr i64 %108 to %"class.v8::internal::StringTable::Data"*
  %110 = lshr i32 %94, 2
  %111 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %109, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, 1073741823
  %114 = and i32 %113, %110
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %116 = bitcast %"class.v8::internal::String"* %5 to i8*
  %117 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %118

118:                                              ; preds = %142, %104
  %119 = phi i32 [ %114, %104 ], [ %147, %142 ]
  %120 = phi i32 [ 1, %104 ], [ %143, %142 ]
  %121 = zext i32 %119 to i64
  %122 = load i64, i64* %115, align 8
  %123 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %109, i64 0, i32 4, i64 %121
  %124 = load atomic i32, i32* %123 acquire, align 4
  %125 = and i64 %122, 4294967295
  %126 = icmp eq i64 %125, 0
  call void @llvm.assume(i1 %126) #8
  %127 = zext i32 %124 to i64
  %128 = or i64 %122, %127
  switch i32 %124, label %129 [
    i32 0, label %160
    i32 2, label %142
  ]

129:                                              ; preds = %118
  %130 = add i64 %128, 3
  %131 = inttoptr i64 %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = xor i32 %132, %94
  %134 = icmp ult i32 %133, 4
  br i1 %134, label %135, label %142

135:                                              ; preds = %129
  %136 = add i64 %128, 7
  %137 = inttoptr i64 %136 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, %15
  br i1 %139, label %140, label %142

140:                                              ; preds = %135
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #8
  store i64 %128, i64* %117, align 8
  %141 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EtEEbNS0_6VectorIKT0_EEPNS0_7IsolateE(%"class.v8::internal::String"* nonnull %5, i16* %93, i64 %90, %"class.v8::internal::Isolate"* %0) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #8
  br i1 %141, label %148, label %142

142:                                              ; preds = %140, %135, %129, %118
  %143 = add i32 %120, 1
  %144 = load i32, i32* %111, align 8
  %145 = add i32 %120, %119
  %146 = add i32 %144, -1
  %147 = and i32 %146, %145
  br label %118

148:                                              ; preds = %140
  %149 = zext i32 %119 to i64
  %150 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %109, i64 0, i32 4, i64 %149
  %151 = load i64, i64* %115, align 8
  %152 = load atomic i32, i32* %150 acquire, align 4
  %153 = and i64 %151, 4294967295
  %154 = icmp eq i64 %153, 0
  call void @llvm.assume(i1 %154) #8
  %155 = zext i32 %152 to i64
  %156 = or i64 %151, %155
  %157 = load i8, i8* @_ZN2v88internal17FLAG_thin_stringsE, align 1, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %160, label %159

159:                                              ; preds = %148
  call void @_ZN2v88internal6String8MakeThinEPNS0_7IsolateES1_(%"class.v8::internal::String"* nonnull %6, %"class.v8::internal::Isolate"* %0, i64 %156) #8
  br label %160

160:                                              ; preds = %118, %148, %159, %101, %97
  %161 = phi i64 [ %100, %97 ], [ -4, %101 ], [ %156, %148 ], [ %156, %159 ], [ -2, %118 ]
  %162 = icmp eq i16* %92, null
  br i1 %162, label %164, label %163

163:                                              ; preds = %160
  call void @_ZdaPv(i8* %91) #15
  br label %164

164:                                              ; preds = %160, %163
  ret i64 %161
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal11StringTable5PrintENS0_16PtrComprCageBaseE(%"class.v8::internal::StringTable"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %4 = load atomic i64, i64* %3 acquire, align 8
  %5 = inttoptr i64 %4 to %"class.v8::internal::StringTable::Data"*
  tail call void @_ZNK2v88internal11StringTable4Data5PrintENS0_16PtrComprCageBaseE(%"class.v8::internal::StringTable::Data"* %5, i64 %1)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal11StringTable21GetCurrentMemoryUsageEv(%"class.v8::internal::StringTable"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %3 = load atomic i64, i64* %2 acquire, align 8
  %4 = inttoptr i64 %3 to %"class.v8::internal::StringTable::Data"*
  %5 = tail call i64 @_ZNK2v88internal11StringTable4Data21GetCurrentMemoryUsageEv(%"class.v8::internal::StringTable::Data"* %4)
  %6 = add i64 %5, 48
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11StringTable15IterateElementsEPNS0_11RootVisitorE(%"class.v8::internal::StringTable"* nocapture readonly, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = inttoptr i64 %4 to %"class.v8::internal::StringTable::Data"*
  %6 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %5, i64 0, i32 4, i64 0
  %7 = ptrtoint i32* %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %5, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %5, i64 0, i32 4, i64 %10
  %12 = ptrtoint i32* %11 to i64
  %13 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)***
  %14 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %14, i64 4
  %16 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %15, align 8
  tail call void %16(%"class.v8::internal::RootVisitor"* %1, i32 0, i8* null, i64 %7, i64 %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11StringTable11DropOldDataEv(%"class.v8::internal::StringTable"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = inttoptr i64 %3 to %"class.v8::internal::StringTable::Data"*
  %5 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::StringTable::Data"*, %"class.v8::internal::StringTable::Data"** %5, align 8
  store %"class.v8::internal::StringTable::Data"* null, %"class.v8::internal::StringTable::Data"** %5, align 8
  %7 = icmp eq %"class.v8::internal::StringTable::Data"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %6, i64 0, i32 0
  tail call void @_ZNSt3__110unique_ptrIN2v88internal11StringTable4DataENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %9) #8
  %10 = bitcast %"class.v8::internal::StringTable::Data"* %6 to i8*
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* nonnull %10) #8
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal11StringTable21NotifyElementsRemovedEi(%"class.v8::internal::StringTable"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = bitcast %"class.v8::internal::StringTable"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = inttoptr i64 %4 to %"class.v8::internal::StringTable::Data"*
  %6 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = sub nsw i32 %7, %1
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.v8::internal::StringTable::Data", %"class.v8::internal::StringTable::Data"* %5, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, %1
  store i32 %11, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #8

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #8
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #8
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #8
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #8
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #8
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #8
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #8
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #8
  tail call void @_ZdlPv(i8* %8) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal21InternalizedStringKeyD0Ev(%"class.v8::internal::InternalizedStringKey"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.v8::internal::InternalizedStringKey"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

declare i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"*) local_unnamed_addr #2

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #8
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #8
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #8
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #8
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #15
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #8
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #8
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #8
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #2

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal21InternalizedStringKey8AsHandleEPNS0_7IsolateE(%"class.v8::internal::InternalizedStringKey"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %4 = getelementptr inbounds %"class.v8::internal::InternalizedStringKey", %"class.v8::internal::InternalizedStringKey"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = tail call i64* @_ZN2v88internal7Factory30InternalizedStringMapForStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::Factory"* %3, i64* %5) #8
  %7 = icmp eq i64* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::InternalizedStringKey", %"class.v8::internal::InternalizedStringKey"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %9, i64 0, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %11, align 8
  %13 = load i64, i64* %6, align 8
  %14 = add i64 %12, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = trunc i64 %13 to i32
  store atomic volatile i32 %16, i32* %15 monotonic, align 4
  %17 = bitcast %"class.v8::internal::Handle"* %9 to i64*
  %18 = load i64, i64* %17, align 8
  br label %61

19:                                               ; preds = %2
  %20 = load i8, i8* @_ZN2v88internal17FLAG_thin_stringsE, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %50, label %22

22:                                               ; preds = %19
  %23 = load i64*, i64** %4, align 8
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, -4294967296
  %26 = add i64 %24, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 acquire, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = zext i16 %33 to i32
  %35 = and i32 %34, 15
  switch i32 %35, label %50 [
    i32 10, label %36
    i32 2, label %43
  ]

36:                                               ; preds = %22
  %37 = and i32 %34, 16
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %50

39:                                               ; preds = %36
  %40 = load i64*, i64** %4, align 8
  %41 = tail call i64* @_ZN2v88internal7Factory25InternalizeExternalStringINS0_21ExternalOneByteStringEEENS0_6HandleIT_EENS4_INS0_6StringEEE(%"class.v8::internal::Factory"* %3, i64* %40) #8
  %42 = ptrtoint i64* %41 to i64
  br label %61

43:                                               ; preds = %22
  %44 = and i32 %34, 16
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %43
  %47 = load i64*, i64** %4, align 8
  %48 = tail call i64* @_ZN2v88internal7Factory25InternalizeExternalStringINS0_21ExternalTwoByteStringEEENS0_6HandleIT_EENS4_INS0_6StringEEE(%"class.v8::internal::Factory"* %3, i64* %47) #8
  %49 = ptrtoint i64* %48 to i64
  br label %61

50:                                               ; preds = %36, %43, %22, %19
  %51 = load i64*, i64** %4, align 8
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = add i64 %52, 3
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = tail call i64* @_ZN2v88internal7Factory25NewInternalizedStringImplENS0_6HandleINS0_6StringEEEij(%"class.v8::internal::Factory"* %3, i64* %51, i32 %55, i32 %58) #8
  %60 = ptrtoint i64* %59 to i64
  br label %61

61:                                               ; preds = %39, %46, %50, %8
  %62 = phi i64 [ %18, %8 ], [ %60, %50 ], [ %49, %46 ], [ %42, %39 ]
  %63 = inttoptr i64 %62 to i64*
  ret i64* %63
}

declare zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory30InternalizedStringMapForStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory25InternalizeExternalStringINS0_21ExternalOneByteStringEEENS0_6HandleIT_EENS4_INS0_6StringEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory25InternalizeExternalStringINS0_21ExternalTwoByteStringEEENS0_6HandleIT_EENS4_INS0_6StringEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory25NewInternalizedStringImplENS0_6HandleINS0_6StringEEEij(%"class.v8::internal::Factory"*, i64*, i32, i32) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EhEEbNS0_6VectorIKT0_EEPNS0_7IsolateE(%"class.v8::internal::String"*, i8*, i64, %"class.v8::internal::Isolate"*) local_unnamed_addr #6 comdat align 2 {
  %5 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #8, !alias.scope !4
  %9 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %7, 4294967295
  %12 = icmp eq i64 %11, 0
  tail call void @llvm.assume(i1 %12) #8
  br label %13

13:                                               ; preds = %147, %4
  %14 = phi i64 [ %10, %4 ], [ %153, %147 ]
  %15 = phi i32 [ 0, %4 ], [ %148, %147 ]
  %16 = add i64 %14, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %7, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = and i16 %23, 15
  %25 = zext i16 %24 to i32
  switch i32 %25, label %146 [
    i32 8, label %26
    i32 0, label %33
    i32 10, label %52
    i32 2, label %90
    i32 11, label %140
    i32 3, label %140
    i32 9, label %154
    i32 1, label %154
    i32 13, label %147
    i32 5, label %147
  ]

26:                                               ; preds = %13
  %27 = add i64 %14, 11
  %28 = inttoptr i64 %27 to i8*
  %29 = sext i32 %15 to i64
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = tail call i32 @bcmp(i8* %30, i8* %1, i64 %2) #8
  %32 = icmp eq i32 %31, 0
  br label %161

33:                                               ; preds = %13
  %34 = add i64 %14, 11
  %35 = inttoptr i64 %34 to i16*
  %36 = sext i32 %15 to i64
  %37 = getelementptr inbounds i16, i16* %35, i64 %36
  %38 = getelementptr inbounds i16, i16* %37, i64 %2
  %39 = icmp sgt i64 %2, 0
  br i1 %39, label %40, label %161

40:                                               ; preds = %33, %48
  %41 = phi i16* [ %49, %48 ], [ %37, %33 ]
  %42 = phi i8* [ %50, %48 ], [ %1, %33 ]
  %43 = load i16, i16* %41, align 2
  %44 = zext i16 %43 to i32
  %45 = load i8, i8* %42, align 1
  %46 = zext i8 %45 to i32
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %48, label %161

48:                                               ; preds = %40
  %49 = getelementptr inbounds i16, i16* %41, i64 1
  %50 = getelementptr inbounds i8, i8* %42, i64 1
  %51 = icmp ult i16* %49, %38
  br i1 %51, label %40, label %161

52:                                               ; preds = %13
  %53 = inttoptr i64 %16 to i32*
  %54 = and i64 %14, -4294967296
  %55 = load atomic i32, i32* %53 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %54, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = and i16 %60, 16
  %62 = icmp eq i16 %61, 0
  %63 = add i64 %14, 11
  %64 = inttoptr i64 %63 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %62, label %77, label %65

65:                                               ; preds = %52
  %66 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %64, align 1
  %67 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %66, i64 0, i32 0
  %68 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %66 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %69 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %68, align 8
  %70 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %69, i64 2
  %71 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %70, align 8
  %72 = tail call zeroext i1 %71(%"class.v8::String::ExternalStringResourceBase"* %67) #8
  br i1 %72, label %73, label %77

73:                                               ; preds = %65
  %74 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %64, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %74) #8
  %75 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %74, i64 0, i32 1
  %76 = load i8*, i8** %75, align 8
  br label %84

77:                                               ; preds = %65, %52
  %78 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %64, align 1
  %79 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %78 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %80 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %79, align 8
  %81 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %80, i64 6
  %82 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %81, align 8
  %83 = tail call i8* %82(%"class.v8::String::ExternalOneByteStringResource"* %78) #8
  br label %84

84:                                               ; preds = %77, %73
  %85 = phi i8* [ %76, %73 ], [ %83, %77 ]
  %86 = sext i32 %15 to i64
  %87 = getelementptr inbounds i8, i8* %85, i64 %86
  %88 = tail call i32 @bcmp(i8* %87, i8* %1, i64 %2) #8
  %89 = icmp eq i32 %88, 0
  br label %161

90:                                               ; preds = %13
  %91 = inttoptr i64 %16 to i32*
  %92 = and i64 %14, -4294967296
  %93 = load atomic i32, i32* %91 monotonic, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %92, %94
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i16*
  %98 = load atomic i16, i16* %97 monotonic, align 2
  %99 = and i16 %98, 16
  %100 = icmp eq i16 %99, 0
  %101 = add i64 %14, 11
  %102 = inttoptr i64 %101 to %"class.v8::String::ExternalStringResource"**
  br i1 %100, label %115, label %103

103:                                              ; preds = %90
  %104 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %102, align 1
  %105 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %104, i64 0, i32 0
  %106 = bitcast %"class.v8::String::ExternalStringResource"* %104 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %107 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %106, align 8
  %108 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %107, i64 2
  %109 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %108, align 8
  %110 = tail call zeroext i1 %109(%"class.v8::String::ExternalStringResourceBase"* %105) #8
  br i1 %110, label %111, label %115

111:                                              ; preds = %103
  %112 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %102, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %112) #8
  %113 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %112, i64 0, i32 1
  %114 = load i16*, i16** %113, align 8
  br label %122

115:                                              ; preds = %103, %90
  %116 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %102, align 1
  %117 = bitcast %"class.v8::String::ExternalStringResource"* %116 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %118 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %117, align 8
  %119 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %118, i64 6
  %120 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %119, align 8
  %121 = tail call i16* %120(%"class.v8::String::ExternalStringResource"* %116) #8
  br label %122

122:                                              ; preds = %115, %111
  %123 = phi i16* [ %114, %111 ], [ %121, %115 ]
  %124 = sext i32 %15 to i64
  %125 = getelementptr inbounds i16, i16* %123, i64 %124
  %126 = getelementptr inbounds i16, i16* %125, i64 %2
  %127 = icmp sgt i64 %2, 0
  br i1 %127, label %128, label %161

128:                                              ; preds = %122, %136
  %129 = phi i16* [ %137, %136 ], [ %125, %122 ]
  %130 = phi i8* [ %138, %136 ], [ %1, %122 ]
  %131 = load i16, i16* %129, align 2
  %132 = zext i16 %131 to i32
  %133 = load i8, i8* %130, align 1
  %134 = zext i8 %133 to i32
  %135 = icmp eq i32 %132, %134
  br i1 %135, label %136, label %161

136:                                              ; preds = %128
  %137 = getelementptr inbounds i16, i16* %129, i64 1
  %138 = getelementptr inbounds i8, i8* %130, i64 1
  %139 = icmp ult i16* %137, %126
  br i1 %139, label %128, label %161

140:                                              ; preds = %13, %13
  %141 = add i64 %14, 15
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = ashr i32 %143, 1
  %145 = add nsw i32 %144, %15
  br label %147

146:                                              ; preds = %13
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

147:                                              ; preds = %140, %13, %13
  %148 = phi i32 [ %145, %140 ], [ %15, %13 ], [ %15, %13 ]
  %149 = add i64 %14, 11
  %150 = inttoptr i64 %149 to i32*
  %151 = load i32, i32* %150, align 4
  %152 = zext i32 %151 to i64
  %153 = or i64 %7, %152
  br label %13

154:                                              ; preds = %13, %13
  %155 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplIhEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %14, i32 %15, i8* %1, i64 %2, i64 %7, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %5) #8
  %156 = load i8, i8* %8, align 8, !range !2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %161, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %160 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %159, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %160) #8
  br label %161

161:                                              ; preds = %128, %136, %40, %48, %84, %26, %33, %122, %154, %158
  %162 = phi i1 [ %155, %154 ], [ %155, %158 ], [ %89, %84 ], [ %32, %26 ], [ true, %33 ], [ true, %122 ], [ false, %40 ], [ true, %48 ], [ false, %128 ], [ true, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret i1 %162
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplIhEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64, i32, i8*, i64, i64, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16)) local_unnamed_addr #11 comdat align 2 {
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::ConsStringIterator", align 8
  store i32 %1, i32* %7, align 4
  %9 = bitcast %"class.v8::internal::ConsStringIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %9) #8
  %10 = trunc i64 %0 to i32
  %11 = icmp eq i32 %10, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 268, i1 false) #8
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %189

13:                                               ; preds = %6
  call void @_ZN2v88internal18ConsStringIterator10InitializeENS0_10ConsStringEi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i64 %0, i32 %1) #8
  %14 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %8, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  store i32 0, i32* %7, align 4
  %17 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %8, i64 0, i32 2
  br i1 %16, label %189, label %18

18:                                               ; preds = %13
  %19 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i32* nonnull %7) #8
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %189, label %22

22:                                               ; preds = %18
  %23 = and i64 %4, 4294967295
  %24 = icmp eq i64 %23, 0
  call void @llvm.assume(i1 %24) #8
  br label %25

25:                                               ; preds = %22, %185
  %26 = phi i64 [ %3, %22 ], [ %180, %185 ]
  %27 = phi i64 [ %19, %22 ], [ %186, %185 ]
  %28 = phi i8* [ %2, %22 ], [ %179, %185 ]
  %29 = add i64 %27, 7
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = icmp ult i64 %26, %32
  %34 = select i1 %33, i64 %26, i64 %32
  br label %35

35:                                               ; preds = %169, %25
  %36 = phi i64 [ %27, %25 ], [ %175, %169 ]
  %37 = phi i32 [ 0, %25 ], [ %170, %169 ]
  %38 = add i64 %36, -1
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %41, %4
  %43 = add i64 %42, 7
  %44 = inttoptr i64 %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = and i16 %45, 15
  %47 = zext i16 %46 to i32
  switch i32 %47, label %168 [
    i32 8, label %48
    i32 0, label %55
    i32 10, label %74
    i32 2, label %112
    i32 11, label %162
    i32 3, label %162
    i32 9, label %176
    i32 1, label %176
    i32 13, label %169
    i32 5, label %169
  ]

48:                                               ; preds = %35
  %49 = add i64 %36, 11
  %50 = inttoptr i64 %49 to i8*
  %51 = sext i32 %37 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = call i32 @bcmp(i8* %52, i8* %28, i64 %34) #8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %178, label %189

55:                                               ; preds = %35
  %56 = add i64 %36, 11
  %57 = inttoptr i64 %56 to i16*
  %58 = sext i32 %37 to i64
  %59 = getelementptr inbounds i16, i16* %57, i64 %58
  %60 = getelementptr inbounds i16, i16* %59, i64 %34
  %61 = icmp sgt i64 %34, 0
  br i1 %61, label %62, label %178

62:                                               ; preds = %55, %70
  %63 = phi i16* [ %71, %70 ], [ %59, %55 ]
  %64 = phi i8* [ %72, %70 ], [ %28, %55 ]
  %65 = load i16, i16* %63, align 2
  %66 = zext i16 %65 to i32
  %67 = load i8, i8* %64, align 1
  %68 = zext i8 %67 to i32
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %189

70:                                               ; preds = %62
  %71 = getelementptr inbounds i16, i16* %63, i64 1
  %72 = getelementptr inbounds i8, i8* %64, i64 1
  %73 = icmp ult i16* %71, %60
  br i1 %73, label %62, label %178

74:                                               ; preds = %35
  %75 = inttoptr i64 %38 to i32*
  %76 = and i64 %36, -4294967296
  %77 = load atomic i32, i32* %75 monotonic, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %76, %78
  %80 = add i64 %79, 7
  %81 = inttoptr i64 %80 to i16*
  %82 = load atomic i16, i16* %81 monotonic, align 2
  %83 = and i16 %82, 16
  %84 = icmp eq i16 %83, 0
  %85 = add i64 %36, 11
  %86 = inttoptr i64 %85 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %84, label %99, label %87

87:                                               ; preds = %74
  %88 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %86, align 1
  %89 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %88, i64 0, i32 0
  %90 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %88 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %91 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %91, i64 2
  %93 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %92, align 8
  %94 = call zeroext i1 %93(%"class.v8::String::ExternalStringResourceBase"* %89) #8
  br i1 %94, label %95, label %99

95:                                               ; preds = %87
  %96 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %86, align 1
  call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %96) #8
  %97 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %96, i64 0, i32 1
  %98 = load i8*, i8** %97, align 8
  br label %106

99:                                               ; preds = %74, %87
  %100 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %86, align 1
  %101 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %100 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %102 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %101, align 8
  %103 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %102, i64 6
  %104 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %103, align 8
  %105 = call i8* %104(%"class.v8::String::ExternalOneByteStringResource"* %100) #8
  br label %106

106:                                              ; preds = %99, %95
  %107 = phi i8* [ %98, %95 ], [ %105, %99 ]
  %108 = sext i32 %37 to i64
  %109 = getelementptr inbounds i8, i8* %107, i64 %108
  %110 = call i32 @bcmp(i8* %109, i8* %28, i64 %34) #8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %178, label %189

112:                                              ; preds = %35
  %113 = inttoptr i64 %38 to i32*
  %114 = and i64 %36, -4294967296
  %115 = load atomic i32, i32* %113 monotonic, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %114, %116
  %118 = add i64 %117, 7
  %119 = inttoptr i64 %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = and i16 %120, 16
  %122 = icmp eq i16 %121, 0
  %123 = add i64 %36, 11
  %124 = inttoptr i64 %123 to %"class.v8::String::ExternalStringResource"**
  br i1 %122, label %137, label %125

125:                                              ; preds = %112
  %126 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %124, align 1
  %127 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %126, i64 0, i32 0
  %128 = bitcast %"class.v8::String::ExternalStringResource"* %126 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %129 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %128, align 8
  %130 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %129, i64 2
  %131 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %130, align 8
  %132 = call zeroext i1 %131(%"class.v8::String::ExternalStringResourceBase"* %127) #8
  br i1 %132, label %133, label %137

133:                                              ; preds = %125
  %134 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %124, align 1
  call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %134) #8
  %135 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %134, i64 0, i32 1
  %136 = load i16*, i16** %135, align 8
  br label %144

137:                                              ; preds = %112, %125
  %138 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %124, align 1
  %139 = bitcast %"class.v8::String::ExternalStringResource"* %138 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %140 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %139, align 8
  %141 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %140, i64 6
  %142 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %141, align 8
  %143 = call i16* %142(%"class.v8::String::ExternalStringResource"* %138) #8
  br label %144

144:                                              ; preds = %137, %133
  %145 = phi i16* [ %136, %133 ], [ %143, %137 ]
  %146 = sext i32 %37 to i64
  %147 = getelementptr inbounds i16, i16* %145, i64 %146
  %148 = getelementptr inbounds i16, i16* %147, i64 %34
  %149 = icmp sgt i64 %34, 0
  br i1 %149, label %150, label %178

150:                                              ; preds = %144, %158
  %151 = phi i16* [ %159, %158 ], [ %147, %144 ]
  %152 = phi i8* [ %160, %158 ], [ %28, %144 ]
  %153 = load i16, i16* %151, align 2
  %154 = zext i16 %153 to i32
  %155 = load i8, i8* %152, align 1
  %156 = zext i8 %155 to i32
  %157 = icmp eq i32 %154, %156
  br i1 %157, label %158, label %189

158:                                              ; preds = %150
  %159 = getelementptr inbounds i16, i16* %151, i64 1
  %160 = getelementptr inbounds i8, i8* %152, i64 1
  %161 = icmp ult i16* %159, %148
  br i1 %161, label %150, label %178

162:                                              ; preds = %35, %35
  %163 = add i64 %36, 15
  %164 = inttoptr i64 %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = ashr i32 %165, 1
  %167 = add nsw i32 %166, %37
  br label %169

168:                                              ; preds = %35
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

169:                                              ; preds = %35, %35, %162
  %170 = phi i32 [ %167, %162 ], [ %37, %35 ], [ %37, %35 ]
  %171 = add i64 %36, 11
  %172 = inttoptr i64 %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %174, %4
  br label %35

176:                                              ; preds = %35, %35
  %177 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplIhEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %36, i32 %37, i8* %28, i64 %34, i64 %4, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %5) #8
  br i1 %177, label %178, label %189

178:                                              ; preds = %158, %70, %55, %144, %106, %48, %176
  %179 = getelementptr inbounds i8, i8* %28, i64 %34
  %180 = sub i64 %26, %34
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %189, label %182

182:                                              ; preds = %178
  store i32 0, i32* %7, align 4
  %183 = load i32, i32* %17, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %189, label %185

185:                                              ; preds = %182
  %186 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i32* nonnull %7) #8
  %187 = trunc i64 %186 to i32
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %25

189:                                              ; preds = %182, %178, %185, %106, %48, %176, %150, %62, %12, %13, %18
  %190 = phi i1 [ true, %18 ], [ true, %13 ], [ true, %12 ], [ false, %62 ], [ false, %150 ], [ true, %182 ], [ true, %178 ], [ true, %185 ], [ false, %106 ], [ false, %48 ], [ false, %176 ]
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %9) #8
  ret i1 %190
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #12

declare void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #2

declare void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"*) local_unnamed_addr #2

declare void @_ZN2v88internal18ConsStringIterator10InitializeENS0_10ConsStringEi(%"class.v8::internal::ConsStringIterator"*, i64, i32) local_unnamed_addr #2

declare i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"*, i32*) local_unnamed_addr #2

declare void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE28NewOneByteInternalizedStringERKNS0_6VectorIKhEEj(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::Vector.1135"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EtEEbNS0_6VectorIKT0_EEPNS0_7IsolateE(%"class.v8::internal::String"*, i16*, i64, %"class.v8::internal::Isolate"*) local_unnamed_addr #6 comdat align 2 {
  %5 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #8, !alias.scope !7
  %9 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %7, 4294967295
  %12 = icmp eq i64 %11, 0
  tail call void @llvm.assume(i1 %12) #8
  br label %13

13:                                               ; preds = %153, %4
  %14 = phi i64 [ %10, %4 ], [ %159, %153 ]
  %15 = phi i32 [ 0, %4 ], [ %154, %153 ]
  %16 = add i64 %14, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %7, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = and i16 %23, 15
  %25 = zext i16 %24 to i32
  switch i32 %25, label %152 [
    i32 8, label %26
    i32 0, label %45
    i32 10, label %55
    i32 2, label %105
    i32 11, label %146
    i32 3, label %146
    i32 9, label %160
    i32 1, label %160
    i32 13, label %153
    i32 5, label %153
  ]

26:                                               ; preds = %13
  %27 = add i64 %14, 11
  %28 = inttoptr i64 %27 to i8*
  %29 = sext i32 %15 to i64
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = getelementptr inbounds i8, i8* %30, i64 %2
  %32 = icmp sgt i64 %2, 0
  br i1 %32, label %33, label %167

33:                                               ; preds = %26, %41
  %34 = phi i8* [ %42, %41 ], [ %30, %26 ]
  %35 = phi i16* [ %43, %41 ], [ %1, %26 ]
  %36 = load i8, i8* %34, align 1
  %37 = zext i8 %36 to i32
  %38 = load i16, i16* %35, align 2
  %39 = zext i16 %38 to i32
  %40 = icmp eq i32 %37, %39
  br i1 %40, label %41, label %167

41:                                               ; preds = %33
  %42 = getelementptr inbounds i8, i8* %34, i64 1
  %43 = getelementptr inbounds i16, i16* %35, i64 1
  %44 = icmp ult i8* %42, %31
  br i1 %44, label %33, label %167

45:                                               ; preds = %13
  %46 = add i64 %14, 11
  %47 = inttoptr i64 %46 to i16*
  %48 = sext i32 %15 to i64
  %49 = getelementptr inbounds i16, i16* %47, i64 %48
  %50 = bitcast i16* %49 to i8*
  %51 = bitcast i16* %1 to i8*
  %52 = shl i64 %2, 1
  %53 = tail call i32 @bcmp(i8* %50, i8* %51, i64 %52) #8
  %54 = icmp eq i32 %53, 0
  br label %167

55:                                               ; preds = %13
  %56 = inttoptr i64 %16 to i32*
  %57 = and i64 %14, -4294967296
  %58 = load atomic i32, i32* %56 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %57, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = and i16 %63, 16
  %65 = icmp eq i16 %64, 0
  %66 = add i64 %14, 11
  %67 = inttoptr i64 %66 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %65, label %80, label %68

68:                                               ; preds = %55
  %69 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %67, align 1
  %70 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %69, i64 0, i32 0
  %71 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %69 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %72 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %71, align 8
  %73 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %72, i64 2
  %74 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %73, align 8
  %75 = tail call zeroext i1 %74(%"class.v8::String::ExternalStringResourceBase"* %70) #8
  br i1 %75, label %76, label %80

76:                                               ; preds = %68
  %77 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %67, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %77) #8
  %78 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %77, i64 0, i32 1
  %79 = load i8*, i8** %78, align 8
  br label %87

80:                                               ; preds = %68, %55
  %81 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %67, align 1
  %82 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %81 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %83 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %82, align 8
  %84 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %83, i64 6
  %85 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %84, align 8
  %86 = tail call i8* %85(%"class.v8::String::ExternalOneByteStringResource"* %81) #8
  br label %87

87:                                               ; preds = %80, %76
  %88 = phi i8* [ %79, %76 ], [ %86, %80 ]
  %89 = sext i32 %15 to i64
  %90 = getelementptr inbounds i8, i8* %88, i64 %89
  %91 = getelementptr inbounds i8, i8* %90, i64 %2
  %92 = icmp sgt i64 %2, 0
  br i1 %92, label %93, label %167

93:                                               ; preds = %87, %101
  %94 = phi i8* [ %102, %101 ], [ %90, %87 ]
  %95 = phi i16* [ %103, %101 ], [ %1, %87 ]
  %96 = load i8, i8* %94, align 1
  %97 = zext i8 %96 to i32
  %98 = load i16, i16* %95, align 2
  %99 = zext i16 %98 to i32
  %100 = icmp eq i32 %97, %99
  br i1 %100, label %101, label %167

101:                                              ; preds = %93
  %102 = getelementptr inbounds i8, i8* %94, i64 1
  %103 = getelementptr inbounds i16, i16* %95, i64 1
  %104 = icmp ult i8* %102, %91
  br i1 %104, label %93, label %167

105:                                              ; preds = %13
  %106 = inttoptr i64 %16 to i32*
  %107 = and i64 %14, -4294967296
  %108 = load atomic i32, i32* %106 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %107, %109
  %111 = add i64 %110, 7
  %112 = inttoptr i64 %111 to i16*
  %113 = load atomic i16, i16* %112 monotonic, align 2
  %114 = and i16 %113, 16
  %115 = icmp eq i16 %114, 0
  %116 = add i64 %14, 11
  %117 = inttoptr i64 %116 to %"class.v8::String::ExternalStringResource"**
  br i1 %115, label %130, label %118

118:                                              ; preds = %105
  %119 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %117, align 1
  %120 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %119, i64 0, i32 0
  %121 = bitcast %"class.v8::String::ExternalStringResource"* %119 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %122 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %121, align 8
  %123 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %122, i64 2
  %124 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %123, align 8
  %125 = tail call zeroext i1 %124(%"class.v8::String::ExternalStringResourceBase"* %120) #8
  br i1 %125, label %126, label %130

126:                                              ; preds = %118
  %127 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %117, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %127) #8
  %128 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %127, i64 0, i32 1
  %129 = load i16*, i16** %128, align 8
  br label %137

130:                                              ; preds = %118, %105
  %131 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %117, align 1
  %132 = bitcast %"class.v8::String::ExternalStringResource"* %131 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %133 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %132, align 8
  %134 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %133, i64 6
  %135 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %134, align 8
  %136 = tail call i16* %135(%"class.v8::String::ExternalStringResource"* %131) #8
  br label %137

137:                                              ; preds = %130, %126
  %138 = phi i16* [ %129, %126 ], [ %136, %130 ]
  %139 = sext i32 %15 to i64
  %140 = getelementptr inbounds i16, i16* %138, i64 %139
  %141 = bitcast i16* %140 to i8*
  %142 = bitcast i16* %1 to i8*
  %143 = shl i64 %2, 1
  %144 = tail call i32 @bcmp(i8* %141, i8* %142, i64 %143) #8
  %145 = icmp eq i32 %144, 0
  br label %167

146:                                              ; preds = %13, %13
  %147 = add i64 %14, 15
  %148 = inttoptr i64 %147 to i32*
  %149 = load i32, i32* %148, align 4
  %150 = ashr i32 %149, 1
  %151 = add nsw i32 %150, %15
  br label %153

152:                                              ; preds = %13
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

153:                                              ; preds = %146, %13, %13
  %154 = phi i32 [ %151, %146 ], [ %15, %13 ], [ %15, %13 ]
  %155 = add i64 %14, 11
  %156 = inttoptr i64 %155 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = zext i32 %157 to i64
  %159 = or i64 %7, %158
  br label %13

160:                                              ; preds = %13, %13
  %161 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplItEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %14, i32 %15, i16* %1, i64 %2, i64 %7, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %5) #8
  %162 = load i8, i8* %8, align 8, !range !2
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %167, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %166 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %165, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %166) #8
  br label %167

167:                                              ; preds = %93, %101, %33, %41, %137, %45, %26, %87, %160, %164
  %168 = phi i1 [ %161, %160 ], [ %161, %164 ], [ %145, %137 ], [ %54, %45 ], [ true, %26 ], [ true, %87 ], [ false, %33 ], [ true, %41 ], [ false, %93 ], [ true, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret i1 %168
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplItEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64, i32, i16*, i64, i64, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16)) local_unnamed_addr #11 comdat align 2 {
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::ConsStringIterator", align 8
  store i32 %1, i32* %7, align 4
  %9 = bitcast %"class.v8::internal::ConsStringIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %9) #8
  %10 = trunc i64 %0 to i32
  %11 = icmp eq i32 %10, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 268, i1 false) #8
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %195

13:                                               ; preds = %6
  call void @_ZN2v88internal18ConsStringIterator10InitializeENS0_10ConsStringEi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i64 %0, i32 %1) #8
  %14 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %8, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  store i32 0, i32* %7, align 4
  %17 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %8, i64 0, i32 2
  br i1 %16, label %195, label %18

18:                                               ; preds = %13
  %19 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i32* nonnull %7) #8
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %195, label %22

22:                                               ; preds = %18
  %23 = and i64 %4, 4294967295
  %24 = icmp eq i64 %23, 0
  call void @llvm.assume(i1 %24) #8
  br label %25

25:                                               ; preds = %22, %191
  %26 = phi i64 [ %3, %22 ], [ %186, %191 ]
  %27 = phi i64 [ %19, %22 ], [ %192, %191 ]
  %28 = phi i16* [ %2, %22 ], [ %185, %191 ]
  %29 = add i64 %27, 7
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = icmp ult i64 %26, %32
  %34 = select i1 %33, i64 %26, i64 %32
  br label %35

35:                                               ; preds = %175, %25
  %36 = phi i64 [ %27, %25 ], [ %181, %175 ]
  %37 = phi i32 [ 0, %25 ], [ %176, %175 ]
  %38 = add i64 %36, -1
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %41, %4
  %43 = add i64 %42, 7
  %44 = inttoptr i64 %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = and i16 %45, 15
  %47 = zext i16 %46 to i32
  switch i32 %47, label %174 [
    i32 8, label %48
    i32 0, label %67
    i32 10, label %77
    i32 2, label %127
    i32 11, label %168
    i32 3, label %168
    i32 9, label %182
    i32 1, label %182
    i32 13, label %175
    i32 5, label %175
  ]

48:                                               ; preds = %35
  %49 = add i64 %36, 11
  %50 = inttoptr i64 %49 to i8*
  %51 = sext i32 %37 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = getelementptr inbounds i8, i8* %52, i64 %34
  %54 = icmp sgt i64 %34, 0
  br i1 %54, label %55, label %184

55:                                               ; preds = %48, %63
  %56 = phi i8* [ %64, %63 ], [ %52, %48 ]
  %57 = phi i16* [ %65, %63 ], [ %28, %48 ]
  %58 = load i8, i8* %56, align 1
  %59 = zext i8 %58 to i32
  %60 = load i16, i16* %57, align 2
  %61 = zext i16 %60 to i32
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %63, label %195

63:                                               ; preds = %55
  %64 = getelementptr inbounds i8, i8* %56, i64 1
  %65 = getelementptr inbounds i16, i16* %57, i64 1
  %66 = icmp ult i8* %64, %53
  br i1 %66, label %55, label %184

67:                                               ; preds = %35
  %68 = add i64 %36, 11
  %69 = inttoptr i64 %68 to i16*
  %70 = sext i32 %37 to i64
  %71 = getelementptr inbounds i16, i16* %69, i64 %70
  %72 = bitcast i16* %71 to i8*
  %73 = bitcast i16* %28 to i8*
  %74 = shl i64 %34, 1
  %75 = call i32 @bcmp(i8* %72, i8* %73, i64 %74) #8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %184, label %195

77:                                               ; preds = %35
  %78 = inttoptr i64 %38 to i32*
  %79 = and i64 %36, -4294967296
  %80 = load atomic i32, i32* %78 monotonic, align 4
  %81 = zext i32 %80 to i64
  %82 = or i64 %79, %81
  %83 = add i64 %82, 7
  %84 = inttoptr i64 %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = and i16 %85, 16
  %87 = icmp eq i16 %86, 0
  %88 = add i64 %36, 11
  %89 = inttoptr i64 %88 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %87, label %102, label %90

90:                                               ; preds = %77
  %91 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %89, align 1
  %92 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %91, i64 0, i32 0
  %93 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %91 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %94 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %93, align 8
  %95 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %94, i64 2
  %96 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %95, align 8
  %97 = call zeroext i1 %96(%"class.v8::String::ExternalStringResourceBase"* %92) #8
  br i1 %97, label %98, label %102

98:                                               ; preds = %90
  %99 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %89, align 1
  call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %99) #8
  %100 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %99, i64 0, i32 1
  %101 = load i8*, i8** %100, align 8
  br label %109

102:                                              ; preds = %77, %90
  %103 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %89, align 1
  %104 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %103 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %105 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %104, align 8
  %106 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %105, i64 6
  %107 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %106, align 8
  %108 = call i8* %107(%"class.v8::String::ExternalOneByteStringResource"* %103) #8
  br label %109

109:                                              ; preds = %102, %98
  %110 = phi i8* [ %101, %98 ], [ %108, %102 ]
  %111 = sext i32 %37 to i64
  %112 = getelementptr inbounds i8, i8* %110, i64 %111
  %113 = getelementptr inbounds i8, i8* %112, i64 %34
  %114 = icmp sgt i64 %34, 0
  br i1 %114, label %115, label %184

115:                                              ; preds = %109, %123
  %116 = phi i8* [ %124, %123 ], [ %112, %109 ]
  %117 = phi i16* [ %125, %123 ], [ %28, %109 ]
  %118 = load i8, i8* %116, align 1
  %119 = zext i8 %118 to i32
  %120 = load i16, i16* %117, align 2
  %121 = zext i16 %120 to i32
  %122 = icmp eq i32 %119, %121
  br i1 %122, label %123, label %195

123:                                              ; preds = %115
  %124 = getelementptr inbounds i8, i8* %116, i64 1
  %125 = getelementptr inbounds i16, i16* %117, i64 1
  %126 = icmp ult i8* %124, %113
  br i1 %126, label %115, label %184

127:                                              ; preds = %35
  %128 = inttoptr i64 %38 to i32*
  %129 = and i64 %36, -4294967296
  %130 = load atomic i32, i32* %128 monotonic, align 4
  %131 = zext i32 %130 to i64
  %132 = or i64 %129, %131
  %133 = add i64 %132, 7
  %134 = inttoptr i64 %133 to i16*
  %135 = load atomic i16, i16* %134 monotonic, align 2
  %136 = and i16 %135, 16
  %137 = icmp eq i16 %136, 0
  %138 = add i64 %36, 11
  %139 = inttoptr i64 %138 to %"class.v8::String::ExternalStringResource"**
  br i1 %137, label %152, label %140

140:                                              ; preds = %127
  %141 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %139, align 1
  %142 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %141, i64 0, i32 0
  %143 = bitcast %"class.v8::String::ExternalStringResource"* %141 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %144 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %143, align 8
  %145 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %144, i64 2
  %146 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %145, align 8
  %147 = call zeroext i1 %146(%"class.v8::String::ExternalStringResourceBase"* %142) #8
  br i1 %147, label %148, label %152

148:                                              ; preds = %140
  %149 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %139, align 1
  call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %149) #8
  %150 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %149, i64 0, i32 1
  %151 = load i16*, i16** %150, align 8
  br label %159

152:                                              ; preds = %127, %140
  %153 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %139, align 1
  %154 = bitcast %"class.v8::String::ExternalStringResource"* %153 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %155 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %154, align 8
  %156 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %155, i64 6
  %157 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %156, align 8
  %158 = call i16* %157(%"class.v8::String::ExternalStringResource"* %153) #8
  br label %159

159:                                              ; preds = %152, %148
  %160 = phi i16* [ %151, %148 ], [ %158, %152 ]
  %161 = sext i32 %37 to i64
  %162 = getelementptr inbounds i16, i16* %160, i64 %161
  %163 = bitcast i16* %162 to i8*
  %164 = bitcast i16* %28 to i8*
  %165 = shl i64 %34, 1
  %166 = call i32 @bcmp(i8* %163, i8* %164, i64 %165) #8
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %184, label %195

168:                                              ; preds = %35, %35
  %169 = add i64 %36, 15
  %170 = inttoptr i64 %169 to i32*
  %171 = load i32, i32* %170, align 4
  %172 = ashr i32 %171, 1
  %173 = add nsw i32 %172, %37
  br label %175

174:                                              ; preds = %35
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

175:                                              ; preds = %35, %35, %168
  %176 = phi i32 [ %173, %168 ], [ %37, %35 ], [ %37, %35 ]
  %177 = add i64 %36, 11
  %178 = inttoptr i64 %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = zext i32 %179 to i64
  %181 = or i64 %180, %4
  br label %35

182:                                              ; preds = %35, %35
  %183 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplItEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %36, i32 %37, i16* %28, i64 %34, i64 %4, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %5) #8
  br i1 %183, label %184, label %195

184:                                              ; preds = %123, %63, %48, %109, %159, %67, %182
  %185 = getelementptr inbounds i16, i16* %28, i64 %34
  %186 = sub i64 %26, %34
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %195, label %188

188:                                              ; preds = %184
  store i32 0, i32* %7, align 4
  %189 = load i32, i32* %17, align 8
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %195, label %191

191:                                              ; preds = %188
  %192 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i32* nonnull %7) #8
  %193 = trunc i64 %192 to i32
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %25

195:                                              ; preds = %188, %184, %191, %159, %67, %182, %115, %55, %12, %13, %18
  %196 = phi i1 [ true, %18 ], [ true, %13 ], [ true, %12 ], [ false, %55 ], [ false, %115 ], [ true, %188 ], [ true, %184 ], [ true, %191 ], [ false, %159 ], [ false, %67 ], [ false, %182 ]
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %9) #8
  ret i1 %196
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE28NewTwoByteInternalizedStringERKNS0_6VectorIKtEEj(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::Vector.1137"* dereferenceable(16), i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE36AllocateRawOneByteInternalizedStringEij(%"class.v8::internal::FactoryBase"*, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9CopyCharsIthEEvPT0_PKT_m(i8*, i16*, i64) local_unnamed_addr #0 comdat {
  %4 = bitcast i16* %1 to i8*
  switch i64 %2, label %533 [
    i64 1, label %530
    i64 2, label %523
    i64 3, label %512
    i64 4, label %497
    i64 5, label %478
    i64 6, label %455
    i64 7, label %428
    i64 8, label %397
    i64 9, label %362
    i64 10, label %323
    i64 11, label %280
    i64 12, label %233
    i64 13, label %182
    i64 14, label %127
    i64 15, label %68
    i64 16, label %5
  ]

5:                                                ; preds = %3
  %6 = load i16, i16* %1, align 2
  %7 = trunc i16 %6 to i8
  store i8 %7, i8* %0, align 1
  %8 = getelementptr inbounds i8, i8* %0, i64 1
  %9 = getelementptr inbounds i16, i16* %1, i64 1
  %10 = load i16, i16* %9, align 2
  %11 = trunc i16 %10 to i8
  store i8 %11, i8* %8, align 1
  %12 = getelementptr inbounds i8, i8* %0, i64 2
  %13 = getelementptr inbounds i16, i16* %1, i64 2
  %14 = load i16, i16* %13, align 2
  %15 = trunc i16 %14 to i8
  store i8 %15, i8* %12, align 1
  %16 = getelementptr inbounds i8, i8* %0, i64 3
  %17 = getelementptr inbounds i16, i16* %1, i64 3
  %18 = load i16, i16* %17, align 2
  %19 = trunc i16 %18 to i8
  store i8 %19, i8* %16, align 1
  %20 = getelementptr inbounds i8, i8* %0, i64 4
  %21 = getelementptr inbounds i16, i16* %1, i64 4
  %22 = load i16, i16* %21, align 2
  %23 = trunc i16 %22 to i8
  store i8 %23, i8* %20, align 1
  %24 = getelementptr inbounds i8, i8* %0, i64 5
  %25 = getelementptr inbounds i16, i16* %1, i64 5
  %26 = load i16, i16* %25, align 2
  %27 = trunc i16 %26 to i8
  store i8 %27, i8* %24, align 1
  %28 = getelementptr inbounds i8, i8* %0, i64 6
  %29 = getelementptr inbounds i16, i16* %1, i64 6
  %30 = load i16, i16* %29, align 2
  %31 = trunc i16 %30 to i8
  store i8 %31, i8* %28, align 1
  %32 = getelementptr inbounds i8, i8* %0, i64 7
  %33 = getelementptr inbounds i16, i16* %1, i64 7
  %34 = load i16, i16* %33, align 2
  %35 = trunc i16 %34 to i8
  store i8 %35, i8* %32, align 1
  %36 = getelementptr inbounds i8, i8* %0, i64 8
  %37 = getelementptr inbounds i16, i16* %1, i64 8
  %38 = load i16, i16* %37, align 2
  %39 = trunc i16 %38 to i8
  store i8 %39, i8* %36, align 1
  %40 = getelementptr inbounds i8, i8* %0, i64 9
  %41 = getelementptr inbounds i16, i16* %1, i64 9
  %42 = load i16, i16* %41, align 2
  %43 = trunc i16 %42 to i8
  store i8 %43, i8* %40, align 1
  %44 = getelementptr inbounds i8, i8* %0, i64 10
  %45 = getelementptr inbounds i16, i16* %1, i64 10
  %46 = load i16, i16* %45, align 2
  %47 = trunc i16 %46 to i8
  store i8 %47, i8* %44, align 1
  %48 = getelementptr inbounds i8, i8* %0, i64 11
  %49 = getelementptr inbounds i16, i16* %1, i64 11
  %50 = load i16, i16* %49, align 2
  %51 = trunc i16 %50 to i8
  store i8 %51, i8* %48, align 1
  %52 = getelementptr inbounds i8, i8* %0, i64 12
  %53 = getelementptr inbounds i16, i16* %1, i64 12
  %54 = load i16, i16* %53, align 2
  %55 = trunc i16 %54 to i8
  store i8 %55, i8* %52, align 1
  %56 = getelementptr inbounds i8, i8* %0, i64 13
  %57 = getelementptr inbounds i16, i16* %1, i64 13
  %58 = load i16, i16* %57, align 2
  %59 = trunc i16 %58 to i8
  store i8 %59, i8* %56, align 1
  %60 = getelementptr inbounds i8, i8* %0, i64 14
  %61 = getelementptr inbounds i16, i16* %1, i64 14
  %62 = load i16, i16* %61, align 2
  %63 = trunc i16 %62 to i8
  store i8 %63, i8* %60, align 1
  %64 = getelementptr inbounds i8, i8* %0, i64 15
  %65 = getelementptr inbounds i16, i16* %1, i64 15
  %66 = load i16, i16* %65, align 2
  %67 = trunc i16 %66 to i8
  store i8 %67, i8* %64, align 1
  br label %675

68:                                               ; preds = %3
  %69 = load i16, i16* %1, align 2
  %70 = trunc i16 %69 to i8
  store i8 %70, i8* %0, align 1
  %71 = getelementptr inbounds i8, i8* %0, i64 1
  %72 = getelementptr inbounds i16, i16* %1, i64 1
  %73 = load i16, i16* %72, align 2
  %74 = trunc i16 %73 to i8
  store i8 %74, i8* %71, align 1
  %75 = getelementptr inbounds i8, i8* %0, i64 2
  %76 = getelementptr inbounds i16, i16* %1, i64 2
  %77 = load i16, i16* %76, align 2
  %78 = trunc i16 %77 to i8
  store i8 %78, i8* %75, align 1
  %79 = getelementptr inbounds i8, i8* %0, i64 3
  %80 = getelementptr inbounds i16, i16* %1, i64 3
  %81 = load i16, i16* %80, align 2
  %82 = trunc i16 %81 to i8
  store i8 %82, i8* %79, align 1
  %83 = getelementptr inbounds i8, i8* %0, i64 4
  %84 = getelementptr inbounds i16, i16* %1, i64 4
  %85 = load i16, i16* %84, align 2
  %86 = trunc i16 %85 to i8
  store i8 %86, i8* %83, align 1
  %87 = getelementptr inbounds i8, i8* %0, i64 5
  %88 = getelementptr inbounds i16, i16* %1, i64 5
  %89 = load i16, i16* %88, align 2
  %90 = trunc i16 %89 to i8
  store i8 %90, i8* %87, align 1
  %91 = getelementptr inbounds i8, i8* %0, i64 6
  %92 = getelementptr inbounds i16, i16* %1, i64 6
  %93 = load i16, i16* %92, align 2
  %94 = trunc i16 %93 to i8
  store i8 %94, i8* %91, align 1
  %95 = getelementptr inbounds i8, i8* %0, i64 7
  %96 = getelementptr inbounds i16, i16* %1, i64 7
  %97 = load i16, i16* %96, align 2
  %98 = trunc i16 %97 to i8
  store i8 %98, i8* %95, align 1
  %99 = getelementptr inbounds i8, i8* %0, i64 8
  %100 = getelementptr inbounds i16, i16* %1, i64 8
  %101 = load i16, i16* %100, align 2
  %102 = trunc i16 %101 to i8
  store i8 %102, i8* %99, align 1
  %103 = getelementptr inbounds i8, i8* %0, i64 9
  %104 = getelementptr inbounds i16, i16* %1, i64 9
  %105 = load i16, i16* %104, align 2
  %106 = trunc i16 %105 to i8
  store i8 %106, i8* %103, align 1
  %107 = getelementptr inbounds i8, i8* %0, i64 10
  %108 = getelementptr inbounds i16, i16* %1, i64 10
  %109 = load i16, i16* %108, align 2
  %110 = trunc i16 %109 to i8
  store i8 %110, i8* %107, align 1
  %111 = getelementptr inbounds i8, i8* %0, i64 11
  %112 = getelementptr inbounds i16, i16* %1, i64 11
  %113 = load i16, i16* %112, align 2
  %114 = trunc i16 %113 to i8
  store i8 %114, i8* %111, align 1
  %115 = getelementptr inbounds i8, i8* %0, i64 12
  %116 = getelementptr inbounds i16, i16* %1, i64 12
  %117 = load i16, i16* %116, align 2
  %118 = trunc i16 %117 to i8
  store i8 %118, i8* %115, align 1
  %119 = getelementptr inbounds i8, i8* %0, i64 13
  %120 = getelementptr inbounds i16, i16* %1, i64 13
  %121 = load i16, i16* %120, align 2
  %122 = trunc i16 %121 to i8
  store i8 %122, i8* %119, align 1
  %123 = getelementptr inbounds i8, i8* %0, i64 14
  %124 = getelementptr inbounds i16, i16* %1, i64 14
  %125 = load i16, i16* %124, align 2
  %126 = trunc i16 %125 to i8
  store i8 %126, i8* %123, align 1
  br label %675

127:                                              ; preds = %3
  %128 = load i16, i16* %1, align 2
  %129 = trunc i16 %128 to i8
  store i8 %129, i8* %0, align 1
  %130 = getelementptr inbounds i8, i8* %0, i64 1
  %131 = getelementptr inbounds i16, i16* %1, i64 1
  %132 = load i16, i16* %131, align 2
  %133 = trunc i16 %132 to i8
  store i8 %133, i8* %130, align 1
  %134 = getelementptr inbounds i8, i8* %0, i64 2
  %135 = getelementptr inbounds i16, i16* %1, i64 2
  %136 = load i16, i16* %135, align 2
  %137 = trunc i16 %136 to i8
  store i8 %137, i8* %134, align 1
  %138 = getelementptr inbounds i8, i8* %0, i64 3
  %139 = getelementptr inbounds i16, i16* %1, i64 3
  %140 = load i16, i16* %139, align 2
  %141 = trunc i16 %140 to i8
  store i8 %141, i8* %138, align 1
  %142 = getelementptr inbounds i8, i8* %0, i64 4
  %143 = getelementptr inbounds i16, i16* %1, i64 4
  %144 = load i16, i16* %143, align 2
  %145 = trunc i16 %144 to i8
  store i8 %145, i8* %142, align 1
  %146 = getelementptr inbounds i8, i8* %0, i64 5
  %147 = getelementptr inbounds i16, i16* %1, i64 5
  %148 = load i16, i16* %147, align 2
  %149 = trunc i16 %148 to i8
  store i8 %149, i8* %146, align 1
  %150 = getelementptr inbounds i8, i8* %0, i64 6
  %151 = getelementptr inbounds i16, i16* %1, i64 6
  %152 = load i16, i16* %151, align 2
  %153 = trunc i16 %152 to i8
  store i8 %153, i8* %150, align 1
  %154 = getelementptr inbounds i8, i8* %0, i64 7
  %155 = getelementptr inbounds i16, i16* %1, i64 7
  %156 = load i16, i16* %155, align 2
  %157 = trunc i16 %156 to i8
  store i8 %157, i8* %154, align 1
  %158 = getelementptr inbounds i8, i8* %0, i64 8
  %159 = getelementptr inbounds i16, i16* %1, i64 8
  %160 = load i16, i16* %159, align 2
  %161 = trunc i16 %160 to i8
  store i8 %161, i8* %158, align 1
  %162 = getelementptr inbounds i8, i8* %0, i64 9
  %163 = getelementptr inbounds i16, i16* %1, i64 9
  %164 = load i16, i16* %163, align 2
  %165 = trunc i16 %164 to i8
  store i8 %165, i8* %162, align 1
  %166 = getelementptr inbounds i8, i8* %0, i64 10
  %167 = getelementptr inbounds i16, i16* %1, i64 10
  %168 = load i16, i16* %167, align 2
  %169 = trunc i16 %168 to i8
  store i8 %169, i8* %166, align 1
  %170 = getelementptr inbounds i8, i8* %0, i64 11
  %171 = getelementptr inbounds i16, i16* %1, i64 11
  %172 = load i16, i16* %171, align 2
  %173 = trunc i16 %172 to i8
  store i8 %173, i8* %170, align 1
  %174 = getelementptr inbounds i8, i8* %0, i64 12
  %175 = getelementptr inbounds i16, i16* %1, i64 12
  %176 = load i16, i16* %175, align 2
  %177 = trunc i16 %176 to i8
  store i8 %177, i8* %174, align 1
  %178 = getelementptr inbounds i8, i8* %0, i64 13
  %179 = getelementptr inbounds i16, i16* %1, i64 13
  %180 = load i16, i16* %179, align 2
  %181 = trunc i16 %180 to i8
  store i8 %181, i8* %178, align 1
  br label %675

182:                                              ; preds = %3
  %183 = load i16, i16* %1, align 2
  %184 = trunc i16 %183 to i8
  store i8 %184, i8* %0, align 1
  %185 = getelementptr inbounds i8, i8* %0, i64 1
  %186 = getelementptr inbounds i16, i16* %1, i64 1
  %187 = load i16, i16* %186, align 2
  %188 = trunc i16 %187 to i8
  store i8 %188, i8* %185, align 1
  %189 = getelementptr inbounds i8, i8* %0, i64 2
  %190 = getelementptr inbounds i16, i16* %1, i64 2
  %191 = load i16, i16* %190, align 2
  %192 = trunc i16 %191 to i8
  store i8 %192, i8* %189, align 1
  %193 = getelementptr inbounds i8, i8* %0, i64 3
  %194 = getelementptr inbounds i16, i16* %1, i64 3
  %195 = load i16, i16* %194, align 2
  %196 = trunc i16 %195 to i8
  store i8 %196, i8* %193, align 1
  %197 = getelementptr inbounds i8, i8* %0, i64 4
  %198 = getelementptr inbounds i16, i16* %1, i64 4
  %199 = load i16, i16* %198, align 2
  %200 = trunc i16 %199 to i8
  store i8 %200, i8* %197, align 1
  %201 = getelementptr inbounds i8, i8* %0, i64 5
  %202 = getelementptr inbounds i16, i16* %1, i64 5
  %203 = load i16, i16* %202, align 2
  %204 = trunc i16 %203 to i8
  store i8 %204, i8* %201, align 1
  %205 = getelementptr inbounds i8, i8* %0, i64 6
  %206 = getelementptr inbounds i16, i16* %1, i64 6
  %207 = load i16, i16* %206, align 2
  %208 = trunc i16 %207 to i8
  store i8 %208, i8* %205, align 1
  %209 = getelementptr inbounds i8, i8* %0, i64 7
  %210 = getelementptr inbounds i16, i16* %1, i64 7
  %211 = load i16, i16* %210, align 2
  %212 = trunc i16 %211 to i8
  store i8 %212, i8* %209, align 1
  %213 = getelementptr inbounds i8, i8* %0, i64 8
  %214 = getelementptr inbounds i16, i16* %1, i64 8
  %215 = load i16, i16* %214, align 2
  %216 = trunc i16 %215 to i8
  store i8 %216, i8* %213, align 1
  %217 = getelementptr inbounds i8, i8* %0, i64 9
  %218 = getelementptr inbounds i16, i16* %1, i64 9
  %219 = load i16, i16* %218, align 2
  %220 = trunc i16 %219 to i8
  store i8 %220, i8* %217, align 1
  %221 = getelementptr inbounds i8, i8* %0, i64 10
  %222 = getelementptr inbounds i16, i16* %1, i64 10
  %223 = load i16, i16* %222, align 2
  %224 = trunc i16 %223 to i8
  store i8 %224, i8* %221, align 1
  %225 = getelementptr inbounds i8, i8* %0, i64 11
  %226 = getelementptr inbounds i16, i16* %1, i64 11
  %227 = load i16, i16* %226, align 2
  %228 = trunc i16 %227 to i8
  store i8 %228, i8* %225, align 1
  %229 = getelementptr inbounds i8, i8* %0, i64 12
  %230 = getelementptr inbounds i16, i16* %1, i64 12
  %231 = load i16, i16* %230, align 2
  %232 = trunc i16 %231 to i8
  store i8 %232, i8* %229, align 1
  br label %675

233:                                              ; preds = %3
  %234 = load i16, i16* %1, align 2
  %235 = trunc i16 %234 to i8
  store i8 %235, i8* %0, align 1
  %236 = getelementptr inbounds i8, i8* %0, i64 1
  %237 = getelementptr inbounds i16, i16* %1, i64 1
  %238 = load i16, i16* %237, align 2
  %239 = trunc i16 %238 to i8
  store i8 %239, i8* %236, align 1
  %240 = getelementptr inbounds i8, i8* %0, i64 2
  %241 = getelementptr inbounds i16, i16* %1, i64 2
  %242 = load i16, i16* %241, align 2
  %243 = trunc i16 %242 to i8
  store i8 %243, i8* %240, align 1
  %244 = getelementptr inbounds i8, i8* %0, i64 3
  %245 = getelementptr inbounds i16, i16* %1, i64 3
  %246 = load i16, i16* %245, align 2
  %247 = trunc i16 %246 to i8
  store i8 %247, i8* %244, align 1
  %248 = getelementptr inbounds i8, i8* %0, i64 4
  %249 = getelementptr inbounds i16, i16* %1, i64 4
  %250 = load i16, i16* %249, align 2
  %251 = trunc i16 %250 to i8
  store i8 %251, i8* %248, align 1
  %252 = getelementptr inbounds i8, i8* %0, i64 5
  %253 = getelementptr inbounds i16, i16* %1, i64 5
  %254 = load i16, i16* %253, align 2
  %255 = trunc i16 %254 to i8
  store i8 %255, i8* %252, align 1
  %256 = getelementptr inbounds i8, i8* %0, i64 6
  %257 = getelementptr inbounds i16, i16* %1, i64 6
  %258 = load i16, i16* %257, align 2
  %259 = trunc i16 %258 to i8
  store i8 %259, i8* %256, align 1
  %260 = getelementptr inbounds i8, i8* %0, i64 7
  %261 = getelementptr inbounds i16, i16* %1, i64 7
  %262 = load i16, i16* %261, align 2
  %263 = trunc i16 %262 to i8
  store i8 %263, i8* %260, align 1
  %264 = getelementptr inbounds i8, i8* %0, i64 8
  %265 = getelementptr inbounds i16, i16* %1, i64 8
  %266 = load i16, i16* %265, align 2
  %267 = trunc i16 %266 to i8
  store i8 %267, i8* %264, align 1
  %268 = getelementptr inbounds i8, i8* %0, i64 9
  %269 = getelementptr inbounds i16, i16* %1, i64 9
  %270 = load i16, i16* %269, align 2
  %271 = trunc i16 %270 to i8
  store i8 %271, i8* %268, align 1
  %272 = getelementptr inbounds i8, i8* %0, i64 10
  %273 = getelementptr inbounds i16, i16* %1, i64 10
  %274 = load i16, i16* %273, align 2
  %275 = trunc i16 %274 to i8
  store i8 %275, i8* %272, align 1
  %276 = getelementptr inbounds i8, i8* %0, i64 11
  %277 = getelementptr inbounds i16, i16* %1, i64 11
  %278 = load i16, i16* %277, align 2
  %279 = trunc i16 %278 to i8
  store i8 %279, i8* %276, align 1
  br label %675

280:                                              ; preds = %3
  %281 = load i16, i16* %1, align 2
  %282 = trunc i16 %281 to i8
  store i8 %282, i8* %0, align 1
  %283 = getelementptr inbounds i8, i8* %0, i64 1
  %284 = getelementptr inbounds i16, i16* %1, i64 1
  %285 = load i16, i16* %284, align 2
  %286 = trunc i16 %285 to i8
  store i8 %286, i8* %283, align 1
  %287 = getelementptr inbounds i8, i8* %0, i64 2
  %288 = getelementptr inbounds i16, i16* %1, i64 2
  %289 = load i16, i16* %288, align 2
  %290 = trunc i16 %289 to i8
  store i8 %290, i8* %287, align 1
  %291 = getelementptr inbounds i8, i8* %0, i64 3
  %292 = getelementptr inbounds i16, i16* %1, i64 3
  %293 = load i16, i16* %292, align 2
  %294 = trunc i16 %293 to i8
  store i8 %294, i8* %291, align 1
  %295 = getelementptr inbounds i8, i8* %0, i64 4
  %296 = getelementptr inbounds i16, i16* %1, i64 4
  %297 = load i16, i16* %296, align 2
  %298 = trunc i16 %297 to i8
  store i8 %298, i8* %295, align 1
  %299 = getelementptr inbounds i8, i8* %0, i64 5
  %300 = getelementptr inbounds i16, i16* %1, i64 5
  %301 = load i16, i16* %300, align 2
  %302 = trunc i16 %301 to i8
  store i8 %302, i8* %299, align 1
  %303 = getelementptr inbounds i8, i8* %0, i64 6
  %304 = getelementptr inbounds i16, i16* %1, i64 6
  %305 = load i16, i16* %304, align 2
  %306 = trunc i16 %305 to i8
  store i8 %306, i8* %303, align 1
  %307 = getelementptr inbounds i8, i8* %0, i64 7
  %308 = getelementptr inbounds i16, i16* %1, i64 7
  %309 = load i16, i16* %308, align 2
  %310 = trunc i16 %309 to i8
  store i8 %310, i8* %307, align 1
  %311 = getelementptr inbounds i8, i8* %0, i64 8
  %312 = getelementptr inbounds i16, i16* %1, i64 8
  %313 = load i16, i16* %312, align 2
  %314 = trunc i16 %313 to i8
  store i8 %314, i8* %311, align 1
  %315 = getelementptr inbounds i8, i8* %0, i64 9
  %316 = getelementptr inbounds i16, i16* %1, i64 9
  %317 = load i16, i16* %316, align 2
  %318 = trunc i16 %317 to i8
  store i8 %318, i8* %315, align 1
  %319 = getelementptr inbounds i8, i8* %0, i64 10
  %320 = getelementptr inbounds i16, i16* %1, i64 10
  %321 = load i16, i16* %320, align 2
  %322 = trunc i16 %321 to i8
  store i8 %322, i8* %319, align 1
  br label %675

323:                                              ; preds = %3
  %324 = load i16, i16* %1, align 2
  %325 = trunc i16 %324 to i8
  store i8 %325, i8* %0, align 1
  %326 = getelementptr inbounds i8, i8* %0, i64 1
  %327 = getelementptr inbounds i16, i16* %1, i64 1
  %328 = load i16, i16* %327, align 2
  %329 = trunc i16 %328 to i8
  store i8 %329, i8* %326, align 1
  %330 = getelementptr inbounds i8, i8* %0, i64 2
  %331 = getelementptr inbounds i16, i16* %1, i64 2
  %332 = load i16, i16* %331, align 2
  %333 = trunc i16 %332 to i8
  store i8 %333, i8* %330, align 1
  %334 = getelementptr inbounds i8, i8* %0, i64 3
  %335 = getelementptr inbounds i16, i16* %1, i64 3
  %336 = load i16, i16* %335, align 2
  %337 = trunc i16 %336 to i8
  store i8 %337, i8* %334, align 1
  %338 = getelementptr inbounds i8, i8* %0, i64 4
  %339 = getelementptr inbounds i16, i16* %1, i64 4
  %340 = load i16, i16* %339, align 2
  %341 = trunc i16 %340 to i8
  store i8 %341, i8* %338, align 1
  %342 = getelementptr inbounds i8, i8* %0, i64 5
  %343 = getelementptr inbounds i16, i16* %1, i64 5
  %344 = load i16, i16* %343, align 2
  %345 = trunc i16 %344 to i8
  store i8 %345, i8* %342, align 1
  %346 = getelementptr inbounds i8, i8* %0, i64 6
  %347 = getelementptr inbounds i16, i16* %1, i64 6
  %348 = load i16, i16* %347, align 2
  %349 = trunc i16 %348 to i8
  store i8 %349, i8* %346, align 1
  %350 = getelementptr inbounds i8, i8* %0, i64 7
  %351 = getelementptr inbounds i16, i16* %1, i64 7
  %352 = load i16, i16* %351, align 2
  %353 = trunc i16 %352 to i8
  store i8 %353, i8* %350, align 1
  %354 = getelementptr inbounds i8, i8* %0, i64 8
  %355 = getelementptr inbounds i16, i16* %1, i64 8
  %356 = load i16, i16* %355, align 2
  %357 = trunc i16 %356 to i8
  store i8 %357, i8* %354, align 1
  %358 = getelementptr inbounds i8, i8* %0, i64 9
  %359 = getelementptr inbounds i16, i16* %1, i64 9
  %360 = load i16, i16* %359, align 2
  %361 = trunc i16 %360 to i8
  store i8 %361, i8* %358, align 1
  br label %675

362:                                              ; preds = %3
  %363 = load i16, i16* %1, align 2
  %364 = trunc i16 %363 to i8
  store i8 %364, i8* %0, align 1
  %365 = getelementptr inbounds i8, i8* %0, i64 1
  %366 = getelementptr inbounds i16, i16* %1, i64 1
  %367 = load i16, i16* %366, align 2
  %368 = trunc i16 %367 to i8
  store i8 %368, i8* %365, align 1
  %369 = getelementptr inbounds i8, i8* %0, i64 2
  %370 = getelementptr inbounds i16, i16* %1, i64 2
  %371 = load i16, i16* %370, align 2
  %372 = trunc i16 %371 to i8
  store i8 %372, i8* %369, align 1
  %373 = getelementptr inbounds i8, i8* %0, i64 3
  %374 = getelementptr inbounds i16, i16* %1, i64 3
  %375 = load i16, i16* %374, align 2
  %376 = trunc i16 %375 to i8
  store i8 %376, i8* %373, align 1
  %377 = getelementptr inbounds i8, i8* %0, i64 4
  %378 = getelementptr inbounds i16, i16* %1, i64 4
  %379 = load i16, i16* %378, align 2
  %380 = trunc i16 %379 to i8
  store i8 %380, i8* %377, align 1
  %381 = getelementptr inbounds i8, i8* %0, i64 5
  %382 = getelementptr inbounds i16, i16* %1, i64 5
  %383 = load i16, i16* %382, align 2
  %384 = trunc i16 %383 to i8
  store i8 %384, i8* %381, align 1
  %385 = getelementptr inbounds i8, i8* %0, i64 6
  %386 = getelementptr inbounds i16, i16* %1, i64 6
  %387 = load i16, i16* %386, align 2
  %388 = trunc i16 %387 to i8
  store i8 %388, i8* %385, align 1
  %389 = getelementptr inbounds i8, i8* %0, i64 7
  %390 = getelementptr inbounds i16, i16* %1, i64 7
  %391 = load i16, i16* %390, align 2
  %392 = trunc i16 %391 to i8
  store i8 %392, i8* %389, align 1
  %393 = getelementptr inbounds i8, i8* %0, i64 8
  %394 = getelementptr inbounds i16, i16* %1, i64 8
  %395 = load i16, i16* %394, align 2
  %396 = trunc i16 %395 to i8
  store i8 %396, i8* %393, align 1
  br label %675

397:                                              ; preds = %3
  %398 = load i16, i16* %1, align 2
  %399 = trunc i16 %398 to i8
  store i8 %399, i8* %0, align 1
  %400 = getelementptr inbounds i8, i8* %0, i64 1
  %401 = getelementptr inbounds i16, i16* %1, i64 1
  %402 = load i16, i16* %401, align 2
  %403 = trunc i16 %402 to i8
  store i8 %403, i8* %400, align 1
  %404 = getelementptr inbounds i8, i8* %0, i64 2
  %405 = getelementptr inbounds i16, i16* %1, i64 2
  %406 = load i16, i16* %405, align 2
  %407 = trunc i16 %406 to i8
  store i8 %407, i8* %404, align 1
  %408 = getelementptr inbounds i8, i8* %0, i64 3
  %409 = getelementptr inbounds i16, i16* %1, i64 3
  %410 = load i16, i16* %409, align 2
  %411 = trunc i16 %410 to i8
  store i8 %411, i8* %408, align 1
  %412 = getelementptr inbounds i8, i8* %0, i64 4
  %413 = getelementptr inbounds i16, i16* %1, i64 4
  %414 = load i16, i16* %413, align 2
  %415 = trunc i16 %414 to i8
  store i8 %415, i8* %412, align 1
  %416 = getelementptr inbounds i8, i8* %0, i64 5
  %417 = getelementptr inbounds i16, i16* %1, i64 5
  %418 = load i16, i16* %417, align 2
  %419 = trunc i16 %418 to i8
  store i8 %419, i8* %416, align 1
  %420 = getelementptr inbounds i8, i8* %0, i64 6
  %421 = getelementptr inbounds i16, i16* %1, i64 6
  %422 = load i16, i16* %421, align 2
  %423 = trunc i16 %422 to i8
  store i8 %423, i8* %420, align 1
  %424 = getelementptr inbounds i8, i8* %0, i64 7
  %425 = getelementptr inbounds i16, i16* %1, i64 7
  %426 = load i16, i16* %425, align 2
  %427 = trunc i16 %426 to i8
  store i8 %427, i8* %424, align 1
  br label %675

428:                                              ; preds = %3
  %429 = load i16, i16* %1, align 2
  %430 = trunc i16 %429 to i8
  store i8 %430, i8* %0, align 1
  %431 = getelementptr inbounds i8, i8* %0, i64 1
  %432 = getelementptr inbounds i16, i16* %1, i64 1
  %433 = load i16, i16* %432, align 2
  %434 = trunc i16 %433 to i8
  store i8 %434, i8* %431, align 1
  %435 = getelementptr inbounds i8, i8* %0, i64 2
  %436 = getelementptr inbounds i16, i16* %1, i64 2
  %437 = load i16, i16* %436, align 2
  %438 = trunc i16 %437 to i8
  store i8 %438, i8* %435, align 1
  %439 = getelementptr inbounds i8, i8* %0, i64 3
  %440 = getelementptr inbounds i16, i16* %1, i64 3
  %441 = load i16, i16* %440, align 2
  %442 = trunc i16 %441 to i8
  store i8 %442, i8* %439, align 1
  %443 = getelementptr inbounds i8, i8* %0, i64 4
  %444 = getelementptr inbounds i16, i16* %1, i64 4
  %445 = load i16, i16* %444, align 2
  %446 = trunc i16 %445 to i8
  store i8 %446, i8* %443, align 1
  %447 = getelementptr inbounds i8, i8* %0, i64 5
  %448 = getelementptr inbounds i16, i16* %1, i64 5
  %449 = load i16, i16* %448, align 2
  %450 = trunc i16 %449 to i8
  store i8 %450, i8* %447, align 1
  %451 = getelementptr inbounds i8, i8* %0, i64 6
  %452 = getelementptr inbounds i16, i16* %1, i64 6
  %453 = load i16, i16* %452, align 2
  %454 = trunc i16 %453 to i8
  store i8 %454, i8* %451, align 1
  br label %675

455:                                              ; preds = %3
  %456 = load i16, i16* %1, align 2
  %457 = trunc i16 %456 to i8
  store i8 %457, i8* %0, align 1
  %458 = getelementptr inbounds i8, i8* %0, i64 1
  %459 = getelementptr inbounds i16, i16* %1, i64 1
  %460 = load i16, i16* %459, align 2
  %461 = trunc i16 %460 to i8
  store i8 %461, i8* %458, align 1
  %462 = getelementptr inbounds i8, i8* %0, i64 2
  %463 = getelementptr inbounds i16, i16* %1, i64 2
  %464 = load i16, i16* %463, align 2
  %465 = trunc i16 %464 to i8
  store i8 %465, i8* %462, align 1
  %466 = getelementptr inbounds i8, i8* %0, i64 3
  %467 = getelementptr inbounds i16, i16* %1, i64 3
  %468 = load i16, i16* %467, align 2
  %469 = trunc i16 %468 to i8
  store i8 %469, i8* %466, align 1
  %470 = getelementptr inbounds i8, i8* %0, i64 4
  %471 = getelementptr inbounds i16, i16* %1, i64 4
  %472 = load i16, i16* %471, align 2
  %473 = trunc i16 %472 to i8
  store i8 %473, i8* %470, align 1
  %474 = getelementptr inbounds i8, i8* %0, i64 5
  %475 = getelementptr inbounds i16, i16* %1, i64 5
  %476 = load i16, i16* %475, align 2
  %477 = trunc i16 %476 to i8
  store i8 %477, i8* %474, align 1
  br label %675

478:                                              ; preds = %3
  %479 = load i16, i16* %1, align 2
  %480 = trunc i16 %479 to i8
  store i8 %480, i8* %0, align 1
  %481 = getelementptr inbounds i8, i8* %0, i64 1
  %482 = getelementptr inbounds i16, i16* %1, i64 1
  %483 = load i16, i16* %482, align 2
  %484 = trunc i16 %483 to i8
  store i8 %484, i8* %481, align 1
  %485 = getelementptr inbounds i8, i8* %0, i64 2
  %486 = getelementptr inbounds i16, i16* %1, i64 2
  %487 = load i16, i16* %486, align 2
  %488 = trunc i16 %487 to i8
  store i8 %488, i8* %485, align 1
  %489 = getelementptr inbounds i8, i8* %0, i64 3
  %490 = getelementptr inbounds i16, i16* %1, i64 3
  %491 = load i16, i16* %490, align 2
  %492 = trunc i16 %491 to i8
  store i8 %492, i8* %489, align 1
  %493 = getelementptr inbounds i8, i8* %0, i64 4
  %494 = getelementptr inbounds i16, i16* %1, i64 4
  %495 = load i16, i16* %494, align 2
  %496 = trunc i16 %495 to i8
  store i8 %496, i8* %493, align 1
  br label %675

497:                                              ; preds = %3
  %498 = load i16, i16* %1, align 2
  %499 = trunc i16 %498 to i8
  store i8 %499, i8* %0, align 1
  %500 = getelementptr inbounds i8, i8* %0, i64 1
  %501 = getelementptr inbounds i16, i16* %1, i64 1
  %502 = load i16, i16* %501, align 2
  %503 = trunc i16 %502 to i8
  store i8 %503, i8* %500, align 1
  %504 = getelementptr inbounds i8, i8* %0, i64 2
  %505 = getelementptr inbounds i16, i16* %1, i64 2
  %506 = load i16, i16* %505, align 2
  %507 = trunc i16 %506 to i8
  store i8 %507, i8* %504, align 1
  %508 = getelementptr inbounds i8, i8* %0, i64 3
  %509 = getelementptr inbounds i16, i16* %1, i64 3
  %510 = load i16, i16* %509, align 2
  %511 = trunc i16 %510 to i8
  store i8 %511, i8* %508, align 1
  br label %675

512:                                              ; preds = %3
  %513 = load i16, i16* %1, align 2
  %514 = trunc i16 %513 to i8
  store i8 %514, i8* %0, align 1
  %515 = getelementptr inbounds i8, i8* %0, i64 1
  %516 = getelementptr inbounds i16, i16* %1, i64 1
  %517 = load i16, i16* %516, align 2
  %518 = trunc i16 %517 to i8
  store i8 %518, i8* %515, align 1
  %519 = getelementptr inbounds i8, i8* %0, i64 2
  %520 = getelementptr inbounds i16, i16* %1, i64 2
  %521 = load i16, i16* %520, align 2
  %522 = trunc i16 %521 to i8
  store i8 %522, i8* %519, align 1
  br label %675

523:                                              ; preds = %3
  %524 = load i16, i16* %1, align 2
  %525 = trunc i16 %524 to i8
  store i8 %525, i8* %0, align 1
  %526 = getelementptr inbounds i8, i8* %0, i64 1
  %527 = getelementptr inbounds i16, i16* %1, i64 1
  %528 = load i16, i16* %527, align 2
  %529 = trunc i16 %528 to i8
  store i8 %529, i8* %526, align 1
  br label %675

530:                                              ; preds = %3
  %531 = load i16, i16* %1, align 2
  %532 = trunc i16 %531 to i8
  store i8 %532, i8* %0, align 1
  br label %675

533:                                              ; preds = %3
  %534 = getelementptr inbounds i16, i16* %1, i64 %2
  %535 = icmp eq i64 %2, 0
  br i1 %535, label %675, label %536

536:                                              ; preds = %533
  %537 = shl nsw i64 %2, 1
  %538 = add i64 %537, -2
  %539 = lshr exact i64 %538, 1
  %540 = add nuw i64 %539, 1
  %541 = icmp ult i64 %540, 16
  br i1 %541, label %613, label %542

542:                                              ; preds = %536
  %543 = shl nsw i64 %2, 1
  %544 = add i64 %543, -2
  %545 = lshr exact i64 %544, 1
  %546 = add nuw i64 %545, 1
  %547 = getelementptr i8, i8* %0, i64 %546
  %548 = getelementptr i16, i16* %1, i64 %546
  %549 = bitcast i16* %548 to i8*
  %550 = icmp ugt i8* %549, %0
  %551 = icmp ugt i8* %547, %4
  %552 = and i1 %550, %551
  br i1 %552, label %613, label %553

553:                                              ; preds = %542
  %554 = and i64 %540, -16
  %555 = getelementptr i8, i8* %0, i64 %554
  %556 = getelementptr i16, i16* %1, i64 %554
  %557 = add i64 %554, -16
  %558 = lshr exact i64 %557, 4
  %559 = add nuw nsw i64 %558, 1
  %560 = and i64 %559, 1
  %561 = icmp eq i64 %557, 0
  br i1 %561, label %595, label %562

562:                                              ; preds = %553
  %563 = sub nuw nsw i64 %559, %560
  br label %564

564:                                              ; preds = %564, %562
  %565 = phi i64 [ 0, %562 ], [ %592, %564 ]
  %566 = phi i64 [ %563, %562 ], [ %593, %564 ]
  %567 = getelementptr i8, i8* %0, i64 %565
  %568 = getelementptr i16, i16* %1, i64 %565
  %569 = bitcast i16* %568 to <8 x i16>*
  %570 = load <8 x i16>, <8 x i16>* %569, align 2, !alias.scope !10
  %571 = getelementptr i16, i16* %568, i64 8
  %572 = bitcast i16* %571 to <8 x i16>*
  %573 = load <8 x i16>, <8 x i16>* %572, align 2, !alias.scope !10
  %574 = trunc <8 x i16> %570 to <8 x i8>
  %575 = trunc <8 x i16> %573 to <8 x i8>
  %576 = bitcast i8* %567 to <8 x i8>*
  store <8 x i8> %574, <8 x i8>* %576, align 1, !alias.scope !13, !noalias !10
  %577 = getelementptr i8, i8* %567, i64 8
  %578 = bitcast i8* %577 to <8 x i8>*
  store <8 x i8> %575, <8 x i8>* %578, align 1, !alias.scope !13, !noalias !10
  %579 = or i64 %565, 16
  %580 = getelementptr i8, i8* %0, i64 %579
  %581 = getelementptr i16, i16* %1, i64 %579
  %582 = bitcast i16* %581 to <8 x i16>*
  %583 = load <8 x i16>, <8 x i16>* %582, align 2, !alias.scope !10
  %584 = getelementptr i16, i16* %581, i64 8
  %585 = bitcast i16* %584 to <8 x i16>*
  %586 = load <8 x i16>, <8 x i16>* %585, align 2, !alias.scope !10
  %587 = trunc <8 x i16> %583 to <8 x i8>
  %588 = trunc <8 x i16> %586 to <8 x i8>
  %589 = bitcast i8* %580 to <8 x i8>*
  store <8 x i8> %587, <8 x i8>* %589, align 1, !alias.scope !13, !noalias !10
  %590 = getelementptr i8, i8* %580, i64 8
  %591 = bitcast i8* %590 to <8 x i8>*
  store <8 x i8> %588, <8 x i8>* %591, align 1, !alias.scope !13, !noalias !10
  %592 = add i64 %565, 32
  %593 = add i64 %566, -2
  %594 = icmp eq i64 %593, 0
  br i1 %594, label %595, label %564, !llvm.loop !15

595:                                              ; preds = %564, %553
  %596 = phi i64 [ 0, %553 ], [ %592, %564 ]
  %597 = icmp eq i64 %560, 0
  br i1 %597, label %611, label %598

598:                                              ; preds = %595
  %599 = getelementptr i8, i8* %0, i64 %596
  %600 = getelementptr i16, i16* %1, i64 %596
  %601 = bitcast i16* %600 to <8 x i16>*
  %602 = load <8 x i16>, <8 x i16>* %601, align 2, !alias.scope !10
  %603 = getelementptr i16, i16* %600, i64 8
  %604 = bitcast i16* %603 to <8 x i16>*
  %605 = load <8 x i16>, <8 x i16>* %604, align 2, !alias.scope !10
  %606 = trunc <8 x i16> %602 to <8 x i8>
  %607 = trunc <8 x i16> %605 to <8 x i8>
  %608 = bitcast i8* %599 to <8 x i8>*
  store <8 x i8> %606, <8 x i8>* %608, align 1, !alias.scope !13, !noalias !10
  %609 = getelementptr i8, i8* %599, i64 8
  %610 = bitcast i8* %609 to <8 x i8>*
  store <8 x i8> %607, <8 x i8>* %610, align 1, !alias.scope !13, !noalias !10
  br label %611

611:                                              ; preds = %595, %598
  %612 = icmp eq i64 %540, %554
  br i1 %612, label %675, label %613

613:                                              ; preds = %611, %542, %536
  %614 = phi i8* [ %0, %542 ], [ %0, %536 ], [ %555, %611 ]
  %615 = phi i16* [ %1, %542 ], [ %1, %536 ], [ %556, %611 ]
  %616 = ptrtoint i16* %615 to i64
  %617 = add i64 %2, -1
  %618 = getelementptr i16, i16* %1, i64 %617
  %619 = ptrtoint i16* %618 to i64
  %620 = sub i64 %619, %616
  %621 = lshr i64 %620, 1
  %622 = add nuw i64 %621, 1
  %623 = and i64 %622, 7
  %624 = icmp eq i64 %623, 0
  br i1 %624, label %635, label %625

625:                                              ; preds = %613, %625
  %626 = phi i8* [ %632, %625 ], [ %614, %613 ]
  %627 = phi i16* [ %631, %625 ], [ %615, %613 ]
  %628 = phi i64 [ %633, %625 ], [ %623, %613 ]
  %629 = load i16, i16* %627, align 2
  %630 = trunc i16 %629 to i8
  store i8 %630, i8* %626, align 1
  %631 = getelementptr inbounds i16, i16* %627, i64 1
  %632 = getelementptr inbounds i8, i8* %626, i64 1
  %633 = add i64 %628, -1
  %634 = icmp eq i64 %633, 0
  br i1 %634, label %635, label %625, !llvm.loop !17

635:                                              ; preds = %625, %613
  %636 = phi i8* [ %614, %613 ], [ %632, %625 ]
  %637 = phi i16* [ %615, %613 ], [ %631, %625 ]
  %638 = icmp ult i64 %620, 14
  br i1 %638, label %675, label %639

639:                                              ; preds = %635, %639
  %640 = phi i8* [ %673, %639 ], [ %636, %635 ]
  %641 = phi i16* [ %672, %639 ], [ %637, %635 ]
  %642 = load i16, i16* %641, align 2
  %643 = trunc i16 %642 to i8
  store i8 %643, i8* %640, align 1
  %644 = getelementptr inbounds i16, i16* %641, i64 1
  %645 = getelementptr inbounds i8, i8* %640, i64 1
  %646 = load i16, i16* %644, align 2
  %647 = trunc i16 %646 to i8
  store i8 %647, i8* %645, align 1
  %648 = getelementptr inbounds i16, i16* %641, i64 2
  %649 = getelementptr inbounds i8, i8* %640, i64 2
  %650 = load i16, i16* %648, align 2
  %651 = trunc i16 %650 to i8
  store i8 %651, i8* %649, align 1
  %652 = getelementptr inbounds i16, i16* %641, i64 3
  %653 = getelementptr inbounds i8, i8* %640, i64 3
  %654 = load i16, i16* %652, align 2
  %655 = trunc i16 %654 to i8
  store i8 %655, i8* %653, align 1
  %656 = getelementptr inbounds i16, i16* %641, i64 4
  %657 = getelementptr inbounds i8, i8* %640, i64 4
  %658 = load i16, i16* %656, align 2
  %659 = trunc i16 %658 to i8
  store i8 %659, i8* %657, align 1
  %660 = getelementptr inbounds i16, i16* %641, i64 5
  %661 = getelementptr inbounds i8, i8* %640, i64 5
  %662 = load i16, i16* %660, align 2
  %663 = trunc i16 %662 to i8
  store i8 %663, i8* %661, align 1
  %664 = getelementptr inbounds i16, i16* %641, i64 6
  %665 = getelementptr inbounds i8, i8* %640, i64 6
  %666 = load i16, i16* %664, align 2
  %667 = trunc i16 %666 to i8
  store i8 %667, i8* %665, align 1
  %668 = getelementptr inbounds i16, i16* %641, i64 7
  %669 = getelementptr inbounds i8, i8* %640, i64 7
  %670 = load i16, i16* %668, align 2
  %671 = trunc i16 %670 to i8
  store i8 %671, i8* %669, align 1
  %672 = getelementptr inbounds i16, i16* %641, i64 8
  %673 = getelementptr inbounds i8, i8* %640, i64 8
  %674 = icmp eq i16* %672, %534
  br i1 %674, label %675, label %639, !llvm.loop !19

675:                                              ; preds = %635, %639, %611, %5, %68, %127, %182, %233, %280, %323, %362, %397, %428, %455, %478, %497, %512, %523, %530, %533
  ret void
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE36AllocateRawTwoByteInternalizedStringEij(%"class.v8::internal::FactoryBase"*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EhEEbNS0_6VectorIKT0_EEPNS0_12LocalIsolateE(%"class.v8::internal::String"*, i8*, i64, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #6 comdat align 2 {
  %5 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %6 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.1176* %7 to i8*
  store i8 0, i8* %8, align 8
  %9 = icmp eq %"class.v8::internal::LocalIsolate"* %3, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %3, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %3, i64 0, i32 2
  %16 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 17
  %18 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.v8::base::SharedMutex"* %17, %"class.v8::base::SharedMutex"** %18, align 8
  tail call void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"* %17) #8
  store i8 1, i8* %6, align 8
  br label %19

19:                                               ; preds = %4, %10, %14
  %20 = phi i8 [ 0, %4 ], [ 0, %10 ], [ 1, %14 ]
  %21 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %3, i64 0, i32 2
  %22 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 0, i32 4
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %24, 4294967295
  %28 = icmp eq i64 %27, 0
  tail call void @llvm.assume(i1 %28) #8
  br label %29

29:                                               ; preds = %166, %19
  %30 = phi i64 [ %26, %19 ], [ %172, %166 ]
  %31 = phi i32 [ 0, %19 ], [ %167, %166 ]
  %32 = add i64 %30, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %24, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = and i16 %39, 15
  %41 = zext i16 %40 to i32
  switch i32 %41, label %165 [
    i32 8, label %42
    i32 0, label %49
    i32 10, label %68
    i32 2, label %106
    i32 11, label %156
    i32 3, label %156
    i32 9, label %162
    i32 1, label %162
    i32 13, label %166
    i32 5, label %166
  ]

42:                                               ; preds = %29
  %43 = add i64 %30, 11
  %44 = inttoptr i64 %43 to i8*
  %45 = sext i32 %31 to i64
  %46 = getelementptr inbounds i8, i8* %44, i64 %45
  %47 = tail call i32 @bcmp(i8* %46, i8* %1, i64 %2) #8
  %48 = icmp eq i32 %47, 0
  br label %173

49:                                               ; preds = %29
  %50 = add i64 %30, 11
  %51 = inttoptr i64 %50 to i16*
  %52 = sext i32 %31 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  %54 = getelementptr inbounds i16, i16* %53, i64 %2
  %55 = icmp sgt i64 %2, 0
  br i1 %55, label %56, label %173

56:                                               ; preds = %49, %64
  %57 = phi i16* [ %65, %64 ], [ %53, %49 ]
  %58 = phi i8* [ %66, %64 ], [ %1, %49 ]
  %59 = load i16, i16* %57, align 2
  %60 = zext i16 %59 to i32
  %61 = load i8, i8* %58, align 1
  %62 = zext i8 %61 to i32
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %173

64:                                               ; preds = %56
  %65 = getelementptr inbounds i16, i16* %57, i64 1
  %66 = getelementptr inbounds i8, i8* %58, i64 1
  %67 = icmp ult i16* %65, %54
  br i1 %67, label %56, label %173

68:                                               ; preds = %29
  %69 = inttoptr i64 %32 to i32*
  %70 = and i64 %30, -4294967296
  %71 = load atomic i32, i32* %69 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %70, %72
  %74 = add i64 %73, 7
  %75 = inttoptr i64 %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = and i16 %76, 16
  %78 = icmp eq i16 %77, 0
  %79 = add i64 %30, 11
  %80 = inttoptr i64 %79 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %78, label %93, label %81

81:                                               ; preds = %68
  %82 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %80, align 1
  %83 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %82, i64 0, i32 0
  %84 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %82 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %85 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %84, align 8
  %86 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %85, i64 2
  %87 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.v8::String::ExternalStringResourceBase"* %83) #8
  br i1 %88, label %89, label %93

89:                                               ; preds = %81
  %90 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %80, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %90) #8
  %91 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %90, i64 0, i32 1
  %92 = load i8*, i8** %91, align 8
  br label %100

93:                                               ; preds = %81, %68
  %94 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %80, align 1
  %95 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %94 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %96 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %95, align 8
  %97 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %96, i64 6
  %98 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %97, align 8
  %99 = tail call i8* %98(%"class.v8::String::ExternalOneByteStringResource"* %94) #8
  br label %100

100:                                              ; preds = %93, %89
  %101 = phi i8* [ %92, %89 ], [ %99, %93 ]
  %102 = sext i32 %31 to i64
  %103 = getelementptr inbounds i8, i8* %101, i64 %102
  %104 = tail call i32 @bcmp(i8* %103, i8* %1, i64 %2) #8
  %105 = icmp eq i32 %104, 0
  br label %173

106:                                              ; preds = %29
  %107 = inttoptr i64 %32 to i32*
  %108 = and i64 %30, -4294967296
  %109 = load atomic i32, i32* %107 monotonic, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %108, %110
  %112 = add i64 %111, 7
  %113 = inttoptr i64 %112 to i16*
  %114 = load atomic i16, i16* %113 monotonic, align 2
  %115 = and i16 %114, 16
  %116 = icmp eq i16 %115, 0
  %117 = add i64 %30, 11
  %118 = inttoptr i64 %117 to %"class.v8::String::ExternalStringResource"**
  br i1 %116, label %131, label %119

119:                                              ; preds = %106
  %120 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %118, align 1
  %121 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %120, i64 0, i32 0
  %122 = bitcast %"class.v8::String::ExternalStringResource"* %120 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %123 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %122, align 8
  %124 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %123, i64 2
  %125 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %124, align 8
  %126 = tail call zeroext i1 %125(%"class.v8::String::ExternalStringResourceBase"* %121) #8
  br i1 %126, label %127, label %131

127:                                              ; preds = %119
  %128 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %118, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %128) #8
  %129 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %128, i64 0, i32 1
  %130 = load i16*, i16** %129, align 8
  br label %138

131:                                              ; preds = %119, %106
  %132 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %118, align 1
  %133 = bitcast %"class.v8::String::ExternalStringResource"* %132 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %134 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %133, align 8
  %135 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %134, i64 6
  %136 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %135, align 8
  %137 = tail call i16* %136(%"class.v8::String::ExternalStringResource"* %132) #8
  br label %138

138:                                              ; preds = %131, %127
  %139 = phi i16* [ %130, %127 ], [ %137, %131 ]
  %140 = sext i32 %31 to i64
  %141 = getelementptr inbounds i16, i16* %139, i64 %140
  %142 = getelementptr inbounds i16, i16* %141, i64 %2
  %143 = icmp sgt i64 %2, 0
  br i1 %143, label %144, label %173

144:                                              ; preds = %138, %152
  %145 = phi i16* [ %153, %152 ], [ %141, %138 ]
  %146 = phi i8* [ %154, %152 ], [ %1, %138 ]
  %147 = load i16, i16* %145, align 2
  %148 = zext i16 %147 to i32
  %149 = load i8, i8* %146, align 1
  %150 = zext i8 %149 to i32
  %151 = icmp eq i32 %148, %150
  br i1 %151, label %152, label %173

152:                                              ; preds = %144
  %153 = getelementptr inbounds i16, i16* %145, i64 1
  %154 = getelementptr inbounds i8, i8* %146, i64 1
  %155 = icmp ult i16* %153, %142
  br i1 %155, label %144, label %173

156:                                              ; preds = %29, %29
  %157 = add i64 %30, 15
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = ashr i32 %159, 1
  %161 = add nsw i32 %160, %31
  br label %166

162:                                              ; preds = %29, %29
  %163 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplIhEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %30, i32 %31, i8* %1, i64 %2, i64 %24, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %5) #8
  %164 = load i8, i8* %6, align 8, !range !2
  br label %173

165:                                              ; preds = %29
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

166:                                              ; preds = %156, %29, %29
  %167 = phi i32 [ %161, %156 ], [ %31, %29 ], [ %31, %29 ]
  %168 = add i64 %30, 11
  %169 = inttoptr i64 %168 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = zext i32 %170 to i64
  %172 = or i64 %24, %171
  br label %29

173:                                              ; preds = %144, %152, %56, %64, %42, %49, %100, %138, %162
  %174 = phi i8 [ %20, %138 ], [ %20, %49 ], [ %20, %42 ], [ %20, %100 ], [ %164, %162 ], [ %20, %64 ], [ %20, %56 ], [ %20, %152 ], [ %20, %144 ]
  %175 = phi i1 [ true, %138 ], [ true, %49 ], [ %48, %42 ], [ %105, %100 ], [ %163, %162 ], [ false, %56 ], [ true, %64 ], [ false, %144 ], [ true, %152 ]
  %176 = icmp eq i8 %174, 0
  br i1 %176, label %180, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %179 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %178, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %179) #8
  br label %180

180:                                              ; preds = %173, %177
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret i1 %175
}

declare void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE28NewOneByteInternalizedStringERKNS0_6VectorIKhEEj(%"class.v8::internal::FactoryBase.1055"*, %"class.v8::internal::Vector.1135"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE2EtEEbNS0_6VectorIKT0_EEPNS0_12LocalIsolateE(%"class.v8::internal::String"*, i16*, i64, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #6 comdat align 2 {
  %5 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %6 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.1176* %7 to i8*
  store i8 0, i8* %8, align 8
  %9 = icmp eq %"class.v8::internal::LocalIsolate"* %3, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %3, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %3, i64 0, i32 2
  %16 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 17
  %18 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.v8::base::SharedMutex"* %17, %"class.v8::base::SharedMutex"** %18, align 8
  tail call void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"* %17) #8
  store i8 1, i8* %6, align 8
  br label %19

19:                                               ; preds = %4, %10, %14
  %20 = phi i8 [ 0, %4 ], [ 0, %10 ], [ 1, %14 ]
  %21 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %3, i64 0, i32 2
  %22 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 0, i32 4
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %24, 4294967295
  %28 = icmp eq i64 %27, 0
  tail call void @llvm.assume(i1 %28) #8
  br label %29

29:                                               ; preds = %172, %19
  %30 = phi i64 [ %26, %19 ], [ %178, %172 ]
  %31 = phi i32 [ 0, %19 ], [ %173, %172 ]
  %32 = add i64 %30, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %24, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = and i16 %39, 15
  %41 = zext i16 %40 to i32
  switch i32 %41, label %171 [
    i32 8, label %42
    i32 0, label %61
    i32 10, label %71
    i32 2, label %121
    i32 11, label %162
    i32 3, label %162
    i32 9, label %168
    i32 1, label %168
    i32 13, label %172
    i32 5, label %172
  ]

42:                                               ; preds = %29
  %43 = add i64 %30, 11
  %44 = inttoptr i64 %43 to i8*
  %45 = sext i32 %31 to i64
  %46 = getelementptr inbounds i8, i8* %44, i64 %45
  %47 = getelementptr inbounds i8, i8* %46, i64 %2
  %48 = icmp sgt i64 %2, 0
  br i1 %48, label %49, label %179

49:                                               ; preds = %42, %57
  %50 = phi i8* [ %58, %57 ], [ %46, %42 ]
  %51 = phi i16* [ %59, %57 ], [ %1, %42 ]
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i32
  %54 = load i16, i16* %51, align 2
  %55 = zext i16 %54 to i32
  %56 = icmp eq i32 %53, %55
  br i1 %56, label %57, label %179

57:                                               ; preds = %49
  %58 = getelementptr inbounds i8, i8* %50, i64 1
  %59 = getelementptr inbounds i16, i16* %51, i64 1
  %60 = icmp ult i8* %58, %47
  br i1 %60, label %49, label %179

61:                                               ; preds = %29
  %62 = add i64 %30, 11
  %63 = inttoptr i64 %62 to i16*
  %64 = sext i32 %31 to i64
  %65 = getelementptr inbounds i16, i16* %63, i64 %64
  %66 = bitcast i16* %65 to i8*
  %67 = bitcast i16* %1 to i8*
  %68 = shl i64 %2, 1
  %69 = tail call i32 @bcmp(i8* %66, i8* %67, i64 %68) #8
  %70 = icmp eq i32 %69, 0
  br label %179

71:                                               ; preds = %29
  %72 = inttoptr i64 %32 to i32*
  %73 = and i64 %30, -4294967296
  %74 = load atomic i32, i32* %72 monotonic, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %73, %75
  %77 = add i64 %76, 7
  %78 = inttoptr i64 %77 to i16*
  %79 = load atomic i16, i16* %78 monotonic, align 2
  %80 = and i16 %79, 16
  %81 = icmp eq i16 %80, 0
  %82 = add i64 %30, 11
  %83 = inttoptr i64 %82 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %81, label %96, label %84

84:                                               ; preds = %71
  %85 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %83, align 1
  %86 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %85, i64 0, i32 0
  %87 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %85 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %88 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %87, align 8
  %89 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %88, i64 2
  %90 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %89, align 8
  %91 = tail call zeroext i1 %90(%"class.v8::String::ExternalStringResourceBase"* %86) #8
  br i1 %91, label %92, label %96

92:                                               ; preds = %84
  %93 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %83, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %93) #8
  %94 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %93, i64 0, i32 1
  %95 = load i8*, i8** %94, align 8
  br label %103

96:                                               ; preds = %84, %71
  %97 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %83, align 1
  %98 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %97 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %99 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %98, align 8
  %100 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %99, i64 6
  %101 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %100, align 8
  %102 = tail call i8* %101(%"class.v8::String::ExternalOneByteStringResource"* %97) #8
  br label %103

103:                                              ; preds = %96, %92
  %104 = phi i8* [ %95, %92 ], [ %102, %96 ]
  %105 = sext i32 %31 to i64
  %106 = getelementptr inbounds i8, i8* %104, i64 %105
  %107 = getelementptr inbounds i8, i8* %106, i64 %2
  %108 = icmp sgt i64 %2, 0
  br i1 %108, label %109, label %179

109:                                              ; preds = %103, %117
  %110 = phi i8* [ %118, %117 ], [ %106, %103 ]
  %111 = phi i16* [ %119, %117 ], [ %1, %103 ]
  %112 = load i8, i8* %110, align 1
  %113 = zext i8 %112 to i32
  %114 = load i16, i16* %111, align 2
  %115 = zext i16 %114 to i32
  %116 = icmp eq i32 %113, %115
  br i1 %116, label %117, label %179

117:                                              ; preds = %109
  %118 = getelementptr inbounds i8, i8* %110, i64 1
  %119 = getelementptr inbounds i16, i16* %111, i64 1
  %120 = icmp ult i8* %118, %107
  br i1 %120, label %109, label %179

121:                                              ; preds = %29
  %122 = inttoptr i64 %32 to i32*
  %123 = and i64 %30, -4294967296
  %124 = load atomic i32, i32* %122 monotonic, align 4
  %125 = zext i32 %124 to i64
  %126 = or i64 %123, %125
  %127 = add i64 %126, 7
  %128 = inttoptr i64 %127 to i16*
  %129 = load atomic i16, i16* %128 monotonic, align 2
  %130 = and i16 %129, 16
  %131 = icmp eq i16 %130, 0
  %132 = add i64 %30, 11
  %133 = inttoptr i64 %132 to %"class.v8::String::ExternalStringResource"**
  br i1 %131, label %146, label %134

134:                                              ; preds = %121
  %135 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %133, align 1
  %136 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %135, i64 0, i32 0
  %137 = bitcast %"class.v8::String::ExternalStringResource"* %135 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %138 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %137, align 8
  %139 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %138, i64 2
  %140 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %139, align 8
  %141 = tail call zeroext i1 %140(%"class.v8::String::ExternalStringResourceBase"* %136) #8
  br i1 %141, label %142, label %146

142:                                              ; preds = %134
  %143 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %133, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %143) #8
  %144 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %143, i64 0, i32 1
  %145 = load i16*, i16** %144, align 8
  br label %153

146:                                              ; preds = %134, %121
  %147 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %133, align 1
  %148 = bitcast %"class.v8::String::ExternalStringResource"* %147 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %149 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %148, align 8
  %150 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %149, i64 6
  %151 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %150, align 8
  %152 = tail call i16* %151(%"class.v8::String::ExternalStringResource"* %147) #8
  br label %153

153:                                              ; preds = %146, %142
  %154 = phi i16* [ %145, %142 ], [ %152, %146 ]
  %155 = sext i32 %31 to i64
  %156 = getelementptr inbounds i16, i16* %154, i64 %155
  %157 = bitcast i16* %156 to i8*
  %158 = bitcast i16* %1 to i8*
  %159 = shl i64 %2, 1
  %160 = tail call i32 @bcmp(i8* %157, i8* %158, i64 %159) #8
  %161 = icmp eq i32 %160, 0
  br label %179

162:                                              ; preds = %29, %29
  %163 = add i64 %30, 15
  %164 = inttoptr i64 %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = ashr i32 %165, 1
  %167 = add nsw i32 %166, %31
  br label %172

168:                                              ; preds = %29, %29
  %169 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplItEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %30, i32 %31, i16* %1, i64 %2, i64 %24, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %5) #8
  %170 = load i8, i8* %6, align 8, !range !2
  br label %179

171:                                              ; preds = %29
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

172:                                              ; preds = %162, %29, %29
  %173 = phi i32 [ %167, %162 ], [ %31, %29 ], [ %31, %29 ]
  %174 = add i64 %30, 11
  %175 = inttoptr i64 %174 to i32*
  %176 = load i32, i32* %175, align 4
  %177 = zext i32 %176 to i64
  %178 = or i64 %24, %177
  br label %29

179:                                              ; preds = %109, %117, %49, %57, %42, %61, %103, %153, %168
  %180 = phi i8 [ %20, %103 ], [ %20, %42 ], [ %20, %61 ], [ %20, %153 ], [ %170, %168 ], [ %20, %57 ], [ %20, %49 ], [ %20, %117 ], [ %20, %109 ]
  %181 = phi i1 [ true, %103 ], [ true, %42 ], [ %70, %61 ], [ %161, %153 ], [ %169, %168 ], [ false, %49 ], [ true, %57 ], [ false, %109 ], [ true, %117 ]
  %182 = icmp eq i8 %180, 0
  br i1 %182, label %186, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %185 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %184, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %185) #8
  br label %186

186:                                              ; preds = %179, %183
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret i1 %181
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE28NewTwoByteInternalizedStringERKNS0_6VectorIKtEEj(%"class.v8::internal::FactoryBase.1055"*, %"class.v8::internal::Vector.1137"* dereferenceable(16), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal23StringTableInsertionKey7IsMatchEPNS0_7IsolateENS0_6StringE(%"class.v8::internal::StringTableInsertionKey"*, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #10

declare void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8*, i32, i64) local_unnamed_addr #6 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %97

5:                                                ; preds = %3
  %6 = load i8, i8* %0, align 1
  %7 = zext i8 %6 to i32
  %8 = add nsw i32 %7, -48
  %9 = icmp ult i32 %8, 10
  br i1 %9, label %10, label %90

10:                                               ; preds = %5
  %11 = icmp eq i32 %1, 1
  br i1 %11, label %36, label %12

12:                                               ; preds = %10
  %13 = icmp eq i8 %6, 48
  br i1 %13, label %90, label %14

14:                                               ; preds = %12
  %15 = icmp slt i32 %1, 11
  br i1 %15, label %16, label %39

16:                                               ; preds = %14
  %17 = zext i32 %1 to i64
  br label %18

18:                                               ; preds = %16, %32
  %19 = phi i64 [ 1, %16 ], [ %21, %32 ]
  %20 = phi i32 [ %8, %16 ], [ %34, %32 ]
  %21 = add nuw nsw i64 %19, 1
  %22 = getelementptr inbounds i8, i8* %0, i64 %19
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = add nsw i32 %24, -48
  %26 = icmp ult i32 %25, 10
  br i1 %26, label %27, label %39

27:                                               ; preds = %18
  %28 = add nsw i32 %24, -45
  %29 = ashr i32 %28, 3
  %30 = sub nuw nsw i32 429496729, %29
  %31 = icmp ugt i32 %20, %30
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  %33 = mul i32 %20, 10
  %34 = add i32 %25, %33
  %35 = icmp eq i64 %21, %17
  br i1 %35, label %36, label %18

36:                                               ; preds = %32, %10
  %37 = phi i32 [ %8, %10 ], [ %34, %32 ]
  %38 = tail call i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32 %37, i32 %1) #8
  br label %170

39:                                               ; preds = %18, %27, %14
  %40 = icmp slt i32 %1, 17
  br i1 %40, label %41, label %90

41:                                               ; preds = %39
  %42 = trunc i64 %2 to i32
  %43 = sext i32 %1 to i64
  %44 = getelementptr inbounds i8, i8* %0, i64 %43
  %45 = icmp eq i32 %1, 0
  br i1 %45, label %72, label %46

46:                                               ; preds = %41, %63
  %47 = phi i8* [ %66, %63 ], [ %0, %41 ]
  %48 = phi i32 [ %70, %63 ], [ %42, %41 ]
  %49 = phi i32 [ %65, %63 ], [ 0, %41 ]
  %50 = phi i64 [ %64, %63 ], [ 0, %41 ]
  %51 = icmp eq i32 %49, 0
  %52 = load i8, i8* %47, align 1
  %53 = zext i8 %52 to i32
  br i1 %51, label %54, label %63

54:                                               ; preds = %46
  %55 = add nsw i32 %53, -48
  %56 = icmp ult i32 %55, 10
  br i1 %56, label %57, label %63

57:                                               ; preds = %54
  %58 = mul i64 %50, 10
  %59 = sext i32 %55 to i64
  %60 = add i64 %58, %59
  %61 = icmp ult i64 %60, 9007199254740992
  %62 = select i1 %61, i32 0, i32 2
  br label %63

63:                                               ; preds = %46, %57, %54
  %64 = phi i64 [ %60, %57 ], [ %50, %54 ], [ %50, %46 ]
  %65 = phi i32 [ %62, %57 ], [ 2, %54 ], [ %49, %46 ]
  %66 = getelementptr inbounds i8, i8* %47, i64 1
  %67 = add i32 %48, %53
  %68 = mul i32 %67, 1025
  %69 = lshr i32 %68, 6
  %70 = xor i32 %69, %68
  %71 = icmp eq i8* %66, %44
  br i1 %71, label %72, label %46

72:                                               ; preds = %63, %41
  %73 = phi i32 [ 0, %41 ], [ %65, %63 ]
  %74 = phi i32 [ %42, %41 ], [ %70, %63 ]
  %75 = mul i32 %74, 9
  %76 = lshr i32 %75, 11
  %77 = xor i32 %76, %75
  %78 = mul i32 %77, 32769
  %79 = and i32 %78, 1073741823
  %80 = add nsw i32 %79, -1
  %81 = ashr i32 %80, 31
  %82 = and i32 %81, 27
  %83 = or i32 %82, %78
  %84 = shl i32 %83, 2
  %85 = or i32 %84, %73
  %86 = and i32 %85, -536870910
  %87 = icmp eq i32 %86, 0
  %88 = or i32 %85, 536870912
  %89 = select i1 %87, i32 %88, i32 %85
  br label %170

90:                                               ; preds = %12, %39, %5
  %91 = icmp sgt i32 %1, 16383
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = trunc i64 %2 to i32
  br label %100

94:                                               ; preds = %90
  %95 = shl i32 %1, 2
  %96 = or i32 %95, 2
  br label %170

97:                                               ; preds = %3
  %98 = trunc i64 %2 to i32
  %99 = icmp eq i32 %1, 0
  br i1 %99, label %157, label %100

100:                                              ; preds = %92, %97
  %101 = phi i32 [ %93, %92 ], [ %98, %97 ]
  %102 = sext i32 %1 to i64
  %103 = getelementptr inbounds i8, i8* %0, i64 %102
  %104 = add nsw i64 %102, -1
  %105 = and i64 %102, 3
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %120, label %107

107:                                              ; preds = %100, %107
  %108 = phi i32 [ %117, %107 ], [ %101, %100 ]
  %109 = phi i8* [ %111, %107 ], [ %0, %100 ]
  %110 = phi i64 [ %118, %107 ], [ %105, %100 ]
  %111 = getelementptr inbounds i8, i8* %109, i64 1
  %112 = load i8, i8* %109, align 1
  %113 = zext i8 %112 to i32
  %114 = add i32 %108, %113
  %115 = mul i32 %114, 1025
  %116 = lshr i32 %115, 6
  %117 = xor i32 %116, %115
  %118 = add i64 %110, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %107, !llvm.loop !20

120:                                              ; preds = %107, %100
  %121 = phi i32 [ undef, %100 ], [ %117, %107 ]
  %122 = phi i32 [ %101, %100 ], [ %117, %107 ]
  %123 = phi i8* [ %0, %100 ], [ %111, %107 ]
  %124 = icmp ult i64 %104, 3
  br i1 %124, label %157, label %125

125:                                              ; preds = %120, %125
  %126 = phi i32 [ %155, %125 ], [ %122, %120 ]
  %127 = phi i8* [ %149, %125 ], [ %123, %120 ]
  %128 = getelementptr inbounds i8, i8* %127, i64 1
  %129 = load i8, i8* %127, align 1
  %130 = zext i8 %129 to i32
  %131 = add i32 %126, %130
  %132 = mul i32 %131, 1025
  %133 = lshr i32 %132, 6
  %134 = xor i32 %133, %132
  %135 = getelementptr inbounds i8, i8* %127, i64 2
  %136 = load i8, i8* %128, align 1
  %137 = zext i8 %136 to i32
  %138 = add i32 %134, %137
  %139 = mul i32 %138, 1025
  %140 = lshr i32 %139, 6
  %141 = xor i32 %140, %139
  %142 = getelementptr inbounds i8, i8* %127, i64 3
  %143 = load i8, i8* %135, align 1
  %144 = zext i8 %143 to i32
  %145 = add i32 %141, %144
  %146 = mul i32 %145, 1025
  %147 = lshr i32 %146, 6
  %148 = xor i32 %147, %146
  %149 = getelementptr inbounds i8, i8* %127, i64 4
  %150 = load i8, i8* %142, align 1
  %151 = zext i8 %150 to i32
  %152 = add i32 %148, %151
  %153 = mul i32 %152, 1025
  %154 = lshr i32 %153, 6
  %155 = xor i32 %154, %153
  %156 = icmp eq i8* %149, %103
  br i1 %156, label %157, label %125

157:                                              ; preds = %120, %125, %97
  %158 = phi i32 [ %98, %97 ], [ %121, %120 ], [ %155, %125 ]
  %159 = mul i32 %158, 9
  %160 = lshr i32 %159, 11
  %161 = xor i32 %160, %159
  %162 = mul i32 %161, 32769
  %163 = and i32 %162, 1073741823
  %164 = add nsw i32 %163, -1
  %165 = ashr i32 %164, 31
  %166 = and i32 %165, 27
  %167 = or i32 %166, %162
  %168 = shl i32 %167, 2
  %169 = or i32 %168, 2
  br label %170

170:                                              ; preds = %36, %157, %94, %72
  %171 = phi i32 [ %89, %72 ], [ %96, %94 ], [ %169, %157 ], [ %38, %36 ]
  ret i32 %171
}

declare i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #13

declare void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64, i16*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14StringTableKeyD2Ev(%"class.v8::internal::StringTableKey"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im(i16*, i32, i64) local_unnamed_addr #6 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %97

5:                                                ; preds = %3
  %6 = load i16, i16* %0, align 2
  %7 = zext i16 %6 to i32
  %8 = add nsw i32 %7, -48
  %9 = icmp ult i32 %8, 10
  br i1 %9, label %10, label %90

10:                                               ; preds = %5
  %11 = icmp eq i32 %1, 1
  br i1 %11, label %36, label %12

12:                                               ; preds = %10
  %13 = icmp eq i16 %6, 48
  br i1 %13, label %90, label %14

14:                                               ; preds = %12
  %15 = icmp slt i32 %1, 11
  br i1 %15, label %16, label %39

16:                                               ; preds = %14
  %17 = zext i32 %1 to i64
  br label %18

18:                                               ; preds = %16, %32
  %19 = phi i64 [ 1, %16 ], [ %21, %32 ]
  %20 = phi i32 [ %8, %16 ], [ %34, %32 ]
  %21 = add nuw nsw i64 %19, 1
  %22 = getelementptr inbounds i16, i16* %0, i64 %19
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = add nsw i32 %24, -48
  %26 = icmp ult i32 %25, 10
  br i1 %26, label %27, label %39

27:                                               ; preds = %18
  %28 = add nsw i32 %24, -45
  %29 = ashr i32 %28, 3
  %30 = sub nuw nsw i32 429496729, %29
  %31 = icmp ugt i32 %20, %30
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  %33 = mul i32 %20, 10
  %34 = add i32 %25, %33
  %35 = icmp eq i64 %21, %17
  br i1 %35, label %36, label %18

36:                                               ; preds = %32, %10
  %37 = phi i32 [ %8, %10 ], [ %34, %32 ]
  %38 = tail call i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32 %37, i32 %1) #8
  br label %173

39:                                               ; preds = %18, %27, %14
  %40 = icmp slt i32 %1, 17
  br i1 %40, label %41, label %90

41:                                               ; preds = %39
  %42 = trunc i64 %2 to i32
  %43 = sext i32 %1 to i64
  %44 = getelementptr inbounds i16, i16* %0, i64 %43
  %45 = icmp eq i32 %1, 0
  br i1 %45, label %72, label %46

46:                                               ; preds = %41, %63
  %47 = phi i16* [ %66, %63 ], [ %0, %41 ]
  %48 = phi i32 [ %70, %63 ], [ %42, %41 ]
  %49 = phi i32 [ %65, %63 ], [ 0, %41 ]
  %50 = phi i64 [ %64, %63 ], [ 0, %41 ]
  %51 = icmp eq i32 %49, 0
  %52 = load i16, i16* %47, align 2
  %53 = zext i16 %52 to i32
  br i1 %51, label %54, label %63

54:                                               ; preds = %46
  %55 = add nsw i32 %53, -48
  %56 = icmp ult i32 %55, 10
  br i1 %56, label %57, label %63

57:                                               ; preds = %54
  %58 = mul i64 %50, 10
  %59 = sext i32 %55 to i64
  %60 = add i64 %58, %59
  %61 = icmp ult i64 %60, 9007199254740992
  %62 = select i1 %61, i32 0, i32 2
  br label %63

63:                                               ; preds = %46, %57, %54
  %64 = phi i64 [ %60, %57 ], [ %50, %54 ], [ %50, %46 ]
  %65 = phi i32 [ %62, %57 ], [ 2, %54 ], [ %49, %46 ]
  %66 = getelementptr inbounds i16, i16* %47, i64 1
  %67 = add i32 %48, %53
  %68 = mul i32 %67, 1025
  %69 = lshr i32 %68, 6
  %70 = xor i32 %69, %68
  %71 = icmp eq i16* %66, %44
  br i1 %71, label %72, label %46

72:                                               ; preds = %63, %41
  %73 = phi i32 [ 0, %41 ], [ %65, %63 ]
  %74 = phi i32 [ %42, %41 ], [ %70, %63 ]
  %75 = mul i32 %74, 9
  %76 = lshr i32 %75, 11
  %77 = xor i32 %76, %75
  %78 = mul i32 %77, 32769
  %79 = and i32 %78, 1073741823
  %80 = add nsw i32 %79, -1
  %81 = ashr i32 %80, 31
  %82 = and i32 %81, 27
  %83 = or i32 %82, %78
  %84 = shl i32 %83, 2
  %85 = or i32 %84, %73
  %86 = and i32 %85, -536870910
  %87 = icmp eq i32 %86, 0
  %88 = or i32 %85, 536870912
  %89 = select i1 %87, i32 %88, i32 %85
  br label %173

90:                                               ; preds = %12, %39, %5
  %91 = icmp sgt i32 %1, 16383
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = trunc i64 %2 to i32
  br label %100

94:                                               ; preds = %90
  %95 = shl i32 %1, 2
  %96 = or i32 %95, 2
  br label %173

97:                                               ; preds = %3
  %98 = trunc i64 %2 to i32
  %99 = icmp eq i32 %1, 0
  br i1 %99, label %160, label %100

100:                                              ; preds = %92, %97
  %101 = phi i32 [ %93, %92 ], [ %98, %97 ]
  %102 = sext i32 %1 to i64
  %103 = getelementptr inbounds i16, i16* %0, i64 %102
  %104 = shl nsw i64 %102, 1
  %105 = add nsw i64 %104, -2
  %106 = lshr exact i64 %105, 1
  %107 = add nuw i64 %106, 1
  %108 = and i64 %107, 3
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %123, label %110

110:                                              ; preds = %100, %110
  %111 = phi i32 [ %120, %110 ], [ %101, %100 ]
  %112 = phi i16* [ %114, %110 ], [ %0, %100 ]
  %113 = phi i64 [ %121, %110 ], [ %108, %100 ]
  %114 = getelementptr inbounds i16, i16* %112, i64 1
  %115 = load i16, i16* %112, align 2
  %116 = zext i16 %115 to i32
  %117 = add i32 %111, %116
  %118 = mul i32 %117, 1025
  %119 = lshr i32 %118, 6
  %120 = xor i32 %119, %118
  %121 = add i64 %113, -1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %110, !llvm.loop !21

123:                                              ; preds = %110, %100
  %124 = phi i32 [ undef, %100 ], [ %120, %110 ]
  %125 = phi i32 [ %101, %100 ], [ %120, %110 ]
  %126 = phi i16* [ %0, %100 ], [ %114, %110 ]
  %127 = icmp ult i64 %105, 6
  br i1 %127, label %160, label %128

128:                                              ; preds = %123, %128
  %129 = phi i32 [ %158, %128 ], [ %125, %123 ]
  %130 = phi i16* [ %152, %128 ], [ %126, %123 ]
  %131 = getelementptr inbounds i16, i16* %130, i64 1
  %132 = load i16, i16* %130, align 2
  %133 = zext i16 %132 to i32
  %134 = add i32 %129, %133
  %135 = mul i32 %134, 1025
  %136 = lshr i32 %135, 6
  %137 = xor i32 %136, %135
  %138 = getelementptr inbounds i16, i16* %130, i64 2
  %139 = load i16, i16* %131, align 2
  %140 = zext i16 %139 to i32
  %141 = add i32 %137, %140
  %142 = mul i32 %141, 1025
  %143 = lshr i32 %142, 6
  %144 = xor i32 %143, %142
  %145 = getelementptr inbounds i16, i16* %130, i64 3
  %146 = load i16, i16* %138, align 2
  %147 = zext i16 %146 to i32
  %148 = add i32 %144, %147
  %149 = mul i32 %148, 1025
  %150 = lshr i32 %149, 6
  %151 = xor i32 %150, %149
  %152 = getelementptr inbounds i16, i16* %130, i64 4
  %153 = load i16, i16* %145, align 2
  %154 = zext i16 %153 to i32
  %155 = add i32 %151, %154
  %156 = mul i32 %155, 1025
  %157 = lshr i32 %156, 6
  %158 = xor i32 %157, %156
  %159 = icmp eq i16* %152, %103
  br i1 %159, label %160, label %128

160:                                              ; preds = %123, %128, %97
  %161 = phi i32 [ %98, %97 ], [ %124, %123 ], [ %158, %128 ]
  %162 = mul i32 %161, 9
  %163 = lshr i32 %162, 11
  %164 = xor i32 %163, %162
  %165 = mul i32 %164, 32769
  %166 = and i32 %165, 1073741823
  %167 = add nsw i32 %166, -1
  %168 = ashr i32 %167, 31
  %169 = and i32 %168, 27
  %170 = or i32 %169, %165
  %171 = shl i32 %170, 2
  %172 = or i32 %171, 2
  br label %173

173:                                              ; preds = %36, %160, %94, %72
  %174 = phi i32 [ %89, %72 ], [ %96, %94 ], [ %172, %160 ], [ %38, %36 ]
  ret i32 %174
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i32 17799398}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv: argument 0"}
!6 = distinct !{!6, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv: argument 0"}
!9 = distinct !{!9, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv"}
!10 = !{!11}
!11 = distinct !{!11, !12}
!12 = distinct !{!12, !"LVerDomain"}
!13 = !{!14}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.isvectorized", i32 1}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = distinct !{!19, !16}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !18}
