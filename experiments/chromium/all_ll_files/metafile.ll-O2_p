; ModuleID = '../../printing/metafile.cc'
source_filename = "../../printing/metafile.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.printing::MetafilePlayer" = type { i32 (...)** }
%"class.printing::Metafile" = type { %"class.printing::MetafilePlayer" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm = comdat any

@_ZTVN8printing14MetafilePlayerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.printing::MetafilePlayer"*)* @_ZN8printing14MetafilePlayerD2Ev to i8*), i8* bitcast (void (%"class.printing::MetafilePlayer"*)* @_ZN8printing14MetafilePlayerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN8printing8MetafileE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.printing::MetafilePlayer"*)* @_ZN8printing14MetafilePlayerD2Ev to i8*), i8* bitcast (void (%"class.printing::Metafile"*)* @_ZN8printing8MetafileD0Ev to i8*), i8* bitcast (i1 (%"class.printing::Metafile"*, %"class.std::__1::vector"*)* @_ZNK8printing8Metafile15GetDataAsVectorEPNSt3__16vectorIcNS1_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.printing::Metafile"*, %"class.base::File"*)* @_ZNK8printing8Metafile6SaveToEPN4base4FileE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN8printing14MetafilePlayerD1Ev = hidden unnamed_addr alias void (%"class.printing::MetafilePlayer"*), void (%"class.printing::MetafilePlayer"*)* @_ZN8printing14MetafilePlayerD2Ev
@_ZN8printing8MetafileD2Ev = hidden unnamed_addr alias void (%"class.printing::Metafile"*), bitcast (void (%"class.printing::MetafilePlayer"*)* @_ZN8printing14MetafilePlayerD2Ev to void (%"class.printing::Metafile"*)*)
@_ZN8printing8MetafileD1Ev = hidden unnamed_addr alias void (%"class.printing::Metafile"*), bitcast (void (%"class.printing::MetafilePlayer"*)* @_ZN8printing14MetafilePlayerD2Ev to void (%"class.printing::Metafile"*)*)

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8printing14MetafilePlayerC2Ev(%"class.printing::MetafilePlayer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.printing::MetafilePlayer", %"class.printing::MetafilePlayer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8printing14MetafilePlayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8printing14MetafilePlayerD2Ev(%"class.printing::MetafilePlayer"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN8printing14MetafilePlayerD0Ev(%"class.printing::MetafilePlayer"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8printing8MetafileC2Ev(%"class.printing::Metafile"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.printing::Metafile", %"class.printing::Metafile"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN8printing8MetafileE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN8printing8MetafileD0Ev(%"class.printing::Metafile"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8printing8Metafile15GetDataAsVectorEPNSt3__16vectorIcNS1_9allocatorIcEEEE(%"class.printing::Metafile"*, %"class.std::__1::vector"*) unnamed_addr #4 align 2 {
  %3 = bitcast %"class.printing::Metafile"* %0 to i32 (%"class.printing::Metafile"*)***
  %4 = load i32 (%"class.printing::Metafile"*)**, i32 (%"class.printing::Metafile"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.printing::Metafile"*)*, i32 (%"class.printing::Metafile"*)** %4, i64 9
  %6 = load i32 (%"class.printing::Metafile"*)*, i32 (%"class.printing::Metafile"*)** %5, align 8
  %7 = tail call i32 %6(%"class.printing::Metafile"* %0) #11
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp ult i64 %14, %8
  %16 = inttoptr i64 %13 to i8*
  br i1 %15, label %17, label %24

17:                                               ; preds = %2
  %18 = sub i64 %8, %14
  tail call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %1, i64 %18) #11
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = load i8*, i8** %9, align 8
  %22 = ptrtoint i8* %21 to i64
  %23 = ptrtoint i8* %20 to i64
  br label %30

24:                                               ; preds = %2
  %25 = inttoptr i64 %11 to i8*
  %26 = icmp ugt i64 %14, %8
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = getelementptr inbounds i8, i8* %16, i64 %8
  store i8* %28, i8** %9, align 8
  %29 = ptrtoint i8* %28 to i64
  br label %30

30:                                               ; preds = %17, %24, %27
  %31 = phi i64 [ %23, %17 ], [ %13, %24 ], [ %13, %27 ]
  %32 = phi i64 [ %22, %17 ], [ %11, %24 ], [ %29, %27 ]
  %33 = phi i8* [ %21, %17 ], [ %25, %24 ], [ %28, %27 ]
  %34 = phi i8* [ %20, %17 ], [ %16, %24 ], [ %16, %27 ]
  %35 = icmp eq i8* %34, %33
  br i1 %35, label %47, label %36

36:                                               ; preds = %30
  %37 = sub i64 %32, %31
  %38 = icmp ult i64 %37, 4294967296
  br i1 %38, label %40, label %39, !prof !2

39:                                               ; preds = %36
  tail call void @llvm.trap() #11
  unreachable

40:                                               ; preds = %36
  %41 = trunc i64 %37 to i32
  %42 = bitcast %"class.printing::Metafile"* %0 to i1 (%"class.printing::Metafile"*, i8*, i32)***
  %43 = load i1 (%"class.printing::Metafile"*, i8*, i32)**, i1 (%"class.printing::Metafile"*, i8*, i32)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.printing::Metafile"*, i8*, i32)*, i1 (%"class.printing::Metafile"*, i8*, i32)** %43, i64 10
  %45 = load i1 (%"class.printing::Metafile"*, i8*, i32)*, i1 (%"class.printing::Metafile"*, i8*, i32)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.printing::Metafile"* %0, i8* %34, i32 %41) #11
  br label %47

47:                                               ; preds = %30, %40
  %48 = phi i1 [ %46, %40 ], [ false, %30 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8printing8Metafile6SaveToEPN4base4FileE(%"class.printing::Metafile"*, %"class.base::File"*) unnamed_addr #4 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = tail call zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"* %1) #11
  br i1 %4, label %5, label %30

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #11
  %9 = bitcast %"class.printing::Metafile"* %0 to i1 (%"class.printing::Metafile"*, %"class.std::__1::vector"*)***
  %10 = load i1 (%"class.printing::Metafile"*, %"class.std::__1::vector"*)**, i1 (%"class.printing::Metafile"*, %"class.std::__1::vector"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.printing::Metafile"*, %"class.std::__1::vector"*)*, i1 (%"class.printing::Metafile"*, %"class.std::__1::vector"*)** %10, i64 2
  %12 = load i1 (%"class.printing::Metafile"*, %"class.std::__1::vector"*)*, i1 (%"class.printing::Metafile"*, %"class.std::__1::vector"*)** %11, align 8
  %13 = call zeroext i1 %12(%"class.printing::Metafile"* %0, %"class.std::__1::vector"* nonnull %3) #11
  br i1 %13, label %14, label %22

14:                                               ; preds = %5
  %15 = bitcast %"class.std::__1::vector"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast i8** %8 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %16
  %20 = inttoptr i64 %16 to i8*
  %21 = call zeroext i1 @_ZN4base4File25WriteAtCurrentPosAndCheckENS_4spanIKhLm18446744073709551615EEE(%"class.base::File"* %1, i64 %19, i8* %20) #11
  br label %22

22:                                               ; preds = %14, %5
  %23 = phi i1 [ false, %5 ], [ %21, %14 ]
  %24 = load i8*, i8** %7, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = ptrtoint i8* %24 to i64
  %28 = bitcast i8** %8 to i64*
  store i64 %27, i64* %28, align 8
  call void @_ZdlPv(i8* nonnull %24) #12
  br label %29

29:                                               ; preds = %22, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  br label %30

30:                                               ; preds = %2, %29
  %31 = phi i1 [ %23, %29 ], [ false, %2 ]
  ret i1 %31
}

declare zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

declare zeroext i1 @_ZN4base4File25WriteAtCurrentPosAndCheckENS_4spanIKhLm18446744073709551615EEE(%"class.base::File"*, i64, i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #11
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #10
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #12
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #11
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #11
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #12
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
