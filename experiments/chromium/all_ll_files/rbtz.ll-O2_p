; ModuleID = '../../third_party/icu/source/i18n/rbtz.cpp'
source_filename = "../../third_party/icu/source/i18n/rbtz.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.icu_69::UMutex" = type { [40 x i8], %"struct.std::__1::atomic", %"class.icu_69::UMutex"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.std::__1::mutex"* }
%"class.icu_69::RuleBasedTimeZone" = type <{ %"class.icu_69::BasicTimeZone", %"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::UVector"*, %"class.icu_69::UVector"*, %"class.icu_69::UVector"*, i8, [7 x i8] }>
%"class.icu_69::BasicTimeZone" = type { %"class.icu_69::TimeZone" }
%"class.icu_69::TimeZone" = type { %"class.icu_69::UObject", %"class.icu_69::UnicodeString" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.0, [32 x i8] }
%struct.anon.0 = type { i16, i32, i32, i16* }
%"class.icu_69::UVector" = type { %"class.icu_69::UObject", i32, i32, %union.UElement*, void (i8*)*, i8 (i8*, i8*)* }
%union.UElement = type { i8* }
%"class.icu_69::InitialTimeZoneRule" = type { %"class.icu_69::TimeZoneRule" }
%"class.icu_69::TimeZoneRule" = type { %"class.icu_69::UObject", %"class.icu_69::UnicodeString", i32, i32 }
%"class.icu_69::AnnualTimeZoneRule" = type { %"class.icu_69::TimeZoneRule", %"class.icu_69::DateTimeRule"*, i32, i32 }
%"class.icu_69::DateTimeRule" = type <{ %"class.icu_69::UObject", i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.icu_69::Transition" = type { double, %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"* }
%"class.icu_69::TimeZoneTransition" = type { %"class.icu_69::UObject", double, %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"* }

@_ZZN6icu_6917RuleBasedTimeZone16getStaticClassIDEvE7classID = internal global i8 0, align 1
@_ZTVN6icu_6917RuleBasedTimeZoneE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6917RuleBasedTimeZoneE to i8*), i8* bitcast (void (%"class.icu_69::RuleBasedTimeZone"*)* @_ZN6icu_6917RuleBasedTimeZoneD2Ev to i8*), i8* bitcast (void (%"class.icu_69::RuleBasedTimeZone"*)* @_ZN6icu_6917RuleBasedTimeZoneD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::RuleBasedTimeZone"*)* @_ZNK6icu_6917RuleBasedTimeZone17getDynamicClassIDEv to i8*), i8* bitcast (i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)* @_ZNK6icu_6917RuleBasedTimeZoneeqERKNS_8TimeZoneE to i8*), i8* bitcast (i32 (%"class.icu_69::RuleBasedTimeZone"*, i8, i32, i32, i32, i8, i32, i32*)* @_ZNK6icu_6917RuleBasedTimeZone9getOffsetEhiiihiR10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::RuleBasedTimeZone"*, i8, i32, i32, i32, i8, i32, i32, i32*)* @_ZNK6icu_6917RuleBasedTimeZone9getOffsetEhiiihiiR10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)* @_ZNK6icu_6917RuleBasedTimeZone9getOffsetEdaRiS1_R10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::RuleBasedTimeZone"*, i32)* @_ZN6icu_6917RuleBasedTimeZone12setRawOffsetEi to i8*), i8* bitcast (i32 (%"class.icu_69::RuleBasedTimeZone"*)* @_ZNK6icu_6917RuleBasedTimeZone12getRawOffsetEv to i8*), i8* bitcast (i8 (%"class.icu_69::RuleBasedTimeZone"*)* @_ZNK6icu_6917RuleBasedTimeZone15useDaylightTimeEv to i8*), i8* bitcast (i8 (%"class.icu_69::RuleBasedTimeZone"*, double, i32*)* @_ZNK6icu_6917RuleBasedTimeZone14inDaylightTimeEdR10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)* @_ZNK6icu_6917RuleBasedTimeZone12hasSameRulesERKNS_8TimeZoneE to i8*), i8* bitcast (%"class.icu_69::RuleBasedTimeZone"* (%"class.icu_69::RuleBasedTimeZone"*)* @_ZNK6icu_6917RuleBasedTimeZone5cloneEv to i8*), i8* bitcast (i32 (%"class.icu_69::TimeZone"*)* @_ZNK6icu_698TimeZone13getDSTSavingsEv to i8*), i8* bitcast (i8 (%"class.icu_69::RuleBasedTimeZone"*, double, i8, %"class.icu_69::TimeZoneTransition"*)* @_ZNK6icu_6917RuleBasedTimeZone17getNextTransitionEdaRNS_18TimeZoneTransitionE to i8*), i8* bitcast (i8 (%"class.icu_69::RuleBasedTimeZone"*, double, i8, %"class.icu_69::TimeZoneTransition"*)* @_ZNK6icu_6917RuleBasedTimeZone21getPreviousTransitionEdaRNS_18TimeZoneTransitionE to i8*), i8* bitcast (i8 (%"class.icu_69::BasicTimeZone"*, %"class.icu_69::BasicTimeZone"*, double, double, i8, i32*)* @_ZNK6icu_6913BasicTimeZone24hasEquivalentTransitionsERKS0_ddaR10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::RuleBasedTimeZone"*, i32*)* @_ZNK6icu_6917RuleBasedTimeZone20countTransitionRulesER10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::InitialTimeZoneRule"**, %"class.icu_69::TimeZoneRule"**, i32*, i32*)* @_ZNK6icu_6917RuleBasedTimeZone16getTimeZoneRulesERPKNS_19InitialTimeZoneRuleEPPKNS_12TimeZoneRuleERiR10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::BasicTimeZone"*, double, %"class.icu_69::InitialTimeZoneRule"**, %"class.icu_69::AnnualTimeZoneRule"**, %"class.icu_69::AnnualTimeZoneRule"**, i32*)* @_ZNK6icu_6913BasicTimeZone18getSimpleRulesNearEdRPNS_19InitialTimeZoneRuleERPNS_18AnnualTimeZoneRuleES6_R10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::RuleBasedTimeZone"*, double, i32, i32, i32*, i32*, i32*)* @_ZNK6icu_6917RuleBasedTimeZone18getOffsetFromLocalEd20UTimeZoneLocalOptionS1_RiS2_R10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)* @_ZNK6icu_6917RuleBasedTimeZoneneERKNS_8TimeZoneE to i8*)] }, align 8
@_ZTIN6icu_6912TimeZoneRuleE = external constant i8*
@_ZTIN6icu_6918AnnualTimeZoneRuleE = external constant i8*
@_ZN6icu_6918AnnualTimeZoneRule8MAX_YEARE = external local_unnamed_addr constant i32, align 4
@_ZZNK6icu_6917RuleBasedTimeZone13completeConstER10UErrorCodeE5gLock = internal global { [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* } zeroinitializer, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6917RuleBasedTimeZoneE = hidden constant [29 x i8] c"N6icu_6917RuleBasedTimeZoneE\00", align 1
@_ZTIN6icu_6913BasicTimeZoneE = external constant i8*
@_ZTIN6icu_6917RuleBasedTimeZoneE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6icu_6917RuleBasedTimeZoneE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_6913BasicTimeZoneE to i8*) }, align 8
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZN6icu_695Grego12MONTH_LENGTHE = external local_unnamed_addr constant [24 x i8], align 16

@_ZN6icu_6917RuleBasedTimeZoneC1ERKNS_13UnicodeStringEPNS_19InitialTimeZoneRuleE = hidden unnamed_addr alias void (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::InitialTimeZoneRule"*), void (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::InitialTimeZoneRule"*)* @_ZN6icu_6917RuleBasedTimeZoneC2ERKNS_13UnicodeStringEPNS_19InitialTimeZoneRuleE
@_ZN6icu_6917RuleBasedTimeZoneC1ERKS0_ = hidden unnamed_addr alias void (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::RuleBasedTimeZone"*), void (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::RuleBasedTimeZone"*)* @_ZN6icu_6917RuleBasedTimeZoneC2ERKS0_
@_ZN6icu_6917RuleBasedTimeZoneD1Ev = hidden unnamed_addr alias void (%"class.icu_69::RuleBasedTimeZone"*), void (%"class.icu_69::RuleBasedTimeZone"*)* @_ZN6icu_6917RuleBasedTimeZoneD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8* @_ZN6icu_6917RuleBasedTimeZone16getStaticClassIDEv() local_unnamed_addr #0 align 2 {
  ret i8* @_ZZN6icu_6917RuleBasedTimeZone16getStaticClassIDEvE7classID
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8* @_ZNK6icu_6917RuleBasedTimeZone17getDynamicClassIDEv(%"class.icu_69::RuleBasedTimeZone"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i8* @_ZZN6icu_6917RuleBasedTimeZone16getStaticClassIDEvE7classID
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917RuleBasedTimeZoneC2ERKNS_13UnicodeStringEPNS_19InitialTimeZoneRuleE(%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::InitialTimeZoneRule"*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 0
  tail call void @_ZN6icu_6913BasicTimeZoneC2ERKNS_13UnicodeStringE(%"class.icu_69::BasicTimeZone"* %4, %"class.icu_69::UnicodeString"* dereferenceable(64) %1) #8
  %5 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6icu_6917RuleBasedTimeZoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 1
  store %"class.icu_69::InitialTimeZoneRule"* %2, %"class.icu_69::InitialTimeZoneRule"** %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 2
  %8 = bitcast %"class.icu_69::UVector"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 25, i1 false)
  ret void
}

declare void @_ZN6icu_6913BasicTimeZoneC2ERKNS_13UnicodeStringE(%"class.icu_69::BasicTimeZone"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917RuleBasedTimeZoneC2ERKS0_(%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::RuleBasedTimeZone"* dereferenceable(112)) unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %1, i64 0, i32 0
  tail call void @_ZN6icu_6913BasicTimeZoneC2ERKS0_(%"class.icu_69::BasicTimeZone"* %4, %"class.icu_69::BasicTimeZone"* dereferenceable(72) %5) #8
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6icu_6917RuleBasedTimeZoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %1, i64 0, i32 1
  %9 = load %"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::InitialTimeZoneRule"** %8, align 8
  %10 = bitcast %"class.icu_69::InitialTimeZoneRule"* %9 to %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)***
  %11 = load %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)**, %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)*, %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)** %11, i64 3
  %13 = load %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)*, %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)** %12, align 8
  %14 = tail call %"class.icu_69::InitialTimeZoneRule"* %13(%"class.icu_69::InitialTimeZoneRule"* %9) #8
  store %"class.icu_69::InitialTimeZoneRule"* %14, %"class.icu_69::InitialTimeZoneRule"** %7, align 8
  %15 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 4
  store %"class.icu_69::UVector"* null, %"class.icu_69::UVector"** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 5
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %1, i64 0, i32 2
  %18 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %17, align 8
  %19 = tail call %"class.icu_69::UVector"* @_ZN6icu_6917RuleBasedTimeZone9copyRulesEPNS_7UVectorE(%"class.icu_69::RuleBasedTimeZone"* undef, %"class.icu_69::UVector"* %18)
  %20 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 2
  store %"class.icu_69::UVector"* %19, %"class.icu_69::UVector"** %20, align 8
  %21 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %1, i64 0, i32 3
  %22 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %21, align 8
  %23 = tail call %"class.icu_69::UVector"* @_ZN6icu_6917RuleBasedTimeZone9copyRulesEPNS_7UVectorE(%"class.icu_69::RuleBasedTimeZone"* undef, %"class.icu_69::UVector"* %22)
  %24 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 3
  store %"class.icu_69::UVector"* %23, %"class.icu_69::UVector"** %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %1, i64 0, i32 5
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %2
  %29 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #8
  store i32 0, i32* %3, align 4
  call void @_ZN6icu_6917RuleBasedTimeZone8completeER10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* %0, i32* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #8
  br label %30

30:                                               ; preds = %2, %28
  ret void
}

declare void @_ZN6icu_6913BasicTimeZoneC2ERKS0_(%"class.icu_69::BasicTimeZone"*, %"class.icu_69::BasicTimeZone"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::UVector"* @_ZN6icu_6917RuleBasedTimeZone9copyRulesEPNS_7UVectorE(%"class.icu_69::RuleBasedTimeZone"* nocapture readnone, %"class.icu_69::UVector"*) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = icmp eq %"class.icu_69::UVector"* %1, null
  br i1 %4, label %62, label %5

5:                                                ; preds = %2
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %3, align 4
  %7 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 40) #8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %5
  %12 = bitcast i8* %9 to %"class.icu_69::UVector"*
  call void @_ZN6icu_697UVectorC1EiR10UErrorCode(%"class.icu_69::UVector"* nonnull %12, i32 %8, i32* nonnull dereferenceable(4) %3) #8
  %13 = load i32, i32* %3, align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %15, label %60

15:                                               ; preds = %5, %11
  %16 = phi %"class.icu_69::UVector"* [ %12, %11 ], [ null, %5 ]
  %17 = icmp sgt i32 %8, 0
  br i1 %17, label %18, label %60

18:                                               ; preds = %15, %18
  %19 = phi i32 [ %30, %18 ], [ 0, %15 ]
  %20 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* nonnull %1, i32 %19) #8
  %21 = bitcast i8* %20 to %"class.icu_69::TimeZoneRule"*
  %22 = bitcast i8* %20 to %"class.icu_69::TimeZoneRule"* (%"class.icu_69::TimeZoneRule"*)***
  %23 = load %"class.icu_69::TimeZoneRule"* (%"class.icu_69::TimeZoneRule"*)**, %"class.icu_69::TimeZoneRule"* (%"class.icu_69::TimeZoneRule"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.icu_69::TimeZoneRule"* (%"class.icu_69::TimeZoneRule"*)*, %"class.icu_69::TimeZoneRule"* (%"class.icu_69::TimeZoneRule"*)** %23, i64 3
  %25 = load %"class.icu_69::TimeZoneRule"* (%"class.icu_69::TimeZoneRule"*)*, %"class.icu_69::TimeZoneRule"* (%"class.icu_69::TimeZoneRule"*)** %24, align 8
  %26 = call %"class.icu_69::TimeZoneRule"* %25(%"class.icu_69::TimeZoneRule"* %21) #8
  %27 = bitcast %"class.icu_69::TimeZoneRule"* %26 to i8*
  call void @_ZN6icu_697UVector10addElementEPvR10UErrorCode(%"class.icu_69::UVector"* %16, i8* %27, i32* nonnull dereferenceable(4) %3) #8
  %28 = load i32, i32* %3, align 4
  %29 = icmp slt i32 %28, 1
  %30 = add nuw nsw i32 %19, 1
  %31 = icmp slt i32 %30, %8
  %32 = and i1 %29, %31
  br i1 %32, label %18, label %33

33:                                               ; preds = %18
  %34 = icmp slt i32 %28, 1
  br i1 %34, label %60, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %16, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %53

39:                                               ; preds = %35, %49
  %40 = phi i32 [ %50, %49 ], [ 0, %35 ]
  %41 = call i8* @_ZN6icu_697UVector15orphanElementAtEi(%"class.icu_69::UVector"* %16, i32 %40) #8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %39
  %44 = bitcast i8* %41 to %"class.icu_69::TimeZoneRule"*
  %45 = bitcast i8* %41 to void (%"class.icu_69::TimeZoneRule"*)***
  %46 = load void (%"class.icu_69::TimeZoneRule"*)**, void (%"class.icu_69::TimeZoneRule"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.icu_69::TimeZoneRule"*)*, void (%"class.icu_69::TimeZoneRule"*)** %46, i64 1
  %48 = load void (%"class.icu_69::TimeZoneRule"*)*, void (%"class.icu_69::TimeZoneRule"*)** %47, align 8
  call void %48(%"class.icu_69::TimeZoneRule"* nonnull %44) #8
  br label %49

49:                                               ; preds = %43, %39
  %50 = add nuw nsw i32 %40, 1
  %51 = load i32, i32* %36, align 8
  %52 = icmp slt i32 %50, %51
  br i1 %52, label %39, label %53

53:                                               ; preds = %49, %35
  %54 = icmp eq %"class.icu_69::UVector"* %16, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %53
  %56 = bitcast %"class.icu_69::UVector"* %16 to void (%"class.icu_69::UVector"*)***
  %57 = load void (%"class.icu_69::UVector"*)**, void (%"class.icu_69::UVector"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.icu_69::UVector"*)*, void (%"class.icu_69::UVector"*)** %57, i64 1
  %59 = load void (%"class.icu_69::UVector"*)*, void (%"class.icu_69::UVector"*)** %58, align 8
  call void %59(%"class.icu_69::UVector"* nonnull %16) #8
  br label %60

60:                                               ; preds = %15, %55, %53, %33, %11
  %61 = phi %"class.icu_69::UVector"* [ null, %11 ], [ null, %55 ], [ null, %53 ], [ %16, %33 ], [ %16, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  br label %62

62:                                               ; preds = %2, %60
  %63 = phi %"class.icu_69::UVector"* [ %61, %60 ], [ null, %2 ]
  ret %"class.icu_69::UVector"* %63
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917RuleBasedTimeZone8completeER10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* nocapture, i32* dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %3 = alloca double, align 8
  %4 = alloca %"class.icu_69::UnicodeString", align 8
  %5 = alloca %"class.icu_69::UnicodeString", align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = load i32, i32* %1, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %363

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 5
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %363

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 3
  %16 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %15, align 8
  %17 = icmp eq %"class.icu_69::UVector"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  store i32 27, i32* %1, align 4
  br label %363

23:                                               ; preds = %18, %14
  %24 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 2
  %25 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %24, align 8
  %26 = icmp eq %"class.icu_69::UVector"* %25, null
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  br i1 %17, label %28, label %29

28:                                               ; preds = %27
  store i8 1, i8* %11, align 8
  br label %363

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 1
  %31 = bitcast %"class.icu_69::InitialTimeZoneRule"** %30 to %"class.icu_69::TimeZoneRule"**
  %32 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %31, align 8
  br label %232

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 1
  %35 = bitcast %"class.icu_69::InitialTimeZoneRule"** %34 to %"class.icu_69::TimeZoneRule"**
  %36 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %35, align 8
  %37 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %25, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %226

40:                                               ; preds = %33
  %41 = sext i32 %38 to i64
  %42 = tail call noalias i8* @uprv_malloc_69(i64 %41) #9
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  store i32 7, i32* %1, align 4
  br label %335

45:                                               ; preds = %40
  %46 = zext i32 %38 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %42, i8 0, i64 %46, i1 false)
  %47 = bitcast double* %3 to i8*
  %48 = bitcast %"class.icu_69::UnicodeString"* %4 to i8*
  %49 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 0
  %51 = bitcast %"class.icu_69::UnicodeString"* %5 to i8*
  %52 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 1, i32 0, i32 0
  %54 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 1, i32 0, i32 1
  %55 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 1
  %56 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 4
  %57 = zext i32 %38 to i64
  %58 = zext i32 %38 to i64
  br label %59

59:                                               ; preds = %220, %45
  %60 = phi double [ %222, %220 ], [ 0xC384763B62073280, %45 ]
  %61 = phi %"class.icu_69::TimeZoneRule"* [ %223, %220 ], [ %36, %45 ]
  %62 = call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %61) #8
  %63 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %61) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  store double 0xFFFFFFFFFFFFFFFF, double* %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %48) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 64, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  store i16 2, i16* %50, align 8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %51) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 64, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  store i16 2, i16* %53, align 8
  %64 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6912TimeZoneRule7getNameERNS_13UnicodeStringE(%"class.icu_69::TimeZoneRule"* %61, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %4) #8
  br label %65

65:                                               ; preds = %135, %59
  %66 = phi i64 [ 0, %59 ], [ %138, %135 ]
  %67 = phi %"class.icu_69::TimeZoneRule"* [ null, %59 ], [ %137, %135 ]
  %68 = phi double [ 0x43846A3EDDF8CD80, %59 ], [ %136, %135 ]
  %69 = getelementptr inbounds i8, i8* %42, i64 %66
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %135

72:                                               ; preds = %65
  %73 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %24, align 8
  %74 = trunc i64 %66 to i32
  %75 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %73, i32 %74) #8
  %76 = bitcast i8* %75 to %"class.icu_69::TimeZoneRule"*
  %77 = bitcast i8* %75 to i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)***
  %78 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)**, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*** %77, align 8
  %79 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %78, i64 9
  %80 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %79, align 8
  %81 = call signext i8 %80(%"class.icu_69::TimeZoneRule"* %76, double %60, i32 %62, i32 %63, i8 signext 0, double* nonnull dereferenceable(8) %3) #8
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %72
  store i8 1, i8* %69, align 1
  br label %135

84:                                               ; preds = %72
  %85 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6912TimeZoneRule7getNameERNS_13UnicodeStringE(%"class.icu_69::TimeZoneRule"* %76, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5) #8
  %86 = bitcast i8* %75 to i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)***
  %87 = load i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)**, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*** %86, align 8
  %88 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %87, i64 4
  %89 = load i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %88, align 8
  %90 = call signext i8 %89(%"class.icu_69::TimeZoneRule"* %76, %"class.icu_69::TimeZoneRule"* dereferenceable(80) %61) #8
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %135

92:                                               ; preds = %84
  %93 = load i16, i16* %53, align 8
  %94 = and i16 %93, 1
  %95 = icmp eq i16 %94, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = load i16, i16* %50, align 8
  %98 = trunc i16 %97 to i8
  %99 = and i8 %98, 1
  br label %120

100:                                              ; preds = %92
  %101 = icmp slt i16 %93, 0
  %102 = lshr i16 %93, 5
  %103 = zext i16 %102 to i32
  %104 = load i32, i32* %54, align 4
  %105 = select i1 %101, i32 %104, i32 %103
  %106 = load i16, i16* %50, align 8
  %107 = icmp slt i16 %106, 0
  %108 = lshr i16 %106, 5
  %109 = zext i16 %108 to i32
  %110 = load i32, i32* %55, align 4
  %111 = select i1 %107, i32 %110, i32 %109
  %112 = and i16 %106, 1
  %113 = icmp eq i16 %112, 0
  %114 = icmp eq i32 %105, %111
  %115 = and i1 %113, %114
  br i1 %115, label %116, label %131

116:                                              ; preds = %100
  %117 = call signext i8 @_ZNK6icu_6913UnicodeString8doEqualsERKS0_i(%"class.icu_69::UnicodeString"* nonnull %5, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %4, i32 %105) #8
  %118 = icmp ne i8 %117, 0
  %119 = zext i1 %118 to i8
  br label %120

120:                                              ; preds = %96, %116
  %121 = phi i8 [ %99, %96 ], [ %119, %116 ]
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %120
  %124 = call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %76) #8
  %125 = call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %61) #8
  %126 = icmp eq i32 %124, %125
  br i1 %126, label %127, label %131

127:                                              ; preds = %123
  %128 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %76) #8
  %129 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %61) #8
  %130 = icmp eq i32 %128, %129
  br i1 %130, label %135, label %131

131:                                              ; preds = %100, %120, %127, %123
  %132 = load double, double* %3, align 8
  %133 = fcmp olt double %132, %68
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  br label %135

135:                                              ; preds = %84, %65, %83, %134, %131, %127
  %136 = phi double [ %68, %65 ], [ %68, %84 ], [ %68, %127 ], [ %132, %134 ], [ %68, %131 ], [ %68, %83 ]
  %137 = phi %"class.icu_69::TimeZoneRule"* [ %67, %65 ], [ %67, %84 ], [ %67, %127 ], [ %76, %134 ], [ %67, %131 ], [ %67, %83 ]
  %138 = add nuw nsw i64 %66, 1
  %139 = icmp eq i64 %138, %57
  br i1 %139, label %140, label %65

140:                                              ; preds = %135
  %141 = icmp eq %"class.icu_69::TimeZoneRule"* %137, null
  br i1 %141, label %144, label %150

142:                                              ; preds = %144
  %143 = icmp eq i64 %149, %58
  br i1 %143, label %220, label %144

144:                                              ; preds = %140, %142
  %145 = phi i64 [ %149, %142 ], [ 0, %140 ]
  %146 = getelementptr inbounds i8, i8* %42, i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = icmp eq i8 %147, 0
  %149 = add nuw nsw i64 %145, 1
  br i1 %148, label %150, label %142

150:                                              ; preds = %144, %140
  %151 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %15, align 8
  %152 = icmp eq %"class.icu_69::UVector"* %151, null
  br i1 %152, label %188, label %153

153:                                              ; preds = %150
  %154 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* nonnull %151, i32 0) #8
  %155 = bitcast i8* %154 to %"class.icu_69::TimeZoneRule"*
  %156 = bitcast i8* %154 to i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)***
  %157 = load i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)**, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*** %156, align 8
  %158 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %157, i64 4
  %159 = load i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %158, align 8
  %160 = call signext i8 %159(%"class.icu_69::TimeZoneRule"* %155, %"class.icu_69::TimeZoneRule"* dereferenceable(80) %61) #8
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %162, label %176

162:                                              ; preds = %153
  %163 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %15, align 8
  %164 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %163, i32 0) #8
  %165 = bitcast i8* %164 to %"class.icu_69::TimeZoneRule"*
  %166 = bitcast i8* %164 to i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)***
  %167 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)**, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*** %166, align 8
  %168 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %167, i64 9
  %169 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %168, align 8
  %170 = call signext i8 %169(%"class.icu_69::TimeZoneRule"* %165, double %60, i32 %62, i32 %63, i8 signext 0, double* nonnull dereferenceable(8) %3) #8
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %176, label %172

172:                                              ; preds = %162
  %173 = load double, double* %3, align 8
  %174 = fcmp olt double %173, %136
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  br label %176

176:                                              ; preds = %175, %172, %162, %153
  %177 = phi double [ %136, %153 ], [ %173, %175 ], [ %136, %172 ], [ %136, %162 ]
  %178 = phi %"class.icu_69::TimeZoneRule"* [ %137, %153 ], [ %165, %175 ], [ %137, %172 ], [ %137, %162 ]
  %179 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %15, align 8
  %180 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %179, i32 1) #8
  %181 = bitcast i8* %180 to %"class.icu_69::TimeZoneRule"*
  %182 = bitcast i8* %180 to i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)***
  %183 = load i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)**, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*** %182, align 8
  %184 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %183, i64 4
  %185 = load i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %184, align 8
  %186 = call signext i8 %185(%"class.icu_69::TimeZoneRule"* %181, %"class.icu_69::TimeZoneRule"* dereferenceable(80) %61) #8
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %364, label %188

188:                                              ; preds = %176, %364, %374, %377, %150
  %189 = phi double [ %136, %150 ], [ %177, %176 ], [ %375, %377 ], [ %177, %374 ], [ %177, %364 ]
  %190 = phi %"class.icu_69::TimeZoneRule"* [ %137, %150 ], [ %178, %176 ], [ %367, %377 ], [ %178, %374 ], [ %178, %364 ]
  %191 = icmp eq %"class.icu_69::TimeZoneRule"* %190, null
  br i1 %191, label %220, label %192

192:                                              ; preds = %188
  %193 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %56, align 8
  %194 = icmp eq %"class.icu_69::UVector"* %193, null
  br i1 %194, label %195, label %204

195:                                              ; preds = %192
  %196 = call i8* @_ZN6icu_697UMemorynwEm(i64 40) #8
  %197 = icmp eq i8* %196, null
  br i1 %197, label %200, label %198

198:                                              ; preds = %195
  %199 = bitcast i8* %196 to %"class.icu_69::UVector"*
  call void @_ZN6icu_697UVectorC1ER10UErrorCode(%"class.icu_69::UVector"* nonnull %199, i32* dereferenceable(4) %1) #8
  br label %200

200:                                              ; preds = %198, %195
  %201 = phi %"class.icu_69::UVector"* [ %199, %198 ], [ null, %195 ]
  store %"class.icu_69::UVector"* %201, %"class.icu_69::UVector"** %56, align 8
  %202 = load i32, i32* %1, align 4
  %203 = icmp slt i32 %202, 1
  br i1 %203, label %204, label %220

204:                                              ; preds = %200, %192
  %205 = call noalias i8* @uprv_malloc_69(i64 24) #9
  %206 = icmp eq i8* %205, null
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  store i32 7, i32* %1, align 4
  br label %220

208:                                              ; preds = %204
  %209 = bitcast i8* %205 to double*
  store double %189, double* %209, align 8
  %210 = getelementptr inbounds i8, i8* %205, i64 8
  %211 = bitcast i8* %210 to %"class.icu_69::TimeZoneRule"**
  store %"class.icu_69::TimeZoneRule"* %61, %"class.icu_69::TimeZoneRule"** %211, align 8
  %212 = getelementptr inbounds i8, i8* %205, i64 16
  %213 = bitcast i8* %212 to %"class.icu_69::TimeZoneRule"**
  store %"class.icu_69::TimeZoneRule"* %190, %"class.icu_69::TimeZoneRule"** %213, align 8
  %214 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %56, align 8
  call void @_ZN6icu_697UVector10addElementEPvR10UErrorCode(%"class.icu_69::UVector"* %214, i8* nonnull %205, i32* dereferenceable(4) %1) #8
  %215 = load i32, i32* %1, align 4
  %216 = icmp slt i32 %215, 1
  %217 = select i1 %216, i32 0, i32 2
  %218 = select i1 %216, double %189, double %60
  %219 = select i1 %216, %"class.icu_69::TimeZoneRule"* %190, %"class.icu_69::TimeZoneRule"* %61
  br label %220

220:                                              ; preds = %142, %208, %207, %200, %188
  %221 = phi i32 [ 7, %188 ], [ 2, %200 ], [ 2, %207 ], [ %217, %208 ], [ 7, %142 ]
  %222 = phi double [ %60, %188 ], [ %60, %200 ], [ %60, %207 ], [ %218, %208 ], [ %60, %142 ]
  %223 = phi %"class.icu_69::TimeZoneRule"* [ %61, %188 ], [ %61, %200 ], [ %61, %207 ], [ %219, %208 ], [ %61, %142 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %51) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %48) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  switch i32 %221, label %363 [
    i32 0, label %59
    i32 7, label %224
    i32 2, label %335
  ]

224:                                              ; preds = %220
  %225 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %15, align 8
  br label %226

226:                                              ; preds = %224, %33
  %227 = phi %"class.icu_69::UVector"* [ %16, %33 ], [ %225, %224 ]
  %228 = phi double [ 0xC384763B62073280, %33 ], [ %222, %224 ]
  %229 = phi %"class.icu_69::TimeZoneRule"* [ %36, %33 ], [ %223, %224 ]
  %230 = phi i8* [ null, %33 ], [ %42, %224 ]
  %231 = icmp eq %"class.icu_69::UVector"* %227, null
  br i1 %231, label %331, label %232

232:                                              ; preds = %29, %226
  %233 = phi i8* [ null, %29 ], [ %230, %226 ]
  %234 = phi %"class.icu_69::TimeZoneRule"* [ %32, %29 ], [ %229, %226 ]
  %235 = phi double [ 0xC384763B62073280, %29 ], [ %228, %226 ]
  %236 = phi %"class.icu_69::UVector"* [ %16, %29 ], [ %227, %226 ]
  %237 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 4
  %238 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %237, align 8
  %239 = icmp eq %"class.icu_69::UVector"* %238, null
  br i1 %239, label %240, label %251

240:                                              ; preds = %232
  %241 = call i8* @_ZN6icu_697UMemorynwEm(i64 40) #8
  %242 = icmp eq i8* %241, null
  br i1 %242, label %245, label %243

243:                                              ; preds = %240
  %244 = bitcast i8* %241 to %"class.icu_69::UVector"*
  call void @_ZN6icu_697UVectorC1ER10UErrorCode(%"class.icu_69::UVector"* nonnull %244, i32* dereferenceable(4) %1) #8
  br label %245

245:                                              ; preds = %243, %240
  %246 = phi %"class.icu_69::UVector"* [ %244, %243 ], [ null, %240 ]
  store %"class.icu_69::UVector"* %246, %"class.icu_69::UVector"** %237, align 8
  %247 = load i32, i32* %1, align 4
  %248 = icmp slt i32 %247, 1
  br i1 %248, label %249, label %335

249:                                              ; preds = %245
  %250 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %15, align 8
  br label %251

251:                                              ; preds = %249, %232
  %252 = phi %"class.icu_69::UVector"* [ %250, %249 ], [ %236, %232 ]
  %253 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %252, i32 0) #8
  %254 = bitcast i8* %253 to %"class.icu_69::TimeZoneRule"*
  %255 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %15, align 8
  %256 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %255, i32 1) #8
  %257 = bitcast i8* %256 to %"class.icu_69::TimeZoneRule"*
  %258 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %258) #8
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %259 = bitcast double* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %259) #8
  store double 0xFFFFFFFFFFFFFFFF, double* %7, align 8
  %260 = call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %234) #8
  %261 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %234) #8
  %262 = bitcast i8* %253 to i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)***
  %263 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)**, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*** %262, align 8
  %264 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %263, i64 9
  %265 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %264, align 8
  %266 = call signext i8 %265(%"class.icu_69::TimeZoneRule"* %254, double %235, i32 %260, i32 %261, i8 signext 0, double* nonnull dereferenceable(8) %6) #8
  %267 = call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %234) #8
  %268 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %234) #8
  %269 = bitcast i8* %256 to i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)***
  %270 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)**, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*** %269, align 8
  %271 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %270, i64 9
  %272 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %271, align 8
  %273 = call signext i8 %272(%"class.icu_69::TimeZoneRule"* %257, double %235, i32 %267, i32 %268, i8 signext 0, double* nonnull dereferenceable(8) %7) #8
  %274 = icmp ne i8 %266, 0
  %275 = icmp ne i8 %273, 0
  %276 = and i1 %274, %275
  br i1 %276, label %278, label %277

277:                                              ; preds = %251
  store i32 27, i32* %1, align 4
  br label %329

278:                                              ; preds = %251
  %279 = call noalias i8* @uprv_malloc_69(i64 24) #9
  %280 = icmp eq i8* %279, null
  br i1 %280, label %281, label %282

281:                                              ; preds = %278
  store i32 7, i32* %1, align 4
  br label %329

282:                                              ; preds = %278
  %283 = call noalias i8* @uprv_malloc_69(i64 24) #9
  %284 = icmp eq i8* %283, null
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  call void @uprv_free_69(i8* nonnull %279) #8
  store i32 7, i32* %1, align 4
  br label %329

286:                                              ; preds = %282
  %287 = load double, double* %6, align 8
  %288 = load double, double* %7, align 8
  %289 = fcmp olt double %287, %288
  %290 = bitcast i8* %279 to double*
  br i1 %289, label %291, label %303

291:                                              ; preds = %286
  store double %287, double* %290, align 8
  %292 = getelementptr inbounds i8, i8* %279, i64 8
  %293 = bitcast i8* %292 to %"class.icu_69::TimeZoneRule"**
  store %"class.icu_69::TimeZoneRule"* %234, %"class.icu_69::TimeZoneRule"** %293, align 8
  %294 = getelementptr inbounds i8, i8* %279, i64 16
  %295 = bitcast i8* %294 to i8**
  store i8* %253, i8** %295, align 8
  %296 = call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %254) #8
  %297 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %254) #8
  %298 = bitcast i8* %283 to double*
  %299 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)**, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*** %269, align 8
  %300 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %299, i64 9
  %301 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %300, align 8
  %302 = call signext i8 %301(%"class.icu_69::TimeZoneRule"* %257, double %287, i32 %296, i32 %297, i8 signext 0, double* nonnull dereferenceable(8) %298) #8
  br label %315

303:                                              ; preds = %286
  store double %288, double* %290, align 8
  %304 = getelementptr inbounds i8, i8* %279, i64 8
  %305 = bitcast i8* %304 to %"class.icu_69::TimeZoneRule"**
  store %"class.icu_69::TimeZoneRule"* %234, %"class.icu_69::TimeZoneRule"** %305, align 8
  %306 = getelementptr inbounds i8, i8* %279, i64 16
  %307 = bitcast i8* %306 to i8**
  store i8* %256, i8** %307, align 8
  %308 = call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %257) #8
  %309 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %257) #8
  %310 = bitcast i8* %283 to double*
  %311 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)**, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*** %262, align 8
  %312 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %311, i64 9
  %313 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %312, align 8
  %314 = call signext i8 %313(%"class.icu_69::TimeZoneRule"* %254, double %288, i32 %308, i32 %309, i8 signext 0, double* nonnull dereferenceable(8) %310) #8
  br label %315

315:                                              ; preds = %303, %291
  %316 = phi i8* [ %256, %303 ], [ %253, %291 ]
  %317 = phi i8* [ %253, %303 ], [ %256, %291 ]
  %318 = getelementptr inbounds i8, i8* %283, i64 8
  %319 = bitcast i8* %318 to i8**
  store i8* %316, i8** %319, align 8
  %320 = getelementptr inbounds i8, i8* %283, i64 16
  %321 = bitcast i8* %320 to i8**
  store i8* %317, i8** %321, align 8
  %322 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %237, align 8
  call void @_ZN6icu_697UVector10addElementEPvR10UErrorCode(%"class.icu_69::UVector"* %322, i8* nonnull %279, i32* dereferenceable(4) %1) #8
  %323 = load i32, i32* %1, align 4
  %324 = icmp slt i32 %323, 1
  br i1 %324, label %325, label %329

325:                                              ; preds = %315
  %326 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %237, align 8
  call void @_ZN6icu_697UVector10addElementEPvR10UErrorCode(%"class.icu_69::UVector"* %326, i8* nonnull %283, i32* dereferenceable(4) %1) #8
  %327 = load i32, i32* %1, align 4
  %328 = icmp slt i32 %327, 1
  br i1 %328, label %330, label %329

329:                                              ; preds = %277, %281, %285, %315, %325
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %259) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %258) #8
  br label %335

330:                                              ; preds = %325
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %259) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %258) #8
  br label %331

331:                                              ; preds = %226, %330
  %332 = phi i8* [ %230, %226 ], [ %233, %330 ]
  store i8 1, i8* %11, align 8
  %333 = icmp eq i8* %332, null
  br i1 %333, label %363, label %334

334:                                              ; preds = %331
  call void @uprv_free_69(i8* nonnull %332) #8
  br label %363

335:                                              ; preds = %220, %329, %44, %245
  %336 = phi i8* [ %233, %329 ], [ null, %44 ], [ %233, %245 ], [ %42, %220 ]
  %337 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 4
  %338 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %337, align 8
  %339 = icmp eq %"class.icu_69::UVector"* %338, null
  br i1 %339, label %359, label %340

340:                                              ; preds = %335
  %341 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %338, i64 0, i32 1
  %342 = load i32, i32* %341, align 8
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %353, label %344

344:                                              ; preds = %340, %344
  %345 = phi %"class.icu_69::UVector"* [ %347, %344 ], [ %338, %340 ]
  %346 = call i8* @_ZN6icu_697UVector15orphanElementAtEi(%"class.icu_69::UVector"* %345, i32 0) #8
  call void @uprv_free_69(i8* %346) #8
  %347 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %337, align 8
  %348 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %347, i64 0, i32 1
  %349 = load i32, i32* %348, align 8
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %344

351:                                              ; preds = %344
  %352 = icmp eq %"class.icu_69::UVector"* %347, null
  br i1 %352, label %359, label %353

353:                                              ; preds = %351, %340
  %354 = phi %"class.icu_69::UVector"* [ %347, %351 ], [ %338, %340 ]
  %355 = bitcast %"class.icu_69::UVector"* %354 to void (%"class.icu_69::UVector"*)***
  %356 = load void (%"class.icu_69::UVector"*)**, void (%"class.icu_69::UVector"*)*** %355, align 8
  %357 = getelementptr inbounds void (%"class.icu_69::UVector"*)*, void (%"class.icu_69::UVector"*)** %356, i64 1
  %358 = load void (%"class.icu_69::UVector"*)*, void (%"class.icu_69::UVector"*)** %357, align 8
  call void %358(%"class.icu_69::UVector"* nonnull %354) #8
  br label %359

359:                                              ; preds = %335, %351, %353
  store %"class.icu_69::UVector"* null, %"class.icu_69::UVector"** %337, align 8
  %360 = icmp eq i8* %336, null
  br i1 %360, label %362, label %361

361:                                              ; preds = %359
  call void @uprv_free_69(i8* nonnull %336) #8
  br label %362

362:                                              ; preds = %359, %361
  store i8 0, i8* %11, align 8
  br label %363

363:                                              ; preds = %220, %28, %362, %331, %334, %10, %2, %22
  ret void

364:                                              ; preds = %176
  %365 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %15, align 8
  %366 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %365, i32 1) #8
  %367 = bitcast i8* %366 to %"class.icu_69::TimeZoneRule"*
  %368 = bitcast i8* %366 to i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)***
  %369 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)**, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*** %368, align 8
  %370 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %369, i64 9
  %371 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %370, align 8
  %372 = call signext i8 %371(%"class.icu_69::TimeZoneRule"* %367, double %60, i32 %62, i32 %63, i8 signext 0, double* nonnull dereferenceable(8) %3) #8
  %373 = icmp eq i8 %372, 0
  br i1 %373, label %188, label %374

374:                                              ; preds = %364
  %375 = load double, double* %3, align 8
  %376 = fcmp olt double %375, %177
  br i1 %376, label %377, label %188

377:                                              ; preds = %374
  br label %188
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917RuleBasedTimeZoneD2Ev(%"class.icu_69::RuleBasedTimeZone"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6icu_6917RuleBasedTimeZoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 4
  %4 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %3, align 8
  %5 = icmp eq %"class.icu_69::UVector"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.icu_69::UVector"* [ %13, %10 ], [ %4, %6 ]
  %12 = tail call i8* @_ZN6icu_697UVector15orphanElementAtEi(%"class.icu_69::UVector"* %11, i32 0) #8
  tail call void @uprv_free_69(i8* %12) #8
  %13 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %10

17:                                               ; preds = %10
  %18 = icmp eq %"class.icu_69::UVector"* %13, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %17, %6
  %20 = phi %"class.icu_69::UVector"* [ %13, %17 ], [ %4, %6 ]
  %21 = bitcast %"class.icu_69::UVector"* %20 to void (%"class.icu_69::UVector"*)***
  %22 = load void (%"class.icu_69::UVector"*)**, void (%"class.icu_69::UVector"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.icu_69::UVector"*)*, void (%"class.icu_69::UVector"*)** %22, i64 1
  %24 = load void (%"class.icu_69::UVector"*)*, void (%"class.icu_69::UVector"*)** %23, align 8
  tail call void %24(%"class.icu_69::UVector"* nonnull %20) #8
  br label %25

25:                                               ; preds = %1, %17, %19
  store %"class.icu_69::UVector"* null, %"class.icu_69::UVector"** %3, align 8
  tail call void @_ZN6icu_6917RuleBasedTimeZone11deleteRulesEv(%"class.icu_69::RuleBasedTimeZone"* %0)
  %26 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 0
  tail call void @_ZN6icu_6913BasicTimeZoneD2Ev(%"class.icu_69::BasicTimeZone"* %26) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917RuleBasedTimeZone17deleteTransitionsEv(%"class.icu_69::RuleBasedTimeZone"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 4
  %3 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %2, align 8
  %4 = icmp eq %"class.icu_69::UVector"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %5, %9
  %10 = phi %"class.icu_69::UVector"* [ %12, %9 ], [ %3, %5 ]
  %11 = tail call i8* @_ZN6icu_697UVector15orphanElementAtEi(%"class.icu_69::UVector"* %10, i32 0) #8
  tail call void @uprv_free_69(i8* %11) #8
  %12 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %2, align 8
  %13 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %9

16:                                               ; preds = %9
  %17 = icmp eq %"class.icu_69::UVector"* %12, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %5, %16
  %19 = phi %"class.icu_69::UVector"* [ %12, %16 ], [ %3, %5 ]
  %20 = bitcast %"class.icu_69::UVector"* %19 to void (%"class.icu_69::UVector"*)***
  %21 = load void (%"class.icu_69::UVector"*)**, void (%"class.icu_69::UVector"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.icu_69::UVector"*)*, void (%"class.icu_69::UVector"*)** %21, i64 1
  %23 = load void (%"class.icu_69::UVector"*)*, void (%"class.icu_69::UVector"*)** %22, align 8
  tail call void %23(%"class.icu_69::UVector"* nonnull %19) #8
  br label %24

24:                                               ; preds = %1, %16, %18
  store %"class.icu_69::UVector"* null, %"class.icu_69::UVector"** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917RuleBasedTimeZone11deleteRulesEv(%"class.icu_69::RuleBasedTimeZone"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 1
  %3 = load %"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::InitialTimeZoneRule"** %2, align 8
  %4 = icmp eq %"class.icu_69::InitialTimeZoneRule"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.icu_69::InitialTimeZoneRule"* %3 to void (%"class.icu_69::InitialTimeZoneRule"*)***
  %7 = load void (%"class.icu_69::InitialTimeZoneRule"*)**, void (%"class.icu_69::InitialTimeZoneRule"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.icu_69::InitialTimeZoneRule"*)*, void (%"class.icu_69::InitialTimeZoneRule"*)** %7, i64 1
  %9 = load void (%"class.icu_69::InitialTimeZoneRule"*)*, void (%"class.icu_69::InitialTimeZoneRule"*)** %8, align 8
  tail call void %9(%"class.icu_69::InitialTimeZoneRule"* nonnull %3) #8
  br label %10

10:                                               ; preds = %5, %1
  store %"class.icu_69::InitialTimeZoneRule"* null, %"class.icu_69::InitialTimeZoneRule"** %2, align 8
  %11 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 2
  %12 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %11, align 8
  %13 = icmp eq %"class.icu_69::UVector"* %12, null
  br i1 %13, label %42, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %35, label %18

18:                                               ; preds = %14, %28
  %19 = phi %"class.icu_69::UVector"* [ %29, %28 ], [ %12, %14 ]
  %20 = tail call i8* @_ZN6icu_697UVector15orphanElementAtEi(%"class.icu_69::UVector"* %19, i32 0) #8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18
  %23 = bitcast i8* %20 to %"class.icu_69::TimeZoneRule"*
  %24 = bitcast i8* %20 to void (%"class.icu_69::TimeZoneRule"*)***
  %25 = load void (%"class.icu_69::TimeZoneRule"*)**, void (%"class.icu_69::TimeZoneRule"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.icu_69::TimeZoneRule"*)*, void (%"class.icu_69::TimeZoneRule"*)** %25, i64 1
  %27 = load void (%"class.icu_69::TimeZoneRule"*)*, void (%"class.icu_69::TimeZoneRule"*)** %26, align 8
  tail call void %27(%"class.icu_69::TimeZoneRule"* nonnull %23) #8
  br label %28

28:                                               ; preds = %22, %18
  %29 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %11, align 8
  %30 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %29, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %18

33:                                               ; preds = %28
  %34 = icmp eq %"class.icu_69::UVector"* %29, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %14, %33
  %36 = phi %"class.icu_69::UVector"* [ %29, %33 ], [ %12, %14 ]
  %37 = bitcast %"class.icu_69::UVector"* %36 to void (%"class.icu_69::UVector"*)***
  %38 = load void (%"class.icu_69::UVector"*)**, void (%"class.icu_69::UVector"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.icu_69::UVector"*)*, void (%"class.icu_69::UVector"*)** %38, i64 1
  %40 = load void (%"class.icu_69::UVector"*)*, void (%"class.icu_69::UVector"*)** %39, align 8
  tail call void %40(%"class.icu_69::UVector"* nonnull %36) #8
  br label %41

41:                                               ; preds = %35, %33
  store %"class.icu_69::UVector"* null, %"class.icu_69::UVector"** %11, align 8
  br label %42

42:                                               ; preds = %10, %41
  %43 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 3
  %44 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %43, align 8
  %45 = icmp eq %"class.icu_69::UVector"* %44, null
  br i1 %45, label %74, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %44, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %67, label %50

50:                                               ; preds = %46, %60
  %51 = phi %"class.icu_69::UVector"* [ %61, %60 ], [ %44, %46 ]
  %52 = tail call i8* @_ZN6icu_697UVector15orphanElementAtEi(%"class.icu_69::UVector"* %51, i32 0) #8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = bitcast i8* %52 to %"class.icu_69::AnnualTimeZoneRule"*
  %56 = bitcast i8* %52 to void (%"class.icu_69::AnnualTimeZoneRule"*)***
  %57 = load void (%"class.icu_69::AnnualTimeZoneRule"*)**, void (%"class.icu_69::AnnualTimeZoneRule"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.icu_69::AnnualTimeZoneRule"*)*, void (%"class.icu_69::AnnualTimeZoneRule"*)** %57, i64 1
  %59 = load void (%"class.icu_69::AnnualTimeZoneRule"*)*, void (%"class.icu_69::AnnualTimeZoneRule"*)** %58, align 8
  tail call void %59(%"class.icu_69::AnnualTimeZoneRule"* nonnull %55) #8
  br label %60

60:                                               ; preds = %54, %50
  %61 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %43, align 8
  %62 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %61, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %50

65:                                               ; preds = %60
  %66 = icmp eq %"class.icu_69::UVector"* %61, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %46, %65
  %68 = phi %"class.icu_69::UVector"* [ %61, %65 ], [ %44, %46 ]
  %69 = bitcast %"class.icu_69::UVector"* %68 to void (%"class.icu_69::UVector"*)***
  %70 = load void (%"class.icu_69::UVector"*)**, void (%"class.icu_69::UVector"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.icu_69::UVector"*)*, void (%"class.icu_69::UVector"*)** %70, i64 1
  %72 = load void (%"class.icu_69::UVector"*)*, void (%"class.icu_69::UVector"*)** %71, align 8
  tail call void %72(%"class.icu_69::UVector"* nonnull %68) #8
  br label %73

73:                                               ; preds = %67, %65
  store %"class.icu_69::UVector"* null, %"class.icu_69::UVector"** %43, align 8
  br label %74

74:                                               ; preds = %42, %73
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_6913BasicTimeZoneD2Ev(%"class.icu_69::BasicTimeZone"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917RuleBasedTimeZoneD0Ev(%"class.icu_69::RuleBasedTimeZone"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6icu_6917RuleBasedTimeZoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 4
  %4 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %3, align 8
  %5 = icmp eq %"class.icu_69::UVector"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.icu_69::UVector"* [ %13, %10 ], [ %4, %6 ]
  %12 = tail call i8* @_ZN6icu_697UVector15orphanElementAtEi(%"class.icu_69::UVector"* %11, i32 0) #8
  tail call void @uprv_free_69(i8* %12) #8
  %13 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %10

17:                                               ; preds = %10
  %18 = icmp eq %"class.icu_69::UVector"* %13, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %17, %6
  %20 = phi %"class.icu_69::UVector"* [ %13, %17 ], [ %4, %6 ]
  %21 = bitcast %"class.icu_69::UVector"* %20 to void (%"class.icu_69::UVector"*)***
  %22 = load void (%"class.icu_69::UVector"*)**, void (%"class.icu_69::UVector"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.icu_69::UVector"*)*, void (%"class.icu_69::UVector"*)** %22, i64 1
  %24 = load void (%"class.icu_69::UVector"*)*, void (%"class.icu_69::UVector"*)** %23, align 8
  tail call void %24(%"class.icu_69::UVector"* nonnull %20) #8
  br label %25

25:                                               ; preds = %1, %17, %19
  store %"class.icu_69::UVector"* null, %"class.icu_69::UVector"** %3, align 8
  tail call void @_ZN6icu_6917RuleBasedTimeZone11deleteRulesEv(%"class.icu_69::RuleBasedTimeZone"* %0) #8
  %26 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 0
  tail call void @_ZN6icu_6913BasicTimeZoneD2Ev(%"class.icu_69::BasicTimeZone"* %26) #8
  %27 = bitcast %"class.icu_69::RuleBasedTimeZone"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %27) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(112) %"class.icu_69::RuleBasedTimeZone"* @_ZN6icu_6917RuleBasedTimeZoneaSERKS0_(%"class.icu_69::RuleBasedTimeZone"* returned, %"class.icu_69::RuleBasedTimeZone"* dereferenceable(112)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.icu_69::RuleBasedTimeZone"* %0 to i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)***
  %5 = load i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)**, i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)*** %4, align 8
  %6 = getelementptr inbounds i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)*, i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)** %5, i64 21
  %7 = load i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)*, i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)** %6, align 8
  %8 = tail call signext i8 %7(%"class.icu_69::RuleBasedTimeZone"* %0, %"class.icu_69::TimeZone"* dereferenceable(72) %3) #8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %53, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 0, i32 0
  %12 = tail call dereferenceable(72) %"class.icu_69::TimeZone"* @_ZN6icu_698TimeZoneaSERKS0_(%"class.icu_69::TimeZone"* %11, %"class.icu_69::TimeZone"* dereferenceable(72) %3) #8
  tail call void @_ZN6icu_6917RuleBasedTimeZone11deleteRulesEv(%"class.icu_69::RuleBasedTimeZone"* %0)
  %13 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %1, i64 0, i32 1
  %14 = load %"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::InitialTimeZoneRule"** %13, align 8
  %15 = bitcast %"class.icu_69::InitialTimeZoneRule"* %14 to %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)***
  %16 = load %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)**, %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)*, %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)** %16, i64 3
  %18 = load %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)*, %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)** %17, align 8
  %19 = tail call %"class.icu_69::InitialTimeZoneRule"* %18(%"class.icu_69::InitialTimeZoneRule"* %14) #8
  %20 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 1
  store %"class.icu_69::InitialTimeZoneRule"* %19, %"class.icu_69::InitialTimeZoneRule"** %20, align 8
  %21 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %1, i64 0, i32 2
  %22 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %21, align 8
  %23 = tail call %"class.icu_69::UVector"* @_ZN6icu_6917RuleBasedTimeZone9copyRulesEPNS_7UVectorE(%"class.icu_69::RuleBasedTimeZone"* undef, %"class.icu_69::UVector"* %22)
  %24 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 2
  store %"class.icu_69::UVector"* %23, %"class.icu_69::UVector"** %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %1, i64 0, i32 3
  %26 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %25, align 8
  %27 = tail call %"class.icu_69::UVector"* @_ZN6icu_6917RuleBasedTimeZone9copyRulesEPNS_7UVectorE(%"class.icu_69::RuleBasedTimeZone"* undef, %"class.icu_69::UVector"* %26)
  %28 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 3
  store %"class.icu_69::UVector"* %27, %"class.icu_69::UVector"** %28, align 8
  %29 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 4
  %30 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %29, align 8
  %31 = icmp eq %"class.icu_69::UVector"* %30, null
  br i1 %31, label %51, label %32

32:                                               ; preds = %10
  %33 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %30, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %32, %36
  %37 = phi %"class.icu_69::UVector"* [ %39, %36 ], [ %30, %32 ]
  %38 = tail call i8* @_ZN6icu_697UVector15orphanElementAtEi(%"class.icu_69::UVector"* %37, i32 0) #8
  tail call void @uprv_free_69(i8* %38) #8
  %39 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %29, align 8
  %40 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %39, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %36

43:                                               ; preds = %36
  %44 = icmp eq %"class.icu_69::UVector"* %39, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %43, %32
  %46 = phi %"class.icu_69::UVector"* [ %39, %43 ], [ %30, %32 ]
  %47 = bitcast %"class.icu_69::UVector"* %46 to void (%"class.icu_69::UVector"*)***
  %48 = load void (%"class.icu_69::UVector"*)**, void (%"class.icu_69::UVector"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.icu_69::UVector"*)*, void (%"class.icu_69::UVector"*)** %48, i64 1
  %50 = load void (%"class.icu_69::UVector"*)*, void (%"class.icu_69::UVector"*)** %49, align 8
  tail call void %50(%"class.icu_69::UVector"* nonnull %46) #8
  br label %51

51:                                               ; preds = %10, %43, %45
  store %"class.icu_69::UVector"* null, %"class.icu_69::UVector"** %29, align 8
  %52 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 5
  store i8 0, i8* %52, align 8
  br label %53

53:                                               ; preds = %2, %51
  ret %"class.icu_69::RuleBasedTimeZone"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6917RuleBasedTimeZoneeqERKNS_8TimeZoneE(%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"* dereferenceable(72)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 0, i32 0
  %4 = icmp eq %"class.icu_69::TimeZone"* %3, %1
  br i1 %4, label %105, label %5

5:                                                ; preds = %2
  %6 = icmp eq %"class.icu_69::RuleBasedTimeZone"* %0, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @__cxa_bad_typeid() #10
  unreachable

8:                                                ; preds = %5
  %9 = bitcast %"class.icu_69::RuleBasedTimeZone"* %0 to %"class.std::type_info"***
  %10 = load %"class.std::type_info"**, %"class.std::type_info"*** %9, align 8
  %11 = getelementptr inbounds %"class.std::type_info"*, %"class.std::type_info"** %10, i64 -1
  %12 = load %"class.std::type_info"*, %"class.std::type_info"** %11, align 8
  %13 = bitcast %"class.icu_69::TimeZone"* %1 to %"class.std::type_info"***
  %14 = load %"class.std::type_info"**, %"class.std::type_info"*** %13, align 8
  %15 = getelementptr inbounds %"class.std::type_info"*, %"class.std::type_info"** %14, i64 -1
  %16 = load %"class.std::type_info"*, %"class.std::type_info"** %15, align 8
  %17 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %12, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %16, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %18, %20
  br i1 %21, label %22, label %105

22:                                               ; preds = %8
  %23 = tail call signext i8 @_ZNK6icu_698TimeZoneeqERKS0_(%"class.icu_69::TimeZone"* %3, %"class.icu_69::TimeZone"* dereferenceable(72) %1) #8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %105, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 1
  %27 = load %"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::InitialTimeZoneRule"** %26, align 8
  %28 = getelementptr inbounds %"class.icu_69::TimeZone", %"class.icu_69::TimeZone"* %1, i64 1
  %29 = bitcast %"class.icu_69::TimeZone"* %28 to %"class.icu_69::TimeZoneRule"**
  %30 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %29, align 8
  %31 = bitcast %"class.icu_69::InitialTimeZoneRule"* %27 to i8 (%"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)***
  %32 = load i8 (%"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)**, i8 (%"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*** %31, align 8
  %33 = getelementptr inbounds i8 (%"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %32, i64 5
  %34 = load i8 (%"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %33, align 8
  %35 = tail call signext i8 %34(%"class.icu_69::InitialTimeZoneRule"* %27, %"class.icu_69::TimeZoneRule"* dereferenceable(80) %30) #8
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %105

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 2
  %39 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %38, align 8
  %40 = getelementptr inbounds %"class.icu_69::TimeZone", %"class.icu_69::TimeZone"* %1, i64 1, i32 1
  %41 = bitcast %"class.icu_69::UnicodeString"* %40 to %"class.icu_69::UVector"**
  %42 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %41, align 8
  %43 = icmp eq %"class.icu_69::UVector"* %39, null
  %44 = icmp eq %"class.icu_69::UVector"* %42, null
  %45 = and i1 %43, %44
  br i1 %45, label %71, label %46

46:                                               ; preds = %37
  %47 = or i1 %43, %44
  br i1 %47, label %105, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %39, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %42, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %105

54:                                               ; preds = %48
  %55 = icmp sgt i32 %50, 0
  br i1 %55, label %58, label %71

56:                                               ; preds = %58
  %57 = icmp eq i32 %70, %50
  br i1 %57, label %71, label %58

58:                                               ; preds = %54, %56
  %59 = phi i32 [ %70, %56 ], [ 0, %54 ]
  %60 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %39, i32 %59) #8
  %61 = bitcast i8* %60 to %"class.icu_69::TimeZoneRule"*
  %62 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %42, i32 %59) #8
  %63 = bitcast i8* %62 to %"class.icu_69::TimeZoneRule"*
  %64 = bitcast i8* %60 to i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)***
  %65 = load i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)**, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*** %64, align 8
  %66 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %65, i64 5
  %67 = load i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %66, align 8
  %68 = tail call signext i8 %67(%"class.icu_69::TimeZoneRule"* %61, %"class.icu_69::TimeZoneRule"* dereferenceable(80) %63) #8
  %69 = icmp eq i8 %68, 0
  %70 = add nuw nsw i32 %59, 1
  br i1 %69, label %56, label %105

71:                                               ; preds = %56, %54, %37
  %72 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 3
  %73 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %72, align 8
  %74 = getelementptr inbounds %"class.icu_69::TimeZone", %"class.icu_69::TimeZone"* %1, i64 1, i32 1, i32 1
  %75 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %74 to %"class.icu_69::UVector"**
  %76 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %75, align 8
  %77 = icmp eq %"class.icu_69::UVector"* %73, null
  %78 = icmp eq %"class.icu_69::UVector"* %76, null
  %79 = and i1 %77, %78
  br i1 %79, label %105, label %80

80:                                               ; preds = %71
  %81 = or i1 %77, %78
  br i1 %81, label %105, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %73, i64 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %76, i64 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %84, %86
  br i1 %87, label %88, label %105

88:                                               ; preds = %82
  %89 = icmp sgt i32 %84, 0
  br i1 %89, label %92, label %105

90:                                               ; preds = %92
  %91 = icmp eq i32 %104, %84
  br i1 %91, label %105, label %92

92:                                               ; preds = %88, %90
  %93 = phi i32 [ %104, %90 ], [ 0, %88 ]
  %94 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %73, i32 %93) #8
  %95 = bitcast i8* %94 to %"class.icu_69::TimeZoneRule"*
  %96 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %76, i32 %93) #8
  %97 = bitcast i8* %96 to %"class.icu_69::TimeZoneRule"*
  %98 = bitcast i8* %94 to i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)***
  %99 = load i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)**, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*** %98, align 8
  %100 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %99, i64 5
  %101 = load i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %100, align 8
  %102 = tail call signext i8 %101(%"class.icu_69::TimeZoneRule"* %95, %"class.icu_69::TimeZoneRule"* dereferenceable(80) %97) #8
  %103 = icmp eq i8 %102, 0
  %104 = add nuw nsw i32 %93, 1
  br i1 %103, label %90, label %105

105:                                              ; preds = %58, %92, %90, %8, %82, %80, %48, %46, %88, %71, %25, %22, %2
  %106 = phi i8 [ 1, %2 ], [ 0, %22 ], [ 0, %8 ], [ 0, %25 ], [ 1, %71 ], [ 1, %88 ], [ 0, %46 ], [ 0, %48 ], [ 0, %80 ], [ 0, %82 ], [ 0, %92 ], [ 1, %90 ], [ 0, %58 ]
  ret i8 %106
}

declare void @__cxa_bad_typeid() local_unnamed_addr

declare signext i8 @_ZNK6icu_698TimeZoneeqERKS0_(%"class.icu_69::TimeZone"*, %"class.icu_69::TimeZone"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6917RuleBasedTimeZoneneERKNS_8TimeZoneE(%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"* dereferenceable(72)) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.icu_69::RuleBasedTimeZone"* %0 to i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)***
  %4 = load i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)**, i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)*** %3, align 8
  %5 = getelementptr inbounds i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)*, i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)** %4, i64 3
  %6 = load i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)*, i8 (%"class.icu_69::RuleBasedTimeZone"*, %"class.icu_69::TimeZone"*)** %5, align 8
  %7 = tail call signext i8 %6(%"class.icu_69::RuleBasedTimeZone"* %0, %"class.icu_69::TimeZone"* dereferenceable(72) %1) #8
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  ret i8 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917RuleBasedTimeZone17addTransitionRuleEPNS_12TimeZoneRuleER10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* nocapture, %"class.icu_69::TimeZoneRule"*, i32* dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %55

6:                                                ; preds = %3
  %7 = icmp eq %"class.icu_69::TimeZoneRule"* %1, null
  br i1 %7, label %37, label %8

8:                                                ; preds = %6
  %9 = bitcast %"class.icu_69::TimeZoneRule"* %1 to i8*
  %10 = tail call i8* @__dynamic_cast(i8* nonnull %9, i8* bitcast (i8** @_ZTIN6icu_6912TimeZoneRuleE to i8*), i8* bitcast (i8** @_ZTIN6icu_6918AnnualTimeZoneRuleE to i8*), i64 0) #8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %37, label %12

12:                                               ; preds = %8
  %13 = bitcast i8* %10 to %"class.icu_69::AnnualTimeZoneRule"*
  %14 = tail call i32 @_ZNK6icu_6918AnnualTimeZoneRule10getEndYearEv(%"class.icu_69::AnnualTimeZoneRule"* nonnull %13) #8
  %15 = load i32, i32* @_ZN6icu_6918AnnualTimeZoneRule8MAX_YEARE, align 4
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %17, label %37

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 3
  %19 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %18, align 8
  %20 = icmp eq %"class.icu_69::UVector"* %19, null
  br i1 %20, label %21, label %30

21:                                               ; preds = %17
  %22 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 40) #8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = bitcast i8* %22 to %"class.icu_69::UVector"*
  tail call void @_ZN6icu_697UVectorC1ER10UErrorCode(%"class.icu_69::UVector"* nonnull %25, i32* dereferenceable(4) %2) #8
  br label %26

26:                                               ; preds = %24, %21
  %27 = phi %"class.icu_69::UVector"* [ %25, %24 ], [ null, %21 ]
  store %"class.icu_69::UVector"* %27, %"class.icu_69::UVector"** %18, align 8
  %28 = load i32, i32* %2, align 4
  %29 = icmp slt i32 %28, 1
  br i1 %29, label %35, label %55

30:                                               ; preds = %17
  %31 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %19, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %32, 1
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  store i32 27, i32* %2, align 4
  br label %55

35:                                               ; preds = %26, %30
  %36 = phi %"class.icu_69::UVector"* [ %27, %26 ], [ %19, %30 ]
  tail call void @_ZN6icu_697UVector10addElementEPvR10UErrorCode(%"class.icu_69::UVector"* %36, i8* nonnull %9, i32* dereferenceable(4) %2) #8
  br label %53

37:                                               ; preds = %6, %8, %12
  %38 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 2
  %39 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %38, align 8
  %40 = icmp eq %"class.icu_69::UVector"* %39, null
  br i1 %40, label %41, label %50

41:                                               ; preds = %37
  %42 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 40) #8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = bitcast i8* %42 to %"class.icu_69::UVector"*
  tail call void @_ZN6icu_697UVectorC1ER10UErrorCode(%"class.icu_69::UVector"* nonnull %45, i32* dereferenceable(4) %2) #8
  br label %46

46:                                               ; preds = %44, %41
  %47 = phi %"class.icu_69::UVector"* [ %45, %44 ], [ null, %41 ]
  store %"class.icu_69::UVector"* %47, %"class.icu_69::UVector"** %38, align 8
  %48 = load i32, i32* %2, align 4
  %49 = icmp slt i32 %48, 1
  br i1 %49, label %50, label %55

50:                                               ; preds = %46, %37
  %51 = phi %"class.icu_69::UVector"* [ %47, %46 ], [ %39, %37 ]
  %52 = bitcast %"class.icu_69::TimeZoneRule"* %1 to i8*
  tail call void @_ZN6icu_697UVector10addElementEPvR10UErrorCode(%"class.icu_69::UVector"* %51, i8* %52, i32* dereferenceable(4) %2) #8
  br label %53

53:                                               ; preds = %50, %35
  %54 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 5
  store i8 0, i8* %54, align 8
  br label %55

55:                                               ; preds = %34, %53, %26, %46, %3
  ret void
}

; Function Attrs: nounwind readonly
declare i8* @__dynamic_cast(i8*, i8*, i8*, i64) local_unnamed_addr #5

declare i32 @_ZNK6icu_6918AnnualTimeZoneRule10getEndYearEv(%"class.icu_69::AnnualTimeZoneRule"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i8* @_ZN6icu_697UMemorynwEm(i64) local_unnamed_addr #4

declare void @_ZN6icu_697UVectorC1ER10UErrorCode(%"class.icu_69::UVector"*, i32* dereferenceable(4)) unnamed_addr #2

declare void @_ZN6icu_697UVector10addElementEPvR10UErrorCode(%"class.icu_69::UVector"*, i8*, i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6917RuleBasedTimeZone13completeConstER10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* nocapture, i32* dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  tail call void @umtx_lock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZZNK6icu_6917RuleBasedTimeZone13completeConstER10UErrorCodeE5gLock to %"class.icu_69::UMutex"*)) #8
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  tail call void @_ZN6icu_6917RuleBasedTimeZone8completeER10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* %0, i32* dereferenceable(4) %1)
  br label %10

10:                                               ; preds = %5, %9
  tail call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZZNK6icu_6917RuleBasedTimeZone13completeConstER10UErrorCodeE5gLock to %"class.icu_69::UMutex"*)) #8
  br label %11

11:                                               ; preds = %2, %10
  ret void
}

declare void @umtx_lock_69(%"class.icu_69::UMutex"*) local_unnamed_addr #2

declare void @umtx_unlock_69(%"class.icu_69::UMutex"*) local_unnamed_addr #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #6

declare i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"*) local_unnamed_addr #2

declare i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6912TimeZoneRule7getNameERNS_13UnicodeStringE(%"class.icu_69::TimeZoneRule"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #2

declare i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #4

declare void @uprv_free_69(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::RuleBasedTimeZone"* @_ZNK6icu_6917RuleBasedTimeZone5cloneEv(%"class.icu_69::RuleBasedTimeZone"*) unnamed_addr #1 align 2 {
  %2 = alloca i32, align 4
  %3 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 112) #8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %37, label %5

5:                                                ; preds = %1
  %6 = bitcast i8* %3 to %"class.icu_69::RuleBasedTimeZone"*
  %7 = bitcast i8* %3 to %"class.icu_69::BasicTimeZone"*
  %8 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 0
  tail call void @_ZN6icu_6913BasicTimeZoneC2ERKS0_(%"class.icu_69::BasicTimeZone"* nonnull %7, %"class.icu_69::BasicTimeZone"* dereferenceable(72) %8) #8
  %9 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6icu_6917RuleBasedTimeZoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 72
  %11 = bitcast i8* %10 to %"class.icu_69::InitialTimeZoneRule"**
  %12 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 1
  %13 = load %"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::InitialTimeZoneRule"** %12, align 8
  %14 = bitcast %"class.icu_69::InitialTimeZoneRule"* %13 to %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)***
  %15 = load %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)**, %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)*, %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)** %15, i64 3
  %17 = load %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)*, %"class.icu_69::InitialTimeZoneRule"* (%"class.icu_69::InitialTimeZoneRule"*)** %16, align 8
  %18 = tail call %"class.icu_69::InitialTimeZoneRule"* %17(%"class.icu_69::InitialTimeZoneRule"* %13) #8
  store %"class.icu_69::InitialTimeZoneRule"* %18, %"class.icu_69::InitialTimeZoneRule"** %11, align 8
  %19 = getelementptr inbounds i8, i8* %3, i64 96
  %20 = bitcast i8* %19 to %"class.icu_69::UVector"**
  store %"class.icu_69::UVector"* null, %"class.icu_69::UVector"** %20, align 8
  %21 = getelementptr inbounds i8, i8* %3, i64 104
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 2
  %23 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %22, align 8
  %24 = tail call %"class.icu_69::UVector"* @_ZN6icu_6917RuleBasedTimeZone9copyRulesEPNS_7UVectorE(%"class.icu_69::RuleBasedTimeZone"* undef, %"class.icu_69::UVector"* %23) #8
  %25 = getelementptr inbounds i8, i8* %3, i64 80
  %26 = bitcast i8* %25 to %"class.icu_69::UVector"**
  store %"class.icu_69::UVector"* %24, %"class.icu_69::UVector"** %26, align 8
  %27 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 3
  %28 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %27, align 8
  %29 = tail call %"class.icu_69::UVector"* @_ZN6icu_6917RuleBasedTimeZone9copyRulesEPNS_7UVectorE(%"class.icu_69::RuleBasedTimeZone"* undef, %"class.icu_69::UVector"* %28) #8
  %30 = getelementptr inbounds i8, i8* %3, i64 88
  %31 = bitcast i8* %30 to %"class.icu_69::UVector"**
  store %"class.icu_69::UVector"* %29, %"class.icu_69::UVector"** %31, align 8
  %32 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 5
  %33 = load i8, i8* %32, align 8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %5
  %36 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #8
  store i32 0, i32* %2, align 4
  call void @_ZN6icu_6917RuleBasedTimeZone8completeER10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* nonnull %6, i32* nonnull dereferenceable(4) %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #8
  br label %37

37:                                               ; preds = %35, %5, %1
  %38 = phi %"class.icu_69::RuleBasedTimeZone"* [ null, %1 ], [ %6, %5 ], [ %6, %35 ]
  ret %"class.icu_69::RuleBasedTimeZone"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6917RuleBasedTimeZone9getOffsetEhiiihiR10UErrorCode(%"class.icu_69::RuleBasedTimeZone"*, i8 zeroext, i32, i32, i32, i8 zeroext, i32, i32* dereferenceable(4)) unnamed_addr #1 align 2 {
  %9 = load i32, i32* %7, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %36

11:                                               ; preds = %8
  %12 = icmp ugt i32 %3, 11
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  store i32 1, i32* %7, align 4
  br label %36

14:                                               ; preds = %11
  %15 = and i32 %2, 3
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %14
  %18 = srem i32 %2, 100
  %19 = icmp ne i32 %18, 0
  %20 = srem i32 %2, 400
  %21 = icmp eq i32 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %24, label %23

23:                                               ; preds = %17, %14
  br label %24

24:                                               ; preds = %17, %23
  %25 = phi i32 [ 0, %23 ], [ 12, %17 ]
  %26 = add nuw nsw i32 %25, %3
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [24 x i8], [24 x i8]* @_ZN6icu_695Grego12MONTH_LENGTHE, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = bitcast %"class.icu_69::RuleBasedTimeZone"* %0 to i32 (%"class.icu_69::RuleBasedTimeZone"*, i8, i32, i32, i32, i8, i32, i32, i32*)***
  %32 = load i32 (%"class.icu_69::RuleBasedTimeZone"*, i8, i32, i32, i32, i8, i32, i32, i32*)**, i32 (%"class.icu_69::RuleBasedTimeZone"*, i8, i32, i32, i32, i8, i32, i32, i32*)*** %31, align 8
  %33 = getelementptr inbounds i32 (%"class.icu_69::RuleBasedTimeZone"*, i8, i32, i32, i32, i8, i32, i32, i32*)*, i32 (%"class.icu_69::RuleBasedTimeZone"*, i8, i32, i32, i32, i8, i32, i32, i32*)** %32, i64 5
  %34 = load i32 (%"class.icu_69::RuleBasedTimeZone"*, i8, i32, i32, i32, i8, i32, i32, i32*)*, i32 (%"class.icu_69::RuleBasedTimeZone"*, i8, i32, i32, i32, i8, i32, i32, i32*)** %33, align 8
  %35 = tail call i32 %34(%"class.icu_69::RuleBasedTimeZone"* %0, i8 zeroext %1, i32 %2, i32 %3, i32 %4, i8 zeroext %5, i32 %6, i32 %30, i32* dereferenceable(4) %7) #8
  br label %36

36:                                               ; preds = %8, %24, %13
  %37 = phi i32 [ 0, %13 ], [ %35, %24 ], [ 0, %8 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6917RuleBasedTimeZone9getOffsetEhiiihiiR10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* nocapture readonly, i8 zeroext, i32, i32, i32, i8 zeroext, i32, i32, i32* nocapture dereferenceable(4)) unnamed_addr #1 align 2 {
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = load i32, i32* %8, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %32

14:                                               ; preds = %9
  %15 = icmp eq i8 %1, 0
  %16 = sub nsw i32 1, %2
  %17 = select i1 %15, i32 %16, i32 %2
  %18 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #8
  store i32 -1431655766, i32* %10, align 4
  %19 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #8
  store i32 -1431655766, i32* %11, align 4
  %20 = tail call double @_ZN6icu_695Grego11fieldsToDayEiii(i32 %17, i32 %3, i32 %4) #8
  %21 = fmul double %20, 8.640000e+07
  %22 = sitofp i32 %6 to double
  %23 = fadd double %21, %22
  call void @_ZNK6icu_6917RuleBasedTimeZone17getOffsetInternalEdaiiRiS1_R10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* %0, double %23, i8 signext 1, i32 3, i32 1, i32* nonnull dereferenceable(4) %10, i32* nonnull dereferenceable(4) %11, i32* dereferenceable(4) %8)
  %24 = load i32, i32* %8, align 4
  %25 = icmp slt i32 %24, 1
  br i1 %25, label %26, label %30

26:                                               ; preds = %14
  %27 = load i32, i32* %10, align 4
  %28 = load i32, i32* %11, align 4
  %29 = add nsw i32 %28, %27
  br label %30

30:                                               ; preds = %14, %26
  %31 = phi i32 [ %29, %26 ], [ 0, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #8
  br label %32

32:                                               ; preds = %9, %30
  %33 = phi i32 [ %31, %30 ], [ 0, %9 ]
  ret i32 %33
}

declare double @_ZN6icu_695Grego11fieldsToDayEiii(i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6917RuleBasedTimeZone17getOffsetInternalEdaiiRiS1_R10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* nocapture readonly, double, i8 signext, i32, i32, i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  %9 = load i32, i32* %7, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %78

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 5
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  store i32 27, i32* %7, align 4
  br label %78

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 4
  %18 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %17, align 8
  %19 = icmp eq %"class.icu_69::UVector"* %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 1
  %22 = bitcast %"class.icu_69::InitialTimeZoneRule"** %21 to %"class.icu_69::TimeZoneRule"**
  br label %70

23:                                               ; preds = %16
  %24 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* nonnull %18, i32 0) #8
  %25 = bitcast i8* %24 to %"struct.icu_69::Transition"*
  %26 = tail call double @_ZNK6icu_6917RuleBasedTimeZone17getTransitionTimeEPNS_10TransitionEaii(%"class.icu_69::RuleBasedTimeZone"* %0, %"struct.icu_69::Transition"* %25, i8 signext %2, i32 %3, i32 %4)
  %27 = fcmp ogt double %26, %1
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 1
  %30 = bitcast %"class.icu_69::InitialTimeZoneRule"** %29 to %"class.icu_69::TimeZoneRule"**
  br label %70

31:                                               ; preds = %23
  %32 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %17, align 8
  %33 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %32, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = add nsw i32 %34, -1
  %36 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %32, i32 %35) #8
  %37 = bitcast i8* %36 to %"struct.icu_69::Transition"*
  %38 = tail call double @_ZNK6icu_6917RuleBasedTimeZone17getTransitionTimeEPNS_10TransitionEaii(%"class.icu_69::RuleBasedTimeZone"* %0, %"struct.icu_69::Transition"* %37, i8 signext %2, i32 %3, i32 %4)
  %39 = fcmp olt double %38, %1
  br i1 %39, label %42, label %40

40:                                               ; preds = %31
  %41 = icmp sgt i32 %34, 0
  br i1 %41, label %54, label %64

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 3
  %44 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %43, align 8
  %45 = icmp eq %"class.icu_69::UVector"* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %42
  %47 = tail call %"class.icu_69::TimeZoneRule"* @_ZNK6icu_6917RuleBasedTimeZone15findRuleInFinalEdaii(%"class.icu_69::RuleBasedTimeZone"* %0, double %1, i8 signext %2, i32 %3, i32 %4)
  %48 = icmp eq %"class.icu_69::TimeZoneRule"* %47, null
  br i1 %48, label %49, label %74

49:                                               ; preds = %42, %46
  %50 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %17, align 8
  %51 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %50, i32 %35) #8
  %52 = getelementptr inbounds i8, i8* %51, i64 16
  %53 = bitcast i8* %52 to %"class.icu_69::TimeZoneRule"**
  br label %70

54:                                               ; preds = %40, %61
  %55 = phi i32 [ %62, %61 ], [ %35, %40 ]
  %56 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %17, align 8
  %57 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %56, i32 %55) #8
  %58 = bitcast i8* %57 to %"struct.icu_69::Transition"*
  %59 = tail call double @_ZNK6icu_6917RuleBasedTimeZone17getTransitionTimeEPNS_10TransitionEaii(%"class.icu_69::RuleBasedTimeZone"* %0, %"struct.icu_69::Transition"* %58, i8 signext %2, i32 %3, i32 %4)
  %60 = fcmp ugt double %59, %1
  br i1 %60, label %61, label %64

61:                                               ; preds = %54
  %62 = add nsw i32 %55, -1
  %63 = icmp sgt i32 %55, 0
  br i1 %63, label %54, label %64

64:                                               ; preds = %61, %54, %40
  %65 = phi i32 [ %35, %40 ], [ %55, %54 ], [ %62, %61 ]
  %66 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %17, align 8
  %67 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %66, i32 %65) #8
  %68 = getelementptr inbounds i8, i8* %67, i64 16
  %69 = bitcast i8* %68 to %"class.icu_69::TimeZoneRule"**
  br label %70

70:                                               ; preds = %28, %49, %64, %20
  %71 = phi %"class.icu_69::TimeZoneRule"** [ %22, %20 ], [ %30, %28 ], [ %53, %49 ], [ %69, %64 ]
  %72 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %71, align 8
  %73 = icmp eq %"class.icu_69::TimeZoneRule"* %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %46, %70
  %75 = phi %"class.icu_69::TimeZoneRule"* [ %72, %70 ], [ %47, %46 ]
  %76 = tail call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* nonnull %75) #8
  store i32 %76, i32* %5, align 4
  %77 = tail call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* nonnull %75) #8
  store i32 %77, i32* %6, align 4
  br label %78

78:                                               ; preds = %74, %70, %8, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6917RuleBasedTimeZone9getOffsetEdaRiS1_R10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* nocapture readonly, double, i8 signext, i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4)) unnamed_addr #1 align 2 {
  tail call void @_ZNK6icu_6917RuleBasedTimeZone17getOffsetInternalEdaiiRiS1_R10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* %0, double %1, i8 signext %2, i32 4, i32 12, i32* dereferenceable(4) %3, i32* dereferenceable(4) %4, i32* dereferenceable(4) %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6917RuleBasedTimeZone18getOffsetFromLocalEd20UTimeZoneLocalOptionS1_RiS2_R10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* nocapture readonly, double, i32, i32, i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4)) unnamed_addr #1 align 2 {
  tail call void @_ZNK6icu_6917RuleBasedTimeZone17getOffsetInternalEdaiiRiS1_R10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* %0, double %1, i8 signext 1, i32 %2, i32 %3, i32* dereferenceable(4) %4, i32* dereferenceable(4) %5, i32* dereferenceable(4) %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK6icu_6917RuleBasedTimeZone17getTransitionTimeEPNS_10TransitionEaii(%"class.icu_69::RuleBasedTimeZone"* nocapture readnone, %"struct.icu_69::Transition"* nocapture readonly, i8 signext, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"struct.icu_69::Transition", %"struct.icu_69::Transition"* %1, i64 0, i32 0
  %7 = load double, double* %6, align 8
  %8 = icmp eq i8 %2, 0
  br i1 %8, label %63, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.icu_69::Transition", %"struct.icu_69::Transition"* %1, i64 0, i32 1
  %11 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %10, align 8
  %12 = tail call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %11) #8
  %13 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %10, align 8
  %14 = tail call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %13) #8
  %15 = getelementptr inbounds %"struct.icu_69::Transition", %"struct.icu_69::Transition"* %1, i64 0, i32 2
  %16 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %15, align 8
  %17 = tail call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %16) #8
  %18 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %15, align 8
  %19 = tail call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %18) #8
  %20 = add nsw i32 %14, %12
  %21 = add nsw i32 %19, %17
  %22 = icmp ne i32 %14, 0
  %23 = icmp eq i32 %19, 0
  %24 = and i1 %22, %23
  %25 = icmp eq i32 %14, 0
  %26 = icmp ne i32 %19, 0
  %27 = and i1 %25, %26
  %28 = icmp slt i32 %21, %20
  br i1 %28, label %44, label %29

29:                                               ; preds = %9
  %30 = and i32 %3, 3
  %31 = icmp eq i32 %30, 1
  %32 = and i1 %31, %24
  br i1 %32, label %59, label %33

33:                                               ; preds = %29
  %34 = icmp eq i32 %30, 3
  %35 = and i1 %34, %27
  br i1 %35, label %59, label %36

36:                                               ; preds = %33
  %37 = and i1 %31, %27
  %38 = and i1 %34, %24
  %39 = or i1 %37, %38
  br i1 %39, label %59, label %40

40:                                               ; preds = %36
  %41 = and i32 %3, 12
  %42 = icmp eq i32 %41, 12
  %43 = select i1 %42, i32 %20, i32 %21
  br label %59

44:                                               ; preds = %9
  %45 = and i32 %4, 3
  %46 = icmp eq i32 %45, 1
  %47 = and i1 %46, %24
  br i1 %47, label %59, label %48

48:                                               ; preds = %44
  %49 = icmp eq i32 %45, 3
  %50 = and i1 %49, %27
  br i1 %50, label %59, label %51

51:                                               ; preds = %48
  %52 = and i1 %46, %27
  %53 = and i1 %49, %24
  %54 = or i1 %52, %53
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = and i32 %4, 12
  %57 = icmp eq i32 %56, 4
  %58 = select i1 %57, i32 %20, i32 %21
  br label %59

59:                                               ; preds = %29, %33, %36, %40, %44, %48, %51, %55
  %60 = phi i32 [ %20, %33 ], [ %20, %29 ], [ %21, %36 ], [ %43, %40 ], [ %21, %48 ], [ %21, %44 ], [ %20, %51 ], [ %58, %55 ]
  %61 = sitofp i32 %60 to double
  %62 = fadd double %7, %61
  br label %63

63:                                               ; preds = %5, %59
  %64 = phi double [ %62, %59 ], [ %7, %5 ]
  ret double %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::TimeZoneRule"* @_ZNK6icu_6917RuleBasedTimeZone15findRuleInFinalEdaii(%"class.icu_69::RuleBasedTimeZone"* nocapture readonly, double, i8 signext, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 3
  %9 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %8, align 8
  %10 = icmp eq %"class.icu_69::UVector"* %9, null
  br i1 %10, label %155, label %11

11:                                               ; preds = %5
  %12 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* nonnull %9, i32 0) #8
  %13 = bitcast i8* %12 to %"class.icu_69::AnnualTimeZoneRule"*
  %14 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %8, align 8
  %15 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %14, i32 1) #8
  %16 = bitcast i8* %15 to %"class.icu_69::AnnualTimeZoneRule"*
  %17 = icmp eq i8* %12, null
  %18 = icmp eq i8* %15, null
  %19 = or i1 %17, %18
  br i1 %19, label %155, label %20

20:                                               ; preds = %11
  %21 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %22 = bitcast double* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  store double 0xFFFFFFFFFFFFFFFF, double* %7, align 8
  %23 = icmp ne i8 %2, 0
  %24 = bitcast i8* %15 to %"class.icu_69::TimeZoneRule"*
  br i1 %23, label %25, label %74

25:                                               ; preds = %20
  %26 = tail call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %24) #8
  %27 = tail call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %24) #8
  %28 = bitcast i8* %12 to %"class.icu_69::TimeZoneRule"*
  %29 = tail call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %28) #8
  %30 = tail call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %28) #8
  %31 = add nsw i32 %27, %26
  %32 = add nsw i32 %30, %29
  %33 = icmp ne i32 %27, 0
  %34 = icmp eq i32 %30, 0
  %35 = and i1 %33, %34
  %36 = icmp eq i32 %27, 0
  %37 = icmp ne i32 %30, 0
  %38 = and i1 %36, %37
  %39 = icmp slt i32 %32, %31
  br i1 %39, label %55, label %40

40:                                               ; preds = %25
  %41 = and i32 %3, 3
  %42 = icmp eq i32 %41, 1
  %43 = and i1 %42, %35
  br i1 %43, label %70, label %44

44:                                               ; preds = %40
  %45 = icmp eq i32 %41, 3
  %46 = and i1 %45, %38
  br i1 %46, label %70, label %47

47:                                               ; preds = %44
  %48 = and i1 %42, %38
  %49 = and i1 %45, %35
  %50 = or i1 %48, %49
  br i1 %50, label %70, label %51

51:                                               ; preds = %47
  %52 = and i32 %3, 12
  %53 = icmp eq i32 %52, 12
  %54 = select i1 %53, i32 %31, i32 %32
  br label %70

55:                                               ; preds = %25
  %56 = and i32 %4, 3
  %57 = icmp eq i32 %56, 1
  %58 = and i1 %57, %35
  br i1 %58, label %70, label %59

59:                                               ; preds = %55
  %60 = icmp eq i32 %56, 3
  %61 = and i1 %60, %38
  br i1 %61, label %70, label %62

62:                                               ; preds = %59
  %63 = and i1 %57, %38
  %64 = and i1 %60, %35
  %65 = or i1 %63, %64
  br i1 %65, label %70, label %66

66:                                               ; preds = %62
  %67 = and i32 %4, 12
  %68 = icmp eq i32 %67, 4
  %69 = select i1 %68, i32 %31, i32 %32
  br label %70

70:                                               ; preds = %40, %44, %47, %51, %55, %59, %62, %66
  %71 = phi i32 [ %31, %44 ], [ %31, %40 ], [ %32, %47 ], [ %54, %51 ], [ %32, %59 ], [ %32, %55 ], [ %31, %62 ], [ %69, %66 ]
  %72 = sitofp i32 %71 to double
  %73 = fsub double %1, %72
  br label %74

74:                                               ; preds = %20, %70
  %75 = phi double [ %73, %70 ], [ %1, %20 ]
  %76 = tail call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %24) #8
  %77 = tail call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %24) #8
  %78 = bitcast i8* %12 to i8 (%"class.icu_69::AnnualTimeZoneRule"*, double, i32, i32, i8, double*)***
  %79 = load i8 (%"class.icu_69::AnnualTimeZoneRule"*, double, i32, i32, i8, double*)**, i8 (%"class.icu_69::AnnualTimeZoneRule"*, double, i32, i32, i8, double*)*** %78, align 8
  %80 = getelementptr inbounds i8 (%"class.icu_69::AnnualTimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::AnnualTimeZoneRule"*, double, i32, i32, i8, double*)** %79, i64 10
  %81 = load i8 (%"class.icu_69::AnnualTimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::AnnualTimeZoneRule"*, double, i32, i32, i8, double*)** %80, align 8
  %82 = call signext i8 %81(%"class.icu_69::AnnualTimeZoneRule"* %13, double %75, i32 %76, i32 %77, i8 signext 1, double* nonnull dereferenceable(8) %6) #8
  %83 = bitcast i8* %12 to %"class.icu_69::TimeZoneRule"*
  br i1 %23, label %84, label %132

84:                                               ; preds = %74
  %85 = call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %83) #8
  %86 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %83) #8
  %87 = call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %24) #8
  %88 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %24) #8
  %89 = add nsw i32 %86, %85
  %90 = add nsw i32 %88, %87
  %91 = icmp ne i32 %86, 0
  %92 = icmp eq i32 %88, 0
  %93 = and i1 %91, %92
  %94 = icmp eq i32 %86, 0
  %95 = icmp ne i32 %88, 0
  %96 = and i1 %94, %95
  %97 = icmp slt i32 %90, %89
  br i1 %97, label %113, label %98

98:                                               ; preds = %84
  %99 = and i32 %3, 3
  %100 = icmp eq i32 %99, 1
  %101 = and i1 %100, %93
  br i1 %101, label %128, label %102

102:                                              ; preds = %98
  %103 = icmp eq i32 %99, 3
  %104 = and i1 %103, %96
  br i1 %104, label %128, label %105

105:                                              ; preds = %102
  %106 = and i1 %100, %96
  %107 = and i1 %103, %93
  %108 = or i1 %106, %107
  br i1 %108, label %128, label %109

109:                                              ; preds = %105
  %110 = and i32 %3, 12
  %111 = icmp eq i32 %110, 12
  %112 = select i1 %111, i32 %89, i32 %90
  br label %128

113:                                              ; preds = %84
  %114 = and i32 %4, 3
  %115 = icmp eq i32 %114, 1
  %116 = and i1 %115, %93
  br i1 %116, label %128, label %117

117:                                              ; preds = %113
  %118 = icmp eq i32 %114, 3
  %119 = and i1 %118, %96
  br i1 %119, label %128, label %120

120:                                              ; preds = %117
  %121 = and i1 %115, %96
  %122 = and i1 %118, %93
  %123 = or i1 %121, %122
  br i1 %123, label %128, label %124

124:                                              ; preds = %120
  %125 = and i32 %4, 12
  %126 = icmp eq i32 %125, 4
  %127 = select i1 %126, i32 %89, i32 %90
  br label %128

128:                                              ; preds = %98, %102, %105, %109, %113, %117, %120, %124
  %129 = phi i32 [ %89, %102 ], [ %89, %98 ], [ %90, %105 ], [ %112, %109 ], [ %90, %117 ], [ %90, %113 ], [ %89, %120 ], [ %127, %124 ]
  %130 = sitofp i32 %129 to double
  %131 = fsub double %1, %130
  br label %132

132:                                              ; preds = %74, %128
  %133 = phi double [ %131, %128 ], [ %1, %74 ]
  %134 = call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %83) #8
  %135 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %83) #8
  %136 = bitcast i8* %15 to i8 (%"class.icu_69::AnnualTimeZoneRule"*, double, i32, i32, i8, double*)***
  %137 = load i8 (%"class.icu_69::AnnualTimeZoneRule"*, double, i32, i32, i8, double*)**, i8 (%"class.icu_69::AnnualTimeZoneRule"*, double, i32, i32, i8, double*)*** %136, align 8
  %138 = getelementptr inbounds i8 (%"class.icu_69::AnnualTimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::AnnualTimeZoneRule"*, double, i32, i32, i8, double*)** %137, i64 10
  %139 = load i8 (%"class.icu_69::AnnualTimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::AnnualTimeZoneRule"*, double, i32, i32, i8, double*)** %138, align 8
  %140 = call signext i8 %139(%"class.icu_69::AnnualTimeZoneRule"* %16, double %133, i32 %134, i32 %135, i8 signext 1, double* nonnull dereferenceable(8) %7) #8
  %141 = icmp ne i8 %82, 0
  %142 = icmp ne i8 %140, 0
  %143 = and i1 %141, %142
  br i1 %143, label %147, label %144

144:                                              ; preds = %132
  %145 = select i1 %142, %"class.icu_69::TimeZoneRule"* %24, %"class.icu_69::TimeZoneRule"* null
  %146 = select i1 %141, %"class.icu_69::TimeZoneRule"* %83, %"class.icu_69::TimeZoneRule"* %145
  br label %153

147:                                              ; preds = %132
  %148 = load double, double* %6, align 8
  %149 = load double, double* %7, align 8
  %150 = fcmp ogt double %148, %149
  %151 = select i1 %150, %"class.icu_69::AnnualTimeZoneRule"* %13, %"class.icu_69::AnnualTimeZoneRule"* %16
  %152 = getelementptr inbounds %"class.icu_69::AnnualTimeZoneRule", %"class.icu_69::AnnualTimeZoneRule"* %151, i64 0, i32 0
  br label %153

153:                                              ; preds = %144, %147
  %154 = phi %"class.icu_69::TimeZoneRule"* [ %152, %147 ], [ %146, %144 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %155

155:                                              ; preds = %153, %11, %5
  %156 = phi %"class.icu_69::TimeZoneRule"* [ null, %5 ], [ %154, %153 ], [ null, %11 ]
  ret %"class.icu_69::TimeZoneRule"* %156
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6icu_6917RuleBasedTimeZone12setRawOffsetEi(%"class.icu_69::RuleBasedTimeZone"* nocapture, i32) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6917RuleBasedTimeZone12getRawOffsetEv(%"class.icu_69::RuleBasedTimeZone"*) unnamed_addr #1 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  store i32 0, i32* %2, align 4
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 -1431655766, i32* %3, align 4
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 -1431655766, i32* %4, align 4
  %8 = tail call double @uprv_getUTCtime_69() #8
  %9 = fmul double %8, 1.000000e+03
  %10 = bitcast %"class.icu_69::RuleBasedTimeZone"* %0 to void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)***
  %11 = load void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)**, void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)*, void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)** %11, i64 6
  %13 = load void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)*, void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)** %12, align 8
  call void %13(%"class.icu_69::RuleBasedTimeZone"* %0, double %9, i8 signext 0, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %2) #8
  %14 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  ret i32 %14
}

declare double @uprv_getUTCtime_69() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6917RuleBasedTimeZone15useDaylightTimeEv(%"class.icu_69::RuleBasedTimeZone"*) unnamed_addr #1 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca double, align 8
  %6 = alloca %"class.icu_69::TimeZoneRule"*, align 8
  %7 = alloca %"class.icu_69::TimeZoneRule"*, align 8
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  store i32 0, i32* %2, align 4
  %9 = tail call double @uprv_getUTCtime_69() #8
  %10 = fmul double %9, 1.000000e+03
  %11 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8
  store i32 -1431655766, i32* %3, align 4
  %12 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #8
  store i32 -1431655766, i32* %4, align 4
  %13 = bitcast %"class.icu_69::RuleBasedTimeZone"* %0 to void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)***
  %14 = load void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)**, void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)*, void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)** %14, i64 6
  %16 = load void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)*, void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)** %15, align 8
  call void %16(%"class.icu_69::RuleBasedTimeZone"* %0, double %10, i8 signext 0, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %2) #8
  %17 = load i32, i32* %4, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %32

19:                                               ; preds = %1
  %20 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  store double 0xFFFFFFFFFFFFFFFF, double* %5, align 8
  %21 = bitcast %"class.icu_69::TimeZoneRule"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  store %"class.icu_69::TimeZoneRule"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::TimeZoneRule"*), %"class.icu_69::TimeZoneRule"** %6, align 8
  %22 = bitcast %"class.icu_69::TimeZoneRule"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  store %"class.icu_69::TimeZoneRule"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::TimeZoneRule"*), %"class.icu_69::TimeZoneRule"** %7, align 8
  %23 = call signext i8 @_ZNK6icu_6917RuleBasedTimeZone8findNextEdaRdRPNS_12TimeZoneRuleES4_(%"class.icu_69::RuleBasedTimeZone"* %0, double %10, i8 signext 0, double* nonnull dereferenceable(8) %5, %"class.icu_69::TimeZoneRule"** nonnull dereferenceable(8) %6, %"class.icu_69::TimeZoneRule"** nonnull dereferenceable(8) %7)
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %7, align 8
  %27 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %26) #8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25, %19
  br label %30

30:                                               ; preds = %25, %29
  %31 = phi i8 [ 0, %29 ], [ 1, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %32

32:                                               ; preds = %1, %30
  %33 = phi i8 [ %31, %30 ], [ 1, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8
  ret i8 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6917RuleBasedTimeZone8findNextEdaRdRPNS_12TimeZoneRuleES4_(%"class.icu_69::RuleBasedTimeZone"* nocapture readonly, double, i8 signext, double* nocapture dereferenceable(8), %"class.icu_69::TimeZoneRule"** nocapture dereferenceable(8), %"class.icu_69::TimeZoneRule"** nocapture dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 4
  %10 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %9, align 8
  %11 = icmp eq %"class.icu_69::UVector"* %10, null
  br i1 %11, label %143, label %12

12:                                               ; preds = %6
  %13 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* nonnull %10, i32 0) #8
  %14 = bitcast i8* %13 to double*
  %15 = load double, double* %14, align 8
  %16 = fcmp ogt double %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %12
  %18 = icmp ne i8 %2, 0
  %19 = fcmp oeq double %15, %1
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %28

21:                                               ; preds = %12, %17
  %22 = getelementptr inbounds i8, i8* %13, i64 8
  %23 = bitcast i8* %22 to %"class.icu_69::TimeZoneRule"**
  %24 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %23, align 8
  %25 = getelementptr inbounds i8, i8* %13, i64 16
  %26 = bitcast i8* %25 to %"class.icu_69::TimeZoneRule"**
  %27 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %26, align 8
  br label %126

28:                                               ; preds = %17
  %29 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %9, align 8
  %30 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %29, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = add nsw i32 %31, -1
  %33 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %29, i32 %32) #8
  %34 = bitcast i8* %33 to double*
  %35 = load double, double* %34, align 8
  %36 = fcmp oeq double %35, %1
  %37 = and i1 %18, %36
  br i1 %37, label %38, label %45

38:                                               ; preds = %28
  %39 = getelementptr inbounds i8, i8* %33, i64 8
  %40 = bitcast i8* %39 to %"class.icu_69::TimeZoneRule"**
  %41 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %40, align 8
  %42 = getelementptr inbounds i8, i8* %33, i64 16
  %43 = bitcast i8* %42 to %"class.icu_69::TimeZoneRule"**
  %44 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %43, align 8
  br label %126

45:                                               ; preds = %28
  %46 = fcmp ugt double %35, %1
  br i1 %46, label %86, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 3
  %49 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %48, align 8
  %50 = icmp eq %"class.icu_69::UVector"* %49, null
  br i1 %50, label %143, label %51

51:                                               ; preds = %47
  %52 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* nonnull %49, i32 0) #8
  %53 = bitcast i8* %52 to %"class.icu_69::TimeZoneRule"*
  %54 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %48, align 8
  %55 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %54, i32 1) #8
  %56 = bitcast i8* %55 to %"class.icu_69::TimeZoneRule"*
  %57 = bitcast double* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #8
  store double 0xFFFFFFFFFFFFFFFF, double* %7, align 8
  %58 = bitcast double* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #8
  store double 0xFFFFFFFFFFFFFFFF, double* %8, align 8
  %59 = tail call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %56) #8
  %60 = tail call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %56) #8
  %61 = bitcast i8* %52 to i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)***
  %62 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)**, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*** %61, align 8
  %63 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %62, i64 9
  %64 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %63, align 8
  %65 = call signext i8 %64(%"class.icu_69::TimeZoneRule"* %53, double %1, i32 %59, i32 %60, i8 signext %2, double* nonnull dereferenceable(8) %7) #8
  %66 = call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %53) #8
  %67 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %53) #8
  %68 = bitcast i8* %55 to i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)***
  %69 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)**, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*** %68, align 8
  %70 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %69, i64 9
  %71 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %70, align 8
  %72 = call signext i8 %71(%"class.icu_69::TimeZoneRule"* %56, double %1, i32 %66, i32 %67, i8 signext %2, double* nonnull dereferenceable(8) %8) #8
  %73 = or i8 %72, %65
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %125, label %75

75:                                               ; preds = %51
  %76 = icmp eq i8 %72, 0
  %77 = load double, double* %7, align 8
  br i1 %76, label %81, label %78

78:                                               ; preds = %75
  %79 = load double, double* %8, align 8
  %80 = fcmp olt double %77, %79
  br i1 %80, label %81, label %82

81:                                               ; preds = %75, %78
  br label %82

82:                                               ; preds = %78, %81
  %83 = phi %"class.icu_69::TimeZoneRule"* [ %56, %78 ], [ %53, %81 ]
  %84 = phi %"class.icu_69::TimeZoneRule"* [ %53, %78 ], [ %56, %81 ]
  %85 = phi double [ %79, %78 ], [ %77, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #8
  br label %126

86:                                               ; preds = %45
  %87 = add nsw i32 %31, -2
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %89, label %116

89:                                               ; preds = %86
  %90 = xor i1 %18, true
  %91 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %9, align 8
  %92 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %91, i32 %87) #8
  %93 = bitcast i8* %92 to double*
  %94 = load double, double* %93, align 8
  %95 = fcmp olt double %94, %1
  br i1 %95, label %112, label %104

96:                                               ; preds = %104
  %97 = icmp sgt i32 %111, 0
  br i1 %97, label %98, label %112

98:                                               ; preds = %96
  %99 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %9, align 8
  %100 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %99, i32 %111) #8
  %101 = bitcast i8* %100 to double*
  %102 = load double, double* %101, align 8
  %103 = fcmp olt double %102, %1
  br i1 %103, label %112, label %104

104:                                              ; preds = %89, %98
  %105 = phi double [ %102, %98 ], [ %94, %89 ]
  %106 = phi i8* [ %100, %98 ], [ %92, %89 ]
  %107 = phi i32 [ %111, %98 ], [ %87, %89 ]
  %108 = phi i8* [ %106, %98 ], [ %33, %89 ]
  %109 = fcmp oeq double %105, %1
  %110 = and i1 %109, %90
  %111 = add nsw i32 %107, -1
  br i1 %110, label %112, label %96

112:                                              ; preds = %96, %98, %104, %89
  %113 = phi i8* [ %33, %89 ], [ %106, %96 ], [ %106, %98 ], [ %108, %104 ]
  %114 = bitcast i8* %113 to double*
  %115 = load double, double* %114, align 8
  br label %116

116:                                              ; preds = %112, %86
  %117 = phi double [ %35, %86 ], [ %115, %112 ]
  %118 = phi i8* [ %33, %86 ], [ %113, %112 ]
  %119 = getelementptr inbounds i8, i8* %118, i64 8
  %120 = bitcast i8* %119 to %"class.icu_69::TimeZoneRule"**
  %121 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %120, align 8
  %122 = getelementptr inbounds i8, i8* %118, i64 16
  %123 = bitcast i8* %122 to %"class.icu_69::TimeZoneRule"**
  %124 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %123, align 8
  br label %126

125:                                              ; preds = %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #8
  br label %143

126:                                              ; preds = %38, %116, %82, %21
  %127 = phi double [ %15, %21 ], [ %35, %38 ], [ %117, %116 ], [ %85, %82 ]
  %128 = phi %"class.icu_69::TimeZoneRule"* [ %24, %21 ], [ %41, %38 ], [ %121, %116 ], [ %84, %82 ]
  %129 = phi %"class.icu_69::TimeZoneRule"* [ %27, %21 ], [ %44, %38 ], [ %124, %116 ], [ %83, %82 ]
  %130 = phi i8 [ 0, %21 ], [ 0, %38 ], [ 0, %116 ], [ 1, %82 ]
  %131 = call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %128) #8
  %132 = call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %129) #8
  %133 = icmp eq i32 %131, %132
  br i1 %133, label %134, label %142

134:                                              ; preds = %126
  %135 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %128) #8
  %136 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %129) #8
  %137 = icmp eq i32 %135, %136
  br i1 %137, label %138, label %142

138:                                              ; preds = %134
  %139 = icmp eq i8 %130, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %138
  %141 = call signext i8 @_ZNK6icu_6917RuleBasedTimeZone8findNextEdaRdRPNS_12TimeZoneRuleES4_(%"class.icu_69::RuleBasedTimeZone"* %0, double %127, i8 signext 0, double* dereferenceable(8) %3, %"class.icu_69::TimeZoneRule"** dereferenceable(8) %4, %"class.icu_69::TimeZoneRule"** dereferenceable(8) %5)
  br label %143

142:                                              ; preds = %134, %126
  store double %127, double* %3, align 8
  store %"class.icu_69::TimeZoneRule"* %128, %"class.icu_69::TimeZoneRule"** %4, align 8
  store %"class.icu_69::TimeZoneRule"* %129, %"class.icu_69::TimeZoneRule"** %5, align 8
  br label %143

143:                                              ; preds = %47, %125, %140, %142, %138, %6
  %144 = phi i8 [ 0, %6 ], [ %141, %140 ], [ 1, %142 ], [ 0, %125 ], [ 0, %138 ], [ 0, %47 ]
  ret i8 %144
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6917RuleBasedTimeZone14inDaylightTimeEdR10UErrorCode(%"class.icu_69::RuleBasedTimeZone"*, double, i32* dereferenceable(4)) unnamed_addr #1 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %18

8:                                                ; preds = %3
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8
  store i32 -1431655766, i32* %4, align 4
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #8
  store i32 -1431655766, i32* %5, align 4
  %11 = bitcast %"class.icu_69::RuleBasedTimeZone"* %0 to void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)***
  %12 = load void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)**, void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)*, void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)** %12, i64 6
  %14 = load void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)*, void (%"class.icu_69::RuleBasedTimeZone"*, double, i8, i32*, i32*, i32*)** %13, align 8
  call void %14(%"class.icu_69::RuleBasedTimeZone"* %0, double %1, i8 signext 0, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5, i32* dereferenceable(4) %2) #8
  %15 = load i32, i32* %5, align 4
  %16 = icmp ne i32 %15, 0
  %17 = zext i1 %16 to i8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8
  br label %18

18:                                               ; preds = %3, %8
  %19 = phi i8 [ %17, %8 ], [ 0, %3 ]
  ret i8 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6917RuleBasedTimeZone12hasSameRulesERKNS_8TimeZoneE(%"class.icu_69::RuleBasedTimeZone"* readonly, %"class.icu_69::TimeZone"* readonly dereferenceable(72)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 0, i32 0
  %4 = icmp eq %"class.icu_69::TimeZone"* %3, %1
  br i1 %4, label %102, label %5

5:                                                ; preds = %2
  %6 = icmp eq %"class.icu_69::RuleBasedTimeZone"* %0, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @__cxa_bad_typeid() #10
  unreachable

8:                                                ; preds = %5
  %9 = bitcast %"class.icu_69::RuleBasedTimeZone"* %0 to %"class.std::type_info"***
  %10 = load %"class.std::type_info"**, %"class.std::type_info"*** %9, align 8
  %11 = getelementptr inbounds %"class.std::type_info"*, %"class.std::type_info"** %10, i64 -1
  %12 = load %"class.std::type_info"*, %"class.std::type_info"** %11, align 8
  %13 = bitcast %"class.icu_69::TimeZone"* %1 to %"class.std::type_info"***
  %14 = load %"class.std::type_info"**, %"class.std::type_info"*** %13, align 8
  %15 = getelementptr inbounds %"class.std::type_info"*, %"class.std::type_info"** %14, i64 -1
  %16 = load %"class.std::type_info"*, %"class.std::type_info"** %15, align 8
  %17 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %12, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %16, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %18, %20
  br i1 %21, label %22, label %102

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 1
  %24 = load %"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::InitialTimeZoneRule"** %23, align 8
  %25 = getelementptr inbounds %"class.icu_69::TimeZone", %"class.icu_69::TimeZone"* %1, i64 1
  %26 = bitcast %"class.icu_69::TimeZone"* %25 to %"class.icu_69::TimeZoneRule"**
  %27 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %26, align 8
  %28 = bitcast %"class.icu_69::InitialTimeZoneRule"* %24 to i8 (%"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)***
  %29 = load i8 (%"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)**, i8 (%"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*** %28, align 8
  %30 = getelementptr inbounds i8 (%"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %29, i64 5
  %31 = load i8 (%"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::InitialTimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %30, align 8
  %32 = tail call signext i8 %31(%"class.icu_69::InitialTimeZoneRule"* %24, %"class.icu_69::TimeZoneRule"* dereferenceable(80) %27) #8
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %102

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 2
  %36 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %35, align 8
  %37 = getelementptr inbounds %"class.icu_69::TimeZone", %"class.icu_69::TimeZone"* %1, i64 1, i32 1
  %38 = bitcast %"class.icu_69::UnicodeString"* %37 to %"class.icu_69::UVector"**
  %39 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %38, align 8
  %40 = icmp eq %"class.icu_69::UVector"* %36, null
  %41 = icmp eq %"class.icu_69::UVector"* %39, null
  %42 = and i1 %40, %41
  br i1 %42, label %68, label %43

43:                                               ; preds = %34
  %44 = or i1 %40, %41
  br i1 %44, label %102, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %36, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %39, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %51, label %102

51:                                               ; preds = %45
  %52 = icmp sgt i32 %47, 0
  br i1 %52, label %55, label %68

53:                                               ; preds = %55
  %54 = icmp eq i32 %67, %47
  br i1 %54, label %68, label %55

55:                                               ; preds = %51, %53
  %56 = phi i32 [ %67, %53 ], [ 0, %51 ]
  %57 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %36, i32 %56) #8
  %58 = bitcast i8* %57 to %"class.icu_69::TimeZoneRule"*
  %59 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %39, i32 %56) #8
  %60 = bitcast i8* %59 to %"class.icu_69::TimeZoneRule"*
  %61 = bitcast i8* %57 to i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)***
  %62 = load i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)**, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*** %61, align 8
  %63 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %62, i64 5
  %64 = load i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %63, align 8
  %65 = tail call signext i8 %64(%"class.icu_69::TimeZoneRule"* %58, %"class.icu_69::TimeZoneRule"* dereferenceable(80) %60) #8
  %66 = icmp eq i8 %65, 0
  %67 = add nuw nsw i32 %56, 1
  br i1 %66, label %53, label %102

68:                                               ; preds = %53, %51, %34
  %69 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 3
  %70 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %69, align 8
  %71 = getelementptr inbounds %"class.icu_69::TimeZone", %"class.icu_69::TimeZone"* %1, i64 1, i32 1, i32 1
  %72 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %71 to %"class.icu_69::UVector"**
  %73 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %72, align 8
  %74 = icmp eq %"class.icu_69::UVector"* %70, null
  %75 = icmp eq %"class.icu_69::UVector"* %73, null
  %76 = and i1 %74, %75
  br i1 %76, label %102, label %77

77:                                               ; preds = %68
  %78 = or i1 %74, %75
  br i1 %78, label %102, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %70, i64 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %73, i64 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %81, %83
  br i1 %84, label %85, label %102

85:                                               ; preds = %79
  %86 = icmp sgt i32 %81, 0
  br i1 %86, label %89, label %102

87:                                               ; preds = %89
  %88 = icmp eq i32 %101, %81
  br i1 %88, label %102, label %89

89:                                               ; preds = %85, %87
  %90 = phi i32 [ %101, %87 ], [ 0, %85 ]
  %91 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %70, i32 %90) #8
  %92 = bitcast i8* %91 to %"class.icu_69::TimeZoneRule"*
  %93 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %73, i32 %90) #8
  %94 = bitcast i8* %93 to %"class.icu_69::TimeZoneRule"*
  %95 = bitcast i8* %91 to i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)***
  %96 = load i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)**, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*** %95, align 8
  %97 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %96, i64 5
  %98 = load i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)*, i8 (%"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"*)** %97, align 8
  %99 = tail call signext i8 %98(%"class.icu_69::TimeZoneRule"* %92, %"class.icu_69::TimeZoneRule"* dereferenceable(80) %94) #8
  %100 = icmp eq i8 %99, 0
  %101 = add nuw nsw i32 %90, 1
  br i1 %100, label %87, label %102

102:                                              ; preds = %55, %89, %87, %8, %79, %77, %45, %43, %85, %68, %22, %2
  %103 = phi i8 [ 1, %2 ], [ 0, %8 ], [ 0, %22 ], [ 1, %68 ], [ 1, %85 ], [ 0, %43 ], [ 0, %45 ], [ 0, %77 ], [ 0, %79 ], [ 0, %89 ], [ 1, %87 ], [ 0, %55 ]
  ret i8 %103
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6917RuleBasedTimeZone17getNextTransitionEdaRNS_18TimeZoneTransitionE(%"class.icu_69::RuleBasedTimeZone"* nocapture, double, i8 signext, %"class.icu_69::TimeZoneTransition"* dereferenceable(32)) unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  %7 = alloca %"class.icu_69::TimeZoneRule"*, align 8
  %8 = alloca %"class.icu_69::TimeZoneRule"*, align 8
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8
  store i32 0, i32* %5, align 4
  tail call void @umtx_lock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZZNK6icu_6917RuleBasedTimeZone13completeConstER10UErrorCodeE5gLock to %"class.icu_69::UMutex"*)) #8
  %10 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 5
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %4
  call void @_ZN6icu_6917RuleBasedTimeZone8completeER10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* %0, i32* nonnull dereferenceable(4) %5) #8
  br label %14

14:                                               ; preds = %4, %13
  call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZZNK6icu_6917RuleBasedTimeZone13completeConstER10UErrorCodeE5gLock to %"class.icu_69::UMutex"*)) #8
  %15 = load i32, i32* %5, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %29

17:                                               ; preds = %14
  %18 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %19 = bitcast %"class.icu_69::TimeZoneRule"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  store %"class.icu_69::TimeZoneRule"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::TimeZoneRule"*), %"class.icu_69::TimeZoneRule"** %7, align 8
  %20 = bitcast %"class.icu_69::TimeZoneRule"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  store %"class.icu_69::TimeZoneRule"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::TimeZoneRule"*), %"class.icu_69::TimeZoneRule"** %8, align 8
  %21 = call signext i8 @_ZNK6icu_6917RuleBasedTimeZone8findNextEdaRdRPNS_12TimeZoneRuleES4_(%"class.icu_69::RuleBasedTimeZone"* %0, double %1, i8 signext %2, double* nonnull dereferenceable(8) %6, %"class.icu_69::TimeZoneRule"** nonnull dereferenceable(8) %7, %"class.icu_69::TimeZoneRule"** nonnull dereferenceable(8) %8)
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %17
  %24 = load double, double* %6, align 8
  call void @_ZN6icu_6918TimeZoneTransition7setTimeEd(%"class.icu_69::TimeZoneTransition"* %3, double %24) #8
  %25 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %7, align 8
  call void @_ZN6icu_6918TimeZoneTransition7setFromERKNS_12TimeZoneRuleE(%"class.icu_69::TimeZoneTransition"* %3, %"class.icu_69::TimeZoneRule"* dereferenceable(80) %25) #8
  %26 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %8, align 8
  call void @_ZN6icu_6918TimeZoneTransition5setToERKNS_12TimeZoneRuleE(%"class.icu_69::TimeZoneTransition"* %3, %"class.icu_69::TimeZoneRule"* dereferenceable(80) %26) #8
  br label %27

27:                                               ; preds = %17, %23
  %28 = phi i8 [ 1, %23 ], [ 0, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br label %29

29:                                               ; preds = %14, %27
  %30 = phi i8 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8
  ret i8 %30
}

declare void @_ZN6icu_6918TimeZoneTransition7setTimeEd(%"class.icu_69::TimeZoneTransition"*, double) local_unnamed_addr #2

declare void @_ZN6icu_6918TimeZoneTransition7setFromERKNS_12TimeZoneRuleE(%"class.icu_69::TimeZoneTransition"*, %"class.icu_69::TimeZoneRule"* dereferenceable(80)) local_unnamed_addr #2

declare void @_ZN6icu_6918TimeZoneTransition5setToERKNS_12TimeZoneRuleE(%"class.icu_69::TimeZoneTransition"*, %"class.icu_69::TimeZoneRule"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6917RuleBasedTimeZone21getPreviousTransitionEdaRNS_18TimeZoneTransitionE(%"class.icu_69::RuleBasedTimeZone"* nocapture, double, i8 signext, %"class.icu_69::TimeZoneTransition"* dereferenceable(32)) unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  %7 = alloca %"class.icu_69::TimeZoneRule"*, align 8
  %8 = alloca %"class.icu_69::TimeZoneRule"*, align 8
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8
  store i32 0, i32* %5, align 4
  tail call void @umtx_lock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZZNK6icu_6917RuleBasedTimeZone13completeConstER10UErrorCodeE5gLock to %"class.icu_69::UMutex"*)) #8
  %10 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 5
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %4
  call void @_ZN6icu_6917RuleBasedTimeZone8completeER10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* %0, i32* nonnull dereferenceable(4) %5) #8
  br label %14

14:                                               ; preds = %4, %13
  call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZZNK6icu_6917RuleBasedTimeZone13completeConstER10UErrorCodeE5gLock to %"class.icu_69::UMutex"*)) #8
  %15 = load i32, i32* %5, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %29

17:                                               ; preds = %14
  %18 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %19 = bitcast %"class.icu_69::TimeZoneRule"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  store %"class.icu_69::TimeZoneRule"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::TimeZoneRule"*), %"class.icu_69::TimeZoneRule"** %7, align 8
  %20 = bitcast %"class.icu_69::TimeZoneRule"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  store %"class.icu_69::TimeZoneRule"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::TimeZoneRule"*), %"class.icu_69::TimeZoneRule"** %8, align 8
  %21 = call signext i8 @_ZNK6icu_6917RuleBasedTimeZone8findPrevEdaRdRPNS_12TimeZoneRuleES4_(%"class.icu_69::RuleBasedTimeZone"* %0, double %1, i8 signext %2, double* nonnull dereferenceable(8) %6, %"class.icu_69::TimeZoneRule"** nonnull dereferenceable(8) %7, %"class.icu_69::TimeZoneRule"** nonnull dereferenceable(8) %8)
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %17
  %24 = load double, double* %6, align 8
  call void @_ZN6icu_6918TimeZoneTransition7setTimeEd(%"class.icu_69::TimeZoneTransition"* %3, double %24) #8
  %25 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %7, align 8
  call void @_ZN6icu_6918TimeZoneTransition7setFromERKNS_12TimeZoneRuleE(%"class.icu_69::TimeZoneTransition"* %3, %"class.icu_69::TimeZoneRule"* dereferenceable(80) %25) #8
  %26 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %8, align 8
  call void @_ZN6icu_6918TimeZoneTransition5setToERKNS_12TimeZoneRuleE(%"class.icu_69::TimeZoneTransition"* %3, %"class.icu_69::TimeZoneRule"* dereferenceable(80) %26) #8
  br label %27

27:                                               ; preds = %17, %23
  %28 = phi i8 [ 1, %23 ], [ 0, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br label %29

29:                                               ; preds = %14, %27
  %30 = phi i8 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8
  ret i8 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6917RuleBasedTimeZone8findPrevEdaRdRPNS_12TimeZoneRuleES4_(%"class.icu_69::RuleBasedTimeZone"* nocapture readonly, double, i8 signext, double* nocapture dereferenceable(8), %"class.icu_69::TimeZoneRule"** nocapture dereferenceable(8), %"class.icu_69::TimeZoneRule"** nocapture dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 4
  %10 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %9, align 8
  %11 = icmp eq %"class.icu_69::UVector"* %10, null
  br i1 %11, label %133, label %12

12:                                               ; preds = %6
  %13 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* nonnull %10, i32 0) #8
  %14 = bitcast i8* %13 to double*
  %15 = load double, double* %14, align 8
  %16 = icmp ne i8 %2, 0
  %17 = fcmp oeq double %15, %1
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %26

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %13, i64 8
  %21 = bitcast i8* %20 to %"class.icu_69::TimeZoneRule"**
  %22 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %21, align 8
  %23 = getelementptr inbounds i8, i8* %13, i64 16
  %24 = bitcast i8* %23 to %"class.icu_69::TimeZoneRule"**
  %25 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %24, align 8
  br label %119

26:                                               ; preds = %12
  %27 = fcmp olt double %15, %1
  br i1 %27, label %28, label %133

28:                                               ; preds = %26
  %29 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %9, align 8
  %30 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %29, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = add nsw i32 %31, -1
  %33 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %29, i32 %32) #8
  %34 = bitcast i8* %33 to double*
  %35 = load double, double* %34, align 8
  %36 = fcmp oeq double %35, %1
  %37 = and i1 %16, %36
  br i1 %37, label %38, label %45

38:                                               ; preds = %28
  %39 = getelementptr inbounds i8, i8* %33, i64 8
  %40 = bitcast i8* %39 to %"class.icu_69::TimeZoneRule"**
  %41 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %40, align 8
  %42 = getelementptr inbounds i8, i8* %33, i64 16
  %43 = bitcast i8* %42 to %"class.icu_69::TimeZoneRule"**
  %44 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %43, align 8
  br label %119

45:                                               ; preds = %28
  %46 = fcmp olt double %35, %1
  br i1 %46, label %47, label %93

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 3
  %49 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %48, align 8
  %50 = icmp eq %"class.icu_69::UVector"* %49, null
  br i1 %50, label %86, label %51

51:                                               ; preds = %47
  %52 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* nonnull %49, i32 0) #8
  %53 = bitcast i8* %52 to %"class.icu_69::TimeZoneRule"*
  %54 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %48, align 8
  %55 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %54, i32 1) #8
  %56 = bitcast i8* %55 to %"class.icu_69::TimeZoneRule"*
  %57 = bitcast double* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #8
  store double 0xFFFFFFFFFFFFFFFF, double* %7, align 8
  %58 = bitcast double* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #8
  store double 0xFFFFFFFFFFFFFFFF, double* %8, align 8
  %59 = tail call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %56) #8
  %60 = tail call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %56) #8
  %61 = bitcast i8* %52 to i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)***
  %62 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)**, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*** %61, align 8
  %63 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %62, i64 10
  %64 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %63, align 8
  %65 = call signext i8 %64(%"class.icu_69::TimeZoneRule"* %53, double %1, i32 %59, i32 %60, i8 signext %2, double* nonnull dereferenceable(8) %7) #8
  %66 = call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %53) #8
  %67 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %53) #8
  %68 = bitcast i8* %55 to i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)***
  %69 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)**, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*** %68, align 8
  %70 = getelementptr inbounds i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %69, i64 10
  %71 = load i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)*, i8 (%"class.icu_69::TimeZoneRule"*, double, i32, i32, i8, double*)** %70, align 8
  %72 = call signext i8 %71(%"class.icu_69::TimeZoneRule"* %56, double %1, i32 %66, i32 %67, i8 signext %2, double* nonnull dereferenceable(8) %8) #8
  %73 = or i8 %72, %65
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %118, label %75

75:                                               ; preds = %51
  %76 = icmp eq i8 %72, 0
  %77 = load double, double* %7, align 8
  br i1 %76, label %81, label %78

78:                                               ; preds = %75
  %79 = load double, double* %8, align 8
  %80 = fcmp ogt double %77, %79
  br i1 %80, label %81, label %82

81:                                               ; preds = %75, %78
  br label %82

82:                                               ; preds = %78, %81
  %83 = phi %"class.icu_69::TimeZoneRule"* [ %56, %78 ], [ %53, %81 ]
  %84 = phi %"class.icu_69::TimeZoneRule"* [ %53, %78 ], [ %56, %81 ]
  %85 = phi double [ %79, %78 ], [ %77, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #8
  br label %119

86:                                               ; preds = %47
  %87 = getelementptr inbounds i8, i8* %33, i64 8
  %88 = bitcast i8* %87 to %"class.icu_69::TimeZoneRule"**
  %89 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %88, align 8
  %90 = getelementptr inbounds i8, i8* %33, i64 16
  %91 = bitcast i8* %90 to %"class.icu_69::TimeZoneRule"**
  %92 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %91, align 8
  br label %119

93:                                               ; preds = %45
  %94 = add nsw i32 %31, -2
  %95 = icmp sgt i32 %94, -1
  br i1 %95, label %99, label %109

96:                                               ; preds = %99
  %97 = add nsw i32 %100, -1
  %98 = icmp sgt i32 %100, 0
  br i1 %98, label %99, label %109

99:                                               ; preds = %93, %96
  %100 = phi i32 [ %97, %96 ], [ %94, %93 ]
  %101 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %9, align 8
  %102 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %101, i32 %100) #8
  %103 = bitcast i8* %102 to double*
  %104 = load double, double* %103, align 8
  %105 = fcmp olt double %104, %1
  %106 = fcmp oeq double %104, %1
  %107 = and i1 %16, %106
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %96

109:                                              ; preds = %96, %99, %93
  %110 = phi double [ %35, %93 ], [ %104, %99 ], [ %104, %96 ]
  %111 = phi i8* [ %33, %93 ], [ %102, %99 ], [ %102, %96 ]
  %112 = getelementptr inbounds i8, i8* %111, i64 8
  %113 = bitcast i8* %112 to %"class.icu_69::TimeZoneRule"**
  %114 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %113, align 8
  %115 = getelementptr inbounds i8, i8* %111, i64 16
  %116 = bitcast i8* %115 to %"class.icu_69::TimeZoneRule"**
  %117 = load %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %116, align 8
  br label %119

118:                                              ; preds = %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #8
  br label %133

119:                                              ; preds = %38, %109, %86, %82, %19
  %120 = phi %"class.icu_69::TimeZoneRule"* [ %25, %19 ], [ %83, %82 ], [ %92, %86 ], [ %117, %109 ], [ %44, %38 ]
  %121 = phi %"class.icu_69::TimeZoneRule"* [ %22, %19 ], [ %84, %82 ], [ %89, %86 ], [ %114, %109 ], [ %41, %38 ]
  %122 = phi double [ %15, %19 ], [ %85, %82 ], [ %35, %86 ], [ %110, %109 ], [ %35, %38 ]
  %123 = call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %121) #8
  %124 = call i32 @_ZNK6icu_6912TimeZoneRule12getRawOffsetEv(%"class.icu_69::TimeZoneRule"* %120) #8
  %125 = icmp eq i32 %123, %124
  br i1 %125, label %126, label %132

126:                                              ; preds = %119
  %127 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %121) #8
  %128 = call i32 @_ZNK6icu_6912TimeZoneRule13getDSTSavingsEv(%"class.icu_69::TimeZoneRule"* %120) #8
  %129 = icmp eq i32 %127, %128
  br i1 %129, label %130, label %132

130:                                              ; preds = %126
  %131 = call signext i8 @_ZNK6icu_6917RuleBasedTimeZone8findPrevEdaRdRPNS_12TimeZoneRuleES4_(%"class.icu_69::RuleBasedTimeZone"* %0, double %122, i8 signext 0, double* dereferenceable(8) %3, %"class.icu_69::TimeZoneRule"** dereferenceable(8) %4, %"class.icu_69::TimeZoneRule"** dereferenceable(8) %5)
  br label %133

132:                                              ; preds = %126, %119
  store double %122, double* %3, align 8
  store %"class.icu_69::TimeZoneRule"* %121, %"class.icu_69::TimeZoneRule"** %4, align 8
  store %"class.icu_69::TimeZoneRule"* %120, %"class.icu_69::TimeZoneRule"** %5, align 8
  br label %133

133:                                              ; preds = %26, %118, %130, %132, %6
  %134 = phi i8 [ 0, %6 ], [ %131, %130 ], [ 1, %132 ], [ 0, %118 ], [ 0, %26 ]
  ret i8 %134
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6917RuleBasedTimeZone20countTransitionRulesER10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* nocapture readonly, i32* nocapture readnone dereferenceable(4)) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 2
  %4 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %3, align 8
  %5 = icmp eq %"class.icu_69::UVector"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ 0, %2 ]
  %11 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 3
  %12 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %11, align 8
  %13 = icmp eq %"class.icu_69::UVector"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, %10
  br label %18

18:                                               ; preds = %9, %14
  %19 = phi i32 [ %17, %14 ], [ %10, %9 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6917RuleBasedTimeZone16getTimeZoneRulesERPKNS_19InitialTimeZoneRuleEPPKNS_12TimeZoneRuleERiR10UErrorCode(%"class.icu_69::RuleBasedTimeZone"* nocapture readonly, %"class.icu_69::InitialTimeZoneRule"** nocapture dereferenceable(8), %"class.icu_69::TimeZoneRule"** nocapture, i32* nocapture dereferenceable(4), i32* nocapture readonly dereferenceable(4)) unnamed_addr #1 align 2 {
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %88

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 1
  %10 = bitcast %"class.icu_69::InitialTimeZoneRule"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.icu_69::InitialTimeZoneRule"** %1 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 2
  %14 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %13, align 8
  %15 = icmp ne %"class.icu_69::UVector"* %14, null
  %16 = load i32, i32* %3, align 4
  %17 = icmp sgt i32 %16, 0
  %18 = and i1 %15, %17
  br i1 %18, label %19, label %46

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %14, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %46

23:                                               ; preds = %19
  %24 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* nonnull %14, i32 0) #8
  %25 = bitcast %"class.icu_69::TimeZoneRule"** %2 to i8**
  store i8* %24, i8** %25, align 8
  %26 = load i32, i32* %3, align 4
  %27 = icmp sgt i32 %26, 1
  %28 = icmp ne i32 %21, 1
  %29 = and i1 %28, %27
  br i1 %29, label %30, label %46

30:                                               ; preds = %23, %30
  %31 = phi i64 [ %36, %30 ], [ 1, %23 ]
  %32 = phi i32 [ %34, %30 ], [ 1, %23 ]
  %33 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %13, align 8
  %34 = add nuw nsw i32 %32, 1
  %35 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %33, i32 %32) #8
  %36 = add nuw nsw i64 %31, 1
  %37 = getelementptr inbounds %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %2, i64 %31
  %38 = bitcast %"class.icu_69::TimeZoneRule"** %37 to i8**
  store i8* %35, i8** %38, align 8
  %39 = load i32, i32* %3, align 4
  %40 = sext i32 %39 to i64
  %41 = icmp slt i64 %36, %40
  %42 = icmp slt i32 %34, %21
  %43 = and i1 %42, %41
  br i1 %43, label %30, label %44

44:                                               ; preds = %30
  %45 = trunc i64 %36 to i32
  br label %46

46:                                               ; preds = %23, %44, %19, %8
  %47 = phi i32 [ %16, %8 ], [ %16, %19 ], [ %39, %44 ], [ %26, %23 ]
  %48 = phi i32 [ 0, %8 ], [ 0, %19 ], [ %45, %44 ], [ 1, %23 ]
  %49 = getelementptr inbounds %"class.icu_69::RuleBasedTimeZone", %"class.icu_69::RuleBasedTimeZone"* %0, i64 0, i32 3
  %50 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %49, align 8
  %51 = icmp ne %"class.icu_69::UVector"* %50, null
  %52 = icmp slt i32 %48, %47
  %53 = and i1 %51, %52
  br i1 %53, label %54, label %86

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %50, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %86

58:                                               ; preds = %54
  %59 = zext i32 %48 to i64
  %60 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* nonnull %50, i32 0) #8
  %61 = add nuw nsw i64 %59, 1
  %62 = getelementptr inbounds %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %2, i64 %59
  %63 = bitcast %"class.icu_69::TimeZoneRule"** %62 to i8**
  store i8* %60, i8** %63, align 8
  %64 = load i32, i32* %3, align 4
  %65 = trunc i64 %61 to i32
  %66 = icmp sgt i32 %64, %65
  %67 = icmp ne i32 %56, 1
  %68 = and i1 %67, %66
  br i1 %68, label %69, label %83

69:                                               ; preds = %58, %69
  %70 = phi i64 [ %75, %69 ], [ %61, %58 ]
  %71 = phi i32 [ %73, %69 ], [ 1, %58 ]
  %72 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %49, align 8
  %73 = add nuw nsw i32 %71, 1
  %74 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %72, i32 %71) #8
  %75 = add nuw nsw i64 %70, 1
  %76 = getelementptr inbounds %"class.icu_69::TimeZoneRule"*, %"class.icu_69::TimeZoneRule"** %2, i64 %70
  %77 = bitcast %"class.icu_69::TimeZoneRule"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = load i32, i32* %3, align 4
  %79 = trunc i64 %75 to i32
  %80 = icmp sgt i32 %78, %79
  %81 = icmp slt i32 %73, %56
  %82 = and i1 %81, %80
  br i1 %82, label %69, label %83

83:                                               ; preds = %69, %58
  %84 = phi i64 [ %61, %58 ], [ %75, %69 ]
  %85 = trunc i64 %84 to i32
  br label %86

86:                                               ; preds = %83, %54, %46
  %87 = phi i32 [ %48, %46 ], [ %48, %54 ], [ %85, %83 ]
  store i32 %87, i32* %3, align 4
  br label %88

88:                                               ; preds = %5, %86
  ret void
}

declare i8* @_ZN6icu_697UVector15orphanElementAtEi(%"class.icu_69::UVector"*, i32) local_unnamed_addr #2

declare void @_ZN6icu_697UVectorC1EiR10UErrorCode(%"class.icu_69::UVector"*, i32, i32* dereferenceable(4)) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK6icu_6917RuleBasedTimeZone13getLocalDeltaEiiiiii(%"class.icu_69::RuleBasedTimeZone"* nocapture readnone, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = add nsw i32 %2, %1
  %9 = add nsw i32 %4, %3
  %10 = icmp ne i32 %2, 0
  %11 = icmp eq i32 %4, 0
  %12 = and i1 %10, %11
  %13 = icmp eq i32 %2, 0
  %14 = icmp ne i32 %4, 0
  %15 = and i1 %13, %14
  %16 = icmp slt i32 %9, %8
  br i1 %16, label %32, label %17

17:                                               ; preds = %7
  %18 = and i32 %5, 3
  %19 = icmp eq i32 %18, 1
  %20 = and i1 %12, %19
  br i1 %20, label %47, label %21

21:                                               ; preds = %17
  %22 = icmp eq i32 %18, 3
  %23 = and i1 %15, %22
  br i1 %23, label %47, label %24

24:                                               ; preds = %21
  %25 = and i1 %15, %19
  %26 = and i1 %12, %22
  %27 = or i1 %25, %26
  br i1 %27, label %47, label %28

28:                                               ; preds = %24
  %29 = and i32 %5, 12
  %30 = icmp eq i32 %29, 12
  %31 = select i1 %30, i32 %8, i32 %9
  br label %47

32:                                               ; preds = %7
  %33 = and i32 %6, 3
  %34 = icmp eq i32 %33, 1
  %35 = and i1 %12, %34
  br i1 %35, label %47, label %36

36:                                               ; preds = %32
  %37 = icmp eq i32 %33, 3
  %38 = and i1 %15, %37
  br i1 %38, label %47, label %39

39:                                               ; preds = %36
  %40 = and i1 %15, %34
  %41 = and i1 %12, %37
  %42 = or i1 %40, %41
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = and i32 %6, 12
  %45 = icmp eq i32 %44, 4
  %46 = select i1 %45, i32 %8, i32 %9
  br label %47

47:                                               ; preds = %43, %39, %32, %36, %28, %24, %17, %21
  %48 = phi i32 [ %8, %21 ], [ %8, %17 ], [ %9, %24 ], [ %31, %28 ], [ %9, %36 ], [ %9, %32 ], [ %8, %39 ], [ %46, %43 ]
  ret i32 %48
}

declare i32 @_ZNK6icu_698TimeZone13getDSTSavingsEv(%"class.icu_69::TimeZone"*) unnamed_addr #2

declare signext i8 @_ZNK6icu_6913BasicTimeZone24hasEquivalentTransitionsERKS0_ddaR10UErrorCode(%"class.icu_69::BasicTimeZone"*, %"class.icu_69::BasicTimeZone"* dereferenceable(72), double, double, i8 signext, i32* dereferenceable(4)) unnamed_addr #2

declare void @_ZNK6icu_6913BasicTimeZone18getSimpleRulesNearEdRPNS_19InitialTimeZoneRuleERPNS_18AnnualTimeZoneRuleES6_R10UErrorCode(%"class.icu_69::BasicTimeZone"*, double, %"class.icu_69::InitialTimeZoneRule"** dereferenceable(8), %"class.icu_69::AnnualTimeZoneRule"** dereferenceable(8), %"class.icu_69::AnnualTimeZoneRule"** dereferenceable(8), i32* dereferenceable(4)) unnamed_addr #2

declare dereferenceable(72) %"class.icu_69::TimeZone"* @_ZN6icu_698TimeZoneaSERKS0_(%"class.icu_69::TimeZone"*, %"class.icu_69::TimeZone"* dereferenceable(72)) local_unnamed_addr #2

declare signext i8 @_ZNK6icu_6913UnicodeString8doEqualsERKS0_i(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind allocsize(0) }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
