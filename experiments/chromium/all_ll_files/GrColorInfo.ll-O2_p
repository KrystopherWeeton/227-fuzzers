; ModuleID = '../../third_party/skia/src/gpu/GrColorInfo.cpp'
source_filename = "../../third_party/skia/src/gpu/GrColorInfo.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrColorInfo = type { %class.sk_sp, %class.sk_sp.6, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.sk_sp.6 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

@switch.table._ZN11GrColorInfoC2ERK11SkColorInfo = private unnamed_addr constant [21 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 9, i32 10, i32 0, i32 0, i32 11, i32 15, i32 14, i32 16, i32 7, i32 13, i32 19, i32 17, i32 18, i32 20], align 4

@_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE = hidden unnamed_addr alias void (%class.GrColorInfo*, i32, i32, %class.sk_sp*), void (%class.GrColorInfo*, i32, i32, %class.sk_sp*)* @_ZN11GrColorInfoC2E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE
@_ZN11GrColorInfoC1ERK11SkColorInfo = hidden unnamed_addr alias void (%class.GrColorInfo*, %class.SkColorInfo*), void (%class.GrColorInfo*, %class.SkColorInfo*)* @_ZN11GrColorInfoC2ERK11SkColorInfo
@_ZN11GrColorInfoC1ERKS_ = hidden unnamed_addr alias void (%class.GrColorInfo*, %class.GrColorInfo*), void (%class.GrColorInfo*, %class.GrColorInfo*)* @_ZN11GrColorInfoC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrColorInfoC2E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo* nocapture, i32, i32, %class.sk_sp* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.6, align 8
  %6 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %7 = bitcast %class.sk_sp* %3 to i64*
  %8 = load i64, i64* %7, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %6, align 8
  %9 = bitcast %class.GrColorInfo* %0 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %0, i64 0, i32 1
  %11 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %10, i64 0, i32 0
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %11, align 8
  %12 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %0, i64 0, i32 2
  store i32 %1, i32* %12, align 8
  %13 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %0, i64 0, i32 3
  store i32 %2, i32* %13, align 4
  %14 = bitcast %class.sk_sp.6* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  %15 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #6
  %16 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %0, i64 0, i32 0, i32 0
  %17 = load %class.SkColorSpace*, %class.SkColorSpace** %16, align 8
  call void @_ZN17GrColorSpaceXform4MakeEP12SkColorSpace11SkAlphaTypeS1_S2_(%class.sk_sp.6* nonnull sret %5, %class.SkColorSpace* %15, i32 3, %class.SkColorSpace* %17, i32 3) #6
  %18 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %5, i64 0, i32 0
  %19 = bitcast %class.sk_sp.6* %5 to i64*
  %20 = load i64, i64* %19, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %18, align 8
  %21 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %11, align 8
  %22 = bitcast %class.sk_sp.6* %10 to i64*
  store i64 %20, i64* %22, align 8
  %23 = icmp eq %class.GrColorSpaceXform* %21, null
  br i1 %23, label %47, label %24

24:                                               ; preds = %4
  %25 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = bitcast %class.GrColorSpaceXform* %21 to %class.SkRefCntBase*
  %30 = bitcast %class.GrColorSpaceXform* %21 to void (%class.SkRefCntBase*)***
  %31 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, i64 2
  %33 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, align 8
  call void %33(%class.SkRefCntBase* nonnull %29) #6
  br label %34

34:                                               ; preds = %24, %28
  %35 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %18, align 8
  %36 = icmp eq %class.GrColorSpaceXform* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.GrColorSpaceXform* %35 to %class.SkRefCntBase*
  %43 = bitcast %class.GrColorSpaceXform* %35 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8
  call void %46(%class.SkRefCntBase* nonnull %42) #6
  br label %47

47:                                               ; preds = %4, %34, %37, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN17GrColorSpaceXform4MakeEP12SkColorSpace11SkAlphaTypeS1_S2_(%class.sk_sp.6* sret, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) local_unnamed_addr #2

declare %class.SkColorSpace* @_Z17sk_srgb_singletonv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrColorInfoC2ERK11SkColorInfo(%class.GrColorInfo* nocapture, %class.SkColorInfo* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.6, align 8
  %4 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 21
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @llvm.trap() #6
  unreachable

8:                                                ; preds = %2
  %9 = sext i32 %5 to i64
  %10 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZN11GrColorInfoC2ERK11SkColorInfo, i64 0, i64 %9
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %1, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %1, i64 0, i32 0, i32 0
  %15 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8, !noalias !2
  %16 = icmp eq %class.SkColorSpace* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic, !noalias !2
  br label %20

20:                                               ; preds = %8, %17
  %21 = ptrtoint %class.SkColorSpace* %15 to i64
  %22 = bitcast %class.GrColorInfo* %0 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %0, i64 0, i32 1
  %24 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %23, i64 0, i32 0
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %24, align 8
  %25 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %0, i64 0, i32 2
  store i32 %11, i32* %25, align 8
  %26 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %0, i64 0, i32 3
  store i32 %13, i32* %26, align 4
  %27 = bitcast %class.sk_sp.6* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #6
  %29 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %0, i64 0, i32 0, i32 0
  %30 = load %class.SkColorSpace*, %class.SkColorSpace** %29, align 8
  call void @_ZN17GrColorSpaceXform4MakeEP12SkColorSpace11SkAlphaTypeS1_S2_(%class.sk_sp.6* nonnull sret %3, %class.SkColorSpace* %28, i32 3, %class.SkColorSpace* %30, i32 3) #6
  %31 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %3, i64 0, i32 0
  %32 = bitcast %class.sk_sp.6* %3 to i64*
  %33 = load i64, i64* %32, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %31, align 8
  %34 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %24, align 8
  %35 = bitcast %class.sk_sp.6* %23 to i64*
  store i64 %33, i64* %35, align 8
  %36 = icmp eq %class.GrColorSpaceXform* %34, null
  br i1 %36, label %60, label %37

37:                                               ; preds = %20
  %38 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %34, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.GrColorSpaceXform* %34 to %class.SkRefCntBase*
  %43 = bitcast %class.GrColorSpaceXform* %34 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8
  call void %46(%class.SkRefCntBase* nonnull %42) #6
  br label %47

47:                                               ; preds = %41, %37
  %48 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %31, align 8
  %49 = icmp eq %class.GrColorSpaceXform* %48, null
  br i1 %49, label %60, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %48, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 -1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %60

54:                                               ; preds = %50
  %55 = bitcast %class.GrColorSpaceXform* %48 to %class.SkRefCntBase*
  %56 = bitcast %class.GrColorSpaceXform* %48 to void (%class.SkRefCntBase*)***
  %57 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, i64 2
  %59 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, align 8
  call void %59(%class.SkRefCntBase* nonnull %55) #6
  br label %60

60:                                               ; preds = %54, %50, %47, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11GrColorInfoC2ERKS_(%class.GrColorInfo* nocapture, %class.GrColorInfo* nocapture readonly dereferenceable(24)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %1, i64 0, i32 0, i32 0
  %5 = load %class.SkColorSpace*, %class.SkColorSpace** %4, align 8
  %6 = icmp eq %class.SkColorSpace* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkColorSpace* %5, %class.SkColorSpace** %3, align 8
  %11 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %0, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %1, i64 0, i32 1, i32 0
  %13 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %12, align 8
  %14 = icmp eq %class.GrColorSpaceXform* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %10, %15
  store %class.GrColorSpaceXform* %13, %class.GrColorSpaceXform** %11, align 8
  %19 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %0, i64 0, i32 2
  %20 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %1, i64 0, i32 2
  %21 = bitcast i32* %20 to i64*
  %22 = bitcast i32* %19 to i64*
  %23 = load i64, i64* %21, align 8
  store i64 %23, i64* %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %class.GrColorInfo* @_ZN11GrColorInfoaSERKS_(%class.GrColorInfo* returned, %class.GrColorInfo* readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.GrColorInfo* %0, %1
  br i1 %3, label %42, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %1, i64 0, i32 0, i32 0
  %6 = load %class.SkColorSpace*, %class.SkColorSpace** %5, align 8
  %7 = icmp eq %class.SkColorSpace* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %8, %4
  %12 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %0, i64 0, i32 0, i32 0
  %13 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  store %class.SkColorSpace* %6, %class.SkColorSpace** %12, align 8
  %14 = icmp eq %class.SkColorSpace* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = bitcast %class.SkColorSpace* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #7
  br label %21

21:                                               ; preds = %11, %15, %19
  %22 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %1, i64 0, i32 1, i32 0
  %23 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %22, align 8
  %24 = icmp eq %class.GrColorSpaceXform* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %23, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  br label %28

28:                                               ; preds = %25, %21
  %29 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %0, i64 0, i32 1, i32 0
  %30 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %29, align 8
  store %class.GrColorSpaceXform* %23, %class.GrColorSpaceXform** %29, align 8
  %31 = icmp eq %class.GrColorSpaceXform* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %class.GrColorSpaceXform* %30 to %class.SkRefCntBase*
  %38 = bitcast %class.GrColorSpaceXform* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #6
  br label %42

42:                                               ; preds = %2, %28, %32, %36
  %43 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %0, i64 0, i32 2
  %44 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %1, i64 0, i32 2
  %45 = bitcast i32* %44 to i64*
  %46 = bitcast i32* %43 to i64*
  %47 = load i64, i64* %45, align 8
  store i64 %47, i64* %46, align 8
  ret %class.GrColorInfo* %0
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!4 = distinct !{!4, !"_ZNK11SkColorInfo13refColorSpaceEv"}
