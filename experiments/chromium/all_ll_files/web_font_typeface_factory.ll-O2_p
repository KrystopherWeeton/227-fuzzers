; ModuleID = '../../third_party/blink/renderer/platform/fonts/web_font_typeface_factory.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/web_font_typeface_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp.6 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::FontFormatCheck" = type <{ %"class.WTF::Vector", i32, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%class.sk_sp.11 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkMemoryStream = type { %class.SkStreamMemory, %class.sk_sp.6, i64 }
%class.SkStreamMemory = type { %class.SkStreamAsset }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkStream = type { i32 (...)** }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.17", [4 x i8] }>
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i32 }

@.str = private unnamed_addr constant [77 x i8] c"../../third_party/blink/renderer/platform/fonts/web_font_typeface_factory.cc\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"!typeface\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"Blink.Fonts.VariableFontsRatio\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase25is_colrv_1_fonts_enabled_E = external local_unnamed_addr global i8, align 1
@_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22WebFontTypefaceFactory14CreateTypefaceE5sk_spI6SkDataERS1_I10SkTypefaceE(%class.sk_sp.6* nocapture readonly, %class.sk_sp* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.blink::FontFormatCheck", align 8
  %5 = alloca %class.sk_sp.6, align 8
  %6 = alloca %class.sk_sp.6, align 8
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %class.sk_sp.11, align 8
  %9 = alloca %class.sk_sp, align 8
  %10 = alloca %class.sk_sp.11, align 8
  %11 = alloca %class.sk_sp, align 8
  %12 = alloca %class.sk_sp.11, align 8
  %13 = alloca %class.sk_sp, align 8
  %14 = alloca %class.sk_sp.11, align 8
  %15 = alloca %class.sk_sp, align 8
  %16 = alloca %class.sk_sp.11, align 8
  %17 = alloca %class.sk_sp, align 8
  %18 = alloca %class.sk_sp.11, align 8
  %19 = alloca %class.sk_sp, align 8
  %20 = alloca %class.sk_sp.11, align 8
  %21 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %22 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %23 = icmp eq %class.SkTypeface* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %2
  %25 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str, i64 0, i64 0), i32 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0)) #5
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #5
  br label %27

27:                                               ; preds = %2, %24
  %28 = bitcast %"class.blink::FontFormatCheck"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #5
  %29 = getelementptr inbounds %"class.blink::FontFormatCheck", %"class.blink::FontFormatCheck"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::FontFormatCheck", %"class.blink::FontFormatCheck"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %31 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %5, i64 0, i32 0
  %32 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::FontFormatCheck"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 24, i1 false)
  %34 = load %class.SkData*, %class.SkData** %32, align 8
  %35 = icmp eq %class.SkData* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %class.SkData, %class.SkData* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic
  br label %39

39:                                               ; preds = %27, %36
  store %class.SkData* %34, %class.SkData** %31, align 8
  call void @_ZN5blink15FontFormatCheckC1E5sk_spI6SkDataE(%"class.blink::FontFormatCheck"* nonnull %4, %class.sk_sp.6* nonnull %5) #5
  %40 = load %class.SkData*, %class.SkData** %31, align 8
  %41 = icmp eq %class.SkData* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %class.SkData, %class.SkData* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %40) #5
  %47 = bitcast %class.SkData* %40 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %47) #5
  br label %48

48:                                               ; preds = %39, %42, %46
  %49 = call i8* @_Znwm(i64 24) #6
  %50 = bitcast i8* %49 to %class.SkMemoryStream*
  %51 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  %52 = load %class.SkData*, %class.SkData** %32, align 8
  %53 = icmp eq %class.SkData* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %class.SkData, %class.SkData* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 1 monotonic
  br label %57

57:                                               ; preds = %48, %54
  store %class.SkData* %52, %class.SkData** %51, align 8
  call void @_ZN14SkMemoryStreamC1E5sk_spI6SkDataE(%class.SkMemoryStream* nonnull %50, %class.sk_sp.6* nonnull %6) #5
  %58 = bitcast i8* %49 to %class.SkStreamAsset*
  %59 = load %class.SkData*, %class.SkData** %51, align 8
  %60 = icmp eq %class.SkData* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %class.SkData, %class.SkData* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %59) #5
  %66 = bitcast %class.SkData* %59 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %66) #5
  br label %67

67:                                               ; preds = %57, %61, %65
  %68 = call zeroext i1 @_ZN5blink15FontFormatCheck14IsVariableFontEv(%"class.blink::FontFormatCheck"* nonnull %4) #5
  br i1 %68, label %134, label %69

69:                                               ; preds = %67
  %70 = call zeroext i1 @_ZN5blink15FontFormatCheck11IsColorFontEv(%"class.blink::FontFormatCheck"* nonnull %4) #5
  br i1 %70, label %134, label %71

71:                                               ; preds = %69
  %72 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #5
  %73 = bitcast %class.sk_sp.11* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #5
  call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.11* nonnull sret %8) #5
  %74 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %8, i64 0, i32 0
  %75 = load %class.SkFontMgr*, %class.SkFontMgr** %74, align 8
  call void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp* nonnull sret %7, %class.SkFontMgr* %75, %class.SkStreamAsset* nonnull %58, i32 0) #5
  %76 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %77 = bitcast %class.sk_sp* %7 to i64*
  %78 = load i64, i64* %77, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %76, align 8
  %79 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %80 = bitcast %class.sk_sp* %1 to i64*
  store i64 %78, i64* %80, align 8
  %81 = icmp eq %class.SkTypeface* %79, null
  br i1 %81, label %105, label %82

82:                                               ; preds = %71
  %83 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %79, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = bitcast %class.SkTypeface* %79 to %class.SkRefCntBase*
  %88 = bitcast %class.SkTypeface* %79 to void (%class.SkRefCntBase*)***
  %89 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, i64 2
  %91 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, align 8
  call void %91(%class.SkRefCntBase* nonnull %87) #5
  br label %92

92:                                               ; preds = %82, %86
  %93 = load %class.SkTypeface*, %class.SkTypeface** %76, align 8
  %94 = icmp eq %class.SkTypeface* %93, null
  br i1 %94, label %105, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %93, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 -1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %105

99:                                               ; preds = %95
  %100 = bitcast %class.SkTypeface* %93 to %class.SkRefCntBase*
  %101 = bitcast %class.SkTypeface* %93 to void (%class.SkRefCntBase*)***
  %102 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %101, align 8
  %103 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, i64 2
  %104 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, align 8
  call void %104(%class.SkRefCntBase* nonnull %100) #5
  br label %105

105:                                              ; preds = %71, %92, %95, %99
  %106 = load %class.SkFontMgr*, %class.SkFontMgr** %74, align 8
  %107 = icmp eq %class.SkFontMgr* %106, null
  br i1 %107, label %118, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %106, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw add i32* %109, i32 -1 acq_rel
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %118

112:                                              ; preds = %108
  %113 = bitcast %class.SkFontMgr* %106 to %class.SkRefCntBase*
  %114 = bitcast %class.SkFontMgr* %106 to void (%class.SkRefCntBase*)***
  %115 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %114, align 8
  %116 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %115, i64 2
  %117 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %116, align 8
  call void %117(%class.SkRefCntBase* nonnull %113) #5
  br label %118

118:                                              ; preds = %105, %108, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #5
  %119 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %120 = icmp eq %class.SkTypeface* %119, null
  br i1 %120, label %555, label %121

121:                                              ; preds = %118
  %122 = load atomic i64, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %123 = inttoptr i64 %122 to %"class.base::HistogramBase"*
  %124 = icmp eq i64 %122, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %121
  %126 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 8, i32 9, i32 1) #5
  %127 = ptrtoint %"class.base::HistogramBase"* %126 to i64
  store atomic i64 %127, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %128

128:                                              ; preds = %121, %125
  %129 = phi %"class.base::HistogramBase"* [ %123, %121 ], [ %126, %125 ]
  %130 = bitcast %"class.base::HistogramBase"* %129 to void (%"class.base::HistogramBase"*, i32)***
  %131 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %131, i64 6
  %133 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %132, align 8
  call void %133(%"class.base::HistogramBase"* %129, i32 1) #5
  br label %555

134:                                              ; preds = %69, %67
  %135 = call zeroext i1 @_ZN5blink15FontFormatCheck19IsCbdtCblcColorFontEv(%"class.blink::FontFormatCheck"* nonnull %4) #5
  br i1 %135, label %136, label %201

136:                                              ; preds = %134
  %137 = bitcast %class.sk_sp* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #5
  %138 = bitcast %class.sk_sp.11* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #5
  call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.11* nonnull sret %10) #5
  %139 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %10, i64 0, i32 0
  %140 = load %class.SkFontMgr*, %class.SkFontMgr** %139, align 8
  call void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp* nonnull sret %9, %class.SkFontMgr* %140, %class.SkStreamAsset* nonnull %58, i32 0) #5
  %141 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  %142 = bitcast %class.sk_sp* %9 to i64*
  %143 = load i64, i64* %142, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %141, align 8
  %144 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %145 = bitcast %class.sk_sp* %1 to i64*
  store i64 %143, i64* %145, align 8
  %146 = icmp eq %class.SkTypeface* %144, null
  br i1 %146, label %170, label %147

147:                                              ; preds = %136
  %148 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %144, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = atomicrmw add i32* %148, i32 -1 acq_rel
  %150 = icmp eq i32 %149, 1
  br i1 %150, label %151, label %157

151:                                              ; preds = %147
  %152 = bitcast %class.SkTypeface* %144 to %class.SkRefCntBase*
  %153 = bitcast %class.SkTypeface* %144 to void (%class.SkRefCntBase*)***
  %154 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %153, align 8
  %155 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %154, i64 2
  %156 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %155, align 8
  call void %156(%class.SkRefCntBase* nonnull %152) #5
  br label %157

157:                                              ; preds = %147, %151
  %158 = load %class.SkTypeface*, %class.SkTypeface** %141, align 8
  %159 = icmp eq %class.SkTypeface* %158, null
  br i1 %159, label %170, label %160

160:                                              ; preds = %157
  %161 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %158, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = atomicrmw add i32* %161, i32 -1 acq_rel
  %163 = icmp eq i32 %162, 1
  br i1 %163, label %164, label %170

164:                                              ; preds = %160
  %165 = bitcast %class.SkTypeface* %158 to %class.SkRefCntBase*
  %166 = bitcast %class.SkTypeface* %158 to void (%class.SkRefCntBase*)***
  %167 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %166, align 8
  %168 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %167, i64 2
  %169 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %168, align 8
  call void %169(%class.SkRefCntBase* nonnull %165) #5
  br label %170

170:                                              ; preds = %136, %157, %160, %164
  %171 = load %class.SkFontMgr*, %class.SkFontMgr** %139, align 8
  %172 = icmp eq %class.SkFontMgr* %171, null
  br i1 %172, label %183, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %171, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = atomicrmw add i32* %174, i32 -1 acq_rel
  %176 = icmp eq i32 %175, 1
  br i1 %176, label %177, label %183

177:                                              ; preds = %173
  %178 = bitcast %class.SkFontMgr* %171 to %class.SkRefCntBase*
  %179 = bitcast %class.SkFontMgr* %171 to void (%class.SkRefCntBase*)***
  %180 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %179, align 8
  %181 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %180, i64 2
  %182 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %181, align 8
  call void %182(%class.SkRefCntBase* nonnull %178) #5
  br label %183

183:                                              ; preds = %170, %173, %177
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #5
  %184 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %185 = icmp eq %class.SkTypeface* %184, null
  br i1 %185, label %555, label %186

186:                                              ; preds = %183
  %187 = load atomic i64, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %188 = inttoptr i64 %187 to %"class.base::HistogramBase"*
  %189 = icmp eq i64 %187, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %186
  %191 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 8, i32 9, i32 1) #5
  %192 = ptrtoint %"class.base::HistogramBase"* %191 to i64
  store atomic i64 %192, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %193

193:                                              ; preds = %186, %190
  %194 = phi %"class.base::HistogramBase"* [ %188, %186 ], [ %191, %190 ]
  %195 = bitcast %"class.base::HistogramBase"* %194 to void (%"class.base::HistogramBase"*, i32)***
  %196 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %195, align 8
  %197 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %196, i64 6
  %198 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %197, align 8
  call void %198(%"class.base::HistogramBase"* %194, i32 3) #5
  %199 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %200 = icmp ne %class.SkTypeface* %199, null
  br label %555

201:                                              ; preds = %134
  %202 = call zeroext i1 @_ZN5blink15FontFormatCheck21IsColrCpalColorFontV1Ev(%"class.blink::FontFormatCheck"* nonnull %4) #5
  br i1 %202, label %203, label %271

203:                                              ; preds = %201
  %204 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase25is_colrv_1_fonts_enabled_E, align 1, !range !2
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %550, label %206

206:                                              ; preds = %203
  %207 = bitcast %class.sk_sp* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %207) #5
  %208 = bitcast %class.sk_sp.11* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #5
  call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.11* nonnull sret %12) #5
  %209 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %12, i64 0, i32 0
  %210 = load %class.SkFontMgr*, %class.SkFontMgr** %209, align 8
  call void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp* nonnull sret %11, %class.SkFontMgr* %210, %class.SkStreamAsset* nonnull %58, i32 0) #5
  %211 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  %212 = bitcast %class.sk_sp* %11 to i64*
  %213 = load i64, i64* %212, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %211, align 8
  %214 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %215 = bitcast %class.sk_sp* %1 to i64*
  store i64 %213, i64* %215, align 8
  %216 = icmp eq %class.SkTypeface* %214, null
  br i1 %216, label %240, label %217

217:                                              ; preds = %206
  %218 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %214, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = atomicrmw add i32* %218, i32 -1 acq_rel
  %220 = icmp eq i32 %219, 1
  br i1 %220, label %221, label %227

221:                                              ; preds = %217
  %222 = bitcast %class.SkTypeface* %214 to %class.SkRefCntBase*
  %223 = bitcast %class.SkTypeface* %214 to void (%class.SkRefCntBase*)***
  %224 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %223, align 8
  %225 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %224, i64 2
  %226 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %225, align 8
  call void %226(%class.SkRefCntBase* nonnull %222) #5
  br label %227

227:                                              ; preds = %217, %221
  %228 = load %class.SkTypeface*, %class.SkTypeface** %211, align 8
  %229 = icmp eq %class.SkTypeface* %228, null
  br i1 %229, label %240, label %230

230:                                              ; preds = %227
  %231 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %228, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = atomicrmw add i32* %231, i32 -1 acq_rel
  %233 = icmp eq i32 %232, 1
  br i1 %233, label %234, label %240

234:                                              ; preds = %230
  %235 = bitcast %class.SkTypeface* %228 to %class.SkRefCntBase*
  %236 = bitcast %class.SkTypeface* %228 to void (%class.SkRefCntBase*)***
  %237 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %236, align 8
  %238 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %237, i64 2
  %239 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %238, align 8
  call void %239(%class.SkRefCntBase* nonnull %235) #5
  br label %240

240:                                              ; preds = %206, %227, %230, %234
  %241 = load %class.SkFontMgr*, %class.SkFontMgr** %209, align 8
  %242 = icmp eq %class.SkFontMgr* %241, null
  br i1 %242, label %253, label %243

243:                                              ; preds = %240
  %244 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %241, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = atomicrmw add i32* %244, i32 -1 acq_rel
  %246 = icmp eq i32 %245, 1
  br i1 %246, label %247, label %253

247:                                              ; preds = %243
  %248 = bitcast %class.SkFontMgr* %241 to %class.SkRefCntBase*
  %249 = bitcast %class.SkFontMgr* %241 to void (%class.SkRefCntBase*)***
  %250 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %249, align 8
  %251 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %250, i64 2
  %252 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %251, align 8
  call void %252(%class.SkRefCntBase* nonnull %248) #5
  br label %253

253:                                              ; preds = %240, %243, %247
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %207) #5
  %254 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %255 = icmp eq %class.SkTypeface* %254, null
  br i1 %255, label %555, label %256

256:                                              ; preds = %253
  %257 = load atomic i64, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %258 = inttoptr i64 %257 to %"class.base::HistogramBase"*
  %259 = icmp eq i64 %257, 0
  br i1 %259, label %260, label %263

260:                                              ; preds = %256
  %261 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 8, i32 9, i32 1) #5
  %262 = ptrtoint %"class.base::HistogramBase"* %261 to i64
  store atomic i64 %262, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %263

263:                                              ; preds = %256, %260
  %264 = phi %"class.base::HistogramBase"* [ %258, %256 ], [ %261, %260 ]
  %265 = bitcast %"class.base::HistogramBase"* %264 to void (%"class.base::HistogramBase"*, i32)***
  %266 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %265, align 8
  %267 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %266, i64 6
  %268 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %267, align 8
  call void %268(%"class.base::HistogramBase"* %264, i32 7) #5
  %269 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %270 = icmp ne %class.SkTypeface* %269, null
  br label %555

271:                                              ; preds = %201
  %272 = call zeroext i1 @_ZN5blink15FontFormatCheck15IsSbixColorFontEv(%"class.blink::FontFormatCheck"* nonnull %4) #5
  br i1 %272, label %273, label %338

273:                                              ; preds = %271
  %274 = bitcast %class.sk_sp* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %274) #5
  %275 = bitcast %class.sk_sp.11* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %275) #5
  call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.11* nonnull sret %14) #5
  %276 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %14, i64 0, i32 0
  %277 = load %class.SkFontMgr*, %class.SkFontMgr** %276, align 8
  call void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp* nonnull sret %13, %class.SkFontMgr* %277, %class.SkStreamAsset* nonnull %58, i32 0) #5
  %278 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 0, i32 0
  %279 = bitcast %class.sk_sp* %13 to i64*
  %280 = load i64, i64* %279, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %278, align 8
  %281 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %282 = bitcast %class.sk_sp* %1 to i64*
  store i64 %280, i64* %282, align 8
  %283 = icmp eq %class.SkTypeface* %281, null
  br i1 %283, label %307, label %284

284:                                              ; preds = %273
  %285 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %281, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = atomicrmw add i32* %285, i32 -1 acq_rel
  %287 = icmp eq i32 %286, 1
  br i1 %287, label %288, label %294

288:                                              ; preds = %284
  %289 = bitcast %class.SkTypeface* %281 to %class.SkRefCntBase*
  %290 = bitcast %class.SkTypeface* %281 to void (%class.SkRefCntBase*)***
  %291 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %290, align 8
  %292 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %291, i64 2
  %293 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %292, align 8
  call void %293(%class.SkRefCntBase* nonnull %289) #5
  br label %294

294:                                              ; preds = %284, %288
  %295 = load %class.SkTypeface*, %class.SkTypeface** %278, align 8
  %296 = icmp eq %class.SkTypeface* %295, null
  br i1 %296, label %307, label %297

297:                                              ; preds = %294
  %298 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %295, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = atomicrmw add i32* %298, i32 -1 acq_rel
  %300 = icmp eq i32 %299, 1
  br i1 %300, label %301, label %307

301:                                              ; preds = %297
  %302 = bitcast %class.SkTypeface* %295 to %class.SkRefCntBase*
  %303 = bitcast %class.SkTypeface* %295 to void (%class.SkRefCntBase*)***
  %304 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %303, align 8
  %305 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %304, i64 2
  %306 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %305, align 8
  call void %306(%class.SkRefCntBase* nonnull %302) #5
  br label %307

307:                                              ; preds = %273, %294, %297, %301
  %308 = load %class.SkFontMgr*, %class.SkFontMgr** %276, align 8
  %309 = icmp eq %class.SkFontMgr* %308, null
  br i1 %309, label %320, label %310

310:                                              ; preds = %307
  %311 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %308, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = atomicrmw add i32* %311, i32 -1 acq_rel
  %313 = icmp eq i32 %312, 1
  br i1 %313, label %314, label %320

314:                                              ; preds = %310
  %315 = bitcast %class.SkFontMgr* %308 to %class.SkRefCntBase*
  %316 = bitcast %class.SkFontMgr* %308 to void (%class.SkRefCntBase*)***
  %317 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %316, align 8
  %318 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %317, i64 2
  %319 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %318, align 8
  call void %319(%class.SkRefCntBase* nonnull %315) #5
  br label %320

320:                                              ; preds = %307, %310, %314
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %274) #5
  %321 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %322 = icmp eq %class.SkTypeface* %321, null
  br i1 %322, label %555, label %323

323:                                              ; preds = %320
  %324 = load atomic i64, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %325 = inttoptr i64 %324 to %"class.base::HistogramBase"*
  %326 = icmp eq i64 %324, 0
  br i1 %326, label %327, label %330

327:                                              ; preds = %323
  %328 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 8, i32 9, i32 1) #5
  %329 = ptrtoint %"class.base::HistogramBase"* %328 to i64
  store atomic i64 %329, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %330

330:                                              ; preds = %323, %327
  %331 = phi %"class.base::HistogramBase"* [ %325, %323 ], [ %328, %327 ]
  %332 = bitcast %"class.base::HistogramBase"* %331 to void (%"class.base::HistogramBase"*, i32)***
  %333 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %332, align 8
  %334 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %333, i64 6
  %335 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %334, align 8
  call void %335(%"class.base::HistogramBase"* %331, i32 5) #5
  %336 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %337 = icmp ne %class.SkTypeface* %336, null
  br label %555

338:                                              ; preds = %271
  %339 = call zeroext i1 @_ZN5blink15FontFormatCheck17IsCff2OutlineFontEv(%"class.blink::FontFormatCheck"* nonnull %4) #5
  br i1 %339, label %340, label %405

340:                                              ; preds = %338
  %341 = bitcast %class.sk_sp* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %341) #5
  %342 = bitcast %class.sk_sp.11* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %342) #5
  call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.11* nonnull sret %16) #5
  %343 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %16, i64 0, i32 0
  %344 = load %class.SkFontMgr*, %class.SkFontMgr** %343, align 8
  call void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp* nonnull sret %15, %class.SkFontMgr* %344, %class.SkStreamAsset* nonnull %58, i32 0) #5
  %345 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %15, i64 0, i32 0
  %346 = bitcast %class.sk_sp* %15 to i64*
  %347 = load i64, i64* %346, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %345, align 8
  %348 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %349 = bitcast %class.sk_sp* %1 to i64*
  store i64 %347, i64* %349, align 8
  %350 = icmp eq %class.SkTypeface* %348, null
  br i1 %350, label %374, label %351

351:                                              ; preds = %340
  %352 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %348, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = atomicrmw add i32* %352, i32 -1 acq_rel
  %354 = icmp eq i32 %353, 1
  br i1 %354, label %355, label %361

355:                                              ; preds = %351
  %356 = bitcast %class.SkTypeface* %348 to %class.SkRefCntBase*
  %357 = bitcast %class.SkTypeface* %348 to void (%class.SkRefCntBase*)***
  %358 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %357, align 8
  %359 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %358, i64 2
  %360 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %359, align 8
  call void %360(%class.SkRefCntBase* nonnull %356) #5
  br label %361

361:                                              ; preds = %351, %355
  %362 = load %class.SkTypeface*, %class.SkTypeface** %345, align 8
  %363 = icmp eq %class.SkTypeface* %362, null
  br i1 %363, label %374, label %364

364:                                              ; preds = %361
  %365 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %362, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = atomicrmw add i32* %365, i32 -1 acq_rel
  %367 = icmp eq i32 %366, 1
  br i1 %367, label %368, label %374

368:                                              ; preds = %364
  %369 = bitcast %class.SkTypeface* %362 to %class.SkRefCntBase*
  %370 = bitcast %class.SkTypeface* %362 to void (%class.SkRefCntBase*)***
  %371 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %370, align 8
  %372 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %371, i64 2
  %373 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %372, align 8
  call void %373(%class.SkRefCntBase* nonnull %369) #5
  br label %374

374:                                              ; preds = %340, %361, %364, %368
  %375 = load %class.SkFontMgr*, %class.SkFontMgr** %343, align 8
  %376 = icmp eq %class.SkFontMgr* %375, null
  br i1 %376, label %387, label %377

377:                                              ; preds = %374
  %378 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %375, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = atomicrmw add i32* %378, i32 -1 acq_rel
  %380 = icmp eq i32 %379, 1
  br i1 %380, label %381, label %387

381:                                              ; preds = %377
  %382 = bitcast %class.SkFontMgr* %375 to %class.SkRefCntBase*
  %383 = bitcast %class.SkFontMgr* %375 to void (%class.SkRefCntBase*)***
  %384 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %383, align 8
  %385 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %384, i64 2
  %386 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %385, align 8
  call void %386(%class.SkRefCntBase* nonnull %382) #5
  br label %387

387:                                              ; preds = %374, %377, %381
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %342) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %341) #5
  %388 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %389 = icmp eq %class.SkTypeface* %388, null
  br i1 %389, label %555, label %390

390:                                              ; preds = %387
  %391 = load atomic i64, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %392 = inttoptr i64 %391 to %"class.base::HistogramBase"*
  %393 = icmp eq i64 %391, 0
  br i1 %393, label %394, label %397

394:                                              ; preds = %390
  %395 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 8, i32 9, i32 1) #5
  %396 = ptrtoint %"class.base::HistogramBase"* %395 to i64
  store atomic i64 %396, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %397

397:                                              ; preds = %390, %394
  %398 = phi %"class.base::HistogramBase"* [ %392, %390 ], [ %395, %394 ]
  %399 = bitcast %"class.base::HistogramBase"* %398 to void (%"class.base::HistogramBase"*, i32)***
  %400 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %399, align 8
  %401 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %400, i64 6
  %402 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %401, align 8
  call void %402(%"class.base::HistogramBase"* %398, i32 4) #5
  %403 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %404 = icmp ne %class.SkTypeface* %403, null
  br label %555

405:                                              ; preds = %338
  %406 = call zeroext i1 @_ZN5blink15FontFormatCheck14IsVariableFontEv(%"class.blink::FontFormatCheck"* nonnull %4) #5
  br i1 %406, label %407, label %483

407:                                              ; preds = %405
  %408 = bitcast %class.sk_sp* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %408) #5
  %409 = bitcast %class.sk_sp.11* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %409) #5
  call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.11* nonnull sret %18) #5
  %410 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %18, i64 0, i32 0
  %411 = load %class.SkFontMgr*, %class.SkFontMgr** %410, align 8
  call void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp* nonnull sret %17, %class.SkFontMgr* %411, %class.SkStreamAsset* nonnull %58, i32 0) #5
  %412 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %17, i64 0, i32 0
  %413 = bitcast %class.sk_sp* %17 to i64*
  %414 = load i64, i64* %413, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %412, align 8
  %415 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %416 = bitcast %class.sk_sp* %1 to i64*
  store i64 %414, i64* %416, align 8
  %417 = icmp eq %class.SkTypeface* %415, null
  br i1 %417, label %441, label %418

418:                                              ; preds = %407
  %419 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %415, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %420 = atomicrmw add i32* %419, i32 -1 acq_rel
  %421 = icmp eq i32 %420, 1
  br i1 %421, label %422, label %428

422:                                              ; preds = %418
  %423 = bitcast %class.SkTypeface* %415 to %class.SkRefCntBase*
  %424 = bitcast %class.SkTypeface* %415 to void (%class.SkRefCntBase*)***
  %425 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %424, align 8
  %426 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %425, i64 2
  %427 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %426, align 8
  call void %427(%class.SkRefCntBase* nonnull %423) #5
  br label %428

428:                                              ; preds = %418, %422
  %429 = load %class.SkTypeface*, %class.SkTypeface** %412, align 8
  %430 = icmp eq %class.SkTypeface* %429, null
  br i1 %430, label %441, label %431

431:                                              ; preds = %428
  %432 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %429, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = atomicrmw add i32* %432, i32 -1 acq_rel
  %434 = icmp eq i32 %433, 1
  br i1 %434, label %435, label %441

435:                                              ; preds = %431
  %436 = bitcast %class.SkTypeface* %429 to %class.SkRefCntBase*
  %437 = bitcast %class.SkTypeface* %429 to void (%class.SkRefCntBase*)***
  %438 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %437, align 8
  %439 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %438, i64 2
  %440 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %439, align 8
  call void %440(%class.SkRefCntBase* nonnull %436) #5
  br label %441

441:                                              ; preds = %407, %428, %431, %435
  %442 = load %class.SkFontMgr*, %class.SkFontMgr** %410, align 8
  %443 = icmp eq %class.SkFontMgr* %442, null
  br i1 %443, label %454, label %444

444:                                              ; preds = %441
  %445 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %442, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %446 = atomicrmw add i32* %445, i32 -1 acq_rel
  %447 = icmp eq i32 %446, 1
  br i1 %447, label %448, label %454

448:                                              ; preds = %444
  %449 = bitcast %class.SkFontMgr* %442 to %class.SkRefCntBase*
  %450 = bitcast %class.SkFontMgr* %442 to void (%class.SkRefCntBase*)***
  %451 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %450, align 8
  %452 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %451, i64 2
  %453 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %452, align 8
  call void %453(%class.SkRefCntBase* nonnull %449) #5
  br label %454

454:                                              ; preds = %441, %444, %448
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %409) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %408) #5
  %455 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %456 = icmp eq %class.SkTypeface* %455, null
  %457 = load atomic i64, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %458 = inttoptr i64 %457 to %"class.base::HistogramBase"*
  %459 = icmp eq i64 %457, 0
  br i1 %456, label %470, label %460

460:                                              ; preds = %454
  br i1 %459, label %461, label %464

461:                                              ; preds = %460
  %462 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 8, i32 9, i32 1) #5
  %463 = ptrtoint %"class.base::HistogramBase"* %462 to i64
  store atomic i64 %463, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %464

464:                                              ; preds = %460, %461
  %465 = phi %"class.base::HistogramBase"* [ %458, %460 ], [ %462, %461 ]
  %466 = bitcast %"class.base::HistogramBase"* %465 to void (%"class.base::HistogramBase"*, i32)***
  %467 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %466, align 8
  %468 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %467, i64 6
  %469 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %468, align 8
  call void %469(%"class.base::HistogramBase"* %465, i32 2) #5
  br label %480

470:                                              ; preds = %454
  br i1 %459, label %471, label %474

471:                                              ; preds = %470
  %472 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 8, i32 9, i32 1) #5
  %473 = ptrtoint %"class.base::HistogramBase"* %472 to i64
  store atomic i64 %473, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %474

474:                                              ; preds = %470, %471
  %475 = phi %"class.base::HistogramBase"* [ %458, %470 ], [ %472, %471 ]
  %476 = bitcast %"class.base::HistogramBase"* %475 to void (%"class.base::HistogramBase"*, i32)***
  %477 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %476, align 8
  %478 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %477, i64 6
  %479 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %478, align 8
  call void %479(%"class.base::HistogramBase"* %475, i32 0) #5
  br label %480

480:                                              ; preds = %474, %464
  %481 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %482 = icmp ne %class.SkTypeface* %481, null
  br label %555

483:                                              ; preds = %405
  %484 = call zeroext i1 @_ZN5blink15FontFormatCheck21IsColrCpalColorFontV0Ev(%"class.blink::FontFormatCheck"* nonnull %4) #5
  br i1 %484, label %485, label %550

485:                                              ; preds = %483
  %486 = bitcast %class.sk_sp* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %486) #5
  %487 = bitcast %class.sk_sp.11* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %487) #5
  call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.11* nonnull sret %20) #5
  %488 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %20, i64 0, i32 0
  %489 = load %class.SkFontMgr*, %class.SkFontMgr** %488, align 8
  call void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp* nonnull sret %19, %class.SkFontMgr* %489, %class.SkStreamAsset* nonnull %58, i32 0) #5
  %490 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %19, i64 0, i32 0
  %491 = bitcast %class.sk_sp* %19 to i64*
  %492 = load i64, i64* %491, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %490, align 8
  %493 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %494 = bitcast %class.sk_sp* %1 to i64*
  store i64 %492, i64* %494, align 8
  %495 = icmp eq %class.SkTypeface* %493, null
  br i1 %495, label %519, label %496

496:                                              ; preds = %485
  %497 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %493, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %498 = atomicrmw add i32* %497, i32 -1 acq_rel
  %499 = icmp eq i32 %498, 1
  br i1 %499, label %500, label %506

500:                                              ; preds = %496
  %501 = bitcast %class.SkTypeface* %493 to %class.SkRefCntBase*
  %502 = bitcast %class.SkTypeface* %493 to void (%class.SkRefCntBase*)***
  %503 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %502, align 8
  %504 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %503, i64 2
  %505 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %504, align 8
  call void %505(%class.SkRefCntBase* nonnull %501) #5
  br label %506

506:                                              ; preds = %496, %500
  %507 = load %class.SkTypeface*, %class.SkTypeface** %490, align 8
  %508 = icmp eq %class.SkTypeface* %507, null
  br i1 %508, label %519, label %509

509:                                              ; preds = %506
  %510 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %507, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %511 = atomicrmw add i32* %510, i32 -1 acq_rel
  %512 = icmp eq i32 %511, 1
  br i1 %512, label %513, label %519

513:                                              ; preds = %509
  %514 = bitcast %class.SkTypeface* %507 to %class.SkRefCntBase*
  %515 = bitcast %class.SkTypeface* %507 to void (%class.SkRefCntBase*)***
  %516 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %515, align 8
  %517 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %516, i64 2
  %518 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %517, align 8
  call void %518(%class.SkRefCntBase* nonnull %514) #5
  br label %519

519:                                              ; preds = %485, %506, %509, %513
  %520 = load %class.SkFontMgr*, %class.SkFontMgr** %488, align 8
  %521 = icmp eq %class.SkFontMgr* %520, null
  br i1 %521, label %532, label %522

522:                                              ; preds = %519
  %523 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %520, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %524 = atomicrmw add i32* %523, i32 -1 acq_rel
  %525 = icmp eq i32 %524, 1
  br i1 %525, label %526, label %532

526:                                              ; preds = %522
  %527 = bitcast %class.SkFontMgr* %520 to %class.SkRefCntBase*
  %528 = bitcast %class.SkFontMgr* %520 to void (%class.SkRefCntBase*)***
  %529 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %528, align 8
  %530 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %529, i64 2
  %531 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %530, align 8
  call void %531(%class.SkRefCntBase* nonnull %527) #5
  br label %532

532:                                              ; preds = %519, %522, %526
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %487) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %486) #5
  %533 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %534 = icmp eq %class.SkTypeface* %533, null
  br i1 %534, label %555, label %535

535:                                              ; preds = %532
  %536 = load atomic i64, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %537 = inttoptr i64 %536 to %"class.base::HistogramBase"*
  %538 = icmp eq i64 %536, 0
  br i1 %538, label %539, label %542

539:                                              ; preds = %535
  %540 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 8, i32 9, i32 1) #5
  %541 = ptrtoint %"class.base::HistogramBase"* %540 to i64
  store atomic i64 %541, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %542

542:                                              ; preds = %535, %539
  %543 = phi %"class.base::HistogramBase"* [ %537, %535 ], [ %540, %539 ]
  %544 = bitcast %"class.base::HistogramBase"* %543 to void (%"class.base::HistogramBase"*, i32)***
  %545 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %544, align 8
  %546 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %545, i64 6
  %547 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %546, align 8
  call void %547(%"class.base::HistogramBase"* %543, i32 6) #5
  %548 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %549 = icmp ne %class.SkTypeface* %548, null
  br label %555

550:                                              ; preds = %483, %203
  %551 = bitcast i8* %49 to void (%class.SkStreamAsset*)***
  %552 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %551, align 8
  %553 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %552, i64 1
  %554 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %553, align 8
  call void %554(%class.SkStreamAsset* nonnull %58) #5
  br label %555

555:                                              ; preds = %542, %532, %397, %387, %330, %320, %263, %253, %193, %183, %118, %128, %480, %550
  %556 = phi i1 [ false, %550 ], [ false, %118 ], [ true, %128 ], [ %482, %480 ], [ false, %183 ], [ %200, %193 ], [ false, %253 ], [ %270, %263 ], [ false, %320 ], [ %337, %330 ], [ false, %387 ], [ %404, %397 ], [ false, %532 ], [ %549, %542 ]
  %557 = load i32*, i32** %29, align 8
  %558 = icmp eq i32* %557, null
  %559 = bitcast i32* %557 to i8*
  br i1 %558, label %565, label %560, !prof !3

560:                                              ; preds = %555
  %561 = load i32, i32* %30, align 4
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %564, label %563, !prof !4

563:                                              ; preds = %560
  store i32 0, i32* %30, align 4
  br label %564

564:                                              ; preds = %563, %560
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %559) #5
  store i32* null, i32** %29, align 8
  br label %565

565:                                              ; preds = %555, %564
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #5
  ret i1 %556
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink15FontFormatCheckC1E5sk_spI6SkDataE(%"class.blink::FontFormatCheck"*, %class.sk_sp.6*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN14SkMemoryStreamC1E5sk_spI6SkDataE(%class.SkMemoryStream*, %class.sk_sp.6*) unnamed_addr #2

declare zeroext i1 @_ZN5blink15FontFormatCheck14IsVariableFontEv(%"class.blink::FontFormatCheck"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink15FontFormatCheck11IsColorFontEv(%"class.blink::FontFormatCheck"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22WebFontTypefaceFactory18DefaultFontManagerEv(%class.sk_sp.11* noalias sret) local_unnamed_addr #0 align 2 {
  tail call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.11* sret %0) #5
  ret void
}

declare void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp* sret, %class.SkFontMgr*, %class.SkStreamAsset*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultE(i32) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %3 = inttoptr i64 %2 to %"class.base::HistogramBase"*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 8, i32 9, i32 1) #5
  %7 = ptrtoint %"class.base::HistogramBase"* %6 to i64
  store atomic i64 %7, i64* @_ZZN5blink22WebFontTypefaceFactory25ReportInstantiationResultENS0_19InstantiationResultEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.base::HistogramBase"* [ %3, %1 ], [ %6, %5 ]
  %10 = bitcast %"class.base::HistogramBase"* %9 to void (%"class.base::HistogramBase"*, i32)***
  %11 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %11, i64 6
  %13 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %12, align 8
  tail call void %13(%"class.base::HistogramBase"* %9, i32 %0) #5
  ret void
}

declare zeroext i1 @_ZN5blink15FontFormatCheck19IsCbdtCblcColorFontEv(%"class.blink::FontFormatCheck"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22WebFontTypefaceFactory19FreeTypeFontManagerEv(%class.sk_sp.11* noalias sret) local_unnamed_addr #0 align 2 {
  tail call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.11* sret %0) #5
  ret void
}

declare zeroext i1 @_ZN5blink15FontFormatCheck21IsColrCpalColorFontV1Ev(%"class.blink::FontFormatCheck"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink15FontFormatCheck15IsSbixColorFontEv(%"class.blink::FontFormatCheck"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22WebFontTypefaceFactory18FontManagerForSbixEv(%class.sk_sp.11* noalias sret) local_unnamed_addr #0 align 2 {
  tail call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.11* sret %0) #5
  ret void
}

declare zeroext i1 @_ZN5blink15FontFormatCheck17IsCff2OutlineFontEv(%"class.blink::FontFormatCheck"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22WebFontTypefaceFactory24FontManagerForVariationsEv(%class.sk_sp.11* noalias sret) local_unnamed_addr #0 align 2 {
  tail call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.11* sret %0) #5
  ret void
}

declare zeroext i1 @_ZN5blink15FontFormatCheck21IsColrCpalColorFontV0Ev(%"class.blink::FontFormatCheck"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22WebFontTypefaceFactory22FontManagerForColrCpalEv(%class.sk_sp.11* noalias sret) local_unnamed_addr #0 align 2 {
  tail call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.11* sret %0) #5
  ret void
}

declare void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.11* sret) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
