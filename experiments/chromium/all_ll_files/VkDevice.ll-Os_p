; ModuleID = '../../third_party/swiftshader/src/Vulkan/VkDevice.cpp'
source_filename = "../../third_party/swiftshader/src/Vulkan/VkDevice.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.marl::Allocator" = type { i32 (...)** }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.vk::Device::SamplerIndexer" = type <{ %"class.marl::mutex", %"class.std::__1::map", i32, [4 x i8] }>
%"class.marl::mutex" = type { %"class.std::__1::mutex" }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.75", %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"class.vk::Device" = type { %"class.vk::PhysicalDevice"*, %"class.vk::Queue"*, i32, %"class.std::__1::unique_ptr.173", i32, [256 x i8]*, %struct.VkPhysicalDeviceFeatures, %"class.std::__1::shared_ptr.237", %"class.std::__1::unique_ptr.357", %"class.std::__1::unique_ptr.363", %"class.marl::mutex", %"class.std::__1::unordered_set.369" }
%"class.vk::Queue" = type { %union.VK_LOADER_DATA, %"class.vk::Device"*, %"class.std::__1::unique_ptr.84", %"class.sw::Chan", %"class.sw::Chan.159", %"class.std::__1::thread" }
%union.VK_LOADER_DATA = type { i64 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.sw::Renderer"* }
%"class.sw::Renderer" = type { i32 (...)**, %"class.marl::BoundedPool", %"class.marl::BoundedPool.88", %"struct.std::__1::atomic", %"class.vk::Query"*, %"class.marl::Ticket::Queue", [16 x %"class.marl::Ticket::Queue"], %"class.sw::VertexProcessor", [8 x i8], %"class.sw::PixelProcessor", %"class.sw::SetupProcessor", %"struct.sw::VertexProcessor::State", %"struct.sw::SetupProcessor::State", [4 x i8], %"struct.sw::PixelProcessor::State", %"class.rr::RoutineT", %"class.rr::RoutineT.133", %"class.rr::RoutineT.134", %"class.vk::Device"* }
%"class.marl::BoundedPool" = type { %"class.std::__1::shared_ptr.87" }
%"class.std::__1::shared_ptr.87" = type { %"class.marl::BoundedPool<sw::DrawCall, 16, marl::PoolPolicy::Preserve>::Storage"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::BoundedPool<sw::DrawCall, 16, marl::PoolPolicy::Preserve>::Storage" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.marl::BoundedPool.88" = type { %"class.std::__1::shared_ptr.91" }
%"class.std::__1::shared_ptr.91" = type { %"class.marl::BoundedPool<sw::DrawCall::BatchData, 16, marl::PoolPolicy::Preserve>::Storage"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::BoundedPool<sw::DrawCall::BatchData, 16, marl::PoolPolicy::Preserve>::Storage" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.vk::Query" = type opaque
%"class.marl::Ticket::Queue" = type { %"class.std::__1::shared_ptr.93", %"class.marl::UnboundedPool" }
%"class.std::__1::shared_ptr.93" = type { %"struct.marl::Ticket::Shared"*, %"class.std::__1::__shared_weak_count"* }
%"struct.marl::Ticket::Shared" = type { %"class.marl::mutex", %"struct.marl::Ticket::Record" }
%"struct.marl::Ticket::Record" = type <{ %"class.marl::ConditionVariable", %"class.std::__1::shared_ptr.93", %"struct.marl::Ticket::Record"*, %"struct.marl::Ticket::Record"*, %"class.std::__1::function.256", i8, %"struct.std::__1::atomic.395", [6 x i8] }>
%"class.marl::ConditionVariable" = type { %"class.marl::mutex", %"class.marl::containers::list", %"class.std::__1::condition_variable", %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.marl::containers::list" = type { %"class.marl::Allocator"*, i64, i64, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* }
%"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain" = type { %"struct.marl::Allocation", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* }
%"struct.marl::Allocation" = type { i8*, %"struct.marl::Allocation::Request" }
%"struct.marl::Allocation::Request" = type <{ i64, i64, i8, i8, [6 x i8] }>
%"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry" = type { %"class.marl::Scheduler::Fiber"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* }
%"class.marl::Scheduler::Fiber" = type <{ i32, [4 x i8], %"class.std::__1::unique_ptr.244", %"class.marl::Scheduler::Worker"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246", %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.marl::OSFiber"* }
%"class.marl::OSFiber" = type opaque
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.marl::Allocator::Deleter" }
%"struct.marl::Allocator::Deleter" = type { %"class.marl::Allocator"*, i64 }
%"class.marl::Scheduler::Worker" = type <{ i32, i32, %"class.marl::Scheduler"*, %"class.std::__1::unique_ptr.241", %"class.marl::Scheduler::Fiber"*, %"class.marl::Thread", %"struct.marl::Scheduler::Worker::Work", %"class.std::__1::unordered_set.310", %"class.marl::containers::vector.330", %"class.marl::Scheduler::Worker::FastRnd", i8, [7 x i8] }>
%"class.marl::Scheduler" = type { %"struct.marl::Scheduler::Config", %"struct.std::__1::array.239", %"struct.std::__1::atomic.140", %"struct.std::__1::atomic.140", %"struct.std::__1::array.240", %"struct.marl::Scheduler::SingleThreadedWorkers" }
%"struct.marl::Scheduler::Config" = type { %"struct.marl::Scheduler::Config::WorkerThread", %"class.marl::Allocator"*, i64 }
%"struct.marl::Scheduler::Config::WorkerThread" = type { i32, %"class.std::__1::function", %"class.std::__1::shared_ptr.238" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.std::__1::shared_ptr.238" = type { %"class.marl::Thread::Affinity::Policy"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::Thread::Affinity::Policy" = type { i32 (...)** }
%"struct.std::__1::array.239" = type { [8 x %"struct.std::__1::atomic"] }
%"struct.std::__1::atomic.140" = type { %"struct.std::__1::__atomic_base.141" }
%"struct.std::__1::__atomic_base.141" = type { %"struct.std::__1::__atomic_base.142" }
%"struct.std::__1::__atomic_base.142" = type { %"struct.std::__1::__cxx_atomic_impl.143" }
%"struct.std::__1::__cxx_atomic_impl.143" = type { %"struct.std::__1::__cxx_atomic_base_impl.144" }
%"struct.std::__1::__cxx_atomic_base_impl.144" = type { i32 }
%"struct.std::__1::array.240" = type { [256 x %"class.marl::Scheduler::Worker"*] }
%"struct.marl::Scheduler::SingleThreadedWorkers" = type { %"class.marl::mutex", %"class.std::__1::condition_variable", %"class.std::__1::unordered_map.331" }
%"class.std::__1::unordered_map.331" = type { %"class.std::__1::__hash_table.332" }
%"class.std::__1::__hash_table.332" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.346", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.336"** }
%"struct.std::__1::__hash_node_base.336" = type { %"struct.std::__1::__hash_node_base.336"* }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::__bucket_list_deallocator.338" }
%"class.std::__1::__bucket_list_deallocator.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"struct.marl::StlAllocator.341" }
%"struct.marl::StlAllocator.341" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343", %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.336" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.marl::StlAllocator.345" }
%"struct.marl::StlAllocator.345" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { float }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243", %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.marl::Scheduler::Fiber"* }
%"class.marl::Thread" = type { %"class.marl::Thread::Impl"* }
%"class.marl::Thread::Impl" = type opaque
%"struct.marl::Scheduler::Worker::Work" = type { %"struct.std::__1::atomic.248", i64, %"class.std::__1::deque.253", %"class.std::__1::deque.267", %"struct.marl::Scheduler::WaitingFibers", i8, %"class.std::__1::condition_variable", %"class.marl::mutex" }
%"struct.std::__1::atomic.248" = type { %"struct.std::__1::__atomic_base.249" }
%"struct.std::__1::__atomic_base.249" = type { %"struct.std::__1::__atomic_base.250" }
%"struct.std::__1::__atomic_base.250" = type { %"struct.std::__1::__cxx_atomic_impl.251" }
%"struct.std::__1::__cxx_atomic_impl.251" = type { %"struct.std::__1::__cxx_atomic_base_impl.252" }
%"struct.std::__1::__cxx_atomic_base_impl.252" = type { i64 }
%"class.std::__1::deque.253" = type { %"class.std::__1::__deque_base.254" }
%"class.std::__1::__deque_base.254" = type { %"struct.std::__1::__split_buffer.255", i64, %"class.std::__1::__compressed_pair.264" }
%"struct.std::__1::__split_buffer.255" = type { %"class.marl::Task"**, %"class.marl::Task"**, %"class.marl::Task"**, %"class.std::__1::__compressed_pair.261" }
%"class.marl::Task" = type <{ %"class.std::__1::function.256", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.marl::Task"** }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.marl::StlAllocator" }
%"struct.marl::StlAllocator" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"struct.marl::StlAllocator.266" }
%"struct.marl::StlAllocator.266" = type { %"class.marl::Allocator"* }
%"class.std::__1::deque.267" = type { %"class.std::__1::__deque_base.268" }
%"class.std::__1::__deque_base.268" = type { %"struct.std::__1::__split_buffer.269", i64, %"class.std::__1::__compressed_pair.274" }
%"struct.std::__1::__split_buffer.269" = type { %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"***, %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271", %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.marl::Scheduler::Fiber"*** }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.marl::StlAllocator.273" }
%"struct.marl::StlAllocator.273" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"struct.marl::StlAllocator.276" }
%"struct.marl::StlAllocator.276" = type { %"class.marl::Allocator"* }
%"struct.marl::Scheduler::WaitingFibers" = type { %"class.std::__1::set", %"class.std::__1::unordered_map.285" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.277" }
%"class.std::__1::__tree.277" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.278", %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.76", %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"struct.marl::StlAllocator.280" }
%"struct.marl::StlAllocator.280" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::unordered_map.285" = type { %"class.std::__1::__hash_table.286" }
%"class.std::__1::__hash_table.286" = type <{ %"class.std::__1::unique_ptr.287", %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.304", [4 x i8] }>
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289", %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.290"** }
%"struct.std::__1::__hash_node_base.290" = type { %"struct.std::__1::__hash_node_base.290"* }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::__bucket_list_deallocator.292" }
%"class.std::__1::__bucket_list_deallocator.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.marl::StlAllocator.295" }
%"struct.marl::StlAllocator.295" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297", %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.std::__1::__hash_node_base.290" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.marl::StlAllocator.299" }
%"struct.marl::StlAllocator.299" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::unordered_set.310" = type { %"class.std::__1::__hash_table.311" }
%"class.std::__1::__hash_table.311" = type <{ %"class.std::__1::unique_ptr.312", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.325", %"class.std::__1::__compressed_pair.327", [4 x i8] }>
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314", %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.std::__1::__hash_node_base.315"** }
%"struct.std::__1::__hash_node_base.315" = type { %"struct.std::__1::__hash_node_base.315"* }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.std::__1::__bucket_list_deallocator.317" }
%"class.std::__1::__bucket_list_deallocator.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"struct.marl::StlAllocator.320" }
%"struct.marl::StlAllocator.320" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322", %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"struct.std::__1::__hash_node_base.315" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"struct.marl::StlAllocator.324" }
%"struct.marl::StlAllocator.324" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.marl::containers::vector.330" = type { %"class.marl::Allocator"*, i64, i64, [16 x %"struct.marl::aligned_storage<24, 8>::type"], %"struct.marl::aligned_storage<24, 8>::type"*, %"struct.marl::Allocation" }
%"struct.marl::aligned_storage<24, 8>::type" = type { [24 x i8] }
%"class.marl::Scheduler::Worker::FastRnd" = type { i64 }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.145, %union.anon.147, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.145 = type { i64 }
%union.anon.147 = type { i64 }
%"class.std::__1::function.256" = type { %"class.std::__1::__function::__policy_func.259" }
%"class.std::__1::__function::__policy_func.259" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.260", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.260" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::atomic.395" = type { %"struct.std::__1::__atomic_base.396" }
%"struct.std::__1::__atomic_base.396" = type { %"struct.std::__1::__cxx_atomic_impl.397" }
%"struct.std::__1::__cxx_atomic_impl.397" = type { %"struct.std::__1::__cxx_atomic_base_impl.398" }
%"struct.std::__1::__cxx_atomic_base_impl.398" = type { i8 }
%"class.marl::UnboundedPool" = type { %"class.marl::Allocator"*, %"class.std::__1::shared_ptr.96" }
%"class.std::__1::shared_ptr.96" = type { %"class.marl::UnboundedPool<marl::Ticket::Record, marl::PoolPolicy::Reconstruct>::Storage"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::UnboundedPool<marl::Ticket::Record, marl::PoolPolicy::Reconstruct>::Storage" = type { %"class.marl::Pool<marl::Ticket::Record>::Storage", %"class.marl::Allocator"*, %"class.marl::mutex", %"class.marl::containers::vector.448", %"struct.marl::Pool<marl::Ticket::Record>::Item"* }
%"class.marl::Pool<marl::Ticket::Record>::Storage" = type { i32 (...)** }
%"class.marl::containers::vector.448" = type { %"class.marl::Allocator"*, i64, i64, [4 x %"struct.marl::aligned_storage<8, 8>::type"], %"struct.marl::aligned_storage<8, 8>::type"*, %"struct.marl::Allocation" }
%"struct.marl::aligned_storage<8, 8>::type" = type { [8 x i8] }
%"struct.marl::Pool<marl::Ticket::Record>::Item" = type { %"struct.marl::aligned_storage<216, 8>::type", %"struct.std::__1::atomic", %"struct.marl::Pool<marl::Ticket::Record>::Item"* }
%"struct.marl::aligned_storage<216, 8>::type" = type { [216 x i8] }
%"class.sw::VertexProcessor" = type { %"class.std::__1::unique_ptr.97" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.sw::LRUCache.100"* }
%"class.sw::LRUCache.100" = type opaque
%"class.sw::PixelProcessor" = type { %"struct.sw::PixelProcessor::Factor", %"class.std::__1::unique_ptr.105", [8 x i8] }
%"struct.sw::PixelProcessor::Factor" = type { %"struct.sw::vec", [4 x %"struct.sw::vec"], [8 x i8], [4 x %"struct.sw::vec.102"], [4 x %"struct.sw::vec"], [4 x %"struct.sw::vec.102"] }
%"struct.sw::vec" = type { %union.anon }
%union.anon = type { [4 x i16] }
%"struct.sw::vec.102" = type { %union.anon.103 }
%union.anon.103 = type { [4 x float] }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.sw::LRUCache.108"* }
%"class.sw::LRUCache.108" = type opaque
%"class.sw::SetupProcessor" = type { %"class.std::__1::unique_ptr.112" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.sw::LRUCache.115"* }
%"class.sw::LRUCache.115" = type opaque
%"struct.sw::VertexProcessor::State" = type { %"struct.sw::VertexProcessor::States.base", i32, [4 x i8] }
%"struct.sw::VertexProcessor::States.base" = type <{ i64, i32, [32 x %"struct.sw::VertexProcessor::States::Input"], i8 }>
%"struct.sw::VertexProcessor::States::Input" = type { i32, i8 }
%"struct.sw::SetupProcessor::State" = type { %"struct.sw::SetupProcessor::States.base", i32 }
%"struct.sw::SetupProcessor::States.base" = type <{ i16, [2 x i8], i32, i32, i16, [128 x %"struct.sw::SpirvShader::InterfaceComponent"] }>
%"struct.sw::SpirvShader::InterfaceComponent" = type { i8, %union.anon.123 }
%union.anon.123 = type { %struct.anon.124 }
%struct.anon.124 = type { i8 }
%"struct.sw::PixelProcessor::State" = type <{ %"struct.sw::PixelProcessor::States", i32, [4 x i8] }>
%"struct.sw::PixelProcessor::States" = type { i64, i32, i32, i32, i32, i8, i8, %"struct.sw::PixelProcessor::States::StencilOpState", %"struct.sw::PixelProcessor::States::StencilOpState", i8, i8, i8, i8, [8 x %"struct.vk::BlendState"], i32, [8 x %"class.vk::Format"], i32, i32, i8, i8, i8, i8, float, float, float, i32, %"class.vk::Format", i8, i8, float, float }
%"struct.sw::PixelProcessor::States::StencilOpState" = type { i32, i32, i32, i32, i32, i32 }
%"struct.vk::BlendState" = type { i8, i32, i32, i32, i32, i32, i32 }
%"class.vk::Format" = type { i32 }
%"class.rr::RoutineT" = type { %"class.std::__1::shared_ptr", void (%"struct.sw::Vertex"*, i32*, %"struct.sw::VertexTask"*, %"struct.sw::DrawData"*)* }
%"class.std::__1::shared_ptr" = type { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* }
%"class.rr::Routine" = type { i32 (...)** }
%"struct.sw::Vertex" = type { %union.anon.129, float, i32, i32, [8 x float], [8 x float], [4 x i8], %struct.anon.131, [128 x float] }
%union.anon.129 = type { %struct.anon.130 }
%struct.anon.130 = type { float, float, float, float }
%struct.anon.131 = type { i32, i32, float, float }
%"struct.sw::VertexTask" = type { i32, i32, [8 x i8], %"struct.sw::VertexCache" }
%"struct.sw::VertexCache" = type { [64 x %"struct.sw::Vertex"], [64 x i32], i32, [12 x i8] }
%"struct.sw::DrawData" = type { %"struct.sw::Constants"*, %"struct.std::__1::array", %"struct.std::__1::array.132", [32 x i8*], [32 x i32], [32 x i32], i8*, i32, i32, float, i32, [2 x %"struct.sw::PixelProcessor::Stencil"], %"struct.sw::PixelProcessor::Factor", [16 x i32], %"struct.sw::vec.102", %"struct.sw::vec.102", %"struct.sw::vec.102", %"struct.sw::vec.102", %"struct.sw::vec.102", %"struct.sw::vec.102", float, float, float, float, float, float, float, i8, [8 x i32*], [8 x i32], [8 x i32], float*, i32, i32, i8*, i32, i32, i32, i32, i32, i32, %"struct.sw::vec.102", %"struct.sw::vec.102", %"struct.sw::vec.102", %"struct.sw::vec.102", %"struct.vk::Pipeline::PushConstantStorage" }
%"struct.sw::Constants" = type opaque
%"struct.std::__1::array" = type { [4 x i8*] }
%"struct.std::__1::array.132" = type { [12 x i32] }
%"struct.sw::PixelProcessor::Stencil" = type { i64, i64, i64, i64, i64, i64 }
%"struct.vk::Pipeline::PushConstantStorage" = type { [128 x i8] }
%"class.rr::RoutineT.133" = type { %"class.std::__1::shared_ptr", i32 (%"struct.sw::Primitive"*, %"struct.sw::Triangle"*, %"struct.sw::Polygon"*, %"struct.sw::DrawData"*)* }
%"struct.sw::Primitive" = type { i32, i32, [8 x i8], %"struct.sw::vec.102", %"struct.sw::vec.102", float, float, float, [4 x i8], %"struct.sw::PlaneEquation", %"struct.sw::vec.102", %"struct.sw::PlaneEquation", [128 x %"struct.sw::PlaneEquation"], [8 x %"struct.sw::PlaneEquation"], [8 x %"struct.sw::PlaneEquation"], i64, i64, [2 x %"struct.sw::Primitive::Span"], [8192 x %"struct.sw::Primitive::Span"], [2 x %"struct.sw::Primitive::Span"] }
%"struct.sw::PlaneEquation" = type { %"struct.sw::vec.102", %"struct.sw::vec.102", %"struct.sw::vec.102" }
%"struct.sw::Primitive::Span" = type { i16, i16 }
%"struct.sw::Triangle" = type { %"struct.sw::Vertex", %"struct.sw::Vertex", %"struct.sw::Vertex" }
%"struct.sw::Polygon" = type opaque
%"class.rr::RoutineT.134" = type { %"class.std::__1::shared_ptr", void (%"struct.sw::Primitive"*, i32, i32, i32, %"struct.sw::DrawData"*)* }
%"class.sw::Chan" = type { %"class.marl::mutex", %"class.std::__1::queue", %"class.std::__1::condition_variable" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.155" }
%"struct.std::__1::__split_buffer" = type { %"struct.vk::Queue::Task"**, %"struct.vk::Queue::Task"**, %"struct.vk::Queue::Task"**, %"class.std::__1::__compressed_pair.150" }
%"struct.vk::Queue::Task" = type <{ i32, [4 x i8], %struct.VkSubmitInfo*, %"class.std::__1::shared_ptr.138", i32, [4 x i8] }>
%struct.VkSubmitInfo = type { i32, i8*, i32, %class.VkNonDispatchableHandle.1*, i32*, i32, %struct.VkCommandBuffer_T**, i32, %class.VkNonDispatchableHandle.1* }
%struct.VkCommandBuffer_T = type opaque
%class.VkNonDispatchableHandle.1 = type { i64 }
%"class.std::__1::shared_ptr.138" = type { %"class.sw::CountedEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.sw::CountedEvent" = type { %"class.marl::WaitGroup", %"class.marl::Event" }
%"class.marl::WaitGroup" = type { %"class.std::__1::shared_ptr.139" }
%"class.std::__1::shared_ptr.139" = type { %"struct.marl::WaitGroup::Data"*, %"class.std::__1::__shared_weak_count"* }
%"struct.marl::WaitGroup::Data" = type { %"struct.std::__1::atomic.140", %"class.marl::ConditionVariable", %"class.marl::mutex" }
%"class.marl::Event" = type { %"class.std::__1::shared_ptr.149" }
%"class.std::__1::shared_ptr.149" = type { %"struct.marl::Event::Shared"*, %"class.std::__1::__shared_weak_count"* }
%"struct.marl::Event::Shared" = type <{ %"class.marl::mutex", %"class.marl::ConditionVariable", %"class.marl::containers::vector", i8, i8, [6 x i8] }>
%"class.marl::containers::vector" = type { %"class.marl::Allocator"*, i64, i64, [1 x %"struct.marl::aligned_storage<16, 8>::type"], %"struct.marl::aligned_storage<16, 8>::type"*, %"struct.marl::Allocation" }
%"struct.marl::aligned_storage<16, 8>::type" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.vk::Queue::Task"** }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.sw::Chan.159" = type { %"class.marl::mutex", %"class.std::__1::queue.160", %"class.std::__1::condition_variable" }
%"class.std::__1::queue.160" = type { %"class.std::__1::deque.161" }
%"class.std::__1::deque.161" = type { %"class.std::__1::__deque_base.162" }
%"class.std::__1::__deque_base.162" = type { %"struct.std::__1::__split_buffer.163", i64, %"class.std::__1::__compressed_pair.169" }
%"struct.std::__1::__split_buffer.163" = type { %struct.VkSubmitInfo***, %struct.VkSubmitInfo***, %struct.VkSubmitInfo***, %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %struct.VkSubmitInfo*** }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::thread" = type { i64 }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.sw::Blitter"* }
%"class.sw::Blitter" = type { i32 (...)**, %"class.marl::mutex", %"class.sw::LRUCache.176", %"class.marl::mutex", %"class.sw::LRUCache.205" }
%"class.sw::LRUCache.176" = type { %"class.std::__1::vector.177", %"class.std::__1::unordered_set.184", %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"* }
%"class.std::__1::vector.177" = type { %"class.std::__1::__vector_base.178" }
%"class.std::__1::__vector_base.178" = type { %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"* }
%"class.std::__1::unordered_set.184" = type { %"class.std::__1::__hash_table.185" }
%"class.std::__1::__hash_table.185" = type <{ %"class.std::__1::unique_ptr.186", %"class.std::__1::__compressed_pair.196", %"class.std::__1::__compressed_pair.201", %"class.std::__1::__compressed_pair.203", [4 x i8] }>
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188", %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.std::__1::__hash_node_base.189"** }
%"struct.std::__1::__hash_node_base.189" = type { %"struct.std::__1::__hash_node_base.189"* }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.std::__1::__bucket_list_deallocator.191" }
%"class.std::__1::__bucket_list_deallocator.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.std::__1::__hash_node_base.189" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry" = type opaque
%"class.sw::LRUCache.205" = type { %"class.std::__1::vector.206", %"class.std::__1::unordered_set.213", %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"* }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"* }
%"class.std::__1::unordered_set.213" = type { %"class.std::__1::__hash_table.214" }
%"class.std::__1::__hash_table.214" = type <{ %"class.std::__1::unique_ptr.215", %"class.std::__1::__compressed_pair.225", %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.232", [4 x i8] }>
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217", %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.std::__1::__hash_node_base.218"** }
%"struct.std::__1::__hash_node_base.218" = type { %"struct.std::__1::__hash_node_base.218"* }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.std::__1::__bucket_list_deallocator.220" }
%"class.std::__1::__bucket_list_deallocator.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.std::__1::__hash_node_base.218" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry" = type opaque
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::shared_ptr.237" = type { %"class.marl::Scheduler"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.vk::Device::SamplingRoutineCache"* }
%"class.vk::Device::SamplingRoutineCache" = type { i8, [7 x i8], %"class.std::__1::unordered_map", %"class.marl::mutex", %"class.sw::LRUCache" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.47", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.sw::LRUCache" = type { %"class.std::__1::vector", %"class.std::__1::unordered_set", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.55" }
%"class.std::__1::__hash_table.55" = type <{ %"class.std::__1::unique_ptr.56", %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.71", %"class.std::__1::__compressed_pair.73", [4 x i8] }>
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58", %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base.59"** }
%"struct.std::__1::__hash_node_base.59" = type { %"struct.std::__1::__hash_node_base.59"* }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.std::__1::__bucket_list_deallocator.61" }
%"class.std::__1::__bucket_list_deallocator.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base.59" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry" = type { %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Keyed", %"class.std::__1::shared_ptr", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* }
%"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Keyed" = type { %"struct.vk::Device::SamplingRoutineCache::Key" }
%"struct.vk::Device::SamplingRoutineCache::Key" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.vk::Device::SamplerIndexer"* }
%"class.std::__1::unordered_set.369" = type { %"class.std::__1::__hash_table.370" }
%"class.std::__1::__hash_table.370" = type <{ %"class.std::__1::unique_ptr.371", %"class.std::__1::__compressed_pair.381", %"class.std::__1::__compressed_pair.386", %"class.std::__1::__compressed_pair.390", [4 x i8] }>
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373", %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.std::__1::__hash_node_base.374"** }
%"struct.std::__1::__hash_node_base.374" = type { %"struct.std::__1::__hash_node_base.374"* }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.std::__1::__bucket_list_deallocator.376" }
%"class.std::__1::__bucket_list_deallocator.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.std::__1::__hash_node_base.374" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.vk::PhysicalDevice" = type opaque
%class.VkNonDispatchableHandle = type { i64 }
%class.VkNonDispatchableHandle.0 = type { i64 }
%class.VkNonDispatchableHandle.2 = type { i64 }
%class.VkNonDispatchableHandle.3 = type { i64 }
%class.VkNonDispatchableHandle.4 = type { i64 }
%class.VkNonDispatchableHandle.5 = type { i64 }
%class.VkNonDispatchableHandle.6 = type { i64 }
%class.VkNonDispatchableHandle.7 = type { i64 }
%class.VkNonDispatchableHandle.8 = type { i64 }
%class.VkNonDispatchableHandle.9 = type { i64 }
%class.VkNonDispatchableHandle.10 = type { i64 }
%class.VkNonDispatchableHandle.11 = type { i64 }
%class.VkNonDispatchableHandle.12 = type { i64 }
%class.VkNonDispatchableHandle.13 = type { i64 }
%class.VkNonDispatchableHandle.14 = type { i64 }
%class.VkNonDispatchableHandle.15 = type { i64 }
%class.VkNonDispatchableHandle.16 = type { i64 }
%class.VkNonDispatchableHandle.17 = type { i64 }
%class.VkNonDispatchableHandle.18 = type { i64 }
%class.VkNonDispatchableHandle.19 = type { i64 }
%class.VkNonDispatchableHandle.20 = type { i64 }
%class.VkNonDispatchableHandle.21 = type { i64 }
%class.VkNonDispatchableHandle.22 = type { i64 }
%class.VkNonDispatchableHandle.23 = type { i64 }
%class.VkNonDispatchableHandle.24 = type { i64 }
%class.VkNonDispatchableHandle.25 = type { i64 }
%class.VkNonDispatchableHandle.26 = type { i64 }
%class.VkNonDispatchableHandle.27 = type { i64 }
%class.VkNonDispatchableHandle.28 = type { i64 }
%class.VkNonDispatchableHandle.29 = type { i64 }
%class.VkNonDispatchableHandle.30 = type { i64 }
%class.VkNonDispatchableHandle.31 = type { i64 }
%class.VkNonDispatchableHandle.32 = type { i64 }
%class.VkNonDispatchableHandle.33 = type { i64 }
%class.VkNonDispatchableHandle.34 = type { i64 }
%class.VkNonDispatchableHandle.35 = type { i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"struct.vk::Device::SamplingRoutineCache::Key"* }
%"class.std::__1::tuple.460" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.vk::SamplerState", %"struct.vk::Device::SamplerIndexer::Identifier" }
%"struct.vk::SamplerState" = type <{ i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32, i32, i32, i8, i8, [2 x i8] }>
%"struct.vk::Device::SamplerIndexer::Identifier" = type { i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkQueue_T = type opaque
%"class.marl::lock" = type { %"class.std::__1::unique_lock" }
%"class.std::__1::unique_lock" = type <{ %"class.std::__1::mutex"*, i8, [7 x i8] }>
%class.anon.483 = type { %"struct.marl::Event::Shared"* }
%class.anon.451 = type { %"struct.marl::Event::Shared"* }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%"class.marl::containers::vector.399" = type { %"class.marl::Allocator"*, i64, i64, [8 x %"struct.marl::aligned_storage<16, 8>::type"], %"struct.marl::aligned_storage<16, 8>::type"*, %"struct.marl::Allocation" }
%"class.vk::Fence" = type { %"class.std::__1::shared_ptr.138" }
%struct.VkSemaphoreWaitInfo = type { i32, i8*, i32, i32, %class.VkNonDispatchableHandle.1*, i64* }
%"class.vk::TimelineSemaphore" = type { %"class.vk::Semaphore", %"class.std::__1::shared_ptr.402" }
%"class.vk::Semaphore" = type { i32 (...)**, i32, %"class.marl::mutex" }
%"class.std::__1::shared_ptr.402" = type { %"struct.vk::TimelineSemaphore::Shared"*, %"class.std::__1::__shared_weak_count"* }
%"struct.vk::TimelineSemaphore::Shared" = type <{ %"class.marl::mutex", %"class.marl::ConditionVariable", i64, %"class.marl::containers::vector.403", %"class.std::__1::map.404", i32, [4 x i8] }>
%"class.marl::containers::vector.403" = type { %"class.marl::Allocator"*, i64, i64, [1 x %"struct.marl::aligned_storage<16, 8>::type"], %"struct.marl::aligned_storage<16, 8>::type"*, %"struct.marl::Allocation" }
%"class.std::__1::map.404" = type { %"class.std::__1::__tree.405" }
%"class.std::__1::__tree.405" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.406", %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %class.VkNonDispatchableHandle.14* }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%struct.VkWriteDescriptorSet = type { i32, i8*, %class.VkNonDispatchableHandle.15, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %class.VkNonDispatchableHandle.6* }
%struct.VkDescriptorImageInfo = type { %class.VkNonDispatchableHandle.14, %class.VkNonDispatchableHandle.7, i32 }
%struct.VkDescriptorBufferInfo = type { %class.VkNonDispatchableHandle, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %class.VkNonDispatchableHandle.15, i32, i32, %class.VkNonDispatchableHandle.15, i32, i32, i32 }
%struct.VkMemoryDedicatedRequirements = type { i32, i8*, i32, i32 }
%struct.VkDebugUtilsObjectNameInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkDebugUtilsObjectTagInfoEXT = type { i32, i8*, i32, i64, i64, i64, i8* }
%"class.vk::ImageView" = type <{ %"class.vk::Image"*, i32, %"class.vk::Format", %struct.VkComponentMapping, %struct.VkImageSubresourceRange, [4 x i8], %"class.vk::SamplerYcbcrConversion"*, %"union.vk::Identifier", [4 x i8] }>
%"class.vk::Image" = type { %"class.vk::DeviceMemory"*, %"class.vk::Device"*, i64, i32, i32, %"class.vk::Format", %struct.VkExtent3D, i32, i32, i32, i32, i32, %"class.vk::Image"*, i32, %"class.marl::mutex", %"class.std::__1::unordered_set.419" }
%"class.vk::DeviceMemory" = type opaque
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::unordered_set.419" = type { %"class.std::__1::__hash_table.420" }
%"class.std::__1::__hash_table.420" = type <{ %"class.std::__1::unique_ptr.421", %"class.std::__1::__compressed_pair.431", %"class.std::__1::__compressed_pair.436", %"class.std::__1::__compressed_pair.438", [4 x i8] }>
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423", %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"struct.std::__1::__hash_node_base.424"** }
%"struct.std::__1::__hash_node_base.424" = type { %"struct.std::__1::__hash_node_base.424"* }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.std::__1::__bucket_list_deallocator.426" }
%"class.std::__1::__bucket_list_deallocator.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"struct.std::__1::__hash_node_base.424" }
%"class.std::__1::__compressed_pair.436" = type <{ %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.437", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.vk::Image::Subresource" }
%"class.vk::Image::Subresource" = type { %struct.VkImageSubresource }
%struct.VkImageSubresource = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.vk::SamplerYcbcrConversion" = type { i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%"union.vk::Identifier" = type { %struct.anon.445 }
%struct.anon.445 = type { i24 }
%"class.std::__1::function.452" = type { %"class.std::__1::__function::__policy_func.455" }
%"class.std::__1::__function::__policy_func.455" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.456", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.456" = type { i1 (%"union.std::__1::__function::__policy_storage"*)* }
%"class.std::__1::unique_ptr.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463", %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.457" }
%"struct.std::__1::pair.457" = type { %"struct.vk::Device::SamplingRoutineCache::Key", %"class.std::__1::shared_ptr" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.43"*, i8, [7 x i8] }>
%"class.std::__1::allocator.43" = type { i8 }
%"class.std::__1::__shared_ptr_pointer" = type { %"class.std::__1::__shared_weak_count", %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477", %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"struct.marl::Event::Shared"* }
%"class.std::__1::chrono::time_point.449" = type { %"class.std::__1::chrono::duration.450" }
%"class.std::__1::chrono::duration.450" = type { i64 }
%class.anon.487 = type { %"struct.vk::TimelineSemaphore::Shared"*, i64* }
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496", %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node.493"* }
%"struct.std::__1::__hash_node.493" = type { %"struct.std::__1::__hash_node_base.374", i64, %"class.vk::ImageView"* }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.std::__1::__hash_node_destructor.498" }
%"class.std::__1::__hash_node_destructor.498" = type <{ %"class.std::__1::allocator.384"*, i8, [7 x i8] }>
%"class.std::__1::allocator.384" = type { i8 }

$_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm = comdat any

$_ZNSt3__110unique_ptrIN2vk6Device20SamplingRoutineCacheENS_14default_deleteIS3_EEE5resetEPS3_ = comdat any

$_ZN2vk6Device20SamplingRoutineCacheC2Ev = comdat any

$_ZNSt3__110unique_ptrIN2vk6Device14SamplerIndexerENS_14default_deleteIS3_EEE5resetEPS3_ = comdat any

$_ZN4marl10containers6vectorINS_5EventELi8EE9push_backERKS2_ = comdat any

$_ZN4marl17ConditionVariable4waitIZNS_5Event6Shared4waitEvEUlvE_EEvRNS_4lockEOT_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbvEE11__call_implINS0_20__default_alloc_funcIZN4marl5Event6Shared4waitEvEUlvE_S2_EEEEbPKNS0_16__policy_storageE = comdat any

$_ZNSt3__110shared_ptrIN4marl5Event6SharedEED2Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE5clearEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeISA_PvEEEE = comdat any

$_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE8__rehashEm = comdat any

$_ZNSt3__110unique_ptrINS_11__hash_nodeINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEEPvEENS_22__hash_node_destructorINS_9allocatorISD_EEEEE5resetEPSD_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE4findIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS3_JRKS3_S6_EEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSJ_SJ_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE21__remove_node_pointerEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__112__hash_tableIPKN2sw8LRUCacheIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEENS6_4HashEE5KeyedENSC_15KeyedComparatorESG_NS_9allocatorISF_EEED2Ev = comdat any

$_ZNSt3__113__vector_baseIN2sw8LRUCacheIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEENS6_4HashEE5EntryENS_9allocatorISD_EEED2Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEED2Ev = comdat any

$_ZN4marl5Event3anyIPS0_EES0_NS0_4ModeERKT_S6_ = comdat any

$_ZN4marl10containers6vectorINSt3__110shared_ptrINS_5Event6SharedEEELi1EE9push_backERKS6_ = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEE21__on_zero_shared_weakEv = comdat any

$_ZN4marl5Event6Shared6signalEv = comdat any

$_ZN4marl17ConditionVariable10wait_untilINSt3__16chrono12system_clockENS3_8durationIxNS2_5ratioILl1ELl1000000000EEEEEZNS_5Event6Shared10wait_untilIS4_S8_EEbRKNS3_10time_pointIT_T0_EEEUlvE_EEbRNS_4lockESH_OT1_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbvEE11__call_implINS0_20__default_alloc_funcIZN4marl5Event6Shared10wait_untilINS_6chrono12system_clockENSA_8durationIxNS_5ratioILl1ELl1000000000EEEEEEEbRKNSA_10time_pointIT_T0_EEEUlvE_S2_EEEEbPKNS0_16__policy_storageE = comdat any

$_ZNSt3__118condition_variable10wait_untilINS_6chrono12system_clockENS2_8durationIxNS_5ratioILl1ELl1000000000EEEEEEENS_9cv_statusERNS_11unique_lockINS_5mutexEEERKNS2_10time_pointIT_T0_EE = comdat any

$_ZN2vk17TimelineSemaphore6Shared4waitINSt3__16chrono12system_clockENS4_8durationIxNS3_5ratioILl1ELl1000000000EEEEEEE8VkResultmNS4_10time_pointIT_T0_EE = comdat any

$_ZN4marl17ConditionVariable10wait_untilINSt3__16chrono12system_clockENS3_8durationIxNS2_5ratioILl1ELl1000000000EEEEEZN2vk17TimelineSemaphore6Shared4waitIS4_S8_EE8VkResultmNS3_10time_pointIT_T0_EEEUlvE_EEbRNS_4lockERKSH_OT1_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbvEE11__call_implINS0_20__default_alloc_funcIZN2vk17TimelineSemaphore6Shared4waitINS_6chrono12system_clockENSA_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE8VkResultmNSA_10time_pointIT_T0_EEEUlvE_S2_EEEEbPKNS0_16__policy_storageE = comdat any

$_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE = comdat any

$_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4marl5Event6Shared4waitEvEUlvE_FbvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4marl5Event6Shared10wait_untilINS_6chrono12system_clockENS8_8durationIxNS_5ratioILl1ELl1000000000EEEEEEEbRKNS8_10time_pointIT_T0_EEEUlvE_FbvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2vk17TimelineSemaphore6Shared4waitINS_6chrono12system_clockENS8_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE8VkResultmNS8_10time_pointIT_T0_EEEUlvE_FbvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@.str = private unnamed_addr constant [47 x i8] c"%s:%d WARNING: UNSUPPORTED: enabledLayerCount\0A\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"../../third_party/swiftshader/src/Vulkan/VkDevice.cpp\00", align 1
@_ZN4marl9Allocator7DefaultE = external local_unnamed_addr global %"class.marl::Allocator"*, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4marl5Event6Shared4waitEvEUlvE_FbvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN2vk17TimelineSemaphoreE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZTVNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::__shared_weak_count"*)* @_ZNSt3__119__shared_weak_countD2Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEED0Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4marl5Event6Shared10wait_untilINS_6chrono12system_clockENS8_8durationIxNS_5ratioILl1ELl1000000000EEEEEEEbRKNS8_10time_pointIT_T0_EEEUlvE_FbvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2vk17TimelineSemaphore6Shared4waitINS_6chrono12system_clockENS8_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE8VkResultmNS8_10time_pointIT_T0_EEEUlvE_FbvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8

@_ZN2vk6Device14SamplerIndexerD1Ev = hidden unnamed_addr alias void (%"class.vk::Device::SamplerIndexer"*), void (%"class.vk::Device::SamplerIndexer"*)* @_ZN2vk6Device14SamplerIndexerD2Ev
@_ZN2vk6DeviceC1EPK18VkDeviceCreateInfoPvPNS_14PhysicalDeviceEPK24VkPhysicalDeviceFeaturesRKNSt3__110shared_ptrIN4marl9SchedulerEEE = hidden unnamed_addr alias void (%"class.vk::Device"*, %struct.VkDeviceCreateInfo*, i8*, %"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceFeatures*, %"class.std::__1::shared_ptr.237"*), void (%"class.vk::Device"*, %struct.VkDeviceCreateInfo*, i8*, %"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceFeatures*, %"class.std::__1::shared_ptr.237"*)* @_ZN2vk6DeviceC2EPK18VkDeviceCreateInfoPvPNS_14PhysicalDeviceEPK24VkPhysicalDeviceFeaturesRKNSt3__110shared_ptrIN4marl9SchedulerEEE

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv(%class.VkNonDispatchableHandle*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm(%class.VkNonDispatchableHandle*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle, %class.VkNonDispatchableHandle* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv(%class.VkNonDispatchableHandle.0*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.0* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm(%class.VkNonDispatchableHandle.0*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.0, %class.VkNonDispatchableHandle.0* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv(%class.VkNonDispatchableHandle.1*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.1* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm(%class.VkNonDispatchableHandle.1*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.1, %class.VkNonDispatchableHandle.1* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv(%class.VkNonDispatchableHandle.2*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.2* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm(%class.VkNonDispatchableHandle.2*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.2, %class.VkNonDispatchableHandle.2* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv(%class.VkNonDispatchableHandle.3*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.3* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm(%class.VkNonDispatchableHandle.3*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.3, %class.VkNonDispatchableHandle.3* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv(%class.VkNonDispatchableHandle.4*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.4* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm(%class.VkNonDispatchableHandle.4*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.4, %class.VkNonDispatchableHandle.4* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv(%class.VkNonDispatchableHandle.5*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.5* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm(%class.VkNonDispatchableHandle.5*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.5, %class.VkNonDispatchableHandle.5* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv(%class.VkNonDispatchableHandle.6*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.6* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm(%class.VkNonDispatchableHandle.6*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.6, %class.VkNonDispatchableHandle.6* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv(%class.VkNonDispatchableHandle.7*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.7* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm(%class.VkNonDispatchableHandle.7*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.7, %class.VkNonDispatchableHandle.7* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv(%class.VkNonDispatchableHandle.8*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.8* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm(%class.VkNonDispatchableHandle.8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.8, %class.VkNonDispatchableHandle.8* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv(%class.VkNonDispatchableHandle.9*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.9* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm(%class.VkNonDispatchableHandle.9*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.9, %class.VkNonDispatchableHandle.9* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv(%class.VkNonDispatchableHandle.10*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.10* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm(%class.VkNonDispatchableHandle.10*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.10, %class.VkNonDispatchableHandle.10* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv(%class.VkNonDispatchableHandle.11*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.11* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm(%class.VkNonDispatchableHandle.11*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.11, %class.VkNonDispatchableHandle.11* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv(%class.VkNonDispatchableHandle.12*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.12* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm(%class.VkNonDispatchableHandle.12*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.12, %class.VkNonDispatchableHandle.12* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv(%class.VkNonDispatchableHandle.13*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.13* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm(%class.VkNonDispatchableHandle.13*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.13, %class.VkNonDispatchableHandle.13* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv(%class.VkNonDispatchableHandle.14*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.14* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm(%class.VkNonDispatchableHandle.14*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.14, %class.VkNonDispatchableHandle.14* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv(%class.VkNonDispatchableHandle.15*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.15* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm(%class.VkNonDispatchableHandle.15*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.15, %class.VkNonDispatchableHandle.15* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv(%class.VkNonDispatchableHandle.16*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.16* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm(%class.VkNonDispatchableHandle.16*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.16, %class.VkNonDispatchableHandle.16* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv(%class.VkNonDispatchableHandle.17*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.17* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm(%class.VkNonDispatchableHandle.17*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.17, %class.VkNonDispatchableHandle.17* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv(%class.VkNonDispatchableHandle.18*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.18* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm(%class.VkNonDispatchableHandle.18*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.18, %class.VkNonDispatchableHandle.18* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv(%class.VkNonDispatchableHandle.19*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.19* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm(%class.VkNonDispatchableHandle.19*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.19, %class.VkNonDispatchableHandle.19* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv(%class.VkNonDispatchableHandle.20*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.20* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm(%class.VkNonDispatchableHandle.20*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.20, %class.VkNonDispatchableHandle.20* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv(%class.VkNonDispatchableHandle.21*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.21* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm(%class.VkNonDispatchableHandle.21*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.21, %class.VkNonDispatchableHandle.21* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv(%class.VkNonDispatchableHandle.22*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.22* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm(%class.VkNonDispatchableHandle.22*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.22, %class.VkNonDispatchableHandle.22* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv(%class.VkNonDispatchableHandle.23*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.23* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm(%class.VkNonDispatchableHandle.23*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.23, %class.VkNonDispatchableHandle.23* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv(%class.VkNonDispatchableHandle.24*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.24* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm(%class.VkNonDispatchableHandle.24*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.24, %class.VkNonDispatchableHandle.24* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv(%class.VkNonDispatchableHandle.25*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.25* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm(%class.VkNonDispatchableHandle.25*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.25, %class.VkNonDispatchableHandle.25* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv(%class.VkNonDispatchableHandle.26*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.26* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm(%class.VkNonDispatchableHandle.26*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.26, %class.VkNonDispatchableHandle.26* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv(%class.VkNonDispatchableHandle.27*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.27* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm(%class.VkNonDispatchableHandle.27*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.27, %class.VkNonDispatchableHandle.27* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv(%class.VkNonDispatchableHandle.28*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.28* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm(%class.VkNonDispatchableHandle.28*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.28, %class.VkNonDispatchableHandle.28* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv(%class.VkNonDispatchableHandle.29*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.29* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm(%class.VkNonDispatchableHandle.29*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.29, %class.VkNonDispatchableHandle.29* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv(%class.VkNonDispatchableHandle.30*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.30* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm(%class.VkNonDispatchableHandle.30*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.30, %class.VkNonDispatchableHandle.30* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv(%class.VkNonDispatchableHandle.31*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.31* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm(%class.VkNonDispatchableHandle.31*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.31, %class.VkNonDispatchableHandle.31* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv(%class.VkNonDispatchableHandle.32*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.32* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm(%class.VkNonDispatchableHandle.32*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.32, %class.VkNonDispatchableHandle.32* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv(%class.VkNonDispatchableHandle.33*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.33* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm(%class.VkNonDispatchableHandle.33*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.33, %class.VkNonDispatchableHandle.33* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv(%class.VkNonDispatchableHandle.34*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.34* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm(%class.VkNonDispatchableHandle.34*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.34, %class.VkNonDispatchableHandle.34* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv(%class.VkNonDispatchableHandle.35*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.35* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm(%class.VkNonDispatchableHandle.35*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.35, %class.VkNonDispatchableHandle.35* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk6Device20SamplingRoutineCache14updateSnapshotEv(%"class.vk::Device::SamplingRoutineCache"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.460", align 1
  %4 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %4) #15
  %5 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %55, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE5clearEv(%"class.std::__1::__hash_table"* %9) #15
  %10 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %0, i64 0, i32 4, i32 3
  %11 = load %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"** %10, align 8
  %12 = icmp eq %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::tuple.460", %"class.std::__1::tuple.460"* %3, i64 0, i32 0
  br label %18

17:                                               ; preds = %51, %8
  store i8 0, i8* %5, align 8
  br label %55

18:                                               ; preds = %13, %51
  %19 = phi %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* [ %11, %13 ], [ %53, %51 ]
  %20 = getelementptr inbounds %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %19, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %19, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #16
  store %"struct.vk::Device::SamplingRoutineCache::Key"* %21, %"struct.vk::Device::SamplingRoutineCache::Key"** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #16
  %22 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %9, %"struct.vk::Device::SamplingRoutineCache::Key"* dereferenceable(12) %21, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.460"* nonnull dereferenceable(1) %3) #15
  %23 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %22, 0
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #16
  %25 = bitcast %"class.std::__1::shared_ptr"* %20 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %19, i64 0, i32 1, i32 1
  %28 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %27, align 8
  %29 = ptrtoint %"class.std::__1::__shared_weak_count"* %28 to i64
  %30 = icmp eq %"class.std::__1::__shared_weak_count"* %28, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %18
  %32 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %28, i64 0, i32 0, i32 1
  %33 = atomicrmw add i64* %32, i64 1 monotonic
  br label %34

34:                                               ; preds = %31, %18
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %24 to i64*
  store i64 %26, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 5
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to %"class.std::__1::__shared_weak_count"**
  %38 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %39 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %37, align 8
  store i64 %29, i64* %38, align 8
  %40 = icmp eq %"class.std::__1::__shared_weak_count"* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %39, i64 0, i32 0, i32 1
  %43 = atomicrmw add i64* %42, i64 -1 acq_rel
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %39, i64 0, i32 0
  %47 = bitcast %"class.std::__1::__shared_weak_count"* %39 to void (%"class.std::__1::__shared_count"*)***
  %48 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %48, i64 2
  %50 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %49, align 8
  call void %50(%"class.std::__1::__shared_count"* %46) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %39) #15
  br label %51

51:                                               ; preds = %34, %41, %45
  %52 = getelementptr inbounds %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %19, i64 0, i32 2
  %53 = load %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"** %52, align 8
  %54 = icmp eq %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %53, null
  br i1 %54, label %17, label %18

55:                                               ; preds = %1, %17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %4) #15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk6Device14SamplerIndexerD2Ev(%"class.vk::Device::SamplerIndexer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::Device::SamplerIndexer", %"class.vk::Device::SamplerIndexer"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.vk::Device::SamplerIndexer", %"class.vk::Device::SamplerIndexer"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %2, %"class.std::__1::__tree_node"* %5) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN2vk6Device14SamplerIndexer5indexERKNS_12SamplerStateE(%"class.vk::Device::SamplerIndexer"*, %"struct.vk::SamplerState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.vk::Device::SamplerIndexer::Identifier", align 4
  %4 = getelementptr inbounds %"class.vk::Device::SamplerIndexer", %"class.vk::Device::SamplerIndexer"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %4) #15
  %5 = getelementptr inbounds %"class.vk::Device::SamplerIndexer", %"class.vk::Device::SamplerIndexer"* %0, i64 0, i32 1, i32 0
  %6 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE4findIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEERKT_(%"class.std::__1::__tree"* %5, %"struct.vk::SamplerState"* dereferenceable(72) %1) #15
  %7 = getelementptr inbounds %"class.vk::Device::SamplerIndexer", %"class.vk::Device::SamplerIndexer"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %6, %7
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"*
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 13
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 1, i32 0, i32 1, i32 0
  br label %24

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.vk::Device::SamplerIndexer", %"class.vk::Device::SamplerIndexer"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, 1
  store i32 %19, i32* %17, align 8
  %20 = bitcast %"struct.vk::Device::SamplerIndexer::Identifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  %21 = getelementptr inbounds %"struct.vk::Device::SamplerIndexer::Identifier", %"struct.vk::Device::SamplerIndexer::Identifier"* %3, i64 0, i32 0
  store i32 %19, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.vk::Device::SamplerIndexer::Identifier", %"struct.vk::Device::SamplerIndexer::Identifier"* %3, i64 0, i32 1
  store i32 1, i32* %22, align 4
  %23 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS3_JRKS3_S6_EEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %5, %"struct.vk::SamplerState"* dereferenceable(72) %1, %"struct.vk::SamplerState"* dereferenceable(72) %1, %"struct.vk::Device::SamplerIndexer::Identifier"* nonnull dereferenceable(8) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %24

24:                                               ; preds = %16, %9
  %25 = phi i32* [ %15, %9 ], [ %17, %16 ]
  %26 = load i32, i32* %25, align 4
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %4) #15
  ret i32 %26
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk6Device14SamplerIndexer6removeERKNS_12SamplerStateE(%"class.vk::Device::SamplerIndexer"*, %"struct.vk::SamplerState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::Device::SamplerIndexer", %"class.vk::Device::SamplerIndexer"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %3) #15
  %4 = getelementptr inbounds %"class.vk::Device::SamplerIndexer", %"class.vk::Device::SamplerIndexer"* %0, i64 0, i32 1, i32 0
  %5 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE4findIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEERKT_(%"class.std::__1::__tree"* %4, %"struct.vk::SamplerState"* dereferenceable(72) %1) #15
  %6 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 13
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -1
  store i32 %9, i32* %7, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"*
  %13 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE21__remove_node_pointerEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %4, %"class.std::__1::__tree_node"* %12) #15
  %14 = bitcast %"class.std::__1::__tree_end_node"* %5 to i8*
  tail call void @_ZdlPv(i8* %14) #17
  br label %15

15:                                               ; preds = %11, %2
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %3) #15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"struct.vk::SamplerState"* @_ZN2vk6Device14SamplerIndexer4findEj(%"class.vk::Device::SamplerIndexer"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::Device::SamplerIndexer", %"class.vk::Device::SamplerIndexer"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %3) #15
  %4 = getelementptr inbounds %"class.vk::Device::SamplerIndexer", %"class.vk::Device::SamplerIndexer"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %"class.vk::Device::SamplerIndexer", %"class.vk::Device::SamplerIndexer"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  br i1 %7, label %45, label %8

8:                                                ; preds = %2, %42
  %9 = phi %"class.std::__1::__tree_end_node"* [ %43, %42 ], [ %5, %2 ]
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"*
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 1, i32 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, %1
  br i1 %13, label %45, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 1, i32 0
  %16 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %17 = icmp eq %"class.std::__1::__tree_node_base"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14
  %19 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node_base"*
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 2
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_end_node"**
  %22 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 0, i32 0
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, %19
  br i1 %25, label %42, label %33

26:                                               ; preds = %14, %26
  %27 = phi %"class.std::__1::__tree_node_base"* [ %29, %26 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %26

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %27, i64 0, i32 0
  br label %42

33:                                               ; preds = %18, %33
  %34 = phi %"class.std::__1::__tree_end_node"** [ %37, %33 ], [ %21, %18 ]
  %35 = bitcast %"class.std::__1::__tree_end_node"** %34 to %"class.std::__1::__tree_node_base"**
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %36
  br i1 %41, label %42, label %33

42:                                               ; preds = %33, %31, %18
  %43 = phi %"class.std::__1::__tree_end_node"* [ %32, %31 ], [ %22, %18 ], [ %38, %33 ]
  %44 = icmp eq %"class.std::__1::__tree_end_node"* %43, %6
  br i1 %44, label %51, label %8

45:                                               ; preds = %8, %2
  %46 = phi %"class.std::__1::__tree_end_node"* [ %5, %2 ], [ %9, %8 ]
  %47 = icmp eq %"class.std::__1::__tree_end_node"* %46, %6
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__tree_node"*
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %49, i64 0, i32 1, i32 0, i32 0
  br label %51

51:                                               ; preds = %42, %45, %48
  %52 = phi %"struct.vk::SamplerState"* [ %50, %48 ], [ null, %45 ], [ null, %42 ]
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %3) #15
  ret %"struct.vk::SamplerState"* %52
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk6DeviceC2EPK18VkDeviceCreateInfoPvPNS_14PhysicalDeviceEPK24VkPhysicalDeviceFeaturesRKNSt3__110shared_ptrIN4marl9SchedulerEEE(%"class.vk::Device"*, %struct.VkDeviceCreateInfo* nocapture readonly, i8*, %"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceFeatures* readonly, %"class.std::__1::shared_ptr.237"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 0
  store %"class.vk::PhysicalDevice"* %3, %"class.vk::PhysicalDevice"** %7, align 8
  %8 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 1
  %9 = bitcast %"class.vk::Queue"** %8 to i8**
  store i8* %2, i8** %9, align 8
  %10 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 2
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 3
  %12 = bitcast %"class.std::__1::unique_ptr.173"* %11 to i64*
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %1, i64 0, i32 7
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %13, align 8
  %16 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 5
  store [256 x i8]* null, [256 x i8]** %16, align 8
  %17 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 6
  %18 = icmp eq %struct.VkPhysicalDeviceFeatures* %4, null
  %19 = bitcast %struct.VkPhysicalDeviceFeatures* %17 to i8*
  br i1 %18, label %22, label %20

20:                                               ; preds = %6
  %21 = bitcast %struct.VkPhysicalDeviceFeatures* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 4 %21, i64 220, i1 false)
  br label %23

22:                                               ; preds = %6
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 220, i1 false)
  br label %23

23:                                               ; preds = %22, %20
  %24 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 7
  %25 = bitcast %"class.std::__1::shared_ptr.237"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::shared_ptr.237"* %24 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 7, i32 1
  %29 = getelementptr inbounds %"class.std::__1::shared_ptr.237", %"class.std::__1::shared_ptr.237"* %5, i64 0, i32 1
  %30 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %29, align 8
  store %"class.std::__1::__shared_weak_count"* %30, %"class.std::__1::__shared_weak_count"** %28, align 8
  %31 = icmp eq %"class.std::__1::__shared_weak_count"* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %30, i64 0, i32 0, i32 1
  %34 = atomicrmw add i64* %33, i64 1 monotonic
  br label %35

35:                                               ; preds = %23, %32
  %36 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 8
  %37 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 9
  %38 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 11, i32 0, i32 3
  %39 = bitcast %"class.std::__1::__compressed_pair.390"* %38 to i32*
  %40 = bitcast %"class.std::__1::unique_ptr.357"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 88, i1 false)
  store i32 1065353216, i32* %39, align 4
  %41 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %1, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %63, label %44

44:                                               ; preds = %35
  %45 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %1, i64 0, i32 4
  %46 = load i32, i32* %10, align 8
  br label %52

47:                                               ; preds = %52
  %48 = icmp eq i32 %60, 0
  br i1 %48, label %63, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %1, i64 0, i32 4
  %51 = getelementptr inbounds %"class.std::__1::shared_ptr.237", %"class.std::__1::shared_ptr.237"* %5, i64 0, i32 0
  br label %78

52:                                               ; preds = %44, %52
  %53 = phi i32 [ %46, %44 ], [ %58, %52 ]
  %54 = phi i64 [ 0, %44 ], [ %59, %52 ]
  %55 = load %struct.VkDeviceQueueCreateInfo*, %struct.VkDeviceQueueCreateInfo** %45, align 8
  %56 = getelementptr inbounds %struct.VkDeviceQueueCreateInfo, %struct.VkDeviceQueueCreateInfo* %55, i64 %54, i32 4
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %53, %57
  store i32 %58, i32* %10, align 8
  %59 = add nuw nsw i64 %54, 1
  %60 = load i32, i32* %41, align 4
  %61 = zext i32 %60 to i64
  %62 = icmp ult i64 %59, %61
  br i1 %62, label %52, label %47

63:                                               ; preds = %88, %35, %47
  %64 = load i32, i32* %10, align 8
  %65 = zext i32 %64 to i64
  %66 = mul nuw nsw i64 %65, 304
  %67 = getelementptr inbounds i8, i8* %2, i64 %66
  %68 = bitcast [256 x i8]** %16 to i8**
  store i8* %67, i8** %68, align 8
  %69 = load i32, i32* %13, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %105, label %71

71:                                               ; preds = %63
  %72 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %1, i64 0, i32 8
  %73 = load i8**, i8*** %72, align 8
  %74 = load i8*, i8** %73, align 8
  %75 = tail call i8* @strncpy(i8* %67, i8* %74, i64 256) #15
  %76 = load i32, i32* %13, align 8
  %77 = icmp ugt i32 %76, 1
  br i1 %77, label %109, label %105

78:                                               ; preds = %49, %88
  %79 = phi i32 [ %60, %49 ], [ %89, %88 ]
  %80 = phi i64 [ 0, %49 ], [ %91, %88 ]
  %81 = phi i32 [ 0, %49 ], [ %90, %88 ]
  %82 = load %struct.VkDeviceQueueCreateInfo*, %struct.VkDeviceQueueCreateInfo** %50, align 8
  %83 = getelementptr inbounds %struct.VkDeviceQueueCreateInfo, %struct.VkDeviceQueueCreateInfo* %82, i64 %80, i32 4
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %88, label %94

86:                                               ; preds = %94
  %87 = load i32, i32* %41, align 4
  br label %88

88:                                               ; preds = %86, %78
  %89 = phi i32 [ %79, %78 ], [ %87, %86 ]
  %90 = phi i32 [ %81, %78 ], [ %102, %86 ]
  %91 = add nuw nsw i64 %80, 1
  %92 = zext i32 %89 to i64
  %93 = icmp ult i64 %91, %92
  br i1 %93, label %78, label %63

94:                                               ; preds = %78, %94
  %95 = phi i32 [ %101, %94 ], [ 0, %78 ]
  %96 = phi i32 [ %102, %94 ], [ %81, %78 ]
  %97 = load %"class.vk::Queue"*, %"class.vk::Queue"** %8, align 8
  %98 = zext i32 %96 to i64
  %99 = getelementptr inbounds %"class.vk::Queue", %"class.vk::Queue"* %97, i64 %98
  %100 = load %"class.marl::Scheduler"*, %"class.marl::Scheduler"** %51, align 8
  tail call void @_ZN2vk5QueueC1EPNS_6DeviceEPN4marl9SchedulerE(%"class.vk::Queue"* %99, %"class.vk::Device"* %0, %"class.marl::Scheduler"* %100) #15
  %101 = add nuw i32 %95, 1
  %102 = add i32 %96, 1
  %103 = load i32, i32* %83, align 8
  %104 = icmp ult i32 %101, %103
  br i1 %104, label %94, label %86

105:                                              ; preds = %109, %71, %63
  %106 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %1, i64 0, i32 5
  %107 = load i32, i32* %106, align 8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %122, label %121

109:                                              ; preds = %71, %109
  %110 = phi i64 [ %117, %109 ], [ 1, %71 ]
  %111 = load [256 x i8]*, [256 x i8]** %16, align 8
  %112 = getelementptr inbounds [256 x i8], [256 x i8]* %111, i64 %110, i64 0
  %113 = load i8**, i8*** %72, align 8
  %114 = getelementptr inbounds i8*, i8** %113, i64 %110
  %115 = load i8*, i8** %114, align 8
  %116 = tail call i8* @strncpy(i8* %112, i8* %115, i64 256) #15
  %117 = add nuw nsw i64 %110, 1
  %118 = load i32, i32* %13, align 8
  %119 = zext i32 %118 to i64
  %120 = icmp ult i64 %117, %119
  br i1 %120, label %109, label %105

121:                                              ; preds = %105
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 152) #15
  br label %122

122:                                              ; preds = %105, %121
  %123 = tail call i8* @_Znwm(i64 264) #17
  %124 = bitcast i8* %123 to %"class.sw::Blitter"*
  tail call void @_ZN2sw7BlitterC1Ev(%"class.sw::Blitter"* nonnull %124) #15
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %11, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %125, align 8
  %127 = bitcast %"class.std::__1::unique_ptr.173"* %11 to i8**
  store i8* %123, i8** %127, align 8
  %128 = icmp eq %"class.sw::Blitter"* %126, null
  br i1 %128, label %134, label %129

129:                                              ; preds = %122
  %130 = bitcast %"class.sw::Blitter"* %126 to void (%"class.sw::Blitter"*)***
  %131 = load void (%"class.sw::Blitter"*)**, void (%"class.sw::Blitter"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.sw::Blitter"*)*, void (%"class.sw::Blitter"*)** %131, i64 1
  %133 = load void (%"class.sw::Blitter"*)*, void (%"class.sw::Blitter"*)** %132, align 8
  tail call void %133(%"class.sw::Blitter"* nonnull %126) #15
  br label %134

134:                                              ; preds = %122, %129
  %135 = tail call i8* @_Znwm(i64 176) #17
  %136 = bitcast i8* %135 to %"class.vk::Device::SamplingRoutineCache"*
  tail call void @_ZN2vk6Device20SamplingRoutineCacheC2Ev(%"class.vk::Device::SamplingRoutineCache"* nonnull %136) #18
  tail call void @_ZNSt3__110unique_ptrIN2vk6Device20SamplingRoutineCacheENS_14default_deleteIS3_EEE5resetEPS3_(%"class.std::__1::unique_ptr.357"* %36, %"class.vk::Device::SamplingRoutineCache"* nonnull %136) #15
  %137 = tail call i8* @_Znwm(i64 72) #17
  %138 = bitcast i8* %137 to %"class.vk::Device::SamplerIndexer"*
  %139 = getelementptr inbounds i8, i8* %137, i64 48
  %140 = getelementptr inbounds i8, i8* %137, i64 40
  %141 = bitcast i8* %140 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 0, i64 72, i1 false)
  store i8* %139, i8** %141, align 8
  %142 = getelementptr inbounds i8, i8* %137, i64 64
  %143 = bitcast i8* %142 to i32*
  store i32 0, i32* %143, align 8
  tail call void @_ZNSt3__110unique_ptrIN2vk6Device14SamplerIndexerENS_14default_deleteIS3_EEE5resetEPS3_(%"class.std::__1::unique_ptr.363"* %37, %"class.vk::Device::SamplerIndexer"* nonnull %138) #15
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk5QueueC1EPNS_6DeviceEPN4marl9SchedulerE(%"class.vk::Queue"*, %"class.vk::Device"*, %"class.marl::Scheduler"*) unnamed_addr #2

; Function Attrs: nofree nounwind optsize
declare i8* @strncpy(i8* returned, i8* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN2sw4warnEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: optsize
declare void @_ZN2sw7BlitterC1Ev(%"class.sw::Blitter"*) unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN2vk6Device20SamplingRoutineCacheENS_14default_deleteIS3_EEE5resetEPS3_(%"class.std::__1::unique_ptr.357"*, %"class.vk::Device::SamplingRoutineCache"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.357", %"class.std::__1::unique_ptr.357"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.vk::Device::SamplingRoutineCache"*, %"class.vk::Device::SamplingRoutineCache"** %3, align 8
  store %"class.vk::Device::SamplingRoutineCache"* %1, %"class.vk::Device::SamplingRoutineCache"** %3, align 8
  %5 = icmp eq %"class.vk::Device::SamplingRoutineCache"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %4, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNSt3__112__hash_tableIPKN2sw8LRUCacheIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEENS6_4HashEE5KeyedENSC_15KeyedComparatorESG_NS_9allocatorISF_EEED2Ev(%"class.std::__1::__hash_table.55"* %7) #15
  %8 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %4, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNSt3__113__vector_baseIN2sw8LRUCacheIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEENS6_4HashEE5EntryENS_9allocatorISD_EEED2Ev(%"class.std::__1::__vector_base"* %8) #15
  %9 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %4, i64 0, i32 2, i32 0
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEED2Ev(%"class.std::__1::__hash_table"* %9) #15
  %10 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %4, i64 0, i32 0
  tail call void @_ZdlPv(i8* %10) #17
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN2vk6Device20SamplingRoutineCacheC2Ev(%"class.vk::Device::SamplingRoutineCache"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %0, i64 0, i32 2, i32 0, i32 3
  %5 = bitcast %"class.std::__1::__compressed_pair.47"* %4 to i32*
  %6 = bitcast %"class.std::__1::unordered_map"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %5, align 4
  %7 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %0, i64 0, i32 4
  %9 = bitcast %"class.marl::mutex"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 40, i1 false)
  %10 = tail call i8* @_Znwm(i64 49152) #17
  %11 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %12 = bitcast %"class.sw::LRUCache"* %8 to i8**
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 49152
  %14 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"** %14 to i8**
  store i8* %13, i8** %15, align 8
  %16 = bitcast %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"** %11 to i64*
  %17 = ptrtoint i8* %10 to i64
  %18 = getelementptr inbounds i8, i8* %10, i64 49152
  %19 = getelementptr i8, i8* %10, i64 49104
  %20 = sub i64 0, %17
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = ptrtoint i8* %21 to i64
  %23 = urem i64 %22, 48
  %24 = add i64 %22, 48
  %25 = sub i64 %24, %23
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 0, i64 %25, i1 false) #16
  %26 = ptrtoint i8* %18 to i64
  store i64 %26, i64* %16, align 8
  %27 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %0, i64 0, i32 4, i32 1
  %28 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %0, i64 0, i32 4, i32 1, i32 0, i32 3
  %29 = bitcast %"class.std::__1::__compressed_pair.73"* %28 to i32*
  %30 = bitcast %"class.std::__1::unordered_set"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %29, align 4
  %31 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %0, i64 0, i32 4, i32 2
  %32 = bitcast %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"** %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #16
  %33 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %8, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast i8* %10 to %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*
  %35 = getelementptr inbounds i8, i8* %10, i64 32
  %36 = bitcast i8* %35 to i64*
  store i64 0, i64* %36, align 8
  %37 = bitcast %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"** %31 to i8**
  store i8* %10, i8** %37, align 8
  br label %38

38:                                               ; preds = %1, %38
  %39 = phi i64 [ 1, %1 ], [ %46, %38 ]
  %40 = phi %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* [ %34, %1 ], [ %43, %38 ]
  %41 = ptrtoint %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %40 to i64
  %42 = load %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"** %33, align 8
  %43 = getelementptr inbounds %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %42, i64 %39
  %44 = getelementptr inbounds %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %42, i64 %39, i32 2
  %45 = bitcast %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"** %44 to i64*
  store i64 %41, i64* %45, align 8
  store %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %43, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"** %31, align 8
  %46 = add nuw nsw i64 %39, 1
  %47 = icmp eq i64 %46, 1024
  br i1 %47, label %48, label %38

48:                                               ; preds = %38
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN2vk6Device14SamplerIndexerENS_14default_deleteIS3_EEE5resetEPS3_(%"class.std::__1::unique_ptr.363"*, %"class.vk::Device::SamplerIndexer"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.363"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.vk::Device::SamplerIndexer"*, %"class.vk::Device::SamplerIndexer"** %3, align 8
  store %"class.vk::Device::SamplerIndexer"* %1, %"class.vk::Device::SamplerIndexer"** %3, align 8
  %5 = icmp eq %"class.vk::Device::SamplerIndexer"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.vk::Device::SamplerIndexer", %"class.vk::Device::SamplerIndexer"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.vk::Device::SamplerIndexer", %"class.vk::Device::SamplerIndexer"* %4, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %7, %"class.std::__1::__tree_node"* %10) #15
  %11 = bitcast %"class.vk::Device::SamplerIndexer"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #17
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk6Device7destroyEPK21VkAllocationCallbacks(%"class.vk::Device"* nocapture readonly, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 1
  br i1 %5, label %7, label %10

7:                                                ; preds = %10, %2
  %8 = bitcast %"class.vk::Queue"** %6 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %9, %struct.VkAllocationCallbacks* %1) #15
  ret void

10:                                               ; preds = %2, %10
  %11 = phi i64 [ %14, %10 ], [ 0, %2 ]
  %12 = load %"class.vk::Queue"*, %"class.vk::Queue"** %6, align 8
  %13 = getelementptr inbounds %"class.vk::Queue", %"class.vk::Queue"* %12, i64 %11
  tail call void @_ZN2vk5QueueD1Ev(%"class.vk::Queue"* %13) #15
  %14 = add nuw nsw i64 %11, 1
  %15 = load i32, i32* %3, align 8
  %16 = zext i32 %15 to i64
  %17 = icmp ult i64 %14, %16
  br i1 %17, label %10, label %7
}

; Function Attrs: nounwind optsize
declare void @_ZN2vk5QueueD1Ev(%"class.vk::Queue"*) unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8*, %struct.VkAllocationCallbacks*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i64 @_ZN2vk6Device29ComputeRequiredAllocationSizeEPK18VkDeviceCreateInfo(%struct.VkDeviceCreateInfo* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %0, i64 0, i32 4
  %7 = load %struct.VkDeviceQueueCreateInfo*, %struct.VkDeviceQueueCreateInfo** %6, align 8
  %8 = zext i32 %3 to i64
  br label %19

9:                                                ; preds = %19
  %10 = zext i32 %24 to i64
  %11 = mul nuw nsw i64 %10, 304
  br label %12

12:                                               ; preds = %9, %1
  %13 = phi i64 [ 0, %1 ], [ %11, %9 ]
  %14 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %0, i64 0, i32 7
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = shl nuw nsw i64 %16, 8
  %18 = add nuw nsw i64 %17, %13
  ret i64 %18

19:                                               ; preds = %5, %19
  %20 = phi i64 [ 0, %5 ], [ %25, %19 ]
  %21 = phi i32 [ 0, %5 ], [ %24, %19 ]
  %22 = getelementptr inbounds %struct.VkDeviceQueueCreateInfo, %struct.VkDeviceQueueCreateInfo* %7, i64 %20, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = add i32 %23, %21
  %25 = add nuw nsw i64 %20, 1
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %19, label %9
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Device12hasExtensionEPKc(%"class.vk::Device"* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 5
  %8 = load [256 x i8]*, [256 x i8]** %7, align 8
  %9 = zext i32 %4 to i64
  br label %12

10:                                               ; preds = %12
  %11 = icmp ult i64 %17, %9
  br i1 %11, label %12, label %18

12:                                               ; preds = %6, %10
  %13 = phi i64 [ 0, %6 ], [ %17, %10 ]
  %14 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i64 %13, i64 0
  %15 = tail call i32 @strncmp(i8* %14, i8* %1, i64 256) #19
  %16 = icmp eq i32 %15, 0
  %17 = add nuw nsw i64 %13, 1
  br i1 %16, label %18, label %10

18:                                               ; preds = %12, %10, %2
  %19 = phi i1 [ false, %2 ], [ false, %10 ], [ true, %12 ]
  ret i1 %19
}

; Function Attrs: nofree nounwind optsize readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden %struct.VkQueue_T* @_ZNK2vk6Device8getQueueEjj(%"class.vk::Device"* nocapture readonly, i32, i32) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 1
  %5 = load %"class.vk::Queue"*, %"class.vk::Queue"** %4, align 8
  %6 = zext i32 %2 to i64
  %7 = getelementptr inbounds %"class.vk::Queue", %"class.vk::Queue"* %5, i64 %6
  %8 = bitcast %"class.vk::Queue"* %7 to %struct.VkQueue_T*
  ret %struct.VkQueue_T* %8
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN2vk6Device13waitForFencesEjPK23VkNonDispatchableHandleIP9VkFence_TEjm(%"class.vk::Device"* nocapture readnone, i32, %class.VkNonDispatchableHandle.2* nocapture readonly, i32, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.marl::lock", align 8
  %7 = alloca %class.anon.483, align 8
  %8 = alloca %"class.marl::lock", align 8
  %9 = alloca %class.anon.451, align 8
  %10 = alloca %"class.marl::lock", align 8
  %11 = alloca %class.anon.483, align 8
  %12 = alloca %"class.marl::lock", align 8
  %13 = alloca %class.anon.451, align 8
  %14 = alloca %"class.std::__1::chrono::time_point", align 8
  %15 = alloca %"class.marl::containers::vector.399", align 8
  %16 = alloca %"class.marl::Event"*, align 8
  %17 = alloca %"class.marl::Event"*, align 8
  %18 = bitcast %"class.std::__1::chrono::time_point"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %14, i64 0, i32 0, i32 0
  %20 = tail call i64 @_ZNSt3__16chrono12system_clock3nowEv() #15
  %21 = mul nsw i64 %20, 1000
  %22 = sub nsw i64 9223372036854775807, %21
  %23 = icmp ult i64 %22, %4
  %24 = icmp ugt i64 %22, %4
  %25 = select i1 %24, i64 %4, i64 %22
  %26 = add nsw i64 %25, %21
  store i64 %26, i64* %19, align 8
  %27 = icmp eq i32 %3, 0
  br i1 %27, label %93, label %28

28:                                               ; preds = %5
  %29 = icmp eq i32 %1, 0
  br i1 %29, label %219, label %30

30:                                               ; preds = %28
  %31 = icmp eq i64 %4, 0
  %32 = bitcast %"class.marl::lock"* %10 to i8*
  %33 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %10, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %10, i64 0, i32 0, i32 1
  %35 = bitcast %class.anon.483* %11 to i8*
  %36 = getelementptr inbounds %class.anon.483, %class.anon.483* %11, i64 0, i32 0
  %37 = bitcast %"class.marl::lock"* %12 to i8*
  %38 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %12, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %12, i64 0, i32 0, i32 1
  %40 = bitcast %class.anon.451* %13 to i8*
  %41 = getelementptr inbounds %class.anon.451, %class.anon.451* %13, i64 0, i32 0
  %42 = zext i32 %1 to i64
  br label %43

43:                                               ; preds = %90, %30
  %44 = phi i64 [ 0, %30 ], [ %91, %90 ]
  %45 = getelementptr inbounds %class.VkNonDispatchableHandle.2, %class.VkNonDispatchableHandle.2* %2, i64 %44, i32 0
  %46 = bitcast i64* %45 to %"class.vk::Fence"**
  %47 = load %"class.vk::Fence"*, %"class.vk::Fence"** %46, align 8
  %48 = getelementptr inbounds %"class.vk::Fence", %"class.vk::Fence"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.sw::CountedEvent"*, %"class.sw::CountedEvent"** %48, align 8
  %50 = getelementptr inbounds %"class.sw::CountedEvent", %"class.sw::CountedEvent"* %49, i64 0, i32 1, i32 0, i32 0
  %51 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %50, align 8
  br i1 %31, label %52, label %58

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %51, i64 0, i32 0, i32 0
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %53) #15
  %54 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %50, align 8
  %55 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %54, i64 0, i32 4
  %56 = load i8, i8* %55, align 1, !range !2
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %53) #15
  %57 = icmp eq i8 %56, 1
  br i1 %57, label %90, label %219

58:                                               ; preds = %43
  br i1 %23, label %59, label %73

59:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #16
  %60 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %51, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 16, i1 false) #16
  store %"class.std::__1::mutex"* %60, %"class.std::__1::mutex"** %38, align 8
  store i8 1, i8* %39, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %60) #15
  %61 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %51, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #16
  store %"struct.marl::Event::Shared"* %51, %"struct.marl::Event::Shared"** %41, align 8
  call void @_ZN4marl17ConditionVariable4waitIZNS_5Event6Shared4waitEvEUlvE_EEvRNS_4lockEOT_(%"class.marl::ConditionVariable"* %61, %"class.marl::lock"* nonnull dereferenceable(16) %12, %class.anon.451* nonnull dereferenceable(8) %13) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #16
  %62 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %51, i64 0, i32 3
  %63 = load i8, i8* %62, align 8
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %51, i64 0, i32 4
  store i8 0, i8* %66, align 1
  br label %67

67:                                               ; preds = %65, %59
  %68 = load i8, i8* %39, align 8, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %38, align 8
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %71) #15
  br label %72

72:                                               ; preds = %67, %70
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #16
  br label %90

73:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #16
  %74 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %51, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false) #16
  store %"class.std::__1::mutex"* %74, %"class.std::__1::mutex"** %33, align 8
  store i8 1, i8* %34, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %74) #15
  %75 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %51, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #16
  store %"struct.marl::Event::Shared"* %51, %"struct.marl::Event::Shared"** %36, align 8
  %76 = call zeroext i1 @_ZN4marl17ConditionVariable10wait_untilINSt3__16chrono12system_clockENS3_8durationIxNS2_5ratioILl1ELl1000000000EEEEEZNS_5Event6Shared10wait_untilIS4_S8_EEbRKNS3_10time_pointIT_T0_EEEUlvE_EEbRNS_4lockESH_OT1_(%"class.marl::ConditionVariable"* %75, %"class.marl::lock"* nonnull dereferenceable(16) %10, %"class.std::__1::chrono::time_point"* nonnull dereferenceable(8) %14, %class.anon.483* nonnull dereferenceable(8) %11) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #16
  br i1 %76, label %77, label %83

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %51, i64 0, i32 3
  %79 = load i8, i8* %78, align 8
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %51, i64 0, i32 4
  store i8 0, i8* %82, align 1
  br label %83

83:                                               ; preds = %81, %77, %73
  %84 = phi i1 [ false, %73 ], [ true, %81 ], [ true, %77 ]
  %85 = load i8, i8* %34, align 8, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %33, align 8
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %88) #15
  br label %89

89:                                               ; preds = %83, %87
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #16
  br i1 %84, label %90, label %219

90:                                               ; preds = %72, %52, %89
  %91 = add nuw nsw i64 %44, 1
  %92 = icmp eq i64 %91, %42
  br i1 %92, label %219, label %43

93:                                               ; preds = %5
  %94 = bitcast %"class.marl::containers::vector.399"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %94) #16
  %95 = getelementptr inbounds %"class.marl::containers::vector.399", %"class.marl::containers::vector.399"* %15, i64 0, i32 3, i64 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 168, i1 false)
  %96 = load i64, i64* bitcast (%"class.marl::Allocator"** @_ZN4marl9Allocator7DefaultE to i64*), align 8
  %97 = getelementptr inbounds %"class.marl::containers::vector.399", %"class.marl::containers::vector.399"* %15, i64 0, i32 0
  %98 = bitcast %"class.marl::containers::vector.399"* %15 to i64*
  store i64 %96, i64* %98, align 8
  %99 = getelementptr inbounds %"class.marl::containers::vector.399", %"class.marl::containers::vector.399"* %15, i64 0, i32 1
  %100 = bitcast i64* %99 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %100, align 8
  %101 = getelementptr inbounds %"class.marl::containers::vector.399", %"class.marl::containers::vector.399"* %15, i64 0, i32 4
  %102 = getelementptr inbounds %"class.marl::containers::vector.399", %"class.marl::containers::vector.399"* %15, i64 0, i32 3, i64 0
  store %"struct.marl::aligned_storage<16, 8>::type"* %102, %"struct.marl::aligned_storage<16, 8>::type"** %101, align 8
  %103 = getelementptr inbounds %"class.marl::containers::vector.399", %"class.marl::containers::vector.399"* %15, i64 0, i32 5
  %104 = bitcast %"struct.marl::Allocation"* %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 26, i1 false) #16
  %105 = icmp eq i32 %1, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %93
  %107 = bitcast %"struct.marl::aligned_storage<16, 8>::type"* %102 to %"class.marl::Event"*
  %108 = bitcast %"struct.marl::aligned_storage<16, 8>::type"** %101 to %"class.marl::Event"**
  br label %115

109:                                              ; preds = %93
  %110 = zext i32 %1 to i64
  br label %126

111:                                              ; preds = %126
  %112 = bitcast %"struct.marl::aligned_storage<16, 8>::type"** %101 to %"class.marl::Event"**
  %113 = load %"class.marl::Event"*, %"class.marl::Event"** %112, align 8
  %114 = load i64, i64* %99, align 8
  br label %115

115:                                              ; preds = %106, %111
  %116 = phi %"class.marl::Event"** [ %108, %106 ], [ %112, %111 ]
  %117 = phi i64 [ 0, %106 ], [ %114, %111 ]
  %118 = phi %"class.marl::Event"* [ %107, %106 ], [ %113, %111 ]
  %119 = bitcast %"class.marl::Event"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #16
  store %"class.marl::Event"* %118, %"class.marl::Event"** %16, align 8
  %120 = bitcast %"class.marl::Event"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #16
  %121 = getelementptr inbounds %"class.marl::Event", %"class.marl::Event"* %118, i64 %117
  store %"class.marl::Event"* %121, %"class.marl::Event"** %17, align 8
  %122 = call { %"struct.marl::Event::Shared"*, %"class.std::__1::__shared_weak_count"* } @_ZN4marl5Event3anyIPS0_EES0_NS0_4ModeERKT_S6_(i8 zeroext 0, %"class.marl::Event"** nonnull dereferenceable(8) %16, %"class.marl::Event"** nonnull dereferenceable(8) %17) #15
  %123 = extractvalue { %"struct.marl::Event::Shared"*, %"class.std::__1::__shared_weak_count"* } %122, 0
  %124 = extractvalue { %"struct.marl::Event::Shared"*, %"class.std::__1::__shared_weak_count"* } %122, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #16
  %125 = icmp eq i64 %4, 0
  br i1 %125, label %136, label %142

126:                                              ; preds = %126, %109
  %127 = phi i64 [ 0, %109 ], [ %134, %126 ]
  %128 = getelementptr inbounds %class.VkNonDispatchableHandle.2, %class.VkNonDispatchableHandle.2* %2, i64 %127, i32 0
  %129 = bitcast i64* %128 to %"class.vk::Fence"**
  %130 = load %"class.vk::Fence"*, %"class.vk::Fence"** %129, align 8
  %131 = getelementptr inbounds %"class.vk::Fence", %"class.vk::Fence"* %130, i64 0, i32 0, i32 0
  %132 = load %"class.sw::CountedEvent"*, %"class.sw::CountedEvent"** %131, align 8
  %133 = getelementptr inbounds %"class.sw::CountedEvent", %"class.sw::CountedEvent"* %132, i64 0, i32 1
  call void @_ZN4marl10containers6vectorINS_5EventELi8EE9push_backERKS2_(%"class.marl::containers::vector.399"* nonnull %15, %"class.marl::Event"* dereferenceable(16) %133) #18
  %134 = add nuw nsw i64 %127, 1
  %135 = icmp eq i64 %134, %110
  br i1 %135, label %111, label %126

136:                                              ; preds = %115
  %137 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %123, i64 0, i32 0, i32 0
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %137) #15
  %138 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %123, i64 0, i32 4
  %139 = load i8, i8* %138, align 1, !range !2
  %140 = icmp eq i8 %139, 0
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %137) #15
  %141 = select i1 %140, i32 2, i32 0
  br label %184

142:                                              ; preds = %115
  br i1 %23, label %143, label %162

143:                                              ; preds = %142
  %144 = bitcast %"class.marl::lock"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #16
  %145 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %8, i64 0, i32 0, i32 0
  %146 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %8, i64 0, i32 0, i32 1
  %147 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %123, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 -86, i64 16, i1 false) #16
  store %"class.std::__1::mutex"* %147, %"class.std::__1::mutex"** %145, align 8
  store i8 1, i8* %146, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %147) #15
  %148 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %123, i64 0, i32 1
  %149 = bitcast %class.anon.451* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #16
  %150 = getelementptr inbounds %class.anon.451, %class.anon.451* %9, i64 0, i32 0
  store %"struct.marl::Event::Shared"* %123, %"struct.marl::Event::Shared"** %150, align 8
  call void @_ZN4marl17ConditionVariable4waitIZNS_5Event6Shared4waitEvEUlvE_EEvRNS_4lockEOT_(%"class.marl::ConditionVariable"* %148, %"class.marl::lock"* nonnull dereferenceable(16) %8, %class.anon.451* nonnull dereferenceable(8) %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #16
  %151 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %123, i64 0, i32 3
  %152 = load i8, i8* %151, align 8
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %154, label %156

154:                                              ; preds = %143
  %155 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %123, i64 0, i32 4
  store i8 0, i8* %155, align 1
  br label %156

156:                                              ; preds = %154, %143
  %157 = load i8, i8* %146, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %156
  %160 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %145, align 8
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %160) #15
  br label %161

161:                                              ; preds = %156, %159
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #16
  br label %184

162:                                              ; preds = %142
  %163 = bitcast %"class.marl::lock"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %163) #16
  %164 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %6, i64 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %6, i64 0, i32 0, i32 1
  %166 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %123, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 -86, i64 16, i1 false) #16
  store %"class.std::__1::mutex"* %166, %"class.std::__1::mutex"** %164, align 8
  store i8 1, i8* %165, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %166) #15
  %167 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %123, i64 0, i32 1
  %168 = bitcast %class.anon.483* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #16
  %169 = getelementptr inbounds %class.anon.483, %class.anon.483* %7, i64 0, i32 0
  store %"struct.marl::Event::Shared"* %123, %"struct.marl::Event::Shared"** %169, align 8
  %170 = call zeroext i1 @_ZN4marl17ConditionVariable10wait_untilINSt3__16chrono12system_clockENS3_8durationIxNS2_5ratioILl1ELl1000000000EEEEEZNS_5Event6Shared10wait_untilIS4_S8_EEbRKNS3_10time_pointIT_T0_EEEUlvE_EEbRNS_4lockESH_OT1_(%"class.marl::ConditionVariable"* %167, %"class.marl::lock"* nonnull dereferenceable(16) %6, %"class.std::__1::chrono::time_point"* nonnull dereferenceable(8) %14, %class.anon.483* nonnull dereferenceable(8) %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #16
  br i1 %170, label %171, label %177

171:                                              ; preds = %162
  %172 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %123, i64 0, i32 3
  %173 = load i8, i8* %172, align 8
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %123, i64 0, i32 4
  store i8 0, i8* %176, align 1
  br label %177

177:                                              ; preds = %175, %171, %162
  %178 = phi i32 [ 2, %162 ], [ 0, %175 ], [ 0, %171 ]
  %179 = load i8, i8* %165, align 8, !range !2
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %183, label %181

181:                                              ; preds = %177
  %182 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %164, align 8
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %182) #15
  br label %183

183:                                              ; preds = %177, %181
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %163) #16
  br label %184

184:                                              ; preds = %183, %161, %136
  %185 = phi i32 [ %141, %136 ], [ 0, %161 ], [ %178, %183 ]
  %186 = icmp eq %"class.std::__1::__shared_weak_count"* %124, null
  br i1 %186, label %197, label %187

187:                                              ; preds = %184
  %188 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %124, i64 0, i32 0, i32 1
  %189 = atomicrmw add i64* %188, i64 -1 acq_rel
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %191, label %197

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %124, i64 0, i32 0
  %193 = bitcast %"class.std::__1::__shared_weak_count"* %124 to void (%"class.std::__1::__shared_count"*)***
  %194 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %193, align 8
  %195 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %194, i64 2
  %196 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %195, align 8
  call void %196(%"class.std::__1::__shared_count"* %192) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %124) #15
  br label %197

197:                                              ; preds = %184, %187, %191
  %198 = load i64, i64* %99, align 8
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %204

200:                                              ; preds = %204, %197
  %201 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %103, i64 0, i32 0
  %202 = load i8*, i8** %201, align 8
  %203 = icmp eq i8* %202, null
  br i1 %203, label %218, label %211

204:                                              ; preds = %197, %204
  %205 = phi i64 [ %208, %204 ], [ 0, %197 ]
  %206 = load %"class.marl::Event"*, %"class.marl::Event"** %116, align 8
  %207 = getelementptr inbounds %"class.marl::Event", %"class.marl::Event"* %206, i64 %205, i32 0
  call void @_ZNSt3__110shared_ptrIN4marl5Event6SharedEED2Ev(%"class.std::__1::shared_ptr.149"* %207) #15
  %208 = add nuw i64 %205, 1
  %209 = load i64, i64* %99, align 8
  %210 = icmp ult i64 %208, %209
  br i1 %210, label %204, label %200

211:                                              ; preds = %200
  %212 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %97, align 8
  %213 = bitcast %"class.marl::Allocator"* %212 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %214 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %213, align 8
  %215 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %214, i64 3
  %216 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %215, align 8
  call void %216(%"class.marl::Allocator"* %212, %"struct.marl::Allocation"* dereferenceable(32) %103) #15
  %217 = bitcast %"struct.marl::aligned_storage<16, 8>::type"** %101 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 34, i1 false) #16
  br label %218

218:                                              ; preds = %200, %211
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %94) #16
  br label %219

219:                                              ; preds = %52, %89, %90, %28, %218
  %220 = phi i32 [ %185, %218 ], [ 0, %28 ], [ 0, %90 ], [ 2, %52 ], [ 2, %89 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  ret i32 %220
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4marl10containers6vectorINS_5EventELi8EE9push_backERKS2_(%"class.marl::containers::vector.399"*, %"class.marl::Event"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation::Request", align 8
  %4 = alloca %"struct.marl::Allocation", align 8
  %5 = getelementptr inbounds %"class.marl::containers::vector.399", %"class.marl::containers::vector.399"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 1
  %8 = getelementptr inbounds %"class.marl::containers::vector.399", %"class.marl::containers::vector.399"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %9, %7
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.marl::containers::vector.399", %"class.marl::containers::vector.399"* %0, i64 0, i32 4
  %13 = bitcast %"struct.marl::aligned_storage<16, 8>::type"** %12 to %"class.marl::Event"**
  %14 = load %"class.marl::Event"*, %"class.marl::Event"** %13, align 8
  br label %88

15:                                               ; preds = %2
  %16 = shl i64 %7, 1
  %17 = icmp ugt i64 %16, 8
  %18 = select i1 %17, i64 %16, i64 8
  store i64 %18, i64* %8, align 8
  %19 = bitcast %"struct.marl::Allocation::Request"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #16
  %20 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false) #16
  %22 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 2
  %23 = bitcast i8* %22 to i16*
  store i16 768, i16* %23, align 8
  %24 = shl i64 %18, 4
  store i64 %24, i64* %20, align 8
  store i64 8, i64* %21, align 8
  %25 = bitcast %"struct.marl::Allocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.marl::containers::vector.399", %"class.marl::containers::vector.399"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false) #16
  %27 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %26, align 8
  %28 = bitcast %"class.marl::Allocator"* %27 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %29 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %29, i64 2
  %31 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %30, align 8
  call void %31(%"struct.marl::Allocation"* nonnull sret %4, %"class.marl::Allocator"* %27, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %3) #15
  %32 = bitcast %"struct.marl::Allocation"* %4 to %"struct.marl::aligned_storage<16, 8>::type"**
  %33 = load %"struct.marl::aligned_storage<16, 8>::type"*, %"struct.marl::aligned_storage<16, 8>::type"** %32, align 8
  %34 = load i64, i64* %5, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %15
  %37 = getelementptr inbounds %"class.marl::containers::vector.399", %"class.marl::containers::vector.399"* %0, i64 0, i32 4
  %38 = bitcast %"struct.marl::aligned_storage<16, 8>::type"** %37 to %"class.marl::Event"**
  br label %68

39:                                               ; preds = %84
  %40 = icmp eq i64 %86, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %47, %39, %15
  %42 = phi i64 [ 0, %39 ], [ 0, %15 ], [ %52, %47 ]
  %43 = getelementptr inbounds %"class.marl::containers::vector.399", %"class.marl::containers::vector.399"* %0, i64 0, i32 5
  %44 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %43, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %63, label %54

47:                                               ; preds = %39, %47
  %48 = phi i64 [ %51, %47 ], [ 0, %39 ]
  %49 = load %"class.marl::Event"*, %"class.marl::Event"** %38, align 8
  %50 = getelementptr inbounds %"class.marl::Event", %"class.marl::Event"* %49, i64 %48, i32 0
  call void @_ZNSt3__110shared_ptrIN4marl5Event6SharedEED2Ev(%"class.std::__1::shared_ptr.149"* %50) #15
  %51 = add nuw i64 %48, 1
  %52 = load i64, i64* %5, align 8
  %53 = icmp ult i64 %51, %52
  br i1 %53, label %47, label %41

54:                                               ; preds = %41
  %55 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %26, align 8
  %56 = bitcast %"class.marl::Allocator"* %55 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %57 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %57, i64 3
  %59 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %58, align 8
  call void %59(%"class.marl::Allocator"* %55, %"struct.marl::Allocation"* dereferenceable(32) %43) #15
  %60 = getelementptr inbounds %"class.marl::containers::vector.399", %"class.marl::containers::vector.399"* %0, i64 0, i32 4
  %61 = bitcast %"struct.marl::aligned_storage<16, 8>::type"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 34, i1 false) #16
  %62 = load i64, i64* %5, align 8
  br label %63

63:                                               ; preds = %54, %41
  %64 = phi i64 [ %62, %54 ], [ %42, %41 ]
  %65 = getelementptr inbounds %"class.marl::containers::vector.399", %"class.marl::containers::vector.399"* %0, i64 0, i32 4
  store %"struct.marl::aligned_storage<16, 8>::type"* %33, %"struct.marl::aligned_storage<16, 8>::type"** %65, align 8
  %66 = bitcast %"struct.marl::Allocation"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %25, i64 32, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #16
  %67 = bitcast %"struct.marl::aligned_storage<16, 8>::type"* %33 to %"class.marl::Event"*
  br label %88

68:                                               ; preds = %84, %36
  %69 = phi i64 [ 0, %36 ], [ %85, %84 ]
  %70 = getelementptr inbounds %"struct.marl::aligned_storage<16, 8>::type", %"struct.marl::aligned_storage<16, 8>::type"* %33, i64 %69
  %71 = load %"class.marl::Event"*, %"class.marl::Event"** %38, align 8
  %72 = getelementptr inbounds %"class.marl::Event", %"class.marl::Event"* %71, i64 %69
  %73 = bitcast %"class.marl::Event"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"struct.marl::aligned_storage<16, 8>::type"* %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.marl::aligned_storage<16, 8>::type", %"struct.marl::aligned_storage<16, 8>::type"* %33, i64 %69, i32 0, i64 8
  %77 = bitcast i8* %76 to %"class.std::__1::__shared_weak_count"**
  %78 = getelementptr inbounds %"class.marl::Event", %"class.marl::Event"* %71, i64 %69, i32 0, i32 1
  %79 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %78, align 8
  store %"class.std::__1::__shared_weak_count"* %79, %"class.std::__1::__shared_weak_count"** %77, align 8
  %80 = icmp eq %"class.std::__1::__shared_weak_count"* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %68
  %82 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %79, i64 0, i32 0, i32 1
  %83 = atomicrmw add i64* %82, i64 1 monotonic
  br label %84

84:                                               ; preds = %81, %68
  %85 = add nuw i64 %69, 1
  %86 = load i64, i64* %5, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %68, label %39

88:                                               ; preds = %11, %63
  %89 = phi i64 [ %6, %11 ], [ %64, %63 ]
  %90 = phi %"class.marl::Event"* [ %14, %11 ], [ %67, %63 ]
  %91 = getelementptr inbounds %"class.marl::Event", %"class.marl::Event"* %90, i64 %89
  %92 = bitcast %"class.marl::Event"* %1 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.marl::Event"* %91 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.marl::Event", %"class.marl::Event"* %90, i64 %89, i32 0, i32 1
  %96 = getelementptr inbounds %"class.marl::Event", %"class.marl::Event"* %1, i64 0, i32 0, i32 1
  %97 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %96, align 8
  store %"class.std::__1::__shared_weak_count"* %97, %"class.std::__1::__shared_weak_count"** %95, align 8
  %98 = icmp eq %"class.std::__1::__shared_weak_count"* %97, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %88
  %100 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %97, i64 0, i32 0, i32 1
  %101 = atomicrmw add i64* %100, i64 1 monotonic
  br label %102

102:                                              ; preds = %88, %99
  %103 = load i64, i64* %5, align 8
  %104 = add i64 %103, 1
  store i64 %104, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN2vk6Device17waitForSemaphoresEPK19VkSemaphoreWaitInfom(%"class.vk::Device"* nocapture readnone, %struct.VkSemaphoreWaitInfo* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.vk::TimelineSemaphore", align 8
  %5 = tail call i64 @_ZNSt3__16chrono12system_clock3nowEv() #15
  %6 = mul nsw i64 %5, 1000
  %7 = sub nsw i64 9223372036854775807, %6
  %8 = icmp ult i64 %7, %2
  %9 = icmp ugt i64 %7, %2
  %10 = select i1 %9, i64 %2, i64 %7
  %11 = add nsw i64 %10, %6
  %12 = getelementptr inbounds %struct.VkSemaphoreWaitInfo, %struct.VkSemaphoreWaitInfo* %1, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.VkSemaphoreWaitInfo, %struct.VkSemaphoreWaitInfo* %1, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %108, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.VkSemaphoreWaitInfo, %struct.VkSemaphoreWaitInfo* %1, i64 0, i32 4
  %22 = getelementptr inbounds %struct.VkSemaphoreWaitInfo, %struct.VkSemaphoreWaitInfo* %1, i64 0, i32 5
  br label %80

23:                                               ; preds = %3
  %24 = bitcast %"class.vk::TimelineSemaphore"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %24) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 72, i1 false)
  call void @_ZN2vk17TimelineSemaphoreC1Ev(%"class.vk::TimelineSemaphore"* nonnull %4) #15
  %25 = getelementptr inbounds %struct.VkSemaphoreWaitInfo, %struct.VkSemaphoreWaitInfo* %1, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %55, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.VkSemaphoreWaitInfo, %struct.VkSemaphoreWaitInfo* %1, i64 0, i32 4
  %30 = getelementptr inbounds %struct.VkSemaphoreWaitInfo, %struct.VkSemaphoreWaitInfo* %1, i64 0, i32 5
  br label %31

31:                                               ; preds = %28, %50
  %32 = phi i64 [ 0, %28 ], [ %51, %50 ]
  %33 = load %class.VkNonDispatchableHandle.1*, %class.VkNonDispatchableHandle.1** %29, align 8
  %34 = getelementptr inbounds %class.VkNonDispatchableHandle.1, %class.VkNonDispatchableHandle.1* %33, i64 %32, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %31
  %38 = inttoptr i64 %35 to %"class.vk::Semaphore"*
  %39 = call i32 @_ZNK2vk9Semaphore16getSemaphoreTypeEv(%"class.vk::Semaphore"* nonnull %38) #15
  %40 = icmp eq i32 %39, 1
  %41 = inttoptr i64 %35 to %"class.vk::TimelineSemaphore"*
  %42 = select i1 %40, %"class.vk::TimelineSemaphore"* %41, %"class.vk::TimelineSemaphore"* null
  br label %43

43:                                               ; preds = %31, %37
  %44 = phi %"class.vk::TimelineSemaphore"* [ %42, %37 ], [ null, %31 ]
  %45 = load i64*, i64** %30, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 %32
  %47 = load i64, i64* %46, align 8
  %48 = call i64 @_ZN2vk17TimelineSemaphore15getCounterValueEv(%"class.vk::TimelineSemaphore"* %44) #15
  %49 = icmp eq i64 %48, %47
  br i1 %49, label %63, label %50

50:                                               ; preds = %43
  call void @_ZN2vk17TimelineSemaphore12addDependentERS0_m(%"class.vk::TimelineSemaphore"* %44, %"class.vk::TimelineSemaphore"* nonnull dereferenceable(72) %4, i64 %47) #15
  %51 = add nuw nsw i64 %32, 1
  %52 = load i32, i32* %25, align 4
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %51, %53
  br i1 %54, label %31, label %55

55:                                               ; preds = %50, %23
  br i1 %8, label %56, label %57

56:                                               ; preds = %55
  call void @_ZN2vk17TimelineSemaphore4waitEm(%"class.vk::TimelineSemaphore"* nonnull %4, i64 1) #15
  br label %63

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.vk::TimelineSemaphore", %"class.vk::TimelineSemaphore"* %4, i64 0, i32 1, i32 0
  %59 = load %"struct.vk::TimelineSemaphore::Shared"*, %"struct.vk::TimelineSemaphore::Shared"** %58, align 8
  %60 = call i32 @_ZN2vk17TimelineSemaphore6Shared4waitINSt3__16chrono12system_clockENS4_8durationIxNS3_5ratioILl1ELl1000000000EEEEEEE8VkResultmNS4_10time_pointIT_T0_EE(%"struct.vk::TimelineSemaphore::Shared"* %59, i64 1, i64 %11) #15
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, i32 0, i32 2
  br label %63

63:                                               ; preds = %43, %57, %56
  %64 = phi i32 [ 0, %56 ], [ %62, %57 ], [ 0, %43 ]
  %65 = getelementptr inbounds %"class.vk::TimelineSemaphore", %"class.vk::TimelineSemaphore"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2vk17TimelineSemaphoreE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %66 = getelementptr inbounds %"class.vk::TimelineSemaphore", %"class.vk::TimelineSemaphore"* %4, i64 0, i32 1, i32 1
  %67 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %66, align 8
  %68 = icmp eq %"class.std::__1::__shared_weak_count"* %67, null
  br i1 %68, label %79, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %67, i64 0, i32 0, i32 1
  %71 = atomicrmw add i64* %70, i64 -1 acq_rel
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %67, i64 0, i32 0
  %75 = bitcast %"class.std::__1::__shared_weak_count"* %67 to void (%"class.std::__1::__shared_count"*)***
  %76 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %76, i64 2
  %78 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %77, align 8
  call void %78(%"class.std::__1::__shared_count"* %74) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %67) #15
  br label %79

79:                                               ; preds = %63, %69, %73
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %24) #16
  br label %108

80:                                               ; preds = %20, %103
  %81 = phi i64 [ 0, %20 ], [ %104, %103 ]
  %82 = load %class.VkNonDispatchableHandle.1*, %class.VkNonDispatchableHandle.1** %21, align 8
  %83 = getelementptr inbounds %class.VkNonDispatchableHandle.1, %class.VkNonDispatchableHandle.1* %82, i64 %81, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %92, label %86

86:                                               ; preds = %80
  %87 = inttoptr i64 %84 to %"class.vk::Semaphore"*
  %88 = tail call i32 @_ZNK2vk9Semaphore16getSemaphoreTypeEv(%"class.vk::Semaphore"* nonnull %87) #15
  %89 = icmp eq i32 %88, 1
  %90 = inttoptr i64 %84 to %"class.vk::TimelineSemaphore"*
  %91 = select i1 %89, %"class.vk::TimelineSemaphore"* %90, %"class.vk::TimelineSemaphore"* null
  br label %92

92:                                               ; preds = %80, %86
  %93 = phi %"class.vk::TimelineSemaphore"* [ %91, %86 ], [ null, %80 ]
  %94 = load i64*, i64** %22, align 8
  %95 = getelementptr inbounds i64, i64* %94, i64 %81
  %96 = load i64, i64* %95, align 8
  br i1 %8, label %97, label %98

97:                                               ; preds = %92
  tail call void @_ZN2vk17TimelineSemaphore4waitEm(%"class.vk::TimelineSemaphore"* %93, i64 %96) #15
  br label %103

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.vk::TimelineSemaphore", %"class.vk::TimelineSemaphore"* %93, i64 0, i32 1, i32 0
  %100 = load %"struct.vk::TimelineSemaphore::Shared"*, %"struct.vk::TimelineSemaphore::Shared"** %99, align 8
  %101 = tail call i32 @_ZN2vk17TimelineSemaphore6Shared4waitINSt3__16chrono12system_clockENS4_8durationIxNS3_5ratioILl1ELl1000000000EEEEEEE8VkResultmNS4_10time_pointIT_T0_EE(%"struct.vk::TimelineSemaphore::Shared"* %100, i64 %96, i64 %11) #15
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %108

103:                                              ; preds = %97, %98
  %104 = add nuw nsw i64 %81, 1
  %105 = load i32, i32* %17, align 4
  %106 = zext i32 %105 to i64
  %107 = icmp ult i64 %104, %106
  br i1 %107, label %80, label %108

108:                                              ; preds = %103, %98, %16, %79
  %109 = phi i32 [ %64, %79 ], [ 0, %16 ], [ 0, %103 ], [ 2, %98 ]
  ret i32 %109
}

; Function Attrs: optsize
declare void @_ZN2vk17TimelineSemaphoreC1Ev(%"class.vk::TimelineSemaphore"*) unnamed_addr #2

; Function Attrs: optsize
declare i64 @_ZN2vk17TimelineSemaphore15getCounterValueEv(%"class.vk::TimelineSemaphore"*) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2vk17TimelineSemaphore12addDependentERS0_m(%"class.vk::TimelineSemaphore"*, %"class.vk::TimelineSemaphore"* dereferenceable(72), i64) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2vk17TimelineSemaphore4waitEm(%"class.vk::TimelineSemaphore"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN2vk6Device8waitIdleEv(%"class.vk::Device"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 1
  br label %8

7:                                                ; preds = %8, %1
  ret i32 0

8:                                                ; preds = %5, %8
  %9 = phi i64 [ 0, %5 ], [ %13, %8 ]
  %10 = load %"class.vk::Queue"*, %"class.vk::Queue"** %6, align 8
  %11 = getelementptr inbounds %"class.vk::Queue", %"class.vk::Queue"* %10, i64 %9
  %12 = tail call i32 @_ZN2vk5Queue8waitIdleEv(%"class.vk::Queue"* %11) #15
  %13 = add nuw nsw i64 %9, 1
  %14 = load i32, i32* %2, align 8
  %15 = zext i32 %14 to i64
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %8, label %7
}

; Function Attrs: optsize
declare i32 @_ZN2vk5Queue8waitIdleEv(%"class.vk::Queue"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZNK2vk6Device29getDescriptorSetLayoutSupportEPK31VkDescriptorSetLayoutCreateInfoP28VkDescriptorSetLayoutSupport(%"class.vk::Device"* nocapture readnone, %struct.VkDescriptorSetLayoutCreateInfo* nocapture readnone, %struct.VkDescriptorSetLayoutSupport* nocapture) local_unnamed_addr #10 align 2 {
  %4 = getelementptr inbounds %struct.VkDescriptorSetLayoutSupport, %struct.VkDescriptorSetLayoutSupport* %2, i64 0, i32 2
  store i32 1, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk6Device20updateDescriptorSetsEjPK20VkWriteDescriptorSetjPK19VkCopyDescriptorSet(%"class.vk::Device"*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*) local_unnamed_addr #0 align 2 {
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %5
  %8 = zext i32 %1 to i64
  br label %13

9:                                                ; preds = %13, %5
  %10 = icmp eq i32 %3, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = zext i32 %3 to i64
  br label %19

13:                                               ; preds = %13, %7
  %14 = phi i64 [ 0, %7 ], [ %16, %13 ]
  %15 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %2, i64 %14
  tail call void @_ZN2vk19DescriptorSetLayout18WriteDescriptorSetEPNS_6DeviceERK20VkWriteDescriptorSet(%"class.vk::Device"* %0, %struct.VkWriteDescriptorSet* dereferenceable(64) %15) #15
  %16 = add nuw nsw i64 %14, 1
  %17 = icmp eq i64 %16, %8
  br i1 %17, label %9, label %13

18:                                               ; preds = %19, %9
  ret void

19:                                               ; preds = %19, %11
  %20 = phi i64 [ 0, %11 ], [ %22, %19 ]
  %21 = getelementptr inbounds %struct.VkCopyDescriptorSet, %struct.VkCopyDescriptorSet* %4, i64 %20
  tail call void @_ZN2vk19DescriptorSetLayout17CopyDescriptorSetERK19VkCopyDescriptorSet(%struct.VkCopyDescriptorSet* dereferenceable(56) %21) #15
  %22 = add nuw nsw i64 %20, 1
  %23 = icmp eq i64 %22, %12
  br i1 %23, label %18, label %19
}

; Function Attrs: optsize
declare void @_ZN2vk19DescriptorSetLayout18WriteDescriptorSetEPNS_6DeviceERK20VkWriteDescriptorSet(%"class.vk::Device"*, %struct.VkWriteDescriptorSet* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2vk19DescriptorSetLayout17CopyDescriptorSetERK19VkCopyDescriptorSet(%struct.VkCopyDescriptorSet* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZNK2vk6Device15getRequirementsEP29VkMemoryDedicatedRequirements(%"class.vk::Device"* nocapture readnone, %struct.VkMemoryDedicatedRequirements* nocapture) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %struct.VkMemoryDedicatedRequirements, %struct.VkMemoryDedicatedRequirements* %1, i64 0, i32 2
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %struct.VkMemoryDedicatedRequirements, %struct.VkMemoryDedicatedRequirements* %1, i64 0, i32 3
  store i32 0, i32* %4, align 4
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden %"class.vk::Device::SamplingRoutineCache"* @_ZNK2vk6Device23getSamplingRoutineCacheEv(%"class.vk::Device"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %"class.vk::Device::SamplingRoutineCache"*, %"class.vk::Device::SamplingRoutineCache"** %2, align 8
  ret %"class.vk::Device::SamplingRoutineCache"* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk6Device34updateSamplingRoutineSnapshotCacheEv(%"class.vk::Device"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %"class.vk::Device::SamplingRoutineCache"*, %"class.vk::Device::SamplingRoutineCache"** %2, align 8
  tail call void @_ZN2vk6Device20SamplingRoutineCache14updateSnapshotEv(%"class.vk::Device::SamplingRoutineCache"* %3) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN2vk6Device12indexSamplerERKNS_12SamplerStateE(%"class.vk::Device"* nocapture readonly, %"struct.vk::SamplerState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %"class.vk::Device::SamplerIndexer"*, %"class.vk::Device::SamplerIndexer"** %3, align 8
  %5 = tail call i32 @_ZN2vk6Device14SamplerIndexer5indexERKNS_12SamplerStateE(%"class.vk::Device::SamplerIndexer"* %4, %"struct.vk::SamplerState"* dereferenceable(72) %1) #18
  ret i32 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk6Device13removeSamplerERKNS_12SamplerStateE(%"class.vk::Device"* nocapture readonly, %"struct.vk::SamplerState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %"class.vk::Device::SamplerIndexer"*, %"class.vk::Device::SamplerIndexer"** %3, align 8
  tail call void @_ZN2vk6Device14SamplerIndexer6removeERKNS_12SamplerStateE(%"class.vk::Device::SamplerIndexer"* %4, %"struct.vk::SamplerState"* dereferenceable(72) %1) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"struct.vk::SamplerState"* @_ZNK2vk6Device11findSamplerEj(%"class.vk::Device"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %"class.vk::Device::SamplerIndexer"*, %"class.vk::Device::SamplerIndexer"** %3, align 8
  %5 = tail call %"struct.vk::SamplerState"* @_ZN2vk6Device14SamplerIndexer4findEj(%"class.vk::Device::SamplerIndexer"* %4, i32 %1) #18
  ret %"struct.vk::SamplerState"* %5
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZN2vk6Device23setDebugUtilsObjectNameEPK29VkDebugUtilsObjectNameInfoEXT(%"class.vk::Device"* nocapture readnone, %struct.VkDebugUtilsObjectNameInfoEXT* nocapture readnone) local_unnamed_addr #11 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZN2vk6Device22setDebugUtilsObjectTagEPK28VkDebugUtilsObjectTagInfoEXT(%"class.vk::Device"* nocapture readnone, %struct.VkDebugUtilsObjectTagInfoEXT* nocapture readnone) local_unnamed_addr #11 align 2 {
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk6Device17registerImageViewEPNS_9ImageViewE(%"class.vk::Device"*, %"class.vk::ImageView"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.vk::ImageView"*, align 8
  store %"class.vk::ImageView"* %1, %"class.vk::ImageView"** %3, align 8
  %4 = icmp eq %"class.vk::ImageView"* %1, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 10, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %6) #15
  %7 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 11, i32 0
  %8 = call { %"struct.std::__1::__hash_node_base.374"*, i8 } @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.370"* %7, %"class.vk::ImageView"** nonnull dereferenceable(8) %3, %"class.vk::ImageView"** nonnull dereferenceable(8) %3) #15
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %6) #15
  br label %9

9:                                                ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk6Device19unregisterImageViewEPNS_9ImageViewE(%"class.vk::Device"*, %"class.vk::ImageView"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.vk::ImageView"*, align 8
  store %"class.vk::ImageView"* %1, %"class.vk::ImageView"** %3, align 8
  %4 = icmp eq %"class.vk::ImageView"* %1, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 10, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %6) #15
  %7 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 11, i32 0
  %8 = call %"struct.std::__1::__hash_node_base.374"* @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(%"class.std::__1::__hash_table.370"* %7, %"class.vk::ImageView"** nonnull dereferenceable(8) %3) #15
  %9 = icmp eq %"struct.std::__1::__hash_node_base.374"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = call %"struct.std::__1::__hash_node_base.374"* @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(%"class.std::__1::__hash_table.370"* %7, %"struct.std::__1::__hash_node_base.374"* nonnull %8) #15
  br label %12

12:                                               ; preds = %5, %10
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %6) #15
  br label %13

13:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk6Device18prepareForSamplingEPNS_9ImageViewE(%"class.vk::Device"*, %"class.vk::ImageView"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.vk::ImageView"*, align 8
  store %"class.vk::ImageView"* %1, %"class.vk::ImageView"** %3, align 8
  %4 = icmp eq %"class.vk::ImageView"* %1, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 10, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %6) #15
  %7 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 11, i32 0
  %8 = call %"struct.std::__1::__hash_node_base.374"* @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(%"class.std::__1::__hash_table.370"* %7, %"class.vk::ImageView"** nonnull dereferenceable(8) %3) #15
  %9 = icmp eq %"struct.std::__1::__hash_node_base.374"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = load %"class.vk::ImageView"*, %"class.vk::ImageView"** %3, align 8
  %12 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %11, i64 0, i32 0
  %13 = load %"class.vk::Image"*, %"class.vk::Image"** %12, align 8
  %14 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %11, i64 0, i32 4
  call void @_ZN2vk5Image18prepareForSamplingERK23VkImageSubresourceRange(%"class.vk::Image"* %13, %struct.VkImageSubresourceRange* dereferenceable(20) %14) #15
  br label %15

15:                                               ; preds = %5, %10
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %6) #15
  br label %16

16:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk6Device15contentsChangedEPNS_9ImageViewE(%"class.vk::Device"*, %"class.vk::ImageView"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.vk::ImageView"*, align 8
  store %"class.vk::ImageView"* %1, %"class.vk::ImageView"** %3, align 8
  %4 = icmp eq %"class.vk::ImageView"* %1, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 10, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %6) #15
  %7 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %0, i64 0, i32 11, i32 0
  %8 = call %"struct.std::__1::__hash_node_base.374"* @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(%"class.std::__1::__hash_table.370"* %7, %"class.vk::ImageView"** nonnull dereferenceable(8) %3) #15
  %9 = icmp eq %"struct.std::__1::__hash_node_base.374"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = load %"class.vk::ImageView"*, %"class.vk::ImageView"** %3, align 8
  %12 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %11, i64 0, i32 0
  %13 = load %"class.vk::Image"*, %"class.vk::Image"** %12, align 8
  %14 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %11, i64 0, i32 4
  call void @_ZN2vk5Image15contentsChangedERK23VkImageSubresourceRangeNS0_22ContentsChangedContextE(%"class.vk::Image"* %13, %struct.VkImageSubresourceRange* dereferenceable(20) %14, i32 1) #15
  br label %15

15:                                               ; preds = %5, %10
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %6) #15
  br label %16

16:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: optsize
declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #12

; Function Attrs: nounwind optsize
declare i64 @_ZNSt3__16chrono12system_clock3nowEv() local_unnamed_addr #5

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4marl17ConditionVariable4waitIZNS_5Event6Shared4waitEvEUlvE_EEvRNS_4lockEOT_(%"class.marl::ConditionVariable"*, %"class.marl::lock"* dereferenceable(16), %class.anon.451* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = alloca %"struct.marl::Allocation", align 8
  %6 = alloca %"class.std::__1::function.452", align 8
  %7 = getelementptr inbounds %class.anon.451, %class.anon.451* %2, i64 0, i32 0
  %8 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %7, align 8
  %9 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %8, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %167

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 1 seq_cst
  %15 = tail call %"class.marl::Scheduler::Fiber"* @_ZN4marl9Scheduler5Fiber7currentEv() #15
  %16 = ptrtoint %"class.marl::Scheduler::Fiber"* %15 to i64
  %17 = icmp eq %"class.marl::Scheduler::Fiber"* %15, null
  br i1 %17, label %151, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %19) #15
  %20 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 4
  %21 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %20, align 8
  %22 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %18
  %24 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %20 to i64*
  br label %74

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = icmp ugt i64 %27, 8
  %29 = select i1 %28, i64 %27, i64 8
  %30 = mul i64 %29, 24
  %31 = add i64 %30, 40
  %32 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #16
  %33 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false) #16
  %35 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %36 = bitcast i8* %35 to i16*
  store i16 1024, i16* %36, align 8
  store i64 %31, i64* %33, align 8
  store i64 8, i64* %34, align 8
  %37 = bitcast %"struct.marl::Allocation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #16
  %38 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 32, i1 false) #16
  %39 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %38, align 8
  %40 = bitcast %"class.marl::Allocator"* %39 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %41 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %41, i64 2
  %43 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %42, align 8
  call void %43(%"struct.marl::Allocation"* nonnull sret %5, %"class.marl::Allocator"* %39, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #15
  %44 = bitcast %"struct.marl::Allocation"* %5 to %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"**
  %45 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %44, align 8
  %46 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %20 to i64*
  br label %47

47:                                               ; preds = %58, %25
  %48 = phi i64 [ 0, %25 ], [ %59, %58 ]
  %49 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %45, i64 %48
  %50 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %45, i64 %48, i32 2
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* null, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %50, align 8
  %51 = load i64, i64* %46, align 8
  %52 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %45, i64 %48, i32 1
  %53 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %20, align 8
  %55 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %54, i64 0, i32 2
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %49, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %57, align 8
  br label %58

58:                                               ; preds = %56, %47
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %49, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %20, align 8
  %59 = add nuw i64 %48, 1
  %60 = icmp eq i64 %59, %29
  br i1 %60, label %61, label %47

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %5, i64 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 %30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %37, i64 32, i1 false) #16
  %65 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 3
  %66 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds i8, i8* %64, i64 32
  %69 = bitcast i8* %68 to i64*
  store i64 %67, i64* %69, align 8
  %70 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"** %65 to i8**
  store i8* %64, i8** %70, align 8
  %71 = load i64, i64* %26, align 8
  %72 = add i64 %71, %29
  store i64 %72, i64* %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #16
  %73 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %20, align 8
  br label %74

74:                                               ; preds = %61, %23
  %75 = phi i64* [ %24, %23 ], [ %46, %61 ]
  %76 = phi %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* [ %21, %23 ], [ %73, %61 ]
  %77 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %76, i64 0, i32 1
  %78 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  store i64 %79, i64* %75, align 8
  %80 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %76, i64 0, i32 2
  %81 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %80, align 8
  %82 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %81, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %74
  %84 = load i64, i64* %78, align 8
  %85 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %81, i64 0, i32 1
  %86 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %85 to i64*
  store i64 %84, i64* %86, align 8
  br label %87

87:                                               ; preds = %83, %74
  %88 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %77, align 8
  %89 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %88, null
  br i1 %89, label %95, label %90

90:                                               ; preds = %87
  %91 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %80 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %88, i64 0, i32 2
  %94 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %93 to i64*
  store i64 %92, i64* %94, align 8
  br label %95

95:                                               ; preds = %90, %87
  %96 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false) #16
  %97 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 5
  %98 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %97, align 8
  %99 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %98, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %77, align 8
  %101 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %97, align 8
  %102 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %101, i64 0, i32 2
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %76, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %102, align 8
  br label %103

103:                                              ; preds = %95, %100
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %76, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %97, align 8
  %104 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %76 to i64*
  store i64 %16, i64* %104, align 8
  %105 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, 1
  store i64 %107, i64* %105, align 8
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %19) #15
  %108 = bitcast %"class.std::__1::function.452"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #16
  %109 = bitcast %class.anon.451* %2 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.std::__1::function.452", %"class.std::__1::function.452"* %6, i64 0, i32 0, i32 1, i32 0
  %112 = getelementptr inbounds %"class.std::__1::function.452", %"class.std::__1::function.452"* %6, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFbvEE11__call_implINS0_20__default_alloc_funcIZN4marl5Event6Shared4waitEvEUlvE_S2_EEEEbPKNS0_16__policy_storageE, i1 (%"union.std::__1::__function::__policy_storage"*)** %111, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4marl5Event6Shared4waitEvEUlvE_FbvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %112, align 8
  %113 = bitcast %"class.std::__1::function.452"* %6 to i64*
  store i64 %110, i64* %113, align 8
  call void @_ZN4marl9Scheduler5Fiber4waitERNS_4lockERKNSt3__18functionIFbvEEE(%"class.marl::Scheduler::Fiber"* nonnull %15, %"class.marl::lock"* dereferenceable(16) %1, %"class.std::__1::function.452"* nonnull dereferenceable(32) %6) #15
  %114 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %112, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %114, i64 0, i32 1
  %116 = load void (i8*)*, void (i8*)** %115, align 8
  %117 = icmp eq void (i8*)* %116, null
  br i1 %117, label %121, label %118

118:                                              ; preds = %103
  %119 = getelementptr inbounds %"class.std::__1::function.452", %"class.std::__1::function.452"* %6, i64 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  call void %116(i8* %120) #15
  br label %121

121:                                              ; preds = %103, %118
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #16
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %19) #15
  %122 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %97, align 8
  %123 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %122, %76
  br i1 %123, label %124, label %127

124:                                              ; preds = %121
  %125 = load i64, i64* %78, align 8
  %126 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %97 to i64*
  store i64 %125, i64* %126, align 8
  br label %127

127:                                              ; preds = %124, %121
  %128 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %80, align 8
  %129 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %128, null
  br i1 %129, label %134, label %130

130:                                              ; preds = %127
  %131 = load i64, i64* %78, align 8
  %132 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %128, i64 0, i32 1
  %133 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %132 to i64*
  store i64 %131, i64* %133, align 8
  br label %134

134:                                              ; preds = %130, %127
  %135 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %77, align 8
  %136 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %80 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %135, i64 0, i32 2
  %141 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %140 to i64*
  store i64 %139, i64* %141, align 8
  br label %142

142:                                              ; preds = %137, %134
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false) #16
  %143 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %20, align 8
  %144 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %142
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %143, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %77, align 8
  %146 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %20, align 8
  %147 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %146, i64 0, i32 2
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %76, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %147, align 8
  br label %148

148:                                              ; preds = %142, %145
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %76, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %20, align 8
  %149 = load i64, i64* %105, align 8
  %150 = add i64 %149, -1
  store i64 %150, i64* %105, align 8
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %19) #15
  br label %165

151:                                              ; preds = %12
  %152 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = atomicrmw add i32* %152, i32 1 seq_cst
  %154 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 2
  %155 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %1, i64 0, i32 0
  %156 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %7, align 8
  %157 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %156, i64 0, i32 4
  %158 = load i8, i8* %157, align 1, !range !2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %151, %160
  tail call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %154, %"class.std::__1::unique_lock"* dereferenceable(16) %155) #15
  %161 = load i8, i8* %157, align 1, !range !2
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %160, label %163

163:                                              ; preds = %160, %151
  %164 = atomicrmw sub i32* %152, i32 1 seq_cst
  br label %165

165:                                              ; preds = %163, %148
  %166 = atomicrmw sub i32* %13, i32 1 seq_cst
  br label %167

167:                                              ; preds = %3, %165
  ret void
}

; Function Attrs: optsize
declare %"class.marl::Scheduler::Fiber"* @_ZN4marl9Scheduler5Fiber7currentEv() local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN4marl9Scheduler5Fiber4waitERNS_4lockERKNSt3__18functionIFbvEEE(%"class.marl::Scheduler::Fiber"*, %"class.marl::lock"* dereferenceable(16), %"class.std::__1::function.452"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbvEE11__call_implINS0_20__default_alloc_funcIZN4marl5Event6Shared4waitEvEUlvE_S2_EEEEbPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"struct.marl::Event::Shared"**
  %3 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %2, align 8
  %4 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %3, i64 0, i32 4
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"*, %"class.std::__1::unique_lock"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110shared_ptrIN4marl5Event6SharedEED2Ev(%"class.std::__1::shared_ptr.149"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::shared_ptr.149", %"class.std::__1::shared_ptr.149"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %2, align 8
  %4 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %7 = atomicrmw add i64* %6, i64 -1 acq_rel
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %11 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %12 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %12, i64 2
  %14 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, align 8
  tail call void %14(%"class.std::__1::__shared_count"* %10) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #15
  br label %15

15:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2vk5Image18prepareForSamplingERK23VkImageSubresourceRange(%"class.vk::Image"*, %struct.VkImageSubresourceRange* dereferenceable(20)) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2vk5Image15contentsChangedERK23VkImageSubresourceRangeNS0_22ContentsChangedContextE(%"class.vk::Image"*, %struct.VkImageSubresourceRange* dereferenceable(20), i32) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE5clearEv(%"class.std::__1::__hash_table"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %6, align 8
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::__hash_table"* %0, %"struct.std::__1::__hash_node_base"* %7) #15
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %14

13:                                               ; preds = %14, %5
  store i64 0, i64* %2, align 8
  br label %20

14:                                               ; preds = %14, %11
  %15 = phi i64 [ 0, %11 ], [ %18, %14 ]
  %16 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %12, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %16, i64 %15
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %17, align 8
  %18 = add nuw i64 %15, 1
  %19 = icmp eq i64 %18, %9
  br i1 %19, label %13, label %14

20:                                               ; preds = %1, %13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.std::__1::__hash_node_base"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"struct.std::__1::__hash_node_base"* [ %7, %4 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %5, i64 0, i32 0
  %7 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %5, i64 4
  %9 = bitcast %"struct.std::__1::__hash_node_base"* %8 to %"class.std::__1::shared_ptr"*
  tail call void @_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev(%"class.std::__1::shared_ptr"* %9) #15
  %10 = bitcast %"struct.std::__1::__hash_node_base"* %5 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  %11 = icmp eq %"struct.std::__1::__hash_node_base"* %7, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev(%"class.std::__1::shared_ptr"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %2, align 8
  %4 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %7 = atomicrmw add i64* %6, i64 -1 acq_rel
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %11 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %12 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %12, i64 2
  %14 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, align 8
  tail call void %14(%"class.std::__1::__shared_count"* %10) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #15
  br label %15

15:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"struct.vk::Device::SamplingRoutineCache::Key"* dereferenceable(12), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.460"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.461", align 8
  %7 = getelementptr inbounds %"struct.vk::Device::SamplingRoutineCache::Key", %"struct.vk::Device::SamplingRoutineCache::Key"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = mul nuw nsw i64 %9, 2642239
  %11 = getelementptr inbounds %"struct.vk::Device::SamplingRoutineCache::Key", %"struct.vk::Device::SamplingRoutineCache::Key"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = xor i64 %10, %13
  %15 = mul i64 %14, 2642239
  %16 = getelementptr inbounds %"struct.vk::Device::SamplingRoutineCache::Key", %"struct.vk::Device::SamplingRoutineCache::Key"* %1, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = xor i64 %15, %18
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %81, label %23

23:                                               ; preds = %5
  %24 = tail call i64 @llvm.ctpop.i64(i64 %21) #16, !range !3
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %21, -1
  %28 = and i64 %19, %27
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %19, %21
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %19, %21
  br label %33

33:                                               ; preds = %26, %29, %31
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %19, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %81, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %42, null
  br i1 %43, label %81, label %44

44:                                               ; preds = %40
  %45 = add i64 %21, -1
  br label %46

46:                                               ; preds = %44, %77
  %47 = phi %"struct.std::__1::__hash_node_base"* [ %42, %44 ], [ %79, %77 ]
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %19
  br i1 %51, label %62, label %52

52:                                               ; preds = %46
  br i1 %25, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %45
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %21
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %21
  br label %59

59:                                               ; preds = %53, %55, %57
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %34
  br i1 %61, label %62, label %81

62:                                               ; preds = %46, %59
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, %8
  br i1 %66, label %67, label %77

67:                                               ; preds = %62
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %63 to %"struct.std::__1::__hash_value_type"*
  %69 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %68, i64 0, i32 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, %12
  br i1 %71, label %72, label %77

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 3
  %74 = bitcast %"struct.std::__1::__hash_node_base"* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, %17
  br i1 %76, label %184, label %77

77:                                               ; preds = %67, %62, %72
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 0, i32 0
  %79 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base"* %79, null
  br i1 %80, label %81, label %46

81:                                               ; preds = %59, %77, %40, %33, %5
  %82 = phi i64 [ %34, %33 ], [ -6148914691236517206, %5 ], [ %34, %40 ], [ %34, %77 ], [ %34, %59 ]
  %83 = bitcast %"class.std::__1::unique_ptr.461"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #16
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.461", %"class.std::__1::unique_ptr.461"* %6, i64 0, i32 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.461", %"class.std::__1::unique_ptr.461"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.461", %"class.std::__1::unique_ptr.461"* %6, i64 0, i32 0, i32 1, i32 0, i32 1
  %87 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1
  %88 = bitcast %"class.std::__1::unique_ptr.461"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 24, i1 false)
  %89 = tail call i8* @_Znwm(i64 48) #17, !noalias !4
  %90 = ptrtoint i8* %89 to i64
  %91 = bitcast %"class.std::__1::unique_ptr.461"* %6 to i64*
  store i64 %90, i64* %91, align 8, !alias.scope !4
  %92 = bitcast %"class.std::__1::allocator.43"** %85 to %"class.std::__1::__compressed_pair.40"**
  store %"class.std::__1::__compressed_pair.40"* %87, %"class.std::__1::__compressed_pair.40"** %92, align 8, !alias.scope !4
  %93 = getelementptr inbounds i8, i8* %89, i64 16
  %94 = bitcast %"class.std::__1::tuple"* %3 to i8**
  %95 = load i8*, i8** %94, align 8, !noalias !4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 4 %95, i64 12, i1 false) #16, !noalias !4
  %96 = getelementptr inbounds i8, i8* %89, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false) #16, !noalias !4
  store i8 1, i8* %86, align 8, !alias.scope !4
  %97 = getelementptr inbounds i8, i8* %89, i64 8
  %98 = bitcast i8* %97 to i64*
  store i64 %19, i64* %98, align 8, !noalias !4
  %99 = bitcast i8* %89 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %99, align 8, !noalias !4
  %100 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 1
  %103 = uitofp i64 %102 to float
  %104 = uitofp i64 %21 to float
  %105 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %106 = load float, float* %105, align 4
  %107 = fmul float %106, %104
  %108 = fcmp olt float %107, %103
  %109 = or i1 %22, %108
  %110 = bitcast i8* %89 to i64*
  br i1 %109, label %111, label %134

111:                                              ; preds = %81
  %112 = shl i64 %21, 1
  %113 = icmp ult i64 %21, 3
  %114 = tail call i64 @llvm.ctpop.i64(i64 %21) #16, !range !3
  %115 = icmp ugt i64 %114, 1
  %116 = or i1 %113, %115
  %117 = zext i1 %116 to i64
  %118 = or i64 %112, %117
  %119 = fdiv float %103, %106
  %120 = tail call float @llvm.ceil.f32(float %119) #16
  %121 = fptoui float %120 to i64
  %122 = icmp ult i64 %118, %121
  %123 = select i1 %122, i64 %121, i64 %118
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %123) #18
  %124 = load i64, i64* %20, align 8
  %125 = tail call i64 @llvm.ctpop.i64(i64 %124) #16, !range !3
  %126 = icmp ugt i64 %125, 1
  br i1 %126, label %130, label %127

127:                                              ; preds = %111
  %128 = add i64 %124, -1
  %129 = and i64 %128, %19
  br label %134

130:                                              ; preds = %111
  %131 = icmp ult i64 %19, %124
  br i1 %131, label %134, label %132

132:                                              ; preds = %130
  %133 = urem i64 %19, %124
  br label %134

134:                                              ; preds = %132, %130, %127, %81
  %135 = phi i64 [ %21, %81 ], [ %124, %127 ], [ %124, %130 ], [ %124, %132 ]
  %136 = phi i64 [ %82, %81 ], [ %129, %127 ], [ %19, %130 ], [ %133, %132 ]
  %137 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %138 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %137, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %138, i64 %136
  %140 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %139, align 8
  %141 = icmp eq %"struct.std::__1::__hash_node_base"* %140, null
  br i1 %141, label %142, label %173

142:                                              ; preds = %134
  %143 = getelementptr inbounds %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.40"* %87, i64 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.40"* %87, i64 0, i32 0, i32 0, i32 0
  %145 = bitcast %"class.std::__1::__compressed_pair.40"* %87 to i64*
  %146 = load i64, i64* %145, align 8
  store i64 %146, i64* %110, align 8
  %147 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %84, align 8
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %147, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %148, %"struct.std::__1::__hash_node_base"** %144, align 8
  %149 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %137, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %149, i64 %136
  store %"struct.std::__1::__hash_node_base"* %143, %"struct.std::__1::__hash_node_base"** %150, align 8
  %151 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %84, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %151, i64 0, i32 0, i32 0
  %153 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %152, align 8
  %154 = icmp eq %"struct.std::__1::__hash_node_base"* %153, null
  br i1 %154, label %179, label %155

155:                                              ; preds = %142
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %151, i64 0, i32 0
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %153, i64 1
  %158 = bitcast %"struct.std::__1::__hash_node_base"* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = tail call i64 @llvm.ctpop.i64(i64 %135) #16, !range !3
  %161 = icmp ugt i64 %160, 1
  br i1 %161, label %165, label %162

162:                                              ; preds = %155
  %163 = add i64 %135, -1
  %164 = and i64 %159, %163
  br label %169

165:                                              ; preds = %155
  %166 = icmp ult i64 %159, %135
  br i1 %166, label %169, label %167

167:                                              ; preds = %165
  %168 = urem i64 %159, %135
  br label %169

169:                                              ; preds = %162, %165, %167
  %170 = phi i64 [ %164, %162 ], [ %168, %167 ], [ %159, %165 ]
  %171 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %137, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, i64 %170
  store %"struct.std::__1::__hash_node_base"* %156, %"struct.std::__1::__hash_node_base"** %172, align 8
  br label %179

173:                                              ; preds = %134
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %140, i64 0, i32 0
  %175 = bitcast %"struct.std::__1::__hash_node_base"* %140 to i64*
  %176 = load i64, i64* %175, align 8
  store i64 %176, i64* %110, align 8
  %177 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %84, align 8
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %177, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %178, %"struct.std::__1::__hash_node_base"** %174, align 8
  br label %179

179:                                              ; preds = %142, %169, %173
  %180 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %84, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %84, align 8
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %180, i64 0, i32 0
  %182 = load i64, i64* %100, align 8
  %183 = add i64 %182, 1
  store i64 %183, i64* %100, align 8
  call void @_ZNSt3__110unique_ptrINS_11__hash_nodeINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEEPvEENS_22__hash_node_destructorINS_9allocatorISD_EEEEE5resetEPSD_(%"class.std::__1::unique_ptr.461"* nonnull %6, %"struct.std::__1::__hash_node"* null) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #16
  br label %184

184:                                              ; preds = %72, %179
  %185 = phi i8 [ 1, %179 ], [ 0, %72 ]
  %186 = phi %"struct.std::__1::__hash_node_base"* [ %181, %179 ], [ %47, %72 ]
  %187 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %186, 0
  %188 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %187, i8 %185, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %188
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10) #18
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42) #18
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: optsize
declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %123, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #20
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  br label %24

19:                                               ; preds = %24
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %22, null
  br i1 %23, label %131, label %30

24:                                               ; preds = %24, %17
  %25 = phi i64 [ %28, %24 ], [ 0, %17 ]
  %26 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, i64 %25
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %27, align 8
  %28 = add nuw i64 %25, 1
  %29 = icmp eq i64 %28, %1
  br i1 %29, label %19, label %24

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 1
  %32 = bitcast %"struct.std::__1::__hash_node_base"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !3
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = add i64 %1, -1
  %38 = and i64 %33, %37
  br label %43

39:                                               ; preds = %30
  %40 = icmp ult i64 %33, %1
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %33, %1
  br label %43

43:                                               ; preds = %36, %39, %41
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %33, %39 ]
  %45 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base"* %20, %"struct.std::__1::__hash_node_base"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base"* %48, null
  br i1 %49, label %131, label %50

50:                                               ; preds = %43
  %51 = add i64 %1, -1
  br label %52

52:                                               ; preds = %50, %117
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %48, %50 ], [ %121, %117 ]
  %54 = phi i64 [ %44, %50 ], [ %119, %117 ]
  %55 = phi %"struct.std::__1::__hash_node_base"* [ %22, %50 ], [ %118, %117 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  br i1 %35, label %61, label %59

59:                                               ; preds = %52
  %60 = and i64 %58, %51
  br label %65

61:                                               ; preds = %52
  %62 = icmp ult i64 %58, %1
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %58, %1
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %58, %61 ]
  %67 = icmp eq i64 %66, %54
  br i1 %67, label %117, label %68

68:                                               ; preds = %65
  %69 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %69, i64 %66
  %71 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base"* %71, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %75 to i32*
  %77 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i32*
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %74 to %"struct.std::__1::__hash_value_type"*
  %79 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %78, i64 0, i32 0, i32 0, i32 1
  br label %81

80:                                               ; preds = %68
  store %"struct.std::__1::__hash_node_base"* %55, %"struct.std::__1::__hash_node_base"** %70, align 8
  br label %117

81:                                               ; preds = %73, %98
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %84, %98 ], [ %53, %73 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %82, i64 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %83, align 8
  %85 = icmp eq %"struct.std::__1::__hash_node_base"* %84, null
  br i1 %85, label %104, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %84, i64 2
  %88 = load i32, i32* %77, align 4
  %89 = bitcast %"struct.std::__1::__hash_node_base"* %87 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %88, %90
  br i1 %91, label %92, label %104

92:                                               ; preds = %86
  %93 = bitcast %"struct.std::__1::__hash_node_base"* %87 to %"struct.std::__1::__hash_value_type"*
  %94 = load i32, i32* %79, align 4
  %95 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %93, i64 0, i32 0, i32 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %94, %96
  br i1 %97, label %98, label %104

98:                                               ; preds = %92
  %99 = load i32, i32* %76, align 4
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %84, i64 3
  %101 = bitcast %"struct.std::__1::__hash_node_base"* %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %99, %102
  br i1 %103, label %81, label %104

104:                                              ; preds = %86, %92, %81, %98
  %105 = ptrtoint %"struct.std::__1::__hash_node_base"* %84 to i64
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  %107 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i64*
  store i64 %105, i64* %107, align 8
  %108 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, i64 %66
  %110 = bitcast %"struct.std::__1::__hash_node_base"** %109 to i64**
  %111 = load i64*, i64** %110, align 8
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %106, align 8
  %113 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, i64 %66
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %53, %"struct.std::__1::__hash_node_base"** %116, align 8
  br label %117

117:                                              ; preds = %65, %104, %80
  %118 = phi %"struct.std::__1::__hash_node_base"* [ %53, %80 ], [ %55, %104 ], [ %53, %65 ]
  %119 = phi i64 [ %66, %80 ], [ %54, %104 ], [ %54, %65 ]
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %118, i64 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %121, null
  br i1 %122, label %131, label %52

123:                                              ; preds = %2
  %124 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %124, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %124, align 8
  %126 = icmp eq %"struct.std::__1::__hash_node_base"** %125, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.std::__1::__hash_node_base"** %125 to i8*
  tail call void @_ZdlPv(i8* %128) #17
  br label %129

129:                                              ; preds = %123, %127
  %130 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %130, align 8
  br label %131

131:                                              ; preds = %117, %43, %19, %129
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrINS_11__hash_nodeINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEEPvEENS_22__hash_node_destructorINS_9allocatorISD_EEEEE5resetEPSD_(%"class.std::__1::unique_ptr.461"*, %"struct.std::__1::__hash_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.461", %"class.std::__1::unique_ptr.461"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %3, align 8
  store %"struct.std::__1::__hash_node"* %1, %"struct.std::__1::__hash_node"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.461", %"class.std::__1::unique_ptr.461"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %4, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev(%"class.std::__1::shared_ptr"* %11) #15
  br label %12

12:                                               ; preds = %10, %6
  %13 = bitcast %"struct.std::__1::__hash_node"* %4 to i8*
  tail call void @_ZdlPv(i8* %13) #17
  br label %14

14:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #15
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE4findIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEERKT_(%"class.std::__1::__tree"*, %"struct.vk::SamplerState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.vk::SamplerState"* %1 to i8*
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %21, %9 ]
  %11 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %22, %9 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %13 = bitcast %"struct.std::__1::__value_type"* %12 to i8*
  %14 = tail call i32 @memcmp(i8* %13, i8* %8, i64 72) #19
  %15 = icmp slt i32 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node"* %11 to %"class.std::__1::__tree_node"**
  %20 = select i1 %15, %"class.std::__1::__tree_node"** %17, %"class.std::__1::__tree_node"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node"* %22, null
  br i1 %23, label %24, label %9

24:                                               ; preds = %9
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, %3
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node"*
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %27, i64 0, i32 1
  %29 = bitcast %"struct.std::__1::__value_type"* %28 to i8*
  %30 = tail call i32 @memcmp(i8* %8, i8* %29, i64 72) #19
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %24, %2, %26
  br label %33

33:                                               ; preds = %26, %32
  %34 = phi %"class.std::__1::__tree_end_node"* [ %3, %32 ], [ %21, %26 ]
  ret %"class.std::__1::__tree_end_node"* %34
}

; Function Attrs: nofree nounwind optsize readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS3_JRKS3_S6_EEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"struct.vk::SamplerState"* dereferenceable(72), %"struct.vk::SamplerState"* dereferenceable(72), %"struct.vk::Device::SamplerIndexer::Identifier"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"struct.vk::SamplerState"* dereferenceable(72) %1) #18
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %11, label %22

11:                                               ; preds = %4
  %12 = call i8* @_Znwm(i64 112) #17, !noalias !7
  %13 = getelementptr inbounds i8, i8* %12, i64 28
  %14 = bitcast %"struct.vk::SamplerState"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %14, i64 72, i1 false) #16, !noalias !7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 70, i1 false) #16, !noalias !7
  %15 = getelementptr inbounds i8, i8* %12, i64 100
  %16 = bitcast %"struct.vk::Device::SamplerIndexer::Identifier"* %3 to i64*
  %17 = bitcast i8* %15 to i64*
  %18 = load i64, i64* %16, align 4, !noalias !7
  store i64 %18, i64* %17, align 4, !noalias !7
  %19 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %20 = bitcast i8* %12 to %"class.std::__1::__tree_node"*
  %21 = bitcast i8* %12 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSJ_SJ_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"* %19, %"class.std::__1::__tree_node_base"** dereferenceable(8) %7, %"class.std::__1::__tree_node_base"* nonnull %21) #15
  br label %22

22:                                               ; preds = %11, %4
  %23 = phi i8 [ 1, %11 ], [ 0, %4 ]
  %24 = phi %"class.std::__1::__tree_node"* [ %20, %11 ], [ %9, %4 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %26 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %25, 0
  %27 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %26, i8 %23, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %27
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"struct.vk::SamplerState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %39, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"struct.vk::SamplerState"* %2 to i8*
  br label %11

11:                                               ; preds = %8, %35
  %12 = phi %"class.std::__1::__tree_node"* [ %38, %35 ], [ %6, %8 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %37, %35 ], [ %9, %8 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1
  %15 = bitcast %"struct.std::__1::__value_type"* %14 to i8*
  %16 = tail call i32 @memcmp(i8* %10, i8* %15, i64 72) #19
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %21, label %22, label %35

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %23, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %41

24:                                               ; preds = %11
  %25 = tail call i32 @memcmp(i8* %15, i8* %10, i64 72) #19
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %32, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %41

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %34, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %41

35:                                               ; preds = %27, %18
  %36 = phi %"class.std::__1::__tree_node_base"* [ %20, %18 ], [ %29, %27 ]
  %37 = phi %"class.std::__1::__tree_node_base"** [ %19, %18 ], [ %28, %27 ]
  %38 = bitcast %"class.std::__1::__tree_node_base"* %36 to %"class.std::__1::__tree_node"*
  br label %11

39:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %41

41:                                               ; preds = %39, %33, %31, %22
  %42 = phi %"class.std::__1::__tree_node_base"** [ %19, %22 ], [ %28, %31 ], [ %13, %33 ], [ %40, %39 ]
  ret %"class.std::__1::__tree_node_base"** %42
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSJ_SJ_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %3, i64 0, i32 2
  %6 = bitcast %"class.std::__1::__tree_node_base"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %5, align 8
  store %"class.std::__1::__tree_node_base"* %3, %"class.std::__1::__tree_node_base"** %2, align 8
  %7 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node_base"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = ptrtoint %"class.std::__1::__tree_node_base"* %10 to i64
  %14 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2, align 8
  br label %16

16:                                               ; preds = %4, %12
  %17 = phi %"class.std::__1::__tree_node_base"* [ %3, %4 ], [ %15, %12 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %19, %"class.std::__1::__tree_node_base"* %17) #15
  %20 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE21__remove_node_pointerEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %5 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node_base"* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node_base"*
  %9 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 2
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %8
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %5, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %7, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %7 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %7, %19
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %7 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %3
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %35, %30
  %39 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #15
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN2sw8LRUCacheIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEENS6_4HashEE5KeyedENSC_15KeyedComparatorESG_NS_9allocatorISF_EEED2Ev(%"class.std::__1::__hash_table.55"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__hash_table.55", %"class.std::__1::__hash_table.55"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.59"*, %"struct.std::__1::__hash_node_base.59"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.59"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.59"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.59", %"struct.std::__1::__hash_node_base.59"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.59"*, %"struct.std::__1::__hash_node_base.59"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.59"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #17
  %10 = icmp eq %"struct.std::__1::__hash_node_base.59"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.std::__1::__hash_table.55", %"class.std::__1::__hash_table.55"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.59"**, %"struct.std::__1::__hash_node_base.59"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.59"** null, %"struct.std::__1::__hash_node_base.59"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.59"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.59"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseIN2sw8LRUCacheIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEENS6_4HashEE5EntryENS_9allocatorISD_EEED2Ev(%"class.std::__1::__vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base", %"class.std::__1::__vector_base"* %0, i64 0, i32 0
  %3 = load %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"** %2, align 8
  %4 = icmp eq %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::__vector_base", %"class.std::__1::__vector_base"* %0, i64 0, i32 1
  %8 = load %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"** %7, align 8
  %9 = icmp eq %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %8, %3
  br i1 %9, label %18, label %10

10:                                               ; preds = %5, %10
  %11 = phi %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* [ %12, %10 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %11, i64 -1, i32 1
  tail call void @_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev(%"class.std::__1::shared_ptr"* %13) #15
  %14 = icmp eq %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %12, %3
  br i1 %14, label %15, label %10

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::__vector_base"* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %5, %15
  %19 = phi i8* [ %17, %15 ], [ %6, %5 ]
  store %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %3, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"** %7, align 8
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %1, %18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEED2Ev(%"class.std::__1::__hash_table"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %2, align 8
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::__hash_table"* %0, %"struct.std::__1::__hash_node_base"* %3) #15
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %4, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base"** %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.std::__1::__hash_node_base"** %5 to i8*
  tail call void @_ZdlPv(i8* %8) #17
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden { %"struct.marl::Event::Shared"*, %"class.std::__1::__shared_weak_count"* } @_ZN4marl5Event3anyIPS0_EES0_NS0_4ModeERKT_S6_(i8 zeroext, %"class.marl::Event"** dereferenceable(8), %"class.marl::Event"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %4 = alloca %"struct.marl::Allocation::Request", align 16
  %5 = alloca %"struct.marl::Allocation", align 8
  %6 = alloca %"class.marl::Event", align 8
  %7 = getelementptr inbounds %"class.marl::Event", %"class.marl::Event"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.marl::Event", %"class.marl::Event"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.marl::Event", %"class.marl::Event"* %6, i64 0, i32 0, i32 1
  %10 = bitcast %"class.marl::Event"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** @_ZN4marl9Allocator7DefaultE, align 8
  %12 = ptrtoint %"class.marl::Allocator"* %11 to i64
  %13 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 24, i1 false) #16
  %14 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %15 = bitcast i8* %14 to i16*
  store i16 512, i16* %15, align 16
  %16 = bitcast %"struct.marl::Allocation::Request"* %4 to <2 x i64>*
  store <2 x i64> <i64 272, i64 8>, <2 x i64>* %16, align 16
  %17 = bitcast %"struct.marl::Allocation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #16
  %18 = bitcast %"class.marl::Allocator"* %11 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false) #16
  %19 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %19, i64 2
  %21 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %20, align 8
  call void %21(%"struct.marl::Allocation"* nonnull sret %5, %"class.marl::Allocator"* %11, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #15
  %22 = bitcast %"struct.marl::Allocation"* %5 to %"struct.marl::Event::Shared"**
  %23 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %22, align 8
  %24 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %23, i64 0, i32 1, i32 1, i32 0
  %25 = bitcast %"struct.marl::Event::Shared"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 80, i1 false) #16
  %26 = bitcast %"class.marl::Allocator"** %24 to i64*
  store i64 %12, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %23, i64 0, i32 1, i32 1, i32 1
  %28 = bitcast i64* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 96, i1 false) #16
  %29 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %23, i64 0, i32 2
  %30 = load i64, i64* bitcast (%"class.marl::Allocator"** @_ZN4marl9Allocator7DefaultE to i64*), align 8
  %31 = bitcast %"class.marl::containers::vector"* %29 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %23, i64 0, i32 2, i32 1
  %33 = bitcast i64* %32 to <2 x i64>*
  store <2 x i64> <i64 0, i64 1>, <2 x i64>* %33, align 8
  %34 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %23, i64 0, i32 2, i32 4
  %35 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %23, i64 0, i32 2, i32 3, i64 0
  store %"struct.marl::aligned_storage<16, 8>::type"* %35, %"struct.marl::aligned_storage<16, 8>::type"** %34, align 8
  %36 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %23, i64 0, i32 2, i32 5
  %37 = bitcast %"struct.marl::Allocation"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 26, i1 false) #16
  %38 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %23, i64 0, i32 3
  store i8 %0, i8* %38, align 8
  %39 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %23, i64 0, i32 4
  store i8 0, i8* %39, align 1
  %40 = call i8* @_Znwm(i64 48) #17
  %41 = ptrtoint %"struct.marl::Event::Shared"* %23 to i64
  %42 = bitcast i8* %40 to i32 (...)***
  %43 = getelementptr inbounds i8, i8* %40, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %44 = getelementptr inbounds i8, i8* %40, i64 24
  %45 = bitcast i8* %44 to i64*
  store i64 %41, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %40, i64 32
  %47 = bitcast i8* %46 to %"class.marl::Allocator"**
  store %"class.marl::Allocator"* %11, %"class.marl::Allocator"** %47, align 8
  %48 = getelementptr inbounds i8, i8* %40, i64 40
  %49 = bitcast i8* %48 to i64*
  store i64 1, i64* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #16
  store %"struct.marl::Event::Shared"* %23, %"struct.marl::Event::Shared"** %8, align 8
  %50 = bitcast %"class.std::__1::__shared_weak_count"** %9 to i8**
  store i8* %40, i8** %50, align 8
  %51 = load %"class.marl::Event"*, %"class.marl::Event"** %1, align 8
  %52 = load %"class.marl::Event"*, %"class.marl::Event"** %2, align 8
  %53 = icmp eq %"class.marl::Event"* %51, %52
  %54 = bitcast i8* %40 to %"class.std::__1::__shared_weak_count"*
  br i1 %53, label %91, label %55

55:                                               ; preds = %3, %84
  %56 = phi %"class.marl::Event"* [ %85, %84 ], [ %51, %3 ]
  %57 = getelementptr inbounds %"class.marl::Event", %"class.marl::Event"* %56, i64 0, i32 0, i32 0
  %58 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %57, align 8
  %59 = getelementptr inbounds %"class.marl::Event", %"class.marl::Event"* %56, i64 0, i32 0, i32 1
  %60 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %59, align 8
  %61 = icmp eq %"class.std::__1::__shared_weak_count"* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %60, i64 0, i32 0, i32 1
  %64 = atomicrmw add i64* %63, i64 1 monotonic
  br label %65

65:                                               ; preds = %55, %62
  %66 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %58, i64 0, i32 0, i32 0
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %66) #15
  %67 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %58, i64 0, i32 4
  %68 = load i8, i8* %67, align 1, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %8, align 8
  call void @_ZN4marl5Event6Shared6signalEv(%"struct.marl::Event::Shared"* %71) #15
  br label %72

72:                                               ; preds = %65, %70
  %73 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %58, i64 0, i32 2
  call void @_ZN4marl10containers6vectorINSt3__110shared_ptrINS_5Event6SharedEEELi1EE9push_backERKS6_(%"class.marl::containers::vector"* %73, %"class.std::__1::shared_ptr.149"* nonnull dereferenceable(16) %7) #18
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %66) #15
  br i1 %61, label %84, label %74

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %60, i64 0, i32 0, i32 1
  %76 = atomicrmw add i64* %75, i64 -1 acq_rel
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %84

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %60, i64 0, i32 0
  %80 = bitcast %"class.std::__1::__shared_weak_count"* %60 to void (%"class.std::__1::__shared_count"*)***
  %81 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %81, i64 2
  %83 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %82, align 8
  call void %83(%"class.std::__1::__shared_count"* %79) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %60) #15
  br label %84

84:                                               ; preds = %72, %74, %78
  %85 = getelementptr inbounds %"class.marl::Event", %"class.marl::Event"* %56, i64 1
  %86 = load %"class.marl::Event"*, %"class.marl::Event"** %2, align 8
  %87 = icmp eq %"class.marl::Event"* %85, %86
  br i1 %87, label %88, label %55

88:                                               ; preds = %84
  %89 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %8, align 8
  %90 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %9, align 8
  br label %91

91:                                               ; preds = %88, %3
  %92 = phi %"class.std::__1::__shared_weak_count"* [ %90, %88 ], [ %54, %3 ]
  %93 = phi %"struct.marl::Event::Shared"* [ %89, %88 ], [ %23, %3 ]
  %94 = insertvalue { %"struct.marl::Event::Shared"*, %"class.std::__1::__shared_weak_count"* } undef, %"struct.marl::Event::Shared"* %93, 0
  %95 = insertvalue { %"struct.marl::Event::Shared"*, %"class.std::__1::__shared_weak_count"* } %94, %"class.std::__1::__shared_weak_count"* %92, 1
  ret { %"struct.marl::Event::Shared"*, %"class.std::__1::__shared_weak_count"* } %95
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4marl10containers6vectorINSt3__110shared_ptrINS_5Event6SharedEEELi1EE9push_backERKS6_(%"class.marl::containers::vector"*, %"class.std::__1::shared_ptr.149"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation::Request", align 8
  %4 = alloca %"struct.marl::Allocation", align 8
  %5 = getelementptr inbounds %"class.marl::containers::vector", %"class.marl::containers::vector"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 1
  %8 = getelementptr inbounds %"class.marl::containers::vector", %"class.marl::containers::vector"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %9, %7
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.marl::containers::vector", %"class.marl::containers::vector"* %0, i64 0, i32 4
  %13 = bitcast %"struct.marl::aligned_storage<16, 8>::type"** %12 to %"class.std::__1::shared_ptr.149"**
  %14 = load %"class.std::__1::shared_ptr.149"*, %"class.std::__1::shared_ptr.149"** %13, align 8
  br label %85

15:                                               ; preds = %2
  %16 = shl i64 %7, 1
  %17 = icmp ugt i64 %16, 8
  %18 = select i1 %17, i64 %16, i64 8
  store i64 %18, i64* %8, align 8
  %19 = bitcast %"struct.marl::Allocation::Request"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #16
  %20 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false) #16
  %22 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 2
  %23 = bitcast i8* %22 to i16*
  store i16 768, i16* %23, align 8
  %24 = shl i64 %18, 4
  store i64 %24, i64* %20, align 8
  store i64 8, i64* %21, align 8
  %25 = bitcast %"struct.marl::Allocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.marl::containers::vector", %"class.marl::containers::vector"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false) #16
  %27 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %26, align 8
  %28 = bitcast %"class.marl::Allocator"* %27 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %29 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %29, i64 2
  %31 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %30, align 8
  call void %31(%"struct.marl::Allocation"* nonnull sret %4, %"class.marl::Allocator"* %27, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %3) #15
  %32 = bitcast %"struct.marl::Allocation"* %4 to %"struct.marl::aligned_storage<16, 8>::type"**
  %33 = load %"struct.marl::aligned_storage<16, 8>::type"*, %"struct.marl::aligned_storage<16, 8>::type"** %32, align 8
  %34 = load i64, i64* %5, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %15
  %37 = getelementptr inbounds %"class.marl::containers::vector", %"class.marl::containers::vector"* %0, i64 0, i32 4
  %38 = bitcast %"struct.marl::aligned_storage<16, 8>::type"** %37 to %"class.std::__1::shared_ptr.149"**
  br label %68

39:                                               ; preds = %68
  %40 = icmp eq i64 %83, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %47, %39, %15
  %42 = phi i64 [ 0, %39 ], [ 0, %15 ], [ %52, %47 ]
  %43 = getelementptr inbounds %"class.marl::containers::vector", %"class.marl::containers::vector"* %0, i64 0, i32 5
  %44 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %43, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %63, label %54

47:                                               ; preds = %39, %47
  %48 = phi i64 [ %51, %47 ], [ 0, %39 ]
  %49 = load %"class.std::__1::shared_ptr.149"*, %"class.std::__1::shared_ptr.149"** %38, align 8
  %50 = getelementptr inbounds %"class.std::__1::shared_ptr.149", %"class.std::__1::shared_ptr.149"* %49, i64 %48
  call void @_ZNSt3__110shared_ptrIN4marl5Event6SharedEED2Ev(%"class.std::__1::shared_ptr.149"* %50) #15
  %51 = add nuw i64 %48, 1
  %52 = load i64, i64* %5, align 8
  %53 = icmp ult i64 %51, %52
  br i1 %53, label %47, label %41

54:                                               ; preds = %41
  %55 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %26, align 8
  %56 = bitcast %"class.marl::Allocator"* %55 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %57 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %57, i64 3
  %59 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %58, align 8
  call void %59(%"class.marl::Allocator"* %55, %"struct.marl::Allocation"* dereferenceable(32) %43) #15
  %60 = getelementptr inbounds %"class.marl::containers::vector", %"class.marl::containers::vector"* %0, i64 0, i32 4
  %61 = bitcast %"struct.marl::aligned_storage<16, 8>::type"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 34, i1 false) #16
  %62 = load i64, i64* %5, align 8
  br label %63

63:                                               ; preds = %54, %41
  %64 = phi i64 [ %62, %54 ], [ %42, %41 ]
  %65 = getelementptr inbounds %"class.marl::containers::vector", %"class.marl::containers::vector"* %0, i64 0, i32 4
  store %"struct.marl::aligned_storage<16, 8>::type"* %33, %"struct.marl::aligned_storage<16, 8>::type"** %65, align 8
  %66 = bitcast %"struct.marl::Allocation"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %25, i64 32, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #16
  %67 = bitcast %"struct.marl::aligned_storage<16, 8>::type"* %33 to %"class.std::__1::shared_ptr.149"*
  br label %85

68:                                               ; preds = %68, %36
  %69 = phi i64 [ 0, %36 ], [ %82, %68 ]
  %70 = getelementptr inbounds %"struct.marl::aligned_storage<16, 8>::type", %"struct.marl::aligned_storage<16, 8>::type"* %33, i64 %69
  %71 = load %"class.std::__1::shared_ptr.149"*, %"class.std::__1::shared_ptr.149"** %38, align 8
  %72 = getelementptr inbounds %"class.std::__1::shared_ptr.149", %"class.std::__1::shared_ptr.149"* %71, i64 %69
  %73 = bitcast %"class.std::__1::shared_ptr.149"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"struct.marl::aligned_storage<16, 8>::type"* %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.marl::aligned_storage<16, 8>::type", %"struct.marl::aligned_storage<16, 8>::type"* %33, i64 %69, i32 0, i64 8
  %77 = getelementptr inbounds %"class.std::__1::shared_ptr.149", %"class.std::__1::shared_ptr.149"* %71, i64 %69, i32 1
  %78 = bitcast %"class.std::__1::__shared_weak_count"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast i8* %76 to i64*
  store i64 %79, i64* %80, align 8
  %81 = bitcast %"class.std::__1::shared_ptr.149"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false) #16
  %82 = add nuw i64 %69, 1
  %83 = load i64, i64* %5, align 8
  %84 = icmp ult i64 %82, %83
  br i1 %84, label %68, label %39

85:                                               ; preds = %11, %63
  %86 = phi i64 [ %6, %11 ], [ %64, %63 ]
  %87 = phi %"class.std::__1::shared_ptr.149"* [ %14, %11 ], [ %67, %63 ]
  %88 = getelementptr inbounds %"class.std::__1::shared_ptr.149", %"class.std::__1::shared_ptr.149"* %87, i64 %86
  %89 = bitcast %"class.std::__1::shared_ptr.149"* %1 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.std::__1::shared_ptr.149"* %88 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::shared_ptr.149", %"class.std::__1::shared_ptr.149"* %87, i64 %86, i32 1
  %93 = getelementptr inbounds %"class.std::__1::shared_ptr.149", %"class.std::__1::shared_ptr.149"* %1, i64 0, i32 1
  %94 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %93, align 8
  store %"class.std::__1::__shared_weak_count"* %94, %"class.std::__1::__shared_weak_count"** %92, align 8
  %95 = icmp eq %"class.std::__1::__shared_weak_count"* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %85
  %97 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %94, i64 0, i32 0, i32 1
  %98 = atomicrmw add i64* %97, i64 1 monotonic
  br label %99

99:                                               ; preds = %85, %96
  %100 = load i64, i64* %5, align 8
  %101 = add i64 %100, 1
  store i64 %101, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEED0Ev(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %2) #15
  %3 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEE16__on_zero_sharedEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %3, align 8
  %5 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 2, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 2, i32 4
  %10 = bitcast %"struct.marl::aligned_storage<16, 8>::type"** %9 to %"class.std::__1::shared_ptr.149"**
  br label %16

11:                                               ; preds = %16, %1
  %12 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 2, i32 5
  %13 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %12, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %32, label %23

16:                                               ; preds = %16, %8
  %17 = phi i64 [ 0, %8 ], [ %20, %16 ]
  %18 = load %"class.std::__1::shared_ptr.149"*, %"class.std::__1::shared_ptr.149"** %10, align 8
  %19 = getelementptr inbounds %"class.std::__1::shared_ptr.149", %"class.std::__1::shared_ptr.149"* %18, i64 %17
  tail call void @_ZNSt3__110shared_ptrIN4marl5Event6SharedEED2Ev(%"class.std::__1::shared_ptr.149"* %19) #15
  %20 = add nuw i64 %17, 1
  %21 = load i64, i64* %5, align 8
  %22 = icmp ult i64 %20, %21
  br i1 %22, label %16, label %11

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 2, i32 0
  %25 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %24, align 8
  %26 = bitcast %"class.marl::Allocator"* %25 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %27 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %27, i64 3
  %29 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %28, align 8
  tail call void %29(%"class.marl::Allocator"* %25, %"struct.marl::Allocation"* dereferenceable(32) %12) #15
  %30 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 2, i32 4
  %31 = bitcast %"struct.marl::aligned_storage<16, 8>::type"** %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 34, i1 false) #16
  br label %32

32:                                               ; preds = %23, %11
  %33 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 1, i32 2
  tail call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %33) #15
  %34 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 1, i32 1, i32 5
  br label %35

35:                                               ; preds = %35, %32
  %36 = phi %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** [ %34, %32 ], [ %39, %35 ]
  %37 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %36, align 8
  %38 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %37, null
  %39 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %37, i64 0, i32 1
  br i1 %38, label %40, label %35

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 1, i32 1, i32 3
  %42 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"** %41, align 8
  %43 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 1, i32 1, i32 0
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* [ %42, %44 ], [ %49, %46 ]
  %48 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* %47, i64 0, i32 1
  %49 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"** %48, align 8
  %50 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %45, align 8
  %51 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* %47, i64 0, i32 0
  %52 = bitcast %"class.marl::Allocator"* %50 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %53 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %53, i64 3
  %55 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %54, align 8
  tail call void %55(%"class.marl::Allocator"* %50, %"struct.marl::Allocation"* dereferenceable(32) %51) #15
  %56 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* %49, null
  br i1 %56, label %57, label %46

57:                                               ; preds = %46, %40
  %58 = bitcast %"struct.marl::Allocation"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #16
  %59 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %60 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 32, i1 false) #16
  %61 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  %62 = bitcast i8* %61 to i16*
  store i16 512, i16* %62, align 8
  %63 = bitcast %"struct.marl::Allocation"* %2 to %"struct.marl::Event::Shared"**
  store %"struct.marl::Event::Shared"* %4, %"struct.marl::Event::Shared"** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = mul i64 %65, 272
  store i64 %66, i64* %59, align 8
  store i64 8, i64* %60, align 8
  %67 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %68 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %67, align 8
  %69 = bitcast %"class.marl::Allocator"* %68 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %70 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %70, i64 3
  %72 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %71, align 8
  call void %72(%"class.marl::Allocator"* %68, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #16
  ret void
}

; Function Attrs: nounwind optsize
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4marl5Event6Shared6signalEv(%"struct.marl::Event::Shared"*) local_unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %2) #15
  %3 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %82

6:                                                ; preds = %1
  store i8 1, i8* %3, align 1
  %7 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 8
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 seq_cst, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %9, label %14, label %31

14:                                               ; preds = %6
  br i1 %13, label %50, label %15

15:                                               ; preds = %14
  %16 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %10, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %16) #15
  %17 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %0, i64 0, i32 1, i32 1, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %0, i64 0, i32 1, i32 1, i32 5
  %22 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %21, align 8
  %23 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %22, i64 0, i32 0
  %24 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %23, align 8
  tail call void @_ZN4marl9Scheduler5Fiber6notifyEv(%"class.marl::Scheduler::Fiber"* %24) #15
  br label %25

25:                                               ; preds = %20, %15
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %16) #15
  %26 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 seq_cst, align 4
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %50

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %0, i64 0, i32 1, i32 2
  tail call void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"* %30) #15
  br label %50

31:                                               ; preds = %6
  br i1 %13, label %50, label %32

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %10, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %33) #15
  %34 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %0, i64 0, i32 1, i32 1, i32 5
  %35 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %34, align 8
  %36 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %41, %32
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %33) #15
  %38 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 seq_cst, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %48, label %50

41:                                               ; preds = %32, %41
  %42 = phi %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* [ %46, %41 ], [ %35, %32 ]
  %43 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %42, i64 0, i32 0
  %44 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %43, align 8
  tail call void @_ZN4marl9Scheduler5Fiber6notifyEv(%"class.marl::Scheduler::Fiber"* %44) #15
  %45 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %42, i64 0, i32 1
  %46 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %45, align 8
  %47 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %46, null
  br i1 %47, label %37, label %41

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %0, i64 0, i32 1, i32 2
  tail call void @_ZNSt3__118condition_variable10notify_allEv(%"class.std::__1::condition_variable"* %49) #15
  br label %50

50:                                               ; preds = %48, %37, %31, %29, %25, %14
  %51 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %0, i64 0, i32 2, i32 4
  %52 = bitcast %"struct.marl::aligned_storage<16, 8>::type"** %51 to %"class.std::__1::shared_ptr.149"**
  %53 = load %"class.std::__1::shared_ptr.149"*, %"class.std::__1::shared_ptr.149"** %52, align 8
  %54 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %0, i64 0, i32 2, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::shared_ptr.149", %"class.std::__1::shared_ptr.149"* %53, i64 %55
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %82, label %58

58:                                               ; preds = %50, %79
  %59 = phi %"class.std::__1::shared_ptr.149"* [ %80, %79 ], [ %53, %50 ]
  %60 = bitcast %"class.std::__1::shared_ptr.149"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::shared_ptr.149", %"class.std::__1::shared_ptr.149"* %59, i64 0, i32 1
  %63 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %62, align 8
  %64 = icmp eq %"class.std::__1::__shared_weak_count"* %63, null
  br i1 %64, label %65, label %67

65:                                               ; preds = %58
  %66 = inttoptr i64 %61 to %"struct.marl::Event::Shared"*
  tail call void @_ZN4marl5Event6Shared6signalEv(%"struct.marl::Event::Shared"* %66) #18
  br label %79

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %63, i64 0, i32 0, i32 1
  %69 = atomicrmw add i64* %68, i64 1 monotonic
  %70 = inttoptr i64 %61 to %"struct.marl::Event::Shared"*
  tail call void @_ZN4marl5Event6Shared6signalEv(%"struct.marl::Event::Shared"* %70) #18
  %71 = atomicrmw add i64* %68, i64 -1 acq_rel
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %79

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %63, i64 0, i32 0
  %75 = bitcast %"class.std::__1::__shared_weak_count"* %63 to void (%"class.std::__1::__shared_count"*)***
  %76 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %76, i64 2
  %78 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %77, align 8
  tail call void %78(%"class.std::__1::__shared_count"* %74) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %63) #15
  br label %79

79:                                               ; preds = %65, %67, %73
  %80 = getelementptr inbounds %"class.std::__1::shared_ptr.149", %"class.std::__1::shared_ptr.149"* %59, i64 1
  %81 = icmp eq %"class.std::__1::shared_ptr.149"* %80, %56
  br i1 %81, label %82, label %58

82:                                               ; preds = %79, %50, %1
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %2) #15
  ret void
}

; Function Attrs: optsize
declare void @_ZN4marl9Scheduler5Fiber6notifyEv(%"class.marl::Scheduler::Fiber"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize
declare void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"*) local_unnamed_addr #5

; Function Attrs: nounwind optsize
declare void @_ZNSt3__118condition_variable10notify_allEv(%"class.std::__1::condition_variable"*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4marl17ConditionVariable10wait_untilINSt3__16chrono12system_clockENS3_8durationIxNS2_5ratioILl1ELl1000000000EEEEEZNS_5Event6Shared10wait_untilIS4_S8_EEbRKNS3_10time_pointIT_T0_EEEUlvE_EEbRNS_4lockESH_OT1_(%"class.marl::ConditionVariable"*, %"class.marl::lock"* dereferenceable(16), %"class.std::__1::chrono::time_point"* dereferenceable(8), %class.anon.483* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %5 = alloca %"class.std::__1::chrono::time_point.449", align 8
  %6 = alloca %"struct.marl::Allocation::Request", align 8
  %7 = alloca %"struct.marl::Allocation", align 8
  %8 = alloca %"class.std::__1::function.452", align 8
  %9 = getelementptr inbounds %class.anon.483, %class.anon.483* %3, i64 0, i32 0
  %10 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %9, align 8
  %11 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %10, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %183

14:                                               ; preds = %4
  %15 = tail call %"class.marl::Scheduler::Fiber"* @_ZN4marl9Scheduler5Fiber7currentEv() #15
  %16 = ptrtoint %"class.marl::Scheduler::Fiber"* %15 to i64
  %17 = icmp eq %"class.marl::Scheduler::Fiber"* %15, null
  %18 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 seq_cst
  br i1 %17, label %161, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %21) #15
  %22 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 4
  %23 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %22, align 8
  %24 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %22 to i64*
  br label %76

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = icmp ugt i64 %29, 8
  %31 = select i1 %30, i64 %29, i64 8
  %32 = mul i64 %31, 24
  %33 = add i64 %32, 40
  %34 = bitcast %"struct.marl::Allocation::Request"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #16
  %35 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %6, i64 0, i32 0
  %36 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %6, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false) #16
  %37 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %6, i64 0, i32 2
  %38 = bitcast i8* %37 to i16*
  store i16 1024, i16* %38, align 8
  store i64 %33, i64* %35, align 8
  store i64 8, i64* %36, align 8
  %39 = bitcast %"struct.marl::Allocation"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #16
  %40 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 32, i1 false) #16
  %41 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %40, align 8
  %42 = bitcast %"class.marl::Allocator"* %41 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %43 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %43, i64 2
  %45 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %44, align 8
  call void %45(%"struct.marl::Allocation"* nonnull sret %7, %"class.marl::Allocator"* %41, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %6) #15
  %46 = bitcast %"struct.marl::Allocation"* %7 to %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"**
  %47 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %46, align 8
  %48 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %22 to i64*
  br label %49

49:                                               ; preds = %60, %27
  %50 = phi i64 [ 0, %27 ], [ %61, %60 ]
  %51 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %47, i64 %50
  %52 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %47, i64 %50, i32 2
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* null, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %52, align 8
  %53 = load i64, i64* %48, align 8
  %54 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %47, i64 %50, i32 1
  %55 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %22, align 8
  %57 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %56, i64 0, i32 2
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %51, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %59, align 8
  br label %60

60:                                               ; preds = %58, %49
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %51, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %22, align 8
  %61 = add nuw i64 %50, 1
  %62 = icmp eq i64 %61, %31
  br i1 %62, label %63, label %49

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %7, i64 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %39, i64 32, i1 false) #16
  %67 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 3
  %68 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds i8, i8* %66, i64 32
  %71 = bitcast i8* %70 to i64*
  store i64 %69, i64* %71, align 8
  %72 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"** %67 to i8**
  store i8* %66, i8** %72, align 8
  %73 = load i64, i64* %28, align 8
  %74 = add i64 %73, %31
  store i64 %74, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #16
  %75 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %22, align 8
  br label %76

76:                                               ; preds = %63, %25
  %77 = phi i64* [ %26, %25 ], [ %48, %63 ]
  %78 = phi %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* [ %23, %25 ], [ %75, %63 ]
  %79 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %78, i64 0, i32 1
  %80 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  store i64 %81, i64* %77, align 8
  %82 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %78, i64 0, i32 2
  %83 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %82, align 8
  %84 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %83, null
  br i1 %84, label %89, label %85

85:                                               ; preds = %76
  %86 = load i64, i64* %80, align 8
  %87 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %83, i64 0, i32 1
  %88 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %87 to i64*
  store i64 %86, i64* %88, align 8
  br label %89

89:                                               ; preds = %85, %76
  %90 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %79, align 8
  %91 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %90, null
  br i1 %91, label %97, label %92

92:                                               ; preds = %89
  %93 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %82 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %90, i64 0, i32 2
  %96 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %95 to i64*
  store i64 %94, i64* %96, align 8
  br label %97

97:                                               ; preds = %92, %89
  %98 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #16
  %99 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 5
  %100 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %99, align 8
  %101 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %100, null
  br i1 %101, label %105, label %102

102:                                              ; preds = %97
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %100, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %79, align 8
  %103 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %99, align 8
  %104 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %103, i64 0, i32 2
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %78, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %104, align 8
  br label %105

105:                                              ; preds = %97, %102
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %78, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %99, align 8
  %106 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %78 to i64*
  store i64 %16, i64* %106, align 8
  %107 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = add i64 %108, 1
  store i64 %109, i64* %107, align 8
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %21) #15
  %110 = bitcast %"class.std::__1::function.452"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %110) #16
  %111 = bitcast %class.anon.483* %3 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::function.452", %"class.std::__1::function.452"* %8, i64 0, i32 0, i32 1, i32 0
  %114 = getelementptr inbounds %"class.std::__1::function.452", %"class.std::__1::function.452"* %8, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFbvEE11__call_implINS0_20__default_alloc_funcIZN4marl5Event6Shared10wait_untilINS_6chrono12system_clockENSA_8durationIxNS_5ratioILl1ELl1000000000EEEEEEEbRKNSA_10time_pointIT_T0_EEEUlvE_S2_EEEEbPKNS0_16__policy_storageE, i1 (%"union.std::__1::__function::__policy_storage"*)** %113, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4marl5Event6Shared10wait_untilINS_6chrono12system_clockENS8_8durationIxNS_5ratioILl1ELl1000000000EEEEEEEbRKNS8_10time_pointIT_T0_EEEUlvE_FbvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %114, align 8
  %115 = bitcast %"class.std::__1::function.452"* %8 to i64*
  store i64 %112, i64* %115, align 8
  %116 = bitcast %"class.std::__1::chrono::time_point.449"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #16
  %117 = getelementptr inbounds %"class.std::__1::chrono::time_point.449", %"class.std::__1::chrono::time_point.449"* %5, i64 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %2, i64 0, i32 0, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = sdiv i64 %119, 1000
  store i64 %120, i64* %117, align 8
  %121 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %15, i64 0, i32 3
  %122 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** %121, align 8
  %123 = call zeroext i1 @_ZN4marl9Scheduler6Worker4waitERNS_4lockEPKNSt3__16chrono10time_pointINS5_12system_clockENS5_8durationIxNS4_5ratioILl1ELl1000000EEEEEEERKNS4_8functionIFbvEEE(%"class.marl::Scheduler::Worker"* %122, %"class.marl::lock"* dereferenceable(16) %1, %"class.std::__1::chrono::time_point.449"* nonnull %5, %"class.std::__1::function.452"* nonnull dereferenceable(32) %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #16
  %124 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %114, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %124, i64 0, i32 1
  %126 = load void (i8*)*, void (i8*)** %125, align 8
  %127 = icmp eq void (i8*)* %126, null
  br i1 %127, label %131, label %128

128:                                              ; preds = %105
  %129 = getelementptr inbounds %"class.std::__1::function.452", %"class.std::__1::function.452"* %8, i64 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void %126(i8* %130) #15
  br label %131

131:                                              ; preds = %105, %128
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %110) #16
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %21) #15
  %132 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %99, align 8
  %133 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %132, %78
  br i1 %133, label %134, label %137

134:                                              ; preds = %131
  %135 = load i64, i64* %80, align 8
  %136 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %99 to i64*
  store i64 %135, i64* %136, align 8
  br label %137

137:                                              ; preds = %134, %131
  %138 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %82, align 8
  %139 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %138, null
  br i1 %139, label %144, label %140

140:                                              ; preds = %137
  %141 = load i64, i64* %80, align 8
  %142 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %138, i64 0, i32 1
  %143 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %142 to i64*
  store i64 %141, i64* %143, align 8
  br label %144

144:                                              ; preds = %140, %137
  %145 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %79, align 8
  %146 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %145, null
  br i1 %146, label %152, label %147

147:                                              ; preds = %144
  %148 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %82 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %145, i64 0, i32 2
  %151 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %150 to i64*
  store i64 %149, i64* %151, align 8
  br label %152

152:                                              ; preds = %147, %144
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #16
  %153 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %22, align 8
  %154 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %153, null
  br i1 %154, label %158, label %155

155:                                              ; preds = %152
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %153, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %79, align 8
  %156 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %22, align 8
  %157 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %156, i64 0, i32 2
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %78, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %157, align 8
  br label %158

158:                                              ; preds = %155, %152
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %78, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %22, align 8
  %159 = load i64, i64* %107, align 8
  %160 = add i64 %159, -1
  store i64 %160, i64* %107, align 8
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %21) #15
  br label %180

161:                                              ; preds = %14
  %162 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = atomicrmw add i32* %162, i32 1 seq_cst
  %164 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 2
  %165 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %1, i64 0, i32 0
  %166 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %9, align 8
  %167 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %166, i64 0, i32 4
  br label %168

168:                                              ; preds = %171, %161
  %169 = load i8, i8* %167, align 1, !range !2
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %171, label %177

171:                                              ; preds = %168
  %172 = tail call i32 @_ZNSt3__118condition_variable10wait_untilINS_6chrono12system_clockENS2_8durationIxNS_5ratioILl1ELl1000000000EEEEEEENS_9cv_statusERNS_11unique_lockINS_5mutexEEERKNS2_10time_pointIT_T0_EE(%"class.std::__1::condition_variable"* %164, %"class.std::__1::unique_lock"* dereferenceable(16) %165, %"class.std::__1::chrono::time_point"* dereferenceable(8) %2) #15
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %168

174:                                              ; preds = %171
  %175 = load i8, i8* %167, align 1, !range !2
  %176 = icmp ne i8 %175, 0
  br label %177

177:                                              ; preds = %168, %174
  %178 = phi i1 [ %176, %174 ], [ true, %168 ]
  %179 = atomicrmw sub i32* %162, i32 1 seq_cst
  br label %180

180:                                              ; preds = %177, %158
  %181 = phi i1 [ %123, %158 ], [ %178, %177 ]
  %182 = atomicrmw sub i32* %18, i32 1 seq_cst
  br label %183

183:                                              ; preds = %180, %4
  %184 = phi i1 [ true, %4 ], [ %181, %180 ]
  ret i1 %184
}

; Function Attrs: optsize
declare zeroext i1 @_ZN4marl9Scheduler6Worker4waitERNS_4lockEPKNSt3__16chrono10time_pointINS5_12system_clockENS5_8durationIxNS4_5ratioILl1ELl1000000EEEEEEERKNS4_8functionIFbvEEE(%"class.marl::Scheduler::Worker"*, %"class.marl::lock"* dereferenceable(16), %"class.std::__1::chrono::time_point.449"*, %"class.std::__1::function.452"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbvEE11__call_implINS0_20__default_alloc_funcIZN4marl5Event6Shared10wait_untilINS_6chrono12system_clockENSA_8durationIxNS_5ratioILl1ELl1000000000EEEEEEEbRKNSA_10time_pointIT_T0_EEEUlvE_S2_EEEEbPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"struct.marl::Event::Shared"**
  %3 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %2, align 8
  %4 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %3, i64 0, i32 4
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__118condition_variable10wait_untilINS_6chrono12system_clockENS2_8durationIxNS_5ratioILl1ELl1000000000EEEEEEENS_9cv_statusERNS_11unique_lockINS_5mutexEEERKNS2_10time_pointIT_T0_EE(%"class.std::__1::condition_variable"*, %"class.std::__1::unique_lock"* dereferenceable(16), %"class.std::__1::chrono::time_point"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = tail call i64 @_ZNSt3__16chrono12system_clock3nowEv() #15
  %5 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %2, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = mul nsw i64 %4, 1000
  %8 = icmp slt i64 %7, %6
  br i1 %8, label %9, label %15

9:                                                ; preds = %3
  tail call void @_ZNSt3__118condition_variable15__do_timed_waitERNS_11unique_lockINS_5mutexEEENS_6chrono10time_pointINS5_12system_clockENS5_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE(%"class.std::__1::condition_variable"* %0, %"class.std::__1::unique_lock"* dereferenceable(16) %1, i64 %6) #15
  %10 = tail call i64 @_ZNSt3__16chrono12system_clock3nowEv() #15
  %11 = load i64, i64* %5, align 8
  %12 = mul nsw i64 %10, 1000
  %13 = icmp sge i64 %12, %11
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %3, %9
  %16 = phi i32 [ %14, %9 ], [ 1, %3 ]
  ret i32 %16
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__118condition_variable15__do_timed_waitERNS_11unique_lockINS_5mutexEEENS_6chrono10time_pointINS5_12system_clockENS5_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE(%"class.std::__1::condition_variable"*, %"class.std::__1::unique_lock"* dereferenceable(16), i64) local_unnamed_addr #5

; Function Attrs: optsize
declare i32 @_ZNK2vk9Semaphore16getSemaphoreTypeEv(%"class.vk::Semaphore"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk17TimelineSemaphore6Shared4waitINSt3__16chrono12system_clockENS4_8durationIxNS3_5ratioILl1ELl1000000000EEEEEEE8VkResultmNS4_10time_pointIT_T0_EE(%"struct.vk::TimelineSemaphore::Shared"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::chrono::time_point", align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.marl::lock", align 8
  %7 = alloca %class.anon.487, align 8
  %8 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %4, i64 0, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  store i64 %1, i64* %5, align 8
  %9 = bitcast %"class.marl::lock"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %6, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %6, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.vk::TimelineSemaphore::Shared", %"struct.vk::TimelineSemaphore::Shared"* %0, i64 0, i32 0, i32 0
  %13 = bitcast %"class.marl::lock"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  store %"class.std::__1::mutex"* %12, %"class.std::__1::mutex"** %10, align 8
  store i8 1, i8* %11, align 8
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %12) #15
  %14 = getelementptr inbounds %"struct.vk::TimelineSemaphore::Shared", %"struct.vk::TimelineSemaphore::Shared"* %0, i64 0, i32 1
  %15 = bitcast %class.anon.487* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #16
  %16 = getelementptr inbounds %class.anon.487, %class.anon.487* %7, i64 0, i32 0
  store %"struct.vk::TimelineSemaphore::Shared"* %0, %"struct.vk::TimelineSemaphore::Shared"** %16, align 8
  %17 = getelementptr inbounds %class.anon.487, %class.anon.487* %7, i64 0, i32 1
  store i64* %5, i64** %17, align 8
  %18 = call zeroext i1 @_ZN4marl17ConditionVariable10wait_untilINSt3__16chrono12system_clockENS3_8durationIxNS2_5ratioILl1ELl1000000000EEEEEZN2vk17TimelineSemaphore6Shared4waitIS4_S8_EE8VkResultmNS3_10time_pointIT_T0_EEEUlvE_EEbRNS_4lockERKSH_OT1_(%"class.marl::ConditionVariable"* %14, %"class.marl::lock"* nonnull dereferenceable(16) %6, %"class.std::__1::chrono::time_point"* nonnull dereferenceable(8) %4, %class.anon.487* nonnull dereferenceable(16) %7) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #16
  %19 = select i1 %18, i32 0, i32 2
  %20 = load i8, i8* %11, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %3
  %23 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %10, align 8
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %23) #15
  br label %24

24:                                               ; preds = %3, %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #16
  ret i32 %19
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4marl17ConditionVariable10wait_untilINSt3__16chrono12system_clockENS3_8durationIxNS2_5ratioILl1ELl1000000000EEEEEZN2vk17TimelineSemaphore6Shared4waitIS4_S8_EE8VkResultmNS3_10time_pointIT_T0_EEEUlvE_EEbRNS_4lockERKSH_OT1_(%"class.marl::ConditionVariable"*, %"class.marl::lock"* dereferenceable(16), %"class.std::__1::chrono::time_point"* dereferenceable(8), %class.anon.487* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %5 = alloca %"class.std::__1::chrono::time_point.449", align 8
  %6 = alloca %"struct.marl::Allocation::Request", align 8
  %7 = alloca %"struct.marl::Allocation", align 8
  %8 = alloca %"class.std::__1::function.452", align 16
  %9 = getelementptr inbounds %class.anon.487, %class.anon.487* %3, i64 0, i32 0
  %10 = load %"struct.vk::TimelineSemaphore::Shared"*, %"struct.vk::TimelineSemaphore::Shared"** %9, align 8
  %11 = getelementptr inbounds %"struct.vk::TimelineSemaphore::Shared", %"struct.vk::TimelineSemaphore::Shared"* %10, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %class.anon.487, %class.anon.487* %3, i64 0, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %12, %15
  br i1 %16, label %189, label %17

17:                                               ; preds = %4
  %18 = tail call %"class.marl::Scheduler::Fiber"* @_ZN4marl9Scheduler5Fiber7currentEv() #15
  %19 = ptrtoint %"class.marl::Scheduler::Fiber"* %18 to i64
  %20 = icmp eq %"class.marl::Scheduler::Fiber"* %18, null
  %21 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 seq_cst
  br i1 %20, label %164, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %24) #15
  %25 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 4
  %26 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %25, align 8
  %27 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %25 to i64*
  br label %79

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = icmp ugt i64 %32, 8
  %34 = select i1 %33, i64 %32, i64 8
  %35 = mul i64 %34, 24
  %36 = add i64 %35, 40
  %37 = bitcast %"struct.marl::Allocation::Request"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #16
  %38 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %6, i64 0, i32 0
  %39 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %6, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 24, i1 false) #16
  %40 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %6, i64 0, i32 2
  %41 = bitcast i8* %40 to i16*
  store i16 1024, i16* %41, align 8
  store i64 %36, i64* %38, align 8
  store i64 8, i64* %39, align 8
  %42 = bitcast %"struct.marl::Allocation"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #16
  %43 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 32, i1 false) #16
  %44 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %43, align 8
  %45 = bitcast %"class.marl::Allocator"* %44 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %46 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %46, i64 2
  %48 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %47, align 8
  call void %48(%"struct.marl::Allocation"* nonnull sret %7, %"class.marl::Allocator"* %44, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %6) #15
  %49 = bitcast %"struct.marl::Allocation"* %7 to %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"**
  %50 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %49, align 8
  %51 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %25 to i64*
  br label %52

52:                                               ; preds = %63, %30
  %53 = phi i64 [ 0, %30 ], [ %64, %63 ]
  %54 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %50, i64 %53
  %55 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %50, i64 %53, i32 2
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* null, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %55, align 8
  %56 = load i64, i64* %51, align 8
  %57 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %50, i64 %53, i32 1
  %58 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %25, align 8
  %60 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %59, i64 0, i32 2
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %54, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %62, align 8
  br label %63

63:                                               ; preds = %61, %52
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %54, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %25, align 8
  %64 = add nuw i64 %53, 1
  %65 = icmp eq i64 %64, %34
  br i1 %65, label %66, label %52

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %7, i64 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* nonnull align 8 %42, i64 32, i1 false) #16
  %70 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 3
  %71 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds i8, i8* %69, i64 32
  %74 = bitcast i8* %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"** %70 to i8**
  store i8* %69, i8** %75, align 8
  %76 = load i64, i64* %31, align 8
  %77 = add i64 %76, %34
  store i64 %77, i64* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #16
  %78 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %25, align 8
  br label %79

79:                                               ; preds = %66, %28
  %80 = phi i64* [ %29, %28 ], [ %51, %66 ]
  %81 = phi %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* [ %26, %28 ], [ %78, %66 ]
  %82 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %81, i64 0, i32 1
  %83 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %82 to i64*
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %80, align 8
  %85 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %81, i64 0, i32 2
  %86 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %85, align 8
  %87 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %79
  %89 = load i64, i64* %83, align 8
  %90 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %86, i64 0, i32 1
  %91 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %90 to i64*
  store i64 %89, i64* %91, align 8
  br label %92

92:                                               ; preds = %88, %79
  %93 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %82, align 8
  %94 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %92
  %96 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %85 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %93, i64 0, i32 2
  %99 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %98 to i64*
  store i64 %97, i64* %99, align 8
  br label %100

100:                                              ; preds = %95, %92
  %101 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #16
  %102 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 5
  %103 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %102, align 8
  %104 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %103, null
  br i1 %104, label %108, label %105

105:                                              ; preds = %100
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %103, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %82, align 8
  %106 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %102, align 8
  %107 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %106, i64 0, i32 2
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %81, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %107, align 8
  br label %108

108:                                              ; preds = %100, %105
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %81, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %102, align 8
  %109 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %81 to i64*
  store i64 %19, i64* %109, align 8
  %110 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 1, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, 1
  store i64 %112, i64* %110, align 8
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %24) #15
  %113 = bitcast %"class.std::__1::function.452"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %113) #16
  %114 = bitcast %class.anon.487* %3 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::function.452", %"class.std::__1::function.452"* %8, i64 0, i32 0, i32 1, i32 0
  %117 = getelementptr inbounds %"class.std::__1::function.452", %"class.std::__1::function.452"* %8, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFbvEE11__call_implINS0_20__default_alloc_funcIZN2vk17TimelineSemaphore6Shared4waitINS_6chrono12system_clockENSA_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE8VkResultmNSA_10time_pointIT_T0_EEEUlvE_S2_EEEEbPKNS0_16__policy_storageE, i1 (%"union.std::__1::__function::__policy_storage"*)** %116, align 16
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2vk17TimelineSemaphore6Shared4waitINS_6chrono12system_clockENS8_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE8VkResultmNS8_10time_pointIT_T0_EEEUlvE_FbvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %117, align 8
  %118 = bitcast %"class.std::__1::function.452"* %8 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %118, align 16
  %119 = bitcast %"class.std::__1::chrono::time_point.449"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #16
  %120 = getelementptr inbounds %"class.std::__1::chrono::time_point.449", %"class.std::__1::chrono::time_point.449"* %5, i64 0, i32 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %2, i64 0, i32 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = sdiv i64 %122, 1000
  store i64 %123, i64* %120, align 8
  %124 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %18, i64 0, i32 3
  %125 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** %124, align 8
  %126 = call zeroext i1 @_ZN4marl9Scheduler6Worker4waitERNS_4lockEPKNSt3__16chrono10time_pointINS5_12system_clockENS5_8durationIxNS4_5ratioILl1ELl1000000EEEEEEERKNS4_8functionIFbvEEE(%"class.marl::Scheduler::Worker"* %125, %"class.marl::lock"* dereferenceable(16) %1, %"class.std::__1::chrono::time_point.449"* nonnull %5, %"class.std::__1::function.452"* nonnull dereferenceable(32) %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #16
  %127 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %117, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %127, i64 0, i32 1
  %129 = load void (i8*)*, void (i8*)** %128, align 8
  %130 = icmp eq void (i8*)* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %108
  %132 = getelementptr inbounds %"class.std::__1::function.452", %"class.std::__1::function.452"* %8, i64 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 16
  call void %129(i8* %133) #15
  br label %134

134:                                              ; preds = %108, %131
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %113) #16
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %24) #15
  %135 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %102, align 8
  %136 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %135, %81
  br i1 %136, label %137, label %140

137:                                              ; preds = %134
  %138 = load i64, i64* %83, align 8
  %139 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %102 to i64*
  store i64 %138, i64* %139, align 8
  br label %140

140:                                              ; preds = %137, %134
  %141 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %85, align 8
  %142 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %141, null
  br i1 %142, label %147, label %143

143:                                              ; preds = %140
  %144 = load i64, i64* %83, align 8
  %145 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %141, i64 0, i32 1
  %146 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %145 to i64*
  store i64 %144, i64* %146, align 8
  br label %147

147:                                              ; preds = %143, %140
  %148 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %82, align 8
  %149 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %148, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %147
  %151 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %85 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %148, i64 0, i32 2
  %154 = bitcast %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %153 to i64*
  store i64 %152, i64* %154, align 8
  br label %155

155:                                              ; preds = %150, %147
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #16
  %156 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %25, align 8
  %157 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %156, null
  br i1 %157, label %161, label %158

158:                                              ; preds = %155
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %156, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %82, align 8
  %159 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %25, align 8
  %160 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %159, i64 0, i32 2
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %81, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %160, align 8
  br label %161

161:                                              ; preds = %158, %155
  store %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %81, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %25, align 8
  %162 = load i64, i64* %110, align 8
  %163 = add i64 %162, -1
  store i64 %163, i64* %110, align 8
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %24) #15
  br label %186

164:                                              ; preds = %17
  %165 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = atomicrmw add i32* %165, i32 1 seq_cst
  %167 = getelementptr inbounds %"class.marl::ConditionVariable", %"class.marl::ConditionVariable"* %0, i64 0, i32 2
  %168 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %1, i64 0, i32 0
  %169 = load %"struct.vk::TimelineSemaphore::Shared"*, %"struct.vk::TimelineSemaphore::Shared"** %9, align 8
  %170 = load i64*, i64** %13, align 8
  %171 = getelementptr inbounds %"struct.vk::TimelineSemaphore::Shared", %"struct.vk::TimelineSemaphore::Shared"* %169, i64 0, i32 2
  br label %172

172:                                              ; preds = %176, %164
  %173 = load i64, i64* %171, align 8
  %174 = load i64, i64* %170, align 8
  %175 = icmp eq i64 %173, %174
  br i1 %175, label %183, label %176

176:                                              ; preds = %172
  %177 = tail call i32 @_ZNSt3__118condition_variable10wait_untilINS_6chrono12system_clockENS2_8durationIxNS_5ratioILl1ELl1000000000EEEEEEENS_9cv_statusERNS_11unique_lockINS_5mutexEEERKNS2_10time_pointIT_T0_EE(%"class.std::__1::condition_variable"* %167, %"class.std::__1::unique_lock"* dereferenceable(16) %168, %"class.std::__1::chrono::time_point"* dereferenceable(8) %2) #15
  %178 = icmp eq i32 %177, 1
  br i1 %178, label %179, label %172

179:                                              ; preds = %176
  %180 = load i64, i64* %171, align 8
  %181 = load i64, i64* %170, align 8
  %182 = icmp eq i64 %180, %181
  br label %183

183:                                              ; preds = %172, %179
  %184 = phi i1 [ %182, %179 ], [ true, %172 ]
  %185 = atomicrmw sub i32* %165, i32 1 seq_cst
  br label %186

186:                                              ; preds = %183, %161
  %187 = phi i1 [ %126, %161 ], [ %184, %183 ]
  %188 = atomicrmw sub i32* %21, i32 1 seq_cst
  br label %189

189:                                              ; preds = %186, %4
  %190 = phi i1 [ true, %4 ], [ %187, %186 ]
  ret i1 %190
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbvEE11__call_implINS0_20__default_alloc_funcIZN2vk17TimelineSemaphore6Shared4waitINS_6chrono12system_clockENSA_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE8VkResultmNSA_10time_pointIT_T0_EEEUlvE_S2_EEEEbPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"struct.vk::TimelineSemaphore::Shared"**
  %3 = load %"struct.vk::TimelineSemaphore::Shared"*, %"struct.vk::TimelineSemaphore::Shared"** %2, align 8
  %4 = getelementptr inbounds %"struct.vk::TimelineSemaphore::Shared", %"struct.vk::TimelineSemaphore::Shared"* %3, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %7 = bitcast [8 x i8]* %6 to i64**
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %5, %9
  ret i1 %10
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.374"*, i8 } @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.370"*, %"class.vk::ImageView"** dereferenceable(8), %"class.vk::ImageView"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.vk::ImageView"*, %"class.vk::ImageView"** %1, align 8
  %5 = ptrtoint %"class.vk::ImageView"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #16, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.374"**, %"struct.std::__1::__hash_node_base.374"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.374"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.374"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.374"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.374"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.374"* %62 to %"class.vk::ImageView"**
  %64 = load %"class.vk::ImageView"*, %"class.vk::ImageView"** %63, align 8
  %65 = icmp eq %"class.vk::ImageView"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #17, !noalias !10
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.vk::ImageView"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !10
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !10
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !10
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.374"**
  store %"struct.std::__1::__hash_node_base.374"* null, %"struct.std::__1::__hash_node_base.374"** %75, align 8, !noalias !10
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #16, !range !3
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #16
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table.370"* %0, i64 %98) #18
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #16, !range !3
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.374"**, %"struct.std::__1::__hash_node_base.374"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.374"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.374"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.374"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.374"* %118, %"struct.std::__1::__hash_node_base.374"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.374"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.374"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #16, !range !3
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.374"**, %"struct.std::__1::__hash_node_base.374"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.374"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.374"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.374"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.374"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.374"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.374"*, i8 } undef, %"struct.std::__1::__hash_node_base.374"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.374"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.374"*, i8 } %158
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table.370"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.370"* %0, i64 %10) #18
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.370"* %0, i64 %42) #18
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.370"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %107, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #20
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.374"**, %"struct.std::__1::__hash_node_base.374"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.370"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.374"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.374"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.376", %"class.std::__1::__bucket_list_deallocator.376"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  br label %24

19:                                               ; preds = %24
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %20, i64 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.374"* %22, null
  br i1 %23, label %115, label %30

24:                                               ; preds = %24, %17
  %25 = phi i64 [ %28, %24 ], [ 0, %17 ]
  %26 = load %"struct.std::__1::__hash_node_base.374"**, %"struct.std::__1::__hash_node_base.374"*** %11, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %26, i64 %25
  store %"struct.std::__1::__hash_node_base.374"* null, %"struct.std::__1::__hash_node_base.374"** %27, align 8
  %28 = add nuw i64 %25, 1
  %29 = icmp eq i64 %28, %1
  br i1 %29, label %19, label %24

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %22, i64 1
  %32 = bitcast %"struct.std::__1::__hash_node_base.374"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !3
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = add i64 %1, -1
  %38 = and i64 %33, %37
  br label %43

39:                                               ; preds = %30
  %40 = icmp ult i64 %33, %1
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %33, %1
  br label %43

43:                                               ; preds = %36, %39, %41
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %33, %39 ]
  %45 = load %"struct.std::__1::__hash_node_base.374"**, %"struct.std::__1::__hash_node_base.374"*** %11, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base.374"* %20, %"struct.std::__1::__hash_node_base.374"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %22, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.374"* %48, null
  br i1 %49, label %115, label %50

50:                                               ; preds = %43
  %51 = add i64 %1, -1
  br label %52

52:                                               ; preds = %50, %101
  %53 = phi %"struct.std::__1::__hash_node_base.374"* [ %48, %50 ], [ %105, %101 ]
  %54 = phi i64 [ %44, %50 ], [ %103, %101 ]
  %55 = phi %"struct.std::__1::__hash_node_base.374"* [ %22, %50 ], [ %102, %101 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %53, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base.374"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  br i1 %35, label %61, label %59

59:                                               ; preds = %52
  %60 = and i64 %58, %51
  br label %65

61:                                               ; preds = %52
  %62 = icmp ult i64 %58, %1
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %58, %1
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %58, %61 ]
  %67 = icmp eq i64 %66, %54
  br i1 %67, label %101, label %68

68:                                               ; preds = %65
  %69 = load %"struct.std::__1::__hash_node_base.374"**, %"struct.std::__1::__hash_node_base.374"*** %11, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %69, i64 %66
  %71 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.374"* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %53, i64 2
  %75 = bitcast %"struct.std::__1::__hash_node_base.374"* %74 to %"class.vk::ImageView"**
  br label %77

76:                                               ; preds = %68
  store %"struct.std::__1::__hash_node_base.374"* %55, %"struct.std::__1::__hash_node_base.374"** %70, align 8
  br label %101

77:                                               ; preds = %73, %82
  %78 = phi %"struct.std::__1::__hash_node_base.374"* [ %80, %82 ], [ %53, %73 ]
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %78, i64 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %79, align 8
  %81 = icmp eq %"struct.std::__1::__hash_node_base.374"* %80, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %80, i64 2
  %84 = bitcast %"struct.std::__1::__hash_node_base.374"* %83 to %"class.vk::ImageView"**
  %85 = load %"class.vk::ImageView"*, %"class.vk::ImageView"** %75, align 8
  %86 = load %"class.vk::ImageView"*, %"class.vk::ImageView"** %84, align 8
  %87 = icmp eq %"class.vk::ImageView"* %85, %86
  br i1 %87, label %77, label %88

88:                                               ; preds = %77, %82
  %89 = ptrtoint %"struct.std::__1::__hash_node_base.374"* %80 to i64
  %90 = bitcast %"struct.std::__1::__hash_node_base.374"* %78 to i64*
  %91 = bitcast %"struct.std::__1::__hash_node_base.374"* %55 to i64*
  store i64 %89, i64* %91, align 8
  %92 = load %"struct.std::__1::__hash_node_base.374"**, %"struct.std::__1::__hash_node_base.374"*** %11, align 8
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %92, i64 %66
  %94 = bitcast %"struct.std::__1::__hash_node_base.374"** %93 to i64**
  %95 = load i64*, i64** %94, align 8
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %90, align 8
  %97 = load %"struct.std::__1::__hash_node_base.374"**, %"struct.std::__1::__hash_node_base.374"*** %11, align 8
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %97, i64 %66
  %99 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %99, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.374"* %53, %"struct.std::__1::__hash_node_base.374"** %100, align 8
  br label %101

101:                                              ; preds = %65, %88, %76
  %102 = phi %"struct.std::__1::__hash_node_base.374"* [ %53, %76 ], [ %55, %88 ], [ %53, %65 ]
  %103 = phi i64 [ %66, %76 ], [ %54, %88 ], [ %54, %65 ]
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %102, i64 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.374"* %105, null
  br i1 %106, label %115, label %52

107:                                              ; preds = %2
  %108 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.374"**, %"struct.std::__1::__hash_node_base.374"*** %108, align 8
  store %"struct.std::__1::__hash_node_base.374"** null, %"struct.std::__1::__hash_node_base.374"*** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.374"** %109, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %107
  %112 = bitcast %"struct.std::__1::__hash_node_base.374"** %109 to i8*
  tail call void @_ZdlPv(i8* %112) #17
  br label %113

113:                                              ; preds = %107, %111
  %114 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.376", %"class.std::__1::__bucket_list_deallocator.376"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %114, align 8
  br label %115

115:                                              ; preds = %101, %43, %19, %113
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.374"* @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(%"class.std::__1::__hash_table.370"*, %"class.vk::ImageView"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.vk::ImageView"*, %"class.vk::ImageView"** %1, align 8
  %4 = ptrtoint %"class.vk::ImageView"* %3 to i64
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %69, label %21

21:                                               ; preds = %2
  %22 = tail call i64 @llvm.ctpop.i64(i64 %19) #16, !range !3
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %17, %25
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.374"**, %"struct.std::__1::__hash_node_base.374"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.374"* %36, null
  br i1 %37, label %69, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.374"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  br label %44

44:                                               ; preds = %42, %65
  %45 = phi %"struct.std::__1::__hash_node_base.374"* [ %40, %42 ], [ %67, %65 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base.374"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %17
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %23, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %43
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %19
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %19
  br label %57

57:                                               ; preds = %51, %53, %55
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %32
  br i1 %59, label %65, label %69

60:                                               ; preds = %44
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base.374"* %61 to %"class.vk::ImageView"**
  %63 = load %"class.vk::ImageView"*, %"class.vk::ImageView"** %62, align 8
  %64 = icmp eq %"class.vk::ImageView"* %63, %3
  br i1 %64, label %69, label %65

65:                                               ; preds = %57, %60
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %45, i64 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base.374"* %67, null
  br i1 %68, label %69, label %44

69:                                               ; preds = %60, %65, %57, %38, %2, %31
  %70 = phi %"struct.std::__1::__hash_node_base.374"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %45, %60 ], [ null, %65 ], [ null, %57 ]
  ret %"struct.std::__1::__hash_node_base.374"* %70
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.374"* @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(%"class.std::__1::__hash_table.370"*, %"struct.std::__1::__hash_node_base.374"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.494", align 8
  %4 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %1, i64 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %4, align 8
  call void @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(%"class.std::__1::unique_ptr.494"* nonnull sret %3, %"class.std::__1::__hash_table.370"* %0, %"struct.std::__1::__hash_node_base.374"* %1) #15
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.494", %"class.std::__1::unique_ptr.494"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::__hash_node.493"*, %"struct.std::__1::__hash_node.493"** %6, align 8
  store %"struct.std::__1::__hash_node.493"* null, %"struct.std::__1::__hash_node.493"** %6, align 8
  %8 = icmp eq %"struct.std::__1::__hash_node.493"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = bitcast %"struct.std::__1::__hash_node.493"* %7 to i8*
  call void @_ZdlPv(i8* %10) #17
  br label %11

11:                                               ; preds = %2, %9
  ret %"struct.std::__1::__hash_node_base.374"* %5
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(%"class.std::__1::unique_ptr.494"* noalias sret, %"class.std::__1::__hash_table.370"*, %"struct.std::__1::__hash_node_base.374"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.374"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #16, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.374"**, %"struct.std::__1::__hash_node_base.374"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.374"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.374"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.381", %"class.std::__1::__compressed_pair.381"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.374"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.374"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.374"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.374"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.374"* null, %"struct.std::__1::__hash_node_base.374"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.374"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.374"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374", %"struct.std::__1::__hash_node_base.374"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.374"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.374"**, %"struct.std::__1::__hash_node_base.374"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.374"*, %"struct.std::__1::__hash_node_base.374"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.374"* %25, %"struct.std::__1::__hash_node_base.374"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.374"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.374"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.374"* null, %"struct.std::__1::__hash_node_base.374"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.370", %"class.std::__1::__hash_table.370"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.374"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.494"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.494", %"class.std::__1::unique_ptr.494"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.384"** %98 to %"class.std::__1::__compressed_pair.381"**
  store %"class.std::__1::__compressed_pair.381"* %30, %"class.std::__1::__compressed_pair.381"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.494", %"class.std::__1::unique_ptr.494"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nounwind optsize }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind optsize }
attributes #18 = { optsize }
attributes #19 = { nounwind optsize readonly }
attributes #20 = { noreturn nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSP_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINSI_ISX_EEEEEEmOT_DpOT0_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSP_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINSI_ISX_EEEEEEmOT_DpOT0_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKS3_S6_EEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISL_EEEEEEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16__treeINS_12__value_typeIN2vk12SamplerStateENS2_6Device14SamplerIndexer10IdentifierEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKS3_S6_EEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISL_EEEEEEDpOT_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE21__construct_node_hashIRKS3_JEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINS8_ISH_EEEEEEmOT_DpOT0_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE21__construct_node_hashIRKS3_JEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINS8_ISH_EEEEEEmOT_DpOT0_"}
