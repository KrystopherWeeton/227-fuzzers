; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-ot-shape-complex-use.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-ot-shape-complex-use.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.hb_ot_shape_planner_t = type { %struct.hb_face_t*, %struct.hb_segment_properties_t, %struct.hb_ot_map_builder_t, %struct.hb_aat_map_builder_t, i8, %struct.hb_ot_complex_shaper_t* }
%struct.hb_face_t = type { %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, %struct.hb_shaper_object_dataset_t, %struct.hb_ot_face_t, %struct.hb_atomic_ptr_t.126 }
%struct.hb_object_header_t = type { %struct.hb_reference_count_t, %struct.hb_atomic_int_t, %struct.hb_atomic_ptr_t }
%struct.hb_reference_count_t = type { %struct.hb_atomic_int_t }
%struct.hb_atomic_ptr_t = type { %struct.hb_user_data_array_t* }
%struct.hb_user_data_array_t = type { %struct.hb_mutex_t, %struct.hb_lockable_set_t }
%struct.hb_mutex_t = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.hb_lockable_set_t = type { %struct.hb_vector_t }
%struct.hb_vector_t = type { i32, i32, %"struct.hb_user_data_array_t::hb_user_data_item_t"* }
%"struct.hb_user_data_array_t::hb_user_data_item_t" = type { %struct.hb_user_data_key_t*, i8*, void (i8*)* }
%struct.hb_user_data_key_t = type { i8 }
%struct.hb_blob_t = type { %struct.hb_object_header_t, i8*, i32, i32, i8*, void (i8*)* }
%struct.hb_atomic_int_t = type { i32 }
%struct.hb_shaper_object_dataset_t = type { %struct.hb_face_t*, %struct.hb_shaper_lazy_loader_t }
%struct.hb_shaper_lazy_loader_t = type { %struct.hb_lazy_loader_t }
%struct.hb_lazy_loader_t = type { %struct.hb_atomic_ptr_t.0 }
%struct.hb_atomic_ptr_t.0 = type { %struct.hb_ot_face_data_t* }
%struct.hb_ot_face_data_t = type opaque
%struct.hb_ot_face_t = type { %struct.hb_face_t*, %struct.hb_table_lazy_loader_t, %struct.hb_face_lazy_loader_t, %struct.hb_table_lazy_loader_t.6, %struct.hb_face_lazy_loader_t.9, %struct.hb_table_lazy_loader_t.13, %struct.hb_face_lazy_loader_t.16, %struct.hb_face_lazy_loader_t.20, %struct.hb_table_lazy_loader_t.24, %struct.hb_face_lazy_loader_t.27, %struct.hb_table_lazy_loader_t.31, %struct.hb_face_lazy_loader_t.34, %struct.hb_face_lazy_loader_t.38, %struct.hb_face_lazy_loader_t.42, %struct.hb_face_lazy_loader_t.46, %struct.hb_table_lazy_loader_t.50, %struct.hb_table_lazy_loader_t.53, %struct.hb_table_lazy_loader_t.56, %struct.hb_face_lazy_loader_t.59, %struct.hb_table_lazy_loader_t.63, %struct.hb_table_lazy_loader_t.66, %struct.hb_face_lazy_loader_t.69, %struct.hb_face_lazy_loader_t.73, %struct.hb_face_lazy_loader_t.77, %struct.hb_table_lazy_loader_t.81, %struct.hb_table_lazy_loader_t.84, %struct.hb_table_lazy_loader_t.87, %struct.hb_table_lazy_loader_t.90, %struct.hb_table_lazy_loader_t.93, %struct.hb_table_lazy_loader_t.96, %struct.hb_table_lazy_loader_t.99, %struct.hb_table_lazy_loader_t.102, %struct.hb_table_lazy_loader_t.105, %struct.hb_table_lazy_loader_t.108, %struct.hb_face_lazy_loader_t.111, %struct.hb_face_lazy_loader_t.115, %struct.hb_face_lazy_loader_t.119, %struct.hb_table_lazy_loader_t.123 }
%struct.hb_table_lazy_loader_t = type { %struct.hb_lazy_loader_t.1 }
%struct.hb_lazy_loader_t.1 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.2 = type { %struct.hb_blob_t* }
%struct.hb_face_lazy_loader_t = type { %struct.hb_lazy_loader_t.3 }
%struct.hb_lazy_loader_t.3 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_atomic_ptr_t.5 = type { %"struct.OT::cmap_accelerator_t"* }
%"struct.OT::cmap_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.6 = type { %struct.hb_lazy_loader_t.7 }
%struct.hb_lazy_loader_t.7 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.9 = type { %struct.hb_lazy_loader_t.10 }
%struct.hb_lazy_loader_t.10 = type { %struct.hb_atomic_ptr_t.12 }
%struct.hb_atomic_ptr_t.12 = type { %"struct.OT::hmtx_accelerator_t"* }
%"struct.OT::hmtx_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.13 = type { %struct.hb_lazy_loader_t.14 }
%struct.hb_lazy_loader_t.14 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.16 = type { %struct.hb_lazy_loader_t.17 }
%struct.hb_lazy_loader_t.17 = type { %struct.hb_atomic_ptr_t.19 }
%struct.hb_atomic_ptr_t.19 = type { %"struct.OT::post_accelerator_t"* }
%"struct.OT::post_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.20 = type { %struct.hb_lazy_loader_t.21 }
%struct.hb_lazy_loader_t.21 = type { %struct.hb_atomic_ptr_t.23 }
%struct.hb_atomic_ptr_t.23 = type { %"struct.OT::name_accelerator_t"* }
%"struct.OT::name_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.24 = type { %struct.hb_lazy_loader_t.25 }
%struct.hb_lazy_loader_t.25 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.27 = type { %struct.hb_lazy_loader_t.28 }
%struct.hb_lazy_loader_t.28 = type { %struct.hb_atomic_ptr_t.30 }
%struct.hb_atomic_ptr_t.30 = type { %"struct.OT::meta_accelerator_t"* }
%"struct.OT::meta_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.31 = type { %struct.hb_lazy_loader_t.32 }
%struct.hb_lazy_loader_t.32 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.34 = type { %struct.hb_lazy_loader_t.35 }
%struct.hb_lazy_loader_t.35 = type { %struct.hb_atomic_ptr_t.37 }
%struct.hb_atomic_ptr_t.37 = type { %"struct.OT::vmtx_accelerator_t"* }
%"struct.OT::vmtx_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.38 = type { %struct.hb_lazy_loader_t.39 }
%struct.hb_lazy_loader_t.39 = type { %struct.hb_atomic_ptr_t.41 }
%struct.hb_atomic_ptr_t.41 = type { %"struct.OT::glyf_accelerator_t"* }
%"struct.OT::glyf_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.42 = type { %struct.hb_lazy_loader_t.43 }
%struct.hb_lazy_loader_t.43 = type { %struct.hb_atomic_ptr_t.45 }
%struct.hb_atomic_ptr_t.45 = type { %"struct.OT::cff1_accelerator_t"* }
%"struct.OT::cff1_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.46 = type { %struct.hb_lazy_loader_t.47 }
%struct.hb_lazy_loader_t.47 = type { %struct.hb_atomic_ptr_t.49 }
%struct.hb_atomic_ptr_t.49 = type { %"struct.OT::cff2_accelerator_t"* }
%"struct.OT::cff2_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.50 = type { %struct.hb_lazy_loader_t.51 }
%struct.hb_lazy_loader_t.51 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.53 = type { %struct.hb_lazy_loader_t.54 }
%struct.hb_lazy_loader_t.54 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.56 = type { %struct.hb_lazy_loader_t.57 }
%struct.hb_lazy_loader_t.57 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.59 = type { %struct.hb_lazy_loader_t.60 }
%struct.hb_lazy_loader_t.60 = type { %struct.hb_atomic_ptr_t.62 }
%struct.hb_atomic_ptr_t.62 = type { %"struct.OT::gvar_accelerator_t"* }
%"struct.OT::gvar_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.63 = type { %struct.hb_lazy_loader_t.64 }
%struct.hb_lazy_loader_t.64 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.66 = type { %struct.hb_lazy_loader_t.67 }
%struct.hb_lazy_loader_t.67 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.69 = type { %struct.hb_lazy_loader_t.70 }
%struct.hb_lazy_loader_t.70 = type { %struct.hb_atomic_ptr_t.72 }
%struct.hb_atomic_ptr_t.72 = type { %"struct.OT::GDEF_accelerator_t"* }
%"struct.OT::GDEF_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.73 = type { %struct.hb_lazy_loader_t.74 }
%struct.hb_lazy_loader_t.74 = type { %struct.hb_atomic_ptr_t.76 }
%struct.hb_atomic_ptr_t.76 = type { %"struct.OT::GSUB_accelerator_t"* }
%"struct.OT::GSUB_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.77 = type { %struct.hb_lazy_loader_t.78 }
%struct.hb_lazy_loader_t.78 = type { %struct.hb_atomic_ptr_t.80 }
%struct.hb_atomic_ptr_t.80 = type { %"struct.OT::GPOS_accelerator_t"* }
%"struct.OT::GPOS_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.81 = type { %struct.hb_lazy_loader_t.82 }
%struct.hb_lazy_loader_t.82 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.84 = type { %struct.hb_lazy_loader_t.85 }
%struct.hb_lazy_loader_t.85 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.87 = type { %struct.hb_lazy_loader_t.88 }
%struct.hb_lazy_loader_t.88 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.90 = type { %struct.hb_lazy_loader_t.91 }
%struct.hb_lazy_loader_t.91 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.93 = type { %struct.hb_lazy_loader_t.94 }
%struct.hb_lazy_loader_t.94 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.96 = type { %struct.hb_lazy_loader_t.97 }
%struct.hb_lazy_loader_t.97 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.99 = type { %struct.hb_lazy_loader_t.100 }
%struct.hb_lazy_loader_t.100 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.102 = type { %struct.hb_lazy_loader_t.103 }
%struct.hb_lazy_loader_t.103 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.105 = type { %struct.hb_lazy_loader_t.106 }
%struct.hb_lazy_loader_t.106 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.108 = type { %struct.hb_lazy_loader_t.109 }
%struct.hb_lazy_loader_t.109 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.111 = type { %struct.hb_lazy_loader_t.112 }
%struct.hb_lazy_loader_t.112 = type { %struct.hb_atomic_ptr_t.114 }
%struct.hb_atomic_ptr_t.114 = type { %"struct.OT::CBDT_accelerator_t"* }
%"struct.OT::CBDT_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.115 = type { %struct.hb_lazy_loader_t.116 }
%struct.hb_lazy_loader_t.116 = type { %struct.hb_atomic_ptr_t.118 }
%struct.hb_atomic_ptr_t.118 = type { %"struct.OT::sbix_accelerator_t"* }
%"struct.OT::sbix_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.119 = type { %struct.hb_lazy_loader_t.120 }
%struct.hb_lazy_loader_t.120 = type { %struct.hb_atomic_ptr_t.122 }
%struct.hb_atomic_ptr_t.122 = type { %"struct.OT::SVG_accelerator_t"* }
%"struct.OT::SVG_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.123 = type { %struct.hb_lazy_loader_t.124 }
%struct.hb_lazy_loader_t.124 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.126 = type { %"struct.hb_face_t::plan_node_t"* }
%"struct.hb_face_t::plan_node_t" = type { %struct.hb_shape_plan_t*, %"struct.hb_face_t::plan_node_t"* }
%struct.hb_shape_plan_t = type { %struct.hb_object_header_t, %struct.hb_face_t*, %struct.hb_shape_plan_key_t, %struct.hb_ot_shape_plan_t }
%struct.hb_shape_plan_key_t = type { %struct.hb_segment_properties_t, %struct.hb_feature_t*, i32, %struct.hb_ot_shape_plan_key_t, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)*, i8* }
%struct.hb_feature_t = type { i32, i32, i32, i32 }
%struct.hb_ot_shape_plan_key_t = type { [2 x i32] }
%struct.hb_font_t = type { %struct.hb_object_header_t, %struct.hb_font_t*, %struct.hb_face_t*, i32, i32, i64, i64, i32, i32, float, i32, i32*, float*, %struct.hb_font_funcs_t*, i8*, void (i8*)*, %struct.hb_shaper_object_dataset_t.128 }
%struct.hb_font_funcs_t = type { %struct.hb_object_header_t, %struct.anon, %struct.anon.127, %"union.hb_font_funcs_t::get_t" }
%struct.anon = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.127 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%"union.hb_font_funcs_t::get_t" = type { %"struct.hb_font_funcs_t::get_t::get_funcs_t" }
%"struct.hb_font_funcs_t::get_t::get_funcs_t" = type { i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i8*, i32, i32*, i8*)* }
%struct.hb_font_extents_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hb_glyph_extents_t = type { i32, i32, i32, i32 }
%struct.hb_shaper_object_dataset_t.128 = type { %struct.hb_font_t*, %struct.hb_shaper_lazy_loader_t.129 }
%struct.hb_shaper_lazy_loader_t.129 = type { %struct.hb_lazy_loader_t.130 }
%struct.hb_lazy_loader_t.130 = type { %struct.hb_atomic_ptr_t.132 }
%struct.hb_atomic_ptr_t.132 = type { %struct.hb_ot_font_data_t* }
%struct.hb_ot_font_data_t = type opaque
%struct.hb_buffer_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hb_segment_properties_t, i8, i8, i8, i32, i32, i32, i32, %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t*, %struct.hb_glyph_position_t*, i32, [2 x [5 x i32]], [2 x i32], i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i8*, void (i8*)* }
%struct.hb_unicode_funcs_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, %struct.anon.133, %struct.anon.134, %struct.anon.135 }
%struct.anon.133 = type { i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i8*)* }
%struct.anon.134 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.135 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%struct.hb_glyph_info_t = type { i32, i32, i32, %union._hb_var_int_t, %union._hb_var_int_t }
%union._hb_var_int_t = type { i32 }
%struct.hb_glyph_position_t = type { i32, i32, i32, i32, %union._hb_var_int_t }
%struct.hb_ot_shape_plan_t = type <{ %struct.hb_segment_properties_t, %struct.hb_ot_complex_shaper_t*, %struct.hb_ot_map_t, %struct.hb_aat_map_t, i8*, i32, i32, i32, i32, i32, i32, i16, [6 x i8] }>
%struct.hb_ot_map_t = type { [2 x i32], [2 x i8], i32, %struct.hb_sorted_vector_t, [2 x %struct.hb_vector_t.137], [2 x %struct.hb_vector_t.138] }
%struct.hb_sorted_vector_t = type { %struct.hb_vector_t.136 }
%struct.hb_vector_t.136 = type { i32, i32, %"struct.hb_ot_map_t::feature_map_t"* }
%"struct.hb_ot_map_t::feature_map_t" = type { i32, [2 x i32], [2 x i32], i32, i32, i32, i8 }
%struct.hb_vector_t.137 = type { i32, i32, %"struct.hb_ot_map_t::lookup_map_t"* }
%"struct.hb_ot_map_t::lookup_map_t" = type { i16, i8, i32 }
%struct.hb_vector_t.138 = type { i32, i32, %"struct.hb_ot_map_t::stage_map_t"* }
%"struct.hb_ot_map_t::stage_map_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_t = type { %struct.hb_vector_t.139 }
%struct.hb_vector_t.139 = type { i32, i32, i32* }
%struct.hb_segment_properties_t = type { i32, i32, %struct.hb_language_impl_t*, i8*, i8* }
%struct.hb_language_impl_t = type opaque
%struct.hb_ot_map_builder_t = type { %struct.hb_face_t*, %struct.hb_segment_properties_t, [2 x i32], [2 x i8], [2 x i32], [2 x i32], [2 x i32], %struct.hb_vector_t.140, [2 x %struct.hb_vector_t.141] }
%struct.hb_vector_t.140 = type { i32, i32, %"struct.hb_ot_map_builder_t::feature_info_t"* }
%"struct.hb_ot_map_builder_t::feature_info_t" = type { i32, i32, i32, i32, i32, [2 x i32] }
%struct.hb_vector_t.141 = type { i32, i32, %"struct.hb_ot_map_builder_t::stage_info_t"* }
%"struct.hb_ot_map_builder_t::stage_info_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_builder_t = type { %struct.hb_face_t*, %struct.hb_sorted_vector_t.142 }
%struct.hb_sorted_vector_t.142 = type { %struct.hb_vector_t.143 }
%struct.hb_vector_t.143 = type { i32, i32, %"struct.hb_aat_map_builder_t::feature_info_t"* }
%"struct.hb_aat_map_builder_t::feature_info_t" = type { i32, i32, i8, i32 }
%struct.hb_ot_complex_shaper_t = type { {}*, {}*, i8* (%struct.hb_ot_shape_plan_t*)*, void (i8*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32*, i32*)*, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, i32, i32)*, i32, i8 }
%struct.hb_ot_shape_normalize_context_t = type { %struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*, %struct.hb_unicode_funcs_t*, {}*, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)* }
%struct.anon.171 = type { i8 }
%struct.anon.175 = type { i8 }
%struct.arabic_shape_plan_t = type opaque
%struct.use_shape_plan_t = type { i32, %struct.arabic_shape_plan_t* }
%struct.machine_index_t = type { %struct.hb_zip_iter_t }
%struct.hb_zip_iter_t = type { %struct.hb_iota_iter_t, %struct.hb_filter_iter_t }
%struct.hb_iota_iter_t = type { i32, i32 }
%struct.hb_filter_iter_t = type { %struct.hb_filter_iter_t.156, %struct.hb_reference_wrapper.172, %struct.hb_reference_wrapper.174 }
%struct.hb_filter_iter_t.156 = type { %struct.hb_zip_iter_t.162, %struct.hb_reference_wrapper, %struct.hb_reference_wrapper.170 }
%struct.hb_zip_iter_t.162 = type { %struct.hb_iota_iter_t, %struct.hb_array_t }
%struct.hb_array_t = type { %struct.hb_glyph_info_t*, i32, i32 }
%struct.hb_reference_wrapper = type { %class.anon }
%class.anon = type { i8 }
%struct.hb_reference_wrapper.170 = type { %struct.anon.171* }
%struct.hb_reference_wrapper.172 = type { %class.anon.173 }
%class.anon.173 = type { %struct.hb_buffer_t**, %struct.hb_glyph_info_t** }
%struct.hb_reference_wrapper.174 = type { %struct.anon.175* }
%struct.hb_iter_t.144 = type { i8 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN11hb_buffer_t7messageEP9hb_font_tPKcz = comdat any

@_hb_ot_complex_shaper_use = hidden local_unnamed_addr constant { void (%struct.hb_ot_shape_planner_t*)*, void (%struct.hb_ot_shape_planner_t*)*, i8* (%struct.hb_ot_shape_plan_t*)*, void (i8*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32*, i32*)*, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, i32, i32)*, i32, i8 } { void (%struct.hb_ot_shape_planner_t*)* @_ZL20collect_features_useP21hb_ot_shape_planner_t, void (%struct.hb_ot_shape_planner_t*)* null, i8* (%struct.hb_ot_shape_plan_t*)* @_ZL15data_create_usePK18hb_ot_shape_plan_t, void (i8*)* @_ZL16data_destroy_usePv, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)* @_ZL19preprocess_text_usePK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)* null, i32 3, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32*, i32*)* null, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)* @_ZL11compose_usePK31hb_ot_shape_normalize_context_tjjPj, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)* @_ZL15setup_masks_usePK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, i32, i32)* null, i32 1, i8 0 }, align 8
@_ZL9hb_second = internal global %struct.anon.171 zeroinitializer, align 1
@_ZL11hb_identity = internal global %struct.anon.175 zeroinitializer, align 1
@_ZL31_use_syllable_machine_eof_trans = internal unnamed_addr constant [63 x i8] c"\01\01\04''=''''''''''?''''''''=AC'EEFFFFFFFFFFFFFFFFFFFFIFFFFFFIKKK\00", align 16
@_ZL32_use_syllable_machine_trans_keys = internal unnamed_addr constant [125 x i8] c"\01\01\01\01\00%\05\22\05\22\01\01\0A\22\0B\22\0C!\0D!\0E!\1F   \0C\22\0C\22\0C\22\01\01\0C\22\0B\22\0B\22\0B\22\0A\22\0A\22\0A\22\05\22\01\22\07\07\03\03\05\22\1B\1C\1C\1C\05\22\0A\22\0B\22\0C!\0D!\0E!\1F   \0C\22\0C\22\0C\22\0C\22\0B\22\0B\22\0B\22\0A\22\0A\22\0A\22\05\22\01\22\01\01\03\03\07\07\01\22\05\22\1B\1C\1C\1C\01\04$&#&#%\00", align 16
@_ZL30_use_syllable_machine_indicies = internal unnamed_addr constant [1088 x i8] c"\01\02\04\05\06\07\08\01\09\0A\0B\0C\0D\0E\0F\10\11\12\13\0D\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#\09$\06%'(&&&)*+,-./)0\051234567&&&89:;('(&&&)*+,-./)011234567&&&89:;(')*+,-&&&&&&234567&&&*9:;=*+,-&&&&&&&&&567&&&&9:;=+,-&&&&&&&&&&&&&&&&9:;,-&&&&&&&&&&&&&&&&9:;-&&&&&&&&&&&&&&&&9:;9::+,-&&&&&&&&&567&&&&9:;=+,-&&&&&&&&&&67&&&&9:;=+,-&&&&&&&&&&&7&&&&9:;=?+,-&&&&&&&&&&&&&&&&9:;=*+,-&&&&&&234567&&&*9:;=*+,-&&&&&&&34567&&&*9:;=*+,-&&&&&&&&4567&&&*9:;=)*+,-&/)&&&234567&&&*9:;=)*+,-&&)&&&234567&&&*9:;=)*+,-./)&&&234567&&&*9:;='(&&&)*+,-./)0&1234567&&&89:;('<<<<<<<<<*+,-<<<<<<<<<567<<<<9:;=A\07'(&&&)*+,-./)0\051234567\0CC&89:;(\0CCC\01FEEE\0D\0E\0F\10\11\12\13\0D\14\16\16\17\18\19\1A\1B\1CEEE !\22#F\0D\0E\0F\10\11EEEEEE\17\18\19\1A\1B\1CEEE\0E!\22#G\0E\0F\10\11EEEEEEEEE\1A\1B\1CEEEE!\22#G\0F\10\11EEEEEEEEEEEEEEEE!\22#\10\11EEEEEEEEEEEEEEEE!\22#\11EEEEEEEEEEEEEEEE!\22#!\22\22\0F\10\11EEEEEEEEE\1A\1B\1CEEEE!\22#G\0F\10\11EEEEEEEEEE\1B\1CEEEE!\22#G\0F\10\11EEEEEEEEEEE\1CEEEE!\22#G\0F\10\11EEEEEEEEEEEEEEEE!\22#G\0E\0F\10\11EEEEEE\17\18\19\1A\1B\1CEEE\0E!\22#G\0E\0F\10\11EEEEEEE\18\19\1A\1B\1CEEE\0E!\22#G\0E\0F\10\11EEEEEEEE\19\1A\1B\1CEEE\0E!\22#G\0D\0E\0F\10\11E\13\0DEEE\17\18\19\1A\1B\1CEEE\0E!\22#G\0D\0E\0F\10\11EE\0DEEE\17\18\19\1A\1B\1CEEE\0E!\22#G\0D\0E\0F\10\11\12\13\0DEEE\17\18\19\1A\1B\1CEEE\0E!\22#G\01FEEE\0D\0E\0F\10\11\12\13\0D\14E\16\17\18\19\1A\1B\1CEEE !\22#F\01EEEEEEEEE\0E\0F\10\11EEEEEEEEE\1A\1B\1CEEEE!\22#G\01I\0A\05EE\05\01F\0AEE\0D\0E\0F\10\11\12\13\0D\14\15\16\17\18\19\1A\1B\1C\1D\1EE !\22#F\01FEEE\0D\0E\0F\10\11\12\13\0D\14\15\16\17\18\19\1A\1B\1CEEE !\22#F\1D\1E\1E\05HH\05KJ$$KJK$J%\00", align 16
@_ZL35_use_syllable_machine_index_offsets = internal unnamed_addr constant [63 x i16] [i16 0, i16 1, i16 2, i16 40, i16 70, i16 100, i16 101, i16 126, i16 150, i16 172, i16 193, i16 213, i16 215, i16 216, i16 239, i16 262, i16 285, i16 286, i16 309, i16 333, i16 357, i16 381, i16 406, i16 431, i16 456, i16 486, i16 520, i16 521, i16 522, i16 552, i16 554, i16 555, i16 585, i16 610, i16 634, i16 656, i16 677, i16 697, i16 699, i16 700, i16 723, i16 746, i16 769, i16 792, i16 816, i16 840, i16 864, i16 889, i16 914, i16 939, i16 969, i16 1003, i16 1004, i16 1005, i16 1006, i16 1040, i16 1070, i16 1072, i16 1073, i16 1077, i16 1080, i16 1084, i16 0], align 16
@_ZL32_use_syllable_machine_char_class = internal unnamed_addr constant [54 x i8] c"\00\01\02\02\03\04\02\02\02\02\02\05\06\07\02\02\02\02\08\09\02\02\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\02\18\19\1A\02\1B\1C\1D\1E\1F !\22#$%&\00", align 16
@_ZL36_use_syllable_machine_index_defaults = internal unnamed_addr constant [63 x i8] c"\00\00\06&&<&&&&&&&&&&>&&&&&&&&<@B&DDEEEEEEEEEEEEEEEEEEEEHEEEEEEHJJJ\00", align 16
@_ZL32_use_syllable_machine_cond_targs = internal unnamed_addr constant [77 x i8] c"\02\1F*\02\02\03\02\1A\1C346\1D !\22#$./071+,-'()89:2%&\02;=\02\04\05\06\07\08\09\0A\15\16\17\18\12\13\14\0D\0E\0F\19\0B\0C\02\02\10\02\11\02\1B\02\1E\02\02\00\01\025\02<\00", align 16
@_ZL34_use_syllable_machine_cond_actions = internal unnamed_addr constant [77 x i8] c"\01\02\02\00\05\00\06\00\00\00\00\02\00\02\02\00\00\00\02\02\02\02\02\02\02\02\02\02\02\00\00\00\02\00\00\07\00\00\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\09\0A\00\0B\00\0C\00\0D\00\0E\0F\00\00\10\00\11\00\00", align 16
@_hb_CrapPool = external hidden local_unnamed_addr global [48 x i64], align 16
@_hb_NullPool = external hidden local_unnamed_addr constant [48 x i64], align 16
@_ZL40_use_syllable_machine_from_state_actions = internal unnamed_addr constant <{ i8, i8, i8, [60 x i8] }> <{ i8 0, i8 0, i8 4, [60 x i8] zeroinitializer }>, align 16
@_ZL38_use_syllable_machine_to_state_actions = internal unnamed_addr constant <{ i8, i8, i8, [60 x i8] }> <{ i8 0, i8 0, i8 3, [60 x i8] zeroinitializer }>, align 16
@.str = private unnamed_addr constant [21 x i8] c"start reordering USE\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"end reordering USE\00", align 1
@_ZL9use_table = internal unnamed_addr constant [8824 x i8] c"\00\00\00\00\00\05\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00//\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\01\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01%%%%%%%%%\00\00\00\00\00\00\01\00\00%\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01   \00\00\00\00%%%'\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01!# \01#\16#\22\22\22\22!!!!####\0C\16#\00%&\00\00!\22\22\01\01\01\01\01\01\01\01\01\01\22\22\00\00\01\01\01\01\01\01\01\01\01\01\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\05%''\00\01\01\01\01\01\01\01\01\00\00\01\01\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\00\01\00\00\00\01\01\01\01\00\00 \01#\16#\22\22\22\22\00\00\16\16\00\00\16\16\0C\00\00\00\00\00\00\00\00\00#\00\00\00\00\01\01\00\01\01\01\22\22\00\00\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\00\00\00\01\00-\00\00%%'\00\01\01\01\01\01\01\00\00\00\00\01\01\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\00\01\01\00\01\01\00\01\01\00\00 \00#\16#\22\22\00\00\00\00!!\00\00!!\0C\00\00\00&\00\00\00\00\00\00\00\01\01\01\01\00\01\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01%\1F\05\05\00\1C\00\00\00\00\00\00\00\00\00\00\00%%'\00\01\01\01\01\01\01\01\01\01\00\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\00\01\01\00\01\01\01\01\01\00\00 \01#\16#\22\22\22\22!\00!!!\00##\0C\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\22\22\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\00\00\01%%%\1F\1F\1F\00%''\00\01\01\01\01\01\01\01\01\00\00\01\01\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\00\01\01\00\01\01\01\01\01\00\00 \01#!#\22\22\22\22\00\00\16\16\00\00\16\16\0C\00\00\00\00\00\00\00!!!\00\00\00\00\01\01\00\01\01\01\22\22\00\00\01\01\01\01\01\01\01\01\01\01\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00%\00\00\01\01\01\01\01\01\00\00\00\01\01\01\00\01\01\01\01\00\00\00\01\01\00\01\00\01\01\00\00\00\01\01\00\00\00\01\01\01\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00##!##\00\00\00\16\16\16\00\16\16\16\0C\00\00\00\00\00\00\00\00\00#\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00%'''%\01\01\01\01\01\01\01\01\00\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\01!!!####\00!!!\00!!!\0C\00\00\00\00\00\00\00!\22\00\01\01\01\00\00\00\00\00\01\01\22\22\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01%''\00\01\01\01\01\01\01\01\01\00\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\01\01\01\00\01\01\01\01\01\00\00 \01#!!####\00!!!\00!!!\0C\00\00\00\00\00\00\00##\00\00\00\00\00\00\00\01\00\01\01\22\22\00\00\01\01\01\01\01\01\01\01\01\01\00++\00\00\00\00\00\00\00\00\00\00\00\00\00%%''\01\01\01\01\01\01\01\01\01\00\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01!!\01#####\22\22\00\16\16\16\00\16\16\16\0C\12\00\00\00\00\00\00\00\00#\00\00\00\00\00\00\00\01\01\01\22\22\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00%''\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\01\01\00\01\00\00\01\01\01\01\01\01\01\00\00\00\0C\00\00\00\00###!!\22\00\22\00#\16\16\16\16\16\16#\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00##\00\00\00\00\01\01\00\00\01\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\22\22\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\19\00\19\00\1F\00\00\00\00#\16\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00 \22!!\22!!!!\22\22\22\22%\00\22!%%\22\00%%\01\01\01\01\01\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\00\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\00\00\00\00\00\00\00\00\00\19\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01##!!\22\22\16!!!!%&'\0C!\1D\1E\1C\1C\01\01\01\01\01\01\01\01\01\01\01\00\05\00\00\05\00\01\01\01\01\01\01##\22\22\01\01\01\01\1C\1C\1C\01#''\01\01##'''''\01\01\01!!!!\01\01\01\01\01\01\01\01\01\01\01\01\01\1C#\16!!''''''&\01'\01\01\01\01\01\01\01\01\01\01''#!\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\01!\22\22\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01!\22\22\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01!\22\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\00!\22\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00#!!!!\22\22\22\16\16\16\16\16\16\16\16%'#%%-\18\1F-%-!\0C-\00\00\00\00\00\00\00\00\01-\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\01\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\05\05\05\05\05\1F\1F\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01 \01\00\00\00\00\00\05\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00!!\22##!!!!\0B\0B\0B\00\00\00\00\1A\1A&\1A\1A\1A\1A\1A\1A\19%.\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\01\01\01\01\01\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01''\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01!!\16#!\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\1E\1C\0B\18\18\1B\0B\0B\0B\0B\000#!##!!!!\22\22!\22#\16\16\16\16\16!%%%%%%!%%\00\00&\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00%%%\18'\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\1F#!!\22\22\22\22!!\16\16\16\16!!\0C\01\01\01\01\01\01\01\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\05\05\00\00\05\00\13\05\13\13\13\13\13\05\13\13)*)))))))\00\00\00\00\00\00\00\00\00\00\00\00%\18'\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\0B\0B\0B!\22\16#!!#\0C\0B\0B\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\1F#!!###!#!\18\18  \00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\0B\0B#\16\16\16##\22\18\18\18\18\18\18\18\17\17- \00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\01\01\01%%%\00&&&&&&%%&&&&%'&&&&&&&\00\00\00\00&\00\00\00\00\00\00%++'%%\05\00\00\00\00\00\00\00\00-\00\00\00\00\00\00\00\00\0E\00\00\00\05\05\05\05\05\00\00\00\00\00\00\00/\00\00\00\00\00\00\00\00\00\00\00\00\00///\00\00\00%\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0C\01\01!\01\01\01\0C\01\01\01\01%\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01##\22!#\00\00\00\00\22\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\00\00\00\00\00''\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\1D###############\0C%\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00%%%%%%%%%%%%%%%%%%\01\01\00\00\00\00\00\00\00\00\00\00\01!\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01!!!!!&&&\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\22\22\22!\22\22\22\22\18\18\18\1A#\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00%%\18'\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\1F##!!\22\22\16\16!\1C\1D\1C\0C\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\01\01\01\01\01!\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01%!!!\22!\16\16!\22\1D\1E\1B\1C\00\00\00\00\00\00\00\00\00\01\01\01\18\01\01\01\01\01\01\01\01\18\1A\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\05\05\05\00\00\00\01'%'\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01!\01!!\22\01\01!!\01\01\01\01\01!%\01%\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\16\22!\16#\00\00\00\00\00'\0C\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01##!##\22##\00'\22\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\01\22\22\22\00!\22\00\00\00\00\00#&&%\01\01\01\01\00\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\1F  \00\00\00\00\0C\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01  \00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01%%%\1F\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00!!\00\00\00\01\01\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01&&&&&&&&&&&\01\01\01\01\00\00\00\01\00\01\01\01\01\01\00\01\01\01\01\01\01\01\01\00\01\01\01\01\00\00\00\00\01\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00'%'++\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01!!!!\22\22\22\22\22\22!!!!,\00\00\00\00\00\00\00\00\00\00\00\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0D%%'\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01#\16#\22\22!!##\0C \00\00\00\00\00%%%\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\22\22\22!!\16\22!!\22!!\0C\1F\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\01##\01\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01 \00\00\00\00\00\00\00\00\00\00\00\00%%'\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01#\16#\22\22\22\22\22\22!!!!\0C\01\12\12\00\00\00\00\05. !\22\00\16%\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01###\22!!!!%\0C\1F\1F\00\00\00\00\00\00%\00\01\01\01\01\01\01\01\00\01\00\01\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01%#\16#\22\22!!!! \22\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00%%%%\00\01\01\01\01\01\01\01\01\00\00\01\01\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\00\01\01\00\01\01\01\01\01\00  \01##!####\00\00\16\16\00\00\16\16,\00\00\00\00\00\00\00\00\00#\00\00\00\00\00\00\01\01\01\01##\00\00%%%%%%%\00\00\00%%%%%\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01#\16#\22\22\22\22\22\22!!##\0C%%' \01\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00-\01++\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01#\16#\22\22\22\22\22\22\16!\16\16#\16%%%\0C \01\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01#\16#\22\22\22\22\00\00\16\16\16\16%%'\0C \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\22\22\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01###\22\22\22\22\22\22!!##%'\0C!\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01%'!\16#\22\22!!!!\0C \01\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\1C\1E\1B##!!\22\22\16!\22!!!\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01#\16#\22\22\22\22!!!!%'\0C \00\00\00\00\00\01\01\01\01\01\01\01\00\00\01\00\00\01\01\01\01\01\01\01\01\00\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01#####\16\00\16\16\00\00%%#\0C\12\1D\12\1D \00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\01\01\01\01\01\01\01\01\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01#\16#\22\22\22\22\00\00!!##''\0C\01\00\00\16\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01!\22\22!!!!!!\22\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01.\22%%%%'\12\1C\1C\1C\1C\05\00\00\00\00\00\05\00\0C\00\00\00\00\00\00\00\00\01!\22\22!!!##\22\22\22\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\12\12\12\12\12\12\19\19\19\19\19\19\19\19\19\19\19\19%'\1F\0C\00\00\00\01\00\00\01\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01#!!\22\22\22\22\22\00!!!!%%'\0C\01\00\00\00\05\05\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\00\0B\0B\0B\0B\0B\0B\0B\22\16\22!#%%\00\01\01\01\01\01\01\01\00\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01!!!!!\22\00\00\00!\00!!\00!%% !\22\0C\12\1C\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\01\01\01\01\01\01\00\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01#####\00!!\00##%'\0C\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\05!\22\16#\00111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\00222222234\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01%%%%%%%\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00 \00\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\00\00\00\00\00\00\00&&&&\00\00\00\00\00\00\00\00\00\01\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00  \00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00%%%%%%%\01\01\01\01\01\01\01\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01%%%%\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\1F\1F\1F\1F\1F\1F\1F\01\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00", align 16

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL20collect_features_useP21hb_ot_shape_planner_t(%struct.hb_ot_shape_planner_t*) #0 {
  %2 = getelementptr inbounds %struct.hb_ot_shape_planner_t, %struct.hb_ot_shape_planner_t* %0, i64 0, i32 2
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL19setup_syllables_usePK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1819239276, i32 1, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1667460464, i32 1, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1853188980, i32 1, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1634429038, i32 9, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL28_hb_clear_substitution_flagsPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1919969382, i32 8, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL15record_rphf_usePK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #5
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL28_hb_clear_substitution_flagsPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1886545254, i32 9, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL15record_pref_usePK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1919644262, i32 9, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1633842790, i32 9, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1651275622, i32 9, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1751215206, i32 9, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1886614630, i32 9, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1986098293, i32 9, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1667916660, i32 9, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL11reorder_usePK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #5
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL19_hb_clear_syllablesPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1769172844, i32 0, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1768843636, i32 0, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1835361385, i32 0, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1718185569, i32 0, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1633842803, i32 9, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1651275635, i32 9, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1751215214, i32 9, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1886545267, i32 9, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1886614643, i32 9, i32 1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias i8* @_ZL15data_create_usePK18hb_ot_shape_plan_t(%struct.hb_ot_shape_plan_t*) #0 {
  %2 = tail call noalias i8* @calloc(i64 1, i64 16) #5
  %3 = icmp eq i8* %2, null
  br i1 %3, label %49, label %4, !prof !2

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 3, i32 0, i32 2
  %6 = load %"struct.hb_ot_map_t::feature_map_t"*, %"struct.hb_ot_map_t::feature_map_t"** %5, align 8
  %7 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 3, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %38, label %10

10:                                               ; preds = %4
  %11 = add nsw i32 %8, -1
  br label %12

12:                                               ; preds = %27, %10
  %13 = phi i32 [ %11, %10 ], [ %29, %27 ]
  %14 = phi i32 [ 0, %10 ], [ %28, %27 ]
  %15 = add i32 %14, %13
  %16 = lshr i32 %15, 1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %6, i64 %17, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp ugt i32 %19, 1919969382
  br i1 %20, label %21, label %23

21:                                               ; preds = %12
  %22 = add nsw i32 %16, -1
  br label %27

23:                                               ; preds = %12
  %24 = icmp eq i32 %19, 1919969382
  br i1 %24, label %31, label %25

25:                                               ; preds = %23
  %26 = add nuw nsw i32 %16, 1
  br label %27

27:                                               ; preds = %25, %21
  %28 = phi i32 [ %14, %21 ], [ %26, %25 ]
  %29 = phi i32 [ %22, %21 ], [ %13, %25 ]
  %30 = icmp sgt i32 %28, %29
  br i1 %30, label %38, label %12

31:                                               ; preds = %23
  %32 = zext i32 %16 to i64
  %33 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %6, i64 %32
  %34 = icmp eq %"struct.hb_ot_map_t::feature_map_t"* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %6, i64 %32, i32 5
  %37 = load i32, i32* %36, align 4
  br label %38

38:                                               ; preds = %27, %4, %31, %35
  %39 = phi i32 [ %37, %35 ], [ 0, %31 ], [ 0, %4 ], [ 0, %27 ]
  %40 = bitcast i8* %2 to i32*
  store i32 %39, i32* %40, align 8
  %41 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  switch i32 %42, label %49 [
    i32 1097100397, label %43
    i32 1098015074, label %43
    i32 1130918515, label %43
    i32 1383032935, label %43
    i32 1298230884, label %43
    i32 1298230889, label %43
    i32 1299148391, label %43
    i32 1315663727, label %43
    i32 1349017959, label %43
    i32 1349020784, label %43
    i32 1399809892, label %43
    i32 1400468067, label %43
  ]

43:                                               ; preds = %38, %38, %38, %38, %38, %38, %38, %38, %38, %38, %38, %38
  %44 = tail call i8* @_Z18data_create_arabicPK18hb_ot_shape_plan_t(%struct.hb_ot_shape_plan_t* %0) #5
  %45 = getelementptr inbounds i8, i8* %2, i64 8
  %46 = bitcast i8* %45 to i8**
  store i8* %44, i8** %46, align 8
  %47 = icmp eq i8* %44, null
  br i1 %47, label %48, label %49, !prof !2

48:                                               ; preds = %43
  tail call void @free(i8* %2) #5
  br label %49

49:                                               ; preds = %38, %43, %1, %48
  %50 = phi i8* [ null, %48 ], [ null, %1 ], [ %2, %43 ], [ %2, %38 ]
  ret i8* %50
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL16data_destroy_usePv(i8* nocapture) #0 {
  %2 = getelementptr inbounds i8, i8* %0, i64 8
  %3 = bitcast i8* %2 to %struct.arabic_shape_plan_t**
  %4 = load %struct.arabic_shape_plan_t*, %struct.arabic_shape_plan_t** %3, align 8
  %5 = icmp eq %struct.arabic_shape_plan_t* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %struct.arabic_shape_plan_t* %4 to i8*
  tail call void @_Z19data_destroy_arabicPv(i8* nonnull %7) #5
  br label %8

8:                                                ; preds = %1, %6
  tail call void @free(i8* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL19preprocess_text_usePK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t(%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*) #0 {
  tail call void @_Z37_hb_preprocess_text_vowel_constraintsPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t(%struct.hb_ot_shape_plan_t* %0, %struct.hb_buffer_t* %1, %struct.hb_font_t* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZL11compose_usePK31hb_ot_shape_normalize_context_tjjPj(%struct.hb_ot_shape_normalize_context_t* nocapture readonly, i32, i32, i32*) #0 {
  %5 = getelementptr inbounds %struct.hb_ot_shape_normalize_context_t, %struct.hb_ot_shape_normalize_context_t* %0, i64 0, i32 3
  %6 = load %struct.hb_unicode_funcs_t*, %struct.hb_unicode_funcs_t** %5, align 8
  %7 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %6, i64 0, i32 2, i32 2
  %8 = load i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)** %7, align 8
  %9 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %6, i64 0, i32 3, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = tail call i32 %8(%struct.hb_unicode_funcs_t* %6, i32 %1, i8* %10) #5
  %12 = icmp ult i32 %11, 32
  br i1 %12, label %13, label %23

13:                                               ; preds = %4
  %14 = load %struct.hb_unicode_funcs_t*, %struct.hb_unicode_funcs_t** %5, align 8
  %15 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %14, i64 0, i32 2, i32 2
  %16 = load i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)** %15, align 8
  %17 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %14, i64 0, i32 3, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = tail call i32 %16(%struct.hb_unicode_funcs_t* %14, i32 %1, i8* %18) #5
  %20 = shl i32 1, %19
  %21 = and i32 %20, 7168
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %13, %4
  %24 = load %struct.hb_unicode_funcs_t*, %struct.hb_unicode_funcs_t** %5, align 8
  store i32 0, i32* %3, align 4
  %25 = icmp eq i32 %1, 0
  %26 = icmp eq i32 %2, 0
  %27 = or i1 %25, %26
  br i1 %27, label %35, label %28, !prof !2

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %24, i64 0, i32 2, i32 5
  %30 = load i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)** %29, align 8
  %31 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %24, i64 0, i32 3, i32 5
  %32 = load i8*, i8** %31, align 8
  %33 = tail call i32 %30(%struct.hb_unicode_funcs_t* %24, i32 %1, i32 %2, i32* %3, i8* %32) #5
  %34 = icmp ne i32 %33, 0
  br label %35

35:                                               ; preds = %28, %23, %13
  %36 = phi i1 [ false, %13 ], [ %34, %28 ], [ false, %23 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL15setup_masks_usePK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t(%struct.hb_ot_shape_plan_t* nocapture readonly, %struct.hb_buffer_t*, %struct.hb_font_t* nocapture readnone) #0 {
  %4 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 4
  %5 = bitcast i8** %4 to %struct.use_shape_plan_t**
  %6 = load %struct.use_shape_plan_t*, %struct.use_shape_plan_t** %5, align 8
  %7 = getelementptr inbounds %struct.use_shape_plan_t, %struct.use_shape_plan_t* %6, i64 0, i32 1
  %8 = load %struct.arabic_shape_plan_t*, %struct.arabic_shape_plan_t** %7, align 8
  %9 = icmp eq %struct.arabic_shape_plan_t* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  tail call void @_Z23setup_masks_arabic_planPK19arabic_shape_plan_tP11hb_buffer_t11hb_script_t(%struct.arabic_shape_plan_t* nonnull %8, %struct.hb_buffer_t* %1, i32 %12) #5
  br label %13

13:                                               ; preds = %3, %10
  %14 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 15
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 18
  %17 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %16, align 8
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = zext i32 %15 to i64
  br label %22

21:                                               ; preds = %398, %13
  ret void

22:                                               ; preds = %398, %19
  %23 = phi i64 [ 0, %19 ], [ %403, %398 ]
  %24 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %17, i64 %23, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = lshr i32 %25, 12
  switch i32 %26, label %398 [
    i32 0, label %27
    i32 1, label %82
    i32 2, label %130
    i32 10, label %166
    i32 16, label %182
    i32 17, label %238
    i32 19, label %326
    i32 22, label %334
    i32 24, label %358
    i32 27, label %366
    i32 30, label %374
  ]

27:                                               ; preds = %22
  %28 = add i32 %25, -40
  %29 = icmp ult i32 %28, 24
  br i1 %29, label %30, label %34

30:                                               ; preds = %27
  %31 = zext i32 %28 to i64
  %32 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  br label %398

34:                                               ; preds = %27
  %35 = add i32 %25, -160
  %36 = icmp ult i32 %35, 56
  br i1 %36, label %37, label %42

37:                                               ; preds = %34
  %38 = add nsw i32 %25, -136
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %39
  %41 = load i8, i8* %40, align 1
  br label %398

42:                                               ; preds = %34
  %43 = and i32 %25, -8
  %44 = icmp eq i32 %43, 1600
  br i1 %44, label %45, label %50

45:                                               ; preds = %42
  %46 = add i32 %25, -1520
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %47
  %49 = load i8, i8* %48, align 1
  br label %398

50:                                               ; preds = %42
  %51 = add i32 %25, -1992
  %52 = icmp ult i32 %51, 56
  br i1 %52, label %53, label %58

53:                                               ; preds = %50
  %54 = add nsw i32 %25, -1904
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %55
  %57 = load i8, i8* %56, align 1
  br label %398

58:                                               ; preds = %50
  %59 = and i32 %25, -32
  %60 = icmp eq i32 %59, 2112
  br i1 %60, label %61, label %66

61:                                               ; preds = %58
  %62 = add i32 %25, -1968
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %63
  %65 = load i8, i8* %64, align 1
  br label %398

66:                                               ; preds = %58
  %67 = add i32 %25, -2304
  %68 = icmp ult i32 %67, 1272
  br i1 %68, label %69, label %74

69:                                               ; preds = %66
  %70 = add nsw i32 %25, -2128
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %71
  %73 = load i8, i8* %72, align 1
  br label %398

74:                                               ; preds = %66
  %75 = add i32 %25, -3840
  %76 = icmp ult i32 %75, 200
  br i1 %76, label %77, label %398

77:                                               ; preds = %74
  %78 = add nsw i32 %25, -2392
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %79
  %81 = load i8, i8* %80, align 1
  br label %398

82:                                               ; preds = %22
  %83 = add i32 %25, -4096
  %84 = icmp ult i32 %83, 160
  br i1 %84, label %85, label %90

85:                                               ; preds = %82
  %86 = add nsw i32 %25, -2448
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %87
  %89 = load i8, i8* %88, align 1
  br label %398

90:                                               ; preds = %82
  %91 = add i32 %25, -5888
  %92 = icmp ult i32 %91, 432
  br i1 %92, label %93, label %98

93:                                               ; preds = %90
  %94 = add nsw i32 %25, -4080
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %95
  %97 = load i8, i8* %96, align 1
  br label %398

98:                                               ; preds = %90
  %99 = add i32 %25, -6400
  %100 = icmp ult i32 %99, 416
  br i1 %100, label %101, label %106

101:                                              ; preds = %98
  %102 = add nsw i32 %25, -4160
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %103
  %105 = load i8, i8* %104, align 1
  br label %398

106:                                              ; preds = %98
  %107 = add i32 %25, -6912
  %108 = icmp ult i32 %107, 336
  br i1 %108, label %109, label %114

109:                                              ; preds = %106
  %110 = add nsw i32 %25, -4256
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %111
  %113 = load i8, i8* %112, align 1
  br label %398

114:                                              ; preds = %106
  %115 = add i32 %25, -7376
  %116 = icmp ult i32 %115, 48
  br i1 %116, label %117, label %122

117:                                              ; preds = %114
  %118 = add nsw i32 %25, -4384
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %119
  %121 = load i8, i8* %120, align 1
  br label %398

122:                                              ; preds = %114
  %123 = and i32 %25, -8
  %124 = icmp eq i32 %123, 7672
  br i1 %124, label %125, label %398

125:                                              ; preds = %122
  %126 = add i32 %25, -4632
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  br label %398

130:                                              ; preds = %22
  %131 = add i32 %25, -8200
  %132 = icmp ult i32 %131, 16
  br i1 %132, label %133, label %138

133:                                              ; preds = %130
  %134 = add nsw i32 %25, -5152
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %135
  %137 = load i8, i8* %136, align 1
  br label %398

138:                                              ; preds = %130
  %139 = add i32 %25, -8304
  %140 = icmp ult i32 %139, 24
  br i1 %140, label %141, label %146

141:                                              ; preds = %138
  %142 = add nsw i32 %25, -5240
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %143
  %145 = load i8, i8* %144, align 1
  br label %398

146:                                              ; preds = %138
  %147 = and i32 %25, -8
  switch i32 %147, label %158 [
    i32 8432, label %148
    i32 9672, label %153
  ]

148:                                              ; preds = %146
  %149 = add i32 %25, -5344
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %150
  %152 = load i8, i8* %151, align 1
  br label %398

153:                                              ; preds = %146
  %154 = add i32 %25, -6576
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %155
  %157 = load i8, i8* %156, align 1
  br label %398

158:                                              ; preds = %146
  %159 = add i32 %25, -11568
  %160 = icmp ult i32 %159, 80
  br i1 %160, label %161, label %398

161:                                              ; preds = %158
  %162 = add nsw i32 %25, -8464
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %163
  %165 = load i8, i8* %164, align 1
  br label %398

166:                                              ; preds = %22
  %167 = add i32 %25, -43008
  %168 = icmp ult i32 %167, 760
  br i1 %168, label %169, label %174

169:                                              ; preds = %166
  %170 = add nsw i32 %25, -39824
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %171
  %173 = load i8, i8* %172, align 1
  br label %398

174:                                              ; preds = %166
  %175 = and i32 %25, -64
  %176 = icmp eq i32 %175, 43968
  br i1 %176, label %177, label %398

177:                                              ; preds = %174
  %178 = add i32 %25, -40024
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %179
  %181 = load i8, i8* %180, align 1
  br label %398

182:                                              ; preds = %22
  %183 = add i32 %25, -68096
  %184 = icmp ult i32 %183, 80
  br i1 %184, label %185, label %190

185:                                              ; preds = %182
  %186 = add nsw i32 %25, -64088
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %187
  %189 = load i8, i8* %188, align 1
  br label %398

190:                                              ; preds = %182
  %191 = add i32 %25, -68288
  %192 = icmp ult i32 %191, 40
  br i1 %192, label %193, label %198

193:                                              ; preds = %190
  %194 = add nsw i32 %25, -64200
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %195
  %197 = load i8, i8* %196, align 1
  br label %398

198:                                              ; preds = %190
  %199 = add i32 %25, -68480
  %200 = icmp ult i32 %199, 48
  br i1 %200, label %201, label %206

201:                                              ; preds = %198
  %202 = add nsw i32 %25, -64352
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %203
  %205 = load i8, i8* %204, align 1
  br label %398

206:                                              ; preds = %198
  %207 = and i32 %25, -64
  %208 = icmp eq i32 %207, 68864
  br i1 %208, label %209, label %214

209:                                              ; preds = %206
  %210 = add i32 %25, -64688
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %211
  %213 = load i8, i8* %212, align 1
  br label %398

214:                                              ; preds = %206
  %215 = add i32 %25, -69248
  %216 = icmp ult i32 %215, 56
  br i1 %216, label %217, label %222

217:                                              ; preds = %214
  %218 = add nsw i32 %25, -65008
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %219
  %221 = load i8, i8* %220, align 1
  br label %398

222:                                              ; preds = %214
  %223 = add i32 %25, -69424
  %224 = icmp ult i32 %223, 40
  br i1 %224, label %225, label %230

225:                                              ; preds = %222
  %226 = add nsw i32 %25, -65128
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %227
  %229 = load i8, i8* %228, align 1
  br label %398

230:                                              ; preds = %222
  %231 = add i32 %25, -69552
  %232 = icmp ult i32 %231, 272
  br i1 %232, label %233, label %398

233:                                              ; preds = %230
  %234 = add nsw i32 %25, -65216
  %235 = zext i32 %234 to i64
  %236 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %235
  %237 = load i8, i8* %236, align 1
  br label %398

238:                                              ; preds = %22
  %239 = add i32 %25, -69552
  %240 = icmp ult i32 %239, 272
  br i1 %240, label %241, label %246

241:                                              ; preds = %238
  %242 = add nsw i32 %25, -65216
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %243
  %245 = load i8, i8* %244, align 1
  br label %398

246:                                              ; preds = %238
  %247 = add i32 %25, -69888
  %248 = icmp ult i32 %247, 320
  br i1 %248, label %249, label %254

249:                                              ; preds = %246
  %250 = add nsw i32 %25, -65280
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %251
  %253 = load i8, i8* %252, align 1
  br label %398

254:                                              ; preds = %246
  %255 = add i32 %25, -70272
  %256 = icmp ult i32 %255, 248
  br i1 %256, label %257, label %262

257:                                              ; preds = %254
  %258 = add nsw i32 %25, -65344
  %259 = zext i32 %258 to i64
  %260 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %259
  %261 = load i8, i8* %260, align 1
  br label %398

262:                                              ; preds = %254
  %263 = add i32 %25, -70656
  %264 = icmp ult i32 %263, 224
  br i1 %264, label %265, label %270

265:                                              ; preds = %262
  %266 = add nsw i32 %25, -65480
  %267 = zext i32 %266 to i64
  %268 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %267
  %269 = load i8, i8* %268, align 1
  br label %398

270:                                              ; preds = %262
  %271 = add i32 %25, -71040
  %272 = icmp ult i32 %271, 448
  br i1 %272, label %273, label %278

273:                                              ; preds = %270
  %274 = add nsw i32 %25, -65640
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %275
  %277 = load i8, i8* %276, align 1
  br label %398

278:                                              ; preds = %270
  %279 = and i32 %25, -64
  %280 = icmp eq i32 %279, 71680
  br i1 %280, label %281, label %286

281:                                              ; preds = %278
  %282 = add i32 %25, -65832
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %283
  %285 = load i8, i8* %284, align 1
  br label %398

286:                                              ; preds = %278
  %287 = add i32 %25, -71936
  %288 = icmp ult i32 %287, 96
  br i1 %288, label %289, label %294

289:                                              ; preds = %286
  %290 = add nsw i32 %25, -66024
  %291 = zext i32 %290 to i64
  %292 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %291
  %293 = load i8, i8* %292, align 1
  br label %398

294:                                              ; preds = %286
  %295 = add i32 %25, -72096
  %296 = icmp ult i32 %295, 256
  br i1 %296, label %297, label %302

297:                                              ; preds = %294
  %298 = add nsw i32 %25, -66088
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %299
  %301 = load i8, i8* %300, align 1
  br label %398

302:                                              ; preds = %294
  %303 = add i32 %25, -72704
  %304 = icmp ult i32 %303, 184
  br i1 %304, label %305, label %310

305:                                              ; preds = %302
  %306 = add nsw i32 %25, -66440
  %307 = zext i32 %306 to i64
  %308 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %307
  %309 = load i8, i8* %308, align 1
  br label %398

310:                                              ; preds = %302
  %311 = add i32 %25, -72960
  %312 = icmp ult i32 %311, 176
  br i1 %312, label %313, label %318

313:                                              ; preds = %310
  %314 = add nsw i32 %25, -66512
  %315 = zext i32 %314 to i64
  %316 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %315
  %317 = load i8, i8* %316, align 1
  br label %398

318:                                              ; preds = %310
  %319 = add i32 %25, -73440
  %320 = icmp ult i32 %319, 24
  br i1 %320, label %321, label %398

321:                                              ; preds = %318
  %322 = add nsw i32 %25, -66816
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %323
  %325 = load i8, i8* %324, align 1
  br label %398

326:                                              ; preds = %22
  %327 = add i32 %25, -77824
  %328 = icmp ult i32 %327, 1088
  br i1 %328, label %329, label %398

329:                                              ; preds = %326
  %330 = add nsw i32 %25, -71176
  %331 = zext i32 %330 to i64
  %332 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %331
  %333 = load i8, i8* %332, align 1
  br label %398

334:                                              ; preds = %22
  %335 = add i32 %25, -92928
  %336 = icmp ult i32 %335, 56
  br i1 %336, label %337, label %342

337:                                              ; preds = %334
  %338 = add nsw i32 %25, -85192
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %339
  %341 = load i8, i8* %340, align 1
  br label %398

342:                                              ; preds = %334
  %343 = add i32 %25, -93952
  %344 = icmp ult i32 %343, 152
  br i1 %344, label %345, label %350

345:                                              ; preds = %342
  %346 = add nsw i32 %25, -86160
  %347 = zext i32 %346 to i64
  %348 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %347
  %349 = load i8, i8* %348, align 1
  br label %398

350:                                              ; preds = %342
  %351 = and i32 %25, -8
  %352 = icmp eq i32 %351, 94176
  br i1 %352, label %353, label %398

353:                                              ; preds = %350
  %354 = add i32 %25, -86232
  %355 = zext i32 %354 to i64
  %356 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %355
  %357 = load i8, i8* %356, align 1
  br label %398

358:                                              ; preds = %22
  %359 = add i32 %25, -101120
  %360 = icmp ult i32 %359, 472
  br i1 %360, label %361, label %398

361:                                              ; preds = %358
  %362 = add nsw i32 %25, -93168
  %363 = zext i32 %362 to i64
  %364 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %363
  %365 = load i8, i8* %364, align 1
  br label %398

366:                                              ; preds = %22
  %367 = add i32 %25, -113664
  %368 = icmp ult i32 %367, 160
  br i1 %368, label %369, label %398

369:                                              ; preds = %366
  %370 = add nsw i32 %25, -105240
  %371 = zext i32 %370 to i64
  %372 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %371
  %373 = load i8, i8* %372, align 1
  br label %398

374:                                              ; preds = %22
  %375 = add i32 %25, -123136
  %376 = icmp ult i32 %375, 80
  br i1 %376, label %377, label %382

377:                                              ; preds = %374
  %378 = add nsw i32 %25, -114552
  %379 = zext i32 %378 to i64
  %380 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %379
  %381 = load i8, i8* %380, align 1
  br label %398

382:                                              ; preds = %374
  %383 = and i32 %25, -64
  %384 = icmp eq i32 %383, 123584
  br i1 %384, label %385, label %390

385:                                              ; preds = %382
  %386 = add i32 %25, -114920
  %387 = zext i32 %386 to i64
  %388 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %387
  %389 = load i8, i8* %388, align 1
  br label %398

390:                                              ; preds = %382
  %391 = add i32 %25, -125184
  %392 = icmp ult i32 %391, 96
  br i1 %392, label %393, label %398

393:                                              ; preds = %390
  %394 = add nsw i32 %25, -116456
  %395 = zext i32 %394 to i64
  %396 = getelementptr inbounds [8824 x i8], [8824 x i8]* @_ZL9use_table, i64 0, i64 %395
  %397 = load i8, i8* %396, align 1
  br label %398

398:                                              ; preds = %22, %30, %37, %45, %53, %61, %69, %74, %77, %85, %93, %101, %109, %117, %122, %125, %133, %141, %148, %153, %158, %161, %169, %174, %177, %185, %193, %201, %209, %217, %225, %230, %233, %241, %249, %257, %265, %273, %281, %289, %297, %305, %313, %318, %321, %326, %329, %337, %345, %350, %353, %358, %361, %366, %369, %377, %385, %390, %393
  %399 = phi i8 [ %381, %377 ], [ %389, %385 ], [ %397, %393 ], [ %373, %369 ], [ %365, %361 ], [ %341, %337 ], [ %349, %345 ], [ %357, %353 ], [ %333, %329 ], [ %245, %241 ], [ %253, %249 ], [ %261, %257 ], [ %269, %265 ], [ %277, %273 ], [ %285, %281 ], [ %293, %289 ], [ %301, %297 ], [ %309, %305 ], [ %317, %313 ], [ %325, %321 ], [ %189, %185 ], [ %197, %193 ], [ %205, %201 ], [ %213, %209 ], [ %221, %217 ], [ %229, %225 ], [ %237, %233 ], [ %173, %169 ], [ %181, %177 ], [ %137, %133 ], [ %145, %141 ], [ %152, %148 ], [ %157, %153 ], [ %165, %161 ], [ %89, %85 ], [ %97, %93 ], [ %105, %101 ], [ %113, %109 ], [ %121, %117 ], [ %129, %125 ], [ %33, %30 ], [ %41, %37 ], [ %49, %45 ], [ %57, %53 ], [ %65, %61 ], [ %73, %69 ], [ %81, %77 ], [ 0, %22 ], [ 0, %390 ], [ 0, %366 ], [ 0, %358 ], [ 0, %350 ], [ 0, %326 ], [ 0, %318 ], [ 0, %230 ], [ 0, %174 ], [ 0, %158 ], [ 0, %122 ], [ 0, %74 ]
  %400 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %17, i64 %23, i32 4
  %401 = bitcast %union._hb_var_int_t* %400 to [4 x i8]*
  %402 = getelementptr inbounds [4 x i8], [4 x i8]* %401, i64 0, i64 2
  store i8 %399, i8* %402, align 2
  %403 = add nuw nsw i64 %23, 1
  %404 = icmp eq i64 %403, %20
  br i1 %404, label %21, label %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL19setup_syllables_usePK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t(%struct.hb_ot_shape_plan_t* nocapture readonly, %struct.hb_font_t* nocapture readnone, %struct.hb_buffer_t*) #0 {
  %4 = alloca [4 x i32], align 16
  %5 = alloca %struct.hb_buffer_t*, align 8
  %6 = alloca %struct.hb_glyph_info_t*, align 8
  %7 = alloca %struct.machine_index_t, align 8
  %8 = alloca %struct.machine_index_t, align 8
  %9 = alloca %struct.machine_index_t, align 8
  %10 = alloca %struct.machine_index_t, align 8
  %11 = bitcast %struct.hb_buffer_t** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  store %struct.hb_buffer_t* %2, %struct.hb_buffer_t** %5, align 8
  %12 = bitcast %struct.hb_glyph_info_t** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #5
  %13 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %14 = bitcast %struct.hb_glyph_info_t** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %struct.hb_glyph_info_t** %6 to i64*
  store i64 %15, i64* %16, align 8
  %17 = bitcast %struct.machine_index_t* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %17) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 72, i1 false) #5
  %18 = inttoptr i64 %15 to %struct.hb_glyph_info_t*
  %19 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %149, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %18, i64 0, i32 4
  %24 = bitcast %union._hb_var_int_t* %23 to [4 x i8]*
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* %24, i64 0, i64 2
  %26 = load i8, i8* %25, align 2, !noalias !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %70

28:                                               ; preds = %22
  %29 = bitcast %union._hb_var_int_t* %23 to i16*
  %30 = load i16, i16* %29, align 4, !noalias !3
  %31 = and i16 %30, 32
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %70, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %18, i64 0, i32 3
  %35 = bitcast %union._hb_var_int_t* %34 to i16*
  %36 = load i16, i16* %35, align 4, !noalias !3
  %37 = and i16 %36, 16
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %56, label %70

39:                                               ; preds = %56
  %40 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %57, i64 1, i32 4
  %41 = bitcast %union._hb_var_int_t* %40 to [4 x i8]*
  %42 = getelementptr inbounds [4 x i8], [4 x i8]* %41, i64 0, i64 2
  %43 = load i8, i8* %42, align 2, !noalias !3
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %64

45:                                               ; preds = %39
  %46 = bitcast %union._hb_var_int_t* %40 to i16*
  %47 = load i16, i16* %46, align 4, !noalias !3
  %48 = and i16 %47, 32
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %57, i64 1, i32 3
  %52 = bitcast %union._hb_var_int_t* %51 to i16*
  %53 = load i16, i16* %52, align 4, !noalias !3
  %54 = and i16 %53, 16
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %33, %50
  %57 = phi %struct.hb_glyph_info_t* [ %62, %50 ], [ %18, %33 ]
  %58 = phi i32 [ %60, %50 ], [ 0, %33 ]
  %59 = phi i32 [ %61, %50 ], [ %20, %33 ]
  %60 = add nuw i32 %58, 1
  %61 = add i32 %59, -1
  %62 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %57, i64 1
  %63 = icmp eq i32 %61, 0
  br i1 %63, label %147, label %39

64:                                               ; preds = %39
  %65 = ptrtoint %struct.hb_glyph_info_t* %62 to i64
  br label %70

66:                                               ; preds = %45
  %67 = ptrtoint %struct.hb_glyph_info_t* %62 to i64
  br label %70

68:                                               ; preds = %50
  %69 = ptrtoint %struct.hb_glyph_info_t* %62 to i64
  br label %70

70:                                               ; preds = %33, %68, %64, %66, %28, %22
  %71 = phi i64 [ %15, %22 ], [ %15, %28 ], [ %65, %64 ], [ %67, %66 ], [ %69, %68 ], [ %15, %33 ]
  %72 = phi i32 [ %20, %22 ], [ %20, %28 ], [ %61, %64 ], [ %61, %66 ], [ %61, %68 ], [ %20, %33 ]
  %73 = phi i32 [ 0, %22 ], [ 0, %28 ], [ %60, %64 ], [ %60, %66 ], [ %60, %68 ], [ 0, %33 ]
  %74 = inttoptr i64 %71 to %struct.hb_glyph_info_t*
  %75 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %74, i64 0, i32 4
  %76 = bitcast %union._hb_var_int_t* %75 to [4 x i8]*
  %77 = getelementptr inbounds [4 x i8], [4 x i8]* %76, i64 0, i64 2
  %78 = load i8, i8* %77, align 2, !noalias !8
  %79 = icmp eq i8 %78, 14
  br i1 %79, label %82, label %149

80:                                               ; preds = %129
  %81 = ptrtoint %struct.hb_glyph_info_t* %127 to i64
  br label %82

82:                                               ; preds = %70, %80
  %83 = phi i64 [ %81, %80 ], [ %71, %70 ]
  %84 = phi i32 [ %124, %80 ], [ %72, %70 ]
  %85 = phi i32 [ %125, %80 ], [ %73, %70 ]
  %86 = phi i32 [ %121, %80 ], [ %73, %70 ]
  %87 = phi %struct.hb_glyph_info_t* [ %127, %80 ], [ %74, %70 ]
  br label %88

88:                                               ; preds = %104, %82
  %89 = phi i32 [ %90, %104 ], [ %86, %82 ]
  %90 = add i32 %89, 1
  %91 = icmp ult i32 %90, %20
  br i1 %91, label %92, label %149

92:                                               ; preds = %88
  %93 = zext i32 %90 to i64
  %94 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %18, i64 %93, i32 4
  %95 = bitcast %union._hb_var_int_t* %94 to [4 x i8]*
  %96 = getelementptr inbounds [4 x i8], [4 x i8]* %95, i64 0, i64 2
  %97 = load i8, i8* %96, align 2, !noalias !8
  %98 = icmp ne i8 %97, 0
  %99 = bitcast %union._hb_var_int_t* %94 to i16*
  %100 = load i16, i16* %99, align 4, !noalias !8
  %101 = and i16 %100, 32
  %102 = icmp eq i16 %101, 0
  %103 = or i1 %98, %102
  br i1 %103, label %110, label %104

104:                                              ; preds = %92
  %105 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %18, i64 %93, i32 3
  %106 = bitcast %union._hb_var_int_t* %105 to i16*
  %107 = load i16, i16* %106, align 4, !noalias !8
  %108 = and i16 %107, 16
  %109 = icmp eq i16 %108, 0
  br i1 %109, label %88, label %110

110:                                              ; preds = %104, %92
  %111 = and i16 %100, 31
  %112 = zext i16 %111 to i32
  %113 = shl i32 1, %112
  %114 = and i32 %113, 7168
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %149, label %116

116:                                              ; preds = %110, %139
  %117 = phi %struct.hb_glyph_info_t* [ %127, %139 ], [ %87, %110 ]
  %118 = phi i32 [ %125, %139 ], [ %85, %110 ]
  %119 = phi i32 [ %124, %139 ], [ %84, %110 ]
  %120 = phi i32 [ %121, %139 ], [ %86, %110 ]
  %121 = add i32 %120, 1
  %122 = icmp ne i32 %119, 0
  %123 = zext i1 %122 to i32
  %124 = sub i32 %119, %123
  %125 = add i32 %118, %123
  %126 = zext i1 %122 to i64
  %127 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %117, i64 %126
  %128 = icmp eq i32 %124, 0
  br i1 %128, label %145, label %129

129:                                              ; preds = %116
  %130 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %117, i64 %126, i32 4
  %131 = bitcast %union._hb_var_int_t* %130 to [4 x i8]*
  %132 = getelementptr inbounds [4 x i8], [4 x i8]* %131, i64 0, i64 2
  %133 = load i8, i8* %132, align 2, !noalias !8
  switch i8 %133, label %145 [
    i8 0, label %134
    i8 14, label %80
  ]

134:                                              ; preds = %129
  %135 = bitcast %union._hb_var_int_t* %130 to i16*
  %136 = load i16, i16* %135, align 4, !noalias !8
  %137 = and i16 %136, 32
  %138 = icmp eq i16 %137, 0
  br i1 %138, label %145, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %117, i64 %126, i32 3
  %141 = bitcast %union._hb_var_int_t* %140 to i16*
  %142 = load i16, i16* %141, align 4, !noalias !8
  %143 = and i16 %142, 16
  %144 = icmp eq i16 %143, 0
  br i1 %144, label %116, label %145

145:                                              ; preds = %139, %134, %129, %116
  %146 = ptrtoint %struct.hb_glyph_info_t* %127 to i64
  br label %149

147:                                              ; preds = %56
  %148 = ptrtoint %struct.hb_glyph_info_t* %62 to i64
  br label %149

149:                                              ; preds = %110, %88, %147, %145, %70, %3
  %150 = phi i64 [ %146, %145 ], [ %71, %70 ], [ %15, %3 ], [ %148, %147 ], [ %83, %88 ], [ %83, %110 ]
  %151 = phi i32 [ %124, %145 ], [ %72, %70 ], [ 0, %3 ], [ 0, %147 ], [ %84, %88 ], [ %84, %110 ]
  %152 = phi i32 [ %125, %145 ], [ %73, %70 ], [ 0, %3 ], [ %60, %147 ], [ %85, %88 ], [ %85, %110 ]
  %153 = phi i32 [ %121, %145 ], [ %73, %70 ], [ 0, %3 ], [ %60, %147 ], [ %86, %88 ], [ %86, %110 ]
  %154 = zext i32 %153 to i64
  %155 = or i64 %154, 4294967296
  %156 = zext i32 %152 to i64
  %157 = shl nuw i64 %156, 32
  %158 = zext i32 %151 to i64
  %159 = or i64 %157, %158
  %160 = bitcast %struct.machine_index_t* %7 to i64*
  store i64 4294967296, i64* %160, align 8
  %161 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %7, i64 0, i32 0, i32 1
  %162 = bitcast %struct.hb_filter_iter_t* %161 to i64*
  store i64 %155, i64* %162, align 8
  %163 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %164 = bitcast %struct.hb_array_t* %163 to i64*
  store i64 %150, i64* %164, align 8
  %165 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %166 = bitcast i32* %165 to i64*
  store i64 %159, i64* %166, align 8
  %167 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %7, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0
  store %struct.anon.171* @_ZL9hb_second, %struct.anon.171** %167, align 8
  %168 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %7, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  store %struct.hb_buffer_t** %5, %struct.hb_buffer_t*** %168, align 8
  %169 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %7, i64 0, i32 0, i32 1, i32 1, i32 0, i32 1
  store %struct.hb_glyph_info_t** %6, %struct.hb_glyph_info_t*** %169, align 8
  %170 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %7, i64 0, i32 0, i32 1, i32 2, i32 0
  store %struct.anon.175* @_ZL11hb_identity, %struct.anon.175** %170, align 8
  %171 = bitcast %struct.machine_index_t* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %171) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 -86, i64 72, i1 false) #5
  %172 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %173 = icmp eq i32 %151, 0
  br i1 %173, label %241, label %174

174:                                              ; preds = %149
  %175 = inttoptr i64 %150 to %struct.hb_glyph_info_t*
  br label %176

176:                                              ; preds = %237, %174
  %177 = phi i32 [ %238, %237 ], [ 1, %174 ]
  %178 = phi i32 [ %188, %237 ], [ %151, %174 ]
  %179 = phi %struct.hb_glyph_info_t* [ %190, %237 ], [ %175, %174 ]
  %180 = phi i32 [ %185, %237 ], [ %153, %174 ]
  br label %181

181:                                              ; preds = %208, %176
  %182 = phi %struct.hb_glyph_info_t* [ %179, %176 ], [ %190, %208 ]
  %183 = phi i32 [ %178, %176 ], [ %188, %208 ]
  %184 = phi i32 [ %180, %176 ], [ %185, %208 ]
  %185 = add i32 %184, 1
  %186 = icmp ne i32 %183, 0
  %187 = zext i1 %186 to i32
  %188 = sub i32 %183, %187
  %189 = zext i1 %186 to i64
  %190 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %182, i64 %189
  %191 = icmp eq i32 %188, 0
  br i1 %191, label %239, label %192

192:                                              ; preds = %181
  %193 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %182, i64 %189, i32 4
  %194 = bitcast %union._hb_var_int_t* %193 to [4 x i8]*
  %195 = getelementptr inbounds [4 x i8], [4 x i8]* %194, i64 0, i64 2
  %196 = load i8, i8* %195, align 2
  switch i8 %196, label %237 [
    i8 0, label %197
    i8 14, label %209
  ]

197:                                              ; preds = %192
  %198 = bitcast %union._hb_var_int_t* %193 to i16*
  %199 = load i16, i16* %198, align 4
  %200 = and i16 %199, 32
  %201 = icmp eq i16 %200, 0
  br i1 %201, label %237, label %202

202:                                              ; preds = %197
  %203 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %182, i64 %189, i32 3
  %204 = bitcast %union._hb_var_int_t* %203 to i16*
  %205 = load i16, i16* %204, align 4
  %206 = and i16 %205, 16
  %207 = icmp eq i16 %206, 0
  br i1 %207, label %208, label %237

208:                                              ; preds = %202, %231
  br label %181

209:                                              ; preds = %192, %225
  %210 = phi i32 [ %211, %225 ], [ %185, %192 ]
  %211 = add i32 %210, 1
  %212 = icmp ult i32 %211, %20
  br i1 %212, label %213, label %237

213:                                              ; preds = %209
  %214 = zext i32 %211 to i64
  %215 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %18, i64 %214, i32 4
  %216 = bitcast %union._hb_var_int_t* %215 to [4 x i8]*
  %217 = getelementptr inbounds [4 x i8], [4 x i8]* %216, i64 0, i64 2
  %218 = load i8, i8* %217, align 2
  %219 = icmp ne i8 %218, 0
  %220 = bitcast %union._hb_var_int_t* %215 to i16*
  %221 = load i16, i16* %220, align 4
  %222 = and i16 %221, 32
  %223 = icmp eq i16 %222, 0
  %224 = or i1 %219, %223
  br i1 %224, label %231, label %225

225:                                              ; preds = %213
  %226 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %18, i64 %214, i32 3
  %227 = bitcast %union._hb_var_int_t* %226 to i16*
  %228 = load i16, i16* %227, align 4
  %229 = and i16 %228, 16
  %230 = icmp eq i16 %229, 0
  br i1 %230, label %209, label %231

231:                                              ; preds = %225, %213
  %232 = and i16 %221, 31
  %233 = zext i16 %232 to i32
  %234 = shl i32 1, %233
  %235 = and i32 %234, 7168
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %208

237:                                              ; preds = %231, %202, %197, %192, %209
  %238 = add i32 %177, 1
  br label %176

239:                                              ; preds = %181
  %240 = icmp eq i32 %177, -1
  br i1 %240, label %243, label %241

241:                                              ; preds = %239, %149
  %242 = phi i32 [ %177, %239 ], [ 0, %149 ]
  br label %243

243:                                              ; preds = %241, %239
  %244 = phi i32 [ %242, %241 ], [ -1, %239 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %171, i8* nonnull align 8 %17, i64 72, i1 false) #5
  %245 = bitcast %struct.machine_index_t* %8 to %struct.hb_iter_t.144*
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %245, i32 %244) #5
  %246 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %8, i64 0, i32 0, i32 0, i32 0
  %247 = load i32, i32* %246, align 8
  %248 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %249 = load i32, i32* %248, align 8
  %250 = bitcast %struct.machine_index_t* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %250) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %250, i8* nonnull align 8 %17, i64 72, i1 false) #5
  %251 = bitcast %struct.machine_index_t* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %251) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %251, i8* nonnull align 8 %17, i64 72, i1 false) #5
  %252 = bitcast %struct.machine_index_t* %9 to %struct.hb_iter_t.144*
  %253 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %9, i64 0, i32 0, i32 0, i32 0
  %254 = load i32, i32* %253, align 8
  %255 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %256 = load i32, i32* %255, align 8, !noalias !13
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %259, !prof !2

258:                                              ; preds = %243
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !13
  br label %259

259:                                              ; preds = %258, %243
  %260 = icmp eq i32 %254, 0
  br i1 %260, label %262, label %261

261:                                              ; preds = %259
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %252, i32 %254) #5
  br label %262

262:                                              ; preds = %261, %259
  %263 = bitcast %struct.machine_index_t* %10 to %struct.hb_iter_t.144*
  %264 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %10, i64 0, i32 0, i32 0, i32 0
  %265 = load i32, i32* %264, align 8
  %266 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %267 = load i32, i32* %266, align 8, !noalias !18
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270, !prof !2

269:                                              ; preds = %262
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !18
  br label %270

270:                                              ; preds = %269, %262
  %271 = icmp eq i32 %265, 0
  br i1 %271, label %273, label %272

272:                                              ; preds = %270
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %263, i32 %265) #5
  br label %273

273:                                              ; preds = %272, %270
  %274 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %7, i64 0, i32 0, i32 0, i32 0
  %275 = icmp eq i32 %249, 0
  %276 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %277 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %10, i64 0, i32 0, i32 0, i32 1
  %278 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %279 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %280 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %281 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 2
  %282 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %10, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %283 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %10, i64 0, i32 0, i32 1, i32 1, i32 0, i32 1
  %284 = bitcast %struct.machine_index_t* %7 to %struct.hb_iter_t.144*
  %285 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %286 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %7, i64 0, i32 0, i32 0, i32 1
  %287 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %288 = getelementptr inbounds %struct.machine_index_t, %struct.machine_index_t* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 2
  br label %289

289:                                              ; preds = %2209, %273
  %290 = phi i32 [ %151, %273 ], [ %2210, %2209 ]
  %291 = phi i32 [ 1, %273 ], [ %2207, %2209 ]
  %292 = phi i32 [ 0, %273 ], [ %2208, %2209 ]
  %293 = phi i32 [ 2, %273 ], [ %397, %2209 ]
  %294 = phi i32 [ 1, %273 ], [ %2184, %2209 ]
  %295 = phi i32 [ 0, %273 ], [ %393, %2209 ]
  %296 = icmp eq i32 %290, 0
  br i1 %296, label %297, label %298, !prof !2

297:                                              ; preds = %289
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !23
  br label %298

298:                                              ; preds = %297, %289
  br i1 %275, label %299, label %300, !prof !2

299:                                              ; preds = %298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !28
  br label %300

300:                                              ; preds = %299, %298
  %301 = icmp eq i32 %292, %247
  br i1 %301, label %302, label %306

302:                                              ; preds = %300
  br i1 %296, label %303, label %304, !prof !2

303:                                              ; preds = %302
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !33
  br label %304

304:                                              ; preds = %303, %302
  br i1 %275, label %305, label %306, !prof !2

305:                                              ; preds = %304
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !38
  br label %306

306:                                              ; preds = %305, %304, %300
  %307 = sext i32 %293 to i64
  %308 = getelementptr inbounds [63 x i8], [63 x i8]* bitcast (<{ i8, i8, i8, [60 x i8] }>* @_ZL40_use_syllable_machine_from_state_actions to [63 x i8]*), i64 0, i64 %307
  %309 = load i8, i8* %308, align 1
  %310 = icmp eq i8 %309, 4
  br i1 %310, label %311, label %326

311:                                              ; preds = %306
  br i1 %296, label %312, label %313, !prof !2

312:                                              ; preds = %311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !43
  br label %313

313:                                              ; preds = %312, %311
  %314 = load i32, i32* %253, align 8, !noalias !48
  %315 = load i32, i32* %255, align 8, !noalias !48
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %318, !prof !2

317:                                              ; preds = %313
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !48
  br label %318

318:                                              ; preds = %317, %313
  %319 = icmp ult i32 %314, %292
  br i1 %319, label %320, label %322

320:                                              ; preds = %318
  %321 = sub i32 %292, %314
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %252, i32 %321) #5
  br label %326

322:                                              ; preds = %318
  %323 = icmp ugt i32 %314, %292
  br i1 %323, label %324, label %326

324:                                              ; preds = %322
  %325 = sub i32 %314, %292
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %252, i32 %325) #5
  br label %326

326:                                              ; preds = %324, %322, %320, %306
  br i1 %296, label %327, label %328, !prof !2

327:                                              ; preds = %326
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !53
  br label %328

328:                                              ; preds = %327, %326
  br i1 %275, label %329, label %330, !prof !2

329:                                              ; preds = %328
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !58
  br label %330

330:                                              ; preds = %329, %328
  br i1 %301, label %331, label %338

331:                                              ; preds = %330
  %332 = icmp eq i32 %293, 62
  br i1 %332, label %392, label %333

333:                                              ; preds = %331
  %334 = getelementptr inbounds [63 x i8], [63 x i8]* @_ZL31_use_syllable_machine_eof_trans, i64 0, i64 %307
  %335 = load i8, i8* %334, align 1
  %336 = sext i8 %335 to i32
  %337 = add nsw i32 %336, -1
  br label %392

338:                                              ; preds = %330
  %339 = shl nsw i32 %293, 1
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds [125 x i8], [125 x i8]* @_ZL32_use_syllable_machine_trans_keys, i64 0, i64 %340
  %342 = getelementptr inbounds [63 x i16], [63 x i16]* @_ZL35_use_syllable_machine_index_offsets, i64 0, i64 %307
  %343 = load i16, i16* %342, align 2
  %344 = sext i16 %343 to i64
  %345 = getelementptr inbounds [1088 x i8], [1088 x i8]* @_ZL30_use_syllable_machine_indicies, i64 0, i64 %344
  br i1 %296, label %346, label %347, !prof !2

346:                                              ; preds = %338
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !63
  br label %349

347:                                              ; preds = %338
  %348 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8, !noalias !63
  br label %349

349:                                              ; preds = %347, %346
  %350 = phi %struct.hb_glyph_info_t* [ bitcast ([48 x i64]* @_hb_CrapPool to %struct.hb_glyph_info_t*), %346 ], [ %348, %347 ]
  %351 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %350, i64 0, i32 4
  %352 = bitcast %union._hb_var_int_t* %351 to [4 x i8]*
  %353 = getelementptr inbounds [4 x i8], [4 x i8]* %352, i64 0, i64 2
  %354 = load i8, i8* %353, align 2
  %355 = icmp ult i8 %354, 53
  br i1 %355, label %356, label %388

356:                                              ; preds = %349
  br i1 %296, label %357, label %358, !prof !2

357:                                              ; preds = %356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !72
  br label %360

358:                                              ; preds = %356
  %359 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8, !noalias !72
  br label %360

360:                                              ; preds = %358, %357
  %361 = phi %struct.hb_glyph_info_t* [ bitcast ([48 x i64]* @_hb_CrapPool to %struct.hb_glyph_info_t*), %357 ], [ %359, %358 ]
  %362 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %361, i64 0, i32 4
  %363 = bitcast %union._hb_var_int_t* %362 to [4 x i8]*
  %364 = getelementptr inbounds [4 x i8], [4 x i8]* %363, i64 0, i64 2
  %365 = load i8, i8* %364, align 2
  %366 = zext i8 %365 to i64
  %367 = getelementptr inbounds [54 x i8], [54 x i8]* @_ZL32_use_syllable_machine_char_class, i64 0, i64 %366
  %368 = load i8, i8* %367, align 1
  %369 = sext i8 %368 to i32
  %370 = getelementptr inbounds i8, i8* %341, i64 1
  %371 = load i8, i8* %370, align 1
  %372 = zext i8 %371 to i32
  %373 = icmp sgt i32 %369, %372
  br i1 %373, label %384, label %374

374:                                              ; preds = %360
  %375 = load i8, i8* %341, align 2
  %376 = zext i8 %375 to i32
  %377 = icmp slt i32 %369, %376
  br i1 %377, label %384, label %378

378:                                              ; preds = %374
  %379 = sub nsw i32 %369, %376
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds i8, i8* %345, i64 %380
  %382 = load i8, i8* %381, align 1
  %383 = sext i8 %382 to i32
  br label %392

384:                                              ; preds = %374, %360
  %385 = getelementptr inbounds [63 x i8], [63 x i8]* @_ZL36_use_syllable_machine_index_defaults, i64 0, i64 %307
  %386 = load i8, i8* %385, align 1
  %387 = sext i8 %386 to i32
  br label %392

388:                                              ; preds = %349
  %389 = getelementptr inbounds [63 x i8], [63 x i8]* @_ZL36_use_syllable_machine_index_defaults, i64 0, i64 %307
  %390 = load i8, i8* %389, align 1
  %391 = sext i8 %390 to i32
  br label %392

392:                                              ; preds = %388, %384, %378, %333, %331
  %393 = phi i32 [ %337, %333 ], [ %295, %331 ], [ %383, %378 ], [ %387, %384 ], [ %391, %388 ]
  %394 = zext i32 %393 to i64
  %395 = getelementptr inbounds [77 x i8], [77 x i8]* @_ZL32_use_syllable_machine_cond_targs, i64 0, i64 %394
  %396 = load i8, i8* %395, align 1
  %397 = sext i8 %396 to i32
  %398 = getelementptr inbounds [77 x i8], [77 x i8]* @_ZL34_use_syllable_machine_cond_actions, i64 0, i64 %394
  %399 = load i8, i8* %398, align 1
  %400 = icmp eq i8 %399, 0
  br i1 %400, label %2183, label %401

401:                                              ; preds = %392
  %402 = sext i8 %399 to i32
  switch i32 %402, label %2183 [
    i32 2, label %403
    i32 5, label %486
    i32 9, label %597
    i32 7, label %709
    i32 6, label %821
    i32 10, label %933
    i32 11, label %1059
    i32 8, label %1185
    i32 13, label %1311
    i32 12, label %1437
    i32 14, label %1563
    i32 17, label %1689
    i32 15, label %1815
    i32 16, label %1941
    i32 1, label %2067
  ]

403:                                              ; preds = %401
  %404 = load i32, i32* %172, align 4
  %405 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %168, align 8
  %406 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %169, align 8
  %407 = add i32 %292, %291
  br i1 %296, label %472, label %408

408:                                              ; preds = %403
  %409 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8
  %410 = load i32, i32* %287, align 8
  br label %411

411:                                              ; preds = %438, %408
  %412 = phi %struct.hb_glyph_info_t* [ %409, %408 ], [ %420, %438 ]
  %413 = phi i32 [ %290, %408 ], [ %418, %438 ]
  %414 = phi i32 [ %410, %408 ], [ %415, %438 ]
  %415 = add i32 %414, %404
  %416 = icmp ne i32 %413, 0
  %417 = zext i1 %416 to i32
  %418 = sub i32 %413, %417
  %419 = zext i1 %416 to i64
  %420 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %412, i64 %419
  %421 = icmp eq i32 %418, 0
  br i1 %421, label %472, label %422

422:                                              ; preds = %411
  %423 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %412, i64 %419, i32 4
  %424 = bitcast %union._hb_var_int_t* %423 to [4 x i8]*
  %425 = getelementptr inbounds [4 x i8], [4 x i8]* %424, i64 0, i64 2
  %426 = load i8, i8* %425, align 2
  switch i8 %426, label %473 [
    i8 0, label %427
    i8 14, label %439
  ]

427:                                              ; preds = %422
  %428 = bitcast %union._hb_var_int_t* %423 to i16*
  %429 = load i16, i16* %428, align 4
  %430 = and i16 %429, 32
  %431 = icmp eq i16 %430, 0
  br i1 %431, label %473, label %432

432:                                              ; preds = %427
  %433 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %412, i64 %419, i32 3
  %434 = bitcast %union._hb_var_int_t* %433 to i16*
  %435 = load i16, i16* %434, align 4
  %436 = and i16 %435, 16
  %437 = icmp eq i16 %436, 0
  br i1 %437, label %438, label %473

438:                                              ; preds = %432, %466
  br label %411

439:                                              ; preds = %422
  %440 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %405, align 8
  %441 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %440, i64 0, i32 15
  %442 = load i32, i32* %441, align 8
  br label %443

443:                                              ; preds = %460, %439
  %444 = phi i32 [ %445, %460 ], [ %415, %439 ]
  %445 = add i32 %444, 1
  %446 = icmp ult i32 %445, %442
  br i1 %446, label %447, label %473

447:                                              ; preds = %443
  %448 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %406, align 8
  %449 = zext i32 %445 to i64
  %450 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %448, i64 %449, i32 4
  %451 = bitcast %union._hb_var_int_t* %450 to [4 x i8]*
  %452 = getelementptr inbounds [4 x i8], [4 x i8]* %451, i64 0, i64 2
  %453 = load i8, i8* %452, align 2
  %454 = icmp ne i8 %453, 0
  %455 = bitcast %union._hb_var_int_t* %450 to i16*
  %456 = load i16, i16* %455, align 4
  %457 = and i16 %456, 32
  %458 = icmp eq i16 %457, 0
  %459 = or i1 %454, %458
  br i1 %459, label %466, label %460

460:                                              ; preds = %447
  %461 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %448, i64 %449, i32 3
  %462 = bitcast %union._hb_var_int_t* %461 to i16*
  %463 = load i16, i16* %462, align 4
  %464 = and i16 %463, 16
  %465 = icmp eq i16 %464, 0
  br i1 %465, label %443, label %466

466:                                              ; preds = %460, %447
  %467 = and i16 %456, 31
  %468 = zext i16 %467 to i32
  %469 = shl i32 1, %468
  %470 = and i32 %469, 7168
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %473, label %438

472:                                              ; preds = %411, %403
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !81
  br label %473

473:                                              ; preds = %466, %432, %427, %422, %443, %472
  %474 = load i32, i32* %264, align 8, !noalias !86
  %475 = load i32, i32* %266, align 8, !noalias !86
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %477, label %478, !prof !2

477:                                              ; preds = %473
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !86
  br label %478

478:                                              ; preds = %477, %473
  %479 = icmp ult i32 %474, %407
  br i1 %479, label %480, label %482

480:                                              ; preds = %478
  %481 = sub i32 %407, %474
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %263, i32 %481) #5
  br label %2183

482:                                              ; preds = %478
  %483 = icmp ugt i32 %474, %407
  br i1 %483, label %484, label %2183

484:                                              ; preds = %482
  %485 = sub i32 %474, %407
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %263, i32 %485) #5
  br label %2183

486:                                              ; preds = %401
  %487 = load i32, i32* %172, align 4
  %488 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %168, align 8
  %489 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %169, align 8
  %490 = add i32 %292, %291
  br i1 %296, label %555, label %491

491:                                              ; preds = %486
  %492 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8
  %493 = load i32, i32* %287, align 8
  br label %494

494:                                              ; preds = %521, %491
  %495 = phi %struct.hb_glyph_info_t* [ %492, %491 ], [ %503, %521 ]
  %496 = phi i32 [ %290, %491 ], [ %501, %521 ]
  %497 = phi i32 [ %493, %491 ], [ %498, %521 ]
  %498 = add i32 %497, %487
  %499 = icmp ne i32 %496, 0
  %500 = zext i1 %499 to i32
  %501 = sub i32 %496, %500
  %502 = zext i1 %499 to i64
  %503 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %495, i64 %502
  %504 = icmp eq i32 %501, 0
  br i1 %504, label %555, label %505

505:                                              ; preds = %494
  %506 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %495, i64 %502, i32 4
  %507 = bitcast %union._hb_var_int_t* %506 to [4 x i8]*
  %508 = getelementptr inbounds [4 x i8], [4 x i8]* %507, i64 0, i64 2
  %509 = load i8, i8* %508, align 2
  switch i8 %509, label %556 [
    i8 0, label %510
    i8 14, label %522
  ]

510:                                              ; preds = %505
  %511 = bitcast %union._hb_var_int_t* %506 to i16*
  %512 = load i16, i16* %511, align 4
  %513 = and i16 %512, 32
  %514 = icmp eq i16 %513, 0
  br i1 %514, label %556, label %515

515:                                              ; preds = %510
  %516 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %495, i64 %502, i32 3
  %517 = bitcast %union._hb_var_int_t* %516 to i16*
  %518 = load i16, i16* %517, align 4
  %519 = and i16 %518, 16
  %520 = icmp eq i16 %519, 0
  br i1 %520, label %521, label %556

521:                                              ; preds = %515, %549
  br label %494

522:                                              ; preds = %505
  %523 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %488, align 8
  %524 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %523, i64 0, i32 15
  %525 = load i32, i32* %524, align 8
  br label %526

526:                                              ; preds = %543, %522
  %527 = phi i32 [ %528, %543 ], [ %498, %522 ]
  %528 = add i32 %527, 1
  %529 = icmp ult i32 %528, %525
  br i1 %529, label %530, label %556

530:                                              ; preds = %526
  %531 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %489, align 8
  %532 = zext i32 %528 to i64
  %533 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %531, i64 %532, i32 4
  %534 = bitcast %union._hb_var_int_t* %533 to [4 x i8]*
  %535 = getelementptr inbounds [4 x i8], [4 x i8]* %534, i64 0, i64 2
  %536 = load i8, i8* %535, align 2
  %537 = icmp ne i8 %536, 0
  %538 = bitcast %union._hb_var_int_t* %533 to i16*
  %539 = load i16, i16* %538, align 4
  %540 = and i16 %539, 32
  %541 = icmp eq i16 %540, 0
  %542 = or i1 %537, %541
  br i1 %542, label %549, label %543

543:                                              ; preds = %530
  %544 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %531, i64 %532, i32 3
  %545 = bitcast %union._hb_var_int_t* %544 to i16*
  %546 = load i16, i16* %545, align 4
  %547 = and i16 %546, 16
  %548 = icmp eq i16 %547, 0
  br i1 %548, label %526, label %549

549:                                              ; preds = %543, %530
  %550 = and i16 %539, 31
  %551 = zext i16 %550 to i32
  %552 = shl i32 1, %551
  %553 = and i32 %552, 7168
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %556, label %521

555:                                              ; preds = %494, %486
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !91
  br label %556

556:                                              ; preds = %549, %515, %510, %505, %526, %555
  %557 = load i32, i32* %264, align 8, !noalias !96
  %558 = load i32, i32* %266, align 8, !noalias !96
  %559 = icmp eq i32 %558, 0
  br i1 %559, label %560, label %561, !prof !2

560:                                              ; preds = %556
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !96
  br label %561

561:                                              ; preds = %560, %556
  %562 = icmp ult i32 %557, %490
  br i1 %562, label %563, label %565

563:                                              ; preds = %561
  %564 = sub i32 %490, %557
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %263, i32 %564) #5
  br label %569

565:                                              ; preds = %561
  %566 = icmp ugt i32 %557, %490
  br i1 %566, label %567, label %569

567:                                              ; preds = %565
  %568 = sub i32 %557, %490
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %263, i32 %568) #5
  br label %569

569:                                              ; preds = %567, %565, %563
  %570 = load i32, i32* %285, align 8, !noalias !101
  %571 = load i32, i32* %255, align 8, !noalias !101
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %573, label %574, !prof !2

573:                                              ; preds = %569
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !101
  br label %574

574:                                              ; preds = %573, %569
  %575 = trunc i32 %294 to i8
  %576 = shl i8 %575, 4
  %577 = zext i32 %570 to i64
  br label %578

578:                                              ; preds = %591, %574
  %579 = phi i64 [ %596, %591 ], [ %577, %574 ]
  %580 = load i32, i32* %278, align 8, !noalias !110
  %581 = load i32, i32* %266, align 8, !noalias !110
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %583, label %584, !prof !2

583:                                              ; preds = %578
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !110
  br label %584

584:                                              ; preds = %583, %578
  %585 = zext i32 %580 to i64
  %586 = icmp ult i64 %579, %585
  br i1 %586, label %591, label %587

587:                                              ; preds = %584
  %588 = add i32 %294, 1
  %589 = icmp eq i32 %588, 16
  %590 = select i1 %589, i32 1, i32 %588, !prof !2
  br label %2183

591:                                              ; preds = %584
  %592 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %593 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %592, i64 %579, i32 3
  %594 = bitcast %union._hb_var_int_t* %593 to [4 x i8]*
  %595 = getelementptr inbounds [4 x i8], [4 x i8]* %594, i64 0, i64 3
  store i8 %576, i8* %595, align 1
  %596 = add nuw nsw i64 %579, 1
  br label %578

597:                                              ; preds = %401
  %598 = load i32, i32* %172, align 4
  %599 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %168, align 8
  %600 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %169, align 8
  %601 = add i32 %292, %291
  br i1 %296, label %666, label %602

602:                                              ; preds = %597
  %603 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8
  %604 = load i32, i32* %287, align 8
  br label %605

605:                                              ; preds = %632, %602
  %606 = phi %struct.hb_glyph_info_t* [ %603, %602 ], [ %614, %632 ]
  %607 = phi i32 [ %290, %602 ], [ %612, %632 ]
  %608 = phi i32 [ %604, %602 ], [ %609, %632 ]
  %609 = add i32 %608, %598
  %610 = icmp ne i32 %607, 0
  %611 = zext i1 %610 to i32
  %612 = sub i32 %607, %611
  %613 = zext i1 %610 to i64
  %614 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %606, i64 %613
  %615 = icmp eq i32 %612, 0
  br i1 %615, label %666, label %616

616:                                              ; preds = %605
  %617 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %606, i64 %613, i32 4
  %618 = bitcast %union._hb_var_int_t* %617 to [4 x i8]*
  %619 = getelementptr inbounds [4 x i8], [4 x i8]* %618, i64 0, i64 2
  %620 = load i8, i8* %619, align 2
  switch i8 %620, label %667 [
    i8 0, label %621
    i8 14, label %633
  ]

621:                                              ; preds = %616
  %622 = bitcast %union._hb_var_int_t* %617 to i16*
  %623 = load i16, i16* %622, align 4
  %624 = and i16 %623, 32
  %625 = icmp eq i16 %624, 0
  br i1 %625, label %667, label %626

626:                                              ; preds = %621
  %627 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %606, i64 %613, i32 3
  %628 = bitcast %union._hb_var_int_t* %627 to i16*
  %629 = load i16, i16* %628, align 4
  %630 = and i16 %629, 16
  %631 = icmp eq i16 %630, 0
  br i1 %631, label %632, label %667

632:                                              ; preds = %626, %660
  br label %605

633:                                              ; preds = %616
  %634 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %599, align 8
  %635 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %634, i64 0, i32 15
  %636 = load i32, i32* %635, align 8
  br label %637

637:                                              ; preds = %654, %633
  %638 = phi i32 [ %639, %654 ], [ %609, %633 ]
  %639 = add i32 %638, 1
  %640 = icmp ult i32 %639, %636
  br i1 %640, label %641, label %667

641:                                              ; preds = %637
  %642 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %600, align 8
  %643 = zext i32 %639 to i64
  %644 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %642, i64 %643, i32 4
  %645 = bitcast %union._hb_var_int_t* %644 to [4 x i8]*
  %646 = getelementptr inbounds [4 x i8], [4 x i8]* %645, i64 0, i64 2
  %647 = load i8, i8* %646, align 2
  %648 = icmp ne i8 %647, 0
  %649 = bitcast %union._hb_var_int_t* %644 to i16*
  %650 = load i16, i16* %649, align 4
  %651 = and i16 %650, 32
  %652 = icmp eq i16 %651, 0
  %653 = or i1 %648, %652
  br i1 %653, label %660, label %654

654:                                              ; preds = %641
  %655 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %642, i64 %643, i32 3
  %656 = bitcast %union._hb_var_int_t* %655 to i16*
  %657 = load i16, i16* %656, align 4
  %658 = and i16 %657, 16
  %659 = icmp eq i16 %658, 0
  br i1 %659, label %637, label %660

660:                                              ; preds = %654, %641
  %661 = and i16 %650, 31
  %662 = zext i16 %661 to i32
  %663 = shl i32 1, %662
  %664 = and i32 %663, 7168
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %667, label %632

666:                                              ; preds = %605, %597
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !119
  br label %667

667:                                              ; preds = %660, %626, %621, %616, %637, %666
  %668 = load i32, i32* %264, align 8, !noalias !124
  %669 = load i32, i32* %266, align 8, !noalias !124
  %670 = icmp eq i32 %669, 0
  br i1 %670, label %671, label %672, !prof !2

671:                                              ; preds = %667
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !124
  br label %672

672:                                              ; preds = %671, %667
  %673 = icmp ult i32 %668, %601
  br i1 %673, label %674, label %676

674:                                              ; preds = %672
  %675 = sub i32 %601, %668
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %263, i32 %675) #5
  br label %680

676:                                              ; preds = %672
  %677 = icmp ugt i32 %668, %601
  br i1 %677, label %678, label %680

678:                                              ; preds = %676
  %679 = sub i32 %668, %601
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %263, i32 %679) #5
  br label %680

680:                                              ; preds = %678, %676, %674
  %681 = load i32, i32* %285, align 8, !noalias !129
  %682 = load i32, i32* %255, align 8, !noalias !129
  %683 = icmp eq i32 %682, 0
  br i1 %683, label %684, label %685, !prof !2

684:                                              ; preds = %680
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !129
  br label %685

685:                                              ; preds = %684, %680
  %686 = trunc i32 %294 to i8
  %687 = shl i8 %686, 4
  %688 = or i8 %687, 3
  %689 = zext i32 %681 to i64
  br label %690

690:                                              ; preds = %703, %685
  %691 = phi i64 [ %708, %703 ], [ %689, %685 ]
  %692 = load i32, i32* %278, align 8, !noalias !138
  %693 = load i32, i32* %266, align 8, !noalias !138
  %694 = icmp eq i32 %693, 0
  br i1 %694, label %695, label %696, !prof !2

695:                                              ; preds = %690
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !138
  br label %696

696:                                              ; preds = %695, %690
  %697 = zext i32 %692 to i64
  %698 = icmp ult i64 %691, %697
  br i1 %698, label %703, label %699

699:                                              ; preds = %696
  %700 = add i32 %294, 1
  %701 = icmp eq i32 %700, 16
  %702 = select i1 %701, i32 1, i32 %700, !prof !2
  br label %2183

703:                                              ; preds = %696
  %704 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %705 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %704, i64 %691, i32 3
  %706 = bitcast %union._hb_var_int_t* %705 to [4 x i8]*
  %707 = getelementptr inbounds [4 x i8], [4 x i8]* %706, i64 0, i64 3
  store i8 %688, i8* %707, align 1
  %708 = add nuw nsw i64 %691, 1
  br label %690

709:                                              ; preds = %401
  %710 = load i32, i32* %172, align 4
  %711 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %168, align 8
  %712 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %169, align 8
  %713 = add i32 %292, %291
  br i1 %296, label %778, label %714

714:                                              ; preds = %709
  %715 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8
  %716 = load i32, i32* %287, align 8
  br label %717

717:                                              ; preds = %744, %714
  %718 = phi %struct.hb_glyph_info_t* [ %715, %714 ], [ %726, %744 ]
  %719 = phi i32 [ %290, %714 ], [ %724, %744 ]
  %720 = phi i32 [ %716, %714 ], [ %721, %744 ]
  %721 = add i32 %720, %710
  %722 = icmp ne i32 %719, 0
  %723 = zext i1 %722 to i32
  %724 = sub i32 %719, %723
  %725 = zext i1 %722 to i64
  %726 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %718, i64 %725
  %727 = icmp eq i32 %724, 0
  br i1 %727, label %778, label %728

728:                                              ; preds = %717
  %729 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %718, i64 %725, i32 4
  %730 = bitcast %union._hb_var_int_t* %729 to [4 x i8]*
  %731 = getelementptr inbounds [4 x i8], [4 x i8]* %730, i64 0, i64 2
  %732 = load i8, i8* %731, align 2
  switch i8 %732, label %779 [
    i8 0, label %733
    i8 14, label %745
  ]

733:                                              ; preds = %728
  %734 = bitcast %union._hb_var_int_t* %729 to i16*
  %735 = load i16, i16* %734, align 4
  %736 = and i16 %735, 32
  %737 = icmp eq i16 %736, 0
  br i1 %737, label %779, label %738

738:                                              ; preds = %733
  %739 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %718, i64 %725, i32 3
  %740 = bitcast %union._hb_var_int_t* %739 to i16*
  %741 = load i16, i16* %740, align 4
  %742 = and i16 %741, 16
  %743 = icmp eq i16 %742, 0
  br i1 %743, label %744, label %779

744:                                              ; preds = %738, %772
  br label %717

745:                                              ; preds = %728
  %746 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %711, align 8
  %747 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %746, i64 0, i32 15
  %748 = load i32, i32* %747, align 8
  br label %749

749:                                              ; preds = %766, %745
  %750 = phi i32 [ %751, %766 ], [ %721, %745 ]
  %751 = add i32 %750, 1
  %752 = icmp ult i32 %751, %748
  br i1 %752, label %753, label %779

753:                                              ; preds = %749
  %754 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %712, align 8
  %755 = zext i32 %751 to i64
  %756 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %754, i64 %755, i32 4
  %757 = bitcast %union._hb_var_int_t* %756 to [4 x i8]*
  %758 = getelementptr inbounds [4 x i8], [4 x i8]* %757, i64 0, i64 2
  %759 = load i8, i8* %758, align 2
  %760 = icmp ne i8 %759, 0
  %761 = bitcast %union._hb_var_int_t* %756 to i16*
  %762 = load i16, i16* %761, align 4
  %763 = and i16 %762, 32
  %764 = icmp eq i16 %763, 0
  %765 = or i1 %760, %764
  br i1 %765, label %772, label %766

766:                                              ; preds = %753
  %767 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %754, i64 %755, i32 3
  %768 = bitcast %union._hb_var_int_t* %767 to i16*
  %769 = load i16, i16* %768, align 4
  %770 = and i16 %769, 16
  %771 = icmp eq i16 %770, 0
  br i1 %771, label %749, label %772

772:                                              ; preds = %766, %753
  %773 = and i16 %762, 31
  %774 = zext i16 %773 to i32
  %775 = shl i32 1, %774
  %776 = and i32 %775, 7168
  %777 = icmp eq i32 %776, 0
  br i1 %777, label %779, label %744

778:                                              ; preds = %717, %709
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !147
  br label %779

779:                                              ; preds = %772, %738, %733, %728, %749, %778
  %780 = load i32, i32* %264, align 8, !noalias !152
  %781 = load i32, i32* %266, align 8, !noalias !152
  %782 = icmp eq i32 %781, 0
  br i1 %782, label %783, label %784, !prof !2

783:                                              ; preds = %779
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !152
  br label %784

784:                                              ; preds = %783, %779
  %785 = icmp ult i32 %780, %713
  br i1 %785, label %786, label %788

786:                                              ; preds = %784
  %787 = sub i32 %713, %780
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %263, i32 %787) #5
  br label %792

788:                                              ; preds = %784
  %789 = icmp ugt i32 %780, %713
  br i1 %789, label %790, label %792

790:                                              ; preds = %788
  %791 = sub i32 %780, %713
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %263, i32 %791) #5
  br label %792

792:                                              ; preds = %790, %788, %786
  %793 = load i32, i32* %285, align 8, !noalias !157
  %794 = load i32, i32* %255, align 8, !noalias !157
  %795 = icmp eq i32 %794, 0
  br i1 %795, label %796, label %797, !prof !2

796:                                              ; preds = %792
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !157
  br label %797

797:                                              ; preds = %796, %792
  %798 = trunc i32 %294 to i8
  %799 = shl i8 %798, 4
  %800 = or i8 %799, 8
  %801 = zext i32 %793 to i64
  br label %802

802:                                              ; preds = %815, %797
  %803 = phi i64 [ %820, %815 ], [ %801, %797 ]
  %804 = load i32, i32* %278, align 8, !noalias !166
  %805 = load i32, i32* %266, align 8, !noalias !166
  %806 = icmp eq i32 %805, 0
  br i1 %806, label %807, label %808, !prof !2

807:                                              ; preds = %802
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !166
  br label %808

808:                                              ; preds = %807, %802
  %809 = zext i32 %804 to i64
  %810 = icmp ult i64 %803, %809
  br i1 %810, label %815, label %811

811:                                              ; preds = %808
  %812 = add i32 %294, 1
  %813 = icmp eq i32 %812, 16
  %814 = select i1 %813, i32 1, i32 %812, !prof !2
  br label %2183

815:                                              ; preds = %808
  %816 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %817 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %816, i64 %803, i32 3
  %818 = bitcast %union._hb_var_int_t* %817 to [4 x i8]*
  %819 = getelementptr inbounds [4 x i8], [4 x i8]* %818, i64 0, i64 3
  store i8 %800, i8* %819, align 1
  %820 = add nuw nsw i64 %803, 1
  br label %802

821:                                              ; preds = %401
  %822 = load i32, i32* %172, align 4
  %823 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %168, align 8
  %824 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %169, align 8
  %825 = add i32 %292, %291
  br i1 %296, label %890, label %826

826:                                              ; preds = %821
  %827 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8
  %828 = load i32, i32* %287, align 8
  br label %829

829:                                              ; preds = %856, %826
  %830 = phi %struct.hb_glyph_info_t* [ %827, %826 ], [ %838, %856 ]
  %831 = phi i32 [ %290, %826 ], [ %836, %856 ]
  %832 = phi i32 [ %828, %826 ], [ %833, %856 ]
  %833 = add i32 %832, %822
  %834 = icmp ne i32 %831, 0
  %835 = zext i1 %834 to i32
  %836 = sub i32 %831, %835
  %837 = zext i1 %834 to i64
  %838 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %830, i64 %837
  %839 = icmp eq i32 %836, 0
  br i1 %839, label %890, label %840

840:                                              ; preds = %829
  %841 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %830, i64 %837, i32 4
  %842 = bitcast %union._hb_var_int_t* %841 to [4 x i8]*
  %843 = getelementptr inbounds [4 x i8], [4 x i8]* %842, i64 0, i64 2
  %844 = load i8, i8* %843, align 2
  switch i8 %844, label %891 [
    i8 0, label %845
    i8 14, label %857
  ]

845:                                              ; preds = %840
  %846 = bitcast %union._hb_var_int_t* %841 to i16*
  %847 = load i16, i16* %846, align 4
  %848 = and i16 %847, 32
  %849 = icmp eq i16 %848, 0
  br i1 %849, label %891, label %850

850:                                              ; preds = %845
  %851 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %830, i64 %837, i32 3
  %852 = bitcast %union._hb_var_int_t* %851 to i16*
  %853 = load i16, i16* %852, align 4
  %854 = and i16 %853, 16
  %855 = icmp eq i16 %854, 0
  br i1 %855, label %856, label %891

856:                                              ; preds = %850, %884
  br label %829

857:                                              ; preds = %840
  %858 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %823, align 8
  %859 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %858, i64 0, i32 15
  %860 = load i32, i32* %859, align 8
  br label %861

861:                                              ; preds = %878, %857
  %862 = phi i32 [ %863, %878 ], [ %833, %857 ]
  %863 = add i32 %862, 1
  %864 = icmp ult i32 %863, %860
  br i1 %864, label %865, label %891

865:                                              ; preds = %861
  %866 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %824, align 8
  %867 = zext i32 %863 to i64
  %868 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %866, i64 %867, i32 4
  %869 = bitcast %union._hb_var_int_t* %868 to [4 x i8]*
  %870 = getelementptr inbounds [4 x i8], [4 x i8]* %869, i64 0, i64 2
  %871 = load i8, i8* %870, align 2
  %872 = icmp ne i8 %871, 0
  %873 = bitcast %union._hb_var_int_t* %868 to i16*
  %874 = load i16, i16* %873, align 4
  %875 = and i16 %874, 32
  %876 = icmp eq i16 %875, 0
  %877 = or i1 %872, %876
  br i1 %877, label %884, label %878

878:                                              ; preds = %865
  %879 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %866, i64 %867, i32 3
  %880 = bitcast %union._hb_var_int_t* %879 to i16*
  %881 = load i16, i16* %880, align 4
  %882 = and i16 %881, 16
  %883 = icmp eq i16 %882, 0
  br i1 %883, label %861, label %884

884:                                              ; preds = %878, %865
  %885 = and i16 %874, 31
  %886 = zext i16 %885 to i32
  %887 = shl i32 1, %886
  %888 = and i32 %887, 7168
  %889 = icmp eq i32 %888, 0
  br i1 %889, label %891, label %856

890:                                              ; preds = %829, %821
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !175
  br label %891

891:                                              ; preds = %884, %850, %845, %840, %861, %890
  %892 = load i32, i32* %264, align 8, !noalias !180
  %893 = load i32, i32* %266, align 8, !noalias !180
  %894 = icmp eq i32 %893, 0
  br i1 %894, label %895, label %896, !prof !2

895:                                              ; preds = %891
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !180
  br label %896

896:                                              ; preds = %895, %891
  %897 = icmp ult i32 %892, %825
  br i1 %897, label %898, label %900

898:                                              ; preds = %896
  %899 = sub i32 %825, %892
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %263, i32 %899) #5
  br label %904

900:                                              ; preds = %896
  %901 = icmp ugt i32 %892, %825
  br i1 %901, label %902, label %904

902:                                              ; preds = %900
  %903 = sub i32 %892, %825
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %263, i32 %903) #5
  br label %904

904:                                              ; preds = %902, %900, %898
  %905 = load i32, i32* %285, align 8, !noalias !185
  %906 = load i32, i32* %255, align 8, !noalias !185
  %907 = icmp eq i32 %906, 0
  br i1 %907, label %908, label %909, !prof !2

908:                                              ; preds = %904
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !185
  br label %909

909:                                              ; preds = %908, %904
  %910 = trunc i32 %294 to i8
  %911 = shl i8 %910, 4
  %912 = or i8 %911, 9
  %913 = zext i32 %905 to i64
  br label %914

914:                                              ; preds = %927, %909
  %915 = phi i64 [ %932, %927 ], [ %913, %909 ]
  %916 = load i32, i32* %278, align 8, !noalias !194
  %917 = load i32, i32* %266, align 8, !noalias !194
  %918 = icmp eq i32 %917, 0
  br i1 %918, label %919, label %920, !prof !2

919:                                              ; preds = %914
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !194
  br label %920

920:                                              ; preds = %919, %914
  %921 = zext i32 %916 to i64
  %922 = icmp ult i64 %915, %921
  br i1 %922, label %927, label %923

923:                                              ; preds = %920
  %924 = add i32 %294, 1
  %925 = icmp eq i32 %924, 16
  %926 = select i1 %925, i32 1, i32 %924, !prof !2
  br label %2183

927:                                              ; preds = %920
  %928 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %929 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %928, i64 %915, i32 3
  %930 = bitcast %union._hb_var_int_t* %929 to [4 x i8]*
  %931 = getelementptr inbounds [4 x i8], [4 x i8]* %930, i64 0, i64 3
  store i8 %912, i8* %931, align 1
  %932 = add nuw nsw i64 %915, 1
  br label %914

933:                                              ; preds = %401
  br i1 %296, label %934, label %935, !prof !2

934:                                              ; preds = %933
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !203
  br label %935

935:                                              ; preds = %934, %933
  %936 = load i32, i32* %264, align 8, !noalias !208
  %937 = load i32, i32* %266, align 8, !noalias !208
  %938 = icmp eq i32 %937, 0
  br i1 %938, label %939, label %940, !prof !2

939:                                              ; preds = %935
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !208
  br label %940

940:                                              ; preds = %939, %935
  %941 = icmp ult i32 %936, %292
  br i1 %941, label %942, label %944

942:                                              ; preds = %940
  %943 = sub i32 %292, %936
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %263, i32 %943) #5
  br label %948

944:                                              ; preds = %940
  %945 = icmp ugt i32 %936, %292
  br i1 %945, label %946, label %948

946:                                              ; preds = %944
  %947 = sub i32 %936, %292
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %263, i32 %947) #5
  br label %948

948:                                              ; preds = %946, %944, %942
  %949 = load i32, i32* %172, align 4
  %950 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %168, align 8
  %951 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %169, align 8
  %952 = sub i32 %292, %291
  br i1 %296, label %1020, label %953

953:                                              ; preds = %948
  %954 = load i32, i32* %288, align 4
  %955 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8
  %956 = load i32, i32* %287, align 8
  br label %957

957:                                              ; preds = %986, %953
  %958 = phi %struct.hb_glyph_info_t* [ %955, %953 ], [ %968, %986 ]
  %959 = phi i32 [ %290, %953 ], [ %965, %986 ]
  %960 = phi i32 [ %954, %953 ], [ %966, %986 ]
  %961 = phi i32 [ %956, %953 ], [ %962, %986 ]
  %962 = sub i32 %961, %949
  %963 = icmp ne i32 %960, 0
  %964 = zext i1 %963 to i32
  %965 = add i32 %959, %964
  %966 = sub i32 %960, %964
  %967 = sext i1 %963 to i64
  %968 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %958, i64 %967
  %969 = icmp eq i32 %965, 0
  br i1 %969, label %1020, label %970

970:                                              ; preds = %957
  %971 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %958, i64 %967, i32 4
  %972 = bitcast %union._hb_var_int_t* %971 to [4 x i8]*
  %973 = getelementptr inbounds [4 x i8], [4 x i8]* %972, i64 0, i64 2
  %974 = load i8, i8* %973, align 2
  switch i8 %974, label %1021 [
    i8 0, label %975
    i8 14, label %987
  ]

975:                                              ; preds = %970
  %976 = bitcast %union._hb_var_int_t* %971 to i16*
  %977 = load i16, i16* %976, align 4
  %978 = and i16 %977, 32
  %979 = icmp eq i16 %978, 0
  br i1 %979, label %1021, label %980

980:                                              ; preds = %975
  %981 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %958, i64 %967, i32 3
  %982 = bitcast %union._hb_var_int_t* %981 to i16*
  %983 = load i16, i16* %982, align 4
  %984 = and i16 %983, 16
  %985 = icmp eq i16 %984, 0
  br i1 %985, label %986, label %1021

986:                                              ; preds = %980, %1014
  br label %957

987:                                              ; preds = %970
  %988 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %950, align 8
  %989 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %988, i64 0, i32 15
  %990 = load i32, i32* %989, align 8
  br label %991

991:                                              ; preds = %1008, %987
  %992 = phi i32 [ %993, %1008 ], [ %962, %987 ]
  %993 = add i32 %992, 1
  %994 = icmp ult i32 %993, %990
  br i1 %994, label %995, label %1021

995:                                              ; preds = %991
  %996 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %951, align 8
  %997 = zext i32 %993 to i64
  %998 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %996, i64 %997, i32 4
  %999 = bitcast %union._hb_var_int_t* %998 to [4 x i8]*
  %1000 = getelementptr inbounds [4 x i8], [4 x i8]* %999, i64 0, i64 2
  %1001 = load i8, i8* %1000, align 2
  %1002 = icmp ne i8 %1001, 0
  %1003 = bitcast %union._hb_var_int_t* %998 to i16*
  %1004 = load i16, i16* %1003, align 4
  %1005 = and i16 %1004, 32
  %1006 = icmp eq i16 %1005, 0
  %1007 = or i1 %1002, %1006
  br i1 %1007, label %1014, label %1008

1008:                                             ; preds = %995
  %1009 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %996, i64 %997, i32 3
  %1010 = bitcast %union._hb_var_int_t* %1009 to i16*
  %1011 = load i16, i16* %1010, align 4
  %1012 = and i16 %1011, 16
  %1013 = icmp eq i16 %1012, 0
  br i1 %1013, label %991, label %1014

1014:                                             ; preds = %1008, %995
  %1015 = and i16 %1004, 31
  %1016 = zext i16 %1015 to i32
  %1017 = shl i32 1, %1016
  %1018 = and i32 %1017, 7168
  %1019 = icmp eq i32 %1018, 0
  br i1 %1019, label %1021, label %986

1020:                                             ; preds = %957, %948
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !213
  br label %1021

1021:                                             ; preds = %1014, %980, %975, %970, %991, %1020
  br i1 %296, label %1022, label %1023, !prof !2

1022:                                             ; preds = %1021
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !218
  br label %1023

1023:                                             ; preds = %1022, %1021
  %1024 = icmp ult i32 %292, %291
  br i1 %1024, label %1025, label %1027

1025:                                             ; preds = %1023
  %1026 = sub i32 0, %291
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %284, i32 %1026) #5
  br label %1030

1027:                                             ; preds = %1023
  %1028 = icmp ult i32 %952, %292
  br i1 %1028, label %1029, label %1030

1029:                                             ; preds = %1027
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %284, i32 %291) #5
  br label %1030

1030:                                             ; preds = %1029, %1027, %1025
  %1031 = load i32, i32* %285, align 8, !noalias !223
  %1032 = load i32, i32* %255, align 8, !noalias !223
  %1033 = icmp eq i32 %1032, 0
  br i1 %1033, label %1034, label %1035, !prof !2

1034:                                             ; preds = %1030
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !223
  br label %1035

1035:                                             ; preds = %1034, %1030
  %1036 = trunc i32 %294 to i8
  %1037 = shl i8 %1036, 4
  %1038 = or i8 %1037, 1
  %1039 = zext i32 %1031 to i64
  br label %1040

1040:                                             ; preds = %1053, %1035
  %1041 = phi i64 [ %1058, %1053 ], [ %1039, %1035 ]
  %1042 = load i32, i32* %278, align 8, !noalias !232
  %1043 = load i32, i32* %266, align 8, !noalias !232
  %1044 = icmp eq i32 %1043, 0
  br i1 %1044, label %1045, label %1046, !prof !2

1045:                                             ; preds = %1040
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !232
  br label %1046

1046:                                             ; preds = %1045, %1040
  %1047 = zext i32 %1042 to i64
  %1048 = icmp ult i64 %1041, %1047
  br i1 %1048, label %1053, label %1049

1049:                                             ; preds = %1046
  %1050 = add i32 %294, 1
  %1051 = icmp eq i32 %1050, 16
  %1052 = select i1 %1051, i32 1, i32 %1050, !prof !2
  br label %2183

1053:                                             ; preds = %1046
  %1054 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %1055 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1054, i64 %1041, i32 3
  %1056 = bitcast %union._hb_var_int_t* %1055 to [4 x i8]*
  %1057 = getelementptr inbounds [4 x i8], [4 x i8]* %1056, i64 0, i64 3
  store i8 %1038, i8* %1057, align 1
  %1058 = add nuw nsw i64 %1041, 1
  br label %1040

1059:                                             ; preds = %401
  br i1 %296, label %1060, label %1061, !prof !2

1060:                                             ; preds = %1059
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !241
  br label %1061

1061:                                             ; preds = %1060, %1059
  %1062 = load i32, i32* %264, align 8, !noalias !246
  %1063 = load i32, i32* %266, align 8, !noalias !246
  %1064 = icmp eq i32 %1063, 0
  br i1 %1064, label %1065, label %1066, !prof !2

1065:                                             ; preds = %1061
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !246
  br label %1066

1066:                                             ; preds = %1065, %1061
  %1067 = icmp ult i32 %1062, %292
  br i1 %1067, label %1068, label %1070

1068:                                             ; preds = %1066
  %1069 = sub i32 %292, %1062
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %263, i32 %1069) #5
  br label %1074

1070:                                             ; preds = %1066
  %1071 = icmp ugt i32 %1062, %292
  br i1 %1071, label %1072, label %1074

1072:                                             ; preds = %1070
  %1073 = sub i32 %1062, %292
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %263, i32 %1073) #5
  br label %1074

1074:                                             ; preds = %1072, %1070, %1068
  %1075 = load i32, i32* %172, align 4
  %1076 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %168, align 8
  %1077 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %169, align 8
  %1078 = sub i32 %292, %291
  br i1 %296, label %1146, label %1079

1079:                                             ; preds = %1074
  %1080 = load i32, i32* %288, align 4
  %1081 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8
  %1082 = load i32, i32* %287, align 8
  br label %1083

1083:                                             ; preds = %1112, %1079
  %1084 = phi %struct.hb_glyph_info_t* [ %1081, %1079 ], [ %1094, %1112 ]
  %1085 = phi i32 [ %290, %1079 ], [ %1091, %1112 ]
  %1086 = phi i32 [ %1080, %1079 ], [ %1092, %1112 ]
  %1087 = phi i32 [ %1082, %1079 ], [ %1088, %1112 ]
  %1088 = sub i32 %1087, %1075
  %1089 = icmp ne i32 %1086, 0
  %1090 = zext i1 %1089 to i32
  %1091 = add i32 %1085, %1090
  %1092 = sub i32 %1086, %1090
  %1093 = sext i1 %1089 to i64
  %1094 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1084, i64 %1093
  %1095 = icmp eq i32 %1091, 0
  br i1 %1095, label %1146, label %1096

1096:                                             ; preds = %1083
  %1097 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1084, i64 %1093, i32 4
  %1098 = bitcast %union._hb_var_int_t* %1097 to [4 x i8]*
  %1099 = getelementptr inbounds [4 x i8], [4 x i8]* %1098, i64 0, i64 2
  %1100 = load i8, i8* %1099, align 2
  switch i8 %1100, label %1147 [
    i8 0, label %1101
    i8 14, label %1113
  ]

1101:                                             ; preds = %1096
  %1102 = bitcast %union._hb_var_int_t* %1097 to i16*
  %1103 = load i16, i16* %1102, align 4
  %1104 = and i16 %1103, 32
  %1105 = icmp eq i16 %1104, 0
  br i1 %1105, label %1147, label %1106

1106:                                             ; preds = %1101
  %1107 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1084, i64 %1093, i32 3
  %1108 = bitcast %union._hb_var_int_t* %1107 to i16*
  %1109 = load i16, i16* %1108, align 4
  %1110 = and i16 %1109, 16
  %1111 = icmp eq i16 %1110, 0
  br i1 %1111, label %1112, label %1147

1112:                                             ; preds = %1106, %1140
  br label %1083

1113:                                             ; preds = %1096
  %1114 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %1076, align 8
  %1115 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1114, i64 0, i32 15
  %1116 = load i32, i32* %1115, align 8
  br label %1117

1117:                                             ; preds = %1134, %1113
  %1118 = phi i32 [ %1119, %1134 ], [ %1088, %1113 ]
  %1119 = add i32 %1118, 1
  %1120 = icmp ult i32 %1119, %1116
  br i1 %1120, label %1121, label %1147

1121:                                             ; preds = %1117
  %1122 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %1077, align 8
  %1123 = zext i32 %1119 to i64
  %1124 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1122, i64 %1123, i32 4
  %1125 = bitcast %union._hb_var_int_t* %1124 to [4 x i8]*
  %1126 = getelementptr inbounds [4 x i8], [4 x i8]* %1125, i64 0, i64 2
  %1127 = load i8, i8* %1126, align 2
  %1128 = icmp ne i8 %1127, 0
  %1129 = bitcast %union._hb_var_int_t* %1124 to i16*
  %1130 = load i16, i16* %1129, align 4
  %1131 = and i16 %1130, 32
  %1132 = icmp eq i16 %1131, 0
  %1133 = or i1 %1128, %1132
  br i1 %1133, label %1140, label %1134

1134:                                             ; preds = %1121
  %1135 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1122, i64 %1123, i32 3
  %1136 = bitcast %union._hb_var_int_t* %1135 to i16*
  %1137 = load i16, i16* %1136, align 4
  %1138 = and i16 %1137, 16
  %1139 = icmp eq i16 %1138, 0
  br i1 %1139, label %1117, label %1140

1140:                                             ; preds = %1134, %1121
  %1141 = and i16 %1130, 31
  %1142 = zext i16 %1141 to i32
  %1143 = shl i32 1, %1142
  %1144 = and i32 %1143, 7168
  %1145 = icmp eq i32 %1144, 0
  br i1 %1145, label %1147, label %1112

1146:                                             ; preds = %1083, %1074
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !251
  br label %1147

1147:                                             ; preds = %1140, %1106, %1101, %1096, %1117, %1146
  br i1 %296, label %1148, label %1149, !prof !2

1148:                                             ; preds = %1147
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !256
  br label %1149

1149:                                             ; preds = %1148, %1147
  %1150 = icmp ult i32 %292, %291
  br i1 %1150, label %1151, label %1153

1151:                                             ; preds = %1149
  %1152 = sub i32 0, %291
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %284, i32 %1152) #5
  br label %1156

1153:                                             ; preds = %1149
  %1154 = icmp ult i32 %1078, %292
  br i1 %1154, label %1155, label %1156

1155:                                             ; preds = %1153
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %284, i32 %291) #5
  br label %1156

1156:                                             ; preds = %1155, %1153, %1151
  %1157 = load i32, i32* %285, align 8, !noalias !261
  %1158 = load i32, i32* %255, align 8, !noalias !261
  %1159 = icmp eq i32 %1158, 0
  br i1 %1159, label %1160, label %1161, !prof !2

1160:                                             ; preds = %1156
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !261
  br label %1161

1161:                                             ; preds = %1160, %1156
  %1162 = trunc i32 %294 to i8
  %1163 = shl i8 %1162, 4
  %1164 = or i8 %1163, 2
  %1165 = zext i32 %1157 to i64
  br label %1166

1166:                                             ; preds = %1179, %1161
  %1167 = phi i64 [ %1184, %1179 ], [ %1165, %1161 ]
  %1168 = load i32, i32* %278, align 8, !noalias !270
  %1169 = load i32, i32* %266, align 8, !noalias !270
  %1170 = icmp eq i32 %1169, 0
  br i1 %1170, label %1171, label %1172, !prof !2

1171:                                             ; preds = %1166
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !270
  br label %1172

1172:                                             ; preds = %1171, %1166
  %1173 = zext i32 %1168 to i64
  %1174 = icmp ult i64 %1167, %1173
  br i1 %1174, label %1179, label %1175

1175:                                             ; preds = %1172
  %1176 = add i32 %294, 1
  %1177 = icmp eq i32 %1176, 16
  %1178 = select i1 %1177, i32 1, i32 %1176, !prof !2
  br label %2183

1179:                                             ; preds = %1172
  %1180 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %1181 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1180, i64 %1167, i32 3
  %1182 = bitcast %union._hb_var_int_t* %1181 to [4 x i8]*
  %1183 = getelementptr inbounds [4 x i8], [4 x i8]* %1182, i64 0, i64 3
  store i8 %1164, i8* %1183, align 1
  %1184 = add nuw nsw i64 %1167, 1
  br label %1166

1185:                                             ; preds = %401
  br i1 %296, label %1186, label %1187, !prof !2

1186:                                             ; preds = %1185
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !279
  br label %1187

1187:                                             ; preds = %1186, %1185
  %1188 = load i32, i32* %264, align 8, !noalias !284
  %1189 = load i32, i32* %266, align 8, !noalias !284
  %1190 = icmp eq i32 %1189, 0
  br i1 %1190, label %1191, label %1192, !prof !2

1191:                                             ; preds = %1187
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !284
  br label %1192

1192:                                             ; preds = %1191, %1187
  %1193 = icmp ult i32 %1188, %292
  br i1 %1193, label %1194, label %1196

1194:                                             ; preds = %1192
  %1195 = sub i32 %292, %1188
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %263, i32 %1195) #5
  br label %1200

1196:                                             ; preds = %1192
  %1197 = icmp ugt i32 %1188, %292
  br i1 %1197, label %1198, label %1200

1198:                                             ; preds = %1196
  %1199 = sub i32 %1188, %292
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %263, i32 %1199) #5
  br label %1200

1200:                                             ; preds = %1198, %1196, %1194
  %1201 = load i32, i32* %172, align 4
  %1202 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %168, align 8
  %1203 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %169, align 8
  %1204 = sub i32 %292, %291
  br i1 %296, label %1272, label %1205

1205:                                             ; preds = %1200
  %1206 = load i32, i32* %288, align 4
  %1207 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8
  %1208 = load i32, i32* %287, align 8
  br label %1209

1209:                                             ; preds = %1238, %1205
  %1210 = phi %struct.hb_glyph_info_t* [ %1207, %1205 ], [ %1220, %1238 ]
  %1211 = phi i32 [ %290, %1205 ], [ %1217, %1238 ]
  %1212 = phi i32 [ %1206, %1205 ], [ %1218, %1238 ]
  %1213 = phi i32 [ %1208, %1205 ], [ %1214, %1238 ]
  %1214 = sub i32 %1213, %1201
  %1215 = icmp ne i32 %1212, 0
  %1216 = zext i1 %1215 to i32
  %1217 = add i32 %1211, %1216
  %1218 = sub i32 %1212, %1216
  %1219 = sext i1 %1215 to i64
  %1220 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1210, i64 %1219
  %1221 = icmp eq i32 %1217, 0
  br i1 %1221, label %1272, label %1222

1222:                                             ; preds = %1209
  %1223 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1210, i64 %1219, i32 4
  %1224 = bitcast %union._hb_var_int_t* %1223 to [4 x i8]*
  %1225 = getelementptr inbounds [4 x i8], [4 x i8]* %1224, i64 0, i64 2
  %1226 = load i8, i8* %1225, align 2
  switch i8 %1226, label %1273 [
    i8 0, label %1227
    i8 14, label %1239
  ]

1227:                                             ; preds = %1222
  %1228 = bitcast %union._hb_var_int_t* %1223 to i16*
  %1229 = load i16, i16* %1228, align 4
  %1230 = and i16 %1229, 32
  %1231 = icmp eq i16 %1230, 0
  br i1 %1231, label %1273, label %1232

1232:                                             ; preds = %1227
  %1233 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1210, i64 %1219, i32 3
  %1234 = bitcast %union._hb_var_int_t* %1233 to i16*
  %1235 = load i16, i16* %1234, align 4
  %1236 = and i16 %1235, 16
  %1237 = icmp eq i16 %1236, 0
  br i1 %1237, label %1238, label %1273

1238:                                             ; preds = %1232, %1266
  br label %1209

1239:                                             ; preds = %1222
  %1240 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %1202, align 8
  %1241 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1240, i64 0, i32 15
  %1242 = load i32, i32* %1241, align 8
  br label %1243

1243:                                             ; preds = %1260, %1239
  %1244 = phi i32 [ %1245, %1260 ], [ %1214, %1239 ]
  %1245 = add i32 %1244, 1
  %1246 = icmp ult i32 %1245, %1242
  br i1 %1246, label %1247, label %1273

1247:                                             ; preds = %1243
  %1248 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %1203, align 8
  %1249 = zext i32 %1245 to i64
  %1250 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1248, i64 %1249, i32 4
  %1251 = bitcast %union._hb_var_int_t* %1250 to [4 x i8]*
  %1252 = getelementptr inbounds [4 x i8], [4 x i8]* %1251, i64 0, i64 2
  %1253 = load i8, i8* %1252, align 2
  %1254 = icmp ne i8 %1253, 0
  %1255 = bitcast %union._hb_var_int_t* %1250 to i16*
  %1256 = load i16, i16* %1255, align 4
  %1257 = and i16 %1256, 32
  %1258 = icmp eq i16 %1257, 0
  %1259 = or i1 %1254, %1258
  br i1 %1259, label %1266, label %1260

1260:                                             ; preds = %1247
  %1261 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1248, i64 %1249, i32 3
  %1262 = bitcast %union._hb_var_int_t* %1261 to i16*
  %1263 = load i16, i16* %1262, align 4
  %1264 = and i16 %1263, 16
  %1265 = icmp eq i16 %1264, 0
  br i1 %1265, label %1243, label %1266

1266:                                             ; preds = %1260, %1247
  %1267 = and i16 %1256, 31
  %1268 = zext i16 %1267 to i32
  %1269 = shl i32 1, %1268
  %1270 = and i32 %1269, 7168
  %1271 = icmp eq i32 %1270, 0
  br i1 %1271, label %1273, label %1238

1272:                                             ; preds = %1209, %1200
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !289
  br label %1273

1273:                                             ; preds = %1266, %1232, %1227, %1222, %1243, %1272
  br i1 %296, label %1274, label %1275, !prof !2

1274:                                             ; preds = %1273
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !294
  br label %1275

1275:                                             ; preds = %1274, %1273
  %1276 = icmp ult i32 %292, %291
  br i1 %1276, label %1277, label %1279

1277:                                             ; preds = %1275
  %1278 = sub i32 0, %291
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %284, i32 %1278) #5
  br label %1282

1279:                                             ; preds = %1275
  %1280 = icmp ult i32 %1204, %292
  br i1 %1280, label %1281, label %1282

1281:                                             ; preds = %1279
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %284, i32 %291) #5
  br label %1282

1282:                                             ; preds = %1281, %1279, %1277
  %1283 = load i32, i32* %285, align 8, !noalias !299
  %1284 = load i32, i32* %255, align 8, !noalias !299
  %1285 = icmp eq i32 %1284, 0
  br i1 %1285, label %1286, label %1287, !prof !2

1286:                                             ; preds = %1282
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !299
  br label %1287

1287:                                             ; preds = %1286, %1282
  %1288 = trunc i32 %294 to i8
  %1289 = shl i8 %1288, 4
  %1290 = or i8 %1289, 3
  %1291 = zext i32 %1283 to i64
  br label %1292

1292:                                             ; preds = %1305, %1287
  %1293 = phi i64 [ %1310, %1305 ], [ %1291, %1287 ]
  %1294 = load i32, i32* %278, align 8, !noalias !308
  %1295 = load i32, i32* %266, align 8, !noalias !308
  %1296 = icmp eq i32 %1295, 0
  br i1 %1296, label %1297, label %1298, !prof !2

1297:                                             ; preds = %1292
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !308
  br label %1298

1298:                                             ; preds = %1297, %1292
  %1299 = zext i32 %1294 to i64
  %1300 = icmp ult i64 %1293, %1299
  br i1 %1300, label %1305, label %1301

1301:                                             ; preds = %1298
  %1302 = add i32 %294, 1
  %1303 = icmp eq i32 %1302, 16
  %1304 = select i1 %1303, i32 1, i32 %1302, !prof !2
  br label %2183

1305:                                             ; preds = %1298
  %1306 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %1307 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1306, i64 %1293, i32 3
  %1308 = bitcast %union._hb_var_int_t* %1307 to [4 x i8]*
  %1309 = getelementptr inbounds [4 x i8], [4 x i8]* %1308, i64 0, i64 3
  store i8 %1290, i8* %1309, align 1
  %1310 = add nuw nsw i64 %1293, 1
  br label %1292

1311:                                             ; preds = %401
  br i1 %296, label %1312, label %1313, !prof !2

1312:                                             ; preds = %1311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !317
  br label %1313

1313:                                             ; preds = %1312, %1311
  %1314 = load i32, i32* %264, align 8, !noalias !322
  %1315 = load i32, i32* %266, align 8, !noalias !322
  %1316 = icmp eq i32 %1315, 0
  br i1 %1316, label %1317, label %1318, !prof !2

1317:                                             ; preds = %1313
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !322
  br label %1318

1318:                                             ; preds = %1317, %1313
  %1319 = icmp ult i32 %1314, %292
  br i1 %1319, label %1320, label %1322

1320:                                             ; preds = %1318
  %1321 = sub i32 %292, %1314
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %263, i32 %1321) #5
  br label %1326

1322:                                             ; preds = %1318
  %1323 = icmp ugt i32 %1314, %292
  br i1 %1323, label %1324, label %1326

1324:                                             ; preds = %1322
  %1325 = sub i32 %1314, %292
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %263, i32 %1325) #5
  br label %1326

1326:                                             ; preds = %1324, %1322, %1320
  %1327 = load i32, i32* %172, align 4
  %1328 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %168, align 8
  %1329 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %169, align 8
  %1330 = sub i32 %292, %291
  br i1 %296, label %1398, label %1331

1331:                                             ; preds = %1326
  %1332 = load i32, i32* %288, align 4
  %1333 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8
  %1334 = load i32, i32* %287, align 8
  br label %1335

1335:                                             ; preds = %1364, %1331
  %1336 = phi %struct.hb_glyph_info_t* [ %1333, %1331 ], [ %1346, %1364 ]
  %1337 = phi i32 [ %290, %1331 ], [ %1343, %1364 ]
  %1338 = phi i32 [ %1332, %1331 ], [ %1344, %1364 ]
  %1339 = phi i32 [ %1334, %1331 ], [ %1340, %1364 ]
  %1340 = sub i32 %1339, %1327
  %1341 = icmp ne i32 %1338, 0
  %1342 = zext i1 %1341 to i32
  %1343 = add i32 %1337, %1342
  %1344 = sub i32 %1338, %1342
  %1345 = sext i1 %1341 to i64
  %1346 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1336, i64 %1345
  %1347 = icmp eq i32 %1343, 0
  br i1 %1347, label %1398, label %1348

1348:                                             ; preds = %1335
  %1349 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1336, i64 %1345, i32 4
  %1350 = bitcast %union._hb_var_int_t* %1349 to [4 x i8]*
  %1351 = getelementptr inbounds [4 x i8], [4 x i8]* %1350, i64 0, i64 2
  %1352 = load i8, i8* %1351, align 2
  switch i8 %1352, label %1399 [
    i8 0, label %1353
    i8 14, label %1365
  ]

1353:                                             ; preds = %1348
  %1354 = bitcast %union._hb_var_int_t* %1349 to i16*
  %1355 = load i16, i16* %1354, align 4
  %1356 = and i16 %1355, 32
  %1357 = icmp eq i16 %1356, 0
  br i1 %1357, label %1399, label %1358

1358:                                             ; preds = %1353
  %1359 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1336, i64 %1345, i32 3
  %1360 = bitcast %union._hb_var_int_t* %1359 to i16*
  %1361 = load i16, i16* %1360, align 4
  %1362 = and i16 %1361, 16
  %1363 = icmp eq i16 %1362, 0
  br i1 %1363, label %1364, label %1399

1364:                                             ; preds = %1358, %1392
  br label %1335

1365:                                             ; preds = %1348
  %1366 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %1328, align 8
  %1367 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1366, i64 0, i32 15
  %1368 = load i32, i32* %1367, align 8
  br label %1369

1369:                                             ; preds = %1386, %1365
  %1370 = phi i32 [ %1371, %1386 ], [ %1340, %1365 ]
  %1371 = add i32 %1370, 1
  %1372 = icmp ult i32 %1371, %1368
  br i1 %1372, label %1373, label %1399

1373:                                             ; preds = %1369
  %1374 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %1329, align 8
  %1375 = zext i32 %1371 to i64
  %1376 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1374, i64 %1375, i32 4
  %1377 = bitcast %union._hb_var_int_t* %1376 to [4 x i8]*
  %1378 = getelementptr inbounds [4 x i8], [4 x i8]* %1377, i64 0, i64 2
  %1379 = load i8, i8* %1378, align 2
  %1380 = icmp ne i8 %1379, 0
  %1381 = bitcast %union._hb_var_int_t* %1376 to i16*
  %1382 = load i16, i16* %1381, align 4
  %1383 = and i16 %1382, 32
  %1384 = icmp eq i16 %1383, 0
  %1385 = or i1 %1380, %1384
  br i1 %1385, label %1392, label %1386

1386:                                             ; preds = %1373
  %1387 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1374, i64 %1375, i32 3
  %1388 = bitcast %union._hb_var_int_t* %1387 to i16*
  %1389 = load i16, i16* %1388, align 4
  %1390 = and i16 %1389, 16
  %1391 = icmp eq i16 %1390, 0
  br i1 %1391, label %1369, label %1392

1392:                                             ; preds = %1386, %1373
  %1393 = and i16 %1382, 31
  %1394 = zext i16 %1393 to i32
  %1395 = shl i32 1, %1394
  %1396 = and i32 %1395, 7168
  %1397 = icmp eq i32 %1396, 0
  br i1 %1397, label %1399, label %1364

1398:                                             ; preds = %1335, %1326
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !327
  br label %1399

1399:                                             ; preds = %1392, %1358, %1353, %1348, %1369, %1398
  br i1 %296, label %1400, label %1401, !prof !2

1400:                                             ; preds = %1399
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !332
  br label %1401

1401:                                             ; preds = %1400, %1399
  %1402 = icmp ult i32 %292, %291
  br i1 %1402, label %1403, label %1405

1403:                                             ; preds = %1401
  %1404 = sub i32 0, %291
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %284, i32 %1404) #5
  br label %1408

1405:                                             ; preds = %1401
  %1406 = icmp ult i32 %1330, %292
  br i1 %1406, label %1407, label %1408

1407:                                             ; preds = %1405
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %284, i32 %291) #5
  br label %1408

1408:                                             ; preds = %1407, %1405, %1403
  %1409 = load i32, i32* %285, align 8, !noalias !337
  %1410 = load i32, i32* %255, align 8, !noalias !337
  %1411 = icmp eq i32 %1410, 0
  br i1 %1411, label %1412, label %1413, !prof !2

1412:                                             ; preds = %1408
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !337
  br label %1413

1413:                                             ; preds = %1412, %1408
  %1414 = trunc i32 %294 to i8
  %1415 = shl i8 %1414, 4
  %1416 = or i8 %1415, 4
  %1417 = zext i32 %1409 to i64
  br label %1418

1418:                                             ; preds = %1431, %1413
  %1419 = phi i64 [ %1436, %1431 ], [ %1417, %1413 ]
  %1420 = load i32, i32* %278, align 8, !noalias !346
  %1421 = load i32, i32* %266, align 8, !noalias !346
  %1422 = icmp eq i32 %1421, 0
  br i1 %1422, label %1423, label %1424, !prof !2

1423:                                             ; preds = %1418
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !346
  br label %1424

1424:                                             ; preds = %1423, %1418
  %1425 = zext i32 %1420 to i64
  %1426 = icmp ult i64 %1419, %1425
  br i1 %1426, label %1431, label %1427

1427:                                             ; preds = %1424
  %1428 = add i32 %294, 1
  %1429 = icmp eq i32 %1428, 16
  %1430 = select i1 %1429, i32 1, i32 %1428, !prof !2
  br label %2183

1431:                                             ; preds = %1424
  %1432 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %1433 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1432, i64 %1419, i32 3
  %1434 = bitcast %union._hb_var_int_t* %1433 to [4 x i8]*
  %1435 = getelementptr inbounds [4 x i8], [4 x i8]* %1434, i64 0, i64 3
  store i8 %1416, i8* %1435, align 1
  %1436 = add nuw nsw i64 %1419, 1
  br label %1418

1437:                                             ; preds = %401
  br i1 %296, label %1438, label %1439, !prof !2

1438:                                             ; preds = %1437
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !355
  br label %1439

1439:                                             ; preds = %1438, %1437
  %1440 = load i32, i32* %264, align 8, !noalias !360
  %1441 = load i32, i32* %266, align 8, !noalias !360
  %1442 = icmp eq i32 %1441, 0
  br i1 %1442, label %1443, label %1444, !prof !2

1443:                                             ; preds = %1439
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !360
  br label %1444

1444:                                             ; preds = %1443, %1439
  %1445 = icmp ult i32 %1440, %292
  br i1 %1445, label %1446, label %1448

1446:                                             ; preds = %1444
  %1447 = sub i32 %292, %1440
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %263, i32 %1447) #5
  br label %1452

1448:                                             ; preds = %1444
  %1449 = icmp ugt i32 %1440, %292
  br i1 %1449, label %1450, label %1452

1450:                                             ; preds = %1448
  %1451 = sub i32 %1440, %292
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %263, i32 %1451) #5
  br label %1452

1452:                                             ; preds = %1450, %1448, %1446
  %1453 = load i32, i32* %172, align 4
  %1454 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %168, align 8
  %1455 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %169, align 8
  %1456 = sub i32 %292, %291
  br i1 %296, label %1524, label %1457

1457:                                             ; preds = %1452
  %1458 = load i32, i32* %288, align 4
  %1459 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8
  %1460 = load i32, i32* %287, align 8
  br label %1461

1461:                                             ; preds = %1490, %1457
  %1462 = phi %struct.hb_glyph_info_t* [ %1459, %1457 ], [ %1472, %1490 ]
  %1463 = phi i32 [ %290, %1457 ], [ %1469, %1490 ]
  %1464 = phi i32 [ %1458, %1457 ], [ %1470, %1490 ]
  %1465 = phi i32 [ %1460, %1457 ], [ %1466, %1490 ]
  %1466 = sub i32 %1465, %1453
  %1467 = icmp ne i32 %1464, 0
  %1468 = zext i1 %1467 to i32
  %1469 = add i32 %1463, %1468
  %1470 = sub i32 %1464, %1468
  %1471 = sext i1 %1467 to i64
  %1472 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1462, i64 %1471
  %1473 = icmp eq i32 %1469, 0
  br i1 %1473, label %1524, label %1474

1474:                                             ; preds = %1461
  %1475 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1462, i64 %1471, i32 4
  %1476 = bitcast %union._hb_var_int_t* %1475 to [4 x i8]*
  %1477 = getelementptr inbounds [4 x i8], [4 x i8]* %1476, i64 0, i64 2
  %1478 = load i8, i8* %1477, align 2
  switch i8 %1478, label %1525 [
    i8 0, label %1479
    i8 14, label %1491
  ]

1479:                                             ; preds = %1474
  %1480 = bitcast %union._hb_var_int_t* %1475 to i16*
  %1481 = load i16, i16* %1480, align 4
  %1482 = and i16 %1481, 32
  %1483 = icmp eq i16 %1482, 0
  br i1 %1483, label %1525, label %1484

1484:                                             ; preds = %1479
  %1485 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1462, i64 %1471, i32 3
  %1486 = bitcast %union._hb_var_int_t* %1485 to i16*
  %1487 = load i16, i16* %1486, align 4
  %1488 = and i16 %1487, 16
  %1489 = icmp eq i16 %1488, 0
  br i1 %1489, label %1490, label %1525

1490:                                             ; preds = %1484, %1518
  br label %1461

1491:                                             ; preds = %1474
  %1492 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %1454, align 8
  %1493 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1492, i64 0, i32 15
  %1494 = load i32, i32* %1493, align 8
  br label %1495

1495:                                             ; preds = %1512, %1491
  %1496 = phi i32 [ %1497, %1512 ], [ %1466, %1491 ]
  %1497 = add i32 %1496, 1
  %1498 = icmp ult i32 %1497, %1494
  br i1 %1498, label %1499, label %1525

1499:                                             ; preds = %1495
  %1500 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %1455, align 8
  %1501 = zext i32 %1497 to i64
  %1502 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1500, i64 %1501, i32 4
  %1503 = bitcast %union._hb_var_int_t* %1502 to [4 x i8]*
  %1504 = getelementptr inbounds [4 x i8], [4 x i8]* %1503, i64 0, i64 2
  %1505 = load i8, i8* %1504, align 2
  %1506 = icmp ne i8 %1505, 0
  %1507 = bitcast %union._hb_var_int_t* %1502 to i16*
  %1508 = load i16, i16* %1507, align 4
  %1509 = and i16 %1508, 32
  %1510 = icmp eq i16 %1509, 0
  %1511 = or i1 %1506, %1510
  br i1 %1511, label %1518, label %1512

1512:                                             ; preds = %1499
  %1513 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1500, i64 %1501, i32 3
  %1514 = bitcast %union._hb_var_int_t* %1513 to i16*
  %1515 = load i16, i16* %1514, align 4
  %1516 = and i16 %1515, 16
  %1517 = icmp eq i16 %1516, 0
  br i1 %1517, label %1495, label %1518

1518:                                             ; preds = %1512, %1499
  %1519 = and i16 %1508, 31
  %1520 = zext i16 %1519 to i32
  %1521 = shl i32 1, %1520
  %1522 = and i32 %1521, 7168
  %1523 = icmp eq i32 %1522, 0
  br i1 %1523, label %1525, label %1490

1524:                                             ; preds = %1461, %1452
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !365
  br label %1525

1525:                                             ; preds = %1518, %1484, %1479, %1474, %1495, %1524
  br i1 %296, label %1526, label %1527, !prof !2

1526:                                             ; preds = %1525
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !370
  br label %1527

1527:                                             ; preds = %1526, %1525
  %1528 = icmp ult i32 %292, %291
  br i1 %1528, label %1529, label %1531

1529:                                             ; preds = %1527
  %1530 = sub i32 0, %291
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %284, i32 %1530) #5
  br label %1534

1531:                                             ; preds = %1527
  %1532 = icmp ult i32 %1456, %292
  br i1 %1532, label %1533, label %1534

1533:                                             ; preds = %1531
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %284, i32 %291) #5
  br label %1534

1534:                                             ; preds = %1533, %1531, %1529
  %1535 = load i32, i32* %285, align 8, !noalias !375
  %1536 = load i32, i32* %255, align 8, !noalias !375
  %1537 = icmp eq i32 %1536, 0
  br i1 %1537, label %1538, label %1539, !prof !2

1538:                                             ; preds = %1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !375
  br label %1539

1539:                                             ; preds = %1538, %1534
  %1540 = trunc i32 %294 to i8
  %1541 = shl i8 %1540, 4
  %1542 = or i8 %1541, 5
  %1543 = zext i32 %1535 to i64
  br label %1544

1544:                                             ; preds = %1557, %1539
  %1545 = phi i64 [ %1562, %1557 ], [ %1543, %1539 ]
  %1546 = load i32, i32* %278, align 8, !noalias !384
  %1547 = load i32, i32* %266, align 8, !noalias !384
  %1548 = icmp eq i32 %1547, 0
  br i1 %1548, label %1549, label %1550, !prof !2

1549:                                             ; preds = %1544
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !384
  br label %1550

1550:                                             ; preds = %1549, %1544
  %1551 = zext i32 %1546 to i64
  %1552 = icmp ult i64 %1545, %1551
  br i1 %1552, label %1557, label %1553

1553:                                             ; preds = %1550
  %1554 = add i32 %294, 1
  %1555 = icmp eq i32 %1554, 16
  %1556 = select i1 %1555, i32 1, i32 %1554, !prof !2
  br label %2183

1557:                                             ; preds = %1550
  %1558 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %1559 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1558, i64 %1545, i32 3
  %1560 = bitcast %union._hb_var_int_t* %1559 to [4 x i8]*
  %1561 = getelementptr inbounds [4 x i8], [4 x i8]* %1560, i64 0, i64 3
  store i8 %1542, i8* %1561, align 1
  %1562 = add nuw nsw i64 %1545, 1
  br label %1544

1563:                                             ; preds = %401
  br i1 %296, label %1564, label %1565, !prof !2

1564:                                             ; preds = %1563
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !393
  br label %1565

1565:                                             ; preds = %1564, %1563
  %1566 = load i32, i32* %264, align 8, !noalias !398
  %1567 = load i32, i32* %266, align 8, !noalias !398
  %1568 = icmp eq i32 %1567, 0
  br i1 %1568, label %1569, label %1570, !prof !2

1569:                                             ; preds = %1565
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !398
  br label %1570

1570:                                             ; preds = %1569, %1565
  %1571 = icmp ult i32 %1566, %292
  br i1 %1571, label %1572, label %1574

1572:                                             ; preds = %1570
  %1573 = sub i32 %292, %1566
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %263, i32 %1573) #5
  br label %1578

1574:                                             ; preds = %1570
  %1575 = icmp ugt i32 %1566, %292
  br i1 %1575, label %1576, label %1578

1576:                                             ; preds = %1574
  %1577 = sub i32 %1566, %292
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %263, i32 %1577) #5
  br label %1578

1578:                                             ; preds = %1576, %1574, %1572
  %1579 = load i32, i32* %172, align 4
  %1580 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %168, align 8
  %1581 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %169, align 8
  %1582 = sub i32 %292, %291
  br i1 %296, label %1650, label %1583

1583:                                             ; preds = %1578
  %1584 = load i32, i32* %288, align 4
  %1585 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8
  %1586 = load i32, i32* %287, align 8
  br label %1587

1587:                                             ; preds = %1616, %1583
  %1588 = phi %struct.hb_glyph_info_t* [ %1585, %1583 ], [ %1598, %1616 ]
  %1589 = phi i32 [ %290, %1583 ], [ %1595, %1616 ]
  %1590 = phi i32 [ %1584, %1583 ], [ %1596, %1616 ]
  %1591 = phi i32 [ %1586, %1583 ], [ %1592, %1616 ]
  %1592 = sub i32 %1591, %1579
  %1593 = icmp ne i32 %1590, 0
  %1594 = zext i1 %1593 to i32
  %1595 = add i32 %1589, %1594
  %1596 = sub i32 %1590, %1594
  %1597 = sext i1 %1593 to i64
  %1598 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1588, i64 %1597
  %1599 = icmp eq i32 %1595, 0
  br i1 %1599, label %1650, label %1600

1600:                                             ; preds = %1587
  %1601 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1588, i64 %1597, i32 4
  %1602 = bitcast %union._hb_var_int_t* %1601 to [4 x i8]*
  %1603 = getelementptr inbounds [4 x i8], [4 x i8]* %1602, i64 0, i64 2
  %1604 = load i8, i8* %1603, align 2
  switch i8 %1604, label %1651 [
    i8 0, label %1605
    i8 14, label %1617
  ]

1605:                                             ; preds = %1600
  %1606 = bitcast %union._hb_var_int_t* %1601 to i16*
  %1607 = load i16, i16* %1606, align 4
  %1608 = and i16 %1607, 32
  %1609 = icmp eq i16 %1608, 0
  br i1 %1609, label %1651, label %1610

1610:                                             ; preds = %1605
  %1611 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1588, i64 %1597, i32 3
  %1612 = bitcast %union._hb_var_int_t* %1611 to i16*
  %1613 = load i16, i16* %1612, align 4
  %1614 = and i16 %1613, 16
  %1615 = icmp eq i16 %1614, 0
  br i1 %1615, label %1616, label %1651

1616:                                             ; preds = %1610, %1644
  br label %1587

1617:                                             ; preds = %1600
  %1618 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %1580, align 8
  %1619 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1618, i64 0, i32 15
  %1620 = load i32, i32* %1619, align 8
  br label %1621

1621:                                             ; preds = %1638, %1617
  %1622 = phi i32 [ %1623, %1638 ], [ %1592, %1617 ]
  %1623 = add i32 %1622, 1
  %1624 = icmp ult i32 %1623, %1620
  br i1 %1624, label %1625, label %1651

1625:                                             ; preds = %1621
  %1626 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %1581, align 8
  %1627 = zext i32 %1623 to i64
  %1628 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1626, i64 %1627, i32 4
  %1629 = bitcast %union._hb_var_int_t* %1628 to [4 x i8]*
  %1630 = getelementptr inbounds [4 x i8], [4 x i8]* %1629, i64 0, i64 2
  %1631 = load i8, i8* %1630, align 2
  %1632 = icmp ne i8 %1631, 0
  %1633 = bitcast %union._hb_var_int_t* %1628 to i16*
  %1634 = load i16, i16* %1633, align 4
  %1635 = and i16 %1634, 32
  %1636 = icmp eq i16 %1635, 0
  %1637 = or i1 %1632, %1636
  br i1 %1637, label %1644, label %1638

1638:                                             ; preds = %1625
  %1639 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1626, i64 %1627, i32 3
  %1640 = bitcast %union._hb_var_int_t* %1639 to i16*
  %1641 = load i16, i16* %1640, align 4
  %1642 = and i16 %1641, 16
  %1643 = icmp eq i16 %1642, 0
  br i1 %1643, label %1621, label %1644

1644:                                             ; preds = %1638, %1625
  %1645 = and i16 %1634, 31
  %1646 = zext i16 %1645 to i32
  %1647 = shl i32 1, %1646
  %1648 = and i32 %1647, 7168
  %1649 = icmp eq i32 %1648, 0
  br i1 %1649, label %1651, label %1616

1650:                                             ; preds = %1587, %1578
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !403
  br label %1651

1651:                                             ; preds = %1644, %1610, %1605, %1600, %1621, %1650
  br i1 %296, label %1652, label %1653, !prof !2

1652:                                             ; preds = %1651
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !408
  br label %1653

1653:                                             ; preds = %1652, %1651
  %1654 = icmp ult i32 %292, %291
  br i1 %1654, label %1655, label %1657

1655:                                             ; preds = %1653
  %1656 = sub i32 0, %291
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %284, i32 %1656) #5
  br label %1660

1657:                                             ; preds = %1653
  %1658 = icmp ult i32 %1582, %292
  br i1 %1658, label %1659, label %1660

1659:                                             ; preds = %1657
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %284, i32 %291) #5
  br label %1660

1660:                                             ; preds = %1659, %1657, %1655
  %1661 = load i32, i32* %285, align 8, !noalias !413
  %1662 = load i32, i32* %255, align 8, !noalias !413
  %1663 = icmp eq i32 %1662, 0
  br i1 %1663, label %1664, label %1665, !prof !2

1664:                                             ; preds = %1660
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !413
  br label %1665

1665:                                             ; preds = %1664, %1660
  %1666 = trunc i32 %294 to i8
  %1667 = shl i8 %1666, 4
  %1668 = or i8 %1667, 6
  %1669 = zext i32 %1661 to i64
  br label %1670

1670:                                             ; preds = %1683, %1665
  %1671 = phi i64 [ %1688, %1683 ], [ %1669, %1665 ]
  %1672 = load i32, i32* %278, align 8, !noalias !422
  %1673 = load i32, i32* %266, align 8, !noalias !422
  %1674 = icmp eq i32 %1673, 0
  br i1 %1674, label %1675, label %1676, !prof !2

1675:                                             ; preds = %1670
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !422
  br label %1676

1676:                                             ; preds = %1675, %1670
  %1677 = zext i32 %1672 to i64
  %1678 = icmp ult i64 %1671, %1677
  br i1 %1678, label %1683, label %1679

1679:                                             ; preds = %1676
  %1680 = add i32 %294, 1
  %1681 = icmp eq i32 %1680, 16
  %1682 = select i1 %1681, i32 1, i32 %1680, !prof !2
  br label %2183

1683:                                             ; preds = %1676
  %1684 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %1685 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1684, i64 %1671, i32 3
  %1686 = bitcast %union._hb_var_int_t* %1685 to [4 x i8]*
  %1687 = getelementptr inbounds [4 x i8], [4 x i8]* %1686, i64 0, i64 3
  store i8 %1668, i8* %1687, align 1
  %1688 = add nuw nsw i64 %1671, 1
  br label %1670

1689:                                             ; preds = %401
  br i1 %296, label %1690, label %1691, !prof !2

1690:                                             ; preds = %1689
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !431
  br label %1691

1691:                                             ; preds = %1690, %1689
  %1692 = load i32, i32* %264, align 8, !noalias !436
  %1693 = load i32, i32* %266, align 8, !noalias !436
  %1694 = icmp eq i32 %1693, 0
  br i1 %1694, label %1695, label %1696, !prof !2

1695:                                             ; preds = %1691
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !436
  br label %1696

1696:                                             ; preds = %1695, %1691
  %1697 = icmp ult i32 %1692, %292
  br i1 %1697, label %1698, label %1700

1698:                                             ; preds = %1696
  %1699 = sub i32 %292, %1692
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %263, i32 %1699) #5
  br label %1704

1700:                                             ; preds = %1696
  %1701 = icmp ugt i32 %1692, %292
  br i1 %1701, label %1702, label %1704

1702:                                             ; preds = %1700
  %1703 = sub i32 %1692, %292
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %263, i32 %1703) #5
  br label %1704

1704:                                             ; preds = %1702, %1700, %1698
  %1705 = load i32, i32* %172, align 4
  %1706 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %168, align 8
  %1707 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %169, align 8
  %1708 = sub i32 %292, %291
  br i1 %296, label %1776, label %1709

1709:                                             ; preds = %1704
  %1710 = load i32, i32* %288, align 4
  %1711 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8
  %1712 = load i32, i32* %287, align 8
  br label %1713

1713:                                             ; preds = %1742, %1709
  %1714 = phi %struct.hb_glyph_info_t* [ %1711, %1709 ], [ %1724, %1742 ]
  %1715 = phi i32 [ %290, %1709 ], [ %1721, %1742 ]
  %1716 = phi i32 [ %1710, %1709 ], [ %1722, %1742 ]
  %1717 = phi i32 [ %1712, %1709 ], [ %1718, %1742 ]
  %1718 = sub i32 %1717, %1705
  %1719 = icmp ne i32 %1716, 0
  %1720 = zext i1 %1719 to i32
  %1721 = add i32 %1715, %1720
  %1722 = sub i32 %1716, %1720
  %1723 = sext i1 %1719 to i64
  %1724 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1714, i64 %1723
  %1725 = icmp eq i32 %1721, 0
  br i1 %1725, label %1776, label %1726

1726:                                             ; preds = %1713
  %1727 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1714, i64 %1723, i32 4
  %1728 = bitcast %union._hb_var_int_t* %1727 to [4 x i8]*
  %1729 = getelementptr inbounds [4 x i8], [4 x i8]* %1728, i64 0, i64 2
  %1730 = load i8, i8* %1729, align 2
  switch i8 %1730, label %1777 [
    i8 0, label %1731
    i8 14, label %1743
  ]

1731:                                             ; preds = %1726
  %1732 = bitcast %union._hb_var_int_t* %1727 to i16*
  %1733 = load i16, i16* %1732, align 4
  %1734 = and i16 %1733, 32
  %1735 = icmp eq i16 %1734, 0
  br i1 %1735, label %1777, label %1736

1736:                                             ; preds = %1731
  %1737 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1714, i64 %1723, i32 3
  %1738 = bitcast %union._hb_var_int_t* %1737 to i16*
  %1739 = load i16, i16* %1738, align 4
  %1740 = and i16 %1739, 16
  %1741 = icmp eq i16 %1740, 0
  br i1 %1741, label %1742, label %1777

1742:                                             ; preds = %1736, %1770
  br label %1713

1743:                                             ; preds = %1726
  %1744 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %1706, align 8
  %1745 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1744, i64 0, i32 15
  %1746 = load i32, i32* %1745, align 8
  br label %1747

1747:                                             ; preds = %1764, %1743
  %1748 = phi i32 [ %1749, %1764 ], [ %1718, %1743 ]
  %1749 = add i32 %1748, 1
  %1750 = icmp ult i32 %1749, %1746
  br i1 %1750, label %1751, label %1777

1751:                                             ; preds = %1747
  %1752 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %1707, align 8
  %1753 = zext i32 %1749 to i64
  %1754 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1752, i64 %1753, i32 4
  %1755 = bitcast %union._hb_var_int_t* %1754 to [4 x i8]*
  %1756 = getelementptr inbounds [4 x i8], [4 x i8]* %1755, i64 0, i64 2
  %1757 = load i8, i8* %1756, align 2
  %1758 = icmp ne i8 %1757, 0
  %1759 = bitcast %union._hb_var_int_t* %1754 to i16*
  %1760 = load i16, i16* %1759, align 4
  %1761 = and i16 %1760, 32
  %1762 = icmp eq i16 %1761, 0
  %1763 = or i1 %1758, %1762
  br i1 %1763, label %1770, label %1764

1764:                                             ; preds = %1751
  %1765 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1752, i64 %1753, i32 3
  %1766 = bitcast %union._hb_var_int_t* %1765 to i16*
  %1767 = load i16, i16* %1766, align 4
  %1768 = and i16 %1767, 16
  %1769 = icmp eq i16 %1768, 0
  br i1 %1769, label %1747, label %1770

1770:                                             ; preds = %1764, %1751
  %1771 = and i16 %1760, 31
  %1772 = zext i16 %1771 to i32
  %1773 = shl i32 1, %1772
  %1774 = and i32 %1773, 7168
  %1775 = icmp eq i32 %1774, 0
  br i1 %1775, label %1777, label %1742

1776:                                             ; preds = %1713, %1704
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !441
  br label %1777

1777:                                             ; preds = %1770, %1736, %1731, %1726, %1747, %1776
  br i1 %296, label %1778, label %1779, !prof !2

1778:                                             ; preds = %1777
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !446
  br label %1779

1779:                                             ; preds = %1778, %1777
  %1780 = icmp ult i32 %292, %291
  br i1 %1780, label %1781, label %1783

1781:                                             ; preds = %1779
  %1782 = sub i32 0, %291
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %284, i32 %1782) #5
  br label %1786

1783:                                             ; preds = %1779
  %1784 = icmp ult i32 %1708, %292
  br i1 %1784, label %1785, label %1786

1785:                                             ; preds = %1783
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %284, i32 %291) #5
  br label %1786

1786:                                             ; preds = %1785, %1783, %1781
  %1787 = load i32, i32* %285, align 8, !noalias !451
  %1788 = load i32, i32* %255, align 8, !noalias !451
  %1789 = icmp eq i32 %1788, 0
  br i1 %1789, label %1790, label %1791, !prof !2

1790:                                             ; preds = %1786
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !451
  br label %1791

1791:                                             ; preds = %1790, %1786
  %1792 = trunc i32 %294 to i8
  %1793 = shl i8 %1792, 4
  %1794 = or i8 %1793, 7
  %1795 = zext i32 %1787 to i64
  br label %1796

1796:                                             ; preds = %1809, %1791
  %1797 = phi i64 [ %1814, %1809 ], [ %1795, %1791 ]
  %1798 = load i32, i32* %278, align 8, !noalias !460
  %1799 = load i32, i32* %266, align 8, !noalias !460
  %1800 = icmp eq i32 %1799, 0
  br i1 %1800, label %1801, label %1802, !prof !2

1801:                                             ; preds = %1796
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !460
  br label %1802

1802:                                             ; preds = %1801, %1796
  %1803 = zext i32 %1798 to i64
  %1804 = icmp ult i64 %1797, %1803
  br i1 %1804, label %1809, label %1805

1805:                                             ; preds = %1802
  %1806 = add i32 %294, 1
  %1807 = icmp eq i32 %1806, 16
  %1808 = select i1 %1807, i32 1, i32 %1806, !prof !2
  br label %2183

1809:                                             ; preds = %1802
  %1810 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %1811 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1810, i64 %1797, i32 3
  %1812 = bitcast %union._hb_var_int_t* %1811 to [4 x i8]*
  %1813 = getelementptr inbounds [4 x i8], [4 x i8]* %1812, i64 0, i64 3
  store i8 %1794, i8* %1813, align 1
  %1814 = add nuw nsw i64 %1797, 1
  br label %1796

1815:                                             ; preds = %401
  br i1 %296, label %1816, label %1817, !prof !2

1816:                                             ; preds = %1815
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !469
  br label %1817

1817:                                             ; preds = %1816, %1815
  %1818 = load i32, i32* %264, align 8, !noalias !474
  %1819 = load i32, i32* %266, align 8, !noalias !474
  %1820 = icmp eq i32 %1819, 0
  br i1 %1820, label %1821, label %1822, !prof !2

1821:                                             ; preds = %1817
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !474
  br label %1822

1822:                                             ; preds = %1821, %1817
  %1823 = icmp ult i32 %1818, %292
  br i1 %1823, label %1824, label %1826

1824:                                             ; preds = %1822
  %1825 = sub i32 %292, %1818
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %263, i32 %1825) #5
  br label %1830

1826:                                             ; preds = %1822
  %1827 = icmp ugt i32 %1818, %292
  br i1 %1827, label %1828, label %1830

1828:                                             ; preds = %1826
  %1829 = sub i32 %1818, %292
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %263, i32 %1829) #5
  br label %1830

1830:                                             ; preds = %1828, %1826, %1824
  %1831 = load i32, i32* %172, align 4
  %1832 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %168, align 8
  %1833 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %169, align 8
  %1834 = sub i32 %292, %291
  br i1 %296, label %1902, label %1835

1835:                                             ; preds = %1830
  %1836 = load i32, i32* %288, align 4
  %1837 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8
  %1838 = load i32, i32* %287, align 8
  br label %1839

1839:                                             ; preds = %1868, %1835
  %1840 = phi %struct.hb_glyph_info_t* [ %1837, %1835 ], [ %1850, %1868 ]
  %1841 = phi i32 [ %290, %1835 ], [ %1847, %1868 ]
  %1842 = phi i32 [ %1836, %1835 ], [ %1848, %1868 ]
  %1843 = phi i32 [ %1838, %1835 ], [ %1844, %1868 ]
  %1844 = sub i32 %1843, %1831
  %1845 = icmp ne i32 %1842, 0
  %1846 = zext i1 %1845 to i32
  %1847 = add i32 %1841, %1846
  %1848 = sub i32 %1842, %1846
  %1849 = sext i1 %1845 to i64
  %1850 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1840, i64 %1849
  %1851 = icmp eq i32 %1847, 0
  br i1 %1851, label %1902, label %1852

1852:                                             ; preds = %1839
  %1853 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1840, i64 %1849, i32 4
  %1854 = bitcast %union._hb_var_int_t* %1853 to [4 x i8]*
  %1855 = getelementptr inbounds [4 x i8], [4 x i8]* %1854, i64 0, i64 2
  %1856 = load i8, i8* %1855, align 2
  switch i8 %1856, label %1903 [
    i8 0, label %1857
    i8 14, label %1869
  ]

1857:                                             ; preds = %1852
  %1858 = bitcast %union._hb_var_int_t* %1853 to i16*
  %1859 = load i16, i16* %1858, align 4
  %1860 = and i16 %1859, 32
  %1861 = icmp eq i16 %1860, 0
  br i1 %1861, label %1903, label %1862

1862:                                             ; preds = %1857
  %1863 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1840, i64 %1849, i32 3
  %1864 = bitcast %union._hb_var_int_t* %1863 to i16*
  %1865 = load i16, i16* %1864, align 4
  %1866 = and i16 %1865, 16
  %1867 = icmp eq i16 %1866, 0
  br i1 %1867, label %1868, label %1903

1868:                                             ; preds = %1862, %1896
  br label %1839

1869:                                             ; preds = %1852
  %1870 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %1832, align 8
  %1871 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1870, i64 0, i32 15
  %1872 = load i32, i32* %1871, align 8
  br label %1873

1873:                                             ; preds = %1890, %1869
  %1874 = phi i32 [ %1875, %1890 ], [ %1844, %1869 ]
  %1875 = add i32 %1874, 1
  %1876 = icmp ult i32 %1875, %1872
  br i1 %1876, label %1877, label %1903

1877:                                             ; preds = %1873
  %1878 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %1833, align 8
  %1879 = zext i32 %1875 to i64
  %1880 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1878, i64 %1879, i32 4
  %1881 = bitcast %union._hb_var_int_t* %1880 to [4 x i8]*
  %1882 = getelementptr inbounds [4 x i8], [4 x i8]* %1881, i64 0, i64 2
  %1883 = load i8, i8* %1882, align 2
  %1884 = icmp ne i8 %1883, 0
  %1885 = bitcast %union._hb_var_int_t* %1880 to i16*
  %1886 = load i16, i16* %1885, align 4
  %1887 = and i16 %1886, 32
  %1888 = icmp eq i16 %1887, 0
  %1889 = or i1 %1884, %1888
  br i1 %1889, label %1896, label %1890

1890:                                             ; preds = %1877
  %1891 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1878, i64 %1879, i32 3
  %1892 = bitcast %union._hb_var_int_t* %1891 to i16*
  %1893 = load i16, i16* %1892, align 4
  %1894 = and i16 %1893, 16
  %1895 = icmp eq i16 %1894, 0
  br i1 %1895, label %1873, label %1896

1896:                                             ; preds = %1890, %1877
  %1897 = and i16 %1886, 31
  %1898 = zext i16 %1897 to i32
  %1899 = shl i32 1, %1898
  %1900 = and i32 %1899, 7168
  %1901 = icmp eq i32 %1900, 0
  br i1 %1901, label %1903, label %1868

1902:                                             ; preds = %1839, %1830
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !479
  br label %1903

1903:                                             ; preds = %1896, %1862, %1857, %1852, %1873, %1902
  br i1 %296, label %1904, label %1905, !prof !2

1904:                                             ; preds = %1903
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !484
  br label %1905

1905:                                             ; preds = %1904, %1903
  %1906 = icmp ult i32 %292, %291
  br i1 %1906, label %1907, label %1909

1907:                                             ; preds = %1905
  %1908 = sub i32 0, %291
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %284, i32 %1908) #5
  br label %1912

1909:                                             ; preds = %1905
  %1910 = icmp ult i32 %1834, %292
  br i1 %1910, label %1911, label %1912

1911:                                             ; preds = %1909
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %284, i32 %291) #5
  br label %1912

1912:                                             ; preds = %1911, %1909, %1907
  %1913 = load i32, i32* %285, align 8, !noalias !489
  %1914 = load i32, i32* %255, align 8, !noalias !489
  %1915 = icmp eq i32 %1914, 0
  br i1 %1915, label %1916, label %1917, !prof !2

1916:                                             ; preds = %1912
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !489
  br label %1917

1917:                                             ; preds = %1916, %1912
  %1918 = trunc i32 %294 to i8
  %1919 = shl i8 %1918, 4
  %1920 = or i8 %1919, 8
  %1921 = zext i32 %1913 to i64
  br label %1922

1922:                                             ; preds = %1935, %1917
  %1923 = phi i64 [ %1940, %1935 ], [ %1921, %1917 ]
  %1924 = load i32, i32* %278, align 8, !noalias !498
  %1925 = load i32, i32* %266, align 8, !noalias !498
  %1926 = icmp eq i32 %1925, 0
  br i1 %1926, label %1927, label %1928, !prof !2

1927:                                             ; preds = %1922
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !498
  br label %1928

1928:                                             ; preds = %1927, %1922
  %1929 = zext i32 %1924 to i64
  %1930 = icmp ult i64 %1923, %1929
  br i1 %1930, label %1935, label %1931

1931:                                             ; preds = %1928
  %1932 = add i32 %294, 1
  %1933 = icmp eq i32 %1932, 16
  %1934 = select i1 %1933, i32 1, i32 %1932, !prof !2
  br label %2183

1935:                                             ; preds = %1928
  %1936 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %1937 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1936, i64 %1923, i32 3
  %1938 = bitcast %union._hb_var_int_t* %1937 to [4 x i8]*
  %1939 = getelementptr inbounds [4 x i8], [4 x i8]* %1938, i64 0, i64 3
  store i8 %1920, i8* %1939, align 1
  %1940 = add nuw nsw i64 %1923, 1
  br label %1922

1941:                                             ; preds = %401
  br i1 %296, label %1942, label %1943, !prof !2

1942:                                             ; preds = %1941
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !507
  br label %1943

1943:                                             ; preds = %1942, %1941
  %1944 = load i32, i32* %264, align 8, !noalias !512
  %1945 = load i32, i32* %266, align 8, !noalias !512
  %1946 = icmp eq i32 %1945, 0
  br i1 %1946, label %1947, label %1948, !prof !2

1947:                                             ; preds = %1943
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !512
  br label %1948

1948:                                             ; preds = %1947, %1943
  %1949 = icmp ult i32 %1944, %292
  br i1 %1949, label %1950, label %1952

1950:                                             ; preds = %1948
  %1951 = sub i32 %292, %1944
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %263, i32 %1951) #5
  br label %1956

1952:                                             ; preds = %1948
  %1953 = icmp ugt i32 %1944, %292
  br i1 %1953, label %1954, label %1956

1954:                                             ; preds = %1952
  %1955 = sub i32 %1944, %292
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %263, i32 %1955) #5
  br label %1956

1956:                                             ; preds = %1954, %1952, %1950
  %1957 = load i32, i32* %172, align 4
  %1958 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %168, align 8
  %1959 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %169, align 8
  %1960 = sub i32 %292, %291
  br i1 %296, label %2028, label %1961

1961:                                             ; preds = %1956
  %1962 = load i32, i32* %288, align 4
  %1963 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8
  %1964 = load i32, i32* %287, align 8
  br label %1965

1965:                                             ; preds = %1994, %1961
  %1966 = phi %struct.hb_glyph_info_t* [ %1963, %1961 ], [ %1976, %1994 ]
  %1967 = phi i32 [ %290, %1961 ], [ %1973, %1994 ]
  %1968 = phi i32 [ %1962, %1961 ], [ %1974, %1994 ]
  %1969 = phi i32 [ %1964, %1961 ], [ %1970, %1994 ]
  %1970 = sub i32 %1969, %1957
  %1971 = icmp ne i32 %1968, 0
  %1972 = zext i1 %1971 to i32
  %1973 = add i32 %1967, %1972
  %1974 = sub i32 %1968, %1972
  %1975 = sext i1 %1971 to i64
  %1976 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1966, i64 %1975
  %1977 = icmp eq i32 %1973, 0
  br i1 %1977, label %2028, label %1978

1978:                                             ; preds = %1965
  %1979 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1966, i64 %1975, i32 4
  %1980 = bitcast %union._hb_var_int_t* %1979 to [4 x i8]*
  %1981 = getelementptr inbounds [4 x i8], [4 x i8]* %1980, i64 0, i64 2
  %1982 = load i8, i8* %1981, align 2
  switch i8 %1982, label %2029 [
    i8 0, label %1983
    i8 14, label %1995
  ]

1983:                                             ; preds = %1978
  %1984 = bitcast %union._hb_var_int_t* %1979 to i16*
  %1985 = load i16, i16* %1984, align 4
  %1986 = and i16 %1985, 32
  %1987 = icmp eq i16 %1986, 0
  br i1 %1987, label %2029, label %1988

1988:                                             ; preds = %1983
  %1989 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1966, i64 %1975, i32 3
  %1990 = bitcast %union._hb_var_int_t* %1989 to i16*
  %1991 = load i16, i16* %1990, align 4
  %1992 = and i16 %1991, 16
  %1993 = icmp eq i16 %1992, 0
  br i1 %1993, label %1994, label %2029

1994:                                             ; preds = %1988, %2022
  br label %1965

1995:                                             ; preds = %1978
  %1996 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %1958, align 8
  %1997 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1996, i64 0, i32 15
  %1998 = load i32, i32* %1997, align 8
  br label %1999

1999:                                             ; preds = %2016, %1995
  %2000 = phi i32 [ %2001, %2016 ], [ %1970, %1995 ]
  %2001 = add i32 %2000, 1
  %2002 = icmp ult i32 %2001, %1998
  br i1 %2002, label %2003, label %2029

2003:                                             ; preds = %1999
  %2004 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %1959, align 8
  %2005 = zext i32 %2001 to i64
  %2006 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2004, i64 %2005, i32 4
  %2007 = bitcast %union._hb_var_int_t* %2006 to [4 x i8]*
  %2008 = getelementptr inbounds [4 x i8], [4 x i8]* %2007, i64 0, i64 2
  %2009 = load i8, i8* %2008, align 2
  %2010 = icmp ne i8 %2009, 0
  %2011 = bitcast %union._hb_var_int_t* %2006 to i16*
  %2012 = load i16, i16* %2011, align 4
  %2013 = and i16 %2012, 32
  %2014 = icmp eq i16 %2013, 0
  %2015 = or i1 %2010, %2014
  br i1 %2015, label %2022, label %2016

2016:                                             ; preds = %2003
  %2017 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2004, i64 %2005, i32 3
  %2018 = bitcast %union._hb_var_int_t* %2017 to i16*
  %2019 = load i16, i16* %2018, align 4
  %2020 = and i16 %2019, 16
  %2021 = icmp eq i16 %2020, 0
  br i1 %2021, label %1999, label %2022

2022:                                             ; preds = %2016, %2003
  %2023 = and i16 %2012, 31
  %2024 = zext i16 %2023 to i32
  %2025 = shl i32 1, %2024
  %2026 = and i32 %2025, 7168
  %2027 = icmp eq i32 %2026, 0
  br i1 %2027, label %2029, label %1994

2028:                                             ; preds = %1965, %1956
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !517
  br label %2029

2029:                                             ; preds = %2022, %1988, %1983, %1978, %1999, %2028
  br i1 %296, label %2030, label %2031, !prof !2

2030:                                             ; preds = %2029
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !522
  br label %2031

2031:                                             ; preds = %2030, %2029
  %2032 = icmp ult i32 %292, %291
  br i1 %2032, label %2033, label %2035

2033:                                             ; preds = %2031
  %2034 = sub i32 0, %291
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %284, i32 %2034) #5
  br label %2038

2035:                                             ; preds = %2031
  %2036 = icmp ult i32 %1960, %292
  br i1 %2036, label %2037, label %2038

2037:                                             ; preds = %2035
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %284, i32 %291) #5
  br label %2038

2038:                                             ; preds = %2037, %2035, %2033
  %2039 = load i32, i32* %285, align 8, !noalias !527
  %2040 = load i32, i32* %255, align 8, !noalias !527
  %2041 = icmp eq i32 %2040, 0
  br i1 %2041, label %2042, label %2043, !prof !2

2042:                                             ; preds = %2038
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !527
  br label %2043

2043:                                             ; preds = %2042, %2038
  %2044 = trunc i32 %294 to i8
  %2045 = shl i8 %2044, 4
  %2046 = or i8 %2045, 9
  %2047 = zext i32 %2039 to i64
  br label %2048

2048:                                             ; preds = %2061, %2043
  %2049 = phi i64 [ %2066, %2061 ], [ %2047, %2043 ]
  %2050 = load i32, i32* %278, align 8, !noalias !536
  %2051 = load i32, i32* %266, align 8, !noalias !536
  %2052 = icmp eq i32 %2051, 0
  br i1 %2052, label %2053, label %2054, !prof !2

2053:                                             ; preds = %2048
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !536
  br label %2054

2054:                                             ; preds = %2053, %2048
  %2055 = zext i32 %2050 to i64
  %2056 = icmp ult i64 %2049, %2055
  br i1 %2056, label %2061, label %2057

2057:                                             ; preds = %2054
  %2058 = add i32 %294, 1
  %2059 = icmp eq i32 %2058, 16
  %2060 = select i1 %2059, i32 1, i32 %2058, !prof !2
  br label %2183

2061:                                             ; preds = %2054
  %2062 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %2063 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2062, i64 %2049, i32 3
  %2064 = bitcast %union._hb_var_int_t* %2063 to [4 x i8]*
  %2065 = getelementptr inbounds [4 x i8], [4 x i8]* %2064, i64 0, i64 3
  store i8 %2046, i8* %2065, align 1
  %2066 = add nuw nsw i64 %2049, 1
  br label %2048

2067:                                             ; preds = %401
  %2068 = load i32, i32* %264, align 8
  %2069 = load i32, i32* %277, align 4
  %2070 = load i32, i32* %279, align 4
  %2071 = load i32, i32* %266, align 8
  %2072 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %282, align 8
  %2073 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %283, align 8
  %2074 = sub i32 %2068, %2069
  %2075 = icmp eq i32 %2071, 0
  br i1 %2075, label %2143, label %2076

2076:                                             ; preds = %2067
  %2077 = load i32, i32* %281, align 4
  %2078 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %280, align 8
  %2079 = load i32, i32* %278, align 8
  br label %2080

2080:                                             ; preds = %2109, %2076
  %2081 = phi %struct.hb_glyph_info_t* [ %2078, %2076 ], [ %2091, %2109 ]
  %2082 = phi i32 [ %2071, %2076 ], [ %2088, %2109 ]
  %2083 = phi i32 [ %2077, %2076 ], [ %2089, %2109 ]
  %2084 = phi i32 [ %2079, %2076 ], [ %2085, %2109 ]
  %2085 = sub i32 %2084, %2070
  %2086 = icmp ne i32 %2083, 0
  %2087 = zext i1 %2086 to i32
  %2088 = add i32 %2082, %2087
  %2089 = sub i32 %2083, %2087
  %2090 = sext i1 %2086 to i64
  %2091 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2081, i64 %2090
  %2092 = icmp eq i32 %2088, 0
  br i1 %2092, label %2143, label %2093

2093:                                             ; preds = %2080
  %2094 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2081, i64 %2090, i32 4
  %2095 = bitcast %union._hb_var_int_t* %2094 to [4 x i8]*
  %2096 = getelementptr inbounds [4 x i8], [4 x i8]* %2095, i64 0, i64 2
  %2097 = load i8, i8* %2096, align 2
  switch i8 %2097, label %2144 [
    i8 0, label %2098
    i8 14, label %2110
  ]

2098:                                             ; preds = %2093
  %2099 = bitcast %union._hb_var_int_t* %2094 to i16*
  %2100 = load i16, i16* %2099, align 4
  %2101 = and i16 %2100, 32
  %2102 = icmp eq i16 %2101, 0
  br i1 %2102, label %2144, label %2103

2103:                                             ; preds = %2098
  %2104 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2081, i64 %2090, i32 3
  %2105 = bitcast %union._hb_var_int_t* %2104 to i16*
  %2106 = load i16, i16* %2105, align 4
  %2107 = and i16 %2106, 16
  %2108 = icmp eq i16 %2107, 0
  br i1 %2108, label %2109, label %2144

2109:                                             ; preds = %2103, %2137
  br label %2080

2110:                                             ; preds = %2093
  %2111 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %2072, align 8
  %2112 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2111, i64 0, i32 15
  %2113 = load i32, i32* %2112, align 8
  br label %2114

2114:                                             ; preds = %2131, %2110
  %2115 = phi i32 [ %2116, %2131 ], [ %2085, %2110 ]
  %2116 = add i32 %2115, 1
  %2117 = icmp ult i32 %2116, %2113
  br i1 %2117, label %2118, label %2144

2118:                                             ; preds = %2114
  %2119 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %2073, align 8
  %2120 = zext i32 %2116 to i64
  %2121 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2119, i64 %2120, i32 4
  %2122 = bitcast %union._hb_var_int_t* %2121 to [4 x i8]*
  %2123 = getelementptr inbounds [4 x i8], [4 x i8]* %2122, i64 0, i64 2
  %2124 = load i8, i8* %2123, align 2
  %2125 = icmp ne i8 %2124, 0
  %2126 = bitcast %union._hb_var_int_t* %2121 to i16*
  %2127 = load i16, i16* %2126, align 4
  %2128 = and i16 %2127, 32
  %2129 = icmp eq i16 %2128, 0
  %2130 = or i1 %2125, %2129
  br i1 %2130, label %2137, label %2131

2131:                                             ; preds = %2118
  %2132 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2119, i64 %2120, i32 3
  %2133 = bitcast %union._hb_var_int_t* %2132 to i16*
  %2134 = load i16, i16* %2133, align 4
  %2135 = and i16 %2134, 16
  %2136 = icmp eq i16 %2135, 0
  br i1 %2136, label %2114, label %2137

2137:                                             ; preds = %2131, %2118
  %2138 = and i16 %2127, 31
  %2139 = zext i16 %2138 to i32
  %2140 = shl i32 1, %2139
  %2141 = and i32 %2140, 7168
  %2142 = icmp eq i32 %2141, 0
  br i1 %2142, label %2144, label %2109

2143:                                             ; preds = %2080, %2067
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !545
  br label %2144

2144:                                             ; preds = %2137, %2103, %2098, %2093, %2114, %2143
  br i1 %296, label %2145, label %2146, !prof !2

2145:                                             ; preds = %2144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !550
  br label %2146

2146:                                             ; preds = %2145, %2144
  %2147 = icmp ult i32 %292, %2074
  br i1 %2147, label %2148, label %2150

2148:                                             ; preds = %2146
  %2149 = sub i32 %2074, %292
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nonnull %284, i32 %2149) #5
  br label %2154

2150:                                             ; preds = %2146
  %2151 = icmp ugt i32 %292, %2074
  br i1 %2151, label %2152, label %2154

2152:                                             ; preds = %2150
  %2153 = sub i32 %292, %2074
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %284, i32 %2153) #5
  br label %2154

2154:                                             ; preds = %2152, %2150, %2148
  %2155 = load i32, i32* %285, align 8, !noalias !555
  %2156 = load i32, i32* %255, align 8, !noalias !555
  %2157 = icmp eq i32 %2156, 0
  br i1 %2157, label %2158, label %2159, !prof !2

2158:                                             ; preds = %2154
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !555
  br label %2159

2159:                                             ; preds = %2158, %2154
  %2160 = trunc i32 %294 to i8
  %2161 = shl i8 %2160, 4
  %2162 = or i8 %2161, 8
  %2163 = zext i32 %2155 to i64
  br label %2164

2164:                                             ; preds = %2177, %2159
  %2165 = phi i64 [ %2182, %2177 ], [ %2163, %2159 ]
  %2166 = load i32, i32* %278, align 8, !noalias !564
  %2167 = load i32, i32* %266, align 8, !noalias !564
  %2168 = icmp eq i32 %2167, 0
  br i1 %2168, label %2169, label %2170, !prof !2

2169:                                             ; preds = %2164
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !564
  br label %2170

2170:                                             ; preds = %2169, %2164
  %2171 = zext i32 %2166 to i64
  %2172 = icmp ult i64 %2165, %2171
  br i1 %2172, label %2177, label %2173

2173:                                             ; preds = %2170
  %2174 = add i32 %294, 1
  %2175 = icmp eq i32 %2174, 16
  %2176 = select i1 %2175, i32 1, i32 %2174, !prof !2
  br label %2183

2177:                                             ; preds = %2170
  %2178 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %2179 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2178, i64 %2165, i32 3
  %2180 = bitcast %union._hb_var_int_t* %2179 to [4 x i8]*
  %2181 = getelementptr inbounds [4 x i8], [4 x i8]* %2180, i64 0, i64 3
  store i8 %2162, i8* %2181, align 1
  %2182 = add nuw nsw i64 %2165, 1
  br label %2164

2183:                                             ; preds = %2173, %2057, %1931, %1805, %1679, %1553, %1427, %1301, %1175, %1049, %923, %811, %699, %587, %484, %482, %480, %401, %392
  %2184 = phi i32 [ %294, %401 ], [ %2176, %2173 ], [ %2060, %2057 ], [ %1934, %1931 ], [ %1808, %1805 ], [ %1682, %1679 ], [ %1556, %1553 ], [ %1430, %1427 ], [ %1304, %1301 ], [ %1178, %1175 ], [ %1052, %1049 ], [ %926, %923 ], [ %814, %811 ], [ %702, %699 ], [ %590, %587 ], [ %294, %392 ], [ %294, %480 ], [ %294, %482 ], [ %294, %484 ]
  %2185 = load i32, i32* %274, align 8, !noalias !573
  %2186 = load i32, i32* %165, align 8, !noalias !573
  %2187 = icmp eq i32 %2186, 0
  br i1 %2187, label %2188, label %2189, !prof !2

2188:                                             ; preds = %2183
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !573
  br label %2189

2189:                                             ; preds = %2188, %2183
  br i1 %275, label %2190, label %2191, !prof !2

2190:                                             ; preds = %2189
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !578
  br label %2191

2191:                                             ; preds = %2190, %2189
  %2192 = icmp eq i32 %2185, %247
  br i1 %2192, label %2284, label %2193

2193:                                             ; preds = %2191
  %2194 = sext i8 %396 to i64
  %2195 = getelementptr inbounds [63 x i8], [63 x i8]* bitcast (<{ i8, i8, i8, [60 x i8] }>* @_ZL38_use_syllable_machine_to_state_actions to [63 x i8]*), i64 0, i64 %2194
  %2196 = load i8, i8* %2195, align 1
  %2197 = icmp eq i8 %2196, 3
  br i1 %2197, label %2198, label %2206

2198:                                             ; preds = %2193
  %2199 = load i32, i32* %253, align 8
  %2200 = load i32, i32* %255, align 8, !noalias !583
  %2201 = icmp eq i32 %2200, 0
  br i1 %2201, label %2202, label %2203, !prof !2

2202:                                             ; preds = %2198
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 20, i1 false) #5, !noalias !583
  br label %2203

2203:                                             ; preds = %2202, %2198
  %2204 = icmp eq i32 %2199, 0
  br i1 %2204, label %2206, label %2205

2205:                                             ; preds = %2203
  call fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nonnull %252, i32 %2199) #5
  br label %2206

2206:                                             ; preds = %2205, %2203, %2193
  %2207 = load i32, i32* %286, align 4
  %2208 = add i32 %2207, %2185
  store i32 %2208, i32* %274, align 8
  br i1 %2187, label %2209, label %2211

2209:                                             ; preds = %2216, %2235, %2240, %2247, %2278, %2255, %2206
  %2210 = phi i32 [ 0, %2206 ], [ %2224, %2255 ], [ %2224, %2278 ], [ %2224, %2247 ], [ %2224, %2240 ], [ %2224, %2235 ], [ 0, %2216 ]
  br label %289

2211:                                             ; preds = %2206
  %2212 = load i32, i32* %172, align 4
  %2213 = load i32, i32* %287, align 8
  %2214 = load i32, i32* %288, align 4
  %2215 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %276, align 8
  br label %2216

2216:                                             ; preds = %2246, %2211
  %2217 = phi %struct.hb_glyph_info_t* [ %2215, %2211 ], [ %2227, %2246 ]
  %2218 = phi i32 [ %2214, %2211 ], [ %2225, %2246 ]
  %2219 = phi i32 [ %2186, %2211 ], [ %2224, %2246 ]
  %2220 = phi i32 [ %2213, %2211 ], [ %2221, %2246 ]
  %2221 = add i32 %2220, %2212
  store i32 %2221, i32* %287, align 8
  %2222 = icmp ne i32 %2219, 0
  %2223 = zext i1 %2222 to i32
  %2224 = sub i32 %2219, %2223
  store i32 %2224, i32* %165, align 8
  %2225 = add i32 %2218, %2223
  store i32 %2225, i32* %288, align 4
  %2226 = zext i1 %2222 to i64
  %2227 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2217, i64 %2226
  store %struct.hb_glyph_info_t* %2227, %struct.hb_glyph_info_t** %276, align 8
  %2228 = icmp eq i32 %2224, 0
  br i1 %2228, label %2209, label %2229

2229:                                             ; preds = %2216
  %2230 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2217, i64 %2226, i32 4
  %2231 = bitcast %union._hb_var_int_t* %2230 to [4 x i8]*
  %2232 = getelementptr inbounds [4 x i8], [4 x i8]* %2231, i64 0, i64 2
  %2233 = load i8, i8* %2232, align 2
  %2234 = icmp eq i8 %2233, 0
  br i1 %2234, label %2235, label %2247

2235:                                             ; preds = %2229
  %2236 = bitcast %union._hb_var_int_t* %2230 to i16*
  %2237 = load i16, i16* %2236, align 4
  %2238 = and i16 %2237, 32
  %2239 = icmp eq i16 %2238, 0
  br i1 %2239, label %2209, label %2240

2240:                                             ; preds = %2235
  %2241 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2217, i64 %2226, i32 3
  %2242 = bitcast %union._hb_var_int_t* %2241 to i16*
  %2243 = load i16, i16* %2242, align 4
  %2244 = and i16 %2243, 16
  %2245 = icmp eq i16 %2244, 0
  br i1 %2245, label %2246, label %2209

2246:                                             ; preds = %2240, %2278
  br label %2216

2247:                                             ; preds = %2229
  %2248 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %169, align 8
  %2249 = icmp eq i8 %2233, 14
  br i1 %2249, label %2250, label %2209

2250:                                             ; preds = %2247
  %2251 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %168, align 8
  %2252 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %2251, align 8
  %2253 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2252, i64 0, i32 15
  %2254 = load i32, i32* %2253, align 8
  br label %2255

2255:                                             ; preds = %2272, %2250
  %2256 = phi i32 [ %2257, %2272 ], [ %2221, %2250 ]
  %2257 = add i32 %2256, 1
  %2258 = icmp ult i32 %2257, %2254
  br i1 %2258, label %2259, label %2209

2259:                                             ; preds = %2255
  %2260 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %2248, align 8
  %2261 = zext i32 %2257 to i64
  %2262 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2260, i64 %2261, i32 4
  %2263 = bitcast %union._hb_var_int_t* %2262 to [4 x i8]*
  %2264 = getelementptr inbounds [4 x i8], [4 x i8]* %2263, i64 0, i64 2
  %2265 = load i8, i8* %2264, align 2
  %2266 = icmp ne i8 %2265, 0
  %2267 = bitcast %union._hb_var_int_t* %2262 to i16*
  %2268 = load i16, i16* %2267, align 4
  %2269 = and i16 %2268, 32
  %2270 = icmp eq i16 %2269, 0
  %2271 = or i1 %2266, %2270
  br i1 %2271, label %2278, label %2272

2272:                                             ; preds = %2259
  %2273 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2260, i64 %2261, i32 3
  %2274 = bitcast %union._hb_var_int_t* %2273 to i16*
  %2275 = load i16, i16* %2274, align 4
  %2276 = and i16 %2275, 16
  %2277 = icmp eq i16 %2276, 0
  br i1 %2277, label %2255, label %2278

2278:                                             ; preds = %2272, %2259
  %2279 = and i16 %2268, 31
  %2280 = zext i16 %2279 to i32
  %2281 = shl i32 1, %2280
  %2282 = and i32 %2281, 7168
  %2283 = icmp eq i32 %2282, 0
  br i1 %2283, label %2209, label %2246

2284:                                             ; preds = %2191
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %251) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %250) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %171) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %17) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  %2285 = load i32, i32* %19, align 8
  %2286 = icmp eq i32 %2285, 0
  br i1 %2286, label %2308, label %2287

2287:                                             ; preds = %2284
  %2288 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %13, align 8
  %2289 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2288, i64 0, i32 3
  %2290 = bitcast %union._hb_var_int_t* %2289 to [4 x i8]*
  %2291 = getelementptr inbounds [4 x i8], [4 x i8]* %2290, i64 0, i64 3
  %2292 = load i8, i8* %2291, align 1
  %2293 = add i32 %2285, -1
  %2294 = zext i32 %2293 to i64
  br label %2295

2295:                                             ; preds = %2299, %2287
  %2296 = phi i64 [ %2297, %2299 ], [ 0, %2287 ]
  %2297 = add nuw nsw i64 %2296, 1
  %2298 = icmp eq i64 %2296, %2294
  br i1 %2298, label %2305, label %2299

2299:                                             ; preds = %2295
  %2300 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2288, i64 %2297, i32 3
  %2301 = bitcast %union._hb_var_int_t* %2300 to [4 x i8]*
  %2302 = getelementptr inbounds [4 x i8], [4 x i8]* %2301, i64 0, i64 3
  %2303 = load i8, i8* %2302, align 1
  %2304 = icmp eq i8 %2292, %2303
  br i1 %2304, label %2295, label %2305

2305:                                             ; preds = %2299, %2295
  br i1 %2286, label %2308, label %2306

2306:                                             ; preds = %2305
  %2307 = trunc i64 %2297 to i32
  br label %2701

2308:                                             ; preds = %2728, %2284, %2305
  %2309 = phi i32 [ 0, %2305 ], [ 0, %2284 ], [ %2710, %2728 ]
  %2310 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 4
  %2311 = bitcast i8** %2310 to %struct.use_shape_plan_t**
  %2312 = load %struct.use_shape_plan_t*, %struct.use_shape_plan_t** %2311, align 8
  %2313 = getelementptr inbounds %struct.use_shape_plan_t, %struct.use_shape_plan_t* %2312, i64 0, i32 0
  %2314 = load i32, i32* %2313, align 8
  %2315 = icmp eq i32 %2314, 0
  br i1 %2315, label %2421, label %2316

2316:                                             ; preds = %2308
  %2317 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %13, align 8
  %2318 = icmp eq i32 %2309, 0
  br i1 %2318, label %2421, label %2319

2319:                                             ; preds = %2316
  %2320 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2317, i64 0, i32 3
  %2321 = bitcast %union._hb_var_int_t* %2320 to [4 x i8]*
  %2322 = getelementptr inbounds [4 x i8], [4 x i8]* %2321, i64 0, i64 3
  %2323 = load i8, i8* %2322, align 1
  %2324 = add i32 %2309, -1
  %2325 = zext i32 %2324 to i64
  br label %2326

2326:                                             ; preds = %2330, %2319
  %2327 = phi i64 [ %2328, %2330 ], [ 0, %2319 ]
  %2328 = add nuw nsw i64 %2327, 1
  %2329 = icmp eq i64 %2327, %2325
  br i1 %2329, label %2336, label %2330

2330:                                             ; preds = %2326
  %2331 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2317, i64 %2328, i32 3
  %2332 = bitcast %union._hb_var_int_t* %2331 to [4 x i8]*
  %2333 = getelementptr inbounds [4 x i8], [4 x i8]* %2332, i64 0, i64 3
  %2334 = load i8, i8* %2333, align 1
  %2335 = icmp eq i8 %2323, %2334
  br i1 %2335, label %2326, label %2336

2336:                                             ; preds = %2330, %2326
  %2337 = trunc i64 %2328 to i32
  br label %2338

2338:                                             ; preds = %2336, %2398
  %2339 = phi %struct.hb_glyph_info_t* [ %2380, %2398 ], [ %2317, %2336 ]
  %2340 = phi i32 [ %2381, %2398 ], [ %2309, %2336 ]
  %2341 = phi i32 [ %2389, %2398 ], [ %2337, %2336 ]
  %2342 = phi i32 [ %2341, %2398 ], [ 0, %2336 ]
  %2343 = zext i32 %2342 to i64
  %2344 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2317, i64 %2343, i32 4
  %2345 = bitcast %union._hb_var_int_t* %2344 to [4 x i8]*
  %2346 = getelementptr inbounds [4 x i8], [4 x i8]* %2345, i64 0, i64 2
  %2347 = load i8, i8* %2346, align 2
  %2348 = icmp eq i8 %2347, 18
  br i1 %2348, label %2353, label %2349

2349:                                             ; preds = %2338
  %2350 = sub i32 %2341, %2342
  %2351 = icmp ult i32 %2350, 3
  %2352 = select i1 %2351, i32 %2350, i32 3
  br label %2353

2353:                                             ; preds = %2349, %2338
  %2354 = phi i32 [ %2352, %2349 ], [ 1, %2338 ]
  %2355 = add i32 %2354, %2342
  %2356 = icmp ult i32 %2342, %2355
  br i1 %2356, label %2357, label %2379

2357:                                             ; preds = %2353
  %2358 = zext i32 %2355 to i64
  %2359 = sub nsw i64 %2358, %2343
  %2360 = xor i64 %2343, -1
  %2361 = add nsw i64 %2360, %2358
  %2362 = and i64 %2359, 3
  %2363 = icmp eq i64 %2362, 0
  br i1 %2363, label %2373, label %2364

2364:                                             ; preds = %2357, %2364
  %2365 = phi i64 [ %2370, %2364 ], [ %2343, %2357 ]
  %2366 = phi i64 [ %2371, %2364 ], [ %2362, %2357 ]
  %2367 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2317, i64 %2365, i32 1
  %2368 = load i32, i32* %2367, align 4
  %2369 = or i32 %2368, %2314
  store i32 %2369, i32* %2367, align 4
  %2370 = add nuw nsw i64 %2365, 1
  %2371 = add i64 %2366, -1
  %2372 = icmp eq i64 %2371, 0
  br i1 %2372, label %2373, label %2364, !llvm.loop !588

2373:                                             ; preds = %2364, %2357
  %2374 = phi i64 [ %2343, %2357 ], [ %2370, %2364 ]
  %2375 = icmp ult i64 %2361, 3
  br i1 %2375, label %2376, label %2400

2376:                                             ; preds = %2400, %2373
  %2377 = load i32, i32* %19, align 8
  %2378 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %13, align 8
  br label %2379

2379:                                             ; preds = %2376, %2353
  %2380 = phi %struct.hb_glyph_info_t* [ %2378, %2376 ], [ %2339, %2353 ]
  %2381 = phi i32 [ %2377, %2376 ], [ %2340, %2353 ]
  %2382 = zext i32 %2341 to i64
  %2383 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2380, i64 %2382, i32 3
  %2384 = bitcast %union._hb_var_int_t* %2383 to [4 x i8]*
  %2385 = getelementptr inbounds [4 x i8], [4 x i8]* %2384, i64 0, i64 3
  %2386 = load i8, i8* %2385, align 1
  br label %2387

2387:                                             ; preds = %2391, %2379
  %2388 = phi i32 [ %2341, %2379 ], [ %2389, %2391 ]
  %2389 = add i32 %2388, 1
  %2390 = icmp ult i32 %2389, %2381
  br i1 %2390, label %2391, label %2398

2391:                                             ; preds = %2387
  %2392 = zext i32 %2389 to i64
  %2393 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2380, i64 %2392, i32 3
  %2394 = bitcast %union._hb_var_int_t* %2393 to [4 x i8]*
  %2395 = getelementptr inbounds [4 x i8], [4 x i8]* %2394, i64 0, i64 3
  %2396 = load i8, i8* %2395, align 1
  %2397 = icmp eq i8 %2386, %2396
  br i1 %2397, label %2387, label %2398

2398:                                             ; preds = %2391, %2387
  %2399 = icmp ult i32 %2341, %2309
  br i1 %2399, label %2338, label %2419

2400:                                             ; preds = %2373, %2400
  %2401 = phi i64 [ %2417, %2400 ], [ %2374, %2373 ]
  %2402 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2317, i64 %2401, i32 1
  %2403 = load i32, i32* %2402, align 4
  %2404 = or i32 %2403, %2314
  store i32 %2404, i32* %2402, align 4
  %2405 = add nuw nsw i64 %2401, 1
  %2406 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2317, i64 %2405, i32 1
  %2407 = load i32, i32* %2406, align 4
  %2408 = or i32 %2407, %2314
  store i32 %2408, i32* %2406, align 4
  %2409 = add nuw nsw i64 %2401, 2
  %2410 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2317, i64 %2409, i32 1
  %2411 = load i32, i32* %2410, align 4
  %2412 = or i32 %2411, %2314
  store i32 %2412, i32* %2410, align 4
  %2413 = add nuw nsw i64 %2401, 3
  %2414 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2317, i64 %2413, i32 1
  %2415 = load i32, i32* %2414, align 4
  %2416 = or i32 %2415, %2314
  store i32 %2416, i32* %2414, align 4
  %2417 = add nuw nsw i64 %2401, 4
  %2418 = icmp eq i64 %2417, %2358
  br i1 %2418, label %2376, label %2400

2419:                                             ; preds = %2398
  %2420 = load %struct.use_shape_plan_t*, %struct.use_shape_plan_t** %2311, align 8
  br label %2421

2421:                                             ; preds = %2419, %2308, %2316
  %2422 = phi i32 [ %2381, %2419 ], [ %2309, %2308 ], [ 0, %2316 ]
  %2423 = phi %struct.use_shape_plan_t* [ %2420, %2419 ], [ %2312, %2308 ], [ %2312, %2316 ]
  %2424 = bitcast [4 x i32]* %4 to i8*
  %2425 = getelementptr inbounds %struct.use_shape_plan_t, %struct.use_shape_plan_t* %2423, i64 0, i32 1
  %2426 = load %struct.arabic_shape_plan_t*, %struct.arabic_shape_plan_t** %2425, align 8
  %2427 = icmp eq %struct.arabic_shape_plan_t* %2426, null
  br i1 %2427, label %2428, label %2700

2428:                                             ; preds = %2421
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2424) #5
  %2429 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 0
  %2430 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 1
  %2431 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 2
  %2432 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 3
  %2433 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 3, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2424, i8 -86, i64 16, i1 false) #5
  %2434 = load %"struct.hb_ot_map_t::feature_map_t"*, %"struct.hb_ot_map_t::feature_map_t"** %2433, align 8
  %2435 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 3, i32 0, i32 1
  %2436 = load i32, i32* %2435, align 4
  %2437 = icmp slt i32 %2436, 1
  %2438 = add nsw i32 %2436, -1
  %2439 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 2
  %2440 = load i32, i32* %2439, align 4
  br i1 %2437, label %2441, label %2448

2441:                                             ; preds = %2428
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2424, i8 0, i64 16, i1 false) #5
  br label %2611

2442:                                             ; preds = %2696, %2689, %2685
  %2443 = phi i32 [ %2691, %2689 ], [ 0, %2685 ], [ 0, %2696 ]
  %2444 = icmp eq i32 %2443, %2440
  %2445 = select i1 %2444, i32 0, i32 %2443
  store i32 %2445, i32* %2432, align 4
  %2446 = or i32 %2673, %2445
  %2447 = icmp eq i32 %2446, 0
  br i1 %2447, label %2611, label %2478

2448:                                             ; preds = %2428, %2463
  %2449 = phi i32 [ %2465, %2463 ], [ %2438, %2428 ]
  %2450 = phi i32 [ %2464, %2463 ], [ 0, %2428 ]
  %2451 = add i32 %2450, %2449
  %2452 = lshr i32 %2451, 1
  %2453 = zext i32 %2452 to i64
  %2454 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %2434, i64 %2453, i32 0
  %2455 = load i32, i32* %2454, align 4
  %2456 = icmp ugt i32 %2455, 1769172844
  br i1 %2456, label %2457, label %2459

2457:                                             ; preds = %2448
  %2458 = add nsw i32 %2452, -1
  br label %2463

2459:                                             ; preds = %2448
  %2460 = icmp eq i32 %2455, 1769172844
  br i1 %2460, label %2467, label %2461

2461:                                             ; preds = %2459
  %2462 = add nuw nsw i32 %2452, 1
  br label %2463

2463:                                             ; preds = %2461, %2457
  %2464 = phi i32 [ %2450, %2457 ], [ %2462, %2461 ]
  %2465 = phi i32 [ %2458, %2457 ], [ %2449, %2461 ]
  %2466 = icmp sgt i32 %2464, %2465
  br i1 %2466, label %2474, label %2448

2467:                                             ; preds = %2459
  %2468 = zext i32 %2452 to i64
  %2469 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %2434, i64 %2468
  %2470 = icmp eq %"struct.hb_ot_map_t::feature_map_t"* %2469, null
  br i1 %2470, label %2474, label %2471

2471:                                             ; preds = %2467
  %2472 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %2434, i64 %2468, i32 5
  %2473 = load i32, i32* %2472, align 4
  br label %2474

2474:                                             ; preds = %2463, %2471, %2467
  %2475 = phi i32 [ %2473, %2471 ], [ 0, %2467 ], [ 0, %2463 ]
  %2476 = icmp eq i32 %2475, %2440
  %2477 = select i1 %2476, i32 0, i32 %2475
  store i32 %2477, i32* %2429, align 16
  br label %2612

2478:                                             ; preds = %2442
  %2479 = xor i32 %2446, -1
  %2480 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %13, align 8
  %2481 = icmp eq i32 %2422, 0
  br i1 %2481, label %2611, label %2482

2482:                                             ; preds = %2478
  %2483 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2480, i64 0, i32 3
  %2484 = bitcast %union._hb_var_int_t* %2483 to [4 x i8]*
  %2485 = getelementptr inbounds [4 x i8], [4 x i8]* %2484, i64 0, i64 3
  %2486 = load i8, i8* %2485, align 1
  %2487 = add i32 %2422, -1
  %2488 = zext i32 %2487 to i64
  br label %2489

2489:                                             ; preds = %2493, %2482
  %2490 = phi i64 [ %2491, %2493 ], [ 0, %2482 ]
  %2491 = add nuw nsw i64 %2490, 1
  %2492 = icmp eq i64 %2490, %2488
  br i1 %2492, label %2499, label %2493

2493:                                             ; preds = %2489
  %2494 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2480, i64 %2491, i32 3
  %2495 = bitcast %union._hb_var_int_t* %2494 to [4 x i8]*
  %2496 = getelementptr inbounds [4 x i8], [4 x i8]* %2495, i64 0, i64 3
  %2497 = load i8, i8* %2496, align 1
  %2498 = icmp eq i8 %2486, %2497
  br i1 %2498, label %2489, label %2499

2499:                                             ; preds = %2493, %2489
  %2500 = trunc i64 %2491 to i32
  br label %2501

2501:                                             ; preds = %2606, %2499
  %2502 = phi i8 [ %2610, %2606 ], [ %2486, %2499 ]
  %2503 = phi i32 [ %2595, %2606 ], [ %2500, %2499 ]
  %2504 = phi i32 [ %2503, %2606 ], [ 0, %2499 ]
  %2505 = phi i32 [ %2585, %2606 ], [ 4, %2499 ]
  %2506 = phi i32 [ %2504, %2606 ], [ 0, %2499 ]
  %2507 = zext i32 %2504 to i64
  %2508 = and i8 %2502, 15
  %2509 = zext i8 %2508 to i32
  switch i32 %2509, label %2584 [
    i32 0, label %2510
    i32 6, label %2510
    i32 7, label %2510
    i32 9, label %2510
    i32 1, label %2511
    i32 2, label %2511
    i32 3, label %2511
    i32 4, label %2511
    i32 5, label %2511
    i32 8, label %2511
  ]

2510:                                             ; preds = %2501, %2501, %2501, %2501
  br label %2584

2511:                                             ; preds = %2501, %2501, %2501, %2501, %2501, %2501
  %2512 = icmp eq i32 %2505, 3
  %2513 = icmp eq i32 %2505, 0
  %2514 = or i1 %2512, %2513
  switch i32 %2505, label %2549 [
    i32 3, label %2515
    i32 0, label %2515
  ]

2515:                                             ; preds = %2511, %2511
  %2516 = icmp ult i32 %2506, %2504
  br i1 %2516, label %2517, label %2549

2517:                                             ; preds = %2515
  %2518 = select i1 %2512, i64 2, i64 1
  %2519 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 %2518
  %2520 = load i32, i32* %2519, align 4
  %2521 = zext i32 %2506 to i64
  %2522 = sub nsw i64 %2507, %2521
  %2523 = xor i64 %2521, -1
  %2524 = and i64 %2522, 1
  %2525 = icmp eq i64 %2524, 0
  br i1 %2525, label %2532, label %2526

2526:                                             ; preds = %2517
  %2527 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2480, i64 %2521, i32 1
  %2528 = load i32, i32* %2527, align 4
  %2529 = and i32 %2528, %2479
  %2530 = or i32 %2529, %2520
  store i32 %2530, i32* %2527, align 4
  %2531 = add nuw nsw i64 %2521, 1
  br label %2532

2532:                                             ; preds = %2526, %2517
  %2533 = phi i64 [ %2531, %2526 ], [ %2521, %2517 ]
  %2534 = sub nsw i64 0, %2507
  %2535 = icmp eq i64 %2523, %2534
  br i1 %2535, label %2549, label %2536

2536:                                             ; preds = %2532, %2536
  %2537 = phi i64 [ %2547, %2536 ], [ %2533, %2532 ]
  %2538 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2480, i64 %2537, i32 1
  %2539 = load i32, i32* %2538, align 4
  %2540 = and i32 %2539, %2479
  %2541 = or i32 %2540, %2520
  store i32 %2541, i32* %2538, align 4
  %2542 = add nuw nsw i64 %2537, 1
  %2543 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2480, i64 %2542, i32 1
  %2544 = load i32, i32* %2543, align 4
  %2545 = and i32 %2544, %2479
  %2546 = or i32 %2545, %2520
  store i32 %2546, i32* %2543, align 4
  %2547 = add nuw nsw i64 %2537, 2
  %2548 = icmp eq i64 %2547, %2507
  br i1 %2548, label %2549, label %2536

2549:                                             ; preds = %2532, %2536, %2515, %2511
  %2550 = select i1 %2514, i32 3, i32 0
  %2551 = icmp ult i32 %2504, %2503
  br i1 %2551, label %2552, label %2584

2552:                                             ; preds = %2549
  %2553 = zext i32 %2550 to i64
  %2554 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 %2553
  %2555 = load i32, i32* %2554, align 4
  %2556 = zext i32 %2503 to i64
  %2557 = sub nsw i64 %2556, %2507
  %2558 = xor i64 %2507, -1
  %2559 = and i64 %2557, 1
  %2560 = icmp eq i64 %2559, 0
  br i1 %2560, label %2567, label %2561

2561:                                             ; preds = %2552
  %2562 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2480, i64 %2507, i32 1
  %2563 = load i32, i32* %2562, align 4
  %2564 = and i32 %2563, %2479
  %2565 = or i32 %2564, %2555
  store i32 %2565, i32* %2562, align 4
  %2566 = add nuw nsw i64 %2507, 1
  br label %2567

2567:                                             ; preds = %2561, %2552
  %2568 = phi i64 [ %2566, %2561 ], [ %2507, %2552 ]
  %2569 = sub nsw i64 0, %2556
  %2570 = icmp eq i64 %2558, %2569
  br i1 %2570, label %2584, label %2571

2571:                                             ; preds = %2567, %2571
  %2572 = phi i64 [ %2582, %2571 ], [ %2568, %2567 ]
  %2573 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2480, i64 %2572, i32 1
  %2574 = load i32, i32* %2573, align 4
  %2575 = and i32 %2574, %2479
  %2576 = or i32 %2575, %2555
  store i32 %2576, i32* %2573, align 4
  %2577 = add nuw nsw i64 %2572, 1
  %2578 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2480, i64 %2577, i32 1
  %2579 = load i32, i32* %2578, align 4
  %2580 = and i32 %2579, %2479
  %2581 = or i32 %2580, %2555
  store i32 %2581, i32* %2578, align 4
  %2582 = add nuw nsw i64 %2572, 2
  %2583 = icmp eq i64 %2582, %2556
  br i1 %2583, label %2584, label %2571

2584:                                             ; preds = %2567, %2571, %2549, %2510, %2501
  %2585 = phi i32 [ %2505, %2501 ], [ 4, %2510 ], [ %2550, %2549 ], [ %2550, %2571 ], [ %2550, %2567 ]
  %2586 = load i32, i32* %19, align 8
  %2587 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %13, align 8
  %2588 = zext i32 %2503 to i64
  %2589 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2587, i64 %2588, i32 3
  %2590 = bitcast %union._hb_var_int_t* %2589 to [4 x i8]*
  %2591 = getelementptr inbounds [4 x i8], [4 x i8]* %2590, i64 0, i64 3
  %2592 = load i8, i8* %2591, align 1
  br label %2593

2593:                                             ; preds = %2597, %2584
  %2594 = phi i32 [ %2503, %2584 ], [ %2595, %2597 ]
  %2595 = add i32 %2594, 1
  %2596 = icmp ult i32 %2595, %2586
  br i1 %2596, label %2597, label %2604

2597:                                             ; preds = %2593
  %2598 = zext i32 %2595 to i64
  %2599 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2587, i64 %2598, i32 3
  %2600 = bitcast %union._hb_var_int_t* %2599 to [4 x i8]*
  %2601 = getelementptr inbounds [4 x i8], [4 x i8]* %2600, i64 0, i64 3
  %2602 = load i8, i8* %2601, align 1
  %2603 = icmp eq i8 %2592, %2602
  br i1 %2603, label %2593, label %2604

2604:                                             ; preds = %2597, %2593
  %2605 = icmp ult i32 %2503, %2422
  br i1 %2605, label %2606, label %2611

2606:                                             ; preds = %2604
  %2607 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2480, i64 %2588, i32 3
  %2608 = bitcast %union._hb_var_int_t* %2607 to [4 x i8]*
  %2609 = getelementptr inbounds [4 x i8], [4 x i8]* %2608, i64 0, i64 3
  %2610 = load i8, i8* %2609, align 1
  br label %2501

2611:                                             ; preds = %2604, %2478, %2442, %2441
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2424) #5
  br label %2700

2612:                                             ; preds = %2634, %2474
  %2613 = phi i32 [ %2438, %2474 ], [ %2636, %2634 ]
  %2614 = phi i32 [ 0, %2474 ], [ %2635, %2634 ]
  %2615 = add i32 %2614, %2613
  %2616 = lshr i32 %2615, 1
  %2617 = zext i32 %2616 to i64
  %2618 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %2434, i64 %2617, i32 0
  %2619 = load i32, i32* %2618, align 4
  %2620 = icmp ugt i32 %2619, 1768843636
  br i1 %2620, label %2632, label %2621

2621:                                             ; preds = %2612
  %2622 = icmp eq i32 %2619, 1768843636
  br i1 %2622, label %2623, label %2630

2623:                                             ; preds = %2621
  %2624 = zext i32 %2616 to i64
  %2625 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %2434, i64 %2624
  %2626 = icmp eq %"struct.hb_ot_map_t::feature_map_t"* %2625, null
  br i1 %2626, label %2638, label %2627

2627:                                             ; preds = %2623
  %2628 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %2434, i64 %2624, i32 5
  %2629 = load i32, i32* %2628, align 4
  br label %2638

2630:                                             ; preds = %2621
  %2631 = add nuw nsw i32 %2616, 1
  br label %2634

2632:                                             ; preds = %2612
  %2633 = add nsw i32 %2616, -1
  br label %2634

2634:                                             ; preds = %2632, %2630
  %2635 = phi i32 [ %2614, %2632 ], [ %2631, %2630 ]
  %2636 = phi i32 [ %2633, %2632 ], [ %2613, %2630 ]
  %2637 = icmp sgt i32 %2635, %2636
  br i1 %2637, label %2638, label %2612

2638:                                             ; preds = %2634, %2627, %2623
  %2639 = phi i32 [ %2629, %2627 ], [ 0, %2623 ], [ 0, %2634 ]
  %2640 = icmp eq i32 %2639, %2440
  %2641 = select i1 %2640, i32 0, i32 %2639
  store i32 %2641, i32* %2430, align 4
  %2642 = or i32 %2641, %2477
  br label %2643

2643:                                             ; preds = %2665, %2638
  %2644 = phi i32 [ %2438, %2638 ], [ %2667, %2665 ]
  %2645 = phi i32 [ 0, %2638 ], [ %2666, %2665 ]
  %2646 = add i32 %2645, %2644
  %2647 = lshr i32 %2646, 1
  %2648 = zext i32 %2647 to i64
  %2649 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %2434, i64 %2648, i32 0
  %2650 = load i32, i32* %2649, align 4
  %2651 = icmp ugt i32 %2650, 1835361385
  br i1 %2651, label %2663, label %2652

2652:                                             ; preds = %2643
  %2653 = icmp eq i32 %2650, 1835361385
  br i1 %2653, label %2654, label %2661

2654:                                             ; preds = %2652
  %2655 = zext i32 %2647 to i64
  %2656 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %2434, i64 %2655
  %2657 = icmp eq %"struct.hb_ot_map_t::feature_map_t"* %2656, null
  br i1 %2657, label %2669, label %2658

2658:                                             ; preds = %2654
  %2659 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %2434, i64 %2655, i32 5
  %2660 = load i32, i32* %2659, align 4
  br label %2669

2661:                                             ; preds = %2652
  %2662 = add nuw nsw i32 %2647, 1
  br label %2665

2663:                                             ; preds = %2643
  %2664 = add nsw i32 %2647, -1
  br label %2665

2665:                                             ; preds = %2663, %2661
  %2666 = phi i32 [ %2645, %2663 ], [ %2662, %2661 ]
  %2667 = phi i32 [ %2664, %2663 ], [ %2644, %2661 ]
  %2668 = icmp sgt i32 %2666, %2667
  br i1 %2668, label %2669, label %2643

2669:                                             ; preds = %2665, %2658, %2654
  %2670 = phi i32 [ %2660, %2658 ], [ 0, %2654 ], [ 0, %2665 ]
  %2671 = icmp eq i32 %2670, %2440
  %2672 = select i1 %2671, i32 0, i32 %2670
  store i32 %2672, i32* %2431, align 8
  %2673 = or i32 %2642, %2672
  br label %2674

2674:                                             ; preds = %2696, %2669
  %2675 = phi i32 [ %2438, %2669 ], [ %2698, %2696 ]
  %2676 = phi i32 [ 0, %2669 ], [ %2697, %2696 ]
  %2677 = add i32 %2676, %2675
  %2678 = lshr i32 %2677, 1
  %2679 = zext i32 %2678 to i64
  %2680 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %2434, i64 %2679, i32 0
  %2681 = load i32, i32* %2680, align 4
  %2682 = icmp ugt i32 %2681, 1718185569
  br i1 %2682, label %2694, label %2683

2683:                                             ; preds = %2674
  %2684 = icmp eq i32 %2681, 1718185569
  br i1 %2684, label %2685, label %2692

2685:                                             ; preds = %2683
  %2686 = zext i32 %2678 to i64
  %2687 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %2434, i64 %2686
  %2688 = icmp eq %"struct.hb_ot_map_t::feature_map_t"* %2687, null
  br i1 %2688, label %2442, label %2689

2689:                                             ; preds = %2685
  %2690 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %2434, i64 %2686, i32 5
  %2691 = load i32, i32* %2690, align 4
  br label %2442

2692:                                             ; preds = %2683
  %2693 = add nuw nsw i32 %2678, 1
  br label %2696

2694:                                             ; preds = %2674
  %2695 = add nsw i32 %2678, -1
  br label %2696

2696:                                             ; preds = %2694, %2692
  %2697 = phi i32 [ %2676, %2694 ], [ %2693, %2692 ]
  %2698 = phi i32 [ %2695, %2694 ], [ %2675, %2692 ]
  %2699 = icmp sgt i32 %2697, %2698
  br i1 %2699, label %2442, label %2674

2700:                                             ; preds = %2421, %2611
  ret void

2701:                                             ; preds = %2306, %2728
  %2702 = phi i32 [ %2710, %2728 ], [ %2285, %2306 ]
  %2703 = phi i32 [ %2719, %2728 ], [ %2307, %2306 ]
  %2704 = phi i32 [ %2703, %2728 ], [ 0, %2306 ]
  %2705 = sub i32 %2703, %2704
  %2706 = icmp ult i32 %2705, 2
  br i1 %2706, label %2709, label %2707

2707:                                             ; preds = %2701
  call void @_ZN11hb_buffer_t20unsafe_to_break_implEjj(%struct.hb_buffer_t* %2, i32 %2704, i32 %2703) #5
  %2708 = load i32, i32* %19, align 8
  br label %2709

2709:                                             ; preds = %2701, %2707
  %2710 = phi i32 [ %2702, %2701 ], [ %2708, %2707 ]
  %2711 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %13, align 8
  %2712 = zext i32 %2703 to i64
  %2713 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2711, i64 %2712, i32 3
  %2714 = bitcast %union._hb_var_int_t* %2713 to [4 x i8]*
  %2715 = getelementptr inbounds [4 x i8], [4 x i8]* %2714, i64 0, i64 3
  %2716 = load i8, i8* %2715, align 1
  br label %2717

2717:                                             ; preds = %2721, %2709
  %2718 = phi i32 [ %2703, %2709 ], [ %2719, %2721 ]
  %2719 = add i32 %2718, 1
  %2720 = icmp ult i32 %2719, %2710
  br i1 %2720, label %2721, label %2728

2721:                                             ; preds = %2717
  %2722 = zext i32 %2719 to i64
  %2723 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %2711, i64 %2722, i32 3
  %2724 = bitcast %union._hb_var_int_t* %2723 to [4 x i8]*
  %2725 = getelementptr inbounds [4 x i8], [4 x i8]* %2724, i64 0, i64 3
  %2726 = load i8, i8* %2725, align 1
  %2727 = icmp eq i8 %2716, %2726
  br i1 %2727, label %2717, label %2728

2728:                                             ; preds = %2717, %2721
  %2729 = icmp ult i32 %2703, %2285
  br i1 %2729, label %2701, label %2308
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @_ZL28_hb_clear_substitution_flagsPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t(%struct.hb_ot_shape_plan_t* nocapture readnone, %struct.hb_font_t* nocapture readnone, %struct.hb_buffer_t* nocapture readonly) #2 {
  %4 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %5 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %4, align 8
  %6 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %29, label %9

9:                                                ; preds = %3
  %10 = zext i32 %7 to i64
  %11 = add nsw i64 %10, -1
  %12 = and i64 %10, 3
  %13 = icmp ult i64 %11, 3
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = sub nsw i64 %10, %12
  br label %30

16:                                               ; preds = %30, %9
  %17 = phi i64 [ 0, %9 ], [ %52, %30 ]
  %18 = icmp eq i64 %12, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %16, %19
  %20 = phi i64 [ %26, %19 ], [ %17, %16 ]
  %21 = phi i64 [ %27, %19 ], [ %12, %16 ]
  %22 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %20, i32 3
  %23 = bitcast %union._hb_var_int_t* %22 to i16*
  %24 = load i16, i16* %23, align 4
  %25 = and i16 %24, -17
  store i16 %25, i16* %23, align 4
  %26 = add nuw nsw i64 %20, 1
  %27 = add i64 %21, -1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %19, !llvm.loop !590

29:                                               ; preds = %16, %19, %3
  ret void

30:                                               ; preds = %30, %14
  %31 = phi i64 [ 0, %14 ], [ %52, %30 ]
  %32 = phi i64 [ %15, %14 ], [ %53, %30 ]
  %33 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %31, i32 3
  %34 = bitcast %union._hb_var_int_t* %33 to i16*
  %35 = load i16, i16* %34, align 4
  %36 = and i16 %35, -17
  store i16 %36, i16* %34, align 4
  %37 = or i64 %31, 1
  %38 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %37, i32 3
  %39 = bitcast %union._hb_var_int_t* %38 to i16*
  %40 = load i16, i16* %39, align 4
  %41 = and i16 %40, -17
  store i16 %41, i16* %39, align 4
  %42 = or i64 %31, 2
  %43 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %42, i32 3
  %44 = bitcast %union._hb_var_int_t* %43 to i16*
  %45 = load i16, i16* %44, align 4
  %46 = and i16 %45, -17
  store i16 %46, i16* %44, align 4
  %47 = or i64 %31, 3
  %48 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %47, i32 3
  %49 = bitcast %union._hb_var_int_t* %48 to i16*
  %50 = load i16, i16* %49, align 4
  %51 = and i16 %50, -17
  store i16 %51, i16* %49, align 4
  %52 = add nuw nsw i64 %31, 4
  %53 = add i64 %32, -4
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %16, label %30
}

declare hidden void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL15record_rphf_usePK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t(%struct.hb_ot_shape_plan_t* nocapture readonly, %struct.hb_font_t* nocapture readnone, %struct.hb_buffer_t* nocapture readonly) #4 {
  %4 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 4
  %5 = bitcast i8** %4 to %struct.use_shape_plan_t**
  %6 = load %struct.use_shape_plan_t*, %struct.use_shape_plan_t** %5, align 8
  %7 = getelementptr inbounds %struct.use_shape_plan_t, %struct.use_shape_plan_t* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %88, label %10

10:                                               ; preds = %3
  %11 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %12 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %11, align 8
  %13 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %88, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 0, i32 3
  %18 = bitcast %union._hb_var_int_t* %17 to [4 x i8]*
  %19 = getelementptr inbounds [4 x i8], [4 x i8]* %18, i64 0, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = add i32 %14, -1
  %22 = zext i32 %21 to i64
  br label %23

23:                                               ; preds = %27, %16
  %24 = phi i64 [ %25, %27 ], [ 0, %16 ]
  %25 = add nuw nsw i64 %24, 1
  %26 = icmp eq i64 %24, %22
  br i1 %26, label %33, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %25, i32 3
  %29 = bitcast %union._hb_var_int_t* %28 to [4 x i8]*
  %30 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i64 0, i64 3
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %20, %31
  br i1 %32, label %23, label %33

33:                                               ; preds = %27, %23
  br i1 %15, label %88, label %34

34:                                               ; preds = %33
  %35 = trunc i64 %25 to i32
  br label %36

36:                                               ; preds = %34, %86
  %37 = phi %struct.hb_glyph_info_t* [ %68, %86 ], [ %12, %34 ]
  %38 = phi i32 [ %69, %86 ], [ %14, %34 ]
  %39 = phi i32 [ %77, %86 ], [ %35, %34 ]
  %40 = phi i32 [ %39, %86 ], [ 0, %34 ]
  %41 = icmp ult i32 %40, %39
  br i1 %41, label %42, label %67

42:                                               ; preds = %36
  %43 = zext i32 %40 to i64
  br label %47

44:                                               ; preds = %53
  %45 = trunc i64 %59 to i32
  %46 = icmp eq i32 %39, %45
  br i1 %46, label %67, label %47

47:                                               ; preds = %44, %42
  %48 = phi i64 [ %43, %42 ], [ %59, %44 ]
  %49 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %48, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, %8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %67, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %48, i32 3
  %55 = bitcast %union._hb_var_int_t* %54 to i16*
  %56 = load i16, i16* %55, align 4
  %57 = and i16 %56, 16
  %58 = icmp eq i16 %57, 0
  %59 = add nuw nsw i64 %48, 1
  br i1 %58, label %44, label %60

60:                                               ; preds = %53
  %61 = and i64 %48, 4294967295
  %62 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %61, i32 4
  %63 = bitcast %union._hb_var_int_t* %62 to [4 x i8]*
  %64 = getelementptr inbounds [4 x i8], [4 x i8]* %63, i64 0, i64 2
  store i8 18, i8* %64, align 2
  %65 = load i32, i32* %13, align 8
  %66 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %11, align 8
  br label %67

67:                                               ; preds = %47, %44, %36, %60
  %68 = phi %struct.hb_glyph_info_t* [ %37, %36 ], [ %66, %60 ], [ %37, %44 ], [ %37, %47 ]
  %69 = phi i32 [ %38, %36 ], [ %65, %60 ], [ %38, %44 ], [ %38, %47 ]
  %70 = zext i32 %39 to i64
  %71 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %68, i64 %70, i32 3
  %72 = bitcast %union._hb_var_int_t* %71 to [4 x i8]*
  %73 = getelementptr inbounds [4 x i8], [4 x i8]* %72, i64 0, i64 3
  %74 = load i8, i8* %73, align 1
  br label %75

75:                                               ; preds = %79, %67
  %76 = phi i32 [ %39, %67 ], [ %77, %79 ]
  %77 = add i32 %76, 1
  %78 = icmp ult i32 %77, %69
  br i1 %78, label %79, label %86

79:                                               ; preds = %75
  %80 = zext i32 %77 to i64
  %81 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %68, i64 %80, i32 3
  %82 = bitcast %union._hb_var_int_t* %81 to [4 x i8]*
  %83 = getelementptr inbounds [4 x i8], [4 x i8]* %82, i64 0, i64 3
  %84 = load i8, i8* %83, align 1
  %85 = icmp eq i8 %74, %84
  br i1 %85, label %75, label %86

86:                                               ; preds = %75, %79
  %87 = icmp ult i32 %39, %14
  br i1 %87, label %36, label %88

88:                                               ; preds = %86, %10, %33, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL15record_pref_usePK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t(%struct.hb_ot_shape_plan_t* nocapture readnone, %struct.hb_font_t* nocapture readnone, %struct.hb_buffer_t* nocapture readonly) #4 {
  %4 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %5 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %4, align 8
  %6 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %37, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 0, i32 3
  %11 = bitcast %union._hb_var_int_t* %10 to [4 x i8]*
  %12 = getelementptr inbounds [4 x i8], [4 x i8]* %11, i64 0, i64 3
  %13 = load i8, i8* %12, align 1
  %14 = add i32 %7, -1
  %15 = zext i32 %14 to i64
  br label %16

16:                                               ; preds = %20, %9
  %17 = phi i64 [ %18, %20 ], [ 0, %9 ]
  %18 = add nuw nsw i64 %17, 1
  %19 = icmp eq i64 %17, %15
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %18, i32 3
  %22 = bitcast %union._hb_var_int_t* %21 to [4 x i8]*
  %23 = getelementptr inbounds [4 x i8], [4 x i8]* %22, i64 0, i64 3
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %13, %24
  br i1 %25, label %16, label %26

26:                                               ; preds = %20, %16
  br i1 %8, label %37, label %27

27:                                               ; preds = %26
  %28 = trunc i64 %18 to i32
  br label %29

29:                                               ; preds = %27, %75
  %30 = phi %struct.hb_glyph_info_t* [ %57, %75 ], [ %5, %27 ]
  %31 = phi i32 [ %58, %75 ], [ %7, %27 ]
  %32 = phi i32 [ %66, %75 ], [ %28, %27 ]
  %33 = phi i32 [ %32, %75 ], [ 0, %27 ]
  %34 = icmp ult i32 %33, %32
  br i1 %34, label %35, label %56

35:                                               ; preds = %29
  %36 = zext i32 %33 to i64
  br label %41

37:                                               ; preds = %75, %3, %26
  ret void

38:                                               ; preds = %41
  %39 = trunc i64 %48 to i32
  %40 = icmp eq i32 %32, %39
  br i1 %40, label %56, label %41

41:                                               ; preds = %38, %35
  %42 = phi i64 [ %36, %35 ], [ %48, %38 ]
  %43 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %42, i32 3
  %44 = bitcast %union._hb_var_int_t* %43 to i16*
  %45 = load i16, i16* %44, align 4
  %46 = and i16 %45, 16
  %47 = icmp eq i16 %46, 0
  %48 = add nuw nsw i64 %42, 1
  br i1 %47, label %38, label %49

49:                                               ; preds = %41
  %50 = and i64 %42, 4294967295
  %51 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %50, i32 4
  %52 = bitcast %union._hb_var_int_t* %51 to [4 x i8]*
  %53 = getelementptr inbounds [4 x i8], [4 x i8]* %52, i64 0, i64 2
  store i8 22, i8* %53, align 2
  %54 = load i32, i32* %6, align 8
  %55 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %4, align 8
  br label %56

56:                                               ; preds = %38, %29, %49
  %57 = phi %struct.hb_glyph_info_t* [ %30, %29 ], [ %55, %49 ], [ %30, %38 ]
  %58 = phi i32 [ %31, %29 ], [ %54, %49 ], [ %31, %38 ]
  %59 = zext i32 %32 to i64
  %60 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %57, i64 %59, i32 3
  %61 = bitcast %union._hb_var_int_t* %60 to [4 x i8]*
  %62 = getelementptr inbounds [4 x i8], [4 x i8]* %61, i64 0, i64 3
  %63 = load i8, i8* %62, align 1
  br label %64

64:                                               ; preds = %68, %56
  %65 = phi i32 [ %32, %56 ], [ %66, %68 ]
  %66 = add i32 %65, 1
  %67 = icmp ult i32 %66, %58
  br i1 %67, label %68, label %75

68:                                               ; preds = %64
  %69 = zext i32 %66 to i64
  %70 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %57, i64 %69, i32 3
  %71 = bitcast %union._hb_var_int_t* %70 to [4 x i8]*
  %72 = getelementptr inbounds [4 x i8], [4 x i8]* %71, i64 0, i64 3
  %73 = load i8, i8* %72, align 1
  %74 = icmp eq i8 %63, %73
  br i1 %74, label %64, label %75

75:                                               ; preds = %64, %68
  %76 = icmp ult i32 %32, %7
  br i1 %76, label %29, label %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL11reorder_usePK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t(%struct.hb_ot_shape_plan_t* nocapture readnone, %struct.hb_font_t*, %struct.hb_buffer_t*) #0 {
  %4 = tail call zeroext i1 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, ...) @_ZN11hb_buffer_t7messageEP9hb_font_tPKcz(%struct.hb_buffer_t* %2, %struct.hb_font_t* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0))
  br i1 %4, label %5, label %210

5:                                                ; preds = %3
  tail call void @_Z33hb_syllabic_insert_dotted_circlesP9hb_font_tP11hb_buffer_tjji(%struct.hb_font_t* %1, %struct.hb_buffer_t* %2, i32 8, i32 1, i32 18) #5
  %6 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %37, label %9

9:                                                ; preds = %5
  %10 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %11 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %10, align 8
  %12 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %11, i64 0, i32 3
  %13 = bitcast %union._hb_var_int_t* %12 to [4 x i8]*
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* %13, i64 0, i64 3
  %15 = load i8, i8* %14, align 1
  %16 = add i32 %7, -1
  %17 = zext i32 %16 to i64
  br label %18

18:                                               ; preds = %22, %9
  %19 = phi i64 [ %20, %22 ], [ 0, %9 ]
  %20 = add nuw nsw i64 %19, 1
  %21 = icmp eq i64 %19, %17
  br i1 %21, label %28, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %11, i64 %20, i32 3
  %24 = bitcast %union._hb_var_int_t* %23 to [4 x i8]*
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* %24, i64 0, i64 3
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %15, %26
  br i1 %27, label %18, label %28

28:                                               ; preds = %22, %18
  br i1 %8, label %37, label %29

29:                                               ; preds = %28
  %30 = trunc i64 %20 to i32
  %31 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %32 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %31, align 8
  %33 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %32, i64 0, i32 3
  %34 = bitcast %union._hb_var_int_t* %33 to [4 x i8]*
  %35 = getelementptr inbounds [4 x i8], [4 x i8]* %34, i64 0, i64 3
  %36 = load i8, i8* %35, align 1
  br label %39

37:                                               ; preds = %208, %5, %28
  %38 = tail call zeroext i1 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, ...) @_ZN11hb_buffer_t7messageEP9hb_font_tPKcz(%struct.hb_buffer_t* %2, %struct.hb_font_t* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0))
  br label %210

39:                                               ; preds = %29, %208
  %40 = phi i8 [ %36, %29 ], [ %196, %208 ]
  %41 = phi %struct.hb_glyph_info_t* [ %32, %29 ], [ %191, %208 ]
  %42 = phi i32 [ %30, %29 ], [ %199, %208 ]
  %43 = phi i32 [ 0, %29 ], [ %42, %208 ]
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %44
  %46 = and i8 %40, 15
  %47 = zext i8 %46 to i32
  %48 = shl i32 1, %47
  %49 = and i32 %48, 270
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %189, label %51, !prof !2

51:                                               ; preds = %39
  %52 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %44, i32 4
  %53 = bitcast %union._hb_var_int_t* %52 to [4 x i8]*
  %54 = getelementptr inbounds [4 x i8], [4 x i8]* %53, i64 0, i64 2
  %55 = load i8, i8* %54, align 2
  %56 = icmp eq i8 %55, 18
  %57 = sub i32 %42, %43
  %58 = icmp ugt i32 %57, 1
  %59 = and i1 %58, %56
  br i1 %59, label %60, label %122

60:                                               ; preds = %51
  %61 = add nuw i32 %43, 1
  %62 = icmp ult i32 %61, %42
  br i1 %62, label %63, label %122

63:                                               ; preds = %60
  %64 = add i32 %42, -1
  %65 = zext i32 %61 to i64
  %66 = zext i32 %64 to i64
  br label %67

67:                                               ; preds = %118, %63
  %68 = phi i64 [ %65, %63 ], [ %119, %118 ]
  %69 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %68, i32 4
  %70 = bitcast %union._hb_var_int_t* %69 to [4 x i8]*
  %71 = getelementptr inbounds [4 x i8], [4 x i8]* %70, i64 0, i64 2
  %72 = load i8, i8* %71, align 2
  %73 = icmp ugt i8 %72, 63
  %74 = zext i8 %72 to i64
  %75 = shl i64 1, %74
  %76 = and i64 %75, 1024345505792
  %77 = icmp eq i64 %76, 0
  %78 = or i1 %73, %77
  br i1 %78, label %79, label %92

79:                                               ; preds = %67
  switch i8 %72, label %86 [
    i8 12, label %80
    i8 44, label %80
  ]

80:                                               ; preds = %79, %79
  %81 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %68, i32 3
  %82 = bitcast %union._hb_var_int_t* %81 to i16*
  %83 = load i16, i16* %82, align 4
  %84 = and i16 %83, 32
  %85 = icmp eq i16 %84, 0
  br label %86

86:                                               ; preds = %80, %79
  %87 = phi i1 [ %85, %80 ], [ false, %79 ]
  %88 = icmp eq i64 %68, %66
  %89 = or i1 %88, %87
  br i1 %89, label %90, label %118

90:                                               ; preds = %86
  %91 = trunc i64 %68 to i32
  br i1 %87, label %94, label %97

92:                                               ; preds = %67
  %93 = trunc i64 %68 to i32
  br label %94

94:                                               ; preds = %92, %90
  %95 = phi i32 [ %93, %92 ], [ %91, %90 ]
  %96 = add i32 %95, -1
  br label %97

97:                                               ; preds = %94, %90
  %98 = phi i32 [ %96, %94 ], [ %91, %90 ]
  %99 = add i32 %98, 1
  %100 = sub i32 %99, %43
  %101 = icmp ult i32 %100, 2
  br i1 %101, label %103, label %102

102:                                              ; preds = %97
  tail call void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t* %2, i32 %43, i32 %99) #5
  br label %103

103:                                              ; preds = %102, %97
  %104 = bitcast %struct.hb_glyph_info_t* %45 to <4 x i32>*
  %105 = load <4 x i32>, <4 x i32>* %104, align 4
  %106 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %44, i32 4, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = bitcast %struct.hb_glyph_info_t* %45 to i8*
  %109 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %65
  %110 = bitcast %struct.hb_glyph_info_t* %109 to i8*
  %111 = sub i32 %98, %43
  %112 = zext i32 %111 to i64
  %113 = mul nuw nsw i64 %112, 20
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %110, i64 %113, i1 false) #5
  %114 = zext i32 %98 to i64
  %115 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %114, i32 0
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %105, <4 x i32>* %116, align 4
  %117 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %114, i32 4, i32 0
  store i32 %107, i32* %117, align 4
  br label %122

118:                                              ; preds = %86
  %119 = add nuw nsw i64 %68, 1
  %120 = trunc i64 %119 to i32
  %121 = icmp eq i32 %42, %120
  br i1 %121, label %122, label %67

122:                                              ; preds = %118, %103, %60, %51
  %123 = icmp ugt i32 %42, %43
  br i1 %123, label %124, label %189

124:                                              ; preds = %122
  %125 = zext i32 %42 to i64
  br label %126

126:                                              ; preds = %185, %124
  %127 = phi i64 [ %44, %124 ], [ %187, %185 ]
  %128 = phi i32 [ %43, %124 ], [ %186, %185 ]
  %129 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %127, i32 4
  %130 = bitcast %union._hb_var_int_t* %129 to [4 x i8]*
  %131 = getelementptr inbounds [4 x i8], [4 x i8]* %130, i64 0, i64 2
  %132 = load i8, i8* %131, align 2
  %133 = icmp ugt i8 %132, 31
  %134 = zext i8 %132 to i32
  %135 = shl i32 1, %134
  switch i8 %132, label %145 [
    i8 12, label %136
    i8 44, label %136
  ]

136:                                              ; preds = %126, %126
  %137 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %127, i32 3
  %138 = bitcast %union._hb_var_int_t* %137 to i16*
  %139 = load i16, i16* %138, align 4
  %140 = and i16 %139, 32
  %141 = icmp eq i16 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %136
  %143 = trunc i64 %127 to i32
  %144 = add i32 %143, 1
  br label %185

145:                                              ; preds = %136, %126
  %146 = and i32 %135, 12582912
  %147 = icmp eq i32 %146, 0
  %148 = or i1 %133, %147
  br i1 %148, label %185, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %127, i32 3
  %151 = bitcast %union._hb_var_int_t* %150 to [4 x i8]*
  %152 = getelementptr inbounds [4 x i8], [4 x i8]* %151, i64 0, i64 2
  %153 = load i8, i8* %152, align 2
  %154 = and i8 %153, 16
  %155 = icmp ne i8 %154, 0
  %156 = and i8 %153, 15
  %157 = icmp eq i8 %156, 0
  %158 = or i1 %157, %155
  %159 = zext i32 %128 to i64
  %160 = icmp ugt i64 %127, %159
  %161 = and i1 %160, %158
  br i1 %161, label %162, label %185

162:                                              ; preds = %149
  %163 = trunc i64 %127 to i32
  %164 = add i32 %163, 1
  %165 = sub i32 %164, %128
  %166 = icmp ult i32 %165, 2
  br i1 %166, label %168, label %167

167:                                              ; preds = %162
  tail call void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t* %2, i32 %128, i32 %164) #5
  br label %168

168:                                              ; preds = %167, %162
  %169 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %127, i32 0
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4
  %172 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %127, i32 4, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = add nuw i32 %128, 1
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %175
  %177 = bitcast %struct.hb_glyph_info_t* %176 to i8*
  %178 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %159
  %179 = bitcast %struct.hb_glyph_info_t* %178 to i8*
  %180 = sub i32 %163, %128
  %181 = zext i32 %180 to i64
  %182 = mul nuw nsw i64 %181, 20
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %177, i8* align 4 %179, i64 %182, i1 false) #5
  %183 = bitcast %struct.hb_glyph_info_t* %178 to <4 x i32>*
  store <4 x i32> %171, <4 x i32>* %183, align 4
  %184 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %159, i32 4, i32 0
  store i32 %173, i32* %184, align 4
  br label %185

185:                                              ; preds = %168, %149, %145, %142
  %186 = phi i32 [ %144, %142 ], [ %128, %168 ], [ %128, %149 ], [ %128, %145 ]
  %187 = add nuw nsw i64 %127, 1
  %188 = icmp eq i64 %187, %125
  br i1 %188, label %189, label %126

189:                                              ; preds = %185, %39, %122
  %190 = load i32, i32* %6, align 8
  %191 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %31, align 8
  %192 = zext i32 %42 to i64
  %193 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %191, i64 %192, i32 3
  %194 = bitcast %union._hb_var_int_t* %193 to [4 x i8]*
  %195 = getelementptr inbounds [4 x i8], [4 x i8]* %194, i64 0, i64 3
  %196 = load i8, i8* %195, align 1
  br label %197

197:                                              ; preds = %201, %189
  %198 = phi i32 [ %42, %189 ], [ %199, %201 ]
  %199 = add i32 %198, 1
  %200 = icmp ult i32 %199, %190
  br i1 %200, label %201, label %208

201:                                              ; preds = %197
  %202 = zext i32 %199 to i64
  %203 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %191, i64 %202, i32 3
  %204 = bitcast %union._hb_var_int_t* %203 to [4 x i8]*
  %205 = getelementptr inbounds [4 x i8], [4 x i8]* %204, i64 0, i64 3
  %206 = load i8, i8* %205, align 1
  %207 = icmp eq i8 %196, %206
  br i1 %207, label %197, label %208

208:                                              ; preds = %197, %201
  %209 = icmp ult i32 %42, %7
  br i1 %209, label %39, label %37

210:                                              ; preds = %37, %3
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @_ZL19_hb_clear_syllablesPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t(%struct.hb_ot_shape_plan_t* nocapture readnone, %struct.hb_font_t* nocapture readnone, %struct.hb_buffer_t* nocapture readonly) #2 {
  %4 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %5 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %4, align 8
  %6 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %28, label %9

9:                                                ; preds = %3
  %10 = zext i32 %7 to i64
  %11 = add nsw i64 %10, -1
  %12 = and i64 %10, 7
  %13 = icmp ult i64 %11, 7
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = sub nsw i64 %10, %12
  br label %29

16:                                               ; preds = %29, %9
  %17 = phi i64 [ 0, %9 ], [ %63, %29 ]
  %18 = icmp eq i64 %12, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %16, %19
  %20 = phi i64 [ %25, %19 ], [ %17, %16 ]
  %21 = phi i64 [ %26, %19 ], [ %12, %16 ]
  %22 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %20, i32 3
  %23 = bitcast %union._hb_var_int_t* %22 to [4 x i8]*
  %24 = getelementptr inbounds [4 x i8], [4 x i8]* %23, i64 0, i64 3
  store i8 0, i8* %24, align 1
  %25 = add nuw nsw i64 %20, 1
  %26 = add i64 %21, -1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %19, !llvm.loop !591

28:                                               ; preds = %16, %19, %3
  ret void

29:                                               ; preds = %29, %14
  %30 = phi i64 [ 0, %14 ], [ %63, %29 ]
  %31 = phi i64 [ %15, %14 ], [ %64, %29 ]
  %32 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %30, i32 3
  %33 = bitcast %union._hb_var_int_t* %32 to [4 x i8]*
  %34 = getelementptr inbounds [4 x i8], [4 x i8]* %33, i64 0, i64 3
  store i8 0, i8* %34, align 1
  %35 = or i64 %30, 1
  %36 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %35, i32 3
  %37 = bitcast %union._hb_var_int_t* %36 to [4 x i8]*
  %38 = getelementptr inbounds [4 x i8], [4 x i8]* %37, i64 0, i64 3
  store i8 0, i8* %38, align 1
  %39 = or i64 %30, 2
  %40 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %39, i32 3
  %41 = bitcast %union._hb_var_int_t* %40 to [4 x i8]*
  %42 = getelementptr inbounds [4 x i8], [4 x i8]* %41, i64 0, i64 3
  store i8 0, i8* %42, align 1
  %43 = or i64 %30, 3
  %44 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %43, i32 3
  %45 = bitcast %union._hb_var_int_t* %44 to [4 x i8]*
  %46 = getelementptr inbounds [4 x i8], [4 x i8]* %45, i64 0, i64 3
  store i8 0, i8* %46, align 1
  %47 = or i64 %30, 4
  %48 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %47, i32 3
  %49 = bitcast %union._hb_var_int_t* %48 to [4 x i8]*
  %50 = getelementptr inbounds [4 x i8], [4 x i8]* %49, i64 0, i64 3
  store i8 0, i8* %50, align 1
  %51 = or i64 %30, 5
  %52 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %51, i32 3
  %53 = bitcast %union._hb_var_int_t* %52 to [4 x i8]*
  %54 = getelementptr inbounds [4 x i8], [4 x i8]* %53, i64 0, i64 3
  store i8 0, i8* %54, align 1
  %55 = or i64 %30, 6
  %56 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %55, i32 3
  %57 = bitcast %union._hb_var_int_t* %56 to [4 x i8]*
  %58 = getelementptr inbounds [4 x i8], [4 x i8]* %57, i64 0, i64 3
  store i8 0, i8* %58, align 1
  %59 = or i64 %30, 7
  %60 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %59, i32 3
  %61 = bitcast %union._hb_var_int_t* %60 to [4 x i8]*
  %62 = getelementptr inbounds [4 x i8], [4 x i8]* %61, i64 0, i64 3
  store i8 0, i8* %62, align 1
  %63 = add nuw nsw i64 %30, 8
  %64 = add i64 %31, -8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %16, label %29
}

declare hidden void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t*, i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEpLEj"(%struct.hb_iter_t.144* nocapture, i32) unnamed_addr #4 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %110, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.hb_iter_t.144, %struct.hb_iter_t.144* %0, i64 4
  %6 = bitcast %struct.hb_iter_t.144* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = bitcast %struct.hb_iter_t.144* %0 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = mul i32 %7, %1
  %11 = add i32 %9, %10
  store i32 %11, i32* %8, align 4
  %12 = getelementptr inbounds %struct.hb_iter_t.144, %struct.hb_iter_t.144* %0, i64 24
  %13 = bitcast %struct.hb_iter_t.144* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %110, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.hb_iter_t.144, %struct.hb_iter_t.144* %0, i64 12
  %18 = bitcast %struct.hb_iter_t.144* %17 to i32*
  %19 = getelementptr inbounds %struct.hb_iter_t.144, %struct.hb_iter_t.144* %0, i64 8
  %20 = bitcast %struct.hb_iter_t.144* %19 to i32*
  %21 = getelementptr inbounds %struct.hb_iter_t.144, %struct.hb_iter_t.144* %0, i64 28
  %22 = bitcast %struct.hb_iter_t.144* %21 to i32*
  %23 = getelementptr inbounds %struct.hb_iter_t.144, %struct.hb_iter_t.144* %0, i64 16
  %24 = bitcast %struct.hb_iter_t.144* %23 to %struct.hb_glyph_info_t**
  %25 = getelementptr %struct.hb_iter_t.144, %struct.hb_iter_t.144* %0, i64 56
  %26 = bitcast %struct.hb_iter_t.144* %25 to %struct.hb_glyph_info_t***
  %27 = getelementptr %struct.hb_iter_t.144, %struct.hb_iter_t.144* %0, i64 48
  %28 = bitcast %struct.hb_iter_t.144* %27 to %struct.hb_buffer_t***
  %29 = load i32, i32* %18, align 4
  %30 = load i32, i32* %20, align 4
  %31 = load i32, i32* %22, align 4
  %32 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  br label %33

33:                                               ; preds = %108, %16
  %34 = phi %struct.hb_glyph_info_t* [ %32, %16 ], [ %51, %108 ]
  %35 = phi i32 [ %31, %16 ], [ %49, %108 ]
  %36 = phi i32 [ %30, %16 ], [ %45, %108 ]
  %37 = phi i32 [ %14, %16 ], [ %48, %108 ]
  %38 = phi i32 [ %1, %16 ], [ %39, %108 ]
  %39 = add i32 %38, -1
  br label %40

40:                                               ; preds = %70, %33
  %41 = phi %struct.hb_glyph_info_t* [ %34, %33 ], [ %51, %70 ]
  %42 = phi i32 [ %35, %33 ], [ %49, %70 ]
  %43 = phi i32 [ %37, %33 ], [ %48, %70 ]
  %44 = phi i32 [ %36, %33 ], [ %45, %70 ]
  %45 = add i32 %44, %29
  store i32 %45, i32* %20, align 4
  %46 = icmp ne i32 %43, 0
  %47 = zext i1 %46 to i32
  %48 = sub i32 %43, %47
  store i32 %48, i32* %13, align 8
  %49 = add i32 %42, %47
  store i32 %49, i32* %22, align 4
  %50 = zext i1 %46 to i64
  %51 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %50
  store %struct.hb_glyph_info_t* %51, %struct.hb_glyph_info_t** %24, align 8
  %52 = icmp eq i32 %48, 0
  br i1 %52, label %110, label %53

53:                                               ; preds = %40
  %54 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %50, i32 4
  %55 = bitcast %union._hb_var_int_t* %54 to [4 x i8]*
  %56 = getelementptr inbounds [4 x i8], [4 x i8]* %55, i64 0, i64 2
  %57 = load i8, i8* %56, align 2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %71

59:                                               ; preds = %53
  %60 = bitcast %union._hb_var_int_t* %54 to i16*
  %61 = load i16, i16* %60, align 4
  %62 = and i16 %61, 32
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %108, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %50, i32 3
  %66 = bitcast %union._hb_var_int_t* %65 to i16*
  %67 = load i16, i16* %66, align 4
  %68 = and i16 %67, 16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %108

70:                                               ; preds = %64, %102
  br label %40

71:                                               ; preds = %53
  %72 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %26, align 8
  %73 = icmp eq i8 %57, 14
  br i1 %73, label %74, label %108

74:                                               ; preds = %71
  %75 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %28, align 8
  %76 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %75, align 8
  %77 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %76, i64 0, i32 15
  %78 = load i32, i32* %77, align 8
  br label %79

79:                                               ; preds = %96, %74
  %80 = phi i32 [ %81, %96 ], [ %45, %74 ]
  %81 = add i32 %80, 1
  %82 = icmp ult i32 %81, %78
  br i1 %82, label %83, label %108

83:                                               ; preds = %79
  %84 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %72, align 8
  %85 = zext i32 %81 to i64
  %86 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %84, i64 %85, i32 4
  %87 = bitcast %union._hb_var_int_t* %86 to [4 x i8]*
  %88 = getelementptr inbounds [4 x i8], [4 x i8]* %87, i64 0, i64 2
  %89 = load i8, i8* %88, align 2
  %90 = icmp ne i8 %89, 0
  %91 = bitcast %union._hb_var_int_t* %86 to i16*
  %92 = load i16, i16* %91, align 4
  %93 = and i16 %92, 32
  %94 = icmp eq i16 %93, 0
  %95 = or i1 %90, %94
  br i1 %95, label %102, label %96

96:                                               ; preds = %83
  %97 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %84, i64 %85, i32 3
  %98 = bitcast %union._hb_var_int_t* %97 to i16*
  %99 = load i16, i16* %98, align 4
  %100 = and i16 %99, 16
  %101 = icmp eq i16 %100, 0
  br i1 %101, label %79, label %102

102:                                              ; preds = %96, %83
  %103 = and i16 %92, 31
  %104 = zext i16 %103 to i32
  %105 = shl i32 1, %104
  %106 = and i32 %105, 7168
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %70

108:                                              ; preds = %102, %71, %64, %59, %79
  %109 = icmp eq i32 %39, 0
  br i1 %109, label %110, label %33

110:                                              ; preds = %108, %40, %2, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @"_ZNR9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEmIEj"(%struct.hb_iter_t.144* nocapture, i32) unnamed_addr #4 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %110, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.hb_iter_t.144, %struct.hb_iter_t.144* %0, i64 4
  %6 = bitcast %struct.hb_iter_t.144* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = bitcast %struct.hb_iter_t.144* %0 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = mul i32 %7, %1
  %11 = sub i32 %9, %10
  store i32 %11, i32* %8, align 4
  %12 = getelementptr inbounds %struct.hb_iter_t.144, %struct.hb_iter_t.144* %0, i64 24
  %13 = bitcast %struct.hb_iter_t.144* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %110, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.hb_iter_t.144, %struct.hb_iter_t.144* %0, i64 12
  %18 = bitcast %struct.hb_iter_t.144* %17 to i32*
  %19 = getelementptr inbounds %struct.hb_iter_t.144, %struct.hb_iter_t.144* %0, i64 8
  %20 = bitcast %struct.hb_iter_t.144* %19 to i32*
  %21 = getelementptr inbounds %struct.hb_iter_t.144, %struct.hb_iter_t.144* %0, i64 28
  %22 = bitcast %struct.hb_iter_t.144* %21 to i32*
  %23 = getelementptr inbounds %struct.hb_iter_t.144, %struct.hb_iter_t.144* %0, i64 16
  %24 = bitcast %struct.hb_iter_t.144* %23 to %struct.hb_glyph_info_t**
  %25 = getelementptr %struct.hb_iter_t.144, %struct.hb_iter_t.144* %0, i64 56
  %26 = bitcast %struct.hb_iter_t.144* %25 to %struct.hb_glyph_info_t***
  %27 = getelementptr %struct.hb_iter_t.144, %struct.hb_iter_t.144* %0, i64 48
  %28 = bitcast %struct.hb_iter_t.144* %27 to %struct.hb_buffer_t***
  %29 = load i32, i32* %18, align 4
  %30 = load i32, i32* %20, align 4
  %31 = load i32, i32* %22, align 4
  %32 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  br label %33

33:                                               ; preds = %108, %16
  %34 = phi %struct.hb_glyph_info_t* [ %32, %16 ], [ %51, %108 ]
  %35 = phi i32 [ %31, %16 ], [ %49, %108 ]
  %36 = phi i32 [ %30, %16 ], [ %45, %108 ]
  %37 = phi i32 [ %14, %16 ], [ %48, %108 ]
  %38 = phi i32 [ %1, %16 ], [ %39, %108 ]
  %39 = add i32 %38, -1
  br label %40

40:                                               ; preds = %70, %33
  %41 = phi %struct.hb_glyph_info_t* [ %34, %33 ], [ %51, %70 ]
  %42 = phi i32 [ %37, %33 ], [ %48, %70 ]
  %43 = phi i32 [ %35, %33 ], [ %49, %70 ]
  %44 = phi i32 [ %36, %33 ], [ %45, %70 ]
  %45 = sub i32 %44, %29
  store i32 %45, i32* %20, align 4
  %46 = icmp ne i32 %43, 0
  %47 = zext i1 %46 to i32
  %48 = add i32 %42, %47
  store i32 %48, i32* %13, align 8
  %49 = sub i32 %43, %47
  store i32 %49, i32* %22, align 4
  %50 = sext i1 %46 to i64
  %51 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %50
  store %struct.hb_glyph_info_t* %51, %struct.hb_glyph_info_t** %24, align 8
  %52 = icmp eq i32 %48, 0
  br i1 %52, label %110, label %53

53:                                               ; preds = %40
  %54 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %50, i32 4
  %55 = bitcast %union._hb_var_int_t* %54 to [4 x i8]*
  %56 = getelementptr inbounds [4 x i8], [4 x i8]* %55, i64 0, i64 2
  %57 = load i8, i8* %56, align 2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %71

59:                                               ; preds = %53
  %60 = bitcast %union._hb_var_int_t* %54 to i16*
  %61 = load i16, i16* %60, align 4
  %62 = and i16 %61, 32
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %108, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %41, i64 %50, i32 3
  %66 = bitcast %union._hb_var_int_t* %65 to i16*
  %67 = load i16, i16* %66, align 4
  %68 = and i16 %67, 16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %108

70:                                               ; preds = %64, %102
  br label %40

71:                                               ; preds = %53
  %72 = load %struct.hb_glyph_info_t**, %struct.hb_glyph_info_t*** %26, align 8
  %73 = icmp eq i8 %57, 14
  br i1 %73, label %74, label %108

74:                                               ; preds = %71
  %75 = load %struct.hb_buffer_t**, %struct.hb_buffer_t*** %28, align 8
  %76 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %75, align 8
  %77 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %76, i64 0, i32 15
  %78 = load i32, i32* %77, align 8
  br label %79

79:                                               ; preds = %96, %74
  %80 = phi i32 [ %81, %96 ], [ %45, %74 ]
  %81 = add i32 %80, 1
  %82 = icmp ult i32 %81, %78
  br i1 %82, label %83, label %108

83:                                               ; preds = %79
  %84 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %72, align 8
  %85 = zext i32 %81 to i64
  %86 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %84, i64 %85, i32 4
  %87 = bitcast %union._hb_var_int_t* %86 to [4 x i8]*
  %88 = getelementptr inbounds [4 x i8], [4 x i8]* %87, i64 0, i64 2
  %89 = load i8, i8* %88, align 2
  %90 = icmp ne i8 %89, 0
  %91 = bitcast %union._hb_var_int_t* %86 to i16*
  %92 = load i16, i16* %91, align 4
  %93 = and i16 %92, 32
  %94 = icmp eq i16 %93, 0
  %95 = or i1 %90, %94
  br i1 %95, label %102, label %96

96:                                               ; preds = %83
  %97 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %84, i64 %85, i32 3
  %98 = bitcast %union._hb_var_int_t* %97 to i16*
  %99 = load i16, i16* %98, align 4
  %100 = and i16 %99, 16
  %101 = icmp eq i16 %100, 0
  br i1 %101, label %79, label %102

102:                                              ; preds = %96, %83
  %103 = and i16 %92, 31
  %104 = zext i16 %103 to i32
  %105 = shl i32 1, %104
  %106 = and i32 %105, 7168
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %70

108:                                              ; preds = %102, %71, %64, %59, %79
  %109 = icmp eq i32 %39, 0
  br i1 %109, label %110, label %33

110:                                              ; preds = %108, %40, %2, %4
  ret void
}

declare hidden void @_ZN11hb_buffer_t20unsafe_to_break_implEjj(%struct.hb_buffer_t*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN11hb_buffer_t7messageEP9hb_font_tPKcz(%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %0, i64 0, i32 24
  %6 = load i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)** %5, align 8
  %7 = icmp eq i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #5
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %11 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %9)
  %12 = call zeroext i1 @_ZN11hb_buffer_t12message_implEP9hb_font_tPKcP13__va_list_tag(%struct.hb_buffer_t* %0, %struct.hb_font_t* %1, i8* %2, %struct.__va_list_tag* nonnull %10) #5
  call void @llvm.va_end(i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #5
  br label %13

13:                                               ; preds = %3, %8
  %14 = phi i1 [ %12, %8 ], [ true, %3 ]
  ret i1 %14
}

declare hidden void @_Z33hb_syllabic_insert_dotted_circlesP9hb_font_tP11hb_buffer_tjji(%struct.hb_font_t*, %struct.hb_buffer_t*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

declare hidden zeroext i1 @_ZN11hb_buffer_t12message_implEP9hb_font_tPKcP13__va_list_tag(%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare hidden void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t*, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #6

declare hidden i8* @_Z18data_create_arabicPK18hb_ot_shape_plan_t(%struct.hb_ot_shape_plan_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

declare hidden void @_Z19data_destroy_arabicPv(i8*) local_unnamed_addr #3

declare hidden void @_Z37_hb_preprocess_text_vowel_constraintsPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t(%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*) local_unnamed_addr #3

declare hidden void @_Z23setup_masks_arabic_planPK19arabic_shape_plan_tP11hb_buffer_t11hb_script_t(%struct.arabic_shape_plan_t*, %struct.hb_buffer_t*, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN24hb_filter_iter_factory_tIZL18find_syllables_useP11hb_buffer_tEUlRK15hb_glyph_info_tE_R4$_12EclI13hb_zip_iter_tI14hb_iota_iter_tIjjE10hb_array_tIS2_EELPv0EEE16hb_filter_iter_tIT_S5_S7_XLDnEEESI_: argument 0"}
!5 = distinct !{!5, !"_ZN24hb_filter_iter_factory_tIZL18find_syllables_useP11hb_buffer_tEUlRK15hb_glyph_info_tE_R4$_12EclI13hb_zip_iter_tI14hb_iota_iter_tIjjE10hb_array_tIS2_EELPv0EEE16hb_filter_iter_tIT_S5_S7_XLDnEEESI_"}
!6 = distinct !{!6, !7, !"_ZorI13hb_zip_iter_tI14hb_iota_iter_tIjjE10hb_array_tI15hb_glyph_info_tEE24hb_filter_iter_factory_tIZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12ELPv0EEDTclcl10hb_forwardIT0_Efp0_Ecl10hb_forwardIT_Efp_EEEOSI_OSH_: argument 0"}
!7 = distinct !{!7, !"_ZorI13hb_zip_iter_tI14hb_iota_iter_tIjjE10hb_array_tI15hb_glyph_info_tEE24hb_filter_iter_factory_tIZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12ELPv0EEDTclcl10hb_forwardIT0_Efp0_Ecl10hb_forwardIT_Efp_EEEOSI_OSH_"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN24hb_filter_iter_factory_tIZL18find_syllables_useP11hb_buffer_tEUl9hb_pair_tIjRK15hb_glyph_info_tEE_R4$_17EclI16hb_filter_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE10hb_array_tIS3_EEZL18find_syllables_useS1_EUlS5_E_R4$_12LPv0EELSM_0EEESC_IT_S7_S9_XLDnEEESO_: argument 0"}
!10 = distinct !{!10, !"_ZN24hb_filter_iter_factory_tIZL18find_syllables_useP11hb_buffer_tEUl9hb_pair_tIjRK15hb_glyph_info_tEE_R4$_17EclI16hb_filter_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE10hb_array_tIS3_EEZL18find_syllables_useS1_EUlS5_E_R4$_12LPv0EELSM_0EEESC_IT_S7_S9_XLDnEEESO_"}
!11 = distinct !{!11, !12, !"_ZorI16hb_filter_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EE24hb_filter_iter_factory_tIZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17ELSF_0EEDTclcl10hb_forwardIT0_Efp0_Ecl10hb_forwardIT_Efp_EEEOSP_OSO_: argument 0"}
!12 = distinct !{!12, !"_ZorI16hb_filter_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EE24hb_filter_iter_factory_tIZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17ELSF_0EEDTclcl10hb_forwardIT0_Efp0_Ecl10hb_forwardIT_Efp_EEEOSP_OSO_"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!15 = distinct !{!15, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!16 = distinct !{!16, !17, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!17 = distinct !{!17, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!20 = distinct !{!20, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!21 = distinct !{!21, !22, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!22 = distinct !{!22, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!25 = distinct !{!25, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!26 = distinct !{!26, !27, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!27 = distinct !{!27, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!28 = !{!29, !31}
!29 = distinct !{!29, !30, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!30 = distinct !{!30, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!31 = distinct !{!31, !32, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!32 = distinct !{!32, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!33 = !{!34, !36}
!34 = distinct !{!34, !35, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!35 = distinct !{!35, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!36 = distinct !{!36, !37, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!37 = distinct !{!37, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!38 = !{!39, !41}
!39 = distinct !{!39, !40, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!40 = distinct !{!40, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!41 = distinct !{!41, !42, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!42 = distinct !{!42, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!43 = !{!44, !46}
!44 = distinct !{!44, !45, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!45 = distinct !{!45, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!46 = distinct !{!46, !47, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!47 = distinct !{!47, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!48 = !{!49, !51}
!49 = distinct !{!49, !50, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!50 = distinct !{!50, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!51 = distinct !{!51, !52, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!52 = distinct !{!52, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!53 = !{!54, !56}
!54 = distinct !{!54, !55, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!55 = distinct !{!55, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!56 = distinct !{!56, !57, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!57 = distinct !{!57, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!58 = !{!59, !61}
!59 = distinct !{!59, !60, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!60 = distinct !{!60, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!61 = distinct !{!61, !62, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!62 = distinct !{!62, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!63 = !{!64, !66, !68, !70}
!64 = distinct !{!64, !65, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!65 = distinct !{!65, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!66 = distinct !{!66, !67, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!67 = distinct !{!67, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!68 = distinct !{!68, !69, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!69 = distinct !{!69, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!70 = distinct !{!70, !71, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!71 = distinct !{!71, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!72 = !{!73, !75, !77, !79}
!73 = distinct !{!73, !74, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!74 = distinct !{!74, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!75 = distinct !{!75, !76, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!76 = distinct !{!76, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!77 = distinct !{!77, !78, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!78 = distinct !{!78, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!79 = distinct !{!79, !80, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!80 = distinct !{!80, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!81 = !{!82, !84}
!82 = distinct !{!82, !83, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!83 = distinct !{!83, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!84 = distinct !{!84, !85, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!85 = distinct !{!85, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!86 = !{!87, !89}
!87 = distinct !{!87, !88, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!88 = distinct !{!88, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!89 = distinct !{!89, !90, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!90 = distinct !{!90, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!91 = !{!92, !94}
!92 = distinct !{!92, !93, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!93 = distinct !{!93, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!94 = distinct !{!94, !95, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!95 = distinct !{!95, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!96 = !{!97, !99}
!97 = distinct !{!97, !98, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!98 = distinct !{!98, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!99 = distinct !{!99, !100, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!100 = distinct !{!100, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!101 = !{!102, !104, !106, !108}
!102 = distinct !{!102, !103, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!103 = distinct !{!103, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!104 = distinct !{!104, !105, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!105 = distinct !{!105, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!106 = distinct !{!106, !107, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!107 = distinct !{!107, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!108 = distinct !{!108, !109, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!109 = distinct !{!109, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!110 = !{!111, !113, !115, !117}
!111 = distinct !{!111, !112, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!112 = distinct !{!112, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!113 = distinct !{!113, !114, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!114 = distinct !{!114, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!115 = distinct !{!115, !116, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!116 = distinct !{!116, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!117 = distinct !{!117, !118, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!118 = distinct !{!118, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!119 = !{!120, !122}
!120 = distinct !{!120, !121, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!121 = distinct !{!121, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!122 = distinct !{!122, !123, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!123 = distinct !{!123, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!124 = !{!125, !127}
!125 = distinct !{!125, !126, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!126 = distinct !{!126, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!127 = distinct !{!127, !128, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!128 = distinct !{!128, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!129 = !{!130, !132, !134, !136}
!130 = distinct !{!130, !131, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!131 = distinct !{!131, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!132 = distinct !{!132, !133, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!133 = distinct !{!133, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!134 = distinct !{!134, !135, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!135 = distinct !{!135, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!136 = distinct !{!136, !137, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!137 = distinct !{!137, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!138 = !{!139, !141, !143, !145}
!139 = distinct !{!139, !140, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!140 = distinct !{!140, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!141 = distinct !{!141, !142, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!142 = distinct !{!142, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!143 = distinct !{!143, !144, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!144 = distinct !{!144, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!145 = distinct !{!145, !146, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!146 = distinct !{!146, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!147 = !{!148, !150}
!148 = distinct !{!148, !149, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!149 = distinct !{!149, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!150 = distinct !{!150, !151, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!151 = distinct !{!151, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!152 = !{!153, !155}
!153 = distinct !{!153, !154, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!154 = distinct !{!154, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!155 = distinct !{!155, !156, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!156 = distinct !{!156, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!157 = !{!158, !160, !162, !164}
!158 = distinct !{!158, !159, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!159 = distinct !{!159, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!160 = distinct !{!160, !161, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!161 = distinct !{!161, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!162 = distinct !{!162, !163, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!163 = distinct !{!163, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!164 = distinct !{!164, !165, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!165 = distinct !{!165, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!166 = !{!167, !169, !171, !173}
!167 = distinct !{!167, !168, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!168 = distinct !{!168, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!169 = distinct !{!169, !170, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!170 = distinct !{!170, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!171 = distinct !{!171, !172, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!172 = distinct !{!172, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!173 = distinct !{!173, !174, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!174 = distinct !{!174, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!175 = !{!176, !178}
!176 = distinct !{!176, !177, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!177 = distinct !{!177, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!178 = distinct !{!178, !179, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!179 = distinct !{!179, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!180 = !{!181, !183}
!181 = distinct !{!181, !182, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!182 = distinct !{!182, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!183 = distinct !{!183, !184, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!184 = distinct !{!184, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!185 = !{!186, !188, !190, !192}
!186 = distinct !{!186, !187, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!187 = distinct !{!187, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!188 = distinct !{!188, !189, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!189 = distinct !{!189, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!190 = distinct !{!190, !191, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!191 = distinct !{!191, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!192 = distinct !{!192, !193, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!193 = distinct !{!193, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!194 = !{!195, !197, !199, !201}
!195 = distinct !{!195, !196, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!196 = distinct !{!196, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!197 = distinct !{!197, !198, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!198 = distinct !{!198, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!199 = distinct !{!199, !200, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!200 = distinct !{!200, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!201 = distinct !{!201, !202, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!202 = distinct !{!202, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!203 = !{!204, !206}
!204 = distinct !{!204, !205, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!205 = distinct !{!205, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!206 = distinct !{!206, !207, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!207 = distinct !{!207, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!208 = !{!209, !211}
!209 = distinct !{!209, !210, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!210 = distinct !{!210, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!211 = distinct !{!211, !212, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!212 = distinct !{!212, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!213 = !{!214, !216}
!214 = distinct !{!214, !215, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!215 = distinct !{!215, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!216 = distinct !{!216, !217, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!217 = distinct !{!217, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!218 = !{!219, !221}
!219 = distinct !{!219, !220, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!220 = distinct !{!220, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!221 = distinct !{!221, !222, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!222 = distinct !{!222, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!223 = !{!224, !226, !228, !230}
!224 = distinct !{!224, !225, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!225 = distinct !{!225, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!226 = distinct !{!226, !227, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!227 = distinct !{!227, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!228 = distinct !{!228, !229, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!229 = distinct !{!229, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!230 = distinct !{!230, !231, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!231 = distinct !{!231, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!232 = !{!233, !235, !237, !239}
!233 = distinct !{!233, !234, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!234 = distinct !{!234, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!235 = distinct !{!235, !236, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!236 = distinct !{!236, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!237 = distinct !{!237, !238, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!238 = distinct !{!238, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!239 = distinct !{!239, !240, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!240 = distinct !{!240, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!241 = !{!242, !244}
!242 = distinct !{!242, !243, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!243 = distinct !{!243, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!244 = distinct !{!244, !245, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!245 = distinct !{!245, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!246 = !{!247, !249}
!247 = distinct !{!247, !248, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!248 = distinct !{!248, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!249 = distinct !{!249, !250, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!250 = distinct !{!250, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!251 = !{!252, !254}
!252 = distinct !{!252, !253, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!253 = distinct !{!253, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!254 = distinct !{!254, !255, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!255 = distinct !{!255, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!256 = !{!257, !259}
!257 = distinct !{!257, !258, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!258 = distinct !{!258, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!259 = distinct !{!259, !260, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!260 = distinct !{!260, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!261 = !{!262, !264, !266, !268}
!262 = distinct !{!262, !263, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!263 = distinct !{!263, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!264 = distinct !{!264, !265, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!265 = distinct !{!265, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!266 = distinct !{!266, !267, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!267 = distinct !{!267, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!268 = distinct !{!268, !269, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!269 = distinct !{!269, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!270 = !{!271, !273, !275, !277}
!271 = distinct !{!271, !272, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!272 = distinct !{!272, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!273 = distinct !{!273, !274, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!274 = distinct !{!274, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!275 = distinct !{!275, !276, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!276 = distinct !{!276, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!277 = distinct !{!277, !278, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!278 = distinct !{!278, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!279 = !{!280, !282}
!280 = distinct !{!280, !281, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!281 = distinct !{!281, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!282 = distinct !{!282, !283, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!283 = distinct !{!283, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!284 = !{!285, !287}
!285 = distinct !{!285, !286, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!286 = distinct !{!286, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!287 = distinct !{!287, !288, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!288 = distinct !{!288, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!289 = !{!290, !292}
!290 = distinct !{!290, !291, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!291 = distinct !{!291, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!292 = distinct !{!292, !293, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!293 = distinct !{!293, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!294 = !{!295, !297}
!295 = distinct !{!295, !296, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!296 = distinct !{!296, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!297 = distinct !{!297, !298, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!298 = distinct !{!298, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!299 = !{!300, !302, !304, !306}
!300 = distinct !{!300, !301, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!301 = distinct !{!301, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!302 = distinct !{!302, !303, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!303 = distinct !{!303, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!304 = distinct !{!304, !305, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!305 = distinct !{!305, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!306 = distinct !{!306, !307, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!307 = distinct !{!307, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!308 = !{!309, !311, !313, !315}
!309 = distinct !{!309, !310, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!310 = distinct !{!310, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!311 = distinct !{!311, !312, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!312 = distinct !{!312, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!313 = distinct !{!313, !314, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!314 = distinct !{!314, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!315 = distinct !{!315, !316, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!316 = distinct !{!316, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!317 = !{!318, !320}
!318 = distinct !{!318, !319, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!319 = distinct !{!319, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!320 = distinct !{!320, !321, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!321 = distinct !{!321, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!322 = !{!323, !325}
!323 = distinct !{!323, !324, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!324 = distinct !{!324, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!325 = distinct !{!325, !326, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!326 = distinct !{!326, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!327 = !{!328, !330}
!328 = distinct !{!328, !329, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!329 = distinct !{!329, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!330 = distinct !{!330, !331, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!331 = distinct !{!331, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!332 = !{!333, !335}
!333 = distinct !{!333, !334, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!334 = distinct !{!334, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!335 = distinct !{!335, !336, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!336 = distinct !{!336, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!337 = !{!338, !340, !342, !344}
!338 = distinct !{!338, !339, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!339 = distinct !{!339, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!340 = distinct !{!340, !341, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!341 = distinct !{!341, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!342 = distinct !{!342, !343, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!343 = distinct !{!343, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!344 = distinct !{!344, !345, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!345 = distinct !{!345, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!346 = !{!347, !349, !351, !353}
!347 = distinct !{!347, !348, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!348 = distinct !{!348, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!349 = distinct !{!349, !350, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!350 = distinct !{!350, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!351 = distinct !{!351, !352, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!352 = distinct !{!352, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!353 = distinct !{!353, !354, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!354 = distinct !{!354, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!355 = !{!356, !358}
!356 = distinct !{!356, !357, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!357 = distinct !{!357, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!358 = distinct !{!358, !359, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!359 = distinct !{!359, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!360 = !{!361, !363}
!361 = distinct !{!361, !362, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!362 = distinct !{!362, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!363 = distinct !{!363, !364, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!364 = distinct !{!364, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!365 = !{!366, !368}
!366 = distinct !{!366, !367, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!367 = distinct !{!367, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!368 = distinct !{!368, !369, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!369 = distinct !{!369, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!370 = !{!371, !373}
!371 = distinct !{!371, !372, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!372 = distinct !{!372, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!373 = distinct !{!373, !374, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!374 = distinct !{!374, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!375 = !{!376, !378, !380, !382}
!376 = distinct !{!376, !377, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!377 = distinct !{!377, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!378 = distinct !{!378, !379, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!379 = distinct !{!379, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!380 = distinct !{!380, !381, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!381 = distinct !{!381, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!382 = distinct !{!382, !383, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!383 = distinct !{!383, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!384 = !{!385, !387, !389, !391}
!385 = distinct !{!385, !386, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!386 = distinct !{!386, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!387 = distinct !{!387, !388, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!388 = distinct !{!388, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!389 = distinct !{!389, !390, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!390 = distinct !{!390, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!391 = distinct !{!391, !392, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!392 = distinct !{!392, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!393 = !{!394, !396}
!394 = distinct !{!394, !395, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!395 = distinct !{!395, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!396 = distinct !{!396, !397, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!397 = distinct !{!397, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!398 = !{!399, !401}
!399 = distinct !{!399, !400, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!400 = distinct !{!400, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!401 = distinct !{!401, !402, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!402 = distinct !{!402, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!403 = !{!404, !406}
!404 = distinct !{!404, !405, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!405 = distinct !{!405, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!406 = distinct !{!406, !407, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!407 = distinct !{!407, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!408 = !{!409, !411}
!409 = distinct !{!409, !410, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!410 = distinct !{!410, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!411 = distinct !{!411, !412, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!412 = distinct !{!412, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!413 = !{!414, !416, !418, !420}
!414 = distinct !{!414, !415, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!415 = distinct !{!415, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!416 = distinct !{!416, !417, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!417 = distinct !{!417, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!418 = distinct !{!418, !419, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!419 = distinct !{!419, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!420 = distinct !{!420, !421, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!421 = distinct !{!421, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!422 = !{!423, !425, !427, !429}
!423 = distinct !{!423, !424, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!424 = distinct !{!424, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!425 = distinct !{!425, !426, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!426 = distinct !{!426, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!427 = distinct !{!427, !428, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!428 = distinct !{!428, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!429 = distinct !{!429, !430, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!430 = distinct !{!430, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!431 = !{!432, !434}
!432 = distinct !{!432, !433, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!433 = distinct !{!433, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!434 = distinct !{!434, !435, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!435 = distinct !{!435, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!436 = !{!437, !439}
!437 = distinct !{!437, !438, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!438 = distinct !{!438, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!439 = distinct !{!439, !440, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!440 = distinct !{!440, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!441 = !{!442, !444}
!442 = distinct !{!442, !443, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!443 = distinct !{!443, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!444 = distinct !{!444, !445, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!445 = distinct !{!445, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!446 = !{!447, !449}
!447 = distinct !{!447, !448, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!448 = distinct !{!448, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!449 = distinct !{!449, !450, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!450 = distinct !{!450, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!451 = !{!452, !454, !456, !458}
!452 = distinct !{!452, !453, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!453 = distinct !{!453, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!454 = distinct !{!454, !455, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!455 = distinct !{!455, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!456 = distinct !{!456, !457, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!457 = distinct !{!457, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!458 = distinct !{!458, !459, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!459 = distinct !{!459, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!460 = !{!461, !463, !465, !467}
!461 = distinct !{!461, !462, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!462 = distinct !{!462, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!463 = distinct !{!463, !464, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!464 = distinct !{!464, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!465 = distinct !{!465, !466, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!466 = distinct !{!466, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!467 = distinct !{!467, !468, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!468 = distinct !{!468, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!469 = !{!470, !472}
!470 = distinct !{!470, !471, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!471 = distinct !{!471, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!472 = distinct !{!472, !473, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!473 = distinct !{!473, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!474 = !{!475, !477}
!475 = distinct !{!475, !476, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!476 = distinct !{!476, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!477 = distinct !{!477, !478, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!478 = distinct !{!478, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!479 = !{!480, !482}
!480 = distinct !{!480, !481, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!481 = distinct !{!481, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!482 = distinct !{!482, !483, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!483 = distinct !{!483, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!484 = !{!485, !487}
!485 = distinct !{!485, !486, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!486 = distinct !{!486, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!487 = distinct !{!487, !488, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!488 = distinct !{!488, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!489 = !{!490, !492, !494, !496}
!490 = distinct !{!490, !491, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!491 = distinct !{!491, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!492 = distinct !{!492, !493, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!493 = distinct !{!493, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!494 = distinct !{!494, !495, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!495 = distinct !{!495, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!496 = distinct !{!496, !497, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!497 = distinct !{!497, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!498 = !{!499, !501, !503, !505}
!499 = distinct !{!499, !500, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!500 = distinct !{!500, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!501 = distinct !{!501, !502, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!502 = distinct !{!502, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!503 = distinct !{!503, !504, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!504 = distinct !{!504, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!505 = distinct !{!505, !506, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!506 = distinct !{!506, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!507 = !{!508, !510}
!508 = distinct !{!508, !509, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!509 = distinct !{!509, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!510 = distinct !{!510, !511, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!511 = distinct !{!511, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!512 = !{!513, !515}
!513 = distinct !{!513, !514, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!514 = distinct !{!514, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!515 = distinct !{!515, !516, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!516 = distinct !{!516, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!517 = !{!518, !520}
!518 = distinct !{!518, !519, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!519 = distinct !{!519, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!520 = distinct !{!520, !521, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!521 = distinct !{!521, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!522 = !{!523, !525}
!523 = distinct !{!523, !524, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!524 = distinct !{!524, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!525 = distinct !{!525, !526, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!526 = distinct !{!526, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!527 = !{!528, !530, !532, !534}
!528 = distinct !{!528, !529, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!529 = distinct !{!529, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!530 = distinct !{!530, !531, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!531 = distinct !{!531, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!532 = distinct !{!532, !533, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!533 = distinct !{!533, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!534 = distinct !{!534, !535, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!535 = distinct !{!535, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!536 = !{!537, !539, !541, !543}
!537 = distinct !{!537, !538, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!538 = distinct !{!538, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!539 = distinct !{!539, !540, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!540 = distinct !{!540, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!541 = distinct !{!541, !542, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!542 = distinct !{!542, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!543 = distinct !{!543, !544, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!544 = distinct !{!544, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!545 = !{!546, !548}
!546 = distinct !{!546, !547, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!547 = distinct !{!547, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!548 = distinct !{!548, !549, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!549 = distinct !{!549, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!550 = !{!551, !553}
!551 = distinct !{!551, !552, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!552 = distinct !{!552, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!553 = distinct !{!553, !554, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!554 = distinct !{!554, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!555 = !{!556, !558, !560, !562}
!556 = distinct !{!556, !557, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!557 = distinct !{!557, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!558 = distinct !{!558, !559, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!559 = distinct !{!559, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!560 = distinct !{!560, !561, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!561 = distinct !{!561, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!562 = distinct !{!562, !563, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!563 = distinct !{!563, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!564 = !{!565, !567, !569, !571}
!565 = distinct !{!565, !566, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!566 = distinct !{!566, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!567 = distinct !{!567, !568, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!568 = distinct !{!568, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!569 = distinct !{!569, !570, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev: argument 0"}
!570 = distinct !{!570, !"_ZNK15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEEE8__item__Ev"}
!571 = distinct !{!571, !572, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv: argument 0"}
!572 = distinct !{!572, !"_ZN9hb_iter_tI15machine_index_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS4_IS1_IS3_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS6_E_R4$_12LPv0EEZL18find_syllables_useSA_EUl9hb_pair_tIjSC_EE_R4$_17LSG_0EEEESI_IjSI_IjRS6_EEEdeEv"}
!573 = !{!574, !576}
!574 = distinct !{!574, !575, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!575 = distinct !{!575, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!576 = distinct !{!576, !577, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!577 = distinct !{!577, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!578 = !{!579, !581}
!579 = distinct !{!579, !580, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!580 = distinct !{!580, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!581 = distinct !{!581, !582, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!582 = distinct !{!582, !"_ZNK9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!583 = !{!584, !586}
!584 = distinct !{!584, !585, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev: argument 0"}
!585 = distinct !{!585, !"_ZNK13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS2_IS_IS1_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS4_E_R4$_12LPv0EEZL18find_syllables_useS8_EUl9hb_pair_tIjSA_EE_R4$_17LSE_0EEE8__item__Ev"}
!586 = distinct !{!586, !587, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv: argument 0"}
!587 = distinct !{!587, !"_ZN9hb_iter_tI13hb_zip_iter_tI14hb_iota_iter_tIjjE16hb_filter_iter_tIS3_IS0_IS2_10hb_array_tI15hb_glyph_info_tEEZL18find_syllables_useP11hb_buffer_tEUlRKS5_E_R4$_12LPv0EEZL18find_syllables_useS9_EUl9hb_pair_tIjSB_EE_R4$_17LSF_0EEESH_IjSH_IjRS5_EEEdeEv"}
!588 = distinct !{!588, !589}
!589 = !{!"llvm.loop.unroll.disable"}
!590 = distinct !{!590, !589}
!591 = distinct !{!591, !589}
