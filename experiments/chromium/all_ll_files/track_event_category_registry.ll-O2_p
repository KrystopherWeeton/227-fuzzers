; ModuleID = '../../third_party/perfetto/src/tracing/track_event_category_registry.cc'
source_filename = "../../third_party/perfetto/src/tracing/track_event_category_registry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.perfetto::Category" = type <{ i8*, i8*, %"struct.std::__1::array", %"struct.std::__1::array.0", [4 x i8] }>
%"struct.std::__1::array" = type { [4 x i8*] }
%"struct.std::__1::array.0" = type { [4 x i8] }
%"class.perfetto::DynamicCategory" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.perfetto::internal::TrackEventCategoryRegistry" = type { %"struct.perfetto::Category"*, i64, %"struct.std::__1::atomic"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }

$_ZN8perfetto8Category16ComputeNameSizesEPKc = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto8Category19FromDynamicCategoryEPKc(%"struct.perfetto::Category"* noalias nocapture sret, i8*) local_unnamed_addr #0 align 2 {
  br label %3

3:                                                ; preds = %13, %2
  %4 = phi i8* [ %14, %13 ], [ %1, %2 ]
  %5 = phi i32 [ %15, %13 ], [ 0, %2 ]
  br label %6

6:                                                ; preds = %16, %3
  %7 = phi i8* [ %17, %16 ], [ %4, %3 ]
  %8 = load i8, i8* %7, align 1
  switch i8 %8, label %16 [
    i8 0, label %9
    i8 44, label %9
  ]

9:                                                ; preds = %6, %6
  %10 = icmp eq i8 %8, 0
  %11 = icmp eq i32 %5, 1
  %12 = or i1 %11, %10
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %7, i64 1
  %15 = add nuw nsw i32 %5, 1
  br label %3

16:                                               ; preds = %6
  %17 = getelementptr inbounds i8, i8* %7, i64 1
  br label %6

18:                                               ; preds = %9
  %19 = icmp eq i8* %7, %4
  %20 = xor i1 %11, true
  %21 = or i1 %19, %20
  br i1 %21, label %71, label %22

22:                                               ; preds = %18
  %23 = bitcast %"struct.perfetto::Category"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 -86, i64 56, i1 false)
  br label %24

24:                                               ; preds = %34, %22
  %25 = phi i8* [ %35, %34 ], [ %1, %22 ]
  %26 = phi i32 [ %36, %34 ], [ 0, %22 ]
  br label %27

27:                                               ; preds = %37, %24
  %28 = phi i8* [ %38, %37 ], [ %25, %24 ]
  %29 = load i8, i8* %28, align 1, !noalias !2
  switch i8 %29, label %37 [
    i8 0, label %30
    i8 44, label %30
  ]

30:                                               ; preds = %27, %27
  %31 = icmp eq i8 %29, 0
  %32 = icmp eq i32 %26, 1
  %33 = or i1 %32, %31
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds i8, i8* %28, i64 1
  %36 = add nuw nsw i32 %26, 1
  br label %24

37:                                               ; preds = %27
  %38 = getelementptr inbounds i8, i8* %28, i64 1
  br label %27

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"struct.perfetto::Category", %"struct.perfetto::Category"* %0, i64 0, i32 0
  %41 = icmp eq i8* %28, %25
  %42 = xor i1 %32, true
  %43 = or i1 %41, %42
  br i1 %43, label %64, label %44

44:                                               ; preds = %39, %54
  %45 = phi i8* [ %55, %54 ], [ %1, %39 ]
  %46 = phi i32 [ %56, %54 ], [ 0, %39 ]
  br label %47

47:                                               ; preds = %57, %44
  %48 = phi i8* [ %58, %57 ], [ %45, %44 ]
  %49 = load i8, i8* %48, align 1, !noalias !2
  switch i8 %49, label %57 [
    i8 0, label %50
    i8 44, label %50
  ]

50:                                               ; preds = %47, %47
  %51 = icmp eq i8 %49, 0
  %52 = icmp eq i32 %46, 4
  %53 = or i1 %52, %51
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds i8, i8* %48, i64 1
  %56 = add nuw nsw i32 %46, 1
  br label %44

57:                                               ; preds = %47
  %58 = getelementptr inbounds i8, i8* %48, i64 1
  br label %47

59:                                               ; preds = %50
  %60 = icmp eq i8* %48, %45
  %61 = xor i1 %52, true
  %62 = or i1 %60, %61
  %63 = select i1 %62, i8* %1, i8* null
  br label %64

64:                                               ; preds = %39, %59
  %65 = phi i8* [ %63, %59 ], [ null, %39 ]
  store i8* %65, i8** %40, align 8, !alias.scope !2
  %66 = getelementptr inbounds %"struct.perfetto::Category", %"struct.perfetto::Category"* %0, i64 0, i32 1
  %67 = bitcast i8** %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 40, i1 false) #3, !alias.scope !2
  %68 = tail call i32 @_ZN8perfetto8Category16ComputeNameSizesEPKc(i8* %1) #3, !noalias !2
  %69 = getelementptr inbounds %"struct.perfetto::Category", %"struct.perfetto::Category"* %0, i64 0, i32 3, i32 0
  %70 = bitcast [4 x i8]* %69 to i32*
  store i32 %68, i32* %70, align 8, !alias.scope !2
  br label %99

71:                                               ; preds = %18, %81
  %72 = phi i8* [ %82, %81 ], [ %1, %18 ]
  %73 = phi i32 [ %83, %81 ], [ 0, %18 ]
  br label %74

74:                                               ; preds = %84, %71
  %75 = phi i8* [ %85, %84 ], [ %72, %71 ]
  %76 = load i8, i8* %75, align 1
  switch i8 %76, label %84 [
    i8 0, label %77
    i8 44, label %77
  ]

77:                                               ; preds = %74, %74
  %78 = icmp eq i8 %76, 0
  %79 = icmp eq i32 %73, 1
  %80 = or i1 %79, %78
  br i1 %80, label %86, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds i8, i8* %75, i64 1
  %83 = add nuw nsw i32 %73, 1
  br label %71

84:                                               ; preds = %74
  %85 = getelementptr inbounds i8, i8* %75, i64 1
  br label %74

86:                                               ; preds = %77
  %87 = icmp eq i8* %75, %72
  %88 = xor i1 %79, true
  %89 = or i1 %87, %88
  %90 = select i1 %89, i8* %1, i8* null
  %91 = tail call i32 @_ZN8perfetto8Category16ComputeNameSizesEPKc(i8* %1) #3
  %92 = getelementptr inbounds %"struct.perfetto::Category", %"struct.perfetto::Category"* %0, i64 0, i32 0
  store i8* %90, i8** %92, align 8
  %93 = getelementptr inbounds %"struct.perfetto::Category", %"struct.perfetto::Category"* %0, i64 0, i32 1
  %94 = bitcast i8** %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 40, i1 false)
  %95 = getelementptr inbounds %"struct.perfetto::Category", %"struct.perfetto::Category"* %0, i64 0, i32 3
  %96 = bitcast %"struct.std::__1::array.0"* %95 to i32*
  store i32 %91, i32* %96, align 8
  %97 = getelementptr inbounds %"struct.perfetto::Category", %"struct.perfetto::Category"* %0, i64 0, i32 4
  %98 = bitcast [4 x i8]* %97 to i32*
  store i32 -1431655766, i32* %98, align 4
  br label %99

99:                                               ; preds = %86, %64
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto8Category19FromDynamicCategoryERKNS_15DynamicCategoryE(%"struct.perfetto::Category"* noalias nocapture sret, %"class.perfetto::DynamicCategory"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.perfetto::DynamicCategory"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.perfetto::DynamicCategory", %"class.perfetto::DynamicCategory"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.perfetto::DynamicCategory"* %1 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  tail call void @_ZN8perfetto8Category19FromDynamicCategoryEPKc(%"struct.perfetto::Category"* sret %0, i8* %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto8internal12NullCategoryERKNS_15DynamicCategoryE(%"class.perfetto::DynamicCategory"* noalias nocapture sret, %"class.perfetto::DynamicCategory"* nocapture readnone dereferenceable(24)) local_unnamed_addr #0 {
  %3 = bitcast %"class.perfetto::DynamicCategory"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK8perfetto8internal26TrackEventCategoryRegistry25EnableCategoryForInstanceEmj(%"class.perfetto::internal::TrackEventCategoryRegistry"* nocapture readonly, i64, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.perfetto::internal::TrackEventCategoryRegistry", %"class.perfetto::internal::TrackEventCategoryRegistry"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::atomic"*, %"struct.std::__1::atomic"** %4, align 8
  %6 = shl i32 1, %2
  %7 = trunc i32 %6 to i8
  %8 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %5, i64 %1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw or i8* %8, i8 %7 release
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK8perfetto8internal26TrackEventCategoryRegistry26DisableCategoryForInstanceEmj(%"class.perfetto::internal::TrackEventCategoryRegistry"* nocapture readonly, i64, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.perfetto::internal::TrackEventCategoryRegistry", %"class.perfetto::internal::TrackEventCategoryRegistry"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::atomic"*, %"struct.std::__1::atomic"** %4, align 8
  %6 = shl i32 1, %2
  %7 = trunc i32 %6 to i8
  %8 = xor i8 %7, -1
  %9 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %5, i64 %1, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw and i8* %9, i8 %8 release
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8perfetto8Category16ComputeNameSizesEPKc(i8*) local_unnamed_addr #0 comdat align 2 {
  br label %2

2:                                                ; preds = %5, %1
  %3 = phi i8* [ %6, %5 ], [ %0, %1 ]
  %4 = load i8, i8* %3, align 1
  switch i8 %4, label %5 [
    i8 0, label %7
    i8 44, label %7
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %3, i64 1
  br label %2

7:                                                ; preds = %2, %2
  %8 = ptrtoint i8* %3 to i64
  %9 = ptrtoint i8* %0 to i64
  %10 = sub i64 %8, %9
  br label %11

11:                                               ; preds = %21, %7
  %12 = phi i8* [ %22, %21 ], [ %0, %7 ]
  %13 = phi i32 [ %23, %21 ], [ 0, %7 ]
  br label %14

14:                                               ; preds = %24, %11
  %15 = phi i8* [ %25, %24 ], [ %12, %11 ]
  %16 = load i8, i8* %15, align 1
  switch i8 %16, label %24 [
    i8 0, label %17
    i8 44, label %17
  ]

17:                                               ; preds = %14, %14
  %18 = icmp eq i8 %16, 0
  %19 = icmp eq i32 %13, 1
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds i8, i8* %15, i64 1
  %23 = add nuw nsw i32 %13, 1
  br label %11

24:                                               ; preds = %14
  %25 = getelementptr inbounds i8, i8* %15, i64 1
  br label %14

26:                                               ; preds = %17
  %27 = trunc i64 %10 to i32
  %28 = ptrtoint i8* %15 to i64
  %29 = ptrtoint i8* %12 to i64
  %30 = sub i64 %28, %29
  br label %31

31:                                               ; preds = %41, %26
  %32 = phi i8* [ %42, %41 ], [ %0, %26 ]
  %33 = phi i32 [ %43, %41 ], [ 0, %26 ]
  br label %34

34:                                               ; preds = %44, %31
  %35 = phi i8* [ %45, %44 ], [ %32, %31 ]
  %36 = load i8, i8* %35, align 1
  switch i8 %36, label %44 [
    i8 0, label %37
    i8 44, label %37
  ]

37:                                               ; preds = %34, %34
  %38 = icmp eq i8 %36, 0
  %39 = icmp eq i32 %33, 2
  %40 = or i1 %39, %38
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds i8, i8* %35, i64 1
  %43 = add nuw nsw i32 %33, 1
  br label %31

44:                                               ; preds = %34
  %45 = getelementptr inbounds i8, i8* %35, i64 1
  br label %34

46:                                               ; preds = %37
  %47 = trunc i64 %30 to i32
  %48 = ptrtoint i8* %35 to i64
  %49 = ptrtoint i8* %32 to i64
  %50 = sub i64 %48, %49
  br label %51

51:                                               ; preds = %61, %46
  %52 = phi i8* [ %62, %61 ], [ %0, %46 ]
  %53 = phi i32 [ %63, %61 ], [ 0, %46 ]
  br label %54

54:                                               ; preds = %64, %51
  %55 = phi i8* [ %65, %64 ], [ %52, %51 ]
  %56 = load i8, i8* %55, align 1
  switch i8 %56, label %64 [
    i8 0, label %57
    i8 44, label %57
  ]

57:                                               ; preds = %54, %54
  %58 = icmp eq i8 %56, 0
  %59 = icmp eq i32 %53, 3
  %60 = or i1 %59, %58
  br i1 %60, label %66, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds i8, i8* %55, i64 1
  %63 = add nuw nsw i32 %53, 1
  br label %51

64:                                               ; preds = %54
  %65 = getelementptr inbounds i8, i8* %55, i64 1
  br label %54

66:                                               ; preds = %57
  %67 = trunc i64 %50 to i32
  %68 = ptrtoint i8* %55 to i64
  %69 = ptrtoint i8* %52 to i64
  %70 = sub i64 %68, %69
  %71 = trunc i64 %70 to i32
  %72 = shl i32 %71, 24
  %73 = select i1 %59, i32 %72, i32 0
  %74 = shl i32 %67, 16
  %75 = and i32 %74, 16711680
  %76 = select i1 %39, i32 %75, i32 0
  %77 = shl i32 %47, 8
  %78 = and i32 %77, 65280
  %79 = select i1 %19, i32 %78, i32 0
  %80 = and i32 %27, 255
  %81 = or i32 %79, %80
  %82 = or i32 %81, %76
  %83 = or i32 %82, %73
  ret i32 %83
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN8perfetto8Category5GroupEPKc: argument 0"}
!4 = distinct !{!4, !"_ZN8perfetto8Category5GroupEPKc"}
