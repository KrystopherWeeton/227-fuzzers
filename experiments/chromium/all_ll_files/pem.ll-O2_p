; ModuleID = '../../net/cert/pem.cc'
source_filename = "../../net/cert/pem.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::PEMTokenizer" = type { %"class.base::BasicStringPiece", i64, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::PEMTokenizer::PEMType"*, %"struct.net::PEMTokenizer::PEMType"*, %"class.std::__1::__compressed_pair.1" }
%"struct.net::PEMTokenizer::PEMType" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.net::PEMTokenizer::PEMType"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN3net12PEMTokenizer7PEMTypeENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

@_ZN12_GLOBAL__N_114kPEMBeginBlockE = internal constant [19 x i8] c"-----BEGIN %s-----\00", align 16
@_ZN12_GLOBAL__N_112kPEMEndBlockE = internal constant [17 x i8] c"-----END %s-----\00", align 16
@.str = private constant [12 x i8] c"-----BEGIN \00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"-----\0A\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"-----END \00", align 1

@_ZN3net12PEMTokenizerC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS3_12basic_stringIcS5_NS3_9allocatorIcEEEENSB_ISD_EEEE = hidden unnamed_addr alias void (%"class.net::PEMTokenizer"*, %"class.base::BasicStringPiece"*, %"class.std::__1::vector.6"*), void (%"class.net::PEMTokenizer"*, %"class.base::BasicStringPiece"*, %"class.std::__1::vector.6"*)* @_ZN3net12PEMTokenizerC2ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS3_12basic_stringIcS5_NS3_9allocatorIcEEEENSB_ISD_EEEE
@_ZN3net12PEMTokenizerD1Ev = hidden unnamed_addr alias void (%"class.net::PEMTokenizer"*), void (%"class.net::PEMTokenizer"*)* @_ZN3net12PEMTokenizerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12PEMTokenizerC2ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS3_12basic_stringIcS5_NS3_9allocatorIcEEEENSB_ISD_EEEE(%"class.net::PEMTokenizer"*, %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.std::__1::vector.6"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.net::PEMTokenizer"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #7
  %5 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 72, i1 false)
  tail call void @_ZN3net12PEMTokenizer4InitERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS3_12basic_stringIcS5_NS3_9allocatorIcEEEENSB_ISD_EEEE(%"class.net::PEMTokenizer"* %0, %"class.base::BasicStringPiece"* dereferenceable(16) %1, %"class.std::__1::vector.6"* dereferenceable(24) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12PEMTokenizer4InitERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS3_12basic_stringIcS5_NS3_9allocatorIcEEEENSB_ISD_EEEE(%"class.net::PEMTokenizer"*, %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.std::__1::vector.6"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.net::PEMTokenizer::PEMType", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.net::PEMTokenizer"* %0 to i8*
  %8 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 1
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp eq %"class.std::__1::basic_string"* %11, %13
  br i1 %14, label %40, label %15

15:                                               ; preds = %3
  %16 = bitcast %"struct.net::PEMTokenizer::PEMType"* %4 to i8*
  %17 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %4, i64 0, i32 0
  %18 = bitcast %"struct.net::PEMTokenizer::PEMType"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %21 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %4, i64 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %27 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %4, i64 0, i32 2
  %28 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  %32 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 3, i32 0, i32 1
  %33 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast %"struct.net::PEMTokenizer::PEMType"** %32 to i64*
  %39 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 3
  br label %41

40:                                               ; preds = %136, %3
  ret void

41:                                               ; preds = %15, %136
  %42 = phi %"class.std::__1::basic_string"* [ %11, %15 ], [ %137, %136 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %16) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 72, i1 false) #7
  %43 = icmp eq %"class.std::__1::basic_string"* %17, %42
  %44 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %43, label %57, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %50, i64 24, i1 false) #7
  br label %57

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %17, i8* %53, i64 %55) #7
  br label %57

57:                                               ; preds = %41, %49, %51
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #7
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  br label %66

64:                                               ; preds = %57
  %65 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  br label %66

66:                                               ; preds = %61, %64
  %67 = phi i8* [ %63, %61 ], [ %65, %64 ]
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZN12_GLOBAL__N_114kPEMBeginBlockE, i64 0, i64 0), i8* %67) #7
  %68 = load i8, i8* %23, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %71) #8
  br label %72

72:                                               ; preds = %70, %66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* nonnull align 8 %20, i64 24, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #7
  %73 = load i8, i8* %58, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  br label %80

78:                                               ; preds = %72
  %79 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  br label %80

80:                                               ; preds = %75, %78
  %81 = phi i8* [ %77, %75 ], [ %79, %78 ]
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN12_GLOBAL__N_112kPEMEndBlockE, i64 0, i64 0), i8* %81) #7
  %82 = load i8, i8* %29, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %85) #8
  br label %86

86:                                               ; preds = %84, %80
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* nonnull align 8 %26, i64 24, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #7
  %87 = load %"struct.net::PEMTokenizer::PEMType"*, %"struct.net::PEMTokenizer::PEMType"** %32, align 8
  %88 = load %"struct.net::PEMTokenizer::PEMType"*, %"struct.net::PEMTokenizer::PEMType"** %33, align 8
  %89 = icmp eq %"struct.net::PEMTokenizer::PEMType"* %87, %88
  br i1 %89, label %120, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %19, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %90
  %94 = bitcast %"struct.net::PEMTokenizer::PEMType"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* nonnull align 8 %16, i64 24, i1 false) #7
  br label %99

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %87, i64 0, i32 0
  %97 = load i8*, i8** %34, align 8
  %98 = load i64, i64* %35, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %96, i8* %97, i64 %98) #7
  br label %99

99:                                               ; preds = %95, %93
  %100 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %87, i64 0, i32 1
  %101 = load i8, i8* %23, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %99
  %104 = bitcast %"class.std::__1::basic_string"* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %25, i64 24, i1 false) #7
  br label %108

105:                                              ; preds = %99
  %106 = load i8*, i8** %24, align 8
  %107 = load i64, i64* %36, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %100, i8* %106, i64 %107) #7
  br label %108

108:                                              ; preds = %105, %103
  %109 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %87, i64 0, i32 2
  %110 = load i8, i8* %29, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %108
  %113 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %31, i64 24, i1 false) #7
  br label %117

114:                                              ; preds = %108
  %115 = load i8*, i8** %30, align 8
  %116 = load i64, i64* %37, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %109, i8* %115, i64 %116) #7
  br label %117

117:                                              ; preds = %114, %112
  %118 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %87, i64 1
  %119 = ptrtoint %"struct.net::PEMTokenizer::PEMType"* %118 to i64
  store i64 %119, i64* %38, align 8
  br label %121

120:                                              ; preds = %86
  call void @_ZNSt3__16vectorIN3net12PEMTokenizer7PEMTypeENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* %39, %"struct.net::PEMTokenizer::PEMType"* nonnull dereferenceable(72) %4) #7
  br label %121

121:                                              ; preds = %117, %120
  %122 = load i8, i8* %29, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %121
  %125 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %125) #8
  br label %126

126:                                              ; preds = %124, %121
  %127 = load i8, i8* %23, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %126
  %130 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %130) #8
  br label %131

131:                                              ; preds = %129, %126
  %132 = load i8, i8* %19, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %136

134:                                              ; preds = %131
  %135 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %135) #8
  br label %136

136:                                              ; preds = %131, %134
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %16) #7
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 1
  %138 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %139 = icmp eq %"class.std::__1::basic_string"* %137, %138
  br i1 %139, label %40, label %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12PEMTokenizerD2Ev(%"class.net::PEMTokenizer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 4
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #8
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %13 = load %"struct.net::PEMTokenizer::PEMType"*, %"struct.net::PEMTokenizer::PEMType"** %12, align 8
  %14 = icmp eq %"struct.net::PEMTokenizer::PEMType"* %13, null
  br i1 %14, label %55, label %15

15:                                               ; preds = %10
  %16 = bitcast %"struct.net::PEMTokenizer::PEMType"* %13 to i8*
  %17 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = load %"struct.net::PEMTokenizer::PEMType"*, %"struct.net::PEMTokenizer::PEMType"** %17, align 8
  %19 = icmp eq %"struct.net::PEMTokenizer::PEMType"* %18, %13
  br i1 %19, label %53, label %20

20:                                               ; preds = %15, %48
  %21 = phi %"struct.net::PEMTokenizer::PEMType"* [ %22, %48 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %21, i64 -1
  %23 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %21, i64 -1, i32 2
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #8
  br label %31

31:                                               ; preds = %28, %20
  %32 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %21, i64 -1, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #8
  br label %40

40:                                               ; preds = %37, %31
  %41 = bitcast %"struct.net::PEMTokenizer::PEMType"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #8
  br label %48

48:                                               ; preds = %45, %40
  %49 = icmp eq %"struct.net::PEMTokenizer::PEMType"* %22, %13
  br i1 %49, label %50, label %20

50:                                               ; preds = %48
  %51 = bitcast %"class.std::__1::vector"* %11 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %50, %15
  %54 = phi i8* [ %52, %50 ], [ %16, %15 ]
  store %"struct.net::PEMTokenizer::PEMType"* %13, %"struct.net::PEMTokenizer::PEMType"** %17, align 8
  tail call void @_ZdlPv(i8* %54) #8
  br label %55

55:                                               ; preds = %10, %53
  %56 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 2
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  tail call void @_ZdlPv(i8* %63) #8
  br label %64

64:                                               ; preds = %55, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net12PEMTokenizer7GetNextEv(%"class.net::PEMTokenizer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::BasicStringPiece", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, -1
  br i1 %6, label %162, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 3, i32 0, i32 1
  %13 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 2
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %17 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 0
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %0, i64 0, i32 4
  br label %26

26:                                               ; preds = %7, %159
  %27 = phi i64 [ %5, %7 ], [ %160, %159 ]
  %28 = load i8*, i8** %9, align 8
  %29 = load i64, i64* %10, align 8
  %30 = call i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %28, i64 %29, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i64 11, i64 %27) #7
  store i64 %30, i64* %4, align 8
  %31 = icmp eq i64 %30, -1
  br i1 %31, label %162, label %32

32:                                               ; preds = %26
  %33 = load %"struct.net::PEMTokenizer::PEMType"*, %"struct.net::PEMTokenizer::PEMType"** %11, align 8
  %34 = load %"struct.net::PEMTokenizer::PEMType"*, %"struct.net::PEMTokenizer::PEMType"** %12, align 8
  %35 = icmp eq %"struct.net::PEMTokenizer::PEMType"* %33, %34
  br i1 %35, label %156, label %36

36:                                               ; preds = %32, %149
  %37 = phi i64 [ %150, %149 ], [ %30, %32 ]
  %38 = phi %"struct.net::PEMTokenizer::PEMType"* [ %146, %149 ], [ %33, %32 ]
  %39 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* %8, i64 %37, i64 -1)
  %40 = extractvalue { i8*, i64 } %39, 0
  %41 = extractvalue { i8*, i64 } %39, 1
  %42 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %38, i64 0, i32 1
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %50 = select i1 %46, i8* %48, i8* %49
  %51 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %38, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %45 to i64
  %54 = select i1 %46, i64 %52, i64 %53
  %55 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %40, i64 %41, i8* %50, i64 %54, i32 0) #7
  br i1 %55, label %56, label %145

56:                                               ; preds = %36
  %57 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %38, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %66 = select i1 %62, i8* %64, i8* %65
  %67 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %61 to i64
  %70 = select i1 %62, i64 %68, i64 %69
  %71 = load i64, i64* %4, align 8
  %72 = load i8*, i8** %9, align 8
  %73 = load i64, i64* %10, align 8
  %74 = call i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %72, i64 %73, i8* %66, i64 %70, i64 %71) #7
  %75 = icmp eq i64 %74, -1
  br i1 %75, label %76, label %77

76:                                               ; preds = %56
  store i64 -1, i64* %4, align 8
  br label %162

77:                                               ; preds = %56
  %78 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i64, i64* %4, align 8
  %81 = load i8, i8* %79, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = load i64, i64* %57, align 8
  br label %87

85:                                               ; preds = %77
  %86 = zext i8 %81 to i64
  br label %87

87:                                               ; preds = %83, %85
  %88 = phi i64 [ %84, %83 ], [ %86, %85 ]
  %89 = add i64 %88, %80
  %90 = load i8, i8* %60, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  %93 = load i64, i64* %67, align 8
  br label %96

94:                                               ; preds = %87
  %95 = zext i8 %90 to i64
  br label %96

96:                                               ; preds = %92, %94
  %97 = phi i64 [ %93, %92 ], [ %95, %94 ]
  %98 = add i64 %97, %74
  store i64 %98, i64* %4, align 8
  %99 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %38, i64 0, i32 0
  %100 = icmp eq %"class.std::__1::basic_string"* %13, %99
  br i1 %100, label %127, label %101

101:                                              ; preds = %96
  %102 = load i8, i8* %15, align 1
  %103 = icmp slt i8 %102, 0
  %104 = bitcast %"struct.net::PEMTokenizer::PEMType"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %103, label %117, label %108

108:                                              ; preds = %101
  br i1 %107, label %111, label %109

109:                                              ; preds = %108
  %110 = bitcast %"struct.net::PEMTokenizer::PEMType"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %110, i64 24, i1 false) #7
  br label %127

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %13, i8* %113, i64 %115) #7
  br label %127

117:                                              ; preds = %101
  %118 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  %120 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"struct.net::PEMTokenizer::PEMType"* %38 to i8*
  %123 = zext i8 %106 to i64
  %124 = select i1 %107, i8* %119, i8* %122
  %125 = select i1 %107, i64 %121, i64 %123
  %126 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %13, i8* %124, i64 %125) #7
  br label %127

127:                                              ; preds = %96, %109, %111, %117
  %128 = sub i64 %74, %89
  %129 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* %8, i64 %89, i64 %128)
  %130 = extractvalue { i8*, i64 } %129, 0
  %131 = extractvalue { i8*, i64 } %129, 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #7
  call void @_ZN4base23CollapseWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.std::__1::basic_string"* nonnull sret %3, i8* %130, i64 %131, i1 zeroext true) #7
  %132 = load i8, i8* %21, align 1
  %133 = icmp slt i8 %132, 0
  %134 = load i8*, i8** %22, align 8
  %135 = select i1 %133, i8* %134, i8* %18
  store i8* %135, i8** %19, align 8
  %136 = load i64, i64* %24, align 8
  %137 = zext i8 %132 to i64
  %138 = select i1 %133, i64 %136, i64 %137
  store i64 %138, i64* %23, align 8
  %139 = call zeroext i1 @_ZN4base12Base64DecodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %2, %"class.std::__1::basic_string"* %25) #7
  %140 = load i8, i8* %21, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %127
  %143 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %143) #8
  br label %144

144:                                              ; preds = %127, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #7
  br i1 %139, label %162, label %151

145:                                              ; preds = %36
  %146 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %38, i64 1
  %147 = load %"struct.net::PEMTokenizer::PEMType"*, %"struct.net::PEMTokenizer::PEMType"** %12, align 8
  %148 = icmp eq %"struct.net::PEMTokenizer::PEMType"* %146, %147
  br i1 %148, label %156, label %149

149:                                              ; preds = %145
  %150 = load i64, i64* %4, align 8
  br label %36

151:                                              ; preds = %144
  %152 = load %"struct.net::PEMTokenizer::PEMType"*, %"struct.net::PEMTokenizer::PEMType"** %12, align 8
  %153 = icmp eq %"struct.net::PEMTokenizer::PEMType"* %38, %152
  br i1 %153, label %156, label %154

154:                                              ; preds = %151
  %155 = load i64, i64* %4, align 8
  br label %159

156:                                              ; preds = %145, %32, %151
  %157 = load i64, i64* %4, align 8
  %158 = add i64 %157, 12
  store i64 %158, i64* %4, align 8
  br label %159

159:                                              ; preds = %154, %156
  %160 = phi i64 [ %155, %154 ], [ %158, %156 ]
  %161 = icmp eq i64 %160, -1
  br i1 %161, label %162, label %26

162:                                              ; preds = %26, %159, %144, %1, %76
  %163 = phi i1 [ false, %76 ], [ false, %1 ], [ false, %26 ], [ false, %159 ], [ true, %144 ]
  ret i1 %163
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

declare zeroext i1 @_ZN4base12Base64DecodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN4base23CollapseWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.std::__1::basic_string"* sret, i8*, i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9PEMEncodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %1, i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 %2, i64* %8, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #7
  call void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5, %"class.std::__1::basic_string"* nonnull %6) #7
  %12 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = load i64, i64* %11, align 8
  %17 = zext i8 %14 to i64
  %18 = select i1 %15, i64 %16, i64 %17
  %19 = add i64 %18, 63
  %20 = lshr i64 %19, 6
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #7
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i64 %27, i64 %28
  %30 = shl i64 %29, 1
  %31 = add nuw nsw i64 %20, 32
  %32 = add i64 %31, %30
  %33 = add i64 %32, %18
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %0, i64 %33) #7
  %34 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %4
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 11, i64* %40, align 8
  %41 = load i8*, i8** %39, align 8
  br label %43

42:                                               ; preds = %4
  store i8 11, i8* %35, align 1
  br label %43

43:                                               ; preds = %38, %42
  %44 = phi i8* [ %41, %38 ], [ %21, %42 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i64 11, i1 false) #7
  %45 = getelementptr inbounds i8, i8* %44, i64 11
  store i8 0, i8* %45, align 1
  %46 = load i8, i8* %23, align 1
  %47 = icmp slt i8 %46, 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = load i64, i64* %26, align 8
  %51 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %52 = zext i8 %46 to i64
  %53 = select i1 %47, i8* %49, i8* %51
  %54 = select i1 %47, i64 %50, i64 %52
  %55 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %53, i64 %54) #7
  %56 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #7
  %57 = icmp eq i64 %20, 0
  br i1 %57, label %58, label %74

58:                                               ; preds = %74, %43
  %59 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0)) #7
  %60 = load i8, i8* %23, align 1
  %61 = icmp slt i8 %60, 0
  %62 = load i8*, i8** %48, align 8
  %63 = load i64, i64* %26, align 8
  %64 = zext i8 %60 to i64
  %65 = select i1 %61, i8* %62, i8* %51
  %66 = select i1 %61, i64 %63, i64 %64
  %67 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %65, i64 %66) #7
  %68 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #7
  %69 = load i8, i8* %13, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %58
  %72 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %72) #8
  br label %73

73:                                               ; preds = %58, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #7
  ret void

74:                                               ; preds = %43, %74
  %75 = phi i64 [ %80, %74 ], [ 0, %43 ]
  %76 = phi i64 [ %79, %74 ], [ 0, %43 ]
  %77 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendERKS5_mm(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i64 %75, i64 64) #7
  %78 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #7
  %79 = add nuw nsw i64 %76, 1
  %80 = add nuw i64 %75, 64
  %81 = icmp eq i64 %79, %20
  br i1 %81, label %58, label %74
}

declare void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendERKS5_mm(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64) local_unnamed_addr #2

declare i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8*, i64, i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net12PEMTokenizer7PEMTypeENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"*, %"struct.net::PEMTokenizer::PEMType"* dereferenceable(72)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.net::PEMTokenizer::PEMType"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 256204778801521550
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #9
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.net::PEMTokenizer::PEMType"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 72
  %20 = icmp ult i64 %19, 128102389400760775
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 256204778801521550, %14 ]
  %28 = mul i64 %27, 72
  %29 = tail call i8* @_Znwm(i64 %28) #8
  %30 = bitcast i8* %29 to %"struct.net::PEMTokenizer::PEMType"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.net::PEMTokenizer::PEMType"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %33, i64 %32
  %36 = ptrtoint %"struct.net::PEMTokenizer::PEMType"* %35 to i64
  %37 = bitcast %"struct.net::PEMTokenizer::PEMType"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"struct.net::PEMTokenizer::PEMType"* %34 to i8*
  %43 = bitcast %"struct.net::PEMTokenizer::PEMType"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #7
  br label %50

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %34, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %45, i8* %47, i64 %49) #7
  br label %50

50:                                               ; preds = %44, %41
  %51 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %33, i64 %9, i32 1
  %52 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %1, i64 0, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  %59 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false) #7
  br label %65

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %51, i8* %62, i64 %64) #7
  br label %65

65:                                               ; preds = %60, %57
  %66 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %33, i64 %9, i32 2
  %67 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %1, i64 0, i32 2
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  %74 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 24, i1 false) #7
  br label %80

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %66, i8* %77, i64 %79) #7
  br label %80

80:                                               ; preds = %72, %75
  %81 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %34, i64 1
  %82 = ptrtoint %"struct.net::PEMTokenizer::PEMType"* %81 to i64
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %84 = load %"struct.net::PEMTokenizer::PEMType"*, %"struct.net::PEMTokenizer::PEMType"** %83, align 8
  %85 = load %"struct.net::PEMTokenizer::PEMType"*, %"struct.net::PEMTokenizer::PEMType"** %3, align 8
  %86 = icmp eq %"struct.net::PEMTokenizer::PEMType"* %85, %84
  br i1 %86, label %87, label %89

87:                                               ; preds = %80
  %88 = ptrtoint %"struct.net::PEMTokenizer::PEMType"* %84 to i64
  br label %108

89:                                               ; preds = %80, %89
  %90 = phi %"struct.net::PEMTokenizer::PEMType"* [ %92, %89 ], [ %34, %80 ]
  %91 = phi %"struct.net::PEMTokenizer::PEMType"* [ %93, %89 ], [ %85, %80 ]
  %92 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %90, i64 -1
  %93 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %91, i64 -1
  %94 = bitcast %"struct.net::PEMTokenizer::PEMType"* %92 to i8*
  %95 = bitcast %"struct.net::PEMTokenizer::PEMType"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 24, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #7
  %96 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %90, i64 -1, i32 1
  %97 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %91, i64 -1, i32 1
  %98 = bitcast %"class.std::__1::basic_string"* %96 to i8*
  %99 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 24, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #7
  %100 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %90, i64 -1, i32 2
  %101 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %91, i64 -1, i32 2
  %102 = bitcast %"class.std::__1::basic_string"* %100 to i8*
  %103 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 24, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 24, i1 false) #7
  %104 = icmp eq %"struct.net::PEMTokenizer::PEMType"* %93, %84
  br i1 %104, label %105, label %89

105:                                              ; preds = %89
  %106 = load i64, i64* %6, align 8
  %107 = load %"struct.net::PEMTokenizer::PEMType"*, %"struct.net::PEMTokenizer::PEMType"** %3, align 8
  br label %108

108:                                              ; preds = %87, %105
  %109 = phi %"struct.net::PEMTokenizer::PEMType"* [ %84, %87 ], [ %107, %105 ]
  %110 = phi %"struct.net::PEMTokenizer::PEMType"* [ %34, %87 ], [ %92, %105 ]
  %111 = phi i64 [ %88, %87 ], [ %106, %105 ]
  %112 = ptrtoint %"struct.net::PEMTokenizer::PEMType"* %110 to i64
  store i64 %112, i64* %6, align 8
  store i64 %82, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %113 = inttoptr i64 %111 to %"struct.net::PEMTokenizer::PEMType"*
  %114 = icmp eq %"struct.net::PEMTokenizer::PEMType"* %109, %113
  br i1 %114, label %145, label %115

115:                                              ; preds = %108, %143
  %116 = phi %"struct.net::PEMTokenizer::PEMType"* [ %117, %143 ], [ %109, %108 ]
  %117 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %116, i64 -1
  %118 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %116, i64 -1, i32 2
  %119 = bitcast %"class.std::__1::basic_string"* %118 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  tail call void @_ZdlPv(i8* %125) #8
  br label %126

126:                                              ; preds = %123, %115
  %127 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %116, i64 -1, i32 1
  %128 = bitcast %"class.std::__1::basic_string"* %127 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  tail call void @_ZdlPv(i8* %134) #8
  br label %135

135:                                              ; preds = %132, %126
  %136 = bitcast %"struct.net::PEMTokenizer::PEMType"* %117 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"struct.net::PEMTokenizer::PEMType", %"struct.net::PEMTokenizer::PEMType"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  tail call void @_ZdlPv(i8* %142) #8
  br label %143

143:                                              ; preds = %140, %135
  %144 = icmp eq %"struct.net::PEMTokenizer::PEMType"* %117, %113
  br i1 %144, label %145, label %115

145:                                              ; preds = %143, %108
  %146 = icmp eq i64 %111, 0
  br i1 %146, label %149, label %147

147:                                              ; preds = %145
  %148 = inttoptr i64 %111 to i8*
  tail call void @_ZdlPv(i8* %148) #8
  br label %149

149:                                              ; preds = %145, %147
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
