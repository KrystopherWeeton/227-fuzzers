; ModuleID = '../../third_party/blink/renderer/core/css/cssom/css_numeric_value.cc'
source_filename = "../../third_party/blink/renderer/core/css/cssom/css_numeric_value.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CSSParserTokenStream" = type <{ %"class.WTF::Vector.14", %"class.blink::CSSTokenizer"*, %"class.blink::CSSParserToken", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.WTF::Vector.14" = type { %"class.WTF::VectorBuffer.15" }
%"class.WTF::VectorBuffer.15" = type { %"class.WTF::VectorBufferBase.16", [768 x i8] }
%"class.WTF::VectorBufferBase.16" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSTokenizer" = type { %"class.blink::CSSTokenizerInputStream", %"class.WTF::Vector.4", %"class.WTF::Vector.9", i32, i32 }
%"class.blink::CSSTokenizerInputStream" = type { i32, i32, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector.4" = type { %"class.WTF::VectorBuffer.5" }
%"class.WTF::VectorBuffer.5" = type { %"class.WTF::VectorBufferBase.6", [32 x i8] }
%"class.WTF::VectorBufferBase.6" = type { i32*, i32, i32 }
%"class.WTF::Vector.9" = type { %"class.WTF::VectorBuffer.10" }
%"class.WTF::VectorBuffer.10" = type { %"class.WTF::VectorBufferBase.11" }
%"class.WTF::VectorBufferBase.11" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.297" }
%"struct.std::__1::atomic.297" = type { %"struct.std::__1::__atomic_base.298" }
%"struct.std::__1::__atomic_base.298" = type { %"struct.std::__1::__atomic_base.299" }
%"struct.std::__1::__atomic_base.299" = type { %"struct.std::__1::__cxx_atomic_impl.300" }
%"struct.std::__1::__cxx_atomic_impl.300" = type { %"struct.std::__1::__cxx_atomic_base_impl.301" }
%"struct.std::__1::__cxx_atomic_base_impl.301" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.207", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.223", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.241", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.248", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.187", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.106" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__cxx_atomic_impl.109" }
%"struct.std::__1::__cxx_atomic_impl.109" = type { %"struct.std::__1::__cxx_atomic_base_impl.110" }
%"struct.std::__1::__cxx_atomic_base_impl.110" = type { i64 }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.106" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.106" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.106" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.106" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.106" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.106" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::Worklist.159"* }
%"class.blink::Worklist.159" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.106" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.166", %"class.std::__1::__compressed_pair.173", %"class.std::__1::__compressed_pair.178", %"class.std::__1::__compressed_pair.180", [4 x i8] }>
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168", %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { i64 }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { float }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.190", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.199" }
%"class.WTF::Vector.199" = type { %"class.WTF::VectorBuffer.200" }
%"class.WTF::VectorBuffer.200" = type { %"class.WTF::VectorBufferBase.201" }
%"class.WTF::VectorBufferBase.201" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.215" }
%"class.WTF::VectorBuffer.215" = type { %"class.WTF::VectorBufferBase.216" }
%"class.WTF::VectorBufferBase.216" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.229" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.117"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.145"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.252" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.247 }
%class.scoped_refptr.247 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.248" = type { %"struct.std::__1::__atomic_base.249" }
%"struct.std::__1::__atomic_base.249" = type { %"struct.std::__1::__cxx_atomic_impl.250" }
%"struct.std::__1::__cxx_atomic_impl.250" = type { %"struct.std::__1::__cxx_atomic_base_impl.251" }
%"struct.std::__1::__cxx_atomic_base_impl.251" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.261" }
%"class.WTF::HashMap.261" = type { %"class.WTF::HashTable.262" }
%"class.WTF::HashTable.262" = type <{ %"struct.WTF::KeyValuePair.264"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.264" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::CSSNumericValue" = type { %"class.blink::CSSStyleValue", %"class.blink::CSSNumericValueType" }
%"class.blink::CSSStyleValue" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::CSSNumericValueType" = type { %"class.WTF::Vector", i32, i8, i32, [4 x i8] }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase", [28 x i8] }>
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1" = type { %"class.v8::TracedReference.2" }
%"class.v8::TracedReference.2" = type { %"class.v8::BasicTracedReference.3" }
%"class.v8::BasicTracedReference.3" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::CSSParserTokenRange" = type { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* }
%"class.blink::CSSUnitValue" = type <{ %"class.blink::CSSNumericValue", double, i32, [4 x i8] }>
%"class.blink::CSSMathExpressionNode" = type <{ i32 (...)**, i32, i8, i8, i8, i8 }>
%"class.blink::HeapVector" = type { %"class.WTF::Vector.39" }
%"class.WTF::Vector.39" = type { %"class.WTF::VectorBuffer.40" }
%"class.WTF::VectorBuffer.40" = type { %"class.WTF::VectorBufferBase.41" }
%"class.WTF::VectorBufferBase.41" = type { %"class.blink::Member.25"*, i32, i32 }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::CSSNumericValue"* }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::CSSMathSum" = type { %"class.blink::CSSMathVariadic" }
%"class.blink::CSSMathVariadic" = type { %"class.blink::CSSMathValue", %"class.blink::Member.35" }
%"class.blink::CSSMathValue" = type { %"class.blink::CSSNumericValue" }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::CSSNumericArray"* }
%"class.blink::CSSNumericArray" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapVector" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSMathExpressionNode"* }
%"class.blink::CSSMathMin" = type { %"class.blink::CSSMathVariadic" }
%"class.blink::CSSMathMax" = type { %"class.blink::CSSMathVariadic" }
%"class.blink::CSSMathInvert" = type { %"class.blink::CSSMathValue", %"class.blink::Member.25" }
%"class.blink::CSSMathProduct" = type { %"class.blink::CSSMathVariadic" }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSNumericLiteralValue" = type { %"class.blink::CSSPrimitiveValue", double }
%"class.blink::V8UnionCSSNumericValueOrDouble" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.25", double }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.WTF::StringAppend" = type { i8*, %"class.WTF::String" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.27 }
%union.anon.27 = type { %"struct.blink::CSSNumericSumValue" }
%"struct.blink::CSSNumericSumValue" = type { %"class.WTF::Vector.28" }
%"class.WTF::Vector.28" = type { %"class.WTF::VectorBuffer.29" }
%"class.WTF::VectorBuffer.29" = type { %"class.WTF::VectorBufferBase.30" }
%"class.WTF::VectorBufferBase.30" = type { %"struct.blink::CSSNumericSumValue::Term"*, i32, i32 }
%"struct.blink::CSSNumericSumValue::Term" = type { double, %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, i32 }
%"class.WTF::StringTypeAdapter" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.335" = type { %"class.WTF::StringTypeAdapter.336" }
%"class.WTF::StringTypeAdapter.336" = type { %"class.WTF::StringView" }
%"class.blink::CSSNumericType" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32 }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::HeapVector.48" = type { %"class.WTF::Vector.51" }
%"class.WTF::Vector.51" = type { %"class.WTF::VectorBuffer.52" }
%"class.WTF::VectorBuffer.52" = type { %"class.WTF::VectorBufferBase.53" }
%"class.WTF::VectorBufferBase.53" = type { %"class.blink::Member.54"*, i32, i32 }
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::V8UnionCSSNumericValueOrDouble"* }
%"struct.std::__1::plus" = type { i8 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.64, i32, i8, i8, [2 x i8] }>
%union.anon.64 = type { %"class.WTF::Vector.65" }
%"class.WTF::Vector.65" = type { %"class.WTF::VectorBuffer.66" }
%"class.WTF::VectorBuffer.66" = type { %"class.WTF::VectorBufferBase.67", [16 x i8] }
%"class.WTF::VectorBufferBase.67" = type { i8*, i32, i32 }
%"class.WTF::VectorBuffer" = type <{ %"class.WTF::VectorBufferBase", [28 x i8], [4 x i8] }>
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.270, %"class.blink::Member.271", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.270 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.271" = type { %"class.blink::MemberBase.272" }
%"class.blink::MemberBase.272" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.273" }
%"class.blink::Persistent.273" = type { %"class.blink::PersistentBase.274" }
%"class.blink::PersistentBase.274" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.281 }
%union.anon.281 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJEEENS_19CSSParserTokenRangeEv = comdat any

$_ZN5blink12CSSTokenizerD2Ev = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZN5blink13CSSMathInvert6CreateEPNS_15CSSNumericValueE = comdat any

$_ZN5blink15CSSNumericValueD2Ev = comdat any

$_ZN5blink15CSSNumericValueD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink15CSSNumericValue18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink13CSSStyleValue22ToCSSValueWithPropertyENS_13CSSPropertyIDE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZNK3WTF6VectorIiLj7ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm = comdat any

$_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_12CSSUnitValueEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15CSSNumericValueEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_15CSSNumericValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_12CSSUnitValueEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE6insertIS4_EEvjPKT_j = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [7 x i8] c"number\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"percent\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@__const._ZN5blink15CSSNumericValue5parseERKN3WTF6StringERNS_14ExceptionStateE.stream = private unnamed_addr constant %"class.blink::CSSParserTokenStream" <{ %"class.WTF::Vector.14" { %"class.WTF::VectorBuffer.15" { %"class.WTF::VectorBufferBase.16" { %"class.blink::CSSParserToken"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSParserToken"*), i32 -1431655766, i32 -1431655766 }, [768 x i8] c} }, %"class.blink::CSSTokenizer"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSTokenizer"*), %"class.blink::CSSParserToken" { i24 -5592406, i32 -1431655766, i8* inttoptr (i64 -6148914691236517206 to i8*), %union.anon { double 0xFFFFFFFFFFFFFFFF } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str.3 = private unnamed_addr constant [24 x i8] c"Invalid math expression\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"Invalid unit for conversion\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"Cannot convert to \00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"Invalid value for conversion\00", align 1
@.str.7 = private unnamed_addr constant [50 x i8] c"There were leftover terms that were not converted\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"Can't divide-by-zero\00", align 1
@_ZTVN5blink15CSSNumericValueE = hidden unnamed_addr constant { [22 x i8*] } { [22 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::CSSNumericValue"*)* @_ZN5blink15CSSNumericValueD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSNumericValue"*)* @_ZN5blink15CSSNumericValueD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)* @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::CSSNumericValue"*)* @_ZNK5blink15CSSNumericValue18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*, i32)* @_ZNK5blink13CSSStyleValue22ToCSSValueWithPropertyENS_13CSSPropertyIDE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CSSNumericValue"*)* @_ZNK5blink15CSSNumericValue8toStringEv to i8*), i8* bitcast (%"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)* @_ZN5blink15CSSNumericValue6NegateEv to i8*), i8* bitcast (%"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)* @_ZN5blink15CSSNumericValue6InvertEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.9 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.10 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserToken]\00", align 1
@_ZN5blink18g_static_eof_tokenE = external local_unnamed_addr constant %"class.blink::CSSParserToken"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.13 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.14 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.15 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink13CSSMathNegateE = external unnamed_addr constant { [23 x i8*] }, align 8
@_ZTVN5blink13CSSStyleValueE = external unnamed_addr constant { [15 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@_ZTVN5blink13CSSMathInvertE = external unnamed_addr constant { [23 x i8*] }, align 8
@_ZN5blink15CSSNumericValue18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.16 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.17 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.19 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_15CSSNumericValueEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [171 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::CSSNumericValue>, WTF::VectorTraits<blink::Member<blink::CSSNumericValue> > >]\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@.str.20 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.22 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.23 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.24 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink15CSSNumericValue11IsValidUnitENS_17CSSPrimitiveValue8UnitTypeE(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i32 %0, 18
  br i1 %2, label %19, label %3

3:                                                ; preds = %1
  %4 = add i32 %0, -1
  %5 = icmp ult i32 %4, 2
  %6 = add i32 %0, -3
  %7 = icmp ult i32 %6, 16
  %8 = or i1 %5, %7
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = add i32 %0, -19
  %11 = icmp ult i32 %10, 14
  br i1 %11, label %14, label %12

12:                                               ; preds = %14, %9
  %13 = icmp eq i32 %0, 30
  ret i1 %13

14:                                               ; preds = %9
  %15 = trunc i32 %10 to i16
  %16 = lshr i16 10239, %15
  %17 = and i16 %16, 1
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %12, label %19

19:                                               ; preds = %1, %3, %14
  %20 = phi i1 [ true, %14 ], [ false, %1 ], [ true, %3 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15CSSNumericValue12UnitFromNameERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %90, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %90, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %15, align 8
  %16 = load i32, i32* %10, align 4
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 1
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %19 = bitcast i8** %18 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %16, i32* %20, align 8
  %21 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [7 x i8]* nonnull dereferenceable(7) @.str)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  br i1 %21, label %90, label %22

22:                                               ; preds = %13
  %23 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #9
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %27, align 8
  %28 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %29 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %28, i64* %29, align 8
  br label %37

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 1
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %36 = bitcast i8** %35 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %36, align 8
  br label %37

37:                                               ; preds = %26, %30
  %38 = phi i32 [ %33, %30 ], [ 0, %26 ]
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %38, i32* %39, align 8
  %40 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, [8 x i8]* nonnull dereferenceable(8) @.str.1)
  br i1 %40, label %66, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #9
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %45, label %49

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %46, align 8
  %47 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %48 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %47, i64* %48, align 8
  br label %57

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 1
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %55 = bitcast i8** %54 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %55, align 8
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %57

57:                                               ; preds = %49, %45
  %58 = phi i64 [ %56, %49 ], [ %47, %45 ]
  %59 = phi i32 [ %52, %49 ], [ 0, %45 ]
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %59, i32* %60, align 8
  %61 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #9
  %62 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %58, i64* %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 1, i32* %64, align 8
  %65 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #9
  br i1 %65, label %90, label %67

66:                                               ; preds = %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #9
  br label %90

67:                                               ; preds = %57
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %70, label %72

70:                                               ; preds = %67
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %77

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 1
  %76 = bitcast %"class.WTF::StringImpl"* %75 to i8*
  br label %77

77:                                               ; preds = %70, %72
  %78 = phi i8* [ null, %70 ], [ %76, %72 ]
  %79 = phi %"class.WTF::StringImpl"* [ %71, %70 ], [ %68, %72 ]
  %80 = phi i32 [ 0, %70 ], [ %74, %72 ]
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %77
  %86 = call i32 @_ZN5blink17CSSPrimitiveValue16StringToUnitTypeEPKhj(i8* %78, i32 %80) #9
  br label %90

87:                                               ; preds = %77
  %88 = bitcast i8* %78 to i16*
  %89 = call i32 @_ZN5blink17CSSPrimitiveValue16StringToUnitTypeEPKDsj(i16* %88, i32 %80) #9
  br label %90

90:                                               ; preds = %1, %87, %85, %57, %66, %13, %9
  %91 = phi i32 [ 0, %9 ], [ 1, %13 ], [ 2, %66 ], [ 2, %57 ], [ %86, %85 ], [ %89, %87 ], [ 0, %1 ]
  ret i32 %91
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [7 x i8]* dereferenceable(7)) local_unnamed_addr #2 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 6
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %141, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %183, %14, %28, %141, %155, %169, %42, %59, %77, %93, %109, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %14 ], [ false, %28 ], [ false, %141 ], [ false, %155 ], [ false, %169 ], [ %196, %183 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  ret i1 %140

141:                                              ; preds = %28
  %142 = getelementptr inbounds i8, i8* %15, i64 2
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 2
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i64
  %151 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i32
  %154 = icmp eq i32 %147, %153
  br i1 %154, label %155, label %75

155:                                              ; preds = %141
  %156 = getelementptr inbounds i8, i8* %15, i64 3
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i64
  %159 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 3
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i64
  %165 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = sext i8 %166 to i32
  %168 = icmp eq i32 %161, %167
  br i1 %168, label %169, label %75

169:                                              ; preds = %155
  %170 = getelementptr inbounds i8, i8* %15, i64 4
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i64
  %173 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 4
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i64
  %179 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %178
  %180 = load i8, i8* %179, align 1
  %181 = sext i8 %180 to i32
  %182 = icmp eq i32 %175, %181
  br i1 %182, label %183, label %75

183:                                              ; preds = %169
  %184 = getelementptr inbounds i8, i8* %15, i64 5
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i64
  %187 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 5
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = sext i8 %194 to i32
  %196 = icmp eq i32 %189, %195
  br label %75
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [8 x i8]* dereferenceable(8)) local_unnamed_addr #2 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 7
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %157, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %213, %14, %28, %157, %171, %185, %199, %42, %59, %77, %93, %109, %125, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %14 ], [ false, %28 ], [ false, %157 ], [ false, %171 ], [ false, %185 ], [ false, %199 ], [ %226, %213 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  ret i1 %156

157:                                              ; preds = %28
  %158 = getelementptr inbounds i8, i8* %15, i64 2
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i64
  %167 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = sext i8 %168 to i32
  %170 = icmp eq i32 %163, %169
  br i1 %170, label %171, label %75

171:                                              ; preds = %157
  %172 = getelementptr inbounds i8, i8* %15, i64 3
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i64
  %181 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = icmp eq i32 %177, %183
  br i1 %184, label %185, label %75

185:                                              ; preds = %171
  %186 = getelementptr inbounds i8, i8* %15, i64 4
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i64
  %195 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = sext i8 %196 to i32
  %198 = icmp eq i32 %191, %197
  br i1 %198, label %199, label %75

199:                                              ; preds = %185
  %200 = getelementptr inbounds i8, i8* %15, i64 5
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = sext i8 %210 to i32
  %212 = icmp eq i32 %205, %211
  br i1 %212, label %213, label %75

213:                                              ; preds = %199
  %214 = getelementptr inbounds i8, i8* %15, i64 6
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = sext i8 %224 to i32
  %226 = icmp eq i32 %219, %225
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSNumericValue"* @_ZN5blink15CSSNumericValue5parseERKN3WTF6StringERNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = alloca %"class.blink::CSSTokenizer", align 8
  %5 = alloca %"class.blink::CSSParserTokenStream", align 8
  %6 = alloca %"class.blink::CSSParserTokenRange", align 8
  %7 = alloca %"class.blink::CSSParserToken", align 8
  %8 = bitcast %"class.blink::CSSTokenizer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %8) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %0, i32 0) #9
  %9 = bitcast %"class.blink::CSSParserTokenStream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 832, i8* nonnull %9) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 bitcast (%"class.blink::CSSParserTokenStream"* @__const._ZN5blink15CSSNumericValue5parseERKN3WTF6StringERNS_14ExceptionStateE.stream to i8*), i64 832, i1 false)
  %10 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 0, i32 0, i32 1, i64 0
  %11 = bitcast %"class.blink::CSSParserTokenStream"* %5 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 32, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 1
  store %"class.blink::CSSTokenizer"* %4, %"class.blink::CSSTokenizer"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 2
  %16 = bitcast %"class.blink::CSSParserToken"* %15 to i32*
  store i32 11184671, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 3
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 4
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 6
  store i32 31, i32* %19, align 8
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 3072) #9
  %21 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #9
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.blink::CSSParserTokenStream"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = udiv i64 %20, 24
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %12, align 8
  call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* nonnull %5) #9
  %26 = bitcast %"class.blink::CSSParserTokenRange"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 0
  %28 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 1
  %29 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* nonnull %5)
  %30 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %29, 0
  store %"class.blink::CSSParserToken"* %30, %"class.blink::CSSParserToken"** %27, align 8
  %31 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %29, 1
  store %"class.blink::CSSParserToken"* %31, %"class.blink::CSSParserToken"** %28, align 8
  call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* nonnull %5) #9
  %32 = load i8, i8* %18, align 4, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %2
  store i8 1, i8* %18, align 4
  %35 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #9
  %36 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %14, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %36) #9
  %37 = bitcast %"class.blink::CSSParserToken"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* nonnull align 8 %35, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #9
  br label %38

38:                                               ; preds = %2, %34
  %39 = load i32, i32* %16, align 8
  %40 = and i32 %39, 63
  %41 = icmp eq i32 %40, 31
  %42 = and i32 %39, 192
  %43 = icmp eq i32 %42, 128
  %44 = or i1 %41, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %128

46:                                               ; preds = %38
  %47 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %27, align 8
  %48 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %28, align 8
  %49 = icmp ult %"class.blink::CSSParserToken"* %47, %48
  %50 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %51 = select i1 %49, %"class.blink::CSSParserToken"* %47, %"class.blink::CSSParserToken"* %50
  %52 = bitcast %"class.blink::CSSParserToken"* %51 to i32*
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 63
  switch i32 %54, label %127 [
    i32 7, label %55
    i32 8, label %55
    i32 9, label %55
    i32 1, label %95
  ]

55:                                               ; preds = %46, %46, %46
  %56 = bitcast %"class.blink::CSSParserToken"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #9
  %57 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %7, i64 0, i32 0
  store i24 -5592406, i24* %57, align 8
  %58 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %7, i64 0, i32 1
  store i32 -1431655766, i32* %58, align 4
  %59 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %7, i64 0, i32 2
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %59, align 8
  %60 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %7, i64 0, i32 3, i32 0
  store double 0xFFFFFFFFFFFFFFFF, double* %60, align 8
  %61 = icmp eq %"class.blink::CSSParserToken"* %47, %48
  br i1 %61, label %64, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %47, i64 1
  store %"class.blink::CSSParserToken"* %63, %"class.blink::CSSParserToken"** %27, align 8
  br label %64

64:                                               ; preds = %55, %62
  %65 = phi %"class.blink::CSSParserToken"* [ %63, %62 ], [ %47, %55 ]
  %66 = phi %"class.blink::CSSParserToken"* [ %47, %62 ], [ %50, %55 ]
  %67 = icmp ult %"class.blink::CSSParserToken"* %65, %48
  %68 = select i1 %67, %"class.blink::CSSParserToken"* %65, %"class.blink::CSSParserToken"* %50
  %69 = bitcast %"class.blink::CSSParserToken"* %68 to i32*
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 63
  %72 = icmp eq i32 %71, 17
  br i1 %72, label %73, label %82

73:                                               ; preds = %64, %73
  %74 = phi %"class.blink::CSSParserToken"* [ %75, %73 ], [ %65, %64 ]
  %75 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %74, i64 1
  store %"class.blink::CSSParserToken"* %75, %"class.blink::CSSParserToken"** %27, align 8
  %76 = icmp ult %"class.blink::CSSParserToken"* %75, %48
  %77 = select i1 %76, %"class.blink::CSSParserToken"* %75, %"class.blink::CSSParserToken"* %50
  %78 = bitcast %"class.blink::CSSParserToken"* %77 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 63
  %81 = icmp eq i32 %80, 17
  br i1 %81, label %73, label %82

82:                                               ; preds = %73, %64
  %83 = phi %"class.blink::CSSParserToken"* [ %65, %64 ], [ %75, %73 ]
  %84 = bitcast %"class.blink::CSSParserToken"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %84, i64 24, i1 false)
  %85 = icmp eq %"class.blink::CSSParserToken"* %83, %48
  br i1 %85, label %87, label %86

86:                                               ; preds = %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #9
  br label %127

87:                                               ; preds = %82
  %88 = call double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"* nonnull %7) #9
  %89 = bitcast %"class.blink::CSSParserToken"* %7 to i32*
  %90 = load i32, i32* %89, align 8
  %91 = lshr i32 %90, 11
  %92 = and i32 %91, 127
  %93 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %88, i32 %92) #9
  %94 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %93, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #9
  br label %128

95:                                               ; preds = %46
  %96 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %51) #9
  %97 = icmp eq i32 %96, 817
  br i1 %97, label %122, label %98

98:                                               ; preds = %95
  %99 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %51) #9
  %100 = icmp eq i32 %99, 818
  br i1 %100, label %122, label %101

101:                                              ; preds = %98
  %102 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %27, align 8
  %103 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %28, align 8
  %104 = icmp ult %"class.blink::CSSParserToken"* %102, %103
  %105 = select i1 %104, %"class.blink::CSSParserToken"* %102, %"class.blink::CSSParserToken"* %50
  %106 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %105) #9
  %107 = icmp eq i32 %106, 819
  br i1 %107, label %122, label %108

108:                                              ; preds = %101
  %109 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %27, align 8
  %110 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %28, align 8
  %111 = icmp ult %"class.blink::CSSParserToken"* %109, %110
  %112 = select i1 %111, %"class.blink::CSSParserToken"* %109, %"class.blink::CSSParserToken"* %50
  %113 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %112) #9
  %114 = icmp eq i32 %113, 820
  br i1 %114, label %122, label %115

115:                                              ; preds = %108
  %116 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %27, align 8
  %117 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %28, align 8
  %118 = icmp ult %"class.blink::CSSParserToken"* %116, %117
  %119 = select i1 %118, %"class.blink::CSSParserToken"* %116, %"class.blink::CSSParserToken"* %50
  %120 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %119) #9
  %121 = icmp eq i32 %120, 821
  br i1 %121, label %122, label %127

122:                                              ; preds = %115, %108, %101, %98, %95
  %123 = call %"class.blink::CSSMathExpressionNode"* @_ZN5blink21CSSMathExpressionNode9ParseCalcERKNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %6) #9
  %124 = icmp eq %"class.blink::CSSMathExpressionNode"* %123, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %122
  %126 = call fastcc %"class.blink::CSSNumericValue"* @_ZN5blink12_GLOBAL__N_118CalcToNumericValueERKNS_21CSSMathExpressionNodeE(%"class.blink::CSSMathExpressionNode"* nonnull dereferenceable(16) %123)
  br label %128

127:                                              ; preds = %122, %86, %46, %115
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %128

128:                                              ; preds = %125, %87, %127, %45
  %129 = phi %"class.blink::CSSNumericValue"* [ null, %127 ], [ %126, %125 ], [ %94, %87 ], [ null, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  %130 = load i32, i32* %13, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %133, label %132, !prof !3

132:                                              ; preds = %128
  store i32 0, i32* %13, align 4
  br label %133

133:                                              ; preds = %132, %128
  %134 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %134, align 8
  %136 = bitcast i8* %10 to %"class.blink::CSSParserToken"*
  %137 = icmp eq %"class.blink::CSSParserToken"* %135, %136
  br i1 %137, label %140, label %138, !prof !4

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.15"* nonnull %139, %"class.blink::CSSParserToken"* %135) #9
  br label %140

140:                                              ; preds = %133, %138
  call void @llvm.lifetime.end.p0i8(i64 832, i8* nonnull %9) #9
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %8) #9
  ret %"class.blink::CSSNumericValue"* %129
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.blink::CSSParserToken", align 8
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  store i8 1, i8* %4, align 4
  %8 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %10 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %9, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %10) #9
  %11 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %12 = bitcast %"class.blink::CSSParserToken"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 8 %8, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  br label %13

13:                                               ; preds = %1, %7
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %17 = bitcast %"class.blink::CSSParserToken"* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 63
  %20 = icmp eq i32 %19, 31
  %21 = and i32 %18, 192
  %22 = icmp eq i32 %21, 128
  %23 = or i1 %20, %22
  br i1 %23, label %92, label %24

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 3
  %27 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.blink::CSSParserToken"* %16 to i8*
  %30 = bitcast %"class.blink::CSSParserToken"* %2 to i8*
  br label %37

31:                                               ; preds = %79
  %32 = and i32 %80, 63
  %33 = icmp eq i32 %32, 31
  %34 = and i32 %80, 192
  %35 = icmp eq i32 %34, 128
  %36 = or i1 %33, %35
  br i1 %36, label %89, label %86

37:                                               ; preds = %86, %24
  %38 = phi i32 [ %18, %24 ], [ %80, %86 ]
  %39 = phi i32 [ %18, %24 ], [ %87, %86 ]
  %40 = phi i32 [ 0, %24 ], [ %88, %86 ]
  store i8 0, i8* %4, align 4
  %41 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %41, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %41, i64 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = load i32, i32* %42, align 4
  %46 = icmp ult i32 %44, %45
  %47 = select i1 %46, i32 %44, i32 %45
  store i32 %47, i32* %26, align 8
  %48 = load i32, i32* %15, align 4
  %49 = load i32, i32* %27, align 8
  %50 = icmp eq i32 %48, %49
  br i1 %50, label %58, label %51, !prof !3

51:                                               ; preds = %37
  %52 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %28, align 8
  %53 = zext i32 %48 to i64
  %54 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %52, i64 %53
  %55 = bitcast %"class.blink::CSSParserToken"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %29, i64 24, i1 false) #9
  %56 = load i32, i32* %15, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %15, align 4
  br label %60

58:                                               ; preds = %37
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.14"* %14, %"class.blink::CSSParserToken"* dereferenceable(24) %16) #9
  %59 = load i32, i32* %17, align 8
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %38, %51 ]
  %62 = phi i32 [ %59, %58 ], [ %39, %51 ]
  %63 = lshr i32 %62, 6
  %64 = and i32 %63, 3
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %68

66:                                               ; preds = %60
  %67 = add i32 %40, 1
  br label %72

68:                                               ; preds = %60
  %69 = icmp eq i32 %64, 2
  %70 = zext i1 %69 to i32
  %71 = sub i32 %40, %70
  br label %72

72:                                               ; preds = %68, %66
  %73 = phi i32 [ %67, %66 ], [ %71, %68 ]
  %74 = load i8, i8* %4, align 4, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %72
  store i8 1, i8* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #9
  %77 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %25, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %2, %"class.blink::CSSTokenizer"* %77) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %30, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #9
  %78 = load i32, i32* %17, align 8
  br label %79

79:                                               ; preds = %76, %72
  %80 = phi i32 [ %61, %72 ], [ %78, %76 ]
  %81 = phi i32 [ %62, %72 ], [ %78, %76 ]
  %82 = and i32 %81, 63
  %83 = icmp ne i32 %82, 31
  %84 = icmp ne i32 %73, 0
  %85 = and i1 %84, %83
  br i1 %85, label %86, label %31

86:                                               ; preds = %79, %31
  %87 = phi i32 [ %81, %79 ], [ %80, %31 ]
  %88 = phi i32 [ %73, %79 ], [ 0, %31 ]
  br label %37

89:                                               ; preds = %31
  %90 = load i32, i32* %15, align 4
  %91 = zext i32 %90 to i64
  br label %92

92:                                               ; preds = %89, %13
  %93 = phi i64 [ %91, %89 ], [ 0, %13 ]
  %94 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %95, i64 %93
  %97 = insertvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } undef, %"class.blink::CSSParserToken"* %95, 0
  %98 = insertvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %97, %"class.blink::CSSParserToken"* %96, 1
  ret { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %98
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #4

declare %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double, i32) local_unnamed_addr #4

declare double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #4

declare i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #4

declare %"class.blink::CSSMathExpressionNode"* @_ZN5blink21CSSMathExpressionNode9ParseCalcERKNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::CSSNumericValue"* @_ZN5blink12_GLOBAL__N_118CalcToNumericValueERKNS_21CSSMathExpressionNodeE(%"class.blink::CSSMathExpressionNode"* dereferenceable(16)) unnamed_addr #1 {
  %2 = alloca %"class.blink::CSSUnitValue"*, align 8
  %3 = alloca %"class.blink::HeapVector", align 8
  %4 = alloca %"class.blink::HeapVector", align 8
  %5 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %6 = alloca %"class.blink::HeapVector", align 8
  %7 = alloca %"class.blink::CSSNumericValue"*, align 8
  %8 = alloca %"class.blink::HeapVector", align 8
  %9 = alloca %"class.blink::HeapVector", align 8
  %10 = alloca %"class.blink::CSSNumericValue"*, align 8
  %11 = alloca %"class.blink::CSSNumericValue"*, align 8
  %12 = alloca %"class.blink::HeapVector", align 8
  %13 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %14 = alloca %"class.blink::HeapVector", align 8
  %15 = bitcast %"class.blink::CSSMathExpressionNode"* %0 to i1 (%"class.blink::CSSMathExpressionNode"*)***
  %16 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %15, align 8
  %17 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::CSSMathExpressionNode"* %0) #9
  br i1 %18, label %19, label %113

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::CSSMathExpressionNode"* %0 to i32 (%"class.blink::CSSMathExpressionNode"*)***
  %21 = load i32 (%"class.blink::CSSMathExpressionNode"*)**, i32 (%"class.blink::CSSMathExpressionNode"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %21, i64 14
  %23 = load i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %22, align 8
  %24 = tail call i32 %23(%"class.blink::CSSMathExpressionNode"* %0) #9
  %25 = bitcast %"class.blink::CSSUnitValue"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = bitcast %"class.blink::CSSMathExpressionNode"* %0 to double (%"class.blink::CSSMathExpressionNode"*)***
  %27 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %26, align 8
  %28 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %27, i64 4
  %29 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %28, align 8
  %30 = tail call double %29(%"class.blink::CSSMathExpressionNode"* %0) #9
  %31 = icmp eq i32 %24, 31
  %32 = select i1 %31, i32 1, i32 %24
  %33 = tail call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %30, i32 %32) #9
  store %"class.blink::CSSUnitValue"* %33, %"class.blink::CSSUnitValue"** %2, align 8
  %34 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %0, i64 0, i32 3
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %19
  %38 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %33, i64 0, i32 0
  br label %111

39:                                               ; preds = %19
  %40 = bitcast %"class.blink::HeapVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #9
  %41 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 16, i1 false) #9
  %43 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_12CSSUnitValueEEEvOT_(%"class.WTF::Vector.39"* nonnull %43, %"class.blink::CSSUnitValue"** nonnull dereferenceable(8) %2) #9
  %44 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = load i32, i32* %41, align 8
  %47 = load i32, i32* %42, align 4
  %48 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %50 = bitcast %"class.blink::HeapVector"* %4 to i64*
  store i64 0, i64* %50, align 8
  %51 = bitcast %"class.blink::HeapVector"* %4 to i64*
  store atomic i64 0, i64* %44 monotonic, align 8
  store atomic i64 %45, i64* %51 monotonic, align 8
  store i32 %46, i32* %48, align 8
  store i32 0, i32* %41, align 8
  store i32 %47, i32* %49, align 4
  store i32 0, i32* %42, align 4
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %39
  %55 = inttoptr i64 %45 to i8*
  %56 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #9
  br label %57

57:                                               ; preds = %54, %39
  %58 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %57
  %61 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %62) #9
  br label %64

64:                                               ; preds = %57, %60
  %65 = bitcast %"class.blink::DummyExceptionStateForTesting"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %65) #9
  %66 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %67, align 8
  %68 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %68, align 2
  %69 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 2
  %70 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %71 = bitcast %"class.WTF::StringImpl"** %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false) #9
  %72 = bitcast i8** %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %73 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0
  %74 = call %"class.blink::CSSMathSum"* @_ZN5blink10CSSMathSum6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEERNS_14ExceptionStateE(%"class.blink::HeapVector"* nonnull %4, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %73) #9
  %75 = getelementptr inbounds %"class.blink::CSSMathSum", %"class.blink::CSSMathSum"* %74, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %76 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 4
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %64
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %73) #9
  br label %80

80:                                               ; preds = %64, %79
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %81 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %82 = load i64*, i64** %81, align 8
  %83 = icmp eq i64* %82, null
  br i1 %83, label %94, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 3
  %86 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %85, align 8
  %87 = bitcast %"class.v8::Isolate"* %86 to %"class.v8::internal::Isolate"*
  %88 = load i64, i64* %82, align 8
  %89 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %87, i64 %88) #9
  %90 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %86) #9
  br i1 %90, label %94, label %91

91:                                               ; preds = %84
  %92 = bitcast i64* %89 to %"class.v8::Value"*
  %93 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %86, %"class.v8::Value"* %92) #9
  br label %94

94:                                               ; preds = %91, %84, %80
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #9
  br label %110

110:                                              ; preds = %94, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %65) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #9
  br label %111

111:                                              ; preds = %110, %37
  %112 = phi %"class.blink::CSSNumericValue"* [ %75, %110 ], [ %38, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %474

113:                                              ; preds = %1
  %114 = bitcast %"class.blink::HeapVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114) #9
  %115 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %117 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 0, i64 16, i1 false) #9
  %118 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %15, align 8
  %119 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %118, i64 2
  %120 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %119, align 8
  %121 = tail call zeroext i1 %120(%"class.blink::CSSMathExpressionNode"* %0) #9
  br i1 %121, label %127, label %122

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %0, i64 2
  %124 = bitcast %"class.blink::CSSMathExpressionNode"* %123 to i32*
  %125 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  %126 = bitcast %"class.blink::CSSNumericValue"** %10 to i8*
  br label %219

127:                                              ; preds = %113
  %128 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %0, i64 1
  %129 = bitcast %"class.blink::CSSMathExpressionNode"* %128 to %"class.blink::Member"**
  %130 = load %"class.blink::Member"*, %"class.blink::Member"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %0, i64 1, i32 2
  %132 = bitcast i8* %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %130, i64 %134
  %136 = icmp eq i32 %133, 0
  br i1 %136, label %140, label %137

137:                                              ; preds = %127
  %138 = bitcast %"class.blink::CSSNumericValue"** %7 to i8*
  %139 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  br label %145

140:                                              ; preds = %168, %127
  %141 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %0, i64 2
  %142 = bitcast %"class.blink::CSSMathExpressionNode"* %141 to i32*
  %143 = load i32, i32* %142, align 8
  %144 = icmp eq i32 %143, 4
  br i1 %144, label %171, label %195

145:                                              ; preds = %137, %168
  %146 = phi %"class.blink::Member"* [ %130, %137 ], [ %169, %168 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #9
  %147 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %146, i64 0, i32 0, i32 0
  %148 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %147, align 8
  %149 = call fastcc %"class.blink::CSSNumericValue"* @_ZN5blink12_GLOBAL__N_118CalcToNumericValueERKNS_21CSSMathExpressionNodeE(%"class.blink::CSSMathExpressionNode"* dereferenceable(16) %148)
  store %"class.blink::CSSNumericValue"* %149, %"class.blink::CSSNumericValue"** %7, align 8
  %150 = load i32, i32* %117, align 4
  %151 = load i32, i32* %116, align 8
  %152 = icmp eq i32 %150, %151
  br i1 %152, label %167, label %153, !prof !3

153:                                              ; preds = %145
  %154 = ptrtoint %"class.blink::CSSNumericValue"* %149 to i64
  %155 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %115, align 8
  %156 = zext i32 %150 to i64
  %157 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %155, i64 %156
  %158 = bitcast %"class.blink::Member.25"* %157 to i64*
  store atomic i64 %154, i64* %158 monotonic, align 8
  %159 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %164, label %161

161:                                              ; preds = %153
  %162 = bitcast %"class.blink::CSSNumericValue"* %149 to i8*
  %163 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %162) #9
  br label %164

164:                                              ; preds = %161, %153
  %165 = load i32, i32* %117, align 4
  %166 = add i32 %165, 1
  store i32 %166, i32* %117, align 4
  br label %168

167:                                              ; preds = %145
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.39"* nonnull %139, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %7) #9
  br label %168

168:                                              ; preds = %164, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #9
  %169 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %146, i64 1
  %170 = icmp eq %"class.blink::Member"* %169, %135
  br i1 %170, label %140, label %145

171:                                              ; preds = %140
  %172 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %173 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  %174 = bitcast %"class.blink::HeapVector"* %6 to i64*
  %175 = bitcast %"class.blink::HeapVector"* %8 to i64*
  store i64 0, i64* %175, align 8
  %176 = load i64, i64* %174, align 8
  %177 = bitcast %"class.blink::HeapVector"* %8 to i64*
  store atomic i64 0, i64* %174 monotonic, align 8
  store atomic i64 %176, i64* %177 monotonic, align 8
  %178 = load i32, i32* %116, align 8
  store i32 %178, i32* %172, align 8
  store i32 0, i32* %116, align 8
  %179 = load i32, i32* %117, align 4
  store i32 %179, i32* %173, align 4
  store i32 0, i32* %117, align 4
  %180 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %185, label %182

182:                                              ; preds = %171
  %183 = inttoptr i64 %176 to i8*
  %184 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %183) #9
  br label %185

185:                                              ; preds = %182, %171
  %186 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %192, label %188

188:                                              ; preds = %185
  %189 = bitcast %"class.blink::HeapVector"* %6 to i8**
  %190 = load i8*, i8** %189, align 8
  %191 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %190) #9
  br label %192

192:                                              ; preds = %185, %188
  %193 = call %"class.blink::CSSMathMin"* @_ZN5blink10CSSMathMin6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEE(%"class.blink::HeapVector"* nonnull %8) #9
  %194 = getelementptr inbounds %"class.blink::CSSMathMin", %"class.blink::CSSMathMin"* %193, i64 0, i32 0, i32 0, i32 0
  br label %472

195:                                              ; preds = %140
  %196 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %197 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  %198 = bitcast %"class.blink::HeapVector"* %6 to i64*
  %199 = bitcast %"class.blink::HeapVector"* %9 to i64*
  store i64 0, i64* %199, align 8
  %200 = load i64, i64* %198, align 8
  %201 = bitcast %"class.blink::HeapVector"* %9 to i64*
  store atomic i64 0, i64* %198 monotonic, align 8
  store atomic i64 %200, i64* %201 monotonic, align 8
  %202 = load i32, i32* %116, align 8
  store i32 %202, i32* %196, align 8
  store i32 0, i32* %116, align 8
  %203 = load i32, i32* %117, align 4
  store i32 %203, i32* %197, align 4
  store i32 0, i32* %117, align 4
  %204 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %209, label %206

206:                                              ; preds = %195
  %207 = inttoptr i64 %200 to i8*
  %208 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %207) #9
  br label %209

209:                                              ; preds = %206, %195
  %210 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %216, label %212

212:                                              ; preds = %209
  %213 = bitcast %"class.blink::HeapVector"* %6 to i8**
  %214 = load i8*, i8** %213, align 8
  %215 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %214) #9
  br label %216

216:                                              ; preds = %209, %212
  %217 = call %"class.blink::CSSMathMax"* @_ZN5blink10CSSMathMax6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEE(%"class.blink::HeapVector"* nonnull %9) #9
  %218 = getelementptr inbounds %"class.blink::CSSMathMax", %"class.blink::CSSMathMax"* %217, i64 0, i32 0, i32 0, i32 0
  br label %472

219:                                              ; preds = %122, %312
  %220 = phi %"class.blink::CSSMathExpressionNode"* [ %302, %312 ], [ %0, %122 ]
  %221 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %220, i64 1, i32 1
  %222 = bitcast i32* %221 to %"class.blink::CSSMathExpressionNode"**
  %223 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %222, align 8
  %224 = call fastcc %"class.blink::CSSNumericValue"* @_ZN5blink12_GLOBAL__N_118CalcToNumericValueERKNS_21CSSMathExpressionNodeE(%"class.blink::CSSMathExpressionNode"* dereferenceable(16) %223)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #9
  %225 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %220, i64 2
  %226 = bitcast %"class.blink::CSSMathExpressionNode"* %225 to i32*
  %227 = load i32, i32* %226, align 8
  switch i32 %227, label %279 [
    i32 1, label %228
    i32 3, label %276
  ]

228:                                              ; preds = %219
  %229 = ptrtoint %"class.blink::CSSNumericValue"* %224 to i64
  %230 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 96) #9
  %231 = bitcast i8* %230 to i32 (...)***
  %232 = getelementptr inbounds i8, i8* %230, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %232, i8 0, i64 16, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN5blink15CSSNumericValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %231, align 8
  %233 = getelementptr inbounds i8, i8* %230, i64 24
  %234 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %224, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %235 = load i32, i32* %234, align 8
  %236 = getelementptr inbounds i8, i8* %230, i64 40
  %237 = bitcast i8* %233 to i8**
  store i8* %236, i8** %237, align 8
  %238 = getelementptr inbounds i8, i8* %230, i64 32
  %239 = bitcast i8* %238 to i32*
  store i32 7, i32* %239, align 8
  %240 = icmp ugt i32 %235, 7
  br i1 %240, label %241, label %249

241:                                              ; preds = %228
  %242 = zext i32 %235 to i64
  %243 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %242) #9
  %244 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %243, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #9
  %245 = ptrtoint i8* %244 to i64
  %246 = bitcast i8* %233 to i64*
  store atomic i64 %245, i64* %246 monotonic, align 8
  %247 = lshr i64 %243, 2
  %248 = trunc i64 %247 to i32
  store i32 %248, i32* %239, align 8
  br label %249

249:                                              ; preds = %241, %228
  %250 = phi i8* [ %236, %228 ], [ %244, %241 ]
  %251 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %224, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %252 = load i32, i32* %251, align 4
  %253 = getelementptr inbounds i8, i8* %230, i64 36
  %254 = bitcast i8* %253 to i32*
  store i32 %252, i32* %254, align 4
  %255 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %224, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %256 = load i32*, i32** %255, align 8
  %257 = icmp ne i8* %250, null
  %258 = icmp ne i32* %256, null
  %259 = and i1 %257, %258
  br i1 %259, label %260, label %265, !prof !4

260:                                              ; preds = %249
  %261 = load i32, i32* %251, align 4
  %262 = zext i32 %261 to i64
  %263 = bitcast i32* %256 to i8*
  %264 = shl nuw nsw i64 %262, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %250, i8* nonnull align 4 %263, i64 %264, i1 false) #9
  br label %265

265:                                              ; preds = %260, %249
  %266 = getelementptr inbounds i8, i8* %230, i64 72
  %267 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %224, i64 0, i32 1, i32 1
  %268 = bitcast i32* %267 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %266, i8* align 8 %268, i64 12, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN5blink13CSSMathNegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %231, align 8
  %269 = getelementptr inbounds i8, i8* %230, i64 88
  %270 = bitcast i8* %269 to i64*
  store i64 %229, i64* %270, align 8
  %271 = getelementptr inbounds i8, i8* %230, i64 -4
  %272 = bitcast i8* %271 to i16*
  %273 = load atomic i16, i16* %272 monotonic, align 2
  %274 = or i16 %273, 1
  store atomic i16 %274, i16* %272 release, align 2
  %275 = bitcast i8* %230 to %"class.blink::CSSNumericValue"*
  br label %279

276:                                              ; preds = %219
  %277 = call %"class.blink::CSSMathInvert"* @_ZN5blink13CSSMathInvert6CreateEPNS_15CSSNumericValueE(%"class.blink::CSSNumericValue"* %224) #9
  %278 = getelementptr inbounds %"class.blink::CSSMathInvert", %"class.blink::CSSMathInvert"* %277, i64 0, i32 0, i32 0
  br label %279

279:                                              ; preds = %219, %265, %276
  %280 = phi %"class.blink::CSSNumericValue"* [ %275, %265 ], [ %278, %276 ], [ %224, %219 ]
  store %"class.blink::CSSNumericValue"* %280, %"class.blink::CSSNumericValue"** %10, align 8
  %281 = load i32, i32* %117, align 4
  %282 = load i32, i32* %116, align 8
  %283 = icmp eq i32 %281, %282
  br i1 %283, label %298, label %284, !prof !3

284:                                              ; preds = %279
  %285 = ptrtoint %"class.blink::CSSNumericValue"* %280 to i64
  %286 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %115, align 8
  %287 = zext i32 %281 to i64
  %288 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %286, i64 %287
  %289 = bitcast %"class.blink::Member.25"* %288 to i64*
  store atomic i64 %285, i64* %289 monotonic, align 8
  %290 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %284
  %293 = bitcast %"class.blink::CSSNumericValue"* %280 to i8*
  %294 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %293) #9
  br label %295

295:                                              ; preds = %292, %284
  %296 = load i32, i32* %117, align 4
  %297 = add i32 %296, 1
  store i32 %297, i32* %117, align 4
  br label %299

298:                                              ; preds = %279
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.39"* nonnull %125, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %10) #9
  br label %299

299:                                              ; preds = %295, %298
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #9
  %300 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %220, i64 1
  %301 = bitcast %"class.blink::CSSMathExpressionNode"* %300 to %"class.blink::CSSMathExpressionNode"**
  %302 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %301, align 8
  %303 = bitcast %"class.blink::CSSMathExpressionNode"* %302 to i1 (%"class.blink::CSSMathExpressionNode"*)***
  %304 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %303, align 8
  %305 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %304, i64 1
  %306 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %305, align 8
  %307 = call zeroext i1 %306(%"class.blink::CSSMathExpressionNode"* %302) #9
  br i1 %307, label %308, label %322

308:                                              ; preds = %299
  %309 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %302, i64 0, i32 3
  %310 = load i8, i8* %309, align 1, !range !2
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %312, label %322

312:                                              ; preds = %308
  %313 = load i32, i32* %124, align 8
  %314 = icmp ult i32 %313, 2
  %315 = select i1 %314, i32 0, i32 2
  %316 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %302, i64 2
  %317 = bitcast %"class.blink::CSSMathExpressionNode"* %316 to i32*
  %318 = load i32, i32* %317, align 8
  %319 = icmp ult i32 %318, 2
  %320 = select i1 %319, i32 0, i32 2
  %321 = icmp eq i32 %315, %320
  br i1 %321, label %219, label %322

322:                                              ; preds = %308, %299, %312
  %323 = bitcast %"class.blink::CSSNumericValue"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %323) #9
  %324 = call fastcc %"class.blink::CSSNumericValue"* @_ZN5blink12_GLOBAL__N_118CalcToNumericValueERKNS_21CSSMathExpressionNodeE(%"class.blink::CSSMathExpressionNode"* dereferenceable(16) %302)
  store %"class.blink::CSSNumericValue"* %324, %"class.blink::CSSNumericValue"** %11, align 8
  %325 = load i32, i32* %117, align 4
  %326 = load i32, i32* %116, align 8
  %327 = icmp eq i32 %325, %326
  br i1 %327, label %342, label %328, !prof !3

328:                                              ; preds = %322
  %329 = ptrtoint %"class.blink::CSSNumericValue"* %324 to i64
  %330 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %115, align 8
  %331 = zext i32 %325 to i64
  %332 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %330, i64 %331
  %333 = bitcast %"class.blink::Member.25"* %332 to i64*
  store atomic i64 %329, i64* %333 monotonic, align 8
  %334 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %339, label %336

336:                                              ; preds = %328
  %337 = bitcast %"class.blink::CSSNumericValue"* %324 to i8*
  %338 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %337) #9
  br label %339

339:                                              ; preds = %336, %328
  %340 = load i32, i32* %117, align 4
  %341 = add i32 %340, 1
  store i32 %341, i32* %117, align 4
  br label %344

342:                                              ; preds = %322
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.39"* nonnull %125, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %11) #9
  %343 = load i32, i32* %117, align 4
  br label %344

344:                                              ; preds = %339, %342
  %345 = phi i32 [ %341, %339 ], [ %343, %342 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %323) #9
  %346 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %115, align 8
  %347 = icmp eq i32 %345, 0
  br i1 %347, label %377, label %348

348:                                              ; preds = %344
  %349 = zext i32 %345 to i64
  %350 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %346, i64 %349
  %351 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %350, i64 -1
  %352 = icmp ugt %"class.blink::Member.25"* %351, %346
  br i1 %352, label %353, label %377

353:                                              ; preds = %348, %373
  %354 = phi %"class.blink::Member.25"* [ %375, %373 ], [ %351, %348 ]
  %355 = phi %"class.blink::Member.25"* [ %374, %373 ], [ %346, %348 ]
  %356 = bitcast %"class.blink::Member.25"* %355 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = bitcast %"class.blink::Member.25"* %354 to i64*
  %359 = load i64, i64* %358, align 8
  store atomic i64 %359, i64* %356 monotonic, align 8
  store atomic i64 %357, i64* %358 monotonic, align 8
  %360 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %366, label %362

362:                                              ; preds = %353
  %363 = bitcast %"class.blink::Member.25"* %355 to i8**
  %364 = load i8*, i8** %363, align 8
  %365 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %364) #9
  br label %366

366:                                              ; preds = %362, %353
  %367 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %373, label %369

369:                                              ; preds = %366
  %370 = bitcast %"class.blink::Member.25"* %354 to i8**
  %371 = load i8*, i8** %370, align 8
  %372 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %371) #9
  br label %373

373:                                              ; preds = %369, %366
  %374 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %355, i64 1
  %375 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %354, i64 -1
  %376 = icmp ult %"class.blink::Member.25"* %374, %375
  br i1 %376, label %353, label %377

377:                                              ; preds = %373, %344, %348
  %378 = load i32, i32* %124, align 8
  %379 = icmp ult i32 %378, 2
  br i1 %379, label %380, label %448

380:                                              ; preds = %377
  %381 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %12, i64 0, i32 0, i32 0, i32 0, i32 1
  %382 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %12, i64 0, i32 0, i32 0, i32 0, i32 2
  %383 = bitcast %"class.blink::HeapVector"* %6 to i64*
  %384 = bitcast %"class.blink::HeapVector"* %12 to i64*
  store i64 0, i64* %384, align 8
  %385 = load i64, i64* %383, align 8
  %386 = bitcast %"class.blink::HeapVector"* %12 to i64*
  store atomic i64 0, i64* %383 monotonic, align 8
  store atomic i64 %385, i64* %386 monotonic, align 8
  %387 = load i32, i32* %116, align 8
  store i32 %387, i32* %381, align 8
  store i32 0, i32* %116, align 8
  %388 = load i32, i32* %117, align 4
  store i32 %388, i32* %382, align 4
  store i32 0, i32* %117, align 4
  %389 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %394, label %391

391:                                              ; preds = %380
  %392 = inttoptr i64 %385 to i8*
  %393 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %392) #9
  br label %394

394:                                              ; preds = %391, %380
  %395 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %401, label %397

397:                                              ; preds = %394
  %398 = bitcast %"class.blink::HeapVector"* %6 to i8**
  %399 = load i8*, i8** %398, align 8
  %400 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %399) #9
  br label %401

401:                                              ; preds = %394, %397
  %402 = bitcast %"class.blink::DummyExceptionStateForTesting"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %402) #9
  %403 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 0
  %404 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %404, align 8
  %405 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %405, align 2
  %406 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 1, i32 2
  %407 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 5, i32 0, i32 0
  %408 = bitcast %"class.WTF::StringImpl"** %407 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %408, i8 0, i64 16, i1 false) #9
  %409 = bitcast i8** %406 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %409, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %403, align 8
  %410 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0
  %411 = call %"class.blink::CSSMathSum"* @_ZN5blink10CSSMathSum6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEERNS_14ExceptionStateE(%"class.blink::HeapVector"* nonnull %12, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %410) #9
  %412 = getelementptr inbounds %"class.blink::CSSMathSum", %"class.blink::CSSMathSum"* %411, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %403, align 8
  %413 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 4
  %414 = load i32, i32* %413, align 8
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %417, label %416

416:                                              ; preds = %401
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %410) #9
  br label %417

417:                                              ; preds = %401, %416
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %403, align 8
  %418 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = icmp eq i64* %419, null
  br i1 %420, label %431, label %421

421:                                              ; preds = %417
  %422 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 3
  %423 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %422, align 8
  %424 = bitcast %"class.v8::Isolate"* %423 to %"class.v8::internal::Isolate"*
  %425 = load i64, i64* %419, align 8
  %426 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %424, i64 %425) #9
  %427 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %423) #9
  br i1 %427, label %431, label %428

428:                                              ; preds = %421
  %429 = bitcast i64* %426 to %"class.v8::Value"*
  %430 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %423, %"class.v8::Value"* %429) #9
  br label %431

431:                                              ; preds = %428, %421, %417
  %432 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %407, align 8
  %433 = icmp eq %"class.WTF::StringImpl"* %432, null
  br i1 %433, label %447, label %434

434:                                              ; preds = %431
  %435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %432, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %436 = load atomic i32, i32* %435 monotonic, align 4
  %437 = and i32 %436, 2
  %438 = icmp eq i32 %437, 0
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %432, i64 0, i32 0
  %440 = load i32, i32* %439, align 4
  br i1 %438, label %441, label %443

441:                                              ; preds = %434
  %442 = add i32 %440, -1
  store i32 %442, i32* %439, align 4
  br label %443

443:                                              ; preds = %441, %434
  %444 = phi i32 [ %442, %441 ], [ %440, %434 ]
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %446, label %447

446:                                              ; preds = %443
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %432) #9
  br label %447

447:                                              ; preds = %431, %443, %446
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %402) #9
  br label %472

448:                                              ; preds = %377
  %449 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %14, i64 0, i32 0, i32 0, i32 0, i32 1
  %450 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %14, i64 0, i32 0, i32 0, i32 0, i32 2
  %451 = bitcast %"class.blink::HeapVector"* %6 to i64*
  %452 = bitcast %"class.blink::HeapVector"* %14 to i64*
  store i64 0, i64* %452, align 8
  %453 = load i64, i64* %451, align 8
  %454 = bitcast %"class.blink::HeapVector"* %14 to i64*
  store atomic i64 0, i64* %451 monotonic, align 8
  store atomic i64 %453, i64* %454 monotonic, align 8
  %455 = load i32, i32* %116, align 8
  store i32 %455, i32* %449, align 8
  store i32 0, i32* %116, align 8
  %456 = load i32, i32* %117, align 4
  store i32 %456, i32* %450, align 4
  store i32 0, i32* %117, align 4
  %457 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %462, label %459

459:                                              ; preds = %448
  %460 = inttoptr i64 %453 to i8*
  %461 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %460) #9
  br label %462

462:                                              ; preds = %459, %448
  %463 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %469, label %465

465:                                              ; preds = %462
  %466 = bitcast %"class.blink::HeapVector"* %6 to i8**
  %467 = load i8*, i8** %466, align 8
  %468 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %467) #9
  br label %469

469:                                              ; preds = %462, %465
  %470 = call %"class.blink::CSSMathProduct"* @_ZN5blink14CSSMathProduct6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEE(%"class.blink::HeapVector"* nonnull %14) #9
  %471 = getelementptr inbounds %"class.blink::CSSMathProduct", %"class.blink::CSSMathProduct"* %470, i64 0, i32 0, i32 0, i32 0
  br label %472

472:                                              ; preds = %447, %469, %192, %216
  %473 = phi %"class.blink::CSSNumericValue"* [ %194, %192 ], [ %218, %216 ], [ %412, %447 ], [ %471, %469 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %114) #9
  br label %474

474:                                              ; preds = %472, %111
  %475 = phi %"class.blink::CSSNumericValue"* [ %112, %111 ], [ %473, %472 ]
  ret %"class.blink::CSSNumericValue"* %475
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6, !prof !4

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::String"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #9
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector.9"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  %41 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45, !prof !3

45:                                               ; preds = %40
  store i32 0, i32* %42, align 4
  br label %46

46:                                               ; preds = %45, %40
  %47 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %41, i64 0, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %41, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.5"* %53, i32* %48) #9
  br label %54

54:                                               ; preds = %46, %52
  store i32* null, i32** %47, align 8
  %55 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 0, i32 2, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #9
  br label %71

71:                                               ; preds = %54, %67, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSNumericValue"* @_ZN5blink15CSSNumericValue12FromCSSValueERKNS_17CSSPrimitiveValueE(%"class.blink::CSSPrimitiveValue"* dereferenceable(3)) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 2, i32 0, i32 2
  %7 = bitcast i8* %6 to %"class.blink::CSSMathExpressionNode"**
  %8 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %7, align 8
  %9 = tail call fastcc %"class.blink::CSSNumericValue"* @_ZN5blink12_GLOBAL__N_118CalcToNumericValueERKNS_21CSSMathExpressionNodeE(%"class.blink::CSSMathExpressionNode"* dereferenceable(16) %8)
  br label %14

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  %12 = tail call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue12FromCSSValueERKNS_22CSSNumericLiteralValueE(%"class.blink::CSSNumericLiteralValue"* dereferenceable(16) %11) #9
  %13 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %12, i64 0, i32 0
  br label %14

14:                                               ; preds = %10, %5
  %15 = phi %"class.blink::CSSNumericValue"* [ %9, %5 ], [ %13, %10 ]
  ret %"class.blink::CSSNumericValue"* %15
}

declare %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue12FromCSSValueERKNS_22CSSNumericLiteralValueE(%"class.blink::CSSNumericLiteralValue"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSNumericValue"* @_ZN5blink15CSSNumericValue13FromNumberishEPKNS_30V8UnionCSSNumericValueOrDoubleE(%"class.blink::V8UnionCSSNumericValueOrDouble"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %0, i64 0, i32 3
  %7 = load double, double* %6, align 8
  %8 = tail call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %7, i32 1) #9
  %9 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %8, i64 0, i32 0
  br label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %11, align 8
  br label %13

13:                                               ; preds = %10, %5
  %14 = phi %"class.blink::CSSNumericValue"* [ %9, %5 ], [ %12, %10 ]
  ret %"class.blink::CSSNumericValue"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSNumericValue"* @_ZN5blink15CSSNumericValue14FromPercentishEPKNS_30V8UnionCSSNumericValueOrDoubleE(%"class.blink::V8UnionCSSNumericValueOrDouble"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %0, i64 0, i32 3
  %7 = load double, double* %6, align 8
  %8 = fmul double %7, 1.000000e+02
  %9 = tail call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %8, i32 2) #9
  %10 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %9, i64 0, i32 0
  br label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %12, align 8
  br label %14

14:                                               ; preds = %11, %5
  %15 = phi %"class.blink::CSSNumericValue"* [ %10, %5 ], [ %13, %11 ]
  ret %"class.blink::CSSNumericValue"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSUnitValue"* @_ZN5blink15CSSNumericValue2toERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::CSSNumericValue"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = tail call i32 @_ZN5blink15CSSNumericValue12UnitFromNameERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1)
  %7 = icmp eq i32 %6, 18
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = add i32 %6, -1
  %10 = icmp ult i32 %9, 2
  %11 = add i32 %6, -3
  %12 = icmp ult i32 %11, 16
  %13 = or i1 %10, %12
  br i1 %13, label %16, label %14

14:                                               ; preds = %8
  switch i32 %6, label %15 [
    i32 32, label %16
    i32 29, label %16
    i32 28, label %16
    i32 27, label %16
    i32 26, label %16
    i32 25, label %16
    i32 24, label %16
    i32 23, label %16
    i32 22, label %16
    i32 21, label %16
    i32 20, label %16
    i32 19, label %16
    i32 30, label %16
  ]

15:                                               ; preds = %14, %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %109

16:                                               ; preds = %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %8
  %17 = tail call %"class.blink::CSSUnitValue"* @_ZNK5blink15CSSNumericValue2toENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::CSSNumericValue"* %0, i32 %6)
  %18 = icmp eq %"class.blink::CSSUnitValue"* %17, null
  br i1 %18, label %19, label %109

19:                                               ; preds = %16
  %20 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  %21 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #9
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %68, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %42

32:                                               ; preds = %25
  %33 = zext i32 %31 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #9
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !3

39:                                               ; preds = %32
  tail call void @llvm.trap() #9
  unreachable

40:                                               ; preds = %32
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %30, align 4
  br label %42

42:                                               ; preds = %40, %25
  %43 = phi i32 [ %41, %40 ], [ %31, %25 ]
  %44 = load atomic i32, i32* %26 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %42
  %48 = zext i32 %43 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #9
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !3

54:                                               ; preds = %47
  tail call void @llvm.trap() #9
  unreachable

55:                                               ; preds = %47
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %30, align 4
  br label %57

57:                                               ; preds = %55, %42
  %58 = phi i32 [ %56, %55 ], [ %43, %42 ]
  %59 = load atomic i32, i32* %26 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = add i32 %58, -1
  store i32 %63, i32* %30, align 4
  br label %64

64:                                               ; preds = %62, %57
  %65 = phi i32 [ %63, %62 ], [ %58, %57 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #9
  br label %68

68:                                               ; preds = %19, %64, %67
  %69 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i8** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %70, align 8
  %71 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %5)
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %72, align 8
  %73 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %74 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %74, i64 3
  %76 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %75, align 8
  call void %76(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #9
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %68
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #9
  br label %92

92:                                               ; preds = %68, %88, %91
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #9
  br label %108

108:                                              ; preds = %92, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %109

109:                                              ; preds = %108, %16, %15
  %110 = phi %"class.blink::CSSUnitValue"* [ null, %15 ], [ null, %108 ], [ %17, %16 ]
  ret %"class.blink::CSSUnitValue"* %110
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSUnitValue"* @_ZNK5blink15CSSNumericValue2toENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::CSSNumericValue"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.absl::optional", align 8
  %4 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 24, i1 false)
  %5 = bitcast %"class.blink::CSSNumericValue"* %0 to void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)***
  %6 = load void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)**, void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)*, void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)** %6, i64 16
  %8 = load void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)*, void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)** %7, align 8
  call void %8(%"class.absl::optional"* nonnull sret %3, %"class.blink::CSSNumericValue"* %0) #9
  %9 = load i8, i8* %4, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %101, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %68

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = call dereferenceable(32) %"struct.blink::CSSNumericSumValue::Term"* @_ZNK3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.28"* %16, i32 0) #9
  %18 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %17, i64 0, i32 1, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  switch i32 %19, label %68 [
    i32 0, label %20
    i32 1, label %24
  ]

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %17, i64 0, i32 0
  %22 = load double, double* %21, align 8
  %23 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %22, i32 1) #9
  br label %63

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %17, i64 0, i32 1, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %17, i64 0, i32 1, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %29
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %24, %38
  %33 = phi %"struct.WTF::KeyValuePair"* [ %39, %38 ], [ %26, %24 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = or i32 %35, 1
  %37 = icmp eq i32 %36, -127
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 1
  %40 = icmp eq %"struct.WTF::KeyValuePair"* %39, %30
  br i1 %40, label %41, label %32

41:                                               ; preds = %38, %32, %24
  %42 = phi %"struct.WTF::KeyValuePair"* [ %26, %24 ], [ %33, %32 ], [ %30, %38 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %68

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %17, i64 0, i32 0
  %48 = load double, double* %47, align 8
  br i1 %31, label %58, label %49

49:                                               ; preds = %46, %55
  %50 = phi %"struct.WTF::KeyValuePair"* [ %56, %55 ], [ %26, %46 ]
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = or i32 %52, 1
  %54 = icmp eq i32 %53, -127
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 1
  %57 = icmp eq %"struct.WTF::KeyValuePair"* %56, %30
  br i1 %57, label %58, label %49

58:                                               ; preds = %55, %49, %46
  %59 = phi %"struct.WTF::KeyValuePair"* [ %26, %46 ], [ %50, %49 ], [ %30, %55 ]
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %48, i32 %61) #9
  br label %63

63:                                               ; preds = %20, %58
  %64 = phi %"class.blink::CSSUnitValue"* [ %23, %20 ], [ %62, %58 ]
  %65 = icmp eq %"class.blink::CSSUnitValue"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = call %"class.blink::CSSUnitValue"* @_ZNK5blink12CSSUnitValue9ConvertToENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::CSSUnitValue"* nonnull %64, i32 %1) #9
  br label %68

68:                                               ; preds = %15, %41, %66, %63, %11
  %69 = phi %"class.blink::CSSUnitValue"* [ null, %15 ], [ null, %41 ], [ null, %63 ], [ %67, %66 ], [ null, %11 ]
  %70 = load i8, i8* %4, align 8
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %101, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %74 = getelementptr inbounds %"struct.blink::CSSNumericSumValue", %"struct.blink::CSSNumericSumValue"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %74, align 8
  %76 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %75, null
  br i1 %76, label %100, label %77, !prof !4

77:                                               ; preds = %72
  %78 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %75 to i8*
  %79 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %98, label %82, !prof !3

82:                                               ; preds = %77
  %83 = zext i32 %80 to i64
  %84 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %75, i64 %83
  br label %85

85:                                               ; preds = %92, %82
  %86 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %93, %92 ], [ %75, %82 ]
  %87 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %86, i64 0, i32 1, i32 0, i32 0
  %88 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %87, align 8
  %89 = icmp eq %"struct.WTF::KeyValuePair"* %88, null
  br i1 %89, label %92, label %90, !prof !4

90:                                               ; preds = %85
  %91 = bitcast %"struct.WTF::KeyValuePair"* %88 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %91) #9
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %87, align 8
  br label %92

92:                                               ; preds = %90, %85
  %93 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %86, i64 1
  %94 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %93, %84
  br i1 %94, label %95, label %85

95:                                               ; preds = %92
  store i32 0, i32* %79, align 4
  %96 = bitcast %"struct.blink::CSSNumericSumValue"* %73 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %77
  %99 = phi i8* [ %97, %95 ], [ %78, %77 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #9
  store %"struct.blink::CSSNumericSumValue::Term"* null, %"struct.blink::CSSNumericSumValue::Term"** %74, align 8
  br label %100

100:                                              ; preds = %98, %72
  store i8 0, i8* %4, align 8
  br label %101

101:                                              ; preds = %2, %68, %100
  %102 = phi %"class.blink::CSSUnitValue"* [ %69, %68 ], [ %69, %100 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret %"class.blink::CSSUnitValue"* %102
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.335", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.335", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #9
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #9
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #9
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %28) #9
  %29 = bitcast %"class.WTF::StringTypeAdapter.335"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #9
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.335", %"class.WTF::StringTypeAdapter.335"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.335", %"class.WTF::StringTypeAdapter.335"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #9
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.335"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %25) #9
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.335", %"class.WTF::StringTypeAdapter.335"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.336"* nonnull %47, i8* %50) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #9
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %59
  call void @llvm.trap() #9
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #9
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #9
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #9
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %89) #9
  %90 = bitcast %"class.WTF::StringTypeAdapter.335"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #9
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.335", %"class.WTF::StringTypeAdapter.335"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.335", %"class.WTF::StringTypeAdapter.335"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #9
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.335"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %86) #9
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.335", %"class.WTF::StringTypeAdapter.335"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.336"* nonnull %108, i16* %111) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #9
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #9
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !3

127:                                              ; preds = %120
  call void @llvm.trap() #9
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #9
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #9
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

declare %"class.blink::CSSUnitValue"* @_ZNK5blink12CSSUnitValue9ConvertToENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::CSSUnitValue"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathSum"* @_ZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEERNS_14ExceptionStateE(%"class.blink::CSSNumericValue"*, %"class.WTF::Vector.9"* nocapture readonly dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.absl::optional", align 8
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.blink::CSSUnitValue"*, align 8
  %7 = alloca %"class.blink::HeapVector", align 8
  %8 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %9 = alloca %"class.blink::HeapVector", align 8
  %10 = alloca %"class.blink::CSSUnitValue"*, align 8
  %11 = alloca %"class.blink::HeapVector", align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::String"*, %"class.WTF::String"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %1, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %34, label %19

19:                                               ; preds = %3, %30
  %20 = phi %"class.WTF::String"* [ %31, %30 ], [ %13, %3 ]
  %21 = tail call i32 @_ZN5blink15CSSNumericValue12UnitFromNameERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %20)
  %22 = icmp eq i32 %21, 18
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = add i32 %21, -1
  %25 = icmp ult i32 %24, 2
  %26 = add i32 %21, -3
  %27 = icmp ult i32 %26, 16
  %28 = or i1 %25, %27
  br i1 %28, label %30, label %29

29:                                               ; preds = %23
  switch i32 %21, label %33 [
    i32 32, label %30
    i32 29, label %30
    i32 28, label %30
    i32 27, label %30
    i32 26, label %30
    i32 25, label %30
    i32 24, label %30
    i32 23, label %30
    i32 22, label %30
    i32 21, label %30
    i32 20, label %30
    i32 19, label %30
    i32 30, label %30
  ]

30:                                               ; preds = %29, %29, %29, %29, %29, %29, %29, %29, %29, %29, %29, %29, %29, %23
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 1
  %32 = icmp eq %"class.WTF::String"* %31, %17
  br i1 %32, label %34, label %19

33:                                               ; preds = %29, %19
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %305

34:                                               ; preds = %30, %3
  %35 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 24, i1 false)
  %36 = bitcast %"class.blink::CSSNumericValue"* %0 to void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)***
  %37 = load void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)**, void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)*, void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)** %37, i64 16
  %39 = load void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)*, void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)** %38, align 8
  call void %39(%"class.absl::optional"* nonnull sret %4, %"class.blink::CSSNumericValue"* %0) #9
  %40 = load i8, i8* %35, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %34
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0)) #9
  br label %271

43:                                               ; preds = %34
  %44 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #9
  %45 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #9
  %48 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %48, align 8
  %50 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %49, i64 %52
  %54 = icmp eq i32 %51, 0
  br i1 %54, label %132, label %55

55:                                               ; preds = %43
  %56 = bitcast %"class.blink::CSSUnitValue"** %6 to i8*
  %57 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0
  br label %58

58:                                               ; preds = %55, %128
  %59 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %49, %55 ], [ %129, %128 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  store %"class.blink::CSSUnitValue"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSUnitValue"*), %"class.blink::CSSUnitValue"** %6, align 8
  %60 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %59, i64 0, i32 1, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  switch i32 %61, label %105 [
    i32 0, label %62
    i32 1, label %66
  ]

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %59, i64 0, i32 0
  %64 = load double, double* %63, align 8
  %65 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %64, i32 1) #9
  br label %106

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %59, i64 0, i32 1, i32 0, i32 0
  %68 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %67, align 8
  %69 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %59, i64 0, i32 1, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 %71
  %73 = icmp eq i32 %70, 0
  br i1 %73, label %83, label %74

74:                                               ; preds = %66, %80
  %75 = phi %"struct.WTF::KeyValuePair"* [ %81, %80 ], [ %68, %66 ]
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = or i32 %77, 1
  %79 = icmp eq i32 %78, -127
  br i1 %79, label %80, label %83

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 1
  %82 = icmp eq %"struct.WTF::KeyValuePair"* %81, %72
  br i1 %82, label %83, label %74

83:                                               ; preds = %80, %74, %66
  %84 = phi %"struct.WTF::KeyValuePair"* [ %68, %66 ], [ %75, %74 ], [ %72, %80 ]
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %84, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %105

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %59, i64 0, i32 0
  %90 = load double, double* %89, align 8
  br i1 %73, label %100, label %91

91:                                               ; preds = %88, %97
  %92 = phi %"struct.WTF::KeyValuePair"* [ %98, %97 ], [ %68, %88 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = or i32 %94, 1
  %96 = icmp eq i32 %95, -127
  br i1 %96, label %97, label %100

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 1
  %99 = icmp eq %"struct.WTF::KeyValuePair"* %98, %72
  br i1 %99, label %100, label %91

100:                                              ; preds = %97, %91, %88
  %101 = phi %"struct.WTF::KeyValuePair"* [ %68, %88 ], [ %92, %91 ], [ %72, %97 ]
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %90, i32 %103) #9
  br label %106

105:                                              ; preds = %83, %58
  store %"class.blink::CSSUnitValue"* null, %"class.blink::CSSUnitValue"** %6, align 8
  br label %131

106:                                              ; preds = %62, %100
  %107 = phi %"class.blink::CSSUnitValue"* [ %65, %62 ], [ %104, %100 ]
  store %"class.blink::CSSUnitValue"* %107, %"class.blink::CSSUnitValue"** %6, align 8
  %108 = icmp eq %"class.blink::CSSUnitValue"* %107, null
  %109 = ptrtoint %"class.blink::CSSUnitValue"* %107 to i64
  br i1 %108, label %131, label %110

110:                                              ; preds = %106
  %111 = load i32, i32* %47, align 4
  %112 = load i32, i32* %46, align 8
  %113 = icmp eq i32 %111, %112
  br i1 %113, label %127, label %114, !prof !3

114:                                              ; preds = %110
  %115 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %45, align 8
  %116 = zext i32 %111 to i64
  %117 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %115, i64 %116
  %118 = bitcast %"class.blink::Member.25"* %117 to i64*
  store atomic i64 %109, i64* %118 monotonic, align 8
  %119 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %124, label %121

121:                                              ; preds = %114
  %122 = bitcast %"class.blink::CSSUnitValue"* %107 to i8*
  %123 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %122) #9
  br label %124

124:                                              ; preds = %121, %114
  %125 = load i32, i32* %47, align 4
  %126 = add i32 %125, 1
  store i32 %126, i32* %47, align 4
  br label %128

127:                                              ; preds = %110
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_12CSSUnitValueEEEvOT_(%"class.WTF::Vector.39"* nonnull %57, %"class.blink::CSSUnitValue"** nonnull dereferenceable(8) %6) #9
  br label %128

128:                                              ; preds = %124, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  %129 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %59, i64 1
  %130 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %129, %53
  br i1 %130, label %132, label %58

131:                                              ; preds = %106, %105
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0)) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %269

132:                                              ; preds = %128, %43
  %133 = load i32, i32* %14, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %187

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0
  %137 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %45, align 8
  %138 = load i32, i32* %47, align 4
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %137, i64 %139
  call fastcc void @"_ZNSt3__16__sortIRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEvT0_SH_T_"(%"class.blink::Member.25"* %137, %"class.blink::Member.25"* %140) #9
  %141 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.39"* nonnull %141, %"class.WTF::Vector.39"* nonnull dereferenceable(16) %136) #9
  %142 = bitcast %"class.blink::DummyExceptionStateForTesting"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %142) #9
  %143 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %144, align 8
  %145 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %145, align 2
  %146 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 2
  %147 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 5, i32 0, i32 0
  %148 = bitcast %"class.WTF::StringImpl"** %147 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 16, i1 false) #9
  %149 = bitcast i8** %146 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %143, align 8
  %150 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0
  %151 = call %"class.blink::CSSMathSum"* @_ZN5blink10CSSMathSum6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEERNS_14ExceptionStateE(%"class.blink::HeapVector"* nonnull %7, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %150) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %143, align 8
  %152 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 4
  %153 = load i32, i32* %152, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %156, label %155

155:                                              ; preds = %135
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %150) #9
  br label %156

156:                                              ; preds = %135, %155
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %143, align 8
  %157 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %158 = load i64*, i64** %157, align 8
  %159 = icmp eq i64* %158, null
  br i1 %159, label %170, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 3
  %162 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %161, align 8
  %163 = bitcast %"class.v8::Isolate"* %162 to %"class.v8::internal::Isolate"*
  %164 = load i64, i64* %158, align 8
  %165 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %163, i64 %164) #9
  %166 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %162) #9
  br i1 %166, label %170, label %167

167:                                              ; preds = %160
  %168 = bitcast i64* %165 to %"class.v8::Value"*
  %169 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %162, %"class.v8::Value"* %168) #9
  br label %170

170:                                              ; preds = %167, %160, %156
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #9
  br label %186

186:                                              ; preds = %170, %182, %185
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %142) #9
  br label %269

187:                                              ; preds = %132
  %188 = bitcast %"class.blink::HeapVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %188) #9
  %189 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %190 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %191 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %188, i8 0, i64 16, i1 false) #9
  %192 = load %"class.WTF::String"*, %"class.WTF::String"** %12, align 8
  %193 = zext i32 %133 to i64
  %194 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %192, i64 %193
  %195 = bitcast %"class.blink::CSSUnitValue"** %10 to i8*
  %196 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %9, i64 0, i32 0
  br label %211

197:                                              ; preds = %259
  %198 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %45, align 8
  %199 = load i32, i32* %47, align 4
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %198, i64 %200
  %202 = icmp eq i32 %199, 0
  br i1 %202, label %263, label %205

203:                                              ; preds = %205
  %204 = icmp eq %"class.blink::Member.25"* %210, %201
  br i1 %204, label %263, label %205

205:                                              ; preds = %197, %203
  %206 = phi %"class.blink::Member.25"* [ %210, %203 ], [ %198, %197 ]
  %207 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %206, i64 0, i32 0, i32 0
  %208 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %207, align 8, !noalias !5
  %209 = icmp eq %"class.blink::CSSNumericValue"* %208, null
  %210 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %206, i64 1
  br i1 %209, label %203, label %262

211:                                              ; preds = %187, %259
  %212 = phi %"class.WTF::String"* [ %192, %187 ], [ %260, %259 ]
  %213 = call i32 @_ZN5blink15CSSNumericValue12UnitFromNameERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %212)
  %214 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %45, align 8
  %215 = load i32, i32* %47, align 4
  %216 = zext i32 %215 to i64
  %217 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %214, i64 %216
  %218 = icmp eq i32 %215, 0
  br i1 %218, label %238, label %219

219:                                              ; preds = %211, %234
  %220 = phi double [ %235, %234 ], [ 0.000000e+00, %211 ]
  %221 = phi %"class.blink::Member.25"* [ %236, %234 ], [ %214, %211 ]
  %222 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %221, i64 0, i32 0, i32 0
  %223 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %222, align 8
  %224 = icmp eq %"class.blink::CSSNumericValue"* %223, null
  br i1 %224, label %234, label %225

225:                                              ; preds = %219
  %226 = bitcast %"class.blink::CSSNumericValue"* %223 to %"class.blink::CSSUnitValue"*
  %227 = call %"class.blink::CSSUnitValue"* @_ZNK5blink12CSSUnitValue9ConvertToENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::CSSUnitValue"* nonnull %226, i32 %213) #9
  %228 = icmp eq %"class.blink::CSSUnitValue"* %227, null
  br i1 %228, label %234, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %227, i64 0, i32 1
  %231 = load double, double* %230, align 8
  %232 = fadd double %220, %231
  %233 = bitcast %"class.blink::Member.25"* %221 to i64*
  store atomic i64 0, i64* %233 monotonic, align 8
  br label %234

234:                                              ; preds = %229, %225, %219
  %235 = phi double [ %220, %219 ], [ %232, %229 ], [ %220, %225 ]
  %236 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %221, i64 1
  %237 = icmp eq %"class.blink::Member.25"* %236, %217
  br i1 %237, label %238, label %219

238:                                              ; preds = %234, %211
  %239 = phi double [ 0.000000e+00, %211 ], [ %235, %234 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #9
  %240 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %239, i32 %213) #9
  store %"class.blink::CSSUnitValue"* %240, %"class.blink::CSSUnitValue"** %10, align 8
  %241 = load i32, i32* %191, align 4
  %242 = load i32, i32* %190, align 8
  %243 = icmp eq i32 %241, %242
  br i1 %243, label %258, label %244, !prof !3

244:                                              ; preds = %238
  %245 = ptrtoint %"class.blink::CSSUnitValue"* %240 to i64
  %246 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %189, align 8
  %247 = zext i32 %241 to i64
  %248 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %246, i64 %247
  %249 = bitcast %"class.blink::Member.25"* %248 to i64*
  store atomic i64 %245, i64* %249 monotonic, align 8
  %250 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %255, label %252

252:                                              ; preds = %244
  %253 = bitcast %"class.blink::CSSUnitValue"* %240 to i8*
  %254 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %253) #9
  br label %255

255:                                              ; preds = %252, %244
  %256 = load i32, i32* %191, align 4
  %257 = add i32 %256, 1
  store i32 %257, i32* %191, align 4
  br label %259

258:                                              ; preds = %238
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_12CSSUnitValueEEEvOT_(%"class.WTF::Vector.39"* nonnull %196, %"class.blink::CSSUnitValue"** nonnull dereferenceable(8) %10) #9
  br label %259

259:                                              ; preds = %255, %258
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #9
  %260 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %212, i64 1
  %261 = icmp eq %"class.WTF::String"* %260, %194
  br i1 %261, label %197, label %211

262:                                              ; preds = %205
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.7, i64 0, i64 0)) #9
  br label %267

263:                                              ; preds = %203, %197
  %264 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %11, i64 0, i32 0
  %265 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %9, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.39"* nonnull %264, %"class.WTF::Vector.39"* nonnull dereferenceable(16) %265) #9
  %266 = call %"class.blink::CSSMathSum"* @_ZN5blink10CSSMathSum6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEERNS_14ExceptionStateE(%"class.blink::HeapVector"* nonnull %11, %"class.blink::ExceptionState"* dereferenceable(72) %2) #9
  br label %267

267:                                              ; preds = %263, %262
  %268 = phi %"class.blink::CSSMathSum"* [ null, %262 ], [ %266, %263 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %188) #9
  br label %269

269:                                              ; preds = %131, %267, %186
  %270 = phi %"class.blink::CSSMathSum"* [ %151, %186 ], [ %268, %267 ], [ null, %131 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9
  br label %271

271:                                              ; preds = %269, %42
  %272 = phi %"class.blink::CSSMathSum"* [ %270, %269 ], [ null, %42 ]
  %273 = load i8, i8* %35, align 8, !range !2
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %304, label %275

275:                                              ; preds = %271
  %276 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %277 = getelementptr inbounds %"struct.blink::CSSNumericSumValue", %"struct.blink::CSSNumericSumValue"* %276, i64 0, i32 0, i32 0, i32 0, i32 0
  %278 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %277, align 8
  %279 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %278, null
  br i1 %279, label %303, label %280, !prof !4

280:                                              ; preds = %275
  %281 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %278 to i8*
  %282 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %283 = load i32, i32* %282, align 4
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %301, label %285, !prof !3

285:                                              ; preds = %280
  %286 = zext i32 %283 to i64
  %287 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %278, i64 %286
  br label %288

288:                                              ; preds = %295, %285
  %289 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %296, %295 ], [ %278, %285 ]
  %290 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %289, i64 0, i32 1, i32 0, i32 0
  %291 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %290, align 8
  %292 = icmp eq %"struct.WTF::KeyValuePair"* %291, null
  br i1 %292, label %295, label %293, !prof !4

293:                                              ; preds = %288
  %294 = bitcast %"struct.WTF::KeyValuePair"* %291 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %294) #9
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %290, align 8
  br label %295

295:                                              ; preds = %293, %288
  %296 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %289, i64 1
  %297 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %296, %287
  br i1 %297, label %298, label %288

298:                                              ; preds = %295
  store i32 0, i32* %282, align 4
  %299 = bitcast %"struct.blink::CSSNumericSumValue"* %276 to i8**
  %300 = load i8*, i8** %299, align 8
  br label %301

301:                                              ; preds = %298, %280
  %302 = phi i8* [ %300, %298 ], [ %281, %280 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %302) #9
  store %"struct.blink::CSSNumericSumValue::Term"* null, %"struct.blink::CSSNumericSumValue::Term"** %277, align 8
  br label %303

303:                                              ; preds = %301, %275
  store i8 0, i8* %35, align 8
  br label %304

304:                                              ; preds = %271, %303
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #9
  br label %305

305:                                              ; preds = %33, %304
  %306 = phi %"class.blink::CSSMathSum"* [ %272, %304 ], [ null, %33 ]
  ret %"class.blink::CSSMathSum"* %306
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #4

declare %"class.blink::CSSMathSum"* @_ZN5blink10CSSMathSum6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEERNS_14ExceptionStateE(%"class.blink::HeapVector"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSNumericType"* @_ZNK5blink15CSSNumericValue4typeEv(%"class.blink::CSSNumericValue"*) local_unnamed_addr #1 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 56) #9
  %3 = bitcast i8* %2 to %"class.blink::CSSNumericType"*
  tail call void @_ZN5blink14CSSNumericTypeC1Ev(%"class.blink::CSSNumericType"* %3) #9
  %4 = getelementptr inbounds i8, i8* %2, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  %8 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 0
  %9 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj7ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 0) #9
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds i8, i8* %2, i64 28
  %14 = bitcast i8* %13 to i32*
  store i32 %10, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %2, i64 11
  store i8 1, i8* %15, align 1
  br label %16

16:                                               ; preds = %1, %12
  %17 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj7ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 1) #9
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds i8, i8* %2, i64 16
  %22 = bitcast i8* %21 to i32*
  store i32 %18, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %2, i64 8
  store i8 1, i8* %23, align 8
  br label %24

24:                                               ; preds = %16, %20
  %25 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj7ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 2) #9
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds i8, i8* %2, i64 52
  %30 = bitcast i8* %29 to i32*
  store i32 %26, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %2, i64 14
  store i8 1, i8* %31, align 2
  br label %32

32:                                               ; preds = %24, %28
  %33 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj7ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 3) #9
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds i8, i8* %2, i64 24
  %38 = bitcast i8* %37 to i32*
  store i32 %34, i32* %38, align 8
  %39 = getelementptr inbounds i8, i8* %2, i64 10
  store i8 1, i8* %39, align 2
  br label %40

40:                                               ; preds = %32, %36
  %41 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj7ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 4) #9
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds i8, i8* %2, i64 48
  %46 = bitcast i8* %45 to i32*
  store i32 %42, i32* %46, align 8
  %47 = getelementptr inbounds i8, i8* %2, i64 13
  store i8 1, i8* %47, align 1
  br label %48

48:                                               ; preds = %40, %44
  %49 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj7ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 5) #9
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds i8, i8* %2, i64 20
  %54 = bitcast i8* %53 to i32*
  store i32 %50, i32* %54, align 4
  %55 = getelementptr inbounds i8, i8* %2, i64 9
  store i8 1, i8* %55, align 1
  br label %56

56:                                               ; preds = %48, %52
  %57 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj7ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 6) #9
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds i8, i8* %2, i64 32
  %62 = bitcast i8* %61 to i32*
  store i32 %58, i32* %62, align 8
  %63 = getelementptr inbounds i8, i8* %2, i64 12
  store i8 1, i8* %63, align 4
  br label %64

64:                                               ; preds = %56, %60
  %65 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 2
  %66 = load i8, i8* %65, align 4, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %124, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = tail call %"class.WTF::StringImpl"* @_ZN5blink19CSSNumericValueType16BaseTypeToStringENS0_8BaseTypeE(i32 %70) #9
  %72 = getelementptr inbounds i8, i8* %2, i64 40
  %73 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %73, label %91, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #9
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !3

88:                                               ; preds = %79
  tail call void @llvm.trap() #9
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %89, %74, %68
  %92 = ptrtoint %"class.WTF::StringImpl"* %71 to i64
  %93 = bitcast i8* %72 to i64*
  %94 = bitcast i8* %72 to %"class.WTF::StringImpl"**
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  store i64 %92, i64* %93, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #9
  br label %110

110:                                              ; preds = %91, %106, %109
  br i1 %73, label %124, label %111

111:                                              ; preds = %110
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #9
  br label %124

124:                                              ; preds = %64, %123, %120, %110
  ret %"class.blink::CSSNumericType"* %3
}

declare %"class.WTF::StringImpl"* @_ZN5blink19CSSNumericValueType16BaseTypeToStringENS0_8BaseTypeE(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSNumericValue"* @_ZN5blink15CSSNumericValue3addERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEERNS_14ExceptionStateE(%"class.blink::CSSNumericValue"*, %"class.blink::HeapVector.48"* nocapture readonly dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::CSSNumericValue"*, align 8
  %5 = alloca %"class.blink::CSSNumericValue"*, align 8
  %6 = alloca %"class.blink::HeapVector", align 8
  %7 = alloca %"struct.std::__1::plus", align 1
  %8 = alloca %"class.blink::HeapVector", align 8
  %9 = bitcast %"class.blink::HeapVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #9, !alias.scope !8
  %13 = getelementptr inbounds %"class.blink::HeapVector.48", %"class.blink::HeapVector.48"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Member.54"*, %"class.blink::Member.54"** %13, align 8, !noalias !8
  %15 = getelementptr inbounds %"class.blink::HeapVector.48", %"class.blink::HeapVector.48"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4, !noalias !8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %14, i64 %17
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %61, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  %22 = bitcast %"class.blink::CSSNumericValue"** %5 to i8*
  br label %23

23:                                               ; preds = %58, %20
  %24 = phi %"class.blink::Member.54"* [ %14, %20 ], [ %59, %58 ]
  %25 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::V8UnionCSSNumericValueOrDouble"*, %"class.blink::V8UnionCSSNumericValueOrDouble"** %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9, !noalias !8
  %27 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %35

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %26, i64 0, i32 3
  %32 = load double, double* %31, align 8
  %33 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %32, i32 1) #9
  %34 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %33, i64 0, i32 0
  br label %38

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %26, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %36, align 8
  br label %38

38:                                               ; preds = %35, %30
  %39 = phi %"class.blink::CSSNumericValue"* [ %34, %30 ], [ %37, %35 ]
  store %"class.blink::CSSNumericValue"* %39, %"class.blink::CSSNumericValue"** %5, align 8, !noalias !8
  %40 = load i32, i32* %12, align 4, !alias.scope !8
  %41 = load i32, i32* %11, align 8, !alias.scope !8
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %57, label %43, !prof !3

43:                                               ; preds = %38
  %44 = ptrtoint %"class.blink::CSSNumericValue"* %39 to i64
  %45 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %10, align 8, !alias.scope !8
  %46 = zext i32 %40 to i64
  %47 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %45, i64 %46
  %48 = bitcast %"class.blink::Member.25"* %47 to i64*
  store atomic i64 %44, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %43
  %52 = bitcast %"class.blink::CSSNumericValue"* %39 to i8*
  %53 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #9
  br label %54

54:                                               ; preds = %51, %43
  %55 = load i32, i32* %12, align 4, !alias.scope !8
  %56 = add i32 %55, 1
  store i32 %56, i32* %12, align 4, !alias.scope !8
  br label %58

57:                                               ; preds = %38
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.39"* nonnull %21, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %5) #9
  br label %58

58:                                               ; preds = %57, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9, !noalias !8
  %59 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %24, i64 1
  %60 = icmp eq %"class.blink::Member.54"* %59, %18
  br i1 %60, label %61, label %23

61:                                               ; preds = %58, %3
  %62 = bitcast %"class.blink::CSSNumericValue"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  store %"class.blink::CSSNumericValue"* %0, %"class.blink::CSSNumericValue"** %4, align 8
  %63 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 0
  %64 = bitcast %"class.blink::CSSNumericValue"* %0 to i32 (%"class.blink::CSSStyleValue"*)***
  %65 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %65, i64 9
  %67 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %66, align 8
  %68 = call i32 %67(%"class.blink::CSSStyleValue"* %63) #9
  %69 = icmp eq i32 %68, 4
  %70 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  br i1 %69, label %71, label %79

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 1
  %73 = bitcast %"class.blink::CSSNumericValue"* %72 to %"class.blink::CSSNumericArray"**
  %74 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %74, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %76 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %74, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE6insertIS4_EEvjPKT_j(%"class.WTF::Vector.39"* nonnull %70, i32 0, %"class.blink::Member.25"* %76, i32 %78) #9
  br label %80

79:                                               ; preds = %61
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.39"* nonnull %70, i32 0, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %4) #9
  br label %80

80:                                               ; preds = %71, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  %81 = getelementptr inbounds %"struct.std::__1::plus", %"struct.std::__1::plus"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %81) #9
  %82 = call fastcc %"class.blink::CSSUnitValue"* @_ZN5blink12_GLOBAL__N_124MaybeSimplifyAsUnitValueINSt3__14plusIdEEEEPNS_12CSSUnitValueERKNS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEERKT_(%"class.blink::HeapVector"* nonnull dereferenceable(16) %6, %"struct.std::__1::plus"* nonnull dereferenceable(1) %7)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %81) #9
  %83 = icmp eq %"class.blink::CSSUnitValue"* %82, null
  %84 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %82, i64 0, i32 0
  br i1 %83, label %85, label %109

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %87 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  %88 = bitcast %"class.blink::HeapVector"* %6 to i64*
  %89 = bitcast %"class.blink::HeapVector"* %8 to i64*
  store i64 0, i64* %89, align 8
  %90 = load i64, i64* %88, align 8
  %91 = bitcast %"class.blink::HeapVector"* %8 to i64*
  store atomic i64 0, i64* %88 monotonic, align 8
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load i32, i32* %11, align 8
  store i32 %92, i32* %86, align 8
  store i32 0, i32* %11, align 8
  %93 = load i32, i32* %12, align 4
  store i32 %93, i32* %87, align 4
  store i32 0, i32* %12, align 4
  %94 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %85
  %97 = inttoptr i64 %90 to i8*
  %98 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %97) #9
  br label %99

99:                                               ; preds = %96, %85
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %99
  %103 = bitcast %"class.blink::HeapVector"* %6 to i8**
  %104 = load i8*, i8** %103, align 8
  %105 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %104) #9
  br label %106

106:                                              ; preds = %99, %102
  %107 = call %"class.blink::CSSMathSum"* @_ZN5blink10CSSMathSum6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEERNS_14ExceptionStateE(%"class.blink::HeapVector"* nonnull %8, %"class.blink::ExceptionState"* dereferenceable(72) %2) #9
  %108 = getelementptr inbounds %"class.blink::CSSMathSum", %"class.blink::CSSMathSum"* %107, i64 0, i32 0, i32 0, i32 0
  br label %109

109:                                              ; preds = %80, %106
  %110 = phi %"class.blink::CSSNumericValue"* [ %108, %106 ], [ %84, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret %"class.blink::CSSNumericValue"* %110
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE(%"class.blink::HeapVector"* noalias sret, %"class.blink::HeapVector.48"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 {
  %3 = alloca %"class.blink::CSSNumericValue"*, align 8
  %4 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.blink::HeapVector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #9
  %8 = getelementptr inbounds %"class.blink::HeapVector.48", %"class.blink::HeapVector.48"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.54"*, %"class.blink::Member.54"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HeapVector.48", %"class.blink::HeapVector.48"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %17 = bitcast %"class.blink::CSSNumericValue"** %3 to i8*
  br label %19

18:                                               ; preds = %54, %2
  ret void

19:                                               ; preds = %15, %54
  %20 = phi %"class.blink::Member.54"* [ %9, %15 ], [ %55, %54 ]
  %21 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::V8UnionCSSNumericValueOrDouble"*, %"class.blink::V8UnionCSSNumericValueOrDouble"** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %23 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %31

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %22, i64 0, i32 3
  %28 = load double, double* %27, align 8
  %29 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %28, i32 1) #9
  %30 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %29, i64 0, i32 0
  br label %34

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %22, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %32, align 8
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi %"class.blink::CSSNumericValue"* [ %30, %26 ], [ %33, %31 ]
  store %"class.blink::CSSNumericValue"* %35, %"class.blink::CSSNumericValue"** %3, align 8
  %36 = load i32, i32* %6, align 4
  %37 = load i32, i32* %5, align 8
  %38 = icmp eq i32 %36, %37
  br i1 %38, label %53, label %39, !prof !3

39:                                               ; preds = %34
  %40 = ptrtoint %"class.blink::CSSNumericValue"* %35 to i64
  %41 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %4, align 8
  %42 = zext i32 %36 to i64
  %43 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %41, i64 %42
  %44 = bitcast %"class.blink::Member.25"* %43 to i64*
  store atomic i64 %40, i64* %44 monotonic, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.blink::CSSNumericValue"* %35 to i8*
  %49 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %39
  %51 = load i32, i32* %6, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %6, align 4
  br label %54

53:                                               ; preds = %34
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.39"* %16, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %3) #9
  br label %54

54:                                               ; preds = %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %55 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %20, i64 1
  %56 = icmp eq %"class.blink::Member.54"* %55, %13
  br i1 %56, label %18, label %19
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::CSSUnitValue"* @_ZN5blink12_GLOBAL__N_124MaybeSimplifyAsUnitValueINSt3__14plusIdEEEEPNS_12CSSUnitValueERKNS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEERKT_(%"class.blink::HeapVector"* dereferenceable(16), %"struct.std::__1::plus"* nocapture readnone dereferenceable(1)) unnamed_addr #1 {
  %3 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %4 = tail call dereferenceable(8) %"class.blink::Member.25"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.39"* %3, i32 0) #9
  %5 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %5, align 8
  %7 = icmp eq %"class.blink::CSSNumericValue"* %6, null
  br i1 %7, label %60, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %6, i64 0, i32 0
  %10 = bitcast %"class.blink::CSSNumericValue"* %6 to i32 (%"class.blink::CSSStyleValue"*)***
  %11 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %11, i64 9
  %13 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::CSSStyleValue"* %9) #9
  %15 = icmp eq i32 %14, 3
  br i1 %15, label %16, label %60

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %6, i64 1
  %18 = bitcast %"class.blink::CSSNumericValue"* %17 to double*
  %19 = load double, double* %18, align 8
  %20 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp ugt i32 %21, 1
  %23 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %6, i64 1, i32 0, i32 0, i32 1
  %24 = bitcast %"class.blink::TraceWrapperV8Reference"* %23 to i32*
  br i1 %22, label %27, label %25

25:                                               ; preds = %16
  %26 = load i32, i32* %24, align 8
  br label %56

27:                                               ; preds = %16, %48
  %28 = phi i32 [ %53, %48 ], [ 1, %16 ]
  %29 = phi double [ %52, %48 ], [ %19, %16 ]
  %30 = tail call dereferenceable(8) %"class.blink::Member.25"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.39"* %3, i32 %28) #9
  %31 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %31, align 8
  %33 = icmp eq %"class.blink::CSSNumericValue"* %32, null
  br i1 %33, label %60, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %32, i64 0, i32 0
  %36 = bitcast %"class.blink::CSSNumericValue"* %32 to i32 (%"class.blink::CSSStyleValue"*)***
  %37 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %36, align 8
  %38 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %37, i64 9
  %39 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %38, align 8
  %40 = tail call i32 %39(%"class.blink::CSSStyleValue"* %35) #9
  %41 = icmp eq i32 %40, 3
  br i1 %41, label %42, label %60

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %32, i64 1, i32 0, i32 0, i32 1
  %44 = bitcast %"class.blink::TraceWrapperV8Reference"* %43 to i32*
  %45 = load i32, i32* %44, align 8
  %46 = load i32, i32* %24, align 8
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %60

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %32, i64 1
  %50 = bitcast %"class.blink::CSSNumericValue"* %49 to double*
  %51 = load double, double* %50, align 8
  %52 = fadd double %29, %51
  %53 = add nuw i32 %28, 1
  %54 = load i32, i32* %20, align 4
  %55 = icmp ult i32 %53, %54
  br i1 %55, label %27, label %56

56:                                               ; preds = %48, %25
  %57 = phi i32 [ %26, %25 ], [ %45, %48 ]
  %58 = phi double [ %19, %25 ], [ %52, %48 ]
  %59 = tail call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %58, i32 %57) #9
  br label %60

60:                                               ; preds = %34, %27, %42, %8, %2, %56
  %61 = phi %"class.blink::CSSUnitValue"* [ %59, %56 ], [ null, %8 ], [ null, %2 ], [ null, %42 ], [ null, %27 ], [ null, %34 ]
  ret %"class.blink::CSSUnitValue"* %61
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSNumericValue"* @_ZN5blink15CSSNumericValue3subERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEERNS_14ExceptionStateE(%"class.blink::CSSNumericValue"*, %"class.blink::HeapVector.48"* nocapture readonly dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::CSSNumericValue"*, align 8
  %5 = alloca %"class.blink::CSSNumericValue"*, align 8
  %6 = alloca %"class.blink::HeapVector", align 8
  %7 = alloca %"struct.std::__1::plus", align 1
  %8 = alloca %"class.blink::HeapVector", align 8
  %9 = bitcast %"class.blink::HeapVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #9, !alias.scope !11
  %13 = getelementptr inbounds %"class.blink::HeapVector.48", %"class.blink::HeapVector.48"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Member.54"*, %"class.blink::Member.54"** %13, align 8, !noalias !11
  %15 = getelementptr inbounds %"class.blink::HeapVector.48", %"class.blink::HeapVector.48"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4, !noalias !11
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %14, i64 %17
  %19 = icmp eq i32 %16, 0
  %20 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  br i1 %19, label %87, label %21

21:                                               ; preds = %3
  %22 = bitcast %"class.blink::CSSNumericValue"** %5 to i8*
  br label %23

23:                                               ; preds = %58, %21
  %24 = phi %"class.blink::Member.54"* [ %14, %21 ], [ %59, %58 ]
  %25 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::V8UnionCSSNumericValueOrDouble"*, %"class.blink::V8UnionCSSNumericValueOrDouble"** %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9, !noalias !11
  %27 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %35

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %26, i64 0, i32 3
  %32 = load double, double* %31, align 8
  %33 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %32, i32 1) #9
  %34 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %33, i64 0, i32 0
  br label %38

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %26, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %36, align 8
  br label %38

38:                                               ; preds = %35, %30
  %39 = phi %"class.blink::CSSNumericValue"* [ %34, %30 ], [ %37, %35 ]
  store %"class.blink::CSSNumericValue"* %39, %"class.blink::CSSNumericValue"** %5, align 8, !noalias !11
  %40 = load i32, i32* %12, align 4, !alias.scope !11
  %41 = load i32, i32* %11, align 8, !alias.scope !11
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %57, label %43, !prof !3

43:                                               ; preds = %38
  %44 = ptrtoint %"class.blink::CSSNumericValue"* %39 to i64
  %45 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %10, align 8, !alias.scope !11
  %46 = zext i32 %40 to i64
  %47 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %45, i64 %46
  %48 = bitcast %"class.blink::Member.25"* %47 to i64*
  store atomic i64 %44, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %43
  %52 = bitcast %"class.blink::CSSNumericValue"* %39 to i8*
  %53 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #9
  br label %54

54:                                               ; preds = %51, %43
  %55 = load i32, i32* %12, align 4, !alias.scope !11
  %56 = add i32 %55, 1
  store i32 %56, i32* %12, align 4, !alias.scope !11
  br label %58

57:                                               ; preds = %38
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.39"* nonnull %20, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %5) #9
  br label %58

58:                                               ; preds = %57, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9, !noalias !11
  %59 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %24, i64 1
  %60 = icmp eq %"class.blink::Member.54"* %59, %18
  br i1 %60, label %61, label %23

61:                                               ; preds = %58
  %62 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %10, align 8
  %63 = load i32, i32* %12, align 4
  %64 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  %65 = zext i32 %63 to i64
  %66 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %62, i64 %65
  %67 = icmp eq i32 %63, 0
  br i1 %67, label %87, label %68

68:                                               ; preds = %61, %84
  %69 = phi %"class.blink::Member.25"* [ %85, %84 ], [ %62, %61 ]
  %70 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %70, align 8
  %72 = bitcast %"class.blink::CSSNumericValue"* %71 to %"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)***
  %73 = load %"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)**, %"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)*** %72, align 8
  %74 = getelementptr inbounds %"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)*, %"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)** %73, i64 13
  %75 = load %"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)*, %"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)** %74, align 8
  %76 = call %"class.blink::CSSNumericValue"* %75(%"class.blink::CSSNumericValue"* %71) #9
  %77 = ptrtoint %"class.blink::CSSNumericValue"* %76 to i64
  %78 = bitcast %"class.blink::Member.25"* %69 to i64*
  store atomic i64 %77, i64* %78 monotonic, align 8
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %68
  %82 = bitcast %"class.blink::CSSNumericValue"* %76 to i8*
  %83 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %82) #9
  br label %84

84:                                               ; preds = %81, %68
  %85 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %69, i64 1
  %86 = icmp eq %"class.blink::Member.25"* %85, %66
  br i1 %86, label %87, label %68

87:                                               ; preds = %84, %3, %61
  %88 = phi %"class.WTF::Vector.39"* [ %64, %61 ], [ %20, %3 ], [ %64, %84 ]
  %89 = bitcast %"class.blink::CSSNumericValue"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89)
  store %"class.blink::CSSNumericValue"* %0, %"class.blink::CSSNumericValue"** %4, align 8
  %90 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 0
  %91 = bitcast %"class.blink::CSSNumericValue"* %0 to i32 (%"class.blink::CSSStyleValue"*)***
  %92 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %91, align 8
  %93 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %92, i64 9
  %94 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %93, align 8
  %95 = call i32 %94(%"class.blink::CSSStyleValue"* %90) #9
  %96 = icmp eq i32 %95, 4
  br i1 %96, label %97, label %105

97:                                               ; preds = %87
  %98 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 1
  %99 = bitcast %"class.blink::CSSNumericValue"* %98 to %"class.blink::CSSNumericArray"**
  %100 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %100, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %102 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %100, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %104 = load i32, i32* %103, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE6insertIS4_EEvjPKT_j(%"class.WTF::Vector.39"* nonnull %88, i32 0, %"class.blink::Member.25"* %102, i32 %104) #9
  br label %106

105:                                              ; preds = %87
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.39"* nonnull %88, i32 0, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %4) #9
  br label %106

106:                                              ; preds = %97, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  %107 = getelementptr inbounds %"struct.std::__1::plus", %"struct.std::__1::plus"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %107) #9
  %108 = call fastcc %"class.blink::CSSUnitValue"* @_ZN5blink12_GLOBAL__N_124MaybeSimplifyAsUnitValueINSt3__14plusIdEEEEPNS_12CSSUnitValueERKNS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEERKT_(%"class.blink::HeapVector"* nonnull dereferenceable(16) %6, %"struct.std::__1::plus"* nonnull dereferenceable(1) %7)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %107) #9
  %109 = icmp eq %"class.blink::CSSUnitValue"* %108, null
  %110 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %108, i64 0, i32 0
  br i1 %109, label %111, label %135

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %113 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  %114 = bitcast %"class.blink::HeapVector"* %6 to i64*
  %115 = bitcast %"class.blink::HeapVector"* %8 to i64*
  store i64 0, i64* %115, align 8
  %116 = load i64, i64* %114, align 8
  %117 = bitcast %"class.blink::HeapVector"* %8 to i64*
  store atomic i64 0, i64* %114 monotonic, align 8
  store atomic i64 %116, i64* %117 monotonic, align 8
  %118 = load i32, i32* %11, align 8
  store i32 %118, i32* %112, align 8
  store i32 0, i32* %11, align 8
  %119 = load i32, i32* %12, align 4
  store i32 %119, i32* %113, align 4
  store i32 0, i32* %12, align 4
  %120 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %111
  %123 = inttoptr i64 %116 to i8*
  %124 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %123) #9
  br label %125

125:                                              ; preds = %122, %111
  %126 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %125
  %129 = bitcast %"class.blink::HeapVector"* %6 to i8**
  %130 = load i8*, i8** %129, align 8
  %131 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %130) #9
  br label %132

132:                                              ; preds = %125, %128
  %133 = call %"class.blink::CSSMathSum"* @_ZN5blink10CSSMathSum6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEERNS_14ExceptionStateE(%"class.blink::HeapVector"* nonnull %8, %"class.blink::ExceptionState"* dereferenceable(72) %2) #9
  %134 = getelementptr inbounds %"class.blink::CSSMathSum", %"class.blink::CSSMathSum"* %133, i64 0, i32 0, i32 0, i32 0
  br label %135

135:                                              ; preds = %106, %132
  %136 = phi %"class.blink::CSSNumericValue"* [ %134, %132 ], [ %110, %106 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret %"class.blink::CSSNumericValue"* %136
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSNumericValue"* @_ZN5blink15CSSNumericValue3mulERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEERNS_14ExceptionStateE(%"class.blink::CSSNumericValue"*, %"class.blink::HeapVector.48"* nocapture readonly dereferenceable(16), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::CSSNumericValue"*, align 8
  %5 = alloca %"class.blink::CSSNumericValue"*, align 8
  %6 = alloca %"class.blink::HeapVector", align 8
  %7 = alloca %"class.blink::HeapVector", align 8
  %8 = bitcast %"class.blink::HeapVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #9, !alias.scope !14
  %12 = getelementptr inbounds %"class.blink::HeapVector.48", %"class.blink::HeapVector.48"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Member.54"*, %"class.blink::Member.54"** %12, align 8, !noalias !14
  %14 = getelementptr inbounds %"class.blink::HeapVector.48", %"class.blink::HeapVector.48"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4, !noalias !14
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %60, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  %21 = bitcast %"class.blink::CSSNumericValue"** %5 to i8*
  br label %22

22:                                               ; preds = %57, %19
  %23 = phi %"class.blink::Member.54"* [ %13, %19 ], [ %58, %57 ]
  %24 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::V8UnionCSSNumericValueOrDouble"*, %"class.blink::V8UnionCSSNumericValueOrDouble"** %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9, !noalias !14
  %26 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %25, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %25, i64 0, i32 3
  %31 = load double, double* %30, align 8
  %32 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %31, i32 1) #9
  %33 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %32, i64 0, i32 0
  br label %37

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %25, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %35, align 8
  br label %37

37:                                               ; preds = %34, %29
  %38 = phi %"class.blink::CSSNumericValue"* [ %33, %29 ], [ %36, %34 ]
  store %"class.blink::CSSNumericValue"* %38, %"class.blink::CSSNumericValue"** %5, align 8, !noalias !14
  %39 = load i32, i32* %11, align 4, !alias.scope !14
  %40 = load i32, i32* %10, align 8, !alias.scope !14
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %56, label %42, !prof !3

42:                                               ; preds = %37
  %43 = ptrtoint %"class.blink::CSSNumericValue"* %38 to i64
  %44 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %9, align 8, !alias.scope !14
  %45 = zext i32 %39 to i64
  %46 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %44, i64 %45
  %47 = bitcast %"class.blink::Member.25"* %46 to i64*
  store atomic i64 %43, i64* %47 monotonic, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %42
  %51 = bitcast %"class.blink::CSSNumericValue"* %38 to i8*
  %52 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %51) #9
  br label %53

53:                                               ; preds = %50, %42
  %54 = load i32, i32* %11, align 4, !alias.scope !14
  %55 = add i32 %54, 1
  store i32 %55, i32* %11, align 4, !alias.scope !14
  br label %57

56:                                               ; preds = %37
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.39"* nonnull %20, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %5) #9
  br label %57

57:                                               ; preds = %56, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9, !noalias !14
  %58 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %23, i64 1
  %59 = icmp eq %"class.blink::Member.54"* %58, %17
  br i1 %59, label %60, label %22

60:                                               ; preds = %57, %3
  %61 = bitcast %"class.blink::CSSNumericValue"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  store %"class.blink::CSSNumericValue"* %0, %"class.blink::CSSNumericValue"** %4, align 8
  %62 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 0
  %63 = bitcast %"class.blink::CSSNumericValue"* %0 to i32 (%"class.blink::CSSStyleValue"*)***
  %64 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %63, align 8
  %65 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %64, i64 9
  %66 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %65, align 8
  %67 = call i32 %66(%"class.blink::CSSStyleValue"* %62) #9
  %68 = icmp eq i32 %67, 5
  %69 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  br i1 %68, label %70, label %78

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 1
  %72 = bitcast %"class.blink::CSSNumericValue"* %71 to %"class.blink::CSSNumericArray"**
  %73 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %73, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %73, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE6insertIS4_EEvjPKT_j(%"class.WTF::Vector.39"* nonnull %69, i32 0, %"class.blink::Member.25"* %75, i32 %77) #9
  br label %79

78:                                               ; preds = %60
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.39"* nonnull %69, i32 0, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %4) #9
  br label %79

79:                                               ; preds = %70, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  %80 = load i32, i32* %11, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %114, label %82

82:                                               ; preds = %79, %105
  %83 = phi i32 [ %111, %105 ], [ 0, %79 ]
  %84 = phi double [ %110, %105 ], [ 1.000000e+00, %79 ]
  %85 = phi i32 [ %106, %105 ], [ 1, %79 ]
  %86 = call dereferenceable(8) %"class.blink::Member.25"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.39"* nonnull %69, i32 %83) #9
  %87 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %87, align 8
  %89 = icmp eq %"class.blink::CSSNumericValue"* %88, null
  br i1 %89, label %120, label %90

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %88, i64 0, i32 0
  %92 = bitcast %"class.blink::CSSNumericValue"* %88 to i32 (%"class.blink::CSSStyleValue"*)***
  %93 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %92, align 8
  %94 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %93, i64 9
  %95 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %94, align 8
  %96 = call i32 %95(%"class.blink::CSSStyleValue"* %91) #9
  %97 = icmp eq i32 %96, 3
  br i1 %97, label %98, label %120

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %88, i64 1, i32 0, i32 0, i32 1
  %100 = bitcast %"class.blink::TraceWrapperV8Reference"* %99 to i32*
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %105, label %103

103:                                              ; preds = %98
  %104 = icmp eq i32 %85, 1
  br i1 %104, label %105, label %120

105:                                              ; preds = %103, %98
  %106 = phi i32 [ %85, %98 ], [ %101, %103 ]
  %107 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %88, i64 1
  %108 = bitcast %"class.blink::CSSNumericValue"* %107 to double*
  %109 = load double, double* %108, align 8
  %110 = fmul double %84, %109
  %111 = add nuw i32 %83, 1
  %112 = load i32, i32* %11, align 4
  %113 = icmp ult i32 %111, %112
  br i1 %113, label %82, label %114

114:                                              ; preds = %105, %79
  %115 = phi i32 [ 1, %79 ], [ %106, %105 ]
  %116 = phi double [ 1.000000e+00, %79 ], [ %110, %105 ]
  %117 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %116, i32 %115) #9
  %118 = icmp eq %"class.blink::CSSUnitValue"* %117, null
  %119 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %117, i64 0, i32 0
  br i1 %118, label %120, label %144

120:                                              ; preds = %90, %82, %103, %114
  %121 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %122 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %123 = bitcast %"class.blink::HeapVector"* %6 to i64*
  %124 = bitcast %"class.blink::HeapVector"* %7 to i64*
  store i64 0, i64* %124, align 8
  %125 = load i64, i64* %123, align 8
  %126 = bitcast %"class.blink::HeapVector"* %7 to i64*
  store atomic i64 0, i64* %123 monotonic, align 8
  store atomic i64 %125, i64* %126 monotonic, align 8
  %127 = load i32, i32* %10, align 8
  store i32 %127, i32* %121, align 8
  store i32 0, i32* %10, align 8
  %128 = load i32, i32* %11, align 4
  store i32 %128, i32* %122, align 4
  store i32 0, i32* %11, align 4
  %129 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %134, label %131

131:                                              ; preds = %120
  %132 = inttoptr i64 %125 to i8*
  %133 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %132) #9
  br label %134

134:                                              ; preds = %131, %120
  %135 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %141, label %137

137:                                              ; preds = %134
  %138 = bitcast %"class.blink::HeapVector"* %6 to i8**
  %139 = load i8*, i8** %138, align 8
  %140 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %139) #9
  br label %141

141:                                              ; preds = %134, %137
  %142 = call %"class.blink::CSSMathProduct"* @_ZN5blink14CSSMathProduct6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEE(%"class.blink::HeapVector"* nonnull %7) #9
  %143 = getelementptr inbounds %"class.blink::CSSMathProduct", %"class.blink::CSSMathProduct"* %142, i64 0, i32 0, i32 0, i32 0
  br label %144

144:                                              ; preds = %114, %141
  %145 = phi %"class.blink::CSSNumericValue"* [ %143, %141 ], [ %119, %114 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  ret %"class.blink::CSSNumericValue"* %145
}

declare %"class.blink::CSSMathProduct"* @_ZN5blink14CSSMathProduct6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEE(%"class.blink::HeapVector"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSNumericValue"* @_ZN5blink15CSSNumericValue3divERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEERNS_14ExceptionStateE(%"class.blink::CSSNumericValue"*, %"class.blink::HeapVector.48"* nocapture readonly dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::CSSNumericValue"*, align 8
  %5 = alloca %"class.blink::CSSNumericValue"*, align 8
  %6 = alloca %"class.blink::HeapVector", align 8
  %7 = alloca %"class.blink::HeapVector", align 8
  %8 = bitcast %"class.blink::HeapVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #9, !alias.scope !17
  %12 = getelementptr inbounds %"class.blink::HeapVector.48", %"class.blink::HeapVector.48"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Member.54"*, %"class.blink::Member.54"** %12, align 8, !noalias !17
  %14 = getelementptr inbounds %"class.blink::HeapVector.48", %"class.blink::HeapVector.48"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4, !noalias !17
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  %19 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  br i1 %18, label %89, label %20

20:                                               ; preds = %3
  %21 = bitcast %"class.blink::CSSNumericValue"** %5 to i8*
  br label %22

22:                                               ; preds = %57, %20
  %23 = phi %"class.blink::Member.54"* [ %13, %20 ], [ %58, %57 ]
  %24 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::V8UnionCSSNumericValueOrDouble"*, %"class.blink::V8UnionCSSNumericValueOrDouble"** %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9, !noalias !17
  %26 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %25, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %25, i64 0, i32 3
  %31 = load double, double* %30, align 8
  %32 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %31, i32 1) #9
  %33 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %32, i64 0, i32 0
  br label %37

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %25, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %35, align 8
  br label %37

37:                                               ; preds = %34, %29
  %38 = phi %"class.blink::CSSNumericValue"* [ %33, %29 ], [ %36, %34 ]
  store %"class.blink::CSSNumericValue"* %38, %"class.blink::CSSNumericValue"** %5, align 8, !noalias !17
  %39 = load i32, i32* %11, align 4, !alias.scope !17
  %40 = load i32, i32* %10, align 8, !alias.scope !17
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %56, label %42, !prof !3

42:                                               ; preds = %37
  %43 = ptrtoint %"class.blink::CSSNumericValue"* %38 to i64
  %44 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %9, align 8, !alias.scope !17
  %45 = zext i32 %39 to i64
  %46 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %44, i64 %45
  %47 = bitcast %"class.blink::Member.25"* %46 to i64*
  store atomic i64 %43, i64* %47 monotonic, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %42
  %51 = bitcast %"class.blink::CSSNumericValue"* %38 to i8*
  %52 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %51) #9
  br label %53

53:                                               ; preds = %50, %42
  %54 = load i32, i32* %11, align 4, !alias.scope !17
  %55 = add i32 %54, 1
  store i32 %55, i32* %11, align 4, !alias.scope !17
  br label %57

56:                                               ; preds = %37
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.39"* nonnull %19, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %5) #9
  br label %57

57:                                               ; preds = %56, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9, !noalias !17
  %58 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %23, i64 1
  %59 = icmp eq %"class.blink::Member.54"* %58, %17
  br i1 %59, label %60, label %22

60:                                               ; preds = %57
  %61 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %9, align 8
  %62 = load i32, i32* %11, align 4
  %63 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  %64 = zext i32 %62 to i64
  %65 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %61, i64 %64
  %66 = icmp eq i32 %62, 0
  br i1 %66, label %89, label %67

67:                                               ; preds = %60, %85
  %68 = phi %"class.blink::Member.25"* [ %86, %85 ], [ %61, %60 ]
  %69 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %69, align 8
  %71 = bitcast %"class.blink::CSSNumericValue"* %70 to %"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)***
  %72 = load %"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)**, %"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)*** %71, align 8
  %73 = getelementptr inbounds %"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)*, %"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)** %72, i64 14
  %74 = load %"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)*, %"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)** %73, align 8
  %75 = call %"class.blink::CSSNumericValue"* %74(%"class.blink::CSSNumericValue"* %70) #9
  %76 = icmp eq %"class.blink::CSSNumericValue"* %75, null
  br i1 %76, label %88, label %77

77:                                               ; preds = %67
  %78 = ptrtoint %"class.blink::CSSNumericValue"* %75 to i64
  %79 = bitcast %"class.blink::Member.25"* %68 to i64*
  store atomic i64 %78, i64* %79 monotonic, align 8
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %77
  %83 = bitcast %"class.blink::CSSNumericValue"* %75 to i8*
  %84 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %83) #9
  br label %85

85:                                               ; preds = %77, %82
  %86 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %68, i64 1
  %87 = icmp eq %"class.blink::Member.25"* %86, %65
  br i1 %87, label %89, label %67

88:                                               ; preds = %67
  call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0)) #9
  br label %173

89:                                               ; preds = %85, %3, %60
  %90 = phi %"class.WTF::Vector.39"* [ %63, %60 ], [ %19, %3 ], [ %63, %85 ]
  %91 = bitcast %"class.blink::CSSNumericValue"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91)
  store %"class.blink::CSSNumericValue"* %0, %"class.blink::CSSNumericValue"** %4, align 8
  %92 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 0
  %93 = bitcast %"class.blink::CSSNumericValue"* %0 to i32 (%"class.blink::CSSStyleValue"*)***
  %94 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %93, align 8
  %95 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %94, i64 9
  %96 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %95, align 8
  %97 = call i32 %96(%"class.blink::CSSStyleValue"* %92) #9
  %98 = icmp eq i32 %97, 5
  br i1 %98, label %99, label %107

99:                                               ; preds = %89
  %100 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 1
  %101 = bitcast %"class.blink::CSSNumericValue"* %100 to %"class.blink::CSSNumericArray"**
  %102 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %102, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %104 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %102, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %106 = load i32, i32* %105, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE6insertIS4_EEvjPKT_j(%"class.WTF::Vector.39"* nonnull %90, i32 0, %"class.blink::Member.25"* %104, i32 %106) #9
  br label %108

107:                                              ; preds = %89
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.39"* nonnull %90, i32 0, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %4) #9
  br label %108

108:                                              ; preds = %99, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91)
  %109 = load i32, i32* %11, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %143, label %111

111:                                              ; preds = %108, %134
  %112 = phi i32 [ %140, %134 ], [ 0, %108 ]
  %113 = phi double [ %139, %134 ], [ 1.000000e+00, %108 ]
  %114 = phi i32 [ %135, %134 ], [ 1, %108 ]
  %115 = call dereferenceable(8) %"class.blink::Member.25"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.39"* nonnull %90, i32 %112) #9
  %116 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %116, align 8
  %118 = icmp eq %"class.blink::CSSNumericValue"* %117, null
  br i1 %118, label %149, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %117, i64 0, i32 0
  %121 = bitcast %"class.blink::CSSNumericValue"* %117 to i32 (%"class.blink::CSSStyleValue"*)***
  %122 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %121, align 8
  %123 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %122, i64 9
  %124 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %123, align 8
  %125 = call i32 %124(%"class.blink::CSSStyleValue"* %120) #9
  %126 = icmp eq i32 %125, 3
  br i1 %126, label %127, label %149

127:                                              ; preds = %119
  %128 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %117, i64 1, i32 0, i32 0, i32 1
  %129 = bitcast %"class.blink::TraceWrapperV8Reference"* %128 to i32*
  %130 = load i32, i32* %129, align 8
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %134, label %132

132:                                              ; preds = %127
  %133 = icmp eq i32 %114, 1
  br i1 %133, label %134, label %149

134:                                              ; preds = %132, %127
  %135 = phi i32 [ %114, %127 ], [ %130, %132 ]
  %136 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %117, i64 1
  %137 = bitcast %"class.blink::CSSNumericValue"* %136 to double*
  %138 = load double, double* %137, align 8
  %139 = fmul double %113, %138
  %140 = add nuw i32 %112, 1
  %141 = load i32, i32* %11, align 4
  %142 = icmp ult i32 %140, %141
  br i1 %142, label %111, label %143

143:                                              ; preds = %134, %108
  %144 = phi i32 [ 1, %108 ], [ %135, %134 ]
  %145 = phi double [ 1.000000e+00, %108 ], [ %139, %134 ]
  %146 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %145, i32 %144) #9
  %147 = icmp eq %"class.blink::CSSUnitValue"* %146, null
  %148 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %146, i64 0, i32 0
  br i1 %147, label %149, label %173

149:                                              ; preds = %119, %111, %132, %143
  %150 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %151 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %152 = bitcast %"class.blink::HeapVector"* %6 to i64*
  %153 = bitcast %"class.blink::HeapVector"* %7 to i64*
  store i64 0, i64* %153, align 8
  %154 = load i64, i64* %152, align 8
  %155 = bitcast %"class.blink::HeapVector"* %7 to i64*
  store atomic i64 0, i64* %152 monotonic, align 8
  store atomic i64 %154, i64* %155 monotonic, align 8
  %156 = load i32, i32* %10, align 8
  store i32 %156, i32* %150, align 8
  store i32 0, i32* %10, align 8
  %157 = load i32, i32* %11, align 4
  store i32 %157, i32* %151, align 4
  store i32 0, i32* %11, align 4
  %158 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %163, label %160

160:                                              ; preds = %149
  %161 = inttoptr i64 %154 to i8*
  %162 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %161) #9
  br label %163

163:                                              ; preds = %160, %149
  %164 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %170, label %166

166:                                              ; preds = %163
  %167 = bitcast %"class.blink::HeapVector"* %6 to i8**
  %168 = load i8*, i8** %167, align 8
  %169 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %168) #9
  br label %170

170:                                              ; preds = %163, %166
  %171 = call %"class.blink::CSSMathProduct"* @_ZN5blink14CSSMathProduct6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEE(%"class.blink::HeapVector"* nonnull %7) #9
  %172 = getelementptr inbounds %"class.blink::CSSMathProduct", %"class.blink::CSSMathProduct"* %171, i64 0, i32 0, i32 0, i32 0
  br label %173

173:                                              ; preds = %88, %143, %170
  %174 = phi %"class.blink::CSSNumericValue"* [ %172, %170 ], [ %148, %143 ], [ null, %88 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  ret %"class.blink::CSSNumericValue"* %174
}

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSNumericValue"* @_ZN5blink15CSSNumericValue3minERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEERNS_14ExceptionStateE(%"class.blink::CSSNumericValue"*, %"class.blink::HeapVector.48"* nocapture readonly dereferenceable(16), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::CSSNumericValue"*, align 8
  %5 = alloca %"class.blink::CSSNumericValue"*, align 8
  %6 = alloca %"class.blink::HeapVector", align 8
  %7 = alloca %"class.blink::HeapVector", align 8
  %8 = bitcast %"class.blink::HeapVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #9, !alias.scope !20
  %12 = getelementptr inbounds %"class.blink::HeapVector.48", %"class.blink::HeapVector.48"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Member.54"*, %"class.blink::Member.54"** %12, align 8, !noalias !20
  %14 = getelementptr inbounds %"class.blink::HeapVector.48", %"class.blink::HeapVector.48"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4, !noalias !20
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %60, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  %21 = bitcast %"class.blink::CSSNumericValue"** %5 to i8*
  br label %22

22:                                               ; preds = %57, %19
  %23 = phi %"class.blink::Member.54"* [ %13, %19 ], [ %58, %57 ]
  %24 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::V8UnionCSSNumericValueOrDouble"*, %"class.blink::V8UnionCSSNumericValueOrDouble"** %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9, !noalias !20
  %26 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %25, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %25, i64 0, i32 3
  %31 = load double, double* %30, align 8
  %32 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %31, i32 1) #9
  %33 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %32, i64 0, i32 0
  br label %37

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %25, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %35, align 8
  br label %37

37:                                               ; preds = %34, %29
  %38 = phi %"class.blink::CSSNumericValue"* [ %33, %29 ], [ %36, %34 ]
  store %"class.blink::CSSNumericValue"* %38, %"class.blink::CSSNumericValue"** %5, align 8, !noalias !20
  %39 = load i32, i32* %11, align 4, !alias.scope !20
  %40 = load i32, i32* %10, align 8, !alias.scope !20
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %56, label %42, !prof !3

42:                                               ; preds = %37
  %43 = ptrtoint %"class.blink::CSSNumericValue"* %38 to i64
  %44 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %9, align 8, !alias.scope !20
  %45 = zext i32 %39 to i64
  %46 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %44, i64 %45
  %47 = bitcast %"class.blink::Member.25"* %46 to i64*
  store atomic i64 %43, i64* %47 monotonic, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %42
  %51 = bitcast %"class.blink::CSSNumericValue"* %38 to i8*
  %52 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %51) #9
  br label %53

53:                                               ; preds = %50, %42
  %54 = load i32, i32* %11, align 4, !alias.scope !20
  %55 = add i32 %54, 1
  store i32 %55, i32* %11, align 4, !alias.scope !20
  br label %57

56:                                               ; preds = %37
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.39"* nonnull %20, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %5) #9
  br label %57

57:                                               ; preds = %56, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9, !noalias !20
  %58 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %23, i64 1
  %59 = icmp eq %"class.blink::Member.54"* %58, %17
  br i1 %59, label %60, label %22

60:                                               ; preds = %57, %3
  %61 = bitcast %"class.blink::CSSNumericValue"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  store %"class.blink::CSSNumericValue"* %0, %"class.blink::CSSNumericValue"** %4, align 8
  %62 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 0
  %63 = bitcast %"class.blink::CSSNumericValue"* %0 to i32 (%"class.blink::CSSStyleValue"*)***
  %64 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %63, align 8
  %65 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %64, i64 9
  %66 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %65, align 8
  %67 = call i32 %66(%"class.blink::CSSStyleValue"* %62) #9
  %68 = icmp eq i32 %67, 8
  %69 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  br i1 %68, label %70, label %78

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 1
  %72 = bitcast %"class.blink::CSSNumericValue"* %71 to %"class.blink::CSSNumericArray"**
  %73 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %73, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %73, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE6insertIS4_EEvjPKT_j(%"class.WTF::Vector.39"* nonnull %69, i32 0, %"class.blink::Member.25"* %75, i32 %77) #9
  br label %79

78:                                               ; preds = %60
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.39"* nonnull %69, i32 0, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %4) #9
  br label %79

79:                                               ; preds = %70, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  %80 = call dereferenceable(8) %"class.blink::Member.25"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.39"* nonnull %69, i32 0) #9
  %81 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %80, i64 0, i32 0, i32 0
  %82 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %81, align 8
  %83 = icmp eq %"class.blink::CSSNumericValue"* %82, null
  br i1 %83, label %138, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %82, i64 0, i32 0
  %86 = bitcast %"class.blink::CSSNumericValue"* %82 to i32 (%"class.blink::CSSStyleValue"*)***
  %87 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %86, align 8
  %88 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %87, i64 9
  %89 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %88, align 8
  %90 = call i32 %89(%"class.blink::CSSStyleValue"* %85) #9
  %91 = icmp eq i32 %90, 3
  br i1 %91, label %92, label %138

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %82, i64 1
  %94 = bitcast %"class.blink::CSSNumericValue"* %93 to double*
  %95 = load double, double* %94, align 8
  %96 = load i32, i32* %11, align 4
  %97 = icmp ugt i32 %96, 1
  %98 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %82, i64 1, i32 0, i32 0, i32 1
  %99 = bitcast %"class.blink::TraceWrapperV8Reference"* %98 to i32*
  br i1 %97, label %102, label %100

100:                                              ; preds = %92
  %101 = load i32, i32* %99, align 8
  br label %132

102:                                              ; preds = %92, %123
  %103 = phi i32 [ %129, %123 ], [ 1, %92 ]
  %104 = phi double [ %128, %123 ], [ %95, %92 ]
  %105 = call dereferenceable(8) %"class.blink::Member.25"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.39"* nonnull %69, i32 %103) #9
  %106 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %106, align 8
  %108 = icmp eq %"class.blink::CSSNumericValue"* %107, null
  br i1 %108, label %138, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %107, i64 0, i32 0
  %111 = bitcast %"class.blink::CSSNumericValue"* %107 to i32 (%"class.blink::CSSStyleValue"*)***
  %112 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %111, align 8
  %113 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %112, i64 9
  %114 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %113, align 8
  %115 = call i32 %114(%"class.blink::CSSStyleValue"* %110) #9
  %116 = icmp eq i32 %115, 3
  br i1 %116, label %117, label %138

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %107, i64 1, i32 0, i32 0, i32 1
  %119 = bitcast %"class.blink::TraceWrapperV8Reference"* %118 to i32*
  %120 = load i32, i32* %119, align 8
  %121 = load i32, i32* %99, align 8
  %122 = icmp eq i32 %120, %121
  br i1 %122, label %123, label %138

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %107, i64 1
  %125 = bitcast %"class.blink::CSSNumericValue"* %124 to double*
  %126 = load double, double* %125, align 8
  %127 = fcmp olt double %126, %104
  %128 = select i1 %127, double %126, double %104
  %129 = add nuw i32 %103, 1
  %130 = load i32, i32* %11, align 4
  %131 = icmp ult i32 %129, %130
  br i1 %131, label %102, label %132

132:                                              ; preds = %123, %100
  %133 = phi i32 [ %101, %100 ], [ %120, %123 ]
  %134 = phi double [ %95, %100 ], [ %128, %123 ]
  %135 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %134, i32 %133) #9
  %136 = icmp eq %"class.blink::CSSUnitValue"* %135, null
  %137 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %135, i64 0, i32 0
  br i1 %136, label %138, label %162

138:                                              ; preds = %109, %102, %117, %79, %84, %132
  %139 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %140 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %141 = bitcast %"class.blink::HeapVector"* %6 to i64*
  %142 = bitcast %"class.blink::HeapVector"* %7 to i64*
  store i64 0, i64* %142, align 8
  %143 = load i64, i64* %141, align 8
  %144 = bitcast %"class.blink::HeapVector"* %7 to i64*
  store atomic i64 0, i64* %141 monotonic, align 8
  store atomic i64 %143, i64* %144 monotonic, align 8
  %145 = load i32, i32* %10, align 8
  store i32 %145, i32* %139, align 8
  store i32 0, i32* %10, align 8
  %146 = load i32, i32* %11, align 4
  store i32 %146, i32* %140, align 4
  store i32 0, i32* %11, align 4
  %147 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %152, label %149

149:                                              ; preds = %138
  %150 = inttoptr i64 %143 to i8*
  %151 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %150) #9
  br label %152

152:                                              ; preds = %149, %138
  %153 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %159, label %155

155:                                              ; preds = %152
  %156 = bitcast %"class.blink::HeapVector"* %6 to i8**
  %157 = load i8*, i8** %156, align 8
  %158 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %157) #9
  br label %159

159:                                              ; preds = %152, %155
  %160 = call %"class.blink::CSSMathMin"* @_ZN5blink10CSSMathMin6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEE(%"class.blink::HeapVector"* nonnull %7) #9
  %161 = getelementptr inbounds %"class.blink::CSSMathMin", %"class.blink::CSSMathMin"* %160, i64 0, i32 0, i32 0, i32 0
  br label %162

162:                                              ; preds = %132, %159
  %163 = phi %"class.blink::CSSNumericValue"* [ %161, %159 ], [ %137, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  ret %"class.blink::CSSNumericValue"* %163
}

declare %"class.blink::CSSMathMin"* @_ZN5blink10CSSMathMin6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEE(%"class.blink::HeapVector"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSNumericValue"* @_ZN5blink15CSSNumericValue3maxERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEERNS_14ExceptionStateE(%"class.blink::CSSNumericValue"*, %"class.blink::HeapVector.48"* nocapture readonly dereferenceable(16), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::CSSNumericValue"*, align 8
  %5 = alloca %"class.blink::CSSNumericValue"*, align 8
  %6 = alloca %"class.blink::HeapVector", align 8
  %7 = alloca %"class.blink::HeapVector", align 8
  %8 = bitcast %"class.blink::HeapVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #9, !alias.scope !23
  %12 = getelementptr inbounds %"class.blink::HeapVector.48", %"class.blink::HeapVector.48"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Member.54"*, %"class.blink::Member.54"** %12, align 8, !noalias !23
  %14 = getelementptr inbounds %"class.blink::HeapVector.48", %"class.blink::HeapVector.48"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4, !noalias !23
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %60, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  %21 = bitcast %"class.blink::CSSNumericValue"** %5 to i8*
  br label %22

22:                                               ; preds = %57, %19
  %23 = phi %"class.blink::Member.54"* [ %13, %19 ], [ %58, %57 ]
  %24 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::V8UnionCSSNumericValueOrDouble"*, %"class.blink::V8UnionCSSNumericValueOrDouble"** %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9, !noalias !23
  %26 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %25, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %25, i64 0, i32 3
  %31 = load double, double* %30, align 8
  %32 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %31, i32 1) #9
  %33 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %32, i64 0, i32 0
  br label %37

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %25, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %35, align 8
  br label %37

37:                                               ; preds = %34, %29
  %38 = phi %"class.blink::CSSNumericValue"* [ %33, %29 ], [ %36, %34 ]
  store %"class.blink::CSSNumericValue"* %38, %"class.blink::CSSNumericValue"** %5, align 8, !noalias !23
  %39 = load i32, i32* %11, align 4, !alias.scope !23
  %40 = load i32, i32* %10, align 8, !alias.scope !23
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %56, label %42, !prof !3

42:                                               ; preds = %37
  %43 = ptrtoint %"class.blink::CSSNumericValue"* %38 to i64
  %44 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %9, align 8, !alias.scope !23
  %45 = zext i32 %39 to i64
  %46 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %44, i64 %45
  %47 = bitcast %"class.blink::Member.25"* %46 to i64*
  store atomic i64 %43, i64* %47 monotonic, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %42
  %51 = bitcast %"class.blink::CSSNumericValue"* %38 to i8*
  %52 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %51) #9
  br label %53

53:                                               ; preds = %50, %42
  %54 = load i32, i32* %11, align 4, !alias.scope !23
  %55 = add i32 %54, 1
  store i32 %55, i32* %11, align 4, !alias.scope !23
  br label %57

56:                                               ; preds = %37
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.39"* nonnull %20, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %5) #9
  br label %57

57:                                               ; preds = %56, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9, !noalias !23
  %58 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %23, i64 1
  %59 = icmp eq %"class.blink::Member.54"* %58, %17
  br i1 %59, label %60, label %22

60:                                               ; preds = %57, %3
  %61 = bitcast %"class.blink::CSSNumericValue"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  store %"class.blink::CSSNumericValue"* %0, %"class.blink::CSSNumericValue"** %4, align 8
  %62 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 0
  %63 = bitcast %"class.blink::CSSNumericValue"* %0 to i32 (%"class.blink::CSSStyleValue"*)***
  %64 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %63, align 8
  %65 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %64, i64 9
  %66 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %65, align 8
  %67 = call i32 %66(%"class.blink::CSSStyleValue"* %62) #9
  %68 = icmp eq i32 %67, 9
  %69 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  br i1 %68, label %70, label %78

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 1
  %72 = bitcast %"class.blink::CSSNumericValue"* %71 to %"class.blink::CSSNumericArray"**
  %73 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %73, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %73, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE6insertIS4_EEvjPKT_j(%"class.WTF::Vector.39"* nonnull %69, i32 0, %"class.blink::Member.25"* %75, i32 %77) #9
  br label %79

78:                                               ; preds = %60
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.39"* nonnull %69, i32 0, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %4) #9
  br label %79

79:                                               ; preds = %70, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  %80 = call dereferenceable(8) %"class.blink::Member.25"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.39"* nonnull %69, i32 0) #9
  %81 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %80, i64 0, i32 0, i32 0
  %82 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %81, align 8
  %83 = icmp eq %"class.blink::CSSNumericValue"* %82, null
  br i1 %83, label %138, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %82, i64 0, i32 0
  %86 = bitcast %"class.blink::CSSNumericValue"* %82 to i32 (%"class.blink::CSSStyleValue"*)***
  %87 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %86, align 8
  %88 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %87, i64 9
  %89 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %88, align 8
  %90 = call i32 %89(%"class.blink::CSSStyleValue"* %85) #9
  %91 = icmp eq i32 %90, 3
  br i1 %91, label %92, label %138

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %82, i64 1
  %94 = bitcast %"class.blink::CSSNumericValue"* %93 to double*
  %95 = load double, double* %94, align 8
  %96 = load i32, i32* %11, align 4
  %97 = icmp ugt i32 %96, 1
  %98 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %82, i64 1, i32 0, i32 0, i32 1
  %99 = bitcast %"class.blink::TraceWrapperV8Reference"* %98 to i32*
  br i1 %97, label %102, label %100

100:                                              ; preds = %92
  %101 = load i32, i32* %99, align 8
  br label %132

102:                                              ; preds = %92, %123
  %103 = phi i32 [ %129, %123 ], [ 1, %92 ]
  %104 = phi double [ %128, %123 ], [ %95, %92 ]
  %105 = call dereferenceable(8) %"class.blink::Member.25"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.39"* nonnull %69, i32 %103) #9
  %106 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %106, align 8
  %108 = icmp eq %"class.blink::CSSNumericValue"* %107, null
  br i1 %108, label %138, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %107, i64 0, i32 0
  %111 = bitcast %"class.blink::CSSNumericValue"* %107 to i32 (%"class.blink::CSSStyleValue"*)***
  %112 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %111, align 8
  %113 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %112, i64 9
  %114 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %113, align 8
  %115 = call i32 %114(%"class.blink::CSSStyleValue"* %110) #9
  %116 = icmp eq i32 %115, 3
  br i1 %116, label %117, label %138

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %107, i64 1, i32 0, i32 0, i32 1
  %119 = bitcast %"class.blink::TraceWrapperV8Reference"* %118 to i32*
  %120 = load i32, i32* %119, align 8
  %121 = load i32, i32* %99, align 8
  %122 = icmp eq i32 %120, %121
  br i1 %122, label %123, label %138

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %107, i64 1
  %125 = bitcast %"class.blink::CSSNumericValue"* %124 to double*
  %126 = load double, double* %125, align 8
  %127 = fcmp olt double %104, %126
  %128 = select i1 %127, double %126, double %104
  %129 = add nuw i32 %103, 1
  %130 = load i32, i32* %11, align 4
  %131 = icmp ult i32 %129, %130
  br i1 %131, label %102, label %132

132:                                              ; preds = %123, %100
  %133 = phi i32 [ %101, %100 ], [ %120, %123 ]
  %134 = phi double [ %95, %100 ], [ %128, %123 ]
  %135 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %134, i32 %133) #9
  %136 = icmp eq %"class.blink::CSSUnitValue"* %135, null
  %137 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %135, i64 0, i32 0
  br i1 %136, label %138, label %162

138:                                              ; preds = %109, %102, %117, %79, %84, %132
  %139 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %140 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %141 = bitcast %"class.blink::HeapVector"* %6 to i64*
  %142 = bitcast %"class.blink::HeapVector"* %7 to i64*
  store i64 0, i64* %142, align 8
  %143 = load i64, i64* %141, align 8
  %144 = bitcast %"class.blink::HeapVector"* %7 to i64*
  store atomic i64 0, i64* %141 monotonic, align 8
  store atomic i64 %143, i64* %144 monotonic, align 8
  %145 = load i32, i32* %10, align 8
  store i32 %145, i32* %139, align 8
  store i32 0, i32* %10, align 8
  %146 = load i32, i32* %11, align 4
  store i32 %146, i32* %140, align 4
  store i32 0, i32* %11, align 4
  %147 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %152, label %149

149:                                              ; preds = %138
  %150 = inttoptr i64 %143 to i8*
  %151 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %150) #9
  br label %152

152:                                              ; preds = %149, %138
  %153 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %159, label %155

155:                                              ; preds = %152
  %156 = bitcast %"class.blink::HeapVector"* %6 to i8**
  %157 = load i8*, i8** %156, align 8
  %158 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %157) #9
  br label %159

159:                                              ; preds = %152, %155
  %160 = call %"class.blink::CSSMathMax"* @_ZN5blink10CSSMathMax6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEE(%"class.blink::HeapVector"* nonnull %7) #9
  %161 = getelementptr inbounds %"class.blink::CSSMathMax", %"class.blink::CSSMathMax"* %160, i64 0, i32 0, i32 0, i32 0
  br label %162

162:                                              ; preds = %132, %159
  %163 = phi %"class.blink::CSSNumericValue"* [ %161, %159 ], [ %137, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  ret %"class.blink::CSSNumericValue"* %163
}

declare %"class.blink::CSSMathMax"* @_ZN5blink10CSSMathMax6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEE(%"class.blink::HeapVector"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15CSSNumericValue6equalsERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE(%"class.blink::CSSNumericValue"*, %"class.blink::HeapVector.48"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::CSSNumericValue"*, align 8
  %4 = alloca %"class.blink::HeapVector", align 8
  %5 = bitcast %"class.blink::HeapVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #9, !alias.scope !26
  %9 = getelementptr inbounds %"class.blink::HeapVector.48", %"class.blink::HeapVector.48"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::Member.54"*, %"class.blink::Member.54"** %9, align 8, !noalias !26
  %11 = getelementptr inbounds %"class.blink::HeapVector.48", %"class.blink::HeapVector.48"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4, !noalias !26
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %76, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0
  %18 = bitcast %"class.blink::CSSNumericValue"** %3 to i8*
  br label %19

19:                                               ; preds = %54, %16
  %20 = phi %"class.blink::Member.54"* [ %10, %16 ], [ %55, %54 ]
  %21 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::V8UnionCSSNumericValueOrDouble"*, %"class.blink::V8UnionCSSNumericValueOrDouble"** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9, !noalias !26
  %23 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %31

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %22, i64 0, i32 3
  %28 = load double, double* %27, align 8
  %29 = call %"class.blink::CSSUnitValue"* @_ZN5blink12CSSUnitValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %28, i32 1) #9
  %30 = getelementptr inbounds %"class.blink::CSSUnitValue", %"class.blink::CSSUnitValue"* %29, i64 0, i32 0
  br label %34

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.blink::V8UnionCSSNumericValueOrDouble", %"class.blink::V8UnionCSSNumericValueOrDouble"* %22, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %32, align 8
  br label %34

34:                                               ; preds = %31, %26
  %35 = phi %"class.blink::CSSNumericValue"* [ %30, %26 ], [ %33, %31 ]
  store %"class.blink::CSSNumericValue"* %35, %"class.blink::CSSNumericValue"** %3, align 8, !noalias !26
  %36 = load i32, i32* %8, align 4, !alias.scope !26
  %37 = load i32, i32* %7, align 8, !alias.scope !26
  %38 = icmp eq i32 %36, %37
  br i1 %38, label %53, label %39, !prof !3

39:                                               ; preds = %34
  %40 = ptrtoint %"class.blink::CSSNumericValue"* %35 to i64
  %41 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %6, align 8, !alias.scope !26
  %42 = zext i32 %36 to i64
  %43 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %41, i64 %42
  %44 = bitcast %"class.blink::Member.25"* %43 to i64*
  store atomic i64 %40, i64* %44 monotonic, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.blink::CSSNumericValue"* %35 to i8*
  %49 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %39
  %51 = load i32, i32* %8, align 4, !alias.scope !26
  %52 = add i32 %51, 1
  store i32 %52, i32* %8, align 4, !alias.scope !26
  br label %54

53:                                               ; preds = %34
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.39"* nonnull %17, %"class.blink::CSSNumericValue"** nonnull dereferenceable(8) %3) #9
  br label %54

54:                                               ; preds = %53, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9, !noalias !26
  %55 = getelementptr inbounds %"class.blink::Member.54", %"class.blink::Member.54"* %20, i64 1
  %56 = icmp eq %"class.blink::Member.54"* %55, %14
  br i1 %56, label %57, label %19

57:                                               ; preds = %54
  %58 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %6, align 8
  %59 = load i32, i32* %8, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %58, i64 %60
  %62 = icmp eq i32 %59, 0
  br i1 %62, label %76, label %63

63:                                               ; preds = %57
  %64 = bitcast %"class.blink::CSSNumericValue"* %0 to i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)***
  br label %67

65:                                               ; preds = %67
  %66 = icmp eq %"class.blink::Member.25"* %75, %61
  br i1 %66, label %76, label %67

67:                                               ; preds = %65, %63
  %68 = phi %"class.blink::Member.25"* [ %58, %63 ], [ %75, %65 ]
  %69 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %69, align 8
  %71 = load i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)**, i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)*** %64, align 8
  %72 = getelementptr inbounds i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)*, i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)** %71, i64 17
  %73 = load i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)*, i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)** %72, align 8
  %74 = call zeroext i1 %73(%"class.blink::CSSNumericValue"* %0, %"class.blink::CSSNumericValue"* dereferenceable(88) %70) #9
  %75 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %68, i64 1
  br i1 %74, label %65, label %76

76:                                               ; preds = %65, %67, %2, %57
  %77 = phi i1 [ true, %57 ], [ true, %2 ], [ false, %67 ], [ true, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9
  ret i1 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15CSSNumericValue8toStringEv(%"class.blink::CSSNumericValue"*) unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 48, i1 false)
  %4 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %6 = bitcast %union.anon.64* %5 to i8*
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %9, align 1
  %10 = bitcast %"class.blink::CSSNumericValue"* %0 to void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)***
  %11 = load void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)**, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)** %11, i64 19
  %13 = load void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)** %12, align 8
  call void %13(%"class.blink::CSSNumericValue"* %0, i1 zeroext true, i1 zeroext true, %"class.WTF::StringBuilder"* nonnull dereferenceable(48) %2) #9
  %14 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #9
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #9
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #9
  br label %30

30:                                               ; preds = %1, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #9
  ret %"class.WTF::StringImpl"* %14
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSNumericValue"* @_ZN5blink15CSSNumericValue6NegateEv(%"class.blink::CSSNumericValue"*) unnamed_addr #1 align 2 {
  %2 = ptrtoint %"class.blink::CSSNumericValue"* %0 to i64
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 96) #9
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN5blink15CSSNumericValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 24
  %7 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 40
  %10 = bitcast i8* %6 to i8**
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %3, i64 32
  %12 = bitcast i8* %11 to i32*
  store i32 7, i32* %12, align 8
  %13 = icmp ugt i32 %8, 7
  br i1 %13, label %14, label %22

14:                                               ; preds = %1
  %15 = zext i32 %8 to i64
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %15) #9
  %17 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #9
  %18 = ptrtoint i8* %17 to i64
  %19 = bitcast i8* %6 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = lshr i64 %16, 2
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %12, align 8
  br label %22

22:                                               ; preds = %14, %1
  %23 = phi i8* [ %9, %1 ], [ %17, %14 ]
  %24 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds i8, i8* %3, i64 36
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 4
  %28 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = icmp ne i8* %23, null
  %31 = icmp ne i32* %29, null
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %38, !prof !4

33:                                               ; preds = %22
  %34 = load i32, i32* %24, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast i32* %29 to i8*
  %37 = shl nuw nsw i64 %35, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* nonnull align 4 %36, i64 %37, i1 false) #9
  br label %38

38:                                               ; preds = %22, %33
  %39 = getelementptr inbounds i8, i8* %3, i64 72
  %40 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 1
  %41 = bitcast i32* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %41, i64 12, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN5blink13CSSMathNegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %42 = getelementptr inbounds i8, i8* %3, i64 88
  %43 = bitcast i8* %42 to i64*
  store i64 %2, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %3, i64 -4
  %45 = bitcast i8* %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = or i16 %46, 1
  store atomic i16 %47, i16* %45 release, align 2
  %48 = bitcast i8* %3 to %"class.blink::CSSNumericValue"*
  ret %"class.blink::CSSNumericValue"* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSNumericValue"* @_ZN5blink15CSSNumericValue6InvertEv(%"class.blink::CSSNumericValue"*) unnamed_addr #1 align 2 {
  %2 = tail call %"class.blink::CSSMathInvert"* @_ZN5blink13CSSMathInvert6CreateEPNS_15CSSNumericValueE(%"class.blink::CSSNumericValue"* %0)
  %3 = getelementptr inbounds %"class.blink::CSSMathInvert", %"class.blink::CSSMathInvert"* %2, i64 0, i32 0, i32 0
  ret %"class.blink::CSSNumericValue"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSMathInvert"* @_ZN5blink13CSSMathInvert6CreateEPNS_15CSSNumericValueE(%"class.blink::CSSNumericValue"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.blink::CSSNumericValueType", align 8
  %3 = alloca %"class.blink::CSSNumericValueType", align 8
  %4 = ptrtoint %"class.blink::CSSNumericValue"* %0 to i64
  %5 = bitcast %"class.blink::CSSNumericValueType"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  %9 = bitcast %"class.blink::CSSNumericValueType"* %3 to i8**
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 7, i32* %10, align 8
  %11 = icmp ugt i32 %7, 7
  br i1 %11, label %12, label %20

12:                                               ; preds = %1
  %13 = zext i32 %7 to i64
  %14 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %13) #9
  %15 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %14, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #9
  %16 = ptrtoint i8* %15 to i64
  %17 = bitcast %"class.blink::CSSNumericValueType"* %3 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = lshr i64 %14, 2
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %10, align 8
  br label %20

20:                                               ; preds = %12, %1
  %21 = phi i8* [ %8, %1 ], [ %15, %12 ]
  %22 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = icmp ne i8* %21, null
  %28 = icmp ne i32* %26, null
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %34, !prof !4

30:                                               ; preds = %20
  %31 = zext i32 %23 to i64
  %32 = bitcast i32* %26 to i8*
  %33 = shl nuw nsw i64 %31, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* nonnull align 4 %32, i64 %33, i1 false) #9
  br label %34

34:                                               ; preds = %20, %30
  %35 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 1
  %36 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 1
  %37 = bitcast i32* %35 to i8*
  %38 = bitcast i32* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 12, i1 false) #9
  call void @_ZN5blink19CSSNumericValueType15NegateExponentsES0_(%"class.blink::CSSNumericValueType"* nonnull sret %2, %"class.blink::CSSNumericValueType"* nonnull %3) #9
  %39 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 96) #9
  %40 = bitcast i8* %39 to %"class.blink::CSSMathInvert"*
  %41 = bitcast i8* %39 to i32 (...)***
  %42 = getelementptr inbounds i8, i8* %39, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN5blink15CSSNumericValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %43 = getelementptr inbounds i8, i8* %39, i64 24
  %44 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds i8, i8* %39, i64 40
  %47 = bitcast i8* %43 to i8**
  store i8* %46, i8** %47, align 8
  %48 = getelementptr inbounds i8, i8* %39, i64 32
  %49 = bitcast i8* %48 to i32*
  store i32 7, i32* %49, align 8
  %50 = icmp ugt i32 %45, 7
  br i1 %50, label %51, label %59

51:                                               ; preds = %34
  %52 = zext i32 %45 to i64
  %53 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %52) #9
  %54 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %53, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #9
  %55 = ptrtoint i8* %54 to i64
  %56 = bitcast i8* %43 to i64*
  store atomic i64 %55, i64* %56 monotonic, align 8
  %57 = lshr i64 %53, 2
  %58 = trunc i64 %57 to i32
  store i32 %58, i32* %49, align 8
  br label %59

59:                                               ; preds = %51, %34
  %60 = phi i8* [ %46, %34 ], [ %54, %51 ]
  %61 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds i8, i8* %39, i64 36
  %64 = bitcast i8* %63 to i32*
  store i32 %62, i32* %64, align 4
  %65 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = icmp ne i8* %60, null
  %68 = icmp ne i32* %66, null
  %69 = and i1 %67, %68
  br i1 %69, label %70, label %74, !prof !4

70:                                               ; preds = %59
  %71 = zext i32 %62 to i64
  %72 = bitcast i32* %66 to i8*
  %73 = shl nuw nsw i64 %71, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %60, i8* nonnull align 4 %72, i64 %73, i1 false) #9
  br label %74

74:                                               ; preds = %59, %70
  %75 = getelementptr inbounds i8, i8* %39, i64 72
  %76 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %2, i64 0, i32 1
  %77 = bitcast i32* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %77, i64 12, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN5blink13CSSMathInvertE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %78 = getelementptr inbounds i8, i8* %39, i64 88
  %79 = bitcast i8* %78 to i64*
  store i64 %4, i64* %79, align 8
  %80 = getelementptr inbounds i8, i8* %39, i64 -4
  %81 = bitcast i8* %80 to i16*
  %82 = load atomic i16, i16* %81 monotonic, align 2
  %83 = or i16 %82, 1
  store atomic i16 %83, i16* %81 release, align 2
  %84 = load i32, i32* %61, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %87, label %86, !prof !3

86:                                               ; preds = %74
  store i32 0, i32* %61, align 4
  br label %87

87:                                               ; preds = %86, %74
  %88 = load i32*, i32** %65, align 8
  %89 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %2, i64 0, i32 0, i32 0, i32 1, i64 0
  %90 = bitcast i8* %89 to i32*
  %91 = icmp eq i32* %88, %90
  br i1 %91, label %94, label %92, !prof !4

92:                                               ; preds = %87
  %93 = bitcast %"class.blink::CSSNumericValueType"* %2 to %"class.WTF::VectorBuffer"*
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %93, i32* %88) #9
  br label %94

94:                                               ; preds = %87, %92
  store i32* null, i32** %65, align 8
  %95 = load i32, i32* %24, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %98, label %97, !prof !3

97:                                               ; preds = %94
  store i32 0, i32* %24, align 4
  br label %98

98:                                               ; preds = %97, %94
  %99 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = bitcast i8* %8 to i32*
  %102 = icmp eq i32* %100, %101
  br i1 %102, label %105, label %103, !prof !4

103:                                              ; preds = %98
  %104 = bitcast %"class.blink::CSSNumericValueType"* %3 to %"class.WTF::VectorBuffer"*
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %104, i32* %100) #9
  br label %105

105:                                              ; preds = %98, %103
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #9
  ret %"class.blink::CSSMathInvert"* %40
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSNumericValueD2Ev(%"class.blink::CSSNumericValue"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN5blink15CSSNumericValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7, !prof !3

7:                                                ; preds = %1
  store i32 0, i32* %4, align 4
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %12 = bitcast i8* %11 to i32*
  %13 = icmp eq i32* %10, %12
  br i1 %13, label %16, label %14, !prof !4

14:                                               ; preds = %8
  %15 = bitcast %"class.blink::CSSNumericValueType"* %3 to %"class.WTF::VectorBuffer"*
  tail call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* %15, i32* %10) #9
  br label %16

16:                                               ; preds = %8, %14
  store i32* null, i32** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink13CSSStyleValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #9
  br label %33

33:                                               ; preds = %16, %29, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSNumericValueD0Ev(%"class.blink::CSSNumericValue"*) unnamed_addr #2 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink15CSSNumericValue18GetWrapperTypeInfoEv(%"class.blink::CSSNumericValue"*) unnamed_addr #1 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink15CSSNumericValue18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #4

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #4

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink13CSSStyleValue22ToCSSValueWithPropertyENS_13CSSPropertyIDE(%"class.blink::CSSStyleValue"*, i32) unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.blink::CSSStyleValue"* %0 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)***
  %4 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %4, i64 10
  %6 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %5, align 8
  %7 = tail call %"class.blink::CSSValue"* %6(%"class.blink::CSSStyleValue"* %0) #9
  ret %"class.blink::CSSValue"* %7
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare i32 @_ZN5blink17CSSPrimitiveValue16StringToUnitTypeEPKhj(i8*, i32) local_unnamed_addr #4

declare i32 @_ZN5blink17CSSPrimitiveValue16StringToUnitTypeEPKDsj(i16*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

declare void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* sret, %"class.blink::CSSTokenizer"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.15"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.5"*, i32*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #4

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #4

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #4

declare void @_ZN5blink14CSSNumericTypeC1Ev(%"class.blink::CSSNumericType"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #2 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj7ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.25"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.39"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %24, i64 %25
  ret %"class.blink::Member.25"* %26
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN5blink19CSSNumericValueType15NegateExponentsES0_(%"class.blink::CSSNumericValueType"* sret, %"class.blink::CSSNumericValueType"*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"*, i32*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_12CSSUnitValueEEEvOT_(%"class.WTF::Vector.39"*, %"class.blink::CSSUnitValue"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.39"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %16, i64 %18
  %20 = bitcast %"class.blink::CSSUnitValue"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.25"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.39"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %8, align 8
  %10 = icmp eq %"class.blink::Member.25"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15CSSNumericValueEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.39"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %8, align 8
  %26 = icmp eq %"class.blink::Member.25"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.25"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.39"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.39"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.39"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.39"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15CSSNumericValueEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.25"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.25"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.39"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector.39"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector.39"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15CSSNumericValueEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.17, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.19, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([171 x i8], [171 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_15CSSNumericValueEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.25"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.25"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15CSSNumericValueEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15CSSNumericValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #4

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #4

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #4

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.39"*, %"class.blink::CSSNumericValue"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.39"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %16, i64 %18
  %20 = bitcast %"class.blink::CSSNumericValue"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.25"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.14"*, %"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %8 = icmp ugt %"class.blink::CSSParserToken"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %7, i64 %10
  %12 = icmp ugt %"class.blink::CSSParserToken"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.14"* %0, i32 %5) #9
  %14 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::CSSParserToken"* %1 to i64
  %17 = ptrtoint %"class.blink::CSSParserToken"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 24
  tail call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.14"* %0, i32 %5) #9
  %20 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::CSSParserToken"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::CSSParserToken"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %23, i64 %26
  %28 = bitcast %"class.blink::CSSParserToken"* %27 to i8*
  %29 = bitcast %"class.blink::CSSParserToken"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #9
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.14"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %31, align 8
  %33 = icmp eq %"class.blink::CSSParserToken"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 32
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = udiv i64 %38, 24
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 32, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.14"* %0, i32 %27) #9
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.14"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ult i32 %1, 33
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %7 = icmp eq %"class.blink::CSSParserToken"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::CSSParserToken"*
  %10 = icmp eq %"class.blink::CSSParserToken"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  %27 = mul nuw nsw i64 %25, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #9
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.15"* %19, %"class.blink::CSSParserToken"* nonnull %6) #9
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %30) #9
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #9
  %33 = udiv i64 %31, 24
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::CSSParserToken"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::CSSParserToken"* %36 to i8*
  %45 = mul nuw nsw i64 %43, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #9
  %46 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::CSSParserToken"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::CSSParserToken"*
  %51 = icmp eq %"class.blink::CSSParserToken"* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.15"* %53, %"class.blink::CSSParserToken"* %48) #9
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %13) #9
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %30, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %45, i8* %46) #9
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"*, i8*) unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"*, i8*) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.336"*, i8*) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"*, i16*) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.336"*, i16*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"struct.blink::CSSNumericSumValue::Term"* @_ZNK3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.28"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %24, i64 %25
  ret %"struct.blink::CSSNumericSumValue::Term"* %26
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEvT0_SH_T_"(%"class.blink::Member.25"*, %"class.blink::Member.25"*) unnamed_addr #1 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.WTF::String", align 8
  %27 = bitcast %"class.WTF::String"* %19 to i8*
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %29 = bitcast %"class.WTF::String"* %20 to i8*
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %31 = bitcast %"class.WTF::String"* %9 to i8*
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %33 = bitcast %"class.WTF::String"* %10 to i8*
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %35 = bitcast %"class.WTF::String"* %17 to i8*
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %37 = bitcast %"class.WTF::String"* %18 to i8*
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %39 = bitcast %"class.WTF::String"* %15 to i8*
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %41 = bitcast %"class.WTF::String"* %16 to i8*
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %43 = bitcast %"class.WTF::String"* %13 to i8*
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %45 = bitcast %"class.WTF::String"* %14 to i8*
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::String"* %11 to i8*
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %49 = bitcast %"class.WTF::String"* %12 to i8*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %51 = bitcast %"class.WTF::String"* %7 to i8*
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %53 = bitcast %"class.WTF::String"* %8 to i8*
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %55 = bitcast %"class.WTF::String"* %5 to i8*
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %57 = bitcast %"class.WTF::String"* %6 to i8*
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %59 = bitcast %"class.WTF::String"* %3 to i8*
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %61 = bitcast %"class.WTF::String"* %4 to i8*
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  br label %63

63:                                               ; preds = %800, %2
  %64 = phi %"class.blink::Member.25"* [ %1, %2 ], [ %730, %800 ]
  %65 = phi %"class.blink::Member.25"* [ %0, %2 ], [ %75, %800 ]
  %66 = ptrtoint %"class.blink::Member.25"* %64 to i64
  %67 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %64, i64 -1
  %68 = bitcast %"class.blink::Member.25"* %67 to %"class.blink::CSSUnitValue"**
  %69 = bitcast %"class.blink::Member.25"* %67 to i64*
  %70 = bitcast %"class.blink::Member.25"* %67 to i8**
  %71 = ptrtoint %"class.blink::Member.25"* %64 to i64
  br label %72

72:                                               ; preds = %809, %63
  %73 = phi %"class.blink::Member.25"* [ %65, %63 ], [ %810, %809 ]
  br label %74

74:                                               ; preds = %529, %72
  %75 = phi %"class.blink::Member.25"* [ %73, %72 ], [ %448, %529 ]
  %76 = ptrtoint %"class.blink::Member.25"* %75 to i64
  %77 = sub i64 %66, %76
  %78 = ashr exact i64 %77, 3
  switch i64 %78, label %157 [
    i64 0, label %813
    i64 1, label %813
    i64 2, label %79
    i64 3, label %142
    i64 4, label %146
    i64 5, label %151
  ]

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %64, i64 -1
  %81 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #9
  %82 = bitcast %"class.blink::Member.25"* %80 to %"class.blink::CSSUnitValue"**
  %83 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %82, align 8
  %84 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %83) #9
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %85, align 8
  %86 = bitcast %"class.WTF::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #9
  %87 = bitcast %"class.blink::Member.25"* %75 to %"class.blink::CSSUnitValue"**
  %88 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %87, align 8
  %89 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %88) #9
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %89, %"class.WTF::StringImpl"** %90, align 8
  %91 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %25, %"class.WTF::String"* nonnull dereferenceable(8) %26) #9
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %79
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #9
  br label %107

107:                                              ; preds = %106, %103, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #9
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #9
  br label %123

123:                                              ; preds = %107, %119, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #9
  br i1 %91, label %124, label %813

124:                                              ; preds = %123
  %125 = bitcast %"class.blink::Member.25"* %75 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.blink::Member.25"* %80 to i64*
  %128 = load i64, i64* %127, align 8
  store atomic i64 %128, i64* %125 monotonic, align 8
  store atomic i64 %126, i64* %127 monotonic, align 8
  %129 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %135, label %131

131:                                              ; preds = %124
  %132 = bitcast %"class.blink::Member.25"* %75 to i8**
  %133 = load i8*, i8** %132, align 8
  %134 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %133) #9
  br label %135

135:                                              ; preds = %131, %124
  %136 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %813, label %138

138:                                              ; preds = %135
  %139 = bitcast %"class.blink::Member.25"* %80 to i8**
  %140 = load i8*, i8** %139, align 8
  %141 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %140) #9
  br label %813

142:                                              ; preds = %74
  %143 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %75, i64 1
  %144 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %64, i64 -1
  %145 = call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEjT0_SH_SH_T_"(%"class.blink::Member.25"* %75, %"class.blink::Member.25"* %143, %"class.blink::Member.25"* %144)
  br label %813

146:                                              ; preds = %74
  %147 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %75, i64 1
  %148 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %75, i64 2
  %149 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %64, i64 -1
  %150 = call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEjT0_SH_SH_SH_T_"(%"class.blink::Member.25"* %75, %"class.blink::Member.25"* %147, %"class.blink::Member.25"* %148, %"class.blink::Member.25"* %149)
  br label %813

151:                                              ; preds = %74
  %152 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %75, i64 1
  %153 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %75, i64 2
  %154 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %75, i64 3
  %155 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %64, i64 -1
  %156 = call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEjT0_SH_SH_SH_SH_T_"(%"class.blink::Member.25"* %75, %"class.blink::Member.25"* %152, %"class.blink::Member.25"* %153, %"class.blink::Member.25"* %154, %"class.blink::Member.25"* %155)
  br label %813

157:                                              ; preds = %74
  %158 = icmp slt i64 %77, 56
  br i1 %158, label %159, label %283

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %75, i64 2
  %161 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %75, i64 1
  %162 = call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEjT0_SH_SH_T_"(%"class.blink::Member.25"* %75, %"class.blink::Member.25"* %161, %"class.blink::Member.25"* %160) #9
  %163 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %75, i64 3
  %164 = icmp eq %"class.blink::Member.25"* %163, %64
  br i1 %164, label %813, label %165

165:                                              ; preds = %159
  %166 = bitcast %"class.WTF::String"* %23 to i8*
  %167 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %168 = bitcast %"class.WTF::String"* %24 to i8*
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %170 = bitcast %"class.WTF::String"* %21 to i8*
  %171 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %172 = bitcast %"class.WTF::String"* %22 to i8*
  %173 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  br label %174

174:                                              ; preds = %280, %165
  %175 = phi %"class.blink::Member.25"* [ %163, %165 ], [ %281, %280 ]
  %176 = phi %"class.blink::Member.25"* [ %160, %165 ], [ %175, %280 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #9
  %177 = bitcast %"class.blink::Member.25"* %175 to %"class.blink::CSSUnitValue"**
  %178 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %177, align 8
  %179 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %178) #9
  store %"class.WTF::StringImpl"* %179, %"class.WTF::StringImpl"** %167, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #9
  %180 = bitcast %"class.blink::Member.25"* %176 to %"class.blink::CSSUnitValue"**
  %181 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %180, align 8
  %182 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %181) #9
  store %"class.WTF::StringImpl"* %182, %"class.WTF::StringImpl"** %169, align 8
  %183 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %23, %"class.WTF::String"* nonnull dereferenceable(8) %24) #9
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %169, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %174
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #9
  br label %199

199:                                              ; preds = %198, %195, %174
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #9
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %201 = icmp eq %"class.WTF::StringImpl"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  br i1 %206, label %209, label %211

209:                                              ; preds = %202
  %210 = add i32 %208, -1
  store i32 %210, i32* %207, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i32 [ %210, %209 ], [ %208, %202 ]
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %211
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %200) #9
  br label %215

215:                                              ; preds = %214, %211, %199
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #9
  br i1 %183, label %216, label %280

216:                                              ; preds = %215
  %217 = bitcast %"class.blink::Member.25"* %175 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = inttoptr i64 %218 to %"class.blink::CSSUnitValue"*
  br label %220

220:                                              ; preds = %271, %216
  %221 = phi %"class.blink::Member.25"* [ %175, %216 ], [ %222, %271 ]
  %222 = phi %"class.blink::Member.25"* [ %176, %216 ], [ %234, %271 ]
  %223 = bitcast %"class.blink::Member.25"* %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = bitcast %"class.blink::Member.25"* %221 to i64*
  store atomic i64 %224, i64* %225 monotonic, align 8
  %226 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %231, label %228

228:                                              ; preds = %220
  %229 = inttoptr i64 %224 to i8*
  %230 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %229) #9
  br label %231

231:                                              ; preds = %228, %220
  %232 = icmp eq %"class.blink::Member.25"* %222, %75
  br i1 %232, label %272, label %233

233:                                              ; preds = %231
  %234 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %222, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %170) #9
  %235 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %219) #9
  store %"class.WTF::StringImpl"* %235, %"class.WTF::StringImpl"** %171, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #9
  %236 = bitcast %"class.blink::Member.25"* %234 to %"class.blink::CSSUnitValue"**
  %237 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %236, align 8
  %238 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %237) #9
  store %"class.WTF::StringImpl"* %238, %"class.WTF::StringImpl"** %173, align 8
  %239 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %21, %"class.WTF::String"* nonnull dereferenceable(8) %22) #9
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %241 = icmp eq %"class.WTF::StringImpl"* %240, null
  br i1 %241, label %255, label %242

242:                                              ; preds = %233
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 0
  %248 = load i32, i32* %247, align 4
  br i1 %246, label %249, label %251

249:                                              ; preds = %242
  %250 = add i32 %248, -1
  store i32 %250, i32* %247, align 4
  br label %251

251:                                              ; preds = %249, %242
  %252 = phi i32 [ %250, %249 ], [ %248, %242 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %251
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %240) #9
  br label %255

255:                                              ; preds = %254, %251, %233
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #9
  %256 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %171, align 8
  %257 = icmp eq %"class.WTF::StringImpl"* %256, null
  br i1 %257, label %271, label %258

258:                                              ; preds = %255
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %256, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = load atomic i32, i32* %259 monotonic, align 4
  %261 = and i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %256, i64 0, i32 0
  %264 = load i32, i32* %263, align 4
  br i1 %262, label %265, label %267

265:                                              ; preds = %258
  %266 = add i32 %264, -1
  store i32 %266, i32* %263, align 4
  br label %267

267:                                              ; preds = %265, %258
  %268 = phi i32 [ %266, %265 ], [ %264, %258 ]
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %267
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %256) #9
  br label %271

271:                                              ; preds = %270, %267, %255
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #9
  br i1 %239, label %220, label %272

272:                                              ; preds = %231, %271
  %273 = phi %"class.blink::Member.25"* [ %222, %271 ], [ %75, %231 ]
  %274 = bitcast %"class.blink::Member.25"* %273 to i64*
  store atomic i64 %218, i64* %274 monotonic, align 8
  %275 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %280, label %277

277:                                              ; preds = %272
  %278 = inttoptr i64 %218 to i8*
  %279 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %278) #9
  br label %280

280:                                              ; preds = %277, %272, %215
  %281 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %175, i64 1
  %282 = icmp eq %"class.blink::Member.25"* %281, %64
  br i1 %282, label %813, label %174

283:                                              ; preds = %157
  %284 = icmp sgt i64 %77, 7992
  %285 = sdiv i64 %78, 2
  %286 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %75, i64 %285
  br i1 %284, label %287, label %292

287:                                              ; preds = %283
  %288 = sdiv i64 %78, 4
  %289 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %75, i64 %288
  %290 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %286, i64 %288
  %291 = call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEjT0_SH_SH_SH_SH_T_"(%"class.blink::Member.25"* %75, %"class.blink::Member.25"* %289, %"class.blink::Member.25"* %286, %"class.blink::Member.25"* %290, %"class.blink::Member.25"* %67)
  br label %294

292:                                              ; preds = %283
  %293 = call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEjT0_SH_SH_T_"(%"class.blink::Member.25"* %75, %"class.blink::Member.25"* %286, %"class.blink::Member.25"* %67)
  br label %294

294:                                              ; preds = %292, %287
  %295 = phi i32 [ %291, %287 ], [ %293, %292 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  %296 = bitcast %"class.blink::Member.25"* %75 to %"class.blink::CSSUnitValue"**
  %297 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %296, align 8
  %298 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %297) #9
  store %"class.WTF::StringImpl"* %298, %"class.WTF::StringImpl"** %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  %299 = bitcast %"class.blink::Member.25"* %286 to %"class.blink::CSSUnitValue"**
  %300 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %299, align 8
  %301 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %300) #9
  store %"class.WTF::StringImpl"* %301, %"class.WTF::StringImpl"** %30, align 8
  %302 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %19, %"class.WTF::String"* nonnull dereferenceable(8) %20) #9
  %303 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %304 = icmp eq %"class.WTF::StringImpl"* %303, null
  br i1 %304, label %318, label %305

305:                                              ; preds = %294
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load atomic i32, i32* %306 monotonic, align 4
  %308 = and i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 0
  %311 = load i32, i32* %310, align 4
  br i1 %309, label %312, label %314

312:                                              ; preds = %305
  %313 = add i32 %311, -1
  store i32 %313, i32* %310, align 4
  br label %314

314:                                              ; preds = %312, %305
  %315 = phi i32 [ %313, %312 ], [ %311, %305 ]
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %318

317:                                              ; preds = %314
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %303) #9
  br label %318

318:                                              ; preds = %317, %314, %294
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %318
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #9
  br label %334

334:                                              ; preds = %318, %330, %333
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br i1 %302, label %609, label %335

335:                                              ; preds = %334, %588
  %336 = phi %"class.blink::Member.25"* [ %337, %588 ], [ %67, %334 ]
  %337 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %336, i64 -1
  %338 = icmp eq %"class.blink::Member.25"* %75, %337
  br i1 %338, label %339, label %550

339:                                              ; preds = %335
  %340 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %75, i64 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %341 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %296, align 8
  %342 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %341) #9
  store %"class.WTF::StringImpl"* %342, %"class.WTF::StringImpl"** %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  %343 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %68, align 8
  %344 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %343) #9
  store %"class.WTF::StringImpl"* %344, %"class.WTF::StringImpl"** %38, align 8
  %345 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %17, %"class.WTF::String"* nonnull dereferenceable(8) %18) #9
  %346 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %347 = icmp eq %"class.WTF::StringImpl"* %346, null
  br i1 %347, label %361, label %348

348:                                              ; preds = %339
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %346, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %350 = load atomic i32, i32* %349 monotonic, align 4
  %351 = and i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %346, i64 0, i32 0
  %354 = load i32, i32* %353, align 4
  br i1 %352, label %355, label %357

355:                                              ; preds = %348
  %356 = add i32 %354, -1
  store i32 %356, i32* %353, align 4
  br label %357

357:                                              ; preds = %355, %348
  %358 = phi i32 [ %356, %355 ], [ %354, %348 ]
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %361

360:                                              ; preds = %357
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %346) #9
  br label %361

361:                                              ; preds = %360, %357, %339
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9
  %362 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %363 = icmp eq %"class.WTF::StringImpl"* %362, null
  br i1 %363, label %377, label %364

364:                                              ; preds = %361
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = load atomic i32, i32* %365 monotonic, align 4
  %367 = and i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 0, i32 0
  %370 = load i32, i32* %369, align 4
  br i1 %368, label %371, label %373

371:                                              ; preds = %364
  %372 = add i32 %370, -1
  store i32 %372, i32* %369, align 4
  br label %373

373:                                              ; preds = %371, %364
  %374 = phi i32 [ %372, %371 ], [ %370, %364 ]
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %377

376:                                              ; preds = %373
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %362) #9
  br label %377

377:                                              ; preds = %361, %373, %376
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  br i1 %345, label %441, label %378

378:                                              ; preds = %377
  %379 = icmp eq %"class.blink::Member.25"* %340, %67
  br i1 %379, label %813, label %380

380:                                              ; preds = %378, %438
  %381 = phi %"class.blink::Member.25"* [ %439, %438 ], [ %340, %378 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %382 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %296, align 8
  %383 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %382) #9
  store %"class.WTF::StringImpl"* %383, %"class.WTF::StringImpl"** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #9
  %384 = bitcast %"class.blink::Member.25"* %381 to %"class.blink::CSSUnitValue"**
  %385 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %384, align 8
  %386 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %385) #9
  store %"class.WTF::StringImpl"* %386, %"class.WTF::StringImpl"** %42, align 8
  %387 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %15, %"class.WTF::String"* nonnull dereferenceable(8) %16) #9
  %388 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %389 = icmp eq %"class.WTF::StringImpl"* %388, null
  br i1 %389, label %403, label %390

390:                                              ; preds = %380
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = load atomic i32, i32* %391 monotonic, align 4
  %393 = and i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 0
  %396 = load i32, i32* %395, align 4
  br i1 %394, label %397, label %399

397:                                              ; preds = %390
  %398 = add i32 %396, -1
  store i32 %398, i32* %395, align 4
  br label %399

399:                                              ; preds = %397, %390
  %400 = phi i32 [ %398, %397 ], [ %396, %390 ]
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %403

402:                                              ; preds = %399
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %388) #9
  br label %403

403:                                              ; preds = %402, %399, %380
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #9
  %404 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %405 = icmp eq %"class.WTF::StringImpl"* %404, null
  br i1 %405, label %419, label %406

406:                                              ; preds = %403
  %407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %404, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %408 = load atomic i32, i32* %407 monotonic, align 4
  %409 = and i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %404, i64 0, i32 0
  %412 = load i32, i32* %411, align 4
  br i1 %410, label %413, label %415

413:                                              ; preds = %406
  %414 = add i32 %412, -1
  store i32 %414, i32* %411, align 4
  br label %415

415:                                              ; preds = %413, %406
  %416 = phi i32 [ %414, %413 ], [ %412, %406 ]
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %419

418:                                              ; preds = %415
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %404) #9
  br label %419

419:                                              ; preds = %403, %415, %418
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  br i1 %387, label %420, label %438

420:                                              ; preds = %419
  %421 = bitcast %"class.blink::Member.25"* %381 to i64*
  %422 = load i64, i64* %421, align 8
  %423 = load i64, i64* %69, align 8
  store atomic i64 %423, i64* %421 monotonic, align 8
  store atomic i64 %422, i64* %69 monotonic, align 8
  %424 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %430, label %426

426:                                              ; preds = %420
  %427 = bitcast %"class.blink::Member.25"* %381 to i8**
  %428 = load i8*, i8** %427, align 8
  %429 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %428) #9
  br label %430

430:                                              ; preds = %426, %420
  %431 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %436, label %433

433:                                              ; preds = %430
  %434 = load i8*, i8** %70, align 8
  %435 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %434) #9
  br label %436

436:                                              ; preds = %430, %433
  %437 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %381, i64 1
  br label %441

438:                                              ; preds = %419
  %439 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %381, i64 1
  %440 = icmp eq %"class.blink::Member.25"* %439, %67
  br i1 %440, label %813, label %380

441:                                              ; preds = %436, %377
  %442 = phi %"class.blink::Member.25"* [ %340, %377 ], [ %437, %436 ]
  %443 = icmp eq %"class.blink::Member.25"* %442, %67
  br i1 %443, label %813, label %444

444:                                              ; preds = %441, %545
  %445 = phi %"class.blink::Member.25"* [ %487, %545 ], [ %442, %441 ]
  %446 = phi %"class.blink::Member.25"* [ %490, %545 ], [ %67, %441 ]
  br label %447

447:                                              ; preds = %486, %444
  %448 = phi %"class.blink::Member.25"* [ %445, %444 ], [ %487, %486 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #9
  %449 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %296, align 8
  %450 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %449) #9
  store %"class.WTF::StringImpl"* %450, %"class.WTF::StringImpl"** %44, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #9
  %451 = bitcast %"class.blink::Member.25"* %448 to %"class.blink::CSSUnitValue"**
  %452 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %451, align 8
  %453 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %452) #9
  store %"class.WTF::StringImpl"* %453, %"class.WTF::StringImpl"** %46, align 8
  %454 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.WTF::String"* nonnull dereferenceable(8) %14) #9
  %455 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %456 = icmp eq %"class.WTF::StringImpl"* %455, null
  br i1 %456, label %470, label %457

457:                                              ; preds = %447
  %458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %459 = load atomic i32, i32* %458 monotonic, align 4
  %460 = and i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 0
  %463 = load i32, i32* %462, align 4
  br i1 %461, label %464, label %466

464:                                              ; preds = %457
  %465 = add i32 %463, -1
  store i32 %465, i32* %462, align 4
  br label %466

466:                                              ; preds = %464, %457
  %467 = phi i32 [ %465, %464 ], [ %463, %457 ]
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %469, label %470

469:                                              ; preds = %466
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %455) #9
  br label %470

470:                                              ; preds = %469, %466, %447
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9
  %471 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %472 = icmp eq %"class.WTF::StringImpl"* %471, null
  br i1 %472, label %486, label %473

473:                                              ; preds = %470
  %474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %471, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %475 = load atomic i32, i32* %474 monotonic, align 4
  %476 = and i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %471, i64 0, i32 0
  %479 = load i32, i32* %478, align 4
  br i1 %477, label %480, label %482

480:                                              ; preds = %473
  %481 = add i32 %479, -1
  store i32 %481, i32* %478, align 4
  br label %482

482:                                              ; preds = %480, %473
  %483 = phi i32 [ %481, %480 ], [ %479, %473 ]
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %485, label %486

485:                                              ; preds = %482
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %471) #9
  br label %486

486:                                              ; preds = %470, %482, %485
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #9
  %487 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %448, i64 1
  br i1 %454, label %488, label %447

488:                                              ; preds = %486, %528
  %489 = phi %"class.blink::Member.25"* [ %490, %528 ], [ %446, %486 ]
  %490 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %489, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  %491 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %296, align 8
  %492 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %491) #9
  store %"class.WTF::StringImpl"* %492, %"class.WTF::StringImpl"** %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #9
  %493 = bitcast %"class.blink::Member.25"* %490 to %"class.blink::CSSUnitValue"**
  %494 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %493, align 8
  %495 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %494) #9
  store %"class.WTF::StringImpl"* %495, %"class.WTF::StringImpl"** %50, align 8
  %496 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::String"* nonnull dereferenceable(8) %12) #9
  %497 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %498 = icmp eq %"class.WTF::StringImpl"* %497, null
  br i1 %498, label %512, label %499

499:                                              ; preds = %488
  %500 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %497, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %501 = load atomic i32, i32* %500 monotonic, align 4
  %502 = and i32 %501, 2
  %503 = icmp eq i32 %502, 0
  %504 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %497, i64 0, i32 0
  %505 = load i32, i32* %504, align 4
  br i1 %503, label %506, label %508

506:                                              ; preds = %499
  %507 = add i32 %505, -1
  store i32 %507, i32* %504, align 4
  br label %508

508:                                              ; preds = %506, %499
  %509 = phi i32 [ %507, %506 ], [ %505, %499 ]
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %511, label %512

511:                                              ; preds = %508
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %497) #9
  br label %512

512:                                              ; preds = %511, %508, %488
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #9
  %513 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %514 = icmp eq %"class.WTF::StringImpl"* %513, null
  br i1 %514, label %528, label %515

515:                                              ; preds = %512
  %516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %513, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %517 = load atomic i32, i32* %516 monotonic, align 4
  %518 = and i32 %517, 2
  %519 = icmp eq i32 %518, 0
  %520 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %513, i64 0, i32 0
  %521 = load i32, i32* %520, align 4
  br i1 %519, label %522, label %524

522:                                              ; preds = %515
  %523 = add i32 %521, -1
  store i32 %523, i32* %520, align 4
  br label %524

524:                                              ; preds = %522, %515
  %525 = phi i32 [ %523, %522 ], [ %521, %515 ]
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %527, label %528

527:                                              ; preds = %524
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %513) #9
  br label %528

528:                                              ; preds = %512, %524, %527
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br i1 %496, label %488, label %529

529:                                              ; preds = %528
  %530 = icmp ult %"class.blink::Member.25"* %448, %490
  br i1 %530, label %531, label %74

531:                                              ; preds = %529
  %532 = bitcast %"class.blink::Member.25"* %448 to i64*
  %533 = load i64, i64* %532, align 8
  %534 = bitcast %"class.blink::Member.25"* %490 to i64*
  %535 = load i64, i64* %534, align 8
  store atomic i64 %535, i64* %532 monotonic, align 8
  store atomic i64 %533, i64* %534 monotonic, align 8
  %536 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %542, label %538

538:                                              ; preds = %531
  %539 = bitcast %"class.blink::Member.25"* %448 to i8**
  %540 = load i8*, i8** %539, align 8
  %541 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %540) #9
  br label %542

542:                                              ; preds = %538, %531
  %543 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %545, label %546

545:                                              ; preds = %542, %546
  br label %444

546:                                              ; preds = %542
  %547 = bitcast %"class.blink::Member.25"* %490 to i8**
  %548 = load i8*, i8** %547, align 8
  %549 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %548) #9
  br label %545

550:                                              ; preds = %335
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  %551 = bitcast %"class.blink::Member.25"* %337 to %"class.blink::CSSUnitValue"**
  %552 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %551, align 8
  %553 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %552) #9
  store %"class.WTF::StringImpl"* %553, %"class.WTF::StringImpl"** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %554 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %299, align 8
  %555 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %554) #9
  store %"class.WTF::StringImpl"* %555, %"class.WTF::StringImpl"** %34, align 8
  %556 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::String"* nonnull dereferenceable(8) %10) #9
  %557 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %558 = icmp eq %"class.WTF::StringImpl"* %557, null
  br i1 %558, label %572, label %559

559:                                              ; preds = %550
  %560 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %561 = load atomic i32, i32* %560 monotonic, align 4
  %562 = and i32 %561, 2
  %563 = icmp eq i32 %562, 0
  %564 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 0
  %565 = load i32, i32* %564, align 4
  br i1 %563, label %566, label %568

566:                                              ; preds = %559
  %567 = add i32 %565, -1
  store i32 %567, i32* %564, align 4
  br label %568

568:                                              ; preds = %566, %559
  %569 = phi i32 [ %567, %566 ], [ %565, %559 ]
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %571, label %572

571:                                              ; preds = %568
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %557) #9
  br label %572

572:                                              ; preds = %571, %568, %550
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %573 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %574 = icmp eq %"class.WTF::StringImpl"* %573, null
  br i1 %574, label %588, label %575

575:                                              ; preds = %572
  %576 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %573, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %577 = load atomic i32, i32* %576 monotonic, align 4
  %578 = and i32 %577, 2
  %579 = icmp eq i32 %578, 0
  %580 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %573, i64 0, i32 0
  %581 = load i32, i32* %580, align 4
  br i1 %579, label %582, label %584

582:                                              ; preds = %575
  %583 = add i32 %581, -1
  store i32 %583, i32* %580, align 4
  br label %584

584:                                              ; preds = %582, %575
  %585 = phi i32 [ %583, %582 ], [ %581, %575 ]
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %587, label %588

587:                                              ; preds = %584
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %573) #9
  br label %588

588:                                              ; preds = %572, %584, %587
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br i1 %556, label %589, label %335

589:                                              ; preds = %588
  %590 = bitcast %"class.blink::Member.25"* %75 to i64*
  %591 = load i64, i64* %590, align 8
  %592 = bitcast %"class.blink::Member.25"* %337 to i64*
  %593 = load i64, i64* %592, align 8
  store atomic i64 %593, i64* %590 monotonic, align 8
  store atomic i64 %591, i64* %592 monotonic, align 8
  %594 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %595 = icmp eq i32 %594, 0
  br i1 %595, label %600, label %596

596:                                              ; preds = %589
  %597 = bitcast %"class.blink::Member.25"* %75 to i8**
  %598 = load i8*, i8** %597, align 8
  %599 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %598) #9
  br label %600

600:                                              ; preds = %596, %589
  %601 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %602 = icmp eq i32 %601, 0
  br i1 %602, label %607, label %603

603:                                              ; preds = %600
  %604 = bitcast %"class.blink::Member.25"* %337 to i8**
  %605 = load i8*, i8** %604, align 8
  %606 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %605) #9
  br label %607

607:                                              ; preds = %600, %603
  %608 = add i32 %295, 1
  br label %609

609:                                              ; preds = %334, %607
  %610 = phi i32 [ %608, %607 ], [ %295, %334 ]
  %611 = phi %"class.blink::Member.25"* [ %337, %607 ], [ %67, %334 ]
  %612 = ptrtoint %"class.blink::Member.25"* %75 to i64
  %613 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %75, i64 1
  %614 = icmp ult %"class.blink::Member.25"* %613, %611
  br i1 %614, label %615, label %727

615:                                              ; preds = %609, %723
  %616 = phi %"class.blink::Member.25"* [ %726, %723 ], [ %286, %609 ]
  %617 = phi i32 [ %724, %723 ], [ %610, %609 ]
  %618 = phi %"class.blink::Member.25"* [ %661, %723 ], [ %613, %609 ]
  %619 = phi %"class.blink::Member.25"* [ %664, %723 ], [ %611, %609 ]
  %620 = bitcast %"class.blink::Member.25"* %616 to %"class.blink::CSSUnitValue"**
  br label %621

621:                                              ; preds = %660, %615
  %622 = phi %"class.blink::Member.25"* [ %618, %615 ], [ %661, %660 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  %623 = bitcast %"class.blink::Member.25"* %622 to %"class.blink::CSSUnitValue"**
  %624 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %623, align 8
  %625 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %624) #9
  store %"class.WTF::StringImpl"* %625, %"class.WTF::StringImpl"** %52, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #9
  %626 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %620, align 8
  %627 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %626) #9
  store %"class.WTF::StringImpl"* %627, %"class.WTF::StringImpl"** %54, align 8
  %628 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %8) #9
  %629 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %630 = icmp eq %"class.WTF::StringImpl"* %629, null
  br i1 %630, label %644, label %631

631:                                              ; preds = %621
  %632 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %629, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %633 = load atomic i32, i32* %632 monotonic, align 4
  %634 = and i32 %633, 2
  %635 = icmp eq i32 %634, 0
  %636 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %629, i64 0, i32 0
  %637 = load i32, i32* %636, align 4
  br i1 %635, label %638, label %640

638:                                              ; preds = %631
  %639 = add i32 %637, -1
  store i32 %639, i32* %636, align 4
  br label %640

640:                                              ; preds = %638, %631
  %641 = phi i32 [ %639, %638 ], [ %637, %631 ]
  %642 = icmp eq i32 %641, 0
  br i1 %642, label %643, label %644

643:                                              ; preds = %640
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %629) #9
  br label %644

644:                                              ; preds = %643, %640, %621
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #9
  %645 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %646 = icmp eq %"class.WTF::StringImpl"* %645, null
  br i1 %646, label %660, label %647

647:                                              ; preds = %644
  %648 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %645, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %649 = load atomic i32, i32* %648 monotonic, align 4
  %650 = and i32 %649, 2
  %651 = icmp eq i32 %650, 0
  %652 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %645, i64 0, i32 0
  %653 = load i32, i32* %652, align 4
  br i1 %651, label %654, label %656

654:                                              ; preds = %647
  %655 = add i32 %653, -1
  store i32 %655, i32* %652, align 4
  br label %656

656:                                              ; preds = %654, %647
  %657 = phi i32 [ %655, %654 ], [ %653, %647 ]
  %658 = icmp eq i32 %657, 0
  br i1 %658, label %659, label %660

659:                                              ; preds = %656
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %645) #9
  br label %660

660:                                              ; preds = %644, %656, %659
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  %661 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %622, i64 1
  br i1 %628, label %621, label %662

662:                                              ; preds = %660, %702
  %663 = phi %"class.blink::Member.25"* [ %664, %702 ], [ %619, %660 ]
  %664 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %663, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #9
  %665 = bitcast %"class.blink::Member.25"* %664 to %"class.blink::CSSUnitValue"**
  %666 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %665, align 8
  %667 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %666) #9
  store %"class.WTF::StringImpl"* %667, %"class.WTF::StringImpl"** %56, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #9
  %668 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %620, align 8
  %669 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %668) #9
  store %"class.WTF::StringImpl"* %669, %"class.WTF::StringImpl"** %58, align 8
  %670 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %671 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %672 = icmp eq %"class.WTF::StringImpl"* %671, null
  br i1 %672, label %686, label %673

673:                                              ; preds = %662
  %674 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %671, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %675 = load atomic i32, i32* %674 monotonic, align 4
  %676 = and i32 %675, 2
  %677 = icmp eq i32 %676, 0
  %678 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %671, i64 0, i32 0
  %679 = load i32, i32* %678, align 4
  br i1 %677, label %680, label %682

680:                                              ; preds = %673
  %681 = add i32 %679, -1
  store i32 %681, i32* %678, align 4
  br label %682

682:                                              ; preds = %680, %673
  %683 = phi i32 [ %681, %680 ], [ %679, %673 ]
  %684 = icmp eq i32 %683, 0
  br i1 %684, label %685, label %686

685:                                              ; preds = %682
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %671) #9
  br label %686

686:                                              ; preds = %685, %682, %662
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #9
  %687 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %688 = icmp eq %"class.WTF::StringImpl"* %687, null
  br i1 %688, label %702, label %689

689:                                              ; preds = %686
  %690 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %687, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %691 = load atomic i32, i32* %690 monotonic, align 4
  %692 = and i32 %691, 2
  %693 = icmp eq i32 %692, 0
  %694 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %687, i64 0, i32 0
  %695 = load i32, i32* %694, align 4
  br i1 %693, label %696, label %698

696:                                              ; preds = %689
  %697 = add i32 %695, -1
  store i32 %697, i32* %694, align 4
  br label %698

698:                                              ; preds = %696, %689
  %699 = phi i32 [ %697, %696 ], [ %695, %689 ]
  %700 = icmp eq i32 %699, 0
  br i1 %700, label %701, label %702

701:                                              ; preds = %698
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %687) #9
  br label %702

702:                                              ; preds = %686, %698, %701
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #9
  br i1 %670, label %703, label %662

703:                                              ; preds = %702
  %704 = icmp ugt %"class.blink::Member.25"* %622, %664
  br i1 %704, label %727, label %705

705:                                              ; preds = %703
  %706 = bitcast %"class.blink::Member.25"* %622 to i64*
  %707 = load i64, i64* %706, align 8
  %708 = bitcast %"class.blink::Member.25"* %664 to i64*
  %709 = load i64, i64* %708, align 8
  store atomic i64 %709, i64* %706 monotonic, align 8
  store atomic i64 %707, i64* %708 monotonic, align 8
  %710 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %716, label %712

712:                                              ; preds = %705
  %713 = bitcast %"class.blink::Member.25"* %622 to i8**
  %714 = load i8*, i8** %713, align 8
  %715 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %714) #9
  br label %716

716:                                              ; preds = %712, %705
  %717 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %718 = icmp eq i32 %717, 0
  br i1 %718, label %723, label %719

719:                                              ; preds = %716
  %720 = bitcast %"class.blink::Member.25"* %664 to i8**
  %721 = load i8*, i8** %720, align 8
  %722 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %721) #9
  br label %723

723:                                              ; preds = %716, %719
  %724 = add i32 %617, 1
  %725 = icmp eq %"class.blink::Member.25"* %616, %622
  %726 = select i1 %725, %"class.blink::Member.25"* %664, %"class.blink::Member.25"* %616
  br label %615

727:                                              ; preds = %703, %609
  %728 = phi %"class.blink::Member.25"* [ %286, %609 ], [ %616, %703 ]
  %729 = phi i32 [ %610, %609 ], [ %617, %703 ]
  %730 = phi %"class.blink::Member.25"* [ %613, %609 ], [ %622, %703 ]
  %731 = icmp eq %"class.blink::Member.25"* %730, %728
  br i1 %731, label %792, label %732

732:                                              ; preds = %727
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #9
  %733 = bitcast %"class.blink::Member.25"* %728 to %"class.blink::CSSUnitValue"**
  %734 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %733, align 8
  %735 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %734) #9
  store %"class.WTF::StringImpl"* %735, %"class.WTF::StringImpl"** %60, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #9
  %736 = bitcast %"class.blink::Member.25"* %730 to %"class.blink::CSSUnitValue"**
  %737 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %736, align 8
  %738 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %737) #9
  store %"class.WTF::StringImpl"* %738, %"class.WTF::StringImpl"** %62, align 8
  %739 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #9
  %740 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %741 = icmp eq %"class.WTF::StringImpl"* %740, null
  br i1 %741, label %755, label %742

742:                                              ; preds = %732
  %743 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %740, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %744 = load atomic i32, i32* %743 monotonic, align 4
  %745 = and i32 %744, 2
  %746 = icmp eq i32 %745, 0
  %747 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %740, i64 0, i32 0
  %748 = load i32, i32* %747, align 4
  br i1 %746, label %749, label %751

749:                                              ; preds = %742
  %750 = add i32 %748, -1
  store i32 %750, i32* %747, align 4
  br label %751

751:                                              ; preds = %749, %742
  %752 = phi i32 [ %750, %749 ], [ %748, %742 ]
  %753 = icmp eq i32 %752, 0
  br i1 %753, label %754, label %755

754:                                              ; preds = %751
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %740) #9
  br label %755

755:                                              ; preds = %754, %751, %732
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #9
  %756 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %757 = icmp eq %"class.WTF::StringImpl"* %756, null
  br i1 %757, label %771, label %758

758:                                              ; preds = %755
  %759 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %756, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %760 = load atomic i32, i32* %759 monotonic, align 4
  %761 = and i32 %760, 2
  %762 = icmp eq i32 %761, 0
  %763 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %756, i64 0, i32 0
  %764 = load i32, i32* %763, align 4
  br i1 %762, label %765, label %767

765:                                              ; preds = %758
  %766 = add i32 %764, -1
  store i32 %766, i32* %763, align 4
  br label %767

767:                                              ; preds = %765, %758
  %768 = phi i32 [ %766, %765 ], [ %764, %758 ]
  %769 = icmp eq i32 %768, 0
  br i1 %769, label %770, label %771

770:                                              ; preds = %767
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %756) #9
  br label %771

771:                                              ; preds = %755, %767, %770
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #9
  br i1 %739, label %772, label %792

772:                                              ; preds = %771
  %773 = bitcast %"class.blink::Member.25"* %730 to i64*
  %774 = load i64, i64* %773, align 8
  %775 = bitcast %"class.blink::Member.25"* %728 to i64*
  %776 = load i64, i64* %775, align 8
  store atomic i64 %776, i64* %773 monotonic, align 8
  store atomic i64 %774, i64* %775 monotonic, align 8
  %777 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %778 = icmp eq i32 %777, 0
  br i1 %778, label %783, label %779

779:                                              ; preds = %772
  %780 = bitcast %"class.blink::Member.25"* %730 to i8**
  %781 = load i8*, i8** %780, align 8
  %782 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %781) #9
  br label %783

783:                                              ; preds = %779, %772
  %784 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %790, label %786

786:                                              ; preds = %783
  %787 = bitcast %"class.blink::Member.25"* %728 to i8**
  %788 = load i8*, i8** %787, align 8
  %789 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %788) #9
  br label %790

790:                                              ; preds = %783, %786
  %791 = add i32 %729, 1
  br label %792

792:                                              ; preds = %727, %790, %771
  %793 = phi i32 [ %791, %790 ], [ %729, %771 ], [ %729, %727 ]
  %794 = icmp eq i32 %793, 0
  br i1 %794, label %795, label %802

795:                                              ; preds = %792
  %796 = call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEbT0_SH_T_"(%"class.blink::Member.25"* %75, %"class.blink::Member.25"* %730)
  %797 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %730, i64 1
  %798 = call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEbT0_SH_T_"(%"class.blink::Member.25"* %797, %"class.blink::Member.25"* %64)
  br i1 %798, label %799, label %801

799:                                              ; preds = %795
  br i1 %796, label %813, label %800

800:                                              ; preds = %799, %811
  br label %63

801:                                              ; preds = %795
  br i1 %796, label %809, label %802

802:                                              ; preds = %801, %792
  %803 = ptrtoint %"class.blink::Member.25"* %730 to i64
  %804 = sub i64 %803, %612
  %805 = sub i64 %71, %803
  %806 = icmp slt i64 %804, %805
  br i1 %806, label %807, label %811

807:                                              ; preds = %802
  call fastcc void @"_ZNSt3__16__sortIRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEvT0_SH_T_"(%"class.blink::Member.25"* %75, %"class.blink::Member.25"* %730)
  %808 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %730, i64 1
  br label %809

809:                                              ; preds = %807, %801
  %810 = phi %"class.blink::Member.25"* [ %797, %801 ], [ %808, %807 ]
  br label %72

811:                                              ; preds = %802
  %812 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %730, i64 1
  call fastcc void @"_ZNSt3__16__sortIRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEvT0_SH_T_"(%"class.blink::Member.25"* %812, %"class.blink::Member.25"* %64)
  br label %800

813:                                              ; preds = %799, %441, %74, %74, %378, %438, %280, %159, %138, %135, %123, %142, %146, %151
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEjT0_SH_SH_T_"(%"class.blink::Member.25"* nocapture, %"class.blink::Member.25"* nocapture, %"class.blink::Member.25"* nocapture) unnamed_addr #1 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = bitcast %"class.blink::Member.25"* %1 to %"class.blink::CSSUnitValue"**
  %14 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %13, align 8
  %15 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %14) #9
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %16, align 8
  %17 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = bitcast %"class.blink::Member.25"* %0 to %"class.blink::CSSUnitValue"**
  %19 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %18, align 8
  %20 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %19) #9
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %21, align 8
  %22 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* nonnull dereferenceable(8) %11) #9
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #9
  br label %38

38:                                               ; preds = %37, %34, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #9
  br label %54

54:                                               ; preds = %38, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  %55 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #9
  %56 = bitcast %"class.blink::Member.25"* %2 to %"class.blink::CSSUnitValue"**
  %57 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %56, align 8
  %58 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %57) #9
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %59, align 8
  %60 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #9
  %61 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %13, align 8
  %62 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %61) #9
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %63, align 8
  %64 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %54
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #9
  br label %80

80:                                               ; preds = %79, %76, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #9
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #9
  br label %96

96:                                               ; preds = %80, %92, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #9
  br i1 %22, label %175, label %97

97:                                               ; preds = %96
  br i1 %64, label %98, label %269

98:                                               ; preds = %97
  %99 = bitcast %"class.blink::Member.25"* %1 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.blink::Member.25"* %2 to i64*
  %102 = load i64, i64* %101, align 8
  store atomic i64 %102, i64* %99 monotonic, align 8
  store atomic i64 %100, i64* %101 monotonic, align 8
  %103 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %109, label %105

105:                                              ; preds = %98
  %106 = bitcast %"class.blink::Member.25"* %1 to i8**
  %107 = load i8*, i8** %106, align 8
  %108 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %107) #9
  br label %109

109:                                              ; preds = %105, %98
  %110 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %116, label %112

112:                                              ; preds = %109
  %113 = bitcast %"class.blink::Member.25"* %2 to i8**
  %114 = load i8*, i8** %113, align 8
  %115 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %114) #9
  br label %116

116:                                              ; preds = %109, %112
  %117 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #9
  %118 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %13, align 8
  %119 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %118) #9
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %119, %"class.WTF::StringImpl"** %120, align 8
  %121 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #9
  %122 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %18, align 8
  %123 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %122) #9
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %124, align 8
  %125 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #9
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %116
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #9
  br label %141

141:                                              ; preds = %140, %137, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #9
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #9
  br label %157

157:                                              ; preds = %141, %153, %156
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #9
  br i1 %125, label %158, label %269

158:                                              ; preds = %157
  %159 = bitcast %"class.blink::Member.25"* %0 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = load i64, i64* %99, align 8
  store atomic i64 %161, i64* %159 monotonic, align 8
  store atomic i64 %160, i64* %99 monotonic, align 8
  %162 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %168, label %164

164:                                              ; preds = %158
  %165 = bitcast %"class.blink::Member.25"* %0 to i8**
  %166 = load i8*, i8** %165, align 8
  %167 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %166) #9
  br label %168

168:                                              ; preds = %164, %158
  %169 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %269, label %171

171:                                              ; preds = %168
  %172 = bitcast %"class.blink::Member.25"* %1 to i8**
  %173 = load i8*, i8** %172, align 8
  %174 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %173) #9
  br label %269

175:                                              ; preds = %96
  %176 = bitcast %"class.blink::Member.25"* %0 to i64*
  %177 = load i64, i64* %176, align 8
  br i1 %64, label %178, label %194

178:                                              ; preds = %175
  %179 = bitcast %"class.blink::Member.25"* %2 to i64*
  %180 = load i64, i64* %179, align 8
  store atomic i64 %180, i64* %176 monotonic, align 8
  store atomic i64 %177, i64* %179 monotonic, align 8
  %181 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %187, label %183

183:                                              ; preds = %178
  %184 = bitcast %"class.blink::Member.25"* %0 to i8**
  %185 = load i8*, i8** %184, align 8
  %186 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %185) #9
  br label %187

187:                                              ; preds = %183, %178
  %188 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %269, label %190

190:                                              ; preds = %187
  %191 = bitcast %"class.blink::Member.25"* %2 to i8**
  %192 = load i8*, i8** %191, align 8
  %193 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %192) #9
  br label %269

194:                                              ; preds = %175
  %195 = bitcast %"class.blink::Member.25"* %1 to i64*
  %196 = load i64, i64* %195, align 8
  store atomic i64 %196, i64* %176 monotonic, align 8
  store atomic i64 %177, i64* %195 monotonic, align 8
  %197 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %203, label %199

199:                                              ; preds = %194
  %200 = bitcast %"class.blink::Member.25"* %0 to i8**
  %201 = load i8*, i8** %200, align 8
  %202 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %201) #9
  br label %203

203:                                              ; preds = %199, %194
  %204 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %210, label %206

206:                                              ; preds = %203
  %207 = bitcast %"class.blink::Member.25"* %1 to i8**
  %208 = load i8*, i8** %207, align 8
  %209 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %208) #9
  br label %210

210:                                              ; preds = %203, %206
  %211 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %211) #9
  %212 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %56, align 8
  %213 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %212) #9
  %214 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %213, %"class.WTF::StringImpl"** %214, align 8
  %215 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #9
  %216 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %13, align 8
  %217 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %216) #9
  %218 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %217, %"class.WTF::StringImpl"** %218, align 8
  %219 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %218, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %235, label %222

222:                                              ; preds = %210
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  br i1 %226, label %229, label %231

229:                                              ; preds = %222
  %230 = add i32 %228, -1
  store i32 %230, i32* %227, align 4
  br label %231

231:                                              ; preds = %229, %222
  %232 = phi i32 [ %230, %229 ], [ %228, %222 ]
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %231
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %220) #9
  br label %235

235:                                              ; preds = %234, %231, %210
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #9
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %251, label %238

238:                                              ; preds = %235
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = load atomic i32, i32* %239 monotonic, align 4
  %241 = and i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %244 = load i32, i32* %243, align 4
  br i1 %242, label %245, label %247

245:                                              ; preds = %238
  %246 = add i32 %244, -1
  store i32 %246, i32* %243, align 4
  br label %247

247:                                              ; preds = %245, %238
  %248 = phi i32 [ %246, %245 ], [ %244, %238 ]
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %247
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %236) #9
  br label %251

251:                                              ; preds = %235, %247, %250
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211) #9
  br i1 %219, label %252, label %269

252:                                              ; preds = %251
  %253 = load i64, i64* %195, align 8
  %254 = bitcast %"class.blink::Member.25"* %2 to i64*
  %255 = load i64, i64* %254, align 8
  store atomic i64 %255, i64* %195 monotonic, align 8
  store atomic i64 %253, i64* %254 monotonic, align 8
  %256 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %262, label %258

258:                                              ; preds = %252
  %259 = bitcast %"class.blink::Member.25"* %1 to i8**
  %260 = load i8*, i8** %259, align 8
  %261 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %260) #9
  br label %262

262:                                              ; preds = %258, %252
  %263 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %269, label %265

265:                                              ; preds = %262
  %266 = bitcast %"class.blink::Member.25"* %2 to i8**
  %267 = load i8*, i8** %266, align 8
  %268 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %267) #9
  br label %269

269:                                              ; preds = %265, %262, %190, %187, %171, %168, %251, %157, %97
  %270 = phi i32 [ 0, %97 ], [ 1, %157 ], [ 1, %251 ], [ 2, %168 ], [ 2, %171 ], [ 1, %187 ], [ 1, %190 ], [ 2, %262 ], [ 2, %265 ]
  ret i32 %270
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEjT0_SH_SH_SH_T_"(%"class.blink::Member.25"* nocapture, %"class.blink::Member.25"* nocapture, %"class.blink::Member.25"* nocapture, %"class.blink::Member.25"* nocapture) unnamed_addr #1 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEjT0_SH_SH_T_"(%"class.blink::Member.25"* %0, %"class.blink::Member.25"* %1, %"class.blink::Member.25"* %2)
  %12 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = bitcast %"class.blink::Member.25"* %3 to %"class.blink::CSSUnitValue"**
  %14 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %13, align 8
  %15 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %14) #9
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %16, align 8
  %17 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = bitcast %"class.blink::Member.25"* %2 to %"class.blink::CSSUnitValue"**
  %19 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %18, align 8
  %20 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %19) #9
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %21, align 8
  %22 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::String"* nonnull dereferenceable(8) %10) #9
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #9
  br label %38

38:                                               ; preds = %37, %34, %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #9
  br label %54

54:                                               ; preds = %38, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  br i1 %22, label %55, label %197

55:                                               ; preds = %54
  %56 = bitcast %"class.blink::Member.25"* %2 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.blink::Member.25"* %3 to i64*
  %59 = load i64, i64* %58, align 8
  store atomic i64 %59, i64* %56 monotonic, align 8
  store atomic i64 %57, i64* %58 monotonic, align 8
  %60 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %55
  %63 = bitcast %"class.blink::Member.25"* %2 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %64) #9
  br label %66

66:                                               ; preds = %62, %55
  %67 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %66
  %70 = bitcast %"class.blink::Member.25"* %3 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %71) #9
  br label %73

73:                                               ; preds = %66, %69
  %74 = add i32 %11, 1
  %75 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #9
  %76 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %18, align 8
  %77 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %76) #9
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %78, align 8
  %79 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #9
  %80 = bitcast %"class.blink::Member.25"* %1 to %"class.blink::CSSUnitValue"**
  %81 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %80, align 8
  %82 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %81) #9
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %83, align 8
  %84 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %8) #9
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %73
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #9
  br label %100

100:                                              ; preds = %99, %96, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #9
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #9
  br label %116

116:                                              ; preds = %100, %112, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #9
  br i1 %84, label %117, label %197

117:                                              ; preds = %116
  %118 = bitcast %"class.blink::Member.25"* %1 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = load i64, i64* %56, align 8
  store atomic i64 %120, i64* %118 monotonic, align 8
  store atomic i64 %119, i64* %56 monotonic, align 8
  %121 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %127, label %123

123:                                              ; preds = %117
  %124 = bitcast %"class.blink::Member.25"* %1 to i8**
  %125 = load i8*, i8** %124, align 8
  %126 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %125) #9
  br label %127

127:                                              ; preds = %123, %117
  %128 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %134, label %130

130:                                              ; preds = %127
  %131 = bitcast %"class.blink::Member.25"* %2 to i8**
  %132 = load i8*, i8** %131, align 8
  %133 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %132) #9
  br label %134

134:                                              ; preds = %127, %130
  %135 = add i32 %11, 2
  %136 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #9
  %137 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %80, align 8
  %138 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %137) #9
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %138, %"class.WTF::StringImpl"** %139, align 8
  %140 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #9
  %141 = bitcast %"class.blink::Member.25"* %0 to %"class.blink::CSSUnitValue"**
  %142 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %141, align 8
  %143 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %142) #9
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %143, %"class.WTF::StringImpl"** %144, align 8
  %145 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %134
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #9
  br label %161

161:                                              ; preds = %160, %157, %134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #9
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #9
  br label %177

177:                                              ; preds = %161, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #9
  br i1 %145, label %178, label %197

178:                                              ; preds = %177
  %179 = bitcast %"class.blink::Member.25"* %0 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = load i64, i64* %118, align 8
  store atomic i64 %181, i64* %179 monotonic, align 8
  store atomic i64 %180, i64* %118 monotonic, align 8
  %182 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %188, label %184

184:                                              ; preds = %178
  %185 = bitcast %"class.blink::Member.25"* %0 to i8**
  %186 = load i8*, i8** %185, align 8
  %187 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %186) #9
  br label %188

188:                                              ; preds = %184, %178
  %189 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %195, label %191

191:                                              ; preds = %188
  %192 = bitcast %"class.blink::Member.25"* %1 to i8**
  %193 = load i8*, i8** %192, align 8
  %194 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %193) #9
  br label %195

195:                                              ; preds = %188, %191
  %196 = add i32 %11, 3
  br label %197

197:                                              ; preds = %116, %195, %177, %54
  %198 = phi i32 [ %196, %195 ], [ %135, %177 ], [ %74, %116 ], [ %11, %54 ]
  ret i32 %198
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEjT0_SH_SH_SH_SH_T_"(%"class.blink::Member.25"* nocapture, %"class.blink::Member.25"* nocapture, %"class.blink::Member.25"* nocapture, %"class.blink::Member.25"* nocapture, %"class.blink::Member.25"* nocapture) unnamed_addr #1 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEjT0_SH_SH_SH_T_"(%"class.blink::Member.25"* %0, %"class.blink::Member.25"* %1, %"class.blink::Member.25"* %2, %"class.blink::Member.25"* %3)
  %15 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = bitcast %"class.blink::Member.25"* %4 to %"class.blink::CSSUnitValue"**
  %17 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %16, align 8
  %18 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %17) #9
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  %21 = bitcast %"class.blink::Member.25"* %3 to %"class.blink::CSSUnitValue"**
  %22 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %21, align 8
  %23 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %22) #9
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  %25 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.WTF::String"* nonnull dereferenceable(8) %13) #9
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %5
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #9
  br label %41

41:                                               ; preds = %40, %37, %5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #9
  br label %57

57:                                               ; preds = %41, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  br i1 %25, label %58, label %261

58:                                               ; preds = %57
  %59 = bitcast %"class.blink::Member.25"* %3 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.blink::Member.25"* %4 to i64*
  %62 = load i64, i64* %61, align 8
  store atomic i64 %62, i64* %59 monotonic, align 8
  store atomic i64 %60, i64* %61 monotonic, align 8
  %63 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %58
  %66 = bitcast %"class.blink::Member.25"* %3 to i8**
  %67 = load i8*, i8** %66, align 8
  %68 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %67) #9
  br label %69

69:                                               ; preds = %65, %58
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %69
  %73 = bitcast %"class.blink::Member.25"* %4 to i8**
  %74 = load i8*, i8** %73, align 8
  %75 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #9
  br label %76

76:                                               ; preds = %69, %72
  %77 = add i32 %14, 1
  %78 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #9
  %79 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %21, align 8
  %80 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %79) #9
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %81, align 8
  %82 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #9
  %83 = bitcast %"class.blink::Member.25"* %2 to %"class.blink::CSSUnitValue"**
  %84 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %83, align 8
  %85 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %84) #9
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %85, %"class.WTF::StringImpl"** %86, align 8
  %87 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* nonnull dereferenceable(8) %11) #9
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %76
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #9
  br label %103

103:                                              ; preds = %102, %99, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #9
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #9
  br label %119

119:                                              ; preds = %103, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #9
  br i1 %87, label %120, label %261

120:                                              ; preds = %119
  %121 = bitcast %"class.blink::Member.25"* %2 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = load i64, i64* %59, align 8
  store atomic i64 %123, i64* %121 monotonic, align 8
  store atomic i64 %122, i64* %59 monotonic, align 8
  %124 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %130, label %126

126:                                              ; preds = %120
  %127 = bitcast %"class.blink::Member.25"* %2 to i8**
  %128 = load i8*, i8** %127, align 8
  %129 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %128) #9
  br label %130

130:                                              ; preds = %126, %120
  %131 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %137, label %133

133:                                              ; preds = %130
  %134 = bitcast %"class.blink::Member.25"* %3 to i8**
  %135 = load i8*, i8** %134, align 8
  %136 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %135) #9
  br label %137

137:                                              ; preds = %130, %133
  %138 = add i32 %14, 2
  %139 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #9
  %140 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %83, align 8
  %141 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %140) #9
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %141, %"class.WTF::StringImpl"** %142, align 8
  %143 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #9
  %144 = bitcast %"class.blink::Member.25"* %1 to %"class.blink::CSSUnitValue"**
  %145 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %144, align 8
  %146 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %145) #9
  %147 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %146, %"class.WTF::StringImpl"** %147, align 8
  %148 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %137
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #9
  br label %164

164:                                              ; preds = %163, %160, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #9
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #9
  br label %180

180:                                              ; preds = %164, %176, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #9
  br i1 %148, label %181, label %261

181:                                              ; preds = %180
  %182 = bitcast %"class.blink::Member.25"* %1 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = load i64, i64* %121, align 8
  store atomic i64 %184, i64* %182 monotonic, align 8
  store atomic i64 %183, i64* %121 monotonic, align 8
  %185 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %191, label %187

187:                                              ; preds = %181
  %188 = bitcast %"class.blink::Member.25"* %1 to i8**
  %189 = load i8*, i8** %188, align 8
  %190 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %189) #9
  br label %191

191:                                              ; preds = %187, %181
  %192 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %198, label %194

194:                                              ; preds = %191
  %195 = bitcast %"class.blink::Member.25"* %2 to i8**
  %196 = load i8*, i8** %195, align 8
  %197 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %196) #9
  br label %198

198:                                              ; preds = %191, %194
  %199 = add i32 %14, 3
  %200 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #9
  %201 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %144, align 8
  %202 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %201) #9
  %203 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %202, %"class.WTF::StringImpl"** %203, align 8
  %204 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %204) #9
  %205 = bitcast %"class.blink::Member.25"* %0 to %"class.blink::CSSUnitValue"**
  %206 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %205, align 8
  %207 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %206) #9
  %208 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %207, %"class.WTF::StringImpl"** %208, align 8
  %209 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #9
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %225, label %212

212:                                              ; preds = %198
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  br i1 %216, label %219, label %221

219:                                              ; preds = %212
  %220 = add i32 %218, -1
  store i32 %220, i32* %217, align 4
  br label %221

221:                                              ; preds = %219, %212
  %222 = phi i32 [ %220, %219 ], [ %218, %212 ]
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %221
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %210) #9
  br label %225

225:                                              ; preds = %224, %221, %198
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #9
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %227, label %241, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  br i1 %232, label %235, label %237

235:                                              ; preds = %228
  %236 = add i32 %234, -1
  store i32 %236, i32* %233, align 4
  br label %237

237:                                              ; preds = %235, %228
  %238 = phi i32 [ %236, %235 ], [ %234, %228 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %226) #9
  br label %241

241:                                              ; preds = %225, %237, %240
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #9
  br i1 %209, label %242, label %261

242:                                              ; preds = %241
  %243 = bitcast %"class.blink::Member.25"* %0 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = load i64, i64* %182, align 8
  store atomic i64 %245, i64* %243 monotonic, align 8
  store atomic i64 %244, i64* %182 monotonic, align 8
  %246 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %252, label %248

248:                                              ; preds = %242
  %249 = bitcast %"class.blink::Member.25"* %0 to i8**
  %250 = load i8*, i8** %249, align 8
  %251 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %250) #9
  br label %252

252:                                              ; preds = %248, %242
  %253 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %259, label %255

255:                                              ; preds = %252
  %256 = bitcast %"class.blink::Member.25"* %1 to i8**
  %257 = load i8*, i8** %256, align 8
  %258 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %257) #9
  br label %259

259:                                              ; preds = %252, %255
  %260 = add i32 %14, 4
  br label %261

261:                                              ; preds = %119, %241, %259, %180, %57
  %262 = phi i32 [ %260, %259 ], [ %199, %241 ], [ %138, %180 ], [ %77, %119 ], [ %14, %57 ]
  ret i32 %262
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEbT0_SH_T_"(%"class.blink::Member.25"*, %"class.blink::Member.25"*) unnamed_addr #1 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = ptrtoint %"class.blink::Member.25"* %1 to i64
  %10 = ptrtoint %"class.blink::Member.25"* %0 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 3
  switch i64 %12, label %91 [
    i64 0, label %223
    i64 1, label %223
    i64 2, label %13
    i64 3, label %76
    i64 4, label %80
    i64 5, label %85
  ]

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %1, i64 -1
  %15 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = bitcast %"class.blink::Member.25"* %14 to %"class.blink::CSSUnitValue"**
  %17 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %16, align 8
  %18 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %17) #9
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  %21 = bitcast %"class.blink::Member.25"* %0 to %"class.blink::CSSUnitValue"**
  %22 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %21, align 8
  %23 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %22) #9
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  %25 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %8) #9
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #9
  br label %41

41:                                               ; preds = %40, %37, %13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #9
  br label %57

57:                                               ; preds = %41, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  br i1 %25, label %58, label %223

58:                                               ; preds = %57
  %59 = bitcast %"class.blink::Member.25"* %0 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.blink::Member.25"* %14 to i64*
  %62 = load i64, i64* %61, align 8
  store atomic i64 %62, i64* %59 monotonic, align 8
  store atomic i64 %60, i64* %61 monotonic, align 8
  %63 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %58
  %66 = bitcast %"class.blink::Member.25"* %0 to i8**
  %67 = load i8*, i8** %66, align 8
  %68 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %67) #9
  br label %69

69:                                               ; preds = %65, %58
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %223, label %72

72:                                               ; preds = %69
  %73 = bitcast %"class.blink::Member.25"* %14 to i8**
  %74 = load i8*, i8** %73, align 8
  %75 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #9
  br label %223

76:                                               ; preds = %2
  %77 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %0, i64 1
  %78 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %1, i64 -1
  %79 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEjT0_SH_SH_T_"(%"class.blink::Member.25"* %0, %"class.blink::Member.25"* %77, %"class.blink::Member.25"* %78)
  br label %223

80:                                               ; preds = %2
  %81 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %0, i64 1
  %82 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %0, i64 2
  %83 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %1, i64 -1
  %84 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEjT0_SH_SH_SH_T_"(%"class.blink::Member.25"* %0, %"class.blink::Member.25"* %81, %"class.blink::Member.25"* %82, %"class.blink::Member.25"* %83)
  br label %223

85:                                               ; preds = %2
  %86 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %0, i64 1
  %87 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %0, i64 2
  %88 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %0, i64 3
  %89 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %1, i64 -1
  %90 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEjT0_SH_SH_SH_SH_T_"(%"class.blink::Member.25"* %0, %"class.blink::Member.25"* %86, %"class.blink::Member.25"* %87, %"class.blink::Member.25"* %88, %"class.blink::Member.25"* %89)
  br label %223

91:                                               ; preds = %2
  %92 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %0, i64 2
  %93 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %0, i64 1
  %94 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERNS1_14ExceptionStateEE3$_0PNS1_6MemberIS2_EEEEjT0_SH_SH_T_"(%"class.blink::Member.25"* %0, %"class.blink::Member.25"* %93, %"class.blink::Member.25"* %92)
  %95 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %0, i64 3
  %96 = icmp eq %"class.blink::Member.25"* %95, %1
  br i1 %96, label %223, label %97

97:                                               ; preds = %91
  %98 = bitcast %"class.WTF::String"* %5 to i8*
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %100 = bitcast %"class.WTF::String"* %6 to i8*
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %102 = bitcast %"class.WTF::String"* %3 to i8*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %104 = bitcast %"class.WTF::String"* %4 to i8*
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  br label %106

106:                                              ; preds = %97, %216
  %107 = phi %"class.blink::Member.25"* [ %95, %97 ], [ %218, %216 ]
  %108 = phi i32 [ 0, %97 ], [ %217, %216 ]
  %109 = phi %"class.blink::Member.25"* [ %92, %97 ], [ %107, %216 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #9
  %110 = bitcast %"class.blink::Member.25"* %107 to %"class.blink::CSSUnitValue"**
  %111 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %110, align 8
  %112 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %111) #9
  store %"class.WTF::StringImpl"* %112, %"class.WTF::StringImpl"** %99, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #9
  %113 = bitcast %"class.blink::Member.25"* %109 to %"class.blink::CSSUnitValue"**
  %114 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %113, align 8
  %115 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %114) #9
  store %"class.WTF::StringImpl"* %115, %"class.WTF::StringImpl"** %101, align 8
  %116 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %106
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #9
  br label %132

132:                                              ; preds = %131, %128, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #9
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #9
  br label %148

148:                                              ; preds = %132, %144, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #9
  br i1 %116, label %149, label %216

149:                                              ; preds = %148
  %150 = bitcast %"class.blink::Member.25"* %107 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = inttoptr i64 %151 to %"class.blink::CSSUnitValue"*
  br label %153

153:                                              ; preds = %204, %149
  %154 = phi %"class.blink::Member.25"* [ %107, %149 ], [ %155, %204 ]
  %155 = phi %"class.blink::Member.25"* [ %109, %149 ], [ %167, %204 ]
  %156 = bitcast %"class.blink::Member.25"* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.blink::Member.25"* %154 to i64*
  store atomic i64 %157, i64* %158 monotonic, align 8
  %159 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %164, label %161

161:                                              ; preds = %153
  %162 = inttoptr i64 %157 to i8*
  %163 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %162) #9
  br label %164

164:                                              ; preds = %153, %161
  %165 = icmp eq %"class.blink::Member.25"* %155, %0
  br i1 %165, label %205, label %166

166:                                              ; preds = %164
  %167 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %155, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #9
  %168 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %152) #9
  store %"class.WTF::StringImpl"* %168, %"class.WTF::StringImpl"** %103, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #9
  %169 = bitcast %"class.blink::Member.25"* %167 to %"class.blink::CSSUnitValue"**
  %170 = load %"class.blink::CSSUnitValue"*, %"class.blink::CSSUnitValue"** %169, align 8
  %171 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"* %170) #9
  store %"class.WTF::StringImpl"* %171, %"class.WTF::StringImpl"** %105, align 8
  %172 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #9
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %174, label %188, label %175

175:                                              ; preds = %166
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  br i1 %179, label %182, label %184

182:                                              ; preds = %175
  %183 = add i32 %181, -1
  store i32 %183, i32* %180, align 4
  br label %184

184:                                              ; preds = %182, %175
  %185 = phi i32 [ %183, %182 ], [ %181, %175 ]
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %184
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %173) #9
  br label %188

188:                                              ; preds = %187, %184, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #9
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %204, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %189) #9
  br label %204

204:                                              ; preds = %188, %200, %203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #9
  br i1 %172, label %153, label %205

205:                                              ; preds = %164, %204
  %206 = phi %"class.blink::Member.25"* [ %155, %204 ], [ %0, %164 ]
  %207 = bitcast %"class.blink::Member.25"* %206 to i64*
  store atomic i64 %151, i64* %207 monotonic, align 8
  %208 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %213, label %210

210:                                              ; preds = %205
  %211 = inttoptr i64 %151 to i8*
  %212 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %211) #9
  br label %213

213:                                              ; preds = %205, %210
  %214 = add i32 %108, 1
  %215 = icmp eq i32 %214, 8
  br i1 %215, label %220, label %216

216:                                              ; preds = %213, %148
  %217 = phi i32 [ %214, %213 ], [ %108, %148 ]
  %218 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %107, i64 1
  %219 = icmp eq %"class.blink::Member.25"* %218, %1
  br i1 %219, label %223, label %106

220:                                              ; preds = %213
  %221 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %107, i64 1
  %222 = icmp eq %"class.blink::Member.25"* %221, %1
  br label %223

223:                                              ; preds = %216, %220, %91, %72, %69, %57, %2, %2, %85, %80, %76
  %224 = phi i1 [ true, %85 ], [ true, %80 ], [ true, %76 ], [ true, %2 ], [ true, %2 ], [ true, %57 ], [ true, %69 ], [ true, %72 ], [ true, %91 ], [ %222, %220 ], [ true, %216 ]
  ret i1 %224
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2 comdat {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %4, null
  %8 = icmp ne %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %9, label %15

9:                                                ; preds = %2
  br i1 %8, label %10, label %168

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = sext i1 %13 to i32
  br label %168

15:                                               ; preds = %2
  br i1 %8, label %21, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  %20 = zext i1 %19 to i32
  br label %168

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 1
  %29 = icmp ne i32 %28, 0
  br i1 %25, label %94, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %32, %34
  %36 = select i1 %35, i32 %32, i32 %34
  %37 = icmp eq i32 %36, 0
  br i1 %29, label %38, label %64

38:                                               ; preds = %30
  br i1 %37, label %59, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %51, %39
  %45 = phi i32 [ %54, %51 ], [ 0, %39 ]
  %46 = phi i8* [ %53, %51 ], [ %41, %39 ]
  %47 = phi i8* [ %52, %51 ], [ %43, %39 ]
  %48 = load i8, i8* %47, align 1
  %49 = load i8, i8* %46, align 1
  %50 = icmp eq i8 %48, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = getelementptr inbounds i8, i8* %46, i64 1
  %54 = add nuw i32 %45, 1
  %55 = icmp ult i32 %54, %36
  br i1 %55, label %44, label %59

56:                                               ; preds = %44
  %57 = icmp ugt i8 %48, %49
  %58 = select i1 %57, i32 1, i32 -1
  br label %168

59:                                               ; preds = %51, %38
  %60 = icmp eq i32 %32, %34
  br i1 %60, label %168, label %61

61:                                               ; preds = %59
  %62 = icmp ugt i32 %32, %34
  %63 = select i1 %62, i32 1, i32 -1
  br label %168

64:                                               ; preds = %30
  br i1 %37, label %89, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %67 = bitcast %"class.WTF::StringImpl"* %66 to i16*
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %69 = bitcast %"class.WTF::StringImpl"* %68 to i8*
  br label %70

70:                                               ; preds = %79, %65
  %71 = phi i32 [ %82, %79 ], [ 0, %65 ]
  %72 = phi i16* [ %81, %79 ], [ %67, %65 ]
  %73 = phi i8* [ %80, %79 ], [ %69, %65 ]
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = load i16, i16* %72, align 2
  %77 = zext i16 %76 to i32
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %70
  %80 = getelementptr inbounds i8, i8* %73, i64 1
  %81 = getelementptr inbounds i16, i16* %72, i64 1
  %82 = add nuw i32 %71, 1
  %83 = icmp ult i32 %82, %36
  br i1 %83, label %70, label %89

84:                                               ; preds = %70
  %85 = zext i8 %74 to i32
  %86 = zext i16 %76 to i32
  %87 = icmp ugt i32 %85, %86
  %88 = select i1 %87, i32 1, i32 -1
  br label %168

89:                                               ; preds = %79, %64
  %90 = icmp eq i32 %32, %34
  br i1 %90, label %168, label %91

91:                                               ; preds = %89
  %92 = icmp ugt i32 %32, %34
  %93 = select i1 %92, i32 1, i32 -1
  br label %168

94:                                               ; preds = %21
  br i1 %29, label %95, label %135

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp ult i32 %97, %99
  %101 = select i1 %100, i32 %97, i32 %99
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %127, label %103

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %105 = bitcast %"class.WTF::StringImpl"* %104 to i16*
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %107 = bitcast %"class.WTF::StringImpl"* %106 to i8*
  br label %108

108:                                              ; preds = %117, %103
  %109 = phi i32 [ %120, %117 ], [ 0, %103 ]
  %110 = phi i16* [ %119, %117 ], [ %105, %103 ]
  %111 = phi i8* [ %118, %117 ], [ %107, %103 ]
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = load i16, i16* %110, align 2
  %115 = zext i16 %114 to i32
  %116 = icmp eq i32 %113, %115
  br i1 %116, label %117, label %122

117:                                              ; preds = %108
  %118 = getelementptr inbounds i8, i8* %111, i64 1
  %119 = getelementptr inbounds i16, i16* %110, i64 1
  %120 = add nuw i32 %109, 1
  %121 = icmp ult i32 %120, %101
  br i1 %121, label %108, label %127

122:                                              ; preds = %108
  %123 = zext i8 %112 to i32
  %124 = zext i16 %114 to i32
  %125 = icmp ugt i32 %123, %124
  %126 = select i1 %125, i32 1, i32 -1
  br label %132

127:                                              ; preds = %117, %95
  %128 = icmp eq i32 %97, %99
  br i1 %128, label %132, label %129

129:                                              ; preds = %127
  %130 = icmp ugt i32 %97, %99
  %131 = select i1 %130, i32 1, i32 -1
  br label %132

132:                                              ; preds = %129, %127, %122
  %133 = phi i32 [ %126, %122 ], [ %131, %129 ], [ 0, %127 ]
  %134 = sub nsw i32 0, %133
  br label %168

135:                                              ; preds = %94
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp ult i32 %137, %139
  %141 = select i1 %140, i32 %137, i32 %139
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %163, label %143

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %145 = bitcast %"class.WTF::StringImpl"* %144 to i16*
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %147 = bitcast %"class.WTF::StringImpl"* %146 to i16*
  br label %148

148:                                              ; preds = %155, %143
  %149 = phi i32 [ %158, %155 ], [ 0, %143 ]
  %150 = phi i16* [ %157, %155 ], [ %145, %143 ]
  %151 = phi i16* [ %156, %155 ], [ %147, %143 ]
  %152 = load i16, i16* %151, align 2
  %153 = load i16, i16* %150, align 2
  %154 = icmp eq i16 %152, %153
  br i1 %154, label %155, label %160

155:                                              ; preds = %148
  %156 = getelementptr inbounds i16, i16* %151, i64 1
  %157 = getelementptr inbounds i16, i16* %150, i64 1
  %158 = add nuw i32 %149, 1
  %159 = icmp ult i32 %158, %141
  br i1 %159, label %148, label %163

160:                                              ; preds = %148
  %161 = icmp ugt i16 %152, %153
  %162 = select i1 %161, i32 1, i32 -1
  br label %168

163:                                              ; preds = %155, %135
  %164 = icmp eq i32 %137, %139
  br i1 %164, label %168, label %165

165:                                              ; preds = %163
  %166 = icmp ugt i32 %137, %139
  %167 = select i1 %166, i32 1, i32 -1
  br label %168

168:                                              ; preds = %9, %10, %16, %56, %59, %61, %84, %89, %91, %132, %160, %163, %165
  %169 = phi i32 [ %20, %16 ], [ 0, %9 ], [ %14, %10 ], [ %134, %132 ], [ %58, %56 ], [ %63, %61 ], [ 0, %59 ], [ %88, %84 ], [ %93, %91 ], [ 0, %89 ], [ %162, %160 ], [ %167, %165 ], [ 0, %163 ]
  %170 = icmp slt i32 %169, 0
  ret i1 %170
}

declare %"class.WTF::StringImpl"* @_ZNK5blink12CSSUnitValue4unitEv(%"class.blink::CSSUnitValue"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.39"*, %"class.WTF::Vector.39"* dereferenceable(16)) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.25"* null, %"class.blink::Member.25"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15CSSNumericValueEEEEEmm(i64 %9) #9
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #9
  %13 = ptrtoint %"class.blink::HeapVectorBacking"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.39"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking"* %12 to %"class.blink::Member.25"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #9
  %22 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member.25"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %28, align 8
  %30 = icmp ne %"class.blink::Member.25"* %24, null
  %31 = icmp ne %"class.blink::Member.25"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !4

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member.25"* %24 to i8*
  %37 = bitcast %"class.blink::Member.25"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #9
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member.25"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.25"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_12CSSUnitValueEEEvOT_(%"class.WTF::Vector.39"*, %"class.blink::CSSUnitValue"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.39"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %16, i64 %18
  %20 = bitcast %"class.blink::CSSUnitValue"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.25"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE6insertIS4_EEvjPKT_j(%"class.WTF::Vector.39"*, i32, %"class.blink::Member.25"*, i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp ult i32 %14, %1
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %12, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %12, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1990, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  %28 = load i32, i32* %13, align 4
  %29 = add i32 %28, %3
  %30 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp ugt i32 %29, %31
  br i1 %32, label %33, label %63

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %34, align 8
  %36 = icmp ugt %"class.blink::Member.25"* %35, %2
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = zext i32 %28 to i64
  %39 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %35, i64 %38
  %40 = icmp ugt %"class.blink::Member.25"* %39, %2
  br i1 %40, label %49, label %41

41:                                               ; preds = %37, %33
  %42 = lshr i32 %31, 2
  %43 = add nuw i32 %31, 1
  %44 = add i32 %43, %42
  %45 = icmp ugt i32 %44, 4
  %46 = select i1 %45, i32 %44, i32 4
  %47 = icmp ugt i32 %46, %29
  %48 = select i1 %47, i32 %46, i32 %29
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.39"* %0, i32 %48) #9
  br label %63

49:                                               ; preds = %37
  %50 = ptrtoint %"class.blink::Member.25"* %2 to i64
  %51 = ptrtoint %"class.blink::Member.25"* %35 to i64
  %52 = sub i64 %50, %51
  %53 = ashr exact i64 %52, 3
  %54 = lshr i32 %31, 2
  %55 = add nuw i32 %31, 1
  %56 = add i32 %55, %54
  %57 = icmp ugt i32 %56, 4
  %58 = select i1 %57, i32 %56, i32 4
  %59 = icmp ugt i32 %58, %29
  %60 = select i1 %59, i32 %58, i32 %29
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.39"* %0, i32 %60) #9
  %61 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %34, align 8
  %62 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %61, i64 %53
  br label %63

63:                                               ; preds = %49, %41, %27
  %64 = phi %"class.blink::Member.25"* [ %2, %27 ], [ %2, %41 ], [ %62, %49 ]
  %65 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #9
  %66 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %66, align 8
  %67 = load i32, i32* %13, align 4
  %68 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68)
  %69 = icmp ult i32 %29, %67
  br i1 %69, label %71, label %70

70:                                               ; preds = %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68)
  store i8* null, i8** %66, align 8
  br label %80

71:                                               ; preds = %63
  %72 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %29) #9
  %73 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %67) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* %72, i8* %73) #9
  %74 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68)
  store i8* %75, i8** %66, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %71
  %78 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1996, %"class.logging::CheckOpResult"* nonnull %9) #9
  %79 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #9
  br label %80

80:                                               ; preds = %70, %71, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #9
  %81 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %81, align 8
  %83 = zext i32 %1 to i64
  %84 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %82, i64 %83
  %85 = load i32, i32* %13, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %82, i64 %86
  %88 = zext i32 %3 to i64
  %89 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %84, i64 %88
  %90 = icmp ne %"class.blink::Member.25"* %89, null
  %91 = icmp ne %"class.blink::Member.25"* %84, null
  %92 = and i1 %91, %90
  br i1 %92, label %93, label %133, !prof !4

93:                                               ; preds = %80
  %94 = icmp eq i32 %3, 0
  br i1 %94, label %113, label %95

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %87, i64 -1
  %97 = icmp ult %"class.blink::Member.25"* %96, %84
  br i1 %97, label %113, label %98

98:                                               ; preds = %95
  %99 = ptrtoint %"class.blink::Member.25"* %96 to i64
  %100 = ptrtoint %"class.blink::Member.25"* %84 to i64
  %101 = sub i64 %99, %100
  %102 = ashr exact i64 %101, 3
  %103 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %89, i64 %102
  br label %104

104:                                              ; preds = %104, %98
  %105 = phi %"class.blink::Member.25"* [ %111, %104 ], [ %103, %98 ]
  %106 = phi %"class.blink::Member.25"* [ %110, %104 ], [ %96, %98 ]
  %107 = bitcast %"class.blink::Member.25"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.blink::Member.25"* %105 to i64*
  store atomic i64 %108, i64* %109 monotonic, align 8
  %110 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %106, i64 -1
  %111 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %105, i64 -1
  %112 = icmp ult %"class.blink::Member.25"* %110, %84
  br i1 %112, label %113, label %104

113:                                              ; preds = %104, %95, %93
  %114 = ptrtoint %"class.blink::Member.25"* %87 to i64
  %115 = ptrtoint %"class.blink::Member.25"* %84 to i64
  %116 = sub i64 %114, %115
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %133, label %118

118:                                              ; preds = %113
  %119 = ashr exact i64 %116, 3
  br label %120

120:                                              ; preds = %130, %118
  %121 = phi i64 [ %123, %130 ], [ %119, %118 ]
  %122 = phi %"class.blink::Member.25"* [ %131, %130 ], [ %89, %118 ]
  %123 = add i64 %121, -1
  %124 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %130, label %126

126:                                              ; preds = %120
  %127 = bitcast %"class.blink::Member.25"* %122 to i8**
  %128 = load i8*, i8** %127, align 8
  %129 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %128) #9
  br label %130

130:                                              ; preds = %126, %120
  %131 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %122, i64 1
  %132 = icmp eq i64 %123, 0
  br i1 %132, label %133, label %120

133:                                              ; preds = %130, %80, %113
  %134 = icmp ne %"class.blink::Member.25"* %64, null
  %135 = and i1 %134, %91
  br i1 %135, label %136, label %154, !prof !4

136:                                              ; preds = %133
  %137 = bitcast %"class.blink::Member.25"* %84 to i8*
  %138 = bitcast %"class.blink::Member.25"* %64 to i8*
  %139 = shl nuw nsw i64 %88, 3
  call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %137, i8* nonnull %138, i64 %139) #9
  %140 = icmp eq i32 %3, 0
  br i1 %140, label %154, label %141

141:                                              ; preds = %136, %151
  %142 = phi i64 [ %144, %151 ], [ %88, %136 ]
  %143 = phi %"class.blink::Member.25"* [ %152, %151 ], [ %84, %136 ]
  %144 = add nsw i64 %142, -1
  %145 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = bitcast %"class.blink::Member.25"* %143 to i8**
  %149 = load i8*, i8** %148, align 8
  %150 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %149) #9
  br label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %143, i64 1
  %153 = icmp eq i64 %144, 0
  br i1 %153, label %154, label %141

154:                                              ; preds = %151, %133, %136
  store i32 %29, i32* %13, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.39"*, i32, %"class.blink::CSSNumericValue"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %37

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = lshr i32 %24, 2
  %31 = add i32 %29, %30
  %32 = icmp ugt i32 %31, 4
  %33 = select i1 %32, i32 %31, i32 4
  %34 = icmp ugt i32 %33, %29
  %35 = select i1 %34, i32 %33, i32 %29
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.39"* %0, i32 %35) #9
  %36 = load i32, i32* %9, align 4
  br label %37

37:                                               ; preds = %28, %23
  %38 = phi i32 [ %36, %28 ], [ %24, %23 ]
  %39 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::Member.25"*, %"class.blink::Member.25"** %39, align 8
  %41 = zext i32 %1 to i64
  %42 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %40, i64 %41
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %40, i64 %43
  %45 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %42, i64 1
  %46 = icmp ne %"class.blink::Member.25"* %45, null
  %47 = icmp ne %"class.blink::Member.25"* %42, null
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %89, !prof !4

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %44, i64 -1
  %51 = icmp ult %"class.blink::Member.25"* %50, %42
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = ptrtoint %"class.blink::Member.25"* %42 to i64
  br label %69

54:                                               ; preds = %49
  %55 = ptrtoint %"class.blink::Member.25"* %50 to i64
  %56 = ptrtoint %"class.blink::Member.25"* %42 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %45, i64 %58
  br label %60

60:                                               ; preds = %60, %54
  %61 = phi %"class.blink::Member.25"* [ %67, %60 ], [ %59, %54 ]
  %62 = phi %"class.blink::Member.25"* [ %66, %60 ], [ %50, %54 ]
  %63 = bitcast %"class.blink::Member.25"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member.25"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %62, i64 -1
  %67 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %61, i64 -1
  %68 = icmp ult %"class.blink::Member.25"* %66, %42
  br i1 %68, label %69, label %60

69:                                               ; preds = %60, %52
  %70 = phi i64 [ %53, %52 ], [ %56, %60 ]
  %71 = ptrtoint %"class.blink::Member.25"* %44 to i64
  %72 = sub i64 %71, %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %89, label %74

74:                                               ; preds = %69
  %75 = ashr exact i64 %72, 3
  br label %76

76:                                               ; preds = %86, %74
  %77 = phi i64 [ %79, %86 ], [ %75, %74 ]
  %78 = phi %"class.blink::Member.25"* [ %87, %86 ], [ %45, %74 ]
  %79 = add i64 %77, -1
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %76
  %83 = bitcast %"class.blink::Member.25"* %78 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %84) #9
  br label %86

86:                                               ; preds = %82, %76
  %87 = getelementptr inbounds %"class.blink::Member.25", %"class.blink::Member.25"* %78, i64 1
  %88 = icmp eq i64 %79, 0
  br i1 %88, label %89, label %76

89:                                               ; preds = %86, %37, %69
  %90 = bitcast %"class.blink::CSSNumericValue"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.blink::Member.25"* %42 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %89
  %96 = inttoptr i64 %91 to i8*
  %97 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #9
  br label %98

98:                                               ; preds = %89, %95
  %99 = load i32, i32* %9, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %9, align 4
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEERNS_14ExceptionStateEENK3$_2clINS_6MemberIS0_EEEEDaRKT_: argument 0"}
!7 = distinct !{!7, !"_ZZN5blink15CSSNumericValue5toSumERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEERNS_14ExceptionStateEENK3$_2clINS_6MemberIS0_EEEEDaRKT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE: argument 0"}
!10 = distinct !{!10, !"_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE: argument 0"}
!13 = distinct !{!13, !"_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE: argument 0"}
!16 = distinct !{!16, !"_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE: argument 0"}
!19 = distinct !{!19, !"_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE: argument 0"}
!22 = distinct !{!22, !"_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE: argument 0"}
!25 = distinct !{!25, !"_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE: argument 0"}
!28 = distinct !{!28, !"_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE"}
