; ModuleID = '../../third_party/blink/renderer/modules/webdatabase/inspector_database_agent.cc'
source_filename = "../../third_party/blink/renderer/modules/webdatabase/inspector_database_agent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.253" }
%"struct.std::__1::atomic.253" = type { %"struct.std::__1::__atomic_base.254" }
%"struct.std::__1::__atomic_base.254" = type { %"struct.std::__1::__atomic_base.255" }
%"struct.std::__1::__atomic_base.255" = type { %"struct.std::__1::__cxx_atomic_impl.256" }
%"struct.std::__1::__cxx_atomic_impl.256" = type { %"struct.std::__1::__cxx_atomic_base_impl.257" }
%"struct.std::__1::__cxx_atomic_base_impl.257" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.278", i32, [4 x i8], %"class.std::__1::unique_ptr.416", %"class.std::__1::unique_ptr.416", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.422", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.427", %"class.std::__1::unique_ptr.433", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.258", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.293", %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.322", %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.343", %"class.std::__1::unique_ptr.350", %"class.std::__1::unique_ptr.350", %"class.std::__1::unique_ptr.357", %"class.std::__1::unique_ptr.364", %"class.std::__1::unique_ptr.371", %"class.std::__1::unique_ptr.396", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.314" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.314" = type { %"struct.std::__1::__atomic_base.315" }
%"struct.std::__1::__atomic_base.315" = type { %"struct.std::__1::__atomic_base.316" }
%"struct.std::__1::__atomic_base.316" = type { %"struct.std::__1::__cxx_atomic_impl.317" }
%"struct.std::__1::__cxx_atomic_impl.317" = type { %"struct.std::__1::__cxx_atomic_base_impl.318" }
%"struct.std::__1::__cxx_atomic_base_impl.318" = type { i64 }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::Worklist.325"* }
%"class.blink::Worklist.325" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.314" }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.blink::Worklist.332"* }
%"class.blink::Worklist.332" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.314" }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.blink::Worklist.339"* }
%"class.blink::Worklist.339" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.314" }
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.blink::Worklist.346"* }
%"class.blink::Worklist.346" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.314" }
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.blink::Worklist.353"* }
%"class.blink::Worklist.353" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.314" }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.blink::Worklist.360"* }
%"class.blink::Worklist.360" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.314" }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.blink::Worklist.367"* }
%"class.blink::Worklist.367" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.314" }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.374", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.390", [4 x i8] }>
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { i64 }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { float }
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.399", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.408" }
%"class.WTF::Vector.408" = type { %"class.WTF::VectorBuffer.409" }
%"class.WTF::VectorBuffer.409" = type { %"class.WTF::VectorBufferBase.410" }
%"class.WTF::VectorBufferBase.410" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.422" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.425" }
%"class.WTF::VectorBuffer.425" = type { %"class.WTF::VectorBufferBase.426" }
%"class.WTF::VectorBufferBase.426" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.439" }
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.325"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.332"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.339"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.346"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.353"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.525" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.457 }
%class.scoped_refptr.457 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.258" = type { %"struct.std::__1::__atomic_base.259" }
%"struct.std::__1::__atomic_base.259" = type { %"struct.std::__1::__cxx_atomic_impl.260" }
%"struct.std::__1::__cxx_atomic_impl.260" = type { %"struct.std::__1::__cxx_atomic_base_impl.261" }
%"struct.std::__1::__cxx_atomic_base_impl.261" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::InspectorDatabaseAgent" = type { %"class.blink::InspectorBaseAgent", %"class.blink::Member.233", %"class.blink::HeapHashMap", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Database::Backend", %"class.blink::Member", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.227" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::Database::Backend" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.7", %"class.blink::HeapListHashSet.18", %"class.blink::HeapListHashSet.29", %"class.blink::HeapListHashSet.40", %"class.blink::HeapListHashSet.51", %"class.blink::HeapListHashSet.62", %"class.blink::HeapListHashSet.73", %"class.blink::HeapListHashSet.84", %"class.blink::HeapListHashSet.95", %"class.blink::HeapListHashSet.106", %"class.blink::HeapListHashSet.117", %"class.blink::HeapListHashSet.128", %"class.blink::HeapListHashSet.139", %"class.blink::HeapListHashSet.150", %"class.blink::HeapListHashSet.161", %"class.blink::HeapListHashSet.172", %"class.blink::HeapListHashSet.183", %"class.blink::HeapListHashSet.194", %"class.blink::HeapListHashSet.205" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable", %"class.blink::Member.5", %"class.blink::Member.5", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable" = type <{ %"class.blink::Member.5"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.796", %"class.blink::Member.5", %"class.blink::Member.5" }
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.7" = type { %"class.WTF::ListHashSet.base.17", [7 x i8] }
%"class.WTF::ListHashSet.base.17" = type <{ %"class.WTF::HashTable.12", %"class.blink::Member.14", %"class.blink::Member.14", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.12" = type <{ %"class.blink::Member.14"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::HeapListHashSetNode.16"* }
%"class.blink::HeapListHashSetNode.16" = type { %"class.blink::Member.2184", %"class.blink::Member.14", %"class.blink::Member.14" }
%"class.blink::Member.2184" = type { %"class.blink::MemberBase.2185" }
%"class.blink::MemberBase.2185" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.18" = type { %"class.WTF::ListHashSet.base.28", [7 x i8] }
%"class.WTF::ListHashSet.base.28" = type <{ %"class.WTF::HashTable.23", %"class.blink::Member.25", %"class.blink::Member.25", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.23" = type <{ %"class.blink::Member.25"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HeapListHashSetNode.27"* }
%"class.blink::HeapListHashSetNode.27" = type { %"class.blink::Member.2180", %"class.blink::Member.25", %"class.blink::Member.25" }
%"class.blink::Member.2180" = type { %"class.blink::MemberBase.2181" }
%"class.blink::MemberBase.2181" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.29" = type { %"class.WTF::ListHashSet.base.39", [7 x i8] }
%"class.WTF::ListHashSet.base.39" = type <{ %"class.WTF::HashTable.34", %"class.blink::Member.36", %"class.blink::Member.36", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.34" = type <{ %"class.blink::Member.36"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::HeapListHashSetNode.38"* }
%"class.blink::HeapListHashSetNode.38" = type { %"class.blink::Member.2176", %"class.blink::Member.36", %"class.blink::Member.36" }
%"class.blink::Member.2176" = type { %"class.blink::MemberBase.2177" }
%"class.blink::MemberBase.2177" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.40" = type { %"class.WTF::ListHashSet.base.50", [7 x i8] }
%"class.WTF::ListHashSet.base.50" = type <{ %"class.WTF::HashTable.45", %"class.blink::Member.47", %"class.blink::Member.47", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.45" = type <{ %"class.blink::Member.47"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::HeapListHashSetNode.49"* }
%"class.blink::HeapListHashSetNode.49" = type { %"class.blink::Member.2172", %"class.blink::Member.47", %"class.blink::Member.47" }
%"class.blink::Member.2172" = type { %"class.blink::MemberBase.2173" }
%"class.blink::MemberBase.2173" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.51" = type { %"class.WTF::ListHashSet.base.61", [7 x i8] }
%"class.WTF::ListHashSet.base.61" = type <{ %"class.WTF::HashTable.56", %"class.blink::Member.58", %"class.blink::Member.58", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.56" = type <{ %"class.blink::Member.58"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::HeapListHashSetNode.60"* }
%"class.blink::HeapListHashSetNode.60" = type { %"class.blink::Member.2168", %"class.blink::Member.58", %"class.blink::Member.58" }
%"class.blink::Member.2168" = type { %"class.blink::MemberBase.2169" }
%"class.blink::MemberBase.2169" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.62" = type { %"class.WTF::ListHashSet.base.72", [7 x i8] }
%"class.WTF::ListHashSet.base.72" = type <{ %"class.WTF::HashTable.67", %"class.blink::Member.69", %"class.blink::Member.69", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.67" = type <{ %"class.blink::Member.69"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::HeapListHashSetNode.71"* }
%"class.blink::HeapListHashSetNode.71" = type { %"class.blink::Member.2164", %"class.blink::Member.69", %"class.blink::Member.69" }
%"class.blink::Member.2164" = type { %"class.blink::MemberBase.2165" }
%"class.blink::MemberBase.2165" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.73" = type { %"class.WTF::ListHashSet.base.83", [7 x i8] }
%"class.WTF::ListHashSet.base.83" = type <{ %"class.WTF::HashTable.78", %"class.blink::Member.80", %"class.blink::Member.80", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.78" = type <{ %"class.blink::Member.80"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::HeapListHashSetNode.82"* }
%"class.blink::HeapListHashSetNode.82" = type { %"class.blink::Member.2160", %"class.blink::Member.80", %"class.blink::Member.80" }
%"class.blink::Member.2160" = type { %"class.blink::MemberBase.2161" }
%"class.blink::MemberBase.2161" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.84" = type { %"class.WTF::ListHashSet.base.94", [7 x i8] }
%"class.WTF::ListHashSet.base.94" = type <{ %"class.WTF::HashTable.89", %"class.blink::Member.91", %"class.blink::Member.91", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.89" = type <{ %"class.blink::Member.91"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::HeapListHashSetNode.93"* }
%"class.blink::HeapListHashSetNode.93" = type { %"class.blink::Member.2156", %"class.blink::Member.91", %"class.blink::Member.91" }
%"class.blink::Member.2156" = type { %"class.blink::MemberBase.2157" }
%"class.blink::MemberBase.2157" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.95" = type { %"class.WTF::ListHashSet.base.105", [7 x i8] }
%"class.WTF::ListHashSet.base.105" = type <{ %"class.WTF::HashTable.100", %"class.blink::Member.102", %"class.blink::Member.102", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.100" = type <{ %"class.blink::Member.102"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::HeapListHashSetNode.104"* }
%"class.blink::HeapListHashSetNode.104" = type { %"class.blink::Member.2152", %"class.blink::Member.102", %"class.blink::Member.102" }
%"class.blink::Member.2152" = type { %"class.blink::MemberBase.2153" }
%"class.blink::MemberBase.2153" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.106" = type { %"class.WTF::ListHashSet.base.116", [7 x i8] }
%"class.WTF::ListHashSet.base.116" = type <{ %"class.WTF::HashTable.111", %"class.blink::Member.113", %"class.blink::Member.113", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.111" = type <{ %"class.blink::Member.113"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::HeapListHashSetNode.115"* }
%"class.blink::HeapListHashSetNode.115" = type { %"class.blink::Member.800", %"class.blink::Member.113", %"class.blink::Member.113" }
%"class.blink::Member.800" = type { %"class.blink::MemberBase.801" }
%"class.blink::MemberBase.801" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::HeapListHashSet.117" = type { %"class.WTF::ListHashSet.base.127", [7 x i8] }
%"class.WTF::ListHashSet.base.127" = type <{ %"class.WTF::HashTable.122", %"class.blink::Member.124", %"class.blink::Member.124", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.122" = type <{ %"class.blink::Member.124"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::HeapListHashSetNode.126"* }
%"class.blink::HeapListHashSetNode.126" = type { %"class.blink::Member.2146", %"class.blink::Member.124", %"class.blink::Member.124" }
%"class.blink::Member.2146" = type { %"class.blink::MemberBase.2147" }
%"class.blink::MemberBase.2147" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.128" = type { %"class.WTF::ListHashSet.base.138", [7 x i8] }
%"class.WTF::ListHashSet.base.138" = type <{ %"class.WTF::HashTable.133", %"class.blink::Member.135", %"class.blink::Member.135", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.133" = type <{ %"class.blink::Member.135"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::HeapListHashSetNode.137"* }
%"class.blink::HeapListHashSetNode.137" = type { %"class.blink::Member.2142", %"class.blink::Member.135", %"class.blink::Member.135" }
%"class.blink::Member.2142" = type { %"class.blink::MemberBase.2143" }
%"class.blink::MemberBase.2143" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.139" = type { %"class.WTF::ListHashSet.base.149", [7 x i8] }
%"class.WTF::ListHashSet.base.149" = type <{ %"class.WTF::HashTable.144", %"class.blink::Member.146", %"class.blink::Member.146", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.144" = type <{ %"class.blink::Member.146"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::HeapListHashSetNode.148"* }
%"class.blink::HeapListHashSetNode.148" = type { %"class.blink::Member.2138", %"class.blink::Member.146", %"class.blink::Member.146" }
%"class.blink::Member.2138" = type { %"class.blink::MemberBase.2139" }
%"class.blink::MemberBase.2139" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.150" = type { %"class.WTF::ListHashSet.base.160", [7 x i8] }
%"class.WTF::ListHashSet.base.160" = type <{ %"class.WTF::HashTable.155", %"class.blink::Member.157", %"class.blink::Member.157", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.155" = type <{ %"class.blink::Member.157"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::HeapListHashSetNode.159"* }
%"class.blink::HeapListHashSetNode.159" = type { %"class.blink::Member.2134", %"class.blink::Member.157", %"class.blink::Member.157" }
%"class.blink::Member.2134" = type { %"class.blink::MemberBase.2135" }
%"class.blink::MemberBase.2135" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.161" = type { %"class.WTF::ListHashSet.base.171", [7 x i8] }
%"class.WTF::ListHashSet.base.171" = type <{ %"class.WTF::HashTable.166", %"class.blink::Member.168", %"class.blink::Member.168", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.166" = type <{ %"class.blink::Member.168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::HeapListHashSetNode.170"* }
%"class.blink::HeapListHashSetNode.170" = type { %"class.blink::Member.2130", %"class.blink::Member.168", %"class.blink::Member.168" }
%"class.blink::Member.2130" = type { %"class.blink::MemberBase.2131" }
%"class.blink::MemberBase.2131" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.172" = type { %"class.WTF::ListHashSet.base.182", [7 x i8] }
%"class.WTF::ListHashSet.base.182" = type <{ %"class.WTF::HashTable.177", %"class.blink::Member.179", %"class.blink::Member.179", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.177" = type <{ %"class.blink::Member.179"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.179" = type { %"class.blink::MemberBase.180" }
%"class.blink::MemberBase.180" = type { %"class.blink::HeapListHashSetNode.181"* }
%"class.blink::HeapListHashSetNode.181" = type { %"class.blink::Member.2126", %"class.blink::Member.179", %"class.blink::Member.179" }
%"class.blink::Member.2126" = type { %"class.blink::MemberBase.2127" }
%"class.blink::MemberBase.2127" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.183" = type { %"class.WTF::ListHashSet.base.193", [7 x i8] }
%"class.WTF::ListHashSet.base.193" = type <{ %"class.WTF::HashTable.188", %"class.blink::Member.190", %"class.blink::Member.190", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.188" = type <{ %"class.blink::Member.190"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.190" = type { %"class.blink::MemberBase.191" }
%"class.blink::MemberBase.191" = type { %"class.blink::HeapListHashSetNode.192"* }
%"class.blink::HeapListHashSetNode.192" = type { %"class.blink::Member.2122", %"class.blink::Member.190", %"class.blink::Member.190" }
%"class.blink::Member.2122" = type { %"class.blink::MemberBase.2123" }
%"class.blink::MemberBase.2123" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.194" = type { %"class.WTF::ListHashSet.base.204", [7 x i8] }
%"class.WTF::ListHashSet.base.204" = type <{ %"class.WTF::HashTable.199", %"class.blink::Member.201", %"class.blink::Member.201", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.199" = type <{ %"class.blink::Member.201"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::HeapListHashSetNode.203"* }
%"class.blink::HeapListHashSetNode.203" = type { %"class.blink::Member.802", %"class.blink::Member.201", %"class.blink::Member.201" }
%"class.blink::Member.802" = type { %"class.blink::MemberBase.803" }
%"class.blink::MemberBase.803" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::HeapListHashSet.205" = type { %"class.WTF::ListHashSet.base.215", [7 x i8] }
%"class.WTF::ListHashSet.base.215" = type <{ %"class.WTF::HashTable.210", %"class.blink::Member.212", %"class.blink::Member.212", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.210" = type <{ %"class.blink::Member.212"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::HeapListHashSetNode.214"* }
%"class.blink::HeapListHashSetNode.214" = type { %"class.blink::Member.794", %"class.blink::Member.212", %"class.blink::Member.212" }
%"class.blink::Member.794" = type { %"class.blink::MemberBase.795" }
%"class.blink::MemberBase.795" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr", %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.217" }
%"class.WTF::HashTable.217" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.WTF::Vector.219" }
%"class.WTF::Vector.219" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221" }
%"class.WTF::VectorBufferBase.221" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::protocol::Database::Frontend"* }
%"class.blink::protocol::Database::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::Page"* }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.237" }
%"class.WTF::HashMap.237" = type { %"class.WTF::HashTable.238" }
%"class.WTF::HashTable.238" = type <{ %"struct.WTF::KeyValuePair.240"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.240" = type { %"class.WTF::String", %"class.blink::Member.241" }
%"class.blink::Member.241" = type { %"class.blink::MemberBase.242" }
%"class.blink::MemberBase.242" = type { %"class.blink::InspectorDatabaseResource"* }
%"class.blink::InspectorDatabaseResource" = type { %"class.blink::Member.245", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::Database"* }
%"class.blink::Database" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.249, %class.scoped_refptr.249, %"class.blink::Member.250", %class.scoped_refptr.252, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, %"struct.std::__1::atomic.258", i8, %"class.blink::DatabaseAuthorizer", %"class.blink::SQLiteDatabase", %"class.WTF::Deque", %"class.WTF::Mutex", i8, i8, %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%class.scoped_refptr.249 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.545", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.249 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.545" = type { %"class.absl::optional_internal::optional_data.546" }
%"class.absl::optional_internal::optional_data.546" = type { %"class.absl::optional_internal::optional_data_base.547" }
%"class.absl::optional_internal::optional_data_base.547" = type { %"class.absl::optional_internal::optional_data_dtor_base.548" }
%"class.absl::optional_internal::optional_data_dtor_base.548" = type { i8, %union.anon.549 }
%union.anon.549 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::DatabaseContext"* }
%"class.blink::DatabaseContext" = type opaque
%class.scoped_refptr.252 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.253" }
%"class.blink::DatabaseAuthorizer" = type { i32, i8, %"class.WTF::String" }
%"class.blink::SQLiteDatabase" = type <{ %struct.sqlite3*, i32, i8, [3 x i8], %"class.WTF::Mutex", %"class.blink::DatabaseAuthorizer"*, i32, [4 x i8], %"class.WTF::Mutex", i32, [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8] }>
%struct.sqlite3 = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.264 }
%union.anon.264 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLTransactionBackend>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLTransactionBackend>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.268" }
%"class.WTF::VectorBuffer.268" = type { %"class.WTF::VectorBufferBase.269" }
%"class.WTF::VectorBufferBase.269" = type { %"class.blink::CrossThreadPersistent"*, i32, i32 }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::SQLTransactionBackend"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::SQLTransactionBackend" = type { %"class.blink::SQLTransactionStateMachine", %"class.blink::CrossThreadPersistent.272", %"class.blink::CrossThreadPersistent.458", %"class.blink::CrossThreadPersistent.501", %"class.blink::Member.503", %"class.std::__1::unique_ptr.486", i8, i8, i8, i8, i8, i8, i8, i8, %"class.WTF::Mutex", %"class.WTF::Deque.507", %"class.std::__1::unique_ptr.512" }
%"class.blink::SQLTransactionStateMachine" = type { i32 (...)**, i32, i32 }
%"class.blink::CrossThreadPersistent.272" = type { %"class.blink::PersistentBase.273" }
%"class.blink::PersistentBase.273" = type { %"class.blink::SQLTransaction"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::SQLTransaction" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SQLTransactionStateMachine.530", %"class.blink::Member.245", %"class.blink::Member.531", %"class.blink::Member.533", %"class.blink::Member.537", %"class.blink::Member.541", i8, [7 x i8], %"class.std::__1::unique_ptr.486", %"class.blink::probe::AsyncTaskId", i8, [7 x i8] }>
%"class.blink::SQLTransactionStateMachine.530" = type { i32 (...)**, i32, i32 }
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::SQLTransactionBackend"* }
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::SQLTransaction::OnProcessCallback"* }
%"class.blink::SQLTransaction::OnProcessCallback" = type { i32 (...)** }
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::SQLTransaction::OnSuccessCallback"* }
%"class.blink::SQLTransaction::OnSuccessCallback" = type { i32 (...)** }
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::SQLTransaction::OnErrorCallback"* }
%"class.blink::SQLTransaction::OnErrorCallback" = type { i32 (...)** }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.476" }
%"class.absl::optional.476" = type { %"class.absl::optional_internal::optional_data.477" }
%"class.absl::optional_internal::optional_data.477" = type { %"class.absl::optional_internal::optional_data_base.478" }
%"class.absl::optional_internal::optional_data_base.478" = type { %"class.absl::optional_internal::optional_data_dtor_base.479" }
%"class.absl::optional_internal::optional_data_dtor_base.479" = type { i8, %union.anon.480 }
%union.anon.480 = type { i64 }
%"class.blink::CrossThreadPersistent.458" = type { %"class.blink::PersistentBase.459" }
%"class.blink::PersistentBase.459" = type { %"class.blink::SQLStatementBackend"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::SQLStatementBackend" = type <{ %"class.blink::Member.462", %"class.WTF::String", %"class.WTF::Vector.481", i8, i8, [6 x i8], %"class.std::__1::unique_ptr.486", %"class.blink::Member.492", i32, [4 x i8] }>
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::SQLStatement"* }
%"class.blink::SQLStatement" = type { %"class.blink::Member.466", %"class.blink::Member.468", %"class.blink::Member.472", %"class.blink::probe::AsyncTaskId" }
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::SQLStatementBackend"* }
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::SQLStatement::OnSuccessCallback"* }
%"class.blink::SQLStatement::OnSuccessCallback" = type { i32 (...)** }
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::SQLStatement::OnErrorCallback"* }
%"class.blink::SQLStatement::OnErrorCallback" = type { i32 (...)** }
%"class.WTF::Vector.481" = type { %"class.WTF::VectorBuffer.482" }
%"class.WTF::VectorBuffer.482" = type { %"class.WTF::VectorBufferBase.483" }
%"class.WTF::VectorBufferBase.483" = type { %"class.blink::SQLValue"*, i32, i32 }
%"class.blink::SQLValue" = type { i32, double, %"class.WTF::String" }
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::SQLResultSet"* }
%"class.blink::SQLResultSet" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.494", i64, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::SQLResultSetRowList"* }
%"class.blink::SQLResultSetRowList" = type { %"class.blink::ScriptWrappable", %"class.WTF::Vector.496", %"class.WTF::Vector.481" }
%"class.WTF::Vector.496" = type { %"class.WTF::VectorBuffer.497" }
%"class.WTF::VectorBuffer.497" = type { %"class.WTF::VectorBufferBase.498" }
%"class.WTF::VectorBufferBase.498" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::CrossThreadPersistent.501" = type { %"class.blink::PersistentBase.502" }
%"class.blink::PersistentBase.502" = type { %"class.blink::Database"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::SQLTransactionWrapper"* }
%"class.blink::SQLTransactionWrapper" = type { i32 (...)** }
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.blink::SQLErrorData"* }
%"class.blink::SQLErrorData" = type { i32, %"class.WTF::String" }
%"class.WTF::Deque.507" = type { %"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLStatementBackend>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLStatementBackend>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.510" }
%"class.WTF::VectorBuffer.510" = type { %"class.WTF::VectorBufferBase.511" }
%"class.WTF::VectorBufferBase.511" = type { %"class.blink::CrossThreadPersistent.458"*, i32, i32 }
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"class.blink::SQLiteTransaction"* }
%"class.blink::SQLiteTransaction" = type opaque
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.274" }
%"struct.std::__1::atomic.274" = type { %"struct.std::__1::__atomic_base.275" }
%"struct.std::__1::__atomic_base.275" = type { %"struct.std::__1::__cxx_atomic_impl.276" }
%"struct.std::__1::__cxx_atomic_impl.276" = type { %"struct.std::__1::__cxx_atomic_base_impl.277" }
%"struct.std::__1::__cxx_atomic_base_impl.277" = type { %"class.blink::PersistentNode"* }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.519", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.519" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.520" }
%"struct.std::__1::atomic.520" = type { %"struct.std::__1::__atomic_base.521" }
%"struct.std::__1::__atomic_base.521" = type { %"struct.std::__1::__atomic_base.522" }
%"struct.std::__1::__atomic_base.522" = type { %"struct.std::__1::__cxx_atomic_impl.523" }
%"struct.std::__1::__cxx_atomic_impl.523" = type { %"struct.std::__1::__cxx_atomic_base_impl.524" }
%"struct.std::__1::__cxx_atomic_base_impl.524" = type { i8 }
%"class.blink::InspectorAgentState::SimpleField" = type <{ %"class.blink::InspectorAgentState::Field", i8, i8, [6 x i8] }>
%"class.blink::Page" = type { %"class.blink::Supplementable", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.565", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.567", %"class.blink::Member.571", %"class.blink::Member.573", %"class.blink::Member.575", %"class.blink::Member.577", %"class.blink::Member.579", %"class.blink::Member.581", %"class.blink::Member.583", %"class.blink::HeapObserverSet", %"class.blink::Member.589", %"class.blink::Member.591", %"class.blink::Member.593", %"class.blink::Member.595", %"class.blink::Member.597", %"class.blink::Member.599", %"class.blink::Member.601", %"class.blink::Member.603", %"class.blink::Member.605", %"class.blink::Member.607", %"class.blink::Member.609", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.639", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.646", %"class.blink::Member.233", %"class.blink::Member.233", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.653", %"class.std::__1::unique_ptr.659", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.552" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.552" = type { %"class.WTF::HashMap.555" }
%"class.WTF::HashMap.555" = type { %"class.WTF::HashTable.556" }
%"class.WTF::HashTable.556" = type <{ %"struct.WTF::KeyValuePair.558"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.558" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.559" }
%"class.std::__1::unique_ptr.559" = type { %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.233", %"class.blink::Member.667", %"class.blink::Member.669", i8, i32, i8, i32, %"class.blink::Member.671", %"class.blink::Member.673", %"class.blink::FrameLifecycle", %"class.blink::Member.565", %"class.blink::Member.565", %"class.blink::Member.565", %"class.blink::Member.565", %"class.blink::Member.565", %"class.blink::Member.565", %"class.blink::Member.675", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.685", i8, %"class.base::UnguessableToken", %"class.absl::optional.687", %"class.absl::optional.692", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.565", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.705", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.713", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.727", %"class.blink::FrameLoader", %"class.blink::Member.754", %"class.blink::Member.756", %"class.blink::Member.785", %"class.blink::Member.787", %"class.blink::Member.789", %"class.blink::Member.791", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member", %class.scoped_refptr.793, %"class.blink::Member.794", %"class.blink::Member.796", %"class.blink::Member.798", %"class.blink::Member.800", %"class.blink::Member.802", %"class.blink::Member.804", %"class.blink::Member.806", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.810", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback", %"class.std::__1::unique_ptr.818", %"class.absl::optional.692", i32, [4 x i8], %"class.std::__1::unique_ptr.824", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.832", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.837", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.842", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.845", %"class.blink::Member.847", %"class.blink::Member.849", %"class.blink::Member.851", %"class.mojo::StructPtr.854", %"class.blink::Member.862", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.864", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.705" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.706" }
%"class.blink::HeapHashMap.706" = type { %"class.WTF::HashMap.709" }
%"class.WTF::HashMap.709" = type { %"class.WTF::HashTable.710" }
%"class.WTF::HashTable.710" = type <{ %"struct.WTF::KeyValuePair.712"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.712" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.716", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap.716" = type { %"class.WTF::HashTable.717" }
%"class.WTF::HashTable.717" = type <{ %"struct.WTF::KeyValuePair.720"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.720" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.721 }
%class.scoped_refptr.721 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.725" }
%"class.blink::Member.725" = type { %"class.blink::MemberBase.726" }
%"class.blink::MemberBase.726" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2253" }
%"class.blink::WeakMember.2253" = type { %"class.blink::MemberBase.2254" }
%"class.blink::MemberBase.2254" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1197" }
%"class.blink::HeapObserverSet.1197" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1198" }
%"class.blink::HeapHashSet.1198" = type { %"class.WTF::HashSet.1201" }
%"class.WTF::HashSet.1201" = type { %"class.WTF::HashTable.1202" }
%"class.WTF::HashTable.1202" = type <{ %"class.blink::WeakMember.1204"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1204" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.1329", %"class.base::RepeatingCallback.2255", i64, %"class.std::__1::map.2256", i8*, i64, %"class.base::WeakPtrFactory.2265" }
%"class.base::RepeatingCallback.1329" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.816 }
%class.scoped_refptr.816 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.817", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.817" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.2255" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2256" = type { %"class.std::__1::__tree.2257" }
%"class.std::__1::__tree.2257" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2258", %"class.std::__1::__compressed_pair.2262" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2258" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2262" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"class.base::WeakPtrFactory.2265" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.727" = type { %"class.WTF::HashSet.730" }
%"class.WTF::HashSet.730" = type { %"class.WTF::HashTable.731" }
%"class.WTF::HashTable.731" = type <{ %"class.blink::WeakMember.733"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.733" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.675", %"class.blink::Member.734", %"class.blink::Member.736", %"class.std::__1::unique_ptr.738", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.750" }
%"class.blink::Member.734" = type { %"class.blink::MemberBase.735" }
%"class.blink::MemberBase.735" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.736" = type { %"class.blink::MemberBase.737" }
%"class.blink::MemberBase.737" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.1679", %"class.blink::Member.1684", %"class.std::__1::unique_ptr.1686", %"class.std::__1::unique_ptr.1279", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.1875, %"class.WTF::AtomicString", i32, %"class.absl::optional.1765", %class.scoped_refptr.249, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1730", i8, %"class.absl::optional.1737", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.675", %"class.blink::Member.1876", %"class.blink::Member.933", %"class.blink::Member.1947", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote", %class.scoped_refptr.1213, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.2053", %"class.std::__1::unique_ptr.1742", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.2055", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.2060, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.2074, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.2075", %"class.blink::Member.2090", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2103", %"class.WTF::Vector.496", i8, i8, i8, %"class.blink::WebVector.1864", %"class.blink::WebVector.1864", %"class.mojo::Remote.2108" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.1679" = type { %"class.WTF::VectorBuffer.1680" }
%"class.WTF::VectorBuffer.1680" = type { %"class.WTF::VectorBufferBase.1681" }
%"class.WTF::VectorBufferBase.1681" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.1684" = type { %"class.blink::MemberBase.1685" }
%"class.blink::MemberBase.1685" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.1730", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.1737", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.1742", %"class.base::UnguessableToken", %"class.blink::WebVector.1748", %"class.base::TickClock"*, %"class.blink::WebVector.1757", %"class.absl::optional.1765", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.1778", %"class.blink::WebVector.1770", i8, %"class.blink::WebVector.1797", i8, %"class.std::__1::unique_ptr.1805", %"class.blink::WebVector.1864", %"class.blink::WebVector.1864" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr.1689" }
%"class.blink::WebPrivatePtr.1689" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1690" }
%"class.std::__1::vector.1690" = type { %"class.std::__1::__vector_base.1691" }
%"class.std::__1::__vector_base.1691" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.1725" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.1725" = type { %"struct.std::__1::__compressed_pair_elem.1726" }
%"struct.std::__1::__compressed_pair_elem.1726" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.1692", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.1692" = type { %"class.std::__1::__compressed_pair.1693" }
%"class.std::__1::__compressed_pair.1693" = type { %"struct.std::__1::__compressed_pair_elem.1694" }
%"struct.std::__1::__compressed_pair_elem.1694" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.1736", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.1736" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.1748" = type { %"class.std::__1::vector.1749" }
%"class.std::__1::vector.1749" = type { %"class.std::__1::__vector_base.1750" }
%"class.std::__1::__vector_base.1750" = type { %"class.std::__1::unique_ptr.1751"*, %"class.std::__1::unique_ptr.1751"*, %"class.std::__1::__compressed_pair.1752" }
%"class.std::__1::unique_ptr.1751" = type opaque
%"class.std::__1::__compressed_pair.1752" = type { %"struct.std::__1::__compressed_pair_elem.1753" }
%"struct.std::__1::__compressed_pair_elem.1753" = type { %"class.std::__1::unique_ptr.1751"* }
%"class.blink::WebVector.1757" = type { %"class.std::__1::vector.1758" }
%"class.std::__1::vector.1758" = type { %"class.std::__1::__vector_base.1759" }
%"class.std::__1::__vector_base.1759" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1760" }
%"class.std::__1::__compressed_pair.1760" = type { %"struct.std::__1::__compressed_pair_elem.1761" }
%"struct.std::__1::__compressed_pair_elem.1761" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional.1778" = type { %"class.absl::optional_internal::optional_data.1779" }
%"class.absl::optional_internal::optional_data.1779" = type { %"class.absl::optional_internal::optional_data_base.1780" }
%"class.absl::optional_internal::optional_data_base.1780" = type { %"class.absl::optional_internal::optional_data_dtor_base.1781" }
%"class.absl::optional_internal::optional_data_dtor_base.1781" = type { i8, [7 x i8], %union.anon.1782 }
%union.anon.1782 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector.1770" = type { %"class.std::__1::vector.1771" }
%"class.std::__1::vector.1771" = type { %"class.std::__1::__vector_base.1772" }
%"class.std::__1::__vector_base.1772" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1773" }
%"class.std::__1::__compressed_pair.1773" = type { %"struct.std::__1::__compressed_pair_elem.1774" }
%"struct.std::__1::__compressed_pair_elem.1774" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.1797" = type { %"class.std::__1::vector.1798" }
%"class.std::__1::vector.1798" = type { %"class.std::__1::__vector_base.1799" }
%"class.std::__1::__vector_base.1799" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1800" }
%"class.std::__1::__compressed_pair.1800" = type { %"struct.std::__1::__compressed_pair_elem.1801" }
%"struct.std::__1::__compressed_pair_elem.1801" = type { i32* }
%"class.std::__1::unique_ptr.1805" = type { %"class.std::__1::__compressed_pair.1806" }
%"class.std::__1::__compressed_pair.1806" = type { %"struct.std::__1::__compressed_pair_elem.1807" }
%"struct.std::__1::__compressed_pair_elem.1807" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.1808" }
%"class.blink::WebVector.1808" = type { %"class.std::__1::vector.1809" }
%"class.std::__1::vector.1809" = type { %"class.std::__1::__vector_base.1810" }
%"class.std::__1::__vector_base.1810" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.1856" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.1811", %"class.blink::WebVector.1819", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.1770", i32, [4 x i8], %"class.absl::optional.1851", %"class.blink::WebVector.1770" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.1811" = type { %"class.std::__1::vector.1812" }
%"class.std::__1::vector.1812" = type { %"class.std::__1::__vector_base.1813" }
%"class.std::__1::__vector_base.1813" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.1814" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.1814" = type { %"struct.std::__1::__compressed_pair_elem.1815" }
%"struct.std::__1::__compressed_pair_elem.1815" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.1819" = type { %"class.std::__1::vector.1820" }
%"class.std::__1::vector.1820" = type { %"class.std::__1::__vector_base.1821" }
%"class.std::__1::__vector_base.1821" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.1846" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.1822", %"class.blink::WebVector.1770", %"class.blink::WebVector.1830", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.1822" = type { %"class.std::__1::vector.1823" }
%"class.std::__1::vector.1823" = type { %"class.std::__1::__vector_base.1824" }
%"class.std::__1::__vector_base.1824" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.1825" }
%"class.std::__1::__compressed_pair.1825" = type { %"struct.std::__1::__compressed_pair_elem.1826" }
%"struct.std::__1::__compressed_pair_elem.1826" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.1830" = type { %"class.std::__1::vector.1831" }
%"class.std::__1::vector.1831" = type { %"class.std::__1::__vector_base.1832" }
%"class.std::__1::__vector_base.1832" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.1841" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.1833" }
%"class.blink::WebVector.1833" = type { %"class.std::__1::vector.1834" }
%"class.std::__1::vector.1834" = type { %"class.std::__1::__vector_base.1835" }
%"class.std::__1::__vector_base.1835" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1836" }
%"class.std::__1::__compressed_pair.1836" = type { %"struct.std::__1::__compressed_pair_elem.1837" }
%"struct.std::__1::__compressed_pair_elem.1837" = type { i8* }
%"class.std::__1::__compressed_pair.1841" = type { %"struct.std::__1::__compressed_pair_elem.1842" }
%"struct.std::__1::__compressed_pair_elem.1842" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.1846" = type { %"struct.std::__1::__compressed_pair_elem.1847" }
%"struct.std::__1::__compressed_pair_elem.1847" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.1851" = type { %"class.absl::optional_internal::optional_data.1852" }
%"class.absl::optional_internal::optional_data.1852" = type { %"class.absl::optional_internal::optional_data_base.1853" }
%"class.absl::optional_internal::optional_data_base.1853" = type { %"class.absl::optional_internal::optional_data_dtor_base.1854" }
%"class.absl::optional_internal::optional_data_dtor_base.1854" = type { i8, [7 x i8], %union.anon.1855 }
%union.anon.1855 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.1770", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1856" = type { %"struct.std::__1::__compressed_pair_elem.1857" }
%"struct.std::__1::__compressed_pair_elem.1857" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1343 }
%class.scoped_refptr.1343 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1279" = type { %"class.std::__1::__compressed_pair.1280" }
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.1281" }
%"struct.std::__1::__compressed_pair_elem.1281" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.1282", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.1282" = type { %"class.std::__1::unique_ptr.1283" }
%"class.std::__1::unique_ptr.1283" = type { %"class.std::__1::__compressed_pair.1284" }
%"class.std::__1::__compressed_pair.1284" = type { %"struct.std::__1::__compressed_pair_elem.1285" }
%"struct.std::__1::__compressed_pair_elem.1285" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1286" }
%"class.WTF::Vector.1286" = type { %"class.WTF::VectorBuffer.1287" }
%"class.WTF::VectorBuffer.1287" = type { %"class.WTF::VectorBufferBase.1288" }
%"class.WTF::VectorBufferBase.1288" = type { %"class.mojo::StructPtr.1289"*, i32, i32 }
%"class.mojo::StructPtr.1289" = type { %"class.std::__1::unique_ptr.1290" }
%"class.std::__1::unique_ptr.1290" = type { %"class.std::__1::__compressed_pair.1291" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.1292" }
%"struct.std::__1::__compressed_pair_elem.1292" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1293", %"class.WTF::HashMap.1300", %"class.WTF::HashMap.1305", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1310", i8, %"class.WTF::Vector.496", i32, %"class.mojo::StructPtr.1311", %"class.WTF::Vector.496" }
%"class.mojo::StructPtr.1293" = type { %"class.std::__1::unique_ptr.1294" }
%"class.std::__1::unique_ptr.1294" = type { %"class.std::__1::__compressed_pair.1295" }
%"class.std::__1::__compressed_pair.1295" = type { %"struct.std::__1::__compressed_pair_elem.1296" }
%"struct.std::__1::__compressed_pair_elem.1296" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1300" = type { %"class.WTF::HashTable.1301" }
%"class.WTF::HashTable.1301" = type <{ %"struct.WTF::KeyValuePair.1304"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1304" = type opaque
%"class.WTF::HashMap.1305" = type { %"class.WTF::HashTable.1306" }
%"class.WTF::HashTable.1306" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%"class.mojo::InlinedStructPtr.1310" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1311" = type { %"class.std::__1::unique_ptr.1312" }
%"class.std::__1::unique_ptr.1312" = type { %"class.std::__1::__compressed_pair.1313" }
%"class.std::__1::__compressed_pair.1313" = type { %"struct.std::__1::__compressed_pair_elem.1314" }
%"struct.std::__1::__compressed_pair_elem.1314" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.496", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1391" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1326", i32 }>
%"class.std::__1::unique_ptr.1326" = type { %"class.std::__1::__compressed_pair.1327" }
%"class.std::__1::__compressed_pair.1327" = type { %"struct.std::__1::__compressed_pair_elem.1328" }
%"struct.std::__1::__compressed_pair_elem.1328" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.1329", %"class.base::OnceCallback.1330", %"class.absl::optional.634", %"class.absl::optional.1331", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1344", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1366", %"class.std::__1::map.1377", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1386", i8, %class.scoped_refptr.1336, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1387" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::OnceCallback.1330" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.634" = type { %"class.absl::optional_internal::optional_data.635" }
%"class.absl::optional_internal::optional_data.635" = type { %"class.absl::optional_internal::optional_data_base.636" }
%"class.absl::optional_internal::optional_data_base.636" = type { %"class.absl::optional_internal::optional_data_dtor_base.637" }
%"class.absl::optional_internal::optional_data_dtor_base.637" = type { i8, %union.anon.638 }
%union.anon.638 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1331" = type { %"class.absl::optional_internal::optional_data.1332" }
%"class.absl::optional_internal::optional_data.1332" = type { %"class.absl::optional_internal::optional_data_base.1333" }
%"class.absl::optional_internal::optional_data_base.1333" = type { %"class.absl::optional_internal::optional_data_dtor_base.1334" }
%"class.absl::optional_internal::optional_data_dtor_base.1334" = type { i8, %union.anon.1335 }
%union.anon.1335 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1336, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1337" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.1337" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1342 }
%class.scoped_refptr.1342 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1404", [4 x i8], %"class.base::RepeatingCallback.1329", %class.scoped_refptr.1336, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1404" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1344" = type { %"class.std::__1::__compressed_pair.1345" }
%"class.std::__1::__compressed_pair.1345" = type { %"struct.std::__1::__compressed_pair_elem.1346" }
%"struct.std::__1::__compressed_pair_elem.1346" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1347", %class.scoped_refptr.1348 }
%"class.base::RepeatingCallback.1347" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1348 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1349", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1349" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1353", %"class.std::__1::unique_ptr.1359", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1365" }
%"class.std::__1::unique_ptr.1353" = type { %"class.std::__1::__compressed_pair.1354" }
%"class.std::__1::__compressed_pair.1354" = type { %"struct.std::__1::__compressed_pair_elem.1355" }
%"struct.std::__1::__compressed_pair_elem.1355" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1359" = type { %"class.std::__1::__compressed_pair.1360" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.1361" }
%"struct.std::__1::__compressed_pair_elem.1361" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1365" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1366" = type { %"class.std::__1::__tree.1367" }
%"class.std::__1::__tree.1367" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1368", %"class.std::__1::__compressed_pair.1372" }
%"class.std::__1::__compressed_pair.1368" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"class.std::__1::__compressed_pair.1372" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"class.std::__1::map.1377" = type { %"class.std::__1::__tree.1378" }
%"class.std::__1::__tree.1378" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1379", %"class.std::__1::__compressed_pair.1383" }
%"class.std::__1::__compressed_pair.1379" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"class.std::__1::__compressed_pair.1383" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1386" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1336 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1387" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1391" = type { %"class.std::__1::__compressed_pair.1392" }
%"class.std::__1::__compressed_pair.1392" = type { %"struct.std::__1::__compressed_pair_elem.1393" }
%"struct.std::__1::__compressed_pair_elem.1393" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%class.scoped_refptr.1875 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.1765" = type { %"class.absl::optional_internal::optional_data.1766" }
%"class.absl::optional_internal::optional_data.1766" = type { %"class.absl::optional_internal::optional_data_base.1767" }
%"class.absl::optional_internal::optional_data_base.1767" = type { %"class.absl::optional_internal::optional_data_dtor_base.1768" }
%"class.absl::optional_internal::optional_data_dtor_base.1768" = type { i8, %union.anon.1769 }
%union.anon.1769 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector.1770", %"class.blink::WebString", %"class.blink::WebVector.1770", %"class.blink::WebVector.1770" }
%"class.std::__1::unique_ptr.1730" = type { %"class.std::__1::__compressed_pair.1731" }
%"class.std::__1::__compressed_pair.1731" = type { %"struct.std::__1::__compressed_pair_elem.1732" }
%"struct.std::__1::__compressed_pair_elem.1732" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.1737" = type { %"class.absl::optional_internal::optional_data.1738" }
%"class.absl::optional_internal::optional_data.1738" = type { %"class.absl::optional_internal::optional_data_base.1739" }
%"class.absl::optional_internal::optional_data_base.1739" = type { %"class.absl::optional_internal::optional_data_dtor_base.1740" }
%"class.absl::optional_internal::optional_data_dtor_base.1740" = type { i8, %union.anon.1741 }
%union.anon.1741 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.1783", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.1783" = type { %"class.std::__1::__vector_base.1784" }
%"class.std::__1::__vector_base.1784" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.1792" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.1785", i8, i8, [6 x i8] }>
%"class.std::__1::vector.1785" = type { %"class.std::__1::__vector_base.1786" }
%"class.std::__1::__vector_base.1786" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.1787" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.545" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.1787" = type { %"struct.std::__1::__compressed_pair_elem.1788" }
%"struct.std::__1::__compressed_pair_elem.1788" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.1792" = type { %"struct.std::__1::__compressed_pair_elem.1793" }
%"struct.std::__1::__compressed_pair_elem.1793" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.1876" = type { %"class.blink::MemberBase.1877" }
%"class.blink::MemberBase.1877" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.496", %"class.blink::Member.1880", %"class.absl::optional.1882", i64, i64, i32, %class.scoped_refptr.1887, %class.scoped_refptr.1875, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.1887 }
%"class.blink::Member.1880" = type { %"class.blink::MemberBase.1881" }
%"class.blink::MemberBase.1881" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.1882" = type { %"class.absl::optional_internal::optional_data.1883" }
%"class.absl::optional_internal::optional_data.1883" = type { %"class.absl::optional_internal::optional_data_base.1884" }
%"class.absl::optional_internal::optional_data_base.1884" = type { %"class.absl::optional_internal::optional_data_dtor_base.1885" }
%"class.absl::optional_internal::optional_data_dtor_base.1885" = type { i8, %union.anon.1886 }
%union.anon.1886 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.1887 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.1889", i64, %"class.WTF::Vector.1892", %"class.WTF::Vector.1897", %"class.WTF::Vector.1903", %"class.WTF::Vector.1921", %class.scoped_refptr.1213, %"class.WTF::HashMap.1927", %"class.WTF::Vector.1932", %"class.WTF::Vector.1892", %"class.WTF::Vector.1937", %"class.WTF::HashMap.1942", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1888" }
%"class.base::RefCountedThreadSafe.1888" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1889" = type { %"class.std::__1::__compressed_pair.1890" }
%"class.std::__1::__compressed_pair.1890" = type { %"struct.std::__1::__compressed_pair_elem.1837" }
%"class.WTF::Vector.1897" = type { %"class.WTF::VectorBuffer.1898" }
%"class.WTF::VectorBuffer.1898" = type { %"class.WTF::VectorBufferBase.1899", [8 x i8] }
%"class.WTF::VectorBufferBase.1899" = type { %class.scoped_refptr.1900*, i32, i32 }
%class.scoped_refptr.1900 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1903" = type { %"class.WTF::VectorBuffer.1904" }
%"class.WTF::VectorBuffer.1904" = type { %"class.WTF::VectorBufferBase.1905" }
%"class.WTF::VectorBufferBase.1905" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1907", %"class.std::__1::unique_ptr.1913" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1906 }
%class.scoped_refptr.1906 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1907" = type { %"class.std::__1::__compressed_pair.1908" }
%"class.std::__1::__compressed_pair.1908" = type { %"struct.std::__1::__compressed_pair_elem.1909" }
%"struct.std::__1::__compressed_pair_elem.1909" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1913" = type { %"class.std::__1::__compressed_pair.1914" }
%"class.std::__1::__compressed_pair.1914" = type { %"struct.std::__1::__compressed_pair_elem.1915" }
%"struct.std::__1::__compressed_pair_elem.1915" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1921" = type { %"class.WTF::VectorBuffer.1922" }
%"class.WTF::VectorBuffer.1922" = type { %"class.WTF::VectorBufferBase.1923" }
%"class.WTF::VectorBufferBase.1923" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1924", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1924" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1927" = type { %"class.WTF::HashTable.1928" }
%"class.WTF::HashTable.1928" = type <{ %"struct.WTF::KeyValuePair.1931"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1931" = type opaque
%"class.WTF::Vector.1932" = type { %"class.WTF::VectorBuffer.1933" }
%"class.WTF::VectorBuffer.1933" = type { %"class.WTF::VectorBufferBase.1934" }
%"class.WTF::VectorBufferBase.1934" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1892" = type { %"class.WTF::VectorBuffer.1893" }
%"class.WTF::VectorBuffer.1893" = type { %"class.WTF::VectorBufferBase.1894", [16 x i8] }
%"class.WTF::VectorBufferBase.1894" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1937" = type { %"class.WTF::VectorBuffer.1938" }
%"class.WTF::VectorBuffer.1938" = type { %"class.WTF::VectorBufferBase.1939" }
%"class.WTF::VectorBufferBase.1939" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.1950", i32 }
%"class.mojo::ScopedHandleBase.1950" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.WTF::HashMap.1942" = type { %"class.WTF::HashTable.1943" }
%"class.WTF::HashTable.1943" = type <{ %"struct.WTF::KeyValuePair.1946"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1946" = type { i8**, %"class.std::__1::unique_ptr.2240" }
%"class.std::__1::unique_ptr.2240" = type { %"class.std::__1::__compressed_pair.2241" }
%"class.std::__1::__compressed_pair.2241" = type { %"struct.std::__1::__compressed_pair_elem.2242" }
%"struct.std::__1::__compressed_pair_elem.2242" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.933" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1947" = type { %"class.blink::MemberBase.1948" }
%"class.blink::MemberBase.1948" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1701", %class.scoped_refptr.1715, %class.scoped_refptr.1716, %"struct.blink::CacheControlHeader", %"class.absl::optional.634", %"class.absl::optional.1648", %"class.absl::optional.1648", %"class.absl::optional.1648", i64, %"class.blink::KURL", %"class.WTF::Vector.1679", %"class.WTF::String", %"class.WTF::Vector.496", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.692", %"class.WTF::Vector.496", %"class.blink::KURL", %"class.absl::optional.1717" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1695" }
%"class.WTF::HashMap.1695" = type { %"class.WTF::HashTable.1696" }
%"class.WTF::HashTable.1696" = type <{ %"struct.WTF::KeyValuePair.1699"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1699" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.1700", i8 }
%"struct.std::__1::array.1700" = type { [16 x i8] }
%"class.absl::optional.1701" = type { %"class.absl::optional_internal::optional_data.1702" }
%"class.absl::optional_internal::optional_data.1702" = type { %"class.absl::optional_internal::optional_data_base.1703" }
%"class.absl::optional_internal::optional_data_base.1703" = type { %"class.absl::optional_internal::optional_data_dtor_base.1704" }
%"class.absl::optional_internal::optional_data_dtor_base.1704" = type { i8, %union.anon.1705 }
%union.anon.1705 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.496", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1706", %"class.WTF::Vector.1710" }
%"class.WTF::Vector.1706" = type { %"class.WTF::VectorBuffer.1707" }
%"class.WTF::VectorBuffer.1707" = type { %"class.WTF::VectorBufferBase.782" }
%"class.WTF::VectorBufferBase.782" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1710" = type { %"class.WTF::VectorBuffer.1711" }
%"class.WTF::VectorBuffer.1711" = type { %"class.WTF::VectorBufferBase.1712" }
%"class.WTF::VectorBufferBase.1712" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1715 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1716 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.634", %"class.absl::optional.634" }
%"class.absl::optional.1648" = type { %"class.absl::optional_internal::optional_data.1649" }
%"class.absl::optional_internal::optional_data.1649" = type { %"class.absl::optional_internal::optional_data_base.1650" }
%"class.absl::optional_internal::optional_data_base.1650" = type { %"class.absl::optional_internal::optional_data_dtor_base.1651" }
%"class.absl::optional_internal::optional_data_dtor_base.1651" = type { i8, %union.anon.1652 }
%union.anon.1652 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1641" }
%"class.base::time_internal::TimeBase.1641" = type { i64 }
%"class.absl::optional.1717" = type { %"class.absl::optional_internal::optional_data.1718" }
%"class.absl::optional_internal::optional_data.1718" = type { %"class.absl::optional_internal::optional_data_base.1719" }
%"class.absl::optional_internal::optional_data_base.1719" = type { %"class.absl::optional_internal::optional_data_dtor_base.1720" }
%"class.absl::optional_internal::optional_data_dtor_base.1720" = type { i8, %union.anon.1721 }
%union.anon.1721 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2042" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1949, %"class.std::__1::unique_ptr.1326", %"class.mojo::ScopedHandleBase.1950", [4 x i8], %class.scoped_refptr.1336, i32 }>
%class.scoped_refptr.1949 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1336, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase.1950", [4 x i8], %"class.absl::optional.2008", %"class.absl::optional.2013", %"class.absl::optional.1967", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2033", i8, [7 x i8], %class.scoped_refptr.1336, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1349" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase.1950", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1336, %"class.std::__1::unique_ptr.1951", %"class.absl::optional.1961", %"struct.std::__1::atomic.258", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1967", %"class.std::__1::unique_ptr.1972", i8, i64, %class.scoped_refptr.2005, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2006", %"class.base::WeakPtrFactory.2007" }
%"class.std::__1::unique_ptr.1951" = type { %"class.std::__1::__compressed_pair.1952" }
%"class.std::__1::__compressed_pair.1952" = type { %"struct.std::__1::__compressed_pair_elem.1953" }
%"struct.std::__1::__compressed_pair_elem.1953" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1336, i8, %"class.mojo::ScopedHandleBase.1954", %class.scoped_refptr.1955, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1956", i8*, %"class.base::WeakPtrFactory.1957" }
%"class.mojo::ScopedHandleBase.1954" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1955 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.1956" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1957" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1961" = type { %"class.absl::optional_internal::optional_data.1962" }
%"class.absl::optional_internal::optional_data.1962" = type { %"class.absl::optional_internal::optional_data_base.1963" }
%"class.absl::optional_internal::optional_data_base.1963" = type { %"class.absl::optional_internal::optional_data_dtor_base.1964" }
%"class.absl::optional_internal::optional_data_dtor_base.1964" = type { i8, %union.anon.1965 }
%union.anon.1965 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1966", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1966" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1972" = type { %"class.std::__1::__compressed_pair.1973" }
%"class.std::__1::__compressed_pair.1973" = type { %"struct.std::__1::__compressed_pair_elem.1974" }
%"struct.std::__1::__compressed_pair_elem.1974" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1975", i8, i64, %class.scoped_refptr.1976, %class.scoped_refptr.2001 }
%"class.base::RepeatingCallback.1975" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1976 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1977", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1979", %"class.std::__1::map.1990", i8, [7 x i8] }>
%"class.base::RefCounted.1977" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1978 }
%class.scoped_refptr.1978 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1979" = type { %"class.std::__1::__tree.1980" }
%"class.std::__1::__tree.1980" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1981", %"class.std::__1::__compressed_pair.1985" }
%"class.std::__1::__compressed_pair.1981" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"class.std::__1::__compressed_pair.1985" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"class.std::__1::map.1990" = type { %"class.std::__1::__tree.1991" }
%"class.std::__1::__tree.1991" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1992", %"class.std::__1::__compressed_pair.1996" }
%"class.std::__1::__compressed_pair.1992" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"class.std::__1::__compressed_pair.1996" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%class.scoped_refptr.2001 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.2005 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2006" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2007" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2008" = type { %"class.absl::optional_internal::optional_data.2009" }
%"class.absl::optional_internal::optional_data.2009" = type { %"class.absl::optional_internal::optional_data_base.2010" }
%"class.absl::optional_internal::optional_data_base.2010" = type { %"class.absl::optional_internal::optional_data_dtor_base.2011" }
%"class.absl::optional_internal::optional_data_dtor_base.2011" = type { i8, %union.anon.2012 }
%union.anon.2012 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2013" = type { %"class.absl::optional_internal::optional_data.2014" }
%"class.absl::optional_internal::optional_data.2014" = type { %"class.absl::optional_internal::optional_data_base.2015" }
%"class.absl::optional_internal::optional_data_base.2015" = type { %"class.absl::optional_internal::optional_data_dtor_base.2016" }
%"class.absl::optional_internal::optional_data_dtor_base.2016" = type { i8, [7 x i8], %union.anon.2017 }
%union.anon.2017 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1967" = type { %"class.absl::optional_internal::optional_data.1968" }
%"class.absl::optional_internal::optional_data.1968" = type { %"class.absl::optional_internal::optional_data_base.1969" }
%"class.absl::optional_internal::optional_data_base.1969" = type { %"class.absl::optional_internal::optional_data_dtor_base.1970" }
%"class.absl::optional_internal::optional_data_dtor_base.1970" = type { i8, %union.anon.1971 }
%union.anon.1971 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2018 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2018 = type { %"class.std::__1::map.2021" }
%"class.std::__1::map.2021" = type { %"class.std::__1::__tree.2022" }
%"class.std::__1::__tree.2022" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2023", %"class.std::__1::__compressed_pair.2027" }
%"class.std::__1::__compressed_pair.2023" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"class.std::__1::__compressed_pair.2027" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2032"*, i64 }
%"class.std::__1::unique_ptr.2032" = type opaque
%"class.std::__1::map.2033" = type { %"class.std::__1::__tree.2034" }
%"class.std::__1::__tree.2034" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2035", %"class.std::__1::__compressed_pair.2039" }
%"class.std::__1::__compressed_pair.2035" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"class.std::__1::__compressed_pair.2039" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"class.std::__1::unique_ptr.2042" = type { %"class.std::__1::__compressed_pair.2043" }
%"class.std::__1::__compressed_pair.2043" = type { %"struct.std::__1::__compressed_pair_elem.2044" }
%"struct.std::__1::__compressed_pair_elem.2044" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%class.scoped_refptr.1213 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.634", %"class.absl::optional.634", %"class.absl::optional.634", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.2048", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.736" }
%"class.WTF::Vector.2048" = type { %"class.WTF::VectorBuffer.2049" }
%"class.WTF::VectorBuffer.2049" = type { %"class.WTF::VectorBufferBase.2050" }
%"class.WTF::VectorBufferBase.2050" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.2053" = type { %"class.blink::MemberBase.2054" }
%"class.blink::MemberBase.2054" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.1742" = type { %"class.std::__1::__compressed_pair.1743" }
%"class.std::__1::__compressed_pair.1743" = type { %"struct.std::__1::__compressed_pair_elem.1744" }
%"struct.std::__1::__compressed_pair_elem.1744" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map", %"class.base::flat_map.1241" }
%"class.base::flat_map.1241" = type { %"class.base::internal::flat_tree.1242" }
%"class.base::internal::flat_tree.1242" = type { %"class.std::__1::vector.1243" }
%"class.std::__1::vector.1243" = type { %"class.std::__1::__vector_base.1244" }
%"class.std::__1::__vector_base.1244" = type { %"struct.std::__1::pair.1245"*, %"struct.std::__1::pair.1245"*, %"class.std::__1::__compressed_pair.1246" }
%"struct.std::__1::pair.1245" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1246" = type { %"struct.std::__1::__compressed_pair_elem.1247" }
%"struct.std::__1::__compressed_pair_elem.1247" = type { %"struct.std::__1::pair.1245"* }
%"class.WTF::Vector.2055" = type { %"class.WTF::VectorBuffer.2056" }
%"class.WTF::VectorBuffer.2056" = type { %"class.WTF::VectorBufferBase.2057" }
%"class.WTF::VectorBufferBase.2057" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.2060 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.2061", i64, %"class.WTF::Vector.2063", %"class.WTF::Vector.2068" }
%"class.WTF::RefCounted.2061" = type { %"class.base::RefCounted.2062" }
%"class.base::RefCounted.2062" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2063" = type { %"class.WTF::VectorBuffer.2064" }
%"class.WTF::VectorBuffer.2064" = type { %"class.WTF::VectorBufferBase.2065" }
%"class.WTF::VectorBufferBase.2065" = type { i8*, i32, i32 }
%"class.WTF::Vector.2068" = type { %"class.WTF::VectorBuffer.2069" }
%"class.WTF::VectorBuffer.2069" = type { %"class.WTF::VectorBufferBase.2070" }
%"class.WTF::VectorBufferBase.2070" = type { %"class.std::__1::unique_ptr.2071"*, i32, i32 }
%"class.std::__1::unique_ptr.2071" = type opaque
%class.scoped_refptr.2074 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.2075" = type { %"class.blink::MemberBase.2076" }
%"class.blink::MemberBase.2076" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.2079", %"class.std::__1::unique_ptr.2084", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.2079" = type { %"class.WTF::HashTable.2080" }
%"class.WTF::HashTable.2080" = type <{ %"struct.WTF::KeyValuePair.2083"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2083" = type { %"class.WTF::Vector.2313", %class.scoped_refptr.2317 }
%"class.WTF::Vector.2313" = type { %"class.WTF::VectorBuffer.2314" }
%"class.WTF::VectorBuffer.2314" = type { %"class.WTF::VectorBufferBase.221", [32 x i8] }
%class.scoped_refptr.2317 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2318", %"class.WTF::Vector.219", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2318" = type { %"class.base::RefCounted.2319" }
%"class.base::RefCounted.2319" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2320", i64, %"class.absl::optional.2325" }
%"class.std::__1::unique_ptr.2320" = type { %"class.std::__1::__compressed_pair.2321" }
%"class.std::__1::__compressed_pair.2321" = type { %"struct.std::__1::__compressed_pair_elem.1837" }
%"class.absl::optional.2325" = type { %"class.absl::optional_internal::optional_data.2326" }
%"class.absl::optional_internal::optional_data.2326" = type { %"class.absl::optional_internal::optional_data_base.2327" }
%"class.absl::optional_internal::optional_data_base.2327" = type { %"class.absl::optional_internal::optional_data_dtor_base.2328" }
%"class.absl::optional_internal::optional_data_dtor_base.2328" = type { i8, %union.anon.2329 }
%union.anon.2329 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2330", %"class.std::__1::unique_ptr.2331" }
%"class.mojo::ScopedHandleBase.2330" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2331" = type { %"class.std::__1::__compressed_pair.2332" }
%"class.std::__1::__compressed_pair.2332" = type { %"struct.std::__1::__compressed_pair_elem.2333" }
%"struct.std::__1::__compressed_pair_elem.2333" = type { i8* }
%"class.std::__1::unique_ptr.2084" = type { %"class.std::__1::__compressed_pair.2085" }
%"class.std::__1::__compressed_pair.2085" = type { %"struct.std::__1::__compressed_pair_elem.2086" }
%"struct.std::__1::__compressed_pair_elem.2086" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.2090" = type { %"class.blink::MemberBase.2091" }
%"class.blink::MemberBase.2091" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.741" }
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.blink::KURL"* }
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2096" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2092", %"class.std::__1::bitset.2092", %"class.std::__1::bitset.2094" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2092" = type { %"class.std::__1::__bitset.2093" }
%"class.std::__1::__bitset.2093" = type { [11 x i64] }
%"class.std::__1::bitset.2094" = type { %"class.std::__1::__bitset.2095" }
%"class.std::__1::__bitset.2095" = type { [2 x i64] }
%"class.blink::HeapHashSet.2096" = type { %"class.WTF::HashSet.2099" }
%"class.WTF::HashSet.2099" = type { %"class.WTF::HashTable.2100" }
%"class.WTF::HashTable.2100" = type <{ %"class.blink::Member.2102"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2102" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.WTF::Vector.2103" = type { %"class.WTF::VectorBuffer.2104" }
%"class.WTF::VectorBuffer.2104" = type { %"class.WTF::VectorBufferBase.2105" }
%"class.WTF::VectorBufferBase.2105" = type { i32*, i32, i32 }
%"class.blink::WebVector.1864" = type { %"class.std::__1::vector.1865" }
%"class.std::__1::vector.1865" = type { %"class.std::__1::__vector_base.1866" }
%"class.std::__1::__vector_base.1866" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.1867" }
%"class.std::__1::__compressed_pair.1867" = type { %"struct.std::__1::__compressed_pair_elem.1868" }
%"struct.std::__1::__compressed_pair_elem.1868" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2108" = type { %"class.mojo::internal::InterfacePtrState.2109" }
%"class.mojo::internal::InterfacePtrState.2109" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2110" }
%"class.std::__1::unique_ptr.2110" = type { %"class.std::__1::__compressed_pair.2111" }
%"class.std::__1::__compressed_pair.2111" = type { %"struct.std::__1::__compressed_pair_elem.2112" }
%"struct.std::__1::__compressed_pair_elem.2112" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.750" = type { %"class.WTF::HashTable.751" }
%"class.WTF::HashTable.751" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.754" = type { %"class.blink::MemberBase.755" }
%"class.blink::MemberBase.755" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1407", %"class.blink::Member.675", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1412", i8, i32, %"class.blink::Color", %"class.absl::optional.1414", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1419", %"class.blink::Member.1421", %"class.blink::Member.1421", %"class.std::__1::unique_ptr.1424", i32, [4 x i8], %"class.WTF::HashSet.1427", %"class.blink::Member.1434", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1436", %"class.blink::HeapHashSet.1443", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1451", i8, %"class.blink::Member.1457", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1469", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1483", i8, %"class.std::__1::unique_ptr.1489", %"class.std::__1::unique_ptr.1606", %"class.WTF::Vector.1612", i32, %class.scoped_refptr.1617, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1618", %"class.blink::Member.1620", %"class.blink::Member.1622", %"class.blink::HeapHashSet.1624", %"class.blink::HeapHashSet.1631", %"class.std::__1::unique_ptr.1638", %"class.std::__1::unique_ptr.1645", %"class.WTF::Vector.922" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1407" = type { %"class.WTF::HashTable.1408" }
%"class.WTF::HashTable.1408" = type <{ %class.scoped_refptr.1411*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1411 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1412" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1413", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.252, %"class.base::WeakPtrFactory.969" }
%"class.base::WeakPtrFactory.969" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1413" = type { %"class.blink::MemberBase.755" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1414" = type { %"class.absl::optional_internal::optional_data.1415" }
%"class.absl::optional_internal::optional_data.1415" = type { %"class.absl::optional_internal::optional_data_base.1416" }
%"class.absl::optional_internal::optional_data_base.1416" = type { %"class.absl::optional_internal::optional_data_dtor_base.1417" }
%"class.absl::optional_internal::optional_data_dtor_base.1417" = type { i8, %union.anon.1418 }
%union.anon.1418 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1419" = type { %"class.blink::MemberBase.1420" }
%"class.blink::MemberBase.1420" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1421" = type { %"class.blink::MemberBase.1422" }
%"class.blink::MemberBase.1422" = type { %"class.blink::HeapHashSet.1423"* }
%"class.blink::HeapHashSet.1423" = type opaque
%"class.std::__1::unique_ptr.1424" = type { %"class.std::__1::__compressed_pair.1425" }
%"class.std::__1::__compressed_pair.1425" = type { %"struct.std::__1::__compressed_pair_elem.1426" }
%"struct.std::__1::__compressed_pair_elem.1426" = type { %"class.WTF::HashSet.1427"* }
%"class.WTF::HashSet.1427" = type { %"class.WTF::HashTable.1428" }
%"class.WTF::HashTable.1428" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1434" = type { %"class.blink::MemberBase.1435" }
%"class.blink::MemberBase.1435" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1436" = type { %"class.WTF::HashSet.1439" }
%"class.WTF::HashSet.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"class.blink::Member.1442"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1442" = type opaque
%"class.blink::HeapHashSet.1443" = type { %"class.WTF::HashSet.1446" }
%"class.WTF::HashSet.1446" = type { %"class.WTF::HashTable.1447" }
%"class.WTF::HashTable.1447" = type <{ %"class.blink::Member.1449"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1451" = type { %"class.std::__1::__compressed_pair.1452" }
%"class.std::__1::__compressed_pair.1452" = type { %"struct.std::__1::__compressed_pair_elem.1453" }
%"struct.std::__1::__compressed_pair_elem.1453" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1461", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1461" = type { %"class.WTF::HashTable.1462" }
%"class.WTF::HashTable.1462" = type <{ %"struct.WTF::KeyValuePair.1464"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1464" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1465", i32, i32 }
%"class.WTF::Vector.1465" = type { %"class.WTF::VectorBuffer.1466" }
%"class.WTF::VectorBuffer.1466" = type { %"class.WTF::VectorBufferBase.1467" }
%"class.WTF::VectorBufferBase.1467" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1469" = type { %"class.WTF::LinkedHashSet.1472" }
%"class.WTF::LinkedHashSet.1472" = type { %"class.WTF::HashMap.1473", %"class.WTF::VectorBackedLinkedList.1477" }
%"class.WTF::HashMap.1473" = type { %"class.WTF::HashTable.1474" }
%"class.WTF::HashTable.1474" = type <{ %"struct.WTF::KeyValuePair.1476"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1476" = type opaque
%"class.WTF::VectorBackedLinkedList.1477" = type { %"class.WTF::Vector.1478", i32, i32 }
%"class.WTF::Vector.1478" = type { %"class.WTF::VectorBuffer.1479" }
%"class.WTF::VectorBuffer.1479" = type { %"class.WTF::VectorBufferBase.1480" }
%"class.WTF::VectorBufferBase.1480" = type { %"class.WTF::VectorBackedLinkedListNode.1481"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1481" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1483" = type { %"class.std::__1::__compressed_pair.1484" }
%"class.std::__1::__compressed_pair.1484" = type { %"struct.std::__1::__compressed_pair_elem.1485" }
%"struct.std::__1::__compressed_pair_elem.1485" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1489" = type { %"class.std::__1::__compressed_pair.1490" }
%"class.std::__1::__compressed_pair.1490" = type { %"struct.std::__1::__compressed_pair_elem.1491" }
%"struct.std::__1::__compressed_pair_elem.1491" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1492, %class.scoped_refptr.1492, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1583", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1588", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1492 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1493", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1500" }
%"class.WTF::RefCounted.1493" = type { %"class.base::RefCounted.1494" }
%"class.base::RefCounted.1494" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1495", i32, [4 x i8] }>
%"class.WTF::Vector.1495" = type { %"class.WTF::VectorBuffer.1496" }
%"class.WTF::VectorBuffer.1496" = type { %"class.WTF::VectorBufferBase.1497" }
%"class.WTF::VectorBufferBase.1497" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1500" = type { %"class.WTF::VectorBuffer.1501" }
%"class.WTF::VectorBuffer.1501" = type { %"class.WTF::VectorBufferBase.1502" }
%"class.WTF::VectorBufferBase.1502" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1506", %"class.std::__1::unique_ptr.1555", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1503, %class.scoped_refptr.1504, %class.scoped_refptr.1505 }
%class.scoped_refptr.1503 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1519", i8, i8, %class.scoped_refptr.1503, i32, i32 }
%"class.WTF::RefCounted.1519" = type { %"class.base::RefCounted.1520" }
%"class.base::RefCounted.1520" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1504 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1674" }
%"class.blink::PaintPropertyNode.1674" = type { %"class.WTF::RefCounted.1675", i8, i8, %class.scoped_refptr.1504, i32, i32 }
%"class.WTF::RefCounted.1675" = type { %"class.base::RefCounted.1676" }
%"class.base::RefCounted.1676" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1505 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1671" }
%"class.blink::PaintPropertyNode.1671" = type { %"class.WTF::RefCounted.1672", i8, i8, %class.scoped_refptr.1505, i32, i32 }
%"class.WTF::RefCounted.1672" = type { %"class.base::RefCounted.1673" }
%"class.base::RefCounted.1673" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1506" = type { %"class.std::__1::__compressed_pair.1507" }
%"class.std::__1::__compressed_pair.1507" = type { %"struct.std::__1::__compressed_pair_elem.1508" }
%"struct.std::__1::__compressed_pair_elem.1508" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1509", %"class.WTF::Vector.1514", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1509" = type { %"class.WTF::VectorBuffer.1510" }
%"class.WTF::VectorBuffer.1510" = type { %"class.WTF::VectorBufferBase.1511" }
%"class.WTF::VectorBufferBase.1511" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1514" = type { %"class.WTF::VectorBuffer.1515" }
%"class.WTF::VectorBuffer.1515" = type { %"class.WTF::VectorBufferBase.1516" }
%"class.WTF::VectorBufferBase.1516" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1534" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1527, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1528", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1521" }
%"class.std::__1::unique_ptr.1521" = type { %"class.std::__1::__compressed_pair.1522" }
%"class.std::__1::__compressed_pair.1522" = type { %"struct.std::__1::__compressed_pair_elem.1523" }
%"struct.std::__1::__compressed_pair_elem.1523" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1527 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1656", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1656" = type { %"class.WTF::RefCounted.1657", i8, i8, %class.scoped_refptr.1527, i32, i32 }
%"class.WTF::RefCounted.1657" = type { %"class.base::RefCounted.1658" }
%"class.base::RefCounted.1658" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1659" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1659" = type { %"class.absl::optional_internal::optional_data.1660" }
%"class.absl::optional_internal::optional_data.1660" = type { %"class.absl::optional_internal::optional_data_base.1661" }
%"class.absl::optional_internal::optional_data_base.1661" = type { %"class.absl::optional_internal::optional_data_dtor_base.1662" }
%"class.absl::optional_internal::optional_data_dtor_base.1662" = type { i8, %union.anon.1663 }
%union.anon.1663 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1664", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1664" = type { %"class.std::__1::__vector_base.1665" }
%"class.std::__1::__vector_base.1665" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1666" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1666" = type { %"struct.std::__1::__compressed_pair_elem.1667" }
%"struct.std::__1::__compressed_pair_elem.1667" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1528" = type { %"class.std::__1::__compressed_pair.1529" }
%"class.std::__1::__compressed_pair.1529" = type { %"struct.std::__1::__compressed_pair_elem.1530" }
%"struct.std::__1::__compressed_pair_elem.1530" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1534" = type { %"class.std::__1::__compressed_pair.1535" }
%"class.std::__1::__compressed_pair.1535" = type { %"struct.std::__1::__compressed_pair_elem.1536" }
%"struct.std::__1::__compressed_pair_elem.1536" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1537", %"class.std::__1::unique_ptr.1543", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1537" = type { %"class.std::__1::__compressed_pair.1538" }
%"class.std::__1::__compressed_pair.1538" = type { %"struct.std::__1::__compressed_pair_elem.1539" }
%"struct.std::__1::__compressed_pair_elem.1539" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1543" = type { %"class.std::__1::__compressed_pair.1544" }
%"class.std::__1::__compressed_pair.1544" = type { %"struct.std::__1::__compressed_pair_elem.1545" }
%"struct.std::__1::__compressed_pair_elem.1545" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1555" = type { %"class.std::__1::__compressed_pair.1556" }
%"class.std::__1::__compressed_pair.1556" = type { %"struct.std::__1::__compressed_pair_elem.1557" }
%"struct.std::__1::__compressed_pair_elem.1557" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1558", %"class.absl::optional.1558" }
%"class.absl::optional.1558" = type { %"class.absl::optional_internal::optional_data.1559" }
%"class.absl::optional_internal::optional_data.1559" = type { %"class.absl::optional_internal::optional_data_base.1560" }
%"class.absl::optional_internal::optional_data_base.1560" = type { %"class.absl::optional_internal::optional_data_dtor_base.1561" }
%"class.absl::optional_internal::optional_data_dtor_base.1561" = type { i8, [3 x i8], %union.anon.1562 }
%union.anon.1562 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1500"*, %"class.absl::optional.1568", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1568" = type { %"class.absl::optional_internal::optional_data.1569" }
%"class.absl::optional_internal::optional_data.1569" = type { %"class.absl::optional_internal::optional_data_base.1570" }
%"class.absl::optional_internal::optional_data_base.1570" = type { %"class.absl::optional_internal::optional_data_dtor_base.1571" }
%"class.absl::optional_internal::optional_data_dtor_base.1571" = type { i8, %union.anon.1572 }
%union.anon.1572 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1573", %"class.WTF::Vector.1578" }
%"class.WTF::Vector.1573" = type { %"class.WTF::VectorBuffer.1574" }
%"class.WTF::VectorBuffer.1574" = type { %"class.WTF::VectorBufferBase.1575", [128 x i8] }
%"class.WTF::VectorBufferBase.1575" = type { i32*, i32, i32 }
%"class.WTF::Vector.1578" = type { %"class.WTF::VectorBuffer.1579" }
%"class.WTF::VectorBuffer.1579" = type { %"class.WTF::VectorBufferBase.1580", [128 x i8] }
%"class.WTF::VectorBufferBase.1580" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1583" = type { %"class.WTF::VectorBuffer.1584" }
%"class.WTF::VectorBuffer.1584" = type { %"class.WTF::VectorBufferBase.1585" }
%"class.WTF::VectorBufferBase.1585" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1588" = type { %"class.WTF::HashTable.1589" }
%"class.WTF::HashTable.1589" = type <{ %"struct.WTF::KeyValuePair.1592"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1592" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1593", %"class.WTF::Vector.1598" }
%"class.WTF::HashMap.1593" = type { %"class.WTF::HashTable.1594" }
%"class.WTF::HashTable.1594" = type <{ %"struct.WTF::KeyValuePair.1597"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1597" = type opaque
%"class.WTF::Vector.1598" = type { %"class.WTF::VectorBuffer.1599" }
%"class.WTF::VectorBuffer.1599" = type { %"class.WTF::VectorBufferBase.1600" }
%"class.WTF::VectorBufferBase.1600" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1606" = type { %"class.std::__1::__compressed_pair.1607" }
%"class.std::__1::__compressed_pair.1607" = type { %"struct.std::__1::__compressed_pair_elem.1608" }
%"struct.std::__1::__compressed_pair_elem.1608" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1612" = type { %"class.WTF::VectorBuffer.1613" }
%"class.WTF::VectorBuffer.1613" = type { %"class.WTF::VectorBufferBase.1614" }
%"class.WTF::VectorBufferBase.1614" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1617 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1618" = type { %"class.blink::MemberBase.1619" }
%"class.blink::MemberBase.1619" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1622" = type { %"class.blink::MemberBase.1623" }
%"class.blink::MemberBase.1623" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1624" = type { %"class.WTF::HashSet.1627" }
%"class.WTF::HashSet.1627" = type { %"class.WTF::HashTable.1628" }
%"class.WTF::HashTable.1628" = type <{ %"class.blink::WeakMember.1630"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1630" = type opaque
%"class.blink::HeapHashSet.1631" = type { %"class.WTF::HashSet.1634" }
%"class.WTF::HashSet.1634" = type { %"class.WTF::HashTable.1635" }
%"class.WTF::HashTable.1635" = type <{ %"class.blink::WeakMember.1637"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1637" = type opaque
%"class.std::__1::unique_ptr.1638" = type { %"class.std::__1::__compressed_pair.1639" }
%"class.std::__1::__compressed_pair.1639" = type { %"struct.std::__1::__compressed_pair_elem.1640" }
%"struct.std::__1::__compressed_pair_elem.1640" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1645" = type { %"class.std::__1::__compressed_pair.1646" }
%"class.std::__1::__compressed_pair.1646" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"struct.std::__1::__compressed_pair_elem.1647" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1648", i32, i32, i32, i8, [3 x i8] }>
%"class.WTF::Vector.922" = type { %"class.WTF::VectorBuffer.923" }
%"class.WTF::VectorBuffer.923" = type { %"class.WTF::VectorBufferBase.924" }
%"class.WTF::VectorBufferBase.924" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.769" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.758", %"class.blink::Member.758" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.758", %"class.blink::Member.760", %"class.blink::Member.758", %"class.blink::Member.758", %"class.blink::Member.762" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.869", %"class.blink::Member.871", %"class.blink::Member.760", %"class.blink::Member.873", %"class.blink::Member.873", %"class.blink::Member.894", %"class.blink::Member.896", %"class.blink::Member.898", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.903", %"class.blink::HeapVector.905" }
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.914", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.922", %"class.WTF::Vector.922", i8, i32, %"class.blink::Member.927", %"class.blink::Member.929", %"class.blink::Member.931", %"class.blink::Member.933", %"class.blink::Member.935", %"class.blink::Member.937", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.939", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.945", %"class.blink::Member.947", %"class.blink::Member.911", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.949", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.756", %"class.blink::Member.971", %"class.blink::Member.756", %"class.blink::Member.756", %"class.blink::Member.756", %"class.blink::UserActionElementSet", %"class.blink::Member.980", double, double, i64, i64, %"class.blink::HeapHashSet.982", %"class.blink::HeapHashSet.989", i16, i8, %"class.blink::Member.996", %"class.blink::Member.998", %"class.blink::Member.1000", %"class.blink::Member.1002", %"class.blink::TextLinkColors", %"class.blink::Member.1004", i8, [7 x i8], %"class.blink::HeapHashMap.1006", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.756", %"class.WTF::Vector.1013", %"class.blink::Member.1018", %"class.blink::Member.1020", i8, %"class.blink::Member.756", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1022", %"class.blink::HeapVector.1024", %"class.std::__1::unique_ptr.1032", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1038", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1051", %"class.WTF::Vector.1053", i8, i8, %"class.std::__1::unique_ptr.1058", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.1064", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1072", i8, i32, %"class.blink::Member.1074", %"class.blink::Member.1076", %"class.blink::Member.1078", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1080", %"class.WTF::HashMap.1082", %"class.blink::Member.1087", %"class.blink::Member.1089", %"class.blink::Member.1091", %"class.blink::Member.1093", %"class.blink::Member.871", %"class.blink::Member.871", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1095", i8, i32, %"class.blink::Member.1102", %"class.blink::Member.1104", i32, %"class.blink::Member.1106", %"class.blink::Member.1108", %"class.blink::Member.1110", %"class.std::__1::unique_ptr.1112", i64, %"class.std::__1::unique_ptr.1118", i32, i32, %"class.blink::Member.1124", %"class.blink::Member.1126", %"class.blink::Member.1128", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1130", %"class.WTF::Vector.1132", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1137", %"class.blink::Member.1144", %"class.std::__1::unique_ptr.1146", %"class.blink::Member.1152", i8, i8, %"class.WTF::String", %"class.blink::Member.1154", i8, [7 x i8], %"class.blink::HeapHashMap.1156", %"class.blink::HeapObserverSet.1163", %"class.blink::Member.1171", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1173", i32, i8, i8, %"class.blink::WeakMember.1175", %"class.blink::Member.1176" }
%"class.blink::Supplementable.914" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.915" }
%"class.blink::HeapHashMap.915" = type { %"class.WTF::HashMap.918" }
%"class.WTF::HashMap.918" = type { %"class.WTF::HashTable.919" }
%"class.WTF::HashTable.919" = type <{ %"struct.WTF::KeyValuePair.921"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.921" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.927" = type { %"class.blink::MemberBase.928" }
%"class.blink::MemberBase.928" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.929" = type { %"class.blink::MemberBase.930" }
%"class.blink::MemberBase.930" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1189", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1258", i32, i8, [3 x i8], %"class.blink::HeapVector.1260", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1268", %"class.blink::Member.1270", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1279", %"class.blink::Member.1400", %"class.blink::Member.1402", i8, [7 x i8] }>
%"class.blink::Supplementable.1189" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1190" }
%"class.blink::HeapHashMap.1190" = type { %"class.WTF::HashMap.1193" }
%"class.WTF::HashMap.1193" = type { %"class.WTF::HashTable.1194" }
%"class.WTF::HashTable.1194" = type <{ %"struct.WTF::KeyValuePair.1196"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1196" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1205" }
%"class.blink::Supplementable.1205" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1206" }
%"class.blink::HeapHashMap.1206" = type { %"class.WTF::HashMap.1209" }
%"class.WTF::HashMap.1209" = type { %"class.WTF::HashTable.1210" }
%"class.WTF::HashTable.1210" = type <{ %"struct.WTF::KeyValuePair.1212"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1212" = type { i8*, %"class.blink::Member.2246" }
%"class.blink::Member.2246" = type { %"class.blink::MemberBase.2247" }
%"class.blink::MemberBase.2247" = type { %"class.blink::Supplement.2248"* }
%"class.blink::Supplement.2248" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2249" }
%"class.blink::Member.2249" = type { %"class.blink::MemberBase.2250" }
%"class.blink::MemberBase.2250" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1213, %"class.std::__1::unique_ptr.1214", %"class.std::__1::unique_ptr.1214", %"class.std::__1::unique_ptr.1238", %"class.std::__1::unique_ptr.1238", %"class.blink::Member.929", i32, [4 x i8], %"class.WTF::HashSet.1254", i32, i32 }
%"class.std::__1::unique_ptr.1214" = type { %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1225", %"class.std::__1::map.1234"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1217", %"class.std::__1::__compressed_pair.1222" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"class.std::__1::map.1225" = type { %"class.std::__1::__tree.1226" }
%"class.std::__1::__tree.1226" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1227", %"class.std::__1::__compressed_pair.1231" }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"class.std::__1::__compressed_pair.1231" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"class.std::__1::map.1234" = type opaque
%"class.std::__1::unique_ptr.1238" = type { %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.1240" }
%"struct.std::__1::__compressed_pair_elem.1240" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map.1241" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1258" = type { %"class.blink::MemberBase.1259" }
%"class.blink::MemberBase.1259" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1260" = type { %"class.WTF::Vector.1263" }
%"class.WTF::Vector.1263" = type { %"class.WTF::VectorBuffer.1264" }
%"class.WTF::VectorBuffer.1264" = type { %"class.WTF::VectorBufferBase.1265" }
%"class.WTF::VectorBufferBase.1265" = type { %"class.blink::Member.1266"*, i32, i32 }
%"class.blink::Member.1266" = type opaque
%"class.blink::Member.1268" = type { %"class.blink::MemberBase.1269" }
%"class.blink::MemberBase.1269" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1270" = type { %"class.blink::MemberBase.1271" }
%"class.blink::MemberBase.1271" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1272", i32, i32 }
%"class.blink::HeapHashMap.1272" = type { %"class.WTF::HashMap.1275" }
%"class.WTF::HashMap.1275" = type { %"class.WTF::HashTable.1276" }
%"class.WTF::HashTable.1276" = type <{ %"struct.WTF::KeyValuePair.1278"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1278" = type opaque
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1402" = type { %"class.blink::MemberBase.1403" }
%"class.blink::MemberBase.1403" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.931" = type { %"class.blink::MemberBase.932" }
%"class.blink::MemberBase.932" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.945" = type { %"class.blink::MemberBase.946" }
%"class.blink::MemberBase.946" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.911" = type { %"class.blink::MemberBase.912" }
%"class.blink::MemberBase.912" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.WTF::Vector.949" = type { %"class.WTF::VectorBuffer.950" }
%"class.WTF::VectorBuffer.950" = type { %"class.WTF::VectorBufferBase.951" }
%"class.WTF::VectorBufferBase.951" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.952 }
%class.scoped_refptr.952 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.953", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.953" = type { %"class.base::RefCounted.954" }
%"class.base::RefCounted.954" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.955" }
%"class.blink::PersistentBase.955" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.958" }
%"class.blink::HeapHashMap.958" = type { %"class.WTF::HashMap.961" }
%"class.WTF::HashMap.961" = type { %"class.WTF::HashTable.962" }
%"class.WTF::HashTable.962" = type <{ %"struct.WTF::KeyValuePair.964"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.964" = type { %"class.blink::WeakMember.965", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.971" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.973" }
%"class.blink::HeapHashMap.973" = type { %"class.WTF::HashMap.976" }
%"class.WTF::HashMap.976" = type { %"class.WTF::HashTable.977" }
%"class.WTF::HashTable.977" = type <{ %"struct.WTF::KeyValuePair.979"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.979" = type opaque
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.982" = type { %"class.WTF::HashSet.985" }
%"class.WTF::HashSet.985" = type { %"class.WTF::HashTable.986" }
%"class.WTF::HashTable.986" = type <{ %"class.blink::WeakMember.988"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.988" = type opaque
%"class.blink::HeapHashSet.989" = type { %"class.WTF::HashSet.992" }
%"class.WTF::HashSet.992" = type { %"class.WTF::HashTable.993" }
%"class.WTF::HashTable.993" = type <{ %"class.blink::WeakMember.995"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.995" = type opaque
%"class.blink::Member.996" = type { %"class.blink::MemberBase.997" }
%"class.blink::MemberBase.997" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1002" = type { %"class.blink::MemberBase.1003" }
%"class.blink::MemberBase.1003" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1006" = type { %"class.WTF::HashMap.1009" }
%"class.WTF::HashMap.1009" = type { %"class.WTF::HashTable.1010" }
%"class.WTF::HashTable.1010" = type <{ %"struct.WTF::KeyValuePair.1012"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1012" = type opaque
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1018" = type { %"class.blink::MemberBase.1019" }
%"class.blink::MemberBase.1019" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1020" = type { %"class.blink::MemberBase.1021" }
%"class.blink::MemberBase.1021" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1022" = type { %"class.blink::MemberBase.1023" }
%"class.blink::MemberBase.1023" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1024" = type { %"class.WTF::Vector.1027" }
%"class.WTF::Vector.1027" = type { %"class.WTF::VectorBuffer.1028" }
%"class.WTF::VectorBuffer.1028" = type { %"class.WTF::VectorBufferBase.1029" }
%"class.WTF::VectorBufferBase.1029" = type { %"class.blink::Member.1030"*, i32, i32 }
%"class.blink::Member.1030" = type opaque
%"class.std::__1::unique_ptr.1032" = type { %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1038" = type { %"class.WTF::HashSet.1041" }
%"class.WTF::HashSet.1041" = type { %"class.WTF::HashTable.1042" }
%"class.WTF::HashTable.1042" = type <{ %"class.blink::WeakMember.1044"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1044" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1045", i32, [4 x i8] }>
%"class.WTF::Vector.1045" = type { %"class.WTF::VectorBuffer.1046" }
%"class.WTF::VectorBuffer.1046" = type { %"class.WTF::VectorBufferBase.1047" }
%"class.WTF::VectorBufferBase.1047" = type { %"struct.std::__1::pair.1048"*, i32, i32 }
%"struct.std::__1::pair.1048" = type opaque
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1053" = type { %"class.WTF::VectorBuffer.1054" }
%"class.WTF::VectorBuffer.1054" = type { %"class.WTF::VectorBufferBase.1055" }
%"class.WTF::VectorBufferBase.1055" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.890" }
%"class.WTF::Vector.890" = type { %"class.WTF::VectorBuffer.891" }
%"class.WTF::VectorBuffer.891" = type { %"class.WTF::VectorBufferBase.892" }
%"class.WTF::VectorBufferBase.892" = type { %"class.blink::Member.756"*, i32, i32 }
%"class.blink::HeapVector.1064" = type { %"class.WTF::Vector.1067" }
%"class.WTF::Vector.1067" = type { %"class.WTF::VectorBuffer.1068" }
%"class.WTF::VectorBuffer.1068" = type { %"class.WTF::VectorBufferBase.1069" }
%"class.WTF::VectorBufferBase.1069" = type { %"class.blink::Member.1070"*, i32, i32 }
%"class.blink::Member.1070" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.871" }
%"class.blink::Member.1072" = type { %"class.blink::MemberBase.1073" }
%"class.blink::MemberBase.1073" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1076" = type { %"class.blink::MemberBase.1077" }
%"class.blink::MemberBase.1077" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1078" = type { %"class.blink::MemberBase.1079" }
%"class.blink::MemberBase.1079" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1080" = type { %"class.blink::MemberBase.1081" }
%"class.blink::MemberBase.1081" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1082" = type { %"class.WTF::HashTable.1083" }
%"class.WTF::HashTable.1083" = type <{ %"struct.WTF::KeyValuePair.1086"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1086" = type opaque
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1093" = type { %"class.blink::MemberBase.1094" }
%"class.blink::MemberBase.1094" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.970", { i64, i64 } }
%"class.blink::WeakMember.970" = type { %"class.blink::MemberBase.872" }
%"class.blink::HeapHashSet.1095" = type { %"class.WTF::HashSet.1098" }
%"class.WTF::HashSet.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"class.blink::Member.1101"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1101" = type opaque
%"class.blink::Member.1102" = type { %"class.blink::MemberBase.1103" }
%"class.blink::MemberBase.1103" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1110" = type { %"class.blink::MemberBase.1111" }
%"class.blink::MemberBase.1111" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1112" = type { %"class.std::__1::__compressed_pair.1113" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1118" = type { %"class.std::__1::__compressed_pair.1119" }
%"class.std::__1::__compressed_pair.1119" = type { %"struct.std::__1::__compressed_pair_elem.1120" }
%"struct.std::__1::__compressed_pair_elem.1120" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1124" = type { %"class.blink::MemberBase.1125" }
%"class.blink::MemberBase.1125" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1126" = type { %"class.blink::MemberBase.1127" }
%"class.blink::MemberBase.1127" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1130" = type { %"class.blink::MemberBase.1131" }
%"class.blink::MemberBase.1131" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1132" = type { %"class.WTF::VectorBuffer.1133" }
%"class.WTF::VectorBuffer.1133" = type { %"class.WTF::VectorBufferBase.1134" }
%"class.WTF::VectorBufferBase.1134" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1137" = type { %"class.WTF::HashMap.1140" }
%"class.WTF::HashMap.1140" = type { %"class.WTF::HashTable.1141" }
%"class.WTF::HashTable.1141" = type <{ %"struct.WTF::KeyValuePair.1143"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1143" = type opaque
%"class.blink::Member.1144" = type { %"class.blink::MemberBase.1145" }
%"class.blink::MemberBase.1145" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1152" = type { %"class.blink::MemberBase.1153" }
%"class.blink::MemberBase.1153" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1154" = type { %"class.blink::MemberBase.1155" }
%"class.blink::MemberBase.1155" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1156" = type { %"class.WTF::HashMap.1159" }
%"class.WTF::HashMap.1159" = type { %"class.WTF::HashTable.1160" }
%"class.WTF::HashTable.1160" = type <{ %"struct.WTF::KeyValuePair.1162"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1162" = type opaque
%"class.blink::HeapObserverSet.1163" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1164" }
%"class.blink::HeapHashSet.1164" = type { %"class.WTF::HashSet.1167" }
%"class.WTF::HashSet.1167" = type { %"class.WTF::HashTable.1168" }
%"class.WTF::HashTable.1168" = type <{ %"class.blink::WeakMember.1170"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1170" = type opaque
%"class.blink::Member.1171" = type { %"class.blink::MemberBase.1172" }
%"class.blink::MemberBase.1172" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.871", %"class.blink::HeapHashSet.1180", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1187", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1180" = type { %"class.WTF::HashSet.1183" }
%"class.WTF::HashSet.1183" = type { %"class.WTF::HashTable.1184" }
%"class.WTF::HashTable.1184" = type <{ %"class.blink::Member.1186"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1186" = type opaque
%"class.blink::HeapTaskRunnerTimer.1187" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1188", { i64, i64 } }
%"class.blink::WeakMember.1188" = type { %"class.blink::MemberBase.1174" }
%"class.blink::WeakMember.1175" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::Node"* }
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.877" }
%"class.blink::HeapHashMap.877" = type { %"class.WTF::HashMap.880" }
%"class.WTF::HashMap.880" = type { %"class.WTF::HashTable.881" }
%"class.WTF::HashTable.881" = type <{ %"struct.WTF::KeyValuePair.883"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.883" = type { %"class.WTF::AtomicString", %"class.blink::Member.884" }
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.756", i32, %"class.blink::HeapVector" }
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.896" = type { %"class.blink::MemberBase.897" }
%"class.blink::MemberBase.897" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.898" = type { %"class.blink::MemberBase.899" }
%"class.blink::MemberBase.899" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.900" }
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::HeapHashMap.902"* }
%"class.blink::HeapHashMap.902" = type opaque
%"class.blink::Member.903" = type { %"class.blink::MemberBase.904" }
%"class.blink::MemberBase.904" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.905" = type { %"class.WTF::Vector.908" }
%"class.WTF::Vector.908" = type { %"class.WTF::VectorBuffer.909" }
%"class.WTF::VectorBuffer.909" = type { %"class.WTF::VectorBufferBase.910" }
%"class.WTF::VectorBufferBase.910" = type { %"class.blink::Member.911"*, i32, i32 }
%"class.blink::Member.762" = type { %"class.blink::MemberBase.763" }
%"class.blink::MemberBase.763" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.766 }
%class.scoped_refptr.766 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.767", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.767" = type { %"class.base::RefCounted.768" }
%"class.base::RefCounted.768" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.773", %"class.blink::Member.775", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.773" = type { %"class.WTF::SingleThreadedBitField.774" }
%"class.WTF::SingleThreadedBitField.774" = type { i32 }
%"class.blink::Member.775" = type { %"class.blink::MemberBase.776" }
%"class.blink::MemberBase.776" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.777 }
%class.scoped_refptr.777 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.778", %"class.WTF::AtomicString", %"class.WTF::Vector.780" }
%"class.WTF::RefCounted.778" = type { %"class.base::RefCounted.779" }
%"class.base::RefCounted.779" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.780" = type { %"class.WTF::VectorBuffer.781" }
%"class.WTF::VectorBuffer.781" = type { %"class.WTF::VectorBufferBase.782", [32 x i8] }
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%class.scoped_refptr.793 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.808" }
%"class.blink::Member.808" = type { %"class.blink::MemberBase.809" }
%"class.blink::MemberBase.809" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2268" }
%"class.mojo::Remote.2268" = type { %"class.mojo::internal::InterfacePtrState.2269" }
%"class.mojo::internal::InterfacePtrState.2269" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2270" }
%"class.std::__1::unique_ptr.2270" = type { %"class.std::__1::__compressed_pair.2271" }
%"class.std::__1::__compressed_pair.2271" = type { %"struct.std::__1::__compressed_pair_elem.2272" }
%"struct.std::__1::__compressed_pair_elem.2272" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.810" = type { %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.818" = type { %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.824" = type { %"class.std::__1::__compressed_pair.825" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.830" }
%"class.blink::Member.830" = type { %"class.blink::MemberBase.831" }
%"class.blink::MemberBase.831" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2278" }
%"class.mojo::AssociatedRemote.2278" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2279" }
%"class.mojo::internal::AssociatedInterfacePtrState.2279" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2280" }
%"class.std::__1::unique_ptr.2280" = type { %"class.std::__1::__compressed_pair.2281" }
%"class.std::__1::__compressed_pair.2281" = type { %"struct.std::__1::__compressed_pair_elem.2282" }
%"struct.std::__1::__compressed_pair_elem.2282" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.832" = type { %"class.blink::Member.833" }
%"class.blink::Member.833" = type { %"class.blink::MemberBase.834" }
%"class.blink::MemberBase.834" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2288" }
%"class.mojo::AssociatedRemote.2288" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2289" }
%"class.mojo::internal::AssociatedInterfacePtrState.2289" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2290" }
%"class.std::__1::unique_ptr.2290" = type { %"class.std::__1::__compressed_pair.2291" }
%"class.std::__1::__compressed_pair.2291" = type { %"struct.std::__1::__compressed_pair_elem.2292" }
%"struct.std::__1::__compressed_pair_elem.2292" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.835" }
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.675", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2298" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1326" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2298" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.837" = type { %"class.blink::Member.838" }
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2301", %"class.blink::Member.675", %"class.mojo::AssociatedReceiver.2302" }
%"class.blink::ThreadState::PrefinalizerRegistration.2301" = type { i8 }
%"class.mojo::AssociatedReceiver.2302" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2303" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2303" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.840" }
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2306", %"class.blink::Member.675", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2306" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1949, %"class.std::__1::unique_ptr.1326", %"class.base::WeakPtrFactory.2307" }
%"class.base::WeakPtrFactory.2307" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.842" = type { %"class.blink::Member.843" }
%"class.blink::Member.843" = type { %"class.blink::MemberBase.844" }
%"class.blink::MemberBase.844" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2310", %"class.blink::Member.675", %"class.mojo::AssociatedReceiver.2311" }
%"class.blink::ThreadState::PrefinalizerRegistration.2310" = type { i8 }
%"class.mojo::AssociatedReceiver.2311" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2312" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2312" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.845" = type { %"class.blink::MemberBase.846" }
%"class.blink::MemberBase.846" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.847" = type { %"class.blink::MemberBase.848" }
%"class.blink::MemberBase.848" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.849" = type { %"class.blink::MemberBase.850" }
%"class.blink::MemberBase.850" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::HeapHashMap.853"* }
%"class.blink::HeapHashMap.853" = type opaque
%"class.mojo::StructPtr.854" = type { %"class.std::__1::unique_ptr.855" }
%"class.std::__1::unique_ptr.855" = type { %"class.std::__1::__compressed_pair.856" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.858" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.858" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.864" = type { %"class.absl::optional_internal::optional_data.865" }
%"class.absl::optional_internal::optional_data.865" = type { %"class.absl::optional_internal::optional_data_base.866" }
%"class.absl::optional_internal::optional_data_base.866" = type { %"class.absl::optional_internal::optional_data_dtor_base.867" }
%"class.absl::optional_internal::optional_data_dtor_base.867" = type { i8, %union.anon.868 }
%union.anon.868 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.565", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.677" }
%"class.std::__1::vector.677" = type { %"class.std::__1::__vector_base.678" }
%"class.std::__1::__vector_base.678" = type { %"struct.std::__1::pair.679"*, %"struct.std::__1::pair.679"*, %"class.std::__1::__compressed_pair.680" }
%"struct.std::__1::pair.679" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"struct.std::__1::pair.679"* }
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.687" = type { %"class.absl::optional_internal::optional_data.688" }
%"class.absl::optional_internal::optional_data.688" = type { %"class.absl::optional_internal::optional_data_base.689" }
%"class.absl::optional_internal::optional_data_base.689" = type { %"class.absl::optional_internal::optional_data_dtor_base.690" }
%"class.absl::optional_internal::optional_data_dtor_base.690" = type { i8, %union.anon.691 }
%union.anon.691 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.692" = type { %"class.absl::optional_internal::optional_data.693" }
%"class.absl::optional_internal::optional_data.693" = type { %"class.absl::optional_internal::optional_data_base.694" }
%"class.absl::optional_internal::optional_data_base.694" = type { %"class.absl::optional_internal::optional_data_dtor_base.695" }
%"class.absl::optional_internal::optional_data_dtor_base.695" = type { i8, %union.anon.696 }
%union.anon.696 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.697 }
%class.scoped_refptr.697 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.698" }
%"class.blink::HeapHashSet.698" = type { %"class.WTF::HashSet.701" }
%"class.WTF::HashSet.701" = type { %"class.WTF::HashTable.702" }
%"class.WTF::HashTable.702" = type <{ %"class.blink::WeakMember.704"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.704" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.233", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.577" = type { %"class.blink::MemberBase.578" }
%"class.blink::MemberBase.578" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.579" = type { %"class.blink::MemberBase.580" }
%"class.blink::MemberBase.580" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.587" }
%"class.WTF::HashTable.587" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.593" = type { %"class.blink::MemberBase.594" }
%"class.blink::MemberBase.594" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.597" = type { %"class.blink::MemberBase.598" }
%"class.blink::MemberBase.598" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.599" = type { %"class.blink::MemberBase.600" }
%"class.blink::MemberBase.600" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.609" = type { %"class.blink::MemberBase.610" }
%"class.blink::MemberBase.610" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.611" }
%"class.WTF::Deque.611" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.614" }
%"class.WTF::VectorBuffer.614" = type { %"class.WTF::VectorBufferBase.615" }
%"class.WTF::VectorBufferBase.615" = type { %"class.std::__1::unique_ptr.616"*, i32, i32 }
%"class.std::__1::unique_ptr.616" = type { %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.622", i32, [4 x i8] }>
%"class.std::__1::bitset.622" = type { %"class.std::__1::__bitset.623" }
%"class.std::__1::__bitset.623" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.624" }
%"class.absl::optional.624" = type { %"class.absl::optional_internal::optional_data.625" }
%"class.absl::optional_internal::optional_data.625" = type { %"class.absl::optional_internal::optional_data_base.626" }
%"class.absl::optional_internal::optional_data_base.626" = type { %"class.absl::optional_internal::optional_data_dtor_base.627" }
%"class.absl::optional_internal::optional_data_dtor_base.627" = type { i8, %union.anon.628 }
%union.anon.628 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.629", i64, %"class.absl::optional.634", i64 }
%"class.absl::optional.629" = type { %"class.absl::optional_internal::optional_data.630" }
%"class.absl::optional_internal::optional_data.630" = type { %"class.absl::optional_internal::optional_data_base.631" }
%"class.absl::optional_internal::optional_data_base.631" = type { %"class.absl::optional_internal::optional_data_dtor_base.632" }
%"class.absl::optional_internal::optional_data_dtor_base.632" = type { i8, %union.anon.633 }
%union.anon.633 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.639" = type { %"class.std::__1::unique_ptr.640" }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.646" = type { %"class.WTF::HashSet.649" }
%"class.WTF::HashSet.649" = type { %"class.WTF::HashTable.650" }
%"class.WTF::HashTable.650" = type <{ %"class.blink::WeakMember.652"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.652" = type opaque
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.659" = type { %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.base::RepeatingCallback.2199" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::Persistent.2200" = type { %"class.blink::PersistentBase.2201" }
%"class.blink::PersistentBase.2201" = type { %"class.blink::InspectorDatabaseAgent"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DatabaseClient" = type { %"class.blink::Supplement", %"class.blink::Member.2190" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.233" }
%"class.blink::Member.2190" = type { %"class.blink::MemberBase.2191" }
%"class.blink::MemberBase.2191" = type { %"class.blink::InspectorDatabaseAgent"* }
%"class.blink::DatabaseTracker" = type { %"class.WTF::Mutex", %"class.std::__1::unique_ptr.2192" }
%"class.std::__1::unique_ptr.2192" = type { %"class.std::__1::__compressed_pair.2193" }
%"class.std::__1::__compressed_pair.2193" = type { %"struct.std::__1::__compressed_pair_elem.2194" }
%"struct.std::__1::__compressed_pair_elem.2194" = type { %"class.WTF::HashMap.2195"* }
%"class.WTF::HashMap.2195" = type opaque
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.2200" }
%"class.crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.2202" = type { %"class.std::__1::__compressed_pair.2203" }
%"class.std::__1::__compressed_pair.2203" = type { %"struct.std::__1::__compressed_pair_elem.2204" }
%"struct.std::__1::__compressed_pair_elem.2204" = type { %"class.std::__1::vector.2205"* }
%"class.std::__1::vector.2205" = type { %"class.std::__1::__vector_base.2206" }
%"class.std::__1::__vector_base.2206" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.2207" }
%"class.std::__1::__compressed_pair.2207" = type { %"struct.std::__1::__compressed_pair_elem.2208" }
%"struct.std::__1::__compressed_pair_elem.2208" = type { %"class.WTF::String"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::protocol::Database::Backend::ExecuteSQLCallback" = type { i32 (...)** }
%"class.crdtp::UberDispatcher" = type { i32 (...)**, %"class.crdtp::FrontendChannel"*, %"class.std::__1::vector.2224", %"class.std::__1::vector.2232" }
%"class.std::__1::vector.2224" = type { %"class.std::__1::__vector_base.2225" }
%"class.std::__1::__vector_base.2225" = type { %"struct.std::__1::pair.2226"*, %"struct.std::__1::pair.2226"*, %"class.std::__1::__compressed_pair.2227" }
%"struct.std::__1::pair.2226" = type opaque
%"class.std::__1::__compressed_pair.2227" = type { %"struct.std::__1::__compressed_pair_elem.2228" }
%"struct.std::__1::__compressed_pair_elem.2228" = type { %"struct.std::__1::pair.2226"* }
%"class.std::__1::vector.2232" = type { %"class.std::__1::__vector_base.2233" }
%"class.std::__1::__vector_base.2233" = type { %"struct.std::__1::pair.2234"*, %"struct.std::__1::pair.2234"*, %"class.std::__1::__compressed_pair.2235" }
%"struct.std::__1::pair.2234" = type opaque
%"class.std::__1::__compressed_pair.2235" = type { %"struct.std::__1::__compressed_pair_elem.2236" }
%"struct.std::__1::__compressed_pair_elem.2236" = type { %"struct.std::__1::pair.2234"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::(anonymous namespace)::TransactionErrorCallback" = type { %"class.blink::SQLTransaction::OnErrorCallback", %class.scoped_refptr.2221 }
%class.scoped_refptr.2221 = type { %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* }
%"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper" = type { %"class.WTF::RefCounted.2222", %"class.std::__1::unique_ptr.2215" }
%"class.WTF::RefCounted.2222" = type { %"class.base::RefCounted.2223" }
%"class.base::RefCounted.2223" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2215" = type { %"class.std::__1::__compressed_pair.2216" }
%"class.std::__1::__compressed_pair.2216" = type { %"struct.std::__1::__compressed_pair_elem.2217" }
%"struct.std::__1::__compressed_pair_elem.2217" = type { %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* }
%"class.blink::SQLError" = type { %"class.blink::ScriptWrappable", %"class.blink::SQLErrorData" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.2202" }
%"class.crdtp::detail::PtrMaybe.2367" = type { %"class.std::__1::unique_ptr.2368" }
%"class.std::__1::unique_ptr.2368" = type { %"class.std::__1::__compressed_pair.2369" }
%"class.std::__1::__compressed_pair.2369" = type { %"struct.std::__1::__compressed_pair_elem.2370" }
%"struct.std::__1::__compressed_pair_elem.2370" = type { %"class.std::__1::vector.2371"* }
%"class.std::__1::vector.2371" = type { %"class.std::__1::__vector_base.2372" }
%"class.std::__1::__vector_base.2372" = type { %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::__compressed_pair.2379" }
%"class.std::__1::unique_ptr.2373" = type { %"class.std::__1::__compressed_pair.2374" }
%"class.std::__1::__compressed_pair.2374" = type { %"struct.std::__1::__compressed_pair_elem.2375" }
%"struct.std::__1::__compressed_pair_elem.2375" = type { %"class.blink::protocol::Value"* }
%"class.blink::protocol::Value" = type <{ %"class.crdtp::Serializable", i32, [4 x i8] }>
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.2379" = type { %"struct.std::__1::__compressed_pair_elem.2380" }
%"struct.std::__1::__compressed_pair_elem.2380" = type { %"class.std::__1::unique_ptr.2373"* }
%"class.crdtp::detail::PtrMaybe.2387" = type { %"class.std::__1::unique_ptr.2359" }
%"class.std::__1::unique_ptr.2359" = type { %"class.std::__1::__compressed_pair.2360" }
%"class.std::__1::__compressed_pair.2360" = type { %"struct.std::__1::__compressed_pair_elem.2361" }
%"struct.std::__1::__compressed_pair_elem.2361" = type { %"class.blink::protocol::Database::Error"* }
%"class.blink::protocol::Database::Error" = type <{ %"class.crdtp::ProtocolObject", %"class.WTF::String", i32, [4 x i8] }>
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::(anonymous namespace)::TransactionCallback" = type { %"class.blink::SQLTransaction::OnProcessCallback", %"class.WTF::String", %class.scoped_refptr.2221 }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2409" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2409" = type { %"class.v8::TracedReference.2410" }
%"class.v8::TracedReference.2410" = type { %"class.v8::BasicTracedReference.2411" }
%"class.v8::BasicTracedReference.2411" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::(anonymous namespace)::StatementCallback" = type { %"class.blink::SQLStatement::OnSuccessCallback", %class.scoped_refptr.2221 }
%"class.std::__1::unique_ptr.2412" = type { %"class.std::__1::__compressed_pair.2413" }
%"class.std::__1::__compressed_pair.2413" = type { %"struct.std::__1::__compressed_pair_elem.2414" }
%"struct.std::__1::__compressed_pair_elem.2414" = type { %"class.blink::protocol::StringValue"* }
%"class.blink::protocol::StringValue" = type { %"class.blink::protocol::Value.base", %"class.WTF::String" }
%"class.blink::protocol::Value.base" = type <{ %"class.crdtp::Serializable", i32 }>
%"class.std::__1::unique_ptr.2418" = type { %"class.std::__1::__compressed_pair.2419" }
%"class.std::__1::__compressed_pair.2419" = type { %"struct.std::__1::__compressed_pair_elem.2420" }
%"struct.std::__1::__compressed_pair_elem.2420" = type { %"class.blink::protocol::FundamentalValue"* }
%"class.blink::protocol::FundamentalValue" = type { %"class.blink::protocol::Value.base", %union.anon.2421 }
%union.anon.2421 = type { double }
%"class.blink::(anonymous namespace)::StatementErrorCallback" = type { %"class.blink::SQLStatement::OnErrorCallback", %class.scoped_refptr.2221 }

$_ZN5blink19InspectorAgentState5FieldD2Ev = comdat any

$_ZNK5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE5TraceEPNS_7VisitorE = comdat any

$_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE7DisposeEv = comdat any

$_ZN5blink19InspectorAgentState5FieldD0Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEED2Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEED0Ev = comdat any

$_ZN5blink14InspectorAgent7RestoreEv = comdat any

$_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE7disableEv = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEED1Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEED0Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE7disableEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14SQLTransaction15OnErrorCallbackEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_14SQLTransaction15OnErrorCallbackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14SQLTransaction15OnErrorCallbackEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14SQLTransaction15OnErrorCallbackEE7GetNameEPKv = comdat any

$_ZNK5blink14SQLTransaction15OnErrorCallback5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_25InspectorDatabaseResourceEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_25InspectorDatabaseResourceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_25InspectorDatabaseResourceEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_25InspectorDatabaseResourceEE7GetNameEPKv = comdat any

$_ZN5blink25InspectorDatabaseResourceD2Ev = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_22InspectorDatabaseAgentELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_22InspectorDatabaseAgentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22InspectorDatabaseAgentEFvPNS3_8DatabaseEEJNS3_10PersistentIS4_EEEEEFvS6_EE3RunEPNS0_13BindStateBaseES6_ = comdat any

$_ZN4base8internal9BindStateIMN5blink22InspectorDatabaseAgentEFvPNS2_8DatabaseEEJNS2_10PersistentIS3_EEEEC2IRS7_JS9_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink22InspectorDatabaseAgentEFvPNS2_8DatabaseEEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14SQLTransaction17OnProcessCallbackEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14SQLTransaction17OnProcessCallbackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14SQLTransaction17OnProcessCallbackEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14SQLTransaction17OnProcessCallbackEE7GetNameEPKv = comdat any

$_ZNK5blink14SQLTransaction17OnProcessCallback5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12SQLStatement17OnSuccessCallbackEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_12SQLStatement17OnSuccessCallbackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_12SQLStatement17OnSuccessCallbackEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_12SQLStatement17OnSuccessCallbackEE7GetNameEPKv = comdat any

$_ZNK5blink12SQLStatement17OnSuccessCallback5TraceEPNS_7VisitorE = comdat any

$_ZNK3WTF6VectorIN5blink8SQLValueELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJNS1_INS3_11StringValueENS5_ISC_EEEEEEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJNS1_INS3_16FundamentalValueENS5_ISC_EEEEEEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12SQLStatement15OnErrorCallbackEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_12SQLStatement15OnErrorCallbackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_12SQLStatement15OnErrorCallbackEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_12SQLStatement15OnErrorCallbackEE7GetNameEPKv = comdat any

$_ZNK5blink12SQLStatement15OnErrorCallback5TraceEPNS_7VisitorE = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_ = comdat any

$_ZN5blink10TraceTraitINS_4PageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink19InspectorAgentState5FieldE = comdat any

$_ZTVN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_14SQLTransaction15OnErrorCallbackEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14SQLTransaction15OnErrorCallbackEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_25InspectorDatabaseResourceEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_25InspectorDatabaseResourceEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = comdat any

$_ZZN5blink11GCInfoTraitINS_14SQLTransaction17OnProcessCallbackEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14SQLTransaction17OnProcessCallbackEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_12SQLStatement17OnSuccessCallbackEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12SQLStatement17OnSuccessCallbackEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_12SQLStatement15OnErrorCallbackEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12SQLStatement15OnErrorCallbackEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink22InspectorDatabaseAgentE = hidden unnamed_addr constant { [14 x i8*], [8 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorDatabaseAgent"*)* @_ZN5blink22InspectorDatabaseAgentD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorDatabaseAgent"*)* @_ZN5blink22InspectorDatabaseAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorDatabaseAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink22InspectorDatabaseAgent5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorDatabaseAgent"*)* @_ZN5blink22InspectorDatabaseAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorDatabaseAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink22InspectorDatabaseAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDatabaseAgent"*)* @_ZN5blink22InspectorDatabaseAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDatabaseAgent"*)* @_ZN5blink22InspectorDatabaseAgent6enableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDatabaseAgent"*, %"class.WTF::String"*, %"class.std::__1::unique_ptr.2202"*)* @_ZN5blink22InspectorDatabaseAgent21getDatabaseTableNamesERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIS2_NS5_9allocatorIS2_EEEENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorDatabaseAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)* @_ZN5blink22InspectorDatabaseAgent10executeSQLERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol8Database7Backend18ExecuteSQLCallbackENS5_14default_deleteISA_EEEE to i8*)], [8 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorDatabaseAgent"*)* @_ZThn8_N5blink22InspectorDatabaseAgentD1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorDatabaseAgent"*)* @_ZThn8_N5blink22InspectorDatabaseAgentD0Ev to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDatabaseAgent"*)* @_ZThn8_N5blink22InspectorDatabaseAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDatabaseAgent"*)* @_ZThn8_N5blink22InspectorDatabaseAgent6enableEv to i8*), i8* bitcast (void (%"class.blink::InspectorDatabaseAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)* @_ZThn8_N5blink22InspectorDatabaseAgent10executeSQLERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol8Database7Backend18ExecuteSQLCallbackENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDatabaseAgent"*, %"class.WTF::String"*, %"class.std::__1::unique_ptr.2202"*)* @_ZThn8_N5blink22InspectorDatabaseAgent21getDatabaseTableNamesERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIS2_NS5_9allocatorIS2_EEEENS5_14default_deleteISA_EEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [30 x i8] c"Database agent is not enabled\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"Database not found\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZTVN5blink19InspectorAgentState5FieldE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEEE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [8 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE7disableEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEED1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEED0Ev to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE7disableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SQLTransaction15OnErrorCallbackEEEPKcv = private unnamed_addr constant [86 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SQLTransaction::OnErrorCallback]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14SQLTransaction15OnErrorCallbackEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14SQLTransaction15OnErrorCallbackEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14SQLTransaction15OnErrorCallbackEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14SQLTransaction15OnErrorCallbackEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14SQLTransaction15OnErrorCallbackEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink12_GLOBAL__N_124TransactionErrorCallbackE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::TransactionErrorCallback"*)* @_ZN5blink12_GLOBAL__N_124TransactionErrorCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::TransactionErrorCallback"*)* @_ZN5blink12_GLOBAL__N_124TransactionErrorCallbackD0Ev to i8*), i8* bitcast (void (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::Visitor"*)* @_ZNK5blink14SQLTransaction15OnErrorCallback5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::TransactionErrorCallback"*, %"class.blink::SQLError"*)* @_ZN5blink12_GLOBAL__N_124TransactionErrorCallback7OnErrorEPNS_8SQLErrorE to i8*)] }, align 8
@_ZTVN5blink8protocol8Database5ErrorE = external unnamed_addr constant { [5 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25InspectorDatabaseResourceEEEPKcv = private unnamed_addr constant [80 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InspectorDatabaseResource]\00", align 1
@_ZZN5blink11GCInfoTraitINS_25InspectorDatabaseResourceEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_25InspectorDatabaseResourceEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_25InspectorDatabaseResourceEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_25InspectorDatabaseResourceEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_25InspectorDatabaseResourceEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.6 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.10 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [410 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::String, WTF::KeyValuePair<WTF::String, blink::Member<blink::InspectorDatabaseResource> >, WTF::KeyValuePairKeyExtractor, WTF::StringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::InspectorDatabaseResource> > >, WTF::HashTraits<WTF::String>, blink::HeapAllocator> >]\00", align 1
@_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv to i8*)] }, comdat, align 8
@_ZN5blink8protocol8Database8Metainfo10domainNameE = external constant [0 x i8], align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SQLTransaction17OnProcessCallbackEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SQLTransaction::OnProcessCallback]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14SQLTransaction17OnProcessCallbackEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14SQLTransaction17OnProcessCallbackEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14SQLTransaction17OnProcessCallbackEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14SQLTransaction17OnProcessCallbackEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14SQLTransaction17OnProcessCallbackEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink12_GLOBAL__N_119TransactionCallbackE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::TransactionCallback"*)* @_ZN5blink12_GLOBAL__N_119TransactionCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::TransactionCallback"*)* @_ZN5blink12_GLOBAL__N_119TransactionCallbackD0Ev to i8*), i8* bitcast (void (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::Visitor"*)* @_ZNK5blink14SQLTransaction17OnProcessCallback5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::TransactionCallback"*, %"class.blink::SQLTransaction"*)* @_ZN5blink12_GLOBAL__N_119TransactionCallback9OnProcessEPNS_14SQLTransactionE to i8*)] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12SQLStatement17OnSuccessCallbackEEEPKcv = private unnamed_addr constant [86 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SQLStatement::OnSuccessCallback]\00", align 1
@_ZZN5blink11GCInfoTraitINS_12SQLStatement17OnSuccessCallbackEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12SQLStatement17OnSuccessCallbackEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12SQLStatement17OnSuccessCallbackEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12SQLStatement17OnSuccessCallbackEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12SQLStatement17OnSuccessCallbackEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink12_GLOBAL__N_117StatementCallbackE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::StatementCallback"*)* @_ZN5blink12_GLOBAL__N_117StatementCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::StatementCallback"*)* @_ZN5blink12_GLOBAL__N_117StatementCallbackD0Ev to i8*), i8* bitcast (void (%"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::Visitor"*)* @_ZNK5blink12SQLStatement17OnSuccessCallback5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::StatementCallback"*, %"class.blink::SQLTransaction"*, %"class.blink::SQLResultSet"*)* @_ZN5blink12_GLOBAL__N_117StatementCallback9OnSuccessEPNS_14SQLTransactionEPNS_12SQLResultSetE to i8*)] }, align 8
@.str.11 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZTVN5blink8protocol11StringValueE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN5blink8protocol5ValueE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN5blink8protocol16FundamentalValueE = external unnamed_addr constant { [11 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12SQLStatement15OnErrorCallbackEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SQLStatement::OnErrorCallback]\00", align 1
@_ZZN5blink11GCInfoTraitINS_12SQLStatement15OnErrorCallbackEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12SQLStatement15OnErrorCallbackEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12SQLStatement15OnErrorCallbackEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12SQLStatement15OnErrorCallbackEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12SQLStatement15OnErrorCallbackEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink12_GLOBAL__N_122StatementErrorCallbackE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::StatementErrorCallback"*)* @_ZN5blink12_GLOBAL__N_122StatementErrorCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::StatementErrorCallback"*)* @_ZN5blink12_GLOBAL__N_122StatementErrorCallbackD0Ev to i8*), i8* bitcast (void (%"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::Visitor"*)* @_ZNK5blink12SQLStatement15OnErrorCallback5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::StatementErrorCallback"*, %"class.blink::SQLTransaction"*, %"class.blink::SQLError"*)* @_ZN5blink12_GLOBAL__N_122StatementErrorCallback7OnErrorEPNS_14SQLTransactionEPNS_8SQLErrorE to i8*)] }, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8

@_ZN5blink22InspectorDatabaseAgentC1EPNS_4PageE = hidden unnamed_addr alias void (%"class.blink::InspectorDatabaseAgent"*, %"class.blink::Page"*), void (%"class.blink::InspectorDatabaseAgent"*, %"class.blink::Page"*)* @_ZN5blink22InspectorDatabaseAgentC2EPNS_4PageE
@_ZN5blink22InspectorDatabaseAgentD1Ev = hidden unnamed_addr alias void (%"class.blink::InspectorDatabaseAgent"*), void (%"class.blink::InspectorDatabaseAgent"*)* @_ZN5blink22InspectorDatabaseAgentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22InspectorDatabaseAgent26RegisterDatabaseOnCreationEPNS_8DatabaseE(%"class.blink::InspectorDatabaseAgent"*, %"class.blink::Database"*) #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink8Database17GetSecurityOriginEv(%"class.blink::Database"* %1) #13
  %8 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #13
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #13
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %2, %11, %26
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %29, align 8
  %30 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %31 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8Database16StringIdentifierEv(%"class.blink::Database"* %1) #13
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8Database7versionEv(%"class.blink::Database"* %1) #13
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %35, align 8
  call void @_ZN5blink22InspectorDatabaseAgent15DidOpenDatabaseEPNS_8DatabaseERKN3WTF6StringES6_S6_(%"class.blink::InspectorDatabaseAgent"* %0, %"class.blink::Database"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5)
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #13
  br label %51

51:                                               ; preds = %28, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #13
  br label %67

67:                                               ; preds = %51, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #13
  br label %83

83:                                               ; preds = %67, %79, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22InspectorDatabaseAgent15DidOpenDatabaseEPNS_8DatabaseERKN3WTF6StringES6_S6_(%"class.blink::InspectorDatabaseAgent"*, %"class.blink::Database"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::InspectorDatabaseResource"*, align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8Database8FileNameEv(%"class.blink::Database"* %1) #13
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = call %"class.blink::InspectorDatabaseResource"* @_ZN5blink22InspectorDatabaseAgent14FindByFileNameERKN3WTF6StringE(%"class.blink::InspectorDatabaseAgent"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6)
  %13 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #13
  br label %27

27:                                               ; preds = %5, %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %28 = icmp eq %"class.blink::InspectorDatabaseResource"* %12, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = ptrtoint %"class.blink::Database"* %1 to i64
  %31 = bitcast %"class.blink::InspectorDatabaseResource"* %12 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %106, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::Database"* %1 to i8*
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #13
  br label %106

37:                                               ; preds = %27
  %38 = bitcast %"class.blink::InspectorDatabaseResource"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #13
  store %"class.blink::InspectorDatabaseResource"* inttoptr (i64 -6148914691236517206 to %"class.blink::InspectorDatabaseResource"*), %"class.blink::InspectorDatabaseResource"** %7, align 8
  %39 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_25InspectorDatabaseResourceEEEPhm(i64 40) #13
  %40 = bitcast i8* %39 to %"class.blink::InspectorDatabaseResource"*
  tail call void @_ZN5blink25InspectorDatabaseResourceC1EPNS_8DatabaseERKN3WTF6StringES6_S6_(%"class.blink::InspectorDatabaseResource"* %40, %"class.blink::Database"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4) #13
  %41 = getelementptr inbounds i8, i8* %39, i64 -4
  %42 = bitcast i8* %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = or i16 %43, 1
  store atomic i16 %44, i16* %42 release, align 2
  %45 = bitcast %"class.blink::InspectorDatabaseResource"** %7 to i8**
  store i8* %39, i8** %45, align 8
  %46 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  %47 = getelementptr inbounds i8, i8* %39, i64 8
  %48 = bitcast i8* %47 to %"class.WTF::StringImpl"**
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %68, label %51

51:                                               ; preds = %37
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i33
  %60 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #13
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %56
  tail call void @llvm.trap() #13
  unreachable

66:                                               ; preds = %56
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %57, align 4
  br label %68

68:                                               ; preds = %37, %51, %66
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %69, align 8
  %70 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = call { %"struct.WTF::KeyValuePair.240"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.238"* %70, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::InspectorDatabaseResource"** nonnull dereferenceable(8) %7) #13
  %72 = extractvalue { %"struct.WTF::KeyValuePair.240"*, i8 } %71, 1
  %73 = and i8 %72, 1
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %86

75:                                               ; preds = %68
  %76 = extractvalue { %"struct.WTF::KeyValuePair.240"*, i8 } %71, 0
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %76, i64 0, i32 1
  %78 = load %"class.blink::InspectorDatabaseResource"*, %"class.blink::InspectorDatabaseResource"** %7, align 8
  %79 = ptrtoint %"class.blink::InspectorDatabaseResource"* %78 to i64
  %80 = bitcast %"class.blink::Member.241"* %77 to i64*
  store atomic i64 %79, i64* %80 monotonic, align 8
  %81 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %75
  %84 = bitcast %"class.blink::InspectorDatabaseResource"* %78 to i8*
  %85 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %84) #13
  br label %86

86:                                               ; preds = %68, %75, %83
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #13
  br label %102

102:                                              ; preds = %86, %98, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  %103 = load %"class.blink::InspectorDatabaseResource"*, %"class.blink::InspectorDatabaseResource"** %7, align 8
  %104 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %105 = load %"class.blink::protocol::Database::Frontend"*, %"class.blink::protocol::Database::Frontend"** %104, align 8
  call void @_ZN5blink25InspectorDatabaseResource4BindEPNS_8protocol8Database8FrontendE(%"class.blink::InspectorDatabaseResource"* %103, %"class.blink::protocol::Database::Frontend"* %105) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13
  br label %106

106:                                              ; preds = %34, %29, %102
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::SecurityOrigin"* @_ZNK5blink8Database17GetSecurityOriginEv(%"class.blink::Database"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink8Database16StringIdentifierEv(%"class.blink::Database"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink8Database7versionEv(%"class.blink::Database"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InspectorDatabaseResource"* @_ZN5blink22InspectorDatabaseAgent14FindByFileNameERKN3WTF6StringE(%"class.blink::InspectorDatabaseAgent"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %7, i64 %10
  br i1 %5, label %65, label %12

12:                                               ; preds = %2
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %12, %18
  %15 = phi %"struct.WTF::KeyValuePair.240"* [ %19, %18 ], [ %7, %12 ]
  %16 = bitcast %"struct.WTF::KeyValuePair.240"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %14, %14
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %15, i64 1
  %20 = icmp eq %"struct.WTF::KeyValuePair.240"* %19, %11
  br i1 %20, label %65, label %14

21:                                               ; preds = %14, %12
  %22 = phi %"struct.WTF::KeyValuePair.240"* [ %7, %12 ], [ %15, %14 ]
  %23 = icmp eq %"struct.WTF::KeyValuePair.240"* %22, %11
  br i1 %23, label %65, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %26

26:                                               ; preds = %24, %60
  %27 = phi %"struct.WTF::KeyValuePair.240"* [ %22, %24 ], [ %54, %60 ]
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %27, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.blink::InspectorDatabaseResource"*, %"class.blink::InspectorDatabaseResource"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::InspectorDatabaseResource", %"class.blink::InspectorDatabaseResource"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::Database"*, %"class.blink::Database"** %30, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8Database8FileNameEv(%"class.blink::Database"* %31) #13
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %34 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"* %33) #13
  %35 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #13
  br label %49

49:                                               ; preds = %26, %45, %48
  br i1 %34, label %62, label %50

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %27, i64 1
  %52 = icmp eq %"struct.WTF::KeyValuePair.240"* %51, %11
  br i1 %52, label %65, label %53

53:                                               ; preds = %50, %57
  %54 = phi %"struct.WTF::KeyValuePair.240"* [ %58, %57 ], [ %51, %50 ]
  %55 = bitcast %"struct.WTF::KeyValuePair.240"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  switch i64 %56, label %60 [
    i64 -1, label %57
    i64 0, label %57
  ]

57:                                               ; preds = %53, %53
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %54, i64 1
  %59 = icmp eq %"struct.WTF::KeyValuePair.240"* %58, %11
  br i1 %59, label %65, label %53

60:                                               ; preds = %53
  %61 = icmp eq %"struct.WTF::KeyValuePair.240"* %54, %11
  br i1 %61, label %65, label %26

62:                                               ; preds = %49
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %27, i64 0, i32 1, i32 0, i32 0
  %64 = load %"class.blink::InspectorDatabaseResource"*, %"class.blink::InspectorDatabaseResource"** %63, align 8
  br label %65

65:                                               ; preds = %18, %50, %60, %57, %2, %21, %62
  %66 = phi %"class.blink::InspectorDatabaseResource"* [ %64, %62 ], [ null, %21 ], [ null, %2 ], [ null, %57 ], [ null, %60 ], [ null, %50 ], [ null, %18 ]
  ret %"class.blink::InspectorDatabaseResource"* %66
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8Database8FileNameEv(%"class.blink::Database"*) local_unnamed_addr #2

declare void @_ZN5blink25InspectorDatabaseResource4BindEPNS_8protocol8Database8FrontendE(%"class.blink::InspectorDatabaseResource"*, %"class.blink::protocol::Database::Frontend"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22InspectorDatabaseAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorDatabaseAgent"* nocapture, %"class.blink::LocalFrame"* readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::Page"*, %"class.blink::Page"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %5, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::Frame"*, %"class.blink::Frame"** %6, align 8
  %8 = icmp eq %"class.blink::Frame"* %3, %7
  br i1 %8, label %9, label %50

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 2, i32 0
  %11 = getelementptr inbounds %"class.WTF::HashMap.237", %"class.WTF::HashMap.237"* %10, i64 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %11, align 8
  %13 = icmp eq %"struct.WTF::KeyValuePair.240"* %12, null
  br i1 %13, label %50, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %46, label %18

18:                                               ; preds = %14
  %19 = zext i32 %16 to i64
  br label %20

20:                                               ; preds = %43, %18
  %21 = phi i64 [ 0, %18 ], [ %44, %43 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %12, i64 %21
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  switch i64 %25, label %26 [
    i64 -1, label %43
    i64 0, label %43
  ]

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %39

39:                                               ; preds = %38, %35
  %40 = bitcast %"struct.WTF::KeyValuePair.240"* %22 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %40, align 8
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %12, i64 %21, i32 1
  %42 = bitcast %"class.blink::Member.241"* %41 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  br label %43

43:                                               ; preds = %39, %20, %20
  %44 = add nuw nsw i64 %21, 1
  %45 = icmp eq i64 %44, %19
  br i1 %45, label %46, label %20

46:                                               ; preds = %43, %14
  %47 = bitcast %"struct.WTF::KeyValuePair.240"* %12 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %47) #13
  %48 = bitcast %"class.WTF::HashMap.237"* %10 to i64*
  store atomic i64 0, i64* %48 monotonic, align 8
  store i32 0, i32* %15, align 8
  %49 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  store i32 0, i32* %49, align 4
  br label %50

50:                                               ; preds = %46, %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22InspectorDatabaseAgentC2EPNS_4PageE(%"class.blink::InspectorDatabaseAgent"*, %"class.blink::Page"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.blink::InspectorDatabaseAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::CoreProbeSink"* null, %"class.blink::CoreProbeSink"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 0, i32 3
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Database8Metainfo10domainNameE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Database8Metainfo10domainNameE, i64 0, i64 0), i64 %8) #13
  call void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %3) #13
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #13
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %26 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 0, i32 4
  %27 = bitcast %"class.std::__1::unique_ptr.227"* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = bitcast %"class.blink::InspectorDatabaseAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN5blink22InspectorDatabaseAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN5blink22InspectorDatabaseAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %28, align 8
  %29 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::Page"* %1, %"class.blink::Page"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 2
  %31 = bitcast %"class.blink::HeapHashMap"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 20, i1 false) #13
  %32 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 3
  %33 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %32, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %32, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %6, %"class.blink::InspectorAgentState::Field"* %33) #13
  %36 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %37 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 3, i32 2
  store i8 0, i8* %38, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22InspectorDatabaseAgentD2Ev(%"class.blink::InspectorDatabaseAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::InspectorDatabaseAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN5blink22InspectorDatabaseAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN5blink22InspectorDatabaseAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #13
  br label %20

20:                                               ; preds = %1, %16, %19
  %21 = bitcast %"class.blink::InspectorDatabaseAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %21, align 8
  %22 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::protocol::Database::Frontend"*, %"class.blink::protocol::Database::Frontend"** %22, align 8
  store %"class.blink::protocol::Database::Frontend"* null, %"class.blink::protocol::Database::Frontend"** %22, align 8
  %24 = icmp eq %"class.blink::protocol::Database::Frontend"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::protocol::Database::Frontend"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %25, %20
  %28 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %29 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %28, align 8
  %30 = icmp eq %"class.blink::InspectorAgentState::Field"** %29, null
  %31 = bitcast %"class.blink::InspectorAgentState::Field"** %29 to i8*
  br i1 %30, label %38, label %32, !prof !3

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36, !prof !2

36:                                               ; preds = %32
  store i32 0, i32* %33, align 4
  br label %37

37:                                               ; preds = %36, %32
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #13
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %28, align 8
  br label %38

38:                                               ; preds = %37, %27
  %39 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #13
  br label %55

55:                                               ; preds = %38, %51, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD2Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink22InspectorDatabaseAgentD1Ev(%"class.blink::InspectorDatabaseAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 -1, i32 3, i32 1
  %3 = bitcast i8* %2 to %"class.blink::InspectorDatabaseAgent"*
  tail call void @_ZN5blink22InspectorDatabaseAgentD2Ev(%"class.blink::InspectorDatabaseAgent"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22InspectorDatabaseAgentD0Ev(%"class.blink::InspectorDatabaseAgent"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink22InspectorDatabaseAgentD2Ev(%"class.blink::InspectorDatabaseAgent"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink22InspectorDatabaseAgentD0Ev(%"class.blink::InspectorDatabaseAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 -1, i32 3, i32 1
  %3 = bitcast i8* %2 to %"class.blink::InspectorDatabaseAgent"*
  tail call void @_ZN5blink22InspectorDatabaseAgentD2Ev(%"class.blink::InspectorDatabaseAgent"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22InspectorDatabaseAgent11InnerEnableEv(%"class.blink::InspectorDatabaseAgent"*) local_unnamed_addr #0 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to { i64, i64 }*
  %4 = alloca %"class.base::RepeatingCallback.2199", align 8
  %5 = alloca %"class.blink::Persistent.2200", align 8
  %6 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::Page"*, %"class.blink::Page"** %6, align 8
  %8 = tail call %"class.blink::DatabaseClient"* @_ZN5blink14DatabaseClient8FromPageEPNS_4PageE(%"class.blink::Page"* %7) #13
  %9 = icmp eq %"class.blink::DatabaseClient"* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  tail call void @_ZN5blink14DatabaseClient17SetInspectorAgentEPNS_22InspectorDatabaseAgentE(%"class.blink::DatabaseClient"* nonnull %8, %"class.blink::InspectorDatabaseAgent"* %0) #13
  br label %11

11:                                               ; preds = %1, %10
  %12 = tail call dereferenceable(48) %"class.blink::DatabaseTracker"* @_ZN5blink15DatabaseTracker7TrackerEv() #13
  %13 = load %"class.blink::Page"*, %"class.blink::Page"** %6, align 8
  %14 = bitcast %"class.blink::Persistent.2200"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.blink::Persistent.2200", %"class.blink::Persistent.2200"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::Persistent.2200", %"class.blink::Persistent.2200"* %5, i64 0, i32 0, i32 0
  store %"class.blink::InspectorDatabaseAgent"* %0, %"class.blink::InspectorDatabaseAgent"** %16, align 8, !alias.scope !4
  %17 = getelementptr inbounds %"class.blink::Persistent.2200", %"class.blink::Persistent.2200"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %17, align 8, !alias.scope !4
  %18 = ptrtoint %"class.blink::InspectorDatabaseAgent"* %0 to i64
  switch i64 %18, label %19 [
    i64 0, label %45
    i64 -1, label %45
  ]

19:                                               ; preds = %11
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !4
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #13, !noalias !4
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !2

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #13
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8, !noalias !4
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %30, align 8, !noalias !4
  %32 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %32, align 8, !noalias !4
  %34 = icmp eq %"class.blink::PersistentNode"* %33, null
  br i1 %34, label %35, label %38, !prof !2

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %31, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %36) #13
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %32, align 8
  br label %38

38:                                               ; preds = %35, %26
  %39 = phi %"class.blink::PersistentNode"* [ %37, %35 ], [ %33, %26 ]
  %40 = bitcast %"class.blink::PersistentNode"* %39 to i64*
  %41 = load i64, i64* %40, align 8, !noalias !4
  %42 = bitcast %"class.blink::PersistentRegion"* %31 to i64*
  store i64 %41, i64* %42, align 8, !noalias !4
  %43 = bitcast %"class.blink::PersistentNode"* %39 to %"class.blink::PersistentBase.2201"**
  store %"class.blink::PersistentBase.2201"* %15, %"class.blink::PersistentBase.2201"** %43, align 8, !noalias !4
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %39, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_22InspectorDatabaseAgentELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %39, %"class.blink::PersistentNode"** %17, align 8, !alias.scope !4
  br label %45

45:                                               ; preds = %11, %11, %38
  %46 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46)
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::InspectorDatabaseAgent"*, %"class.blink::Database"*)* @_ZN5blink22InspectorDatabaseAgent26RegisterDatabaseOnCreationEPNS_8DatabaseE to i64), i64 0>, <2 x i64>* %2, align 16, !noalias !7
  %47 = call i8* @_Znwm(i64 64) #15, !noalias !10
  %48 = bitcast i8* %47 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink22InspectorDatabaseAgentEFvPNS2_8DatabaseEEJNS2_10PersistentIS3_EEEEC2IRS7_JS9_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %48, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.blink::Database"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22InspectorDatabaseAgentEFvPNS3_8DatabaseEEJNS3_10PersistentIS4_EEEEEFvS6_EE3RunEPNS0_13BindStateBaseES6_ to void ()*), { i64, i64 }* nonnull dereferenceable(16) %3, %"class.blink::Persistent.2200"* nonnull dereferenceable(16) %5) #13, !noalias !10
  %49 = bitcast %"class.base::RepeatingCallback.2199"* %4 to i8**
  store i8* %47, i8** %49, align 8, !alias.scope !10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46)
  call void @_ZN5blink15DatabaseTracker25ForEachOpenDatabaseInPageEPNS_4PageEN4base17RepeatingCallbackIFvPNS_8DatabaseEEEE(%"class.blink::DatabaseTracker"* %12, %"class.blink::Page"* %13, %"class.base::RepeatingCallback.2199"* nonnull %4) #13
  %50 = getelementptr inbounds %"class.base::RepeatingCallback.2199", %"class.base::RepeatingCallback.2199"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #13
  %51 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  %52 = icmp eq %"class.blink::PersistentNode"* %51, null
  br i1 %52, label %72, label %53

53:                                               ; preds = %45
  %54 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %55 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %54, i64 0, i32 1
  %56 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %55) #13
  %57 = icmp eq i8* %56, null
  br i1 %57, label %58, label %60, !prof !2

58:                                               ; preds = %53
  %59 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %55, i8* %59) #13
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i8* [ %59, %58 ], [ %56, %53 ]
  %62 = bitcast i8* %61 to %"class.blink::ThreadState"**
  %63 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %63, i64 0, i32 3, i32 0, i32 0, i32 0
  %65 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %64, align 8
  %66 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  %67 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %65, i64 0, i32 0, i32 0
  %68 = bitcast %"class.blink::PersistentRegion"* %65 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.blink::PersistentNode"* %66 to i64*
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %66, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %71, align 8
  store %"class.blink::PersistentNode"* %66, %"class.blink::PersistentNode"** %67, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %17, align 8
  br label %72

72:                                               ; preds = %45, %60
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  ret void
}

declare %"class.blink::DatabaseClient"* @_ZN5blink14DatabaseClient8FromPageEPNS_4PageE(%"class.blink::Page"*) local_unnamed_addr #2

declare void @_ZN5blink14DatabaseClient17SetInspectorAgentEPNS_22InspectorDatabaseAgentE(%"class.blink::DatabaseClient"*, %"class.blink::InspectorDatabaseAgent"*) local_unnamed_addr #2

declare dereferenceable(48) %"class.blink::DatabaseTracker"* @_ZN5blink15DatabaseTracker7TrackerEv() local_unnamed_addr #2

declare void @_ZN5blink15DatabaseTracker25ForEachOpenDatabaseInPageEPNS_4PageEN4base17RepeatingCallbackIFvPNS_8DatabaseEEEE(%"class.blink::DatabaseTracker"*, %"class.blink::Page"*, %"class.base::RepeatingCallback.2199"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22InspectorDatabaseAgent6enableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDatabaseAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebVector.1833", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 3
  %5 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 3, i32 2
  %6 = load i8, i8* %5, align 1, !range !15
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %32

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 3, i32 1
  %11 = load i8, i8* %10, align 8, !range !15
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %18

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %4 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %15 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %15, i64 2
  %17 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %16, align 8
  tail call void %17(%"class.blink::InspectorAgentState::SimpleField"* %4) #13
  br label %31

18:                                               ; preds = %9
  store i8 1, i8* %5, align 1
  %19 = bitcast %"class.blink::WebVector.1833"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.blink::WebVector.1833", %"class.blink::WebVector.1833"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector.1833"* nonnull %3) #13
  %21 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 3, i32 0, i32 2
  %22 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 3, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %22, %"class.WTF::String"* dereferenceable(8) %23, %"class.blink::WebVector.1833"* nonnull %3) #13
  %24 = load i8*, i8** %20, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.blink::WebVector.1833", %"class.blink::WebVector.1833"* %3, i64 0, i32 0, i32 0, i32 1
  %28 = ptrtoint i8* %24 to i64
  %29 = bitcast i8** %27 to i64*
  store i64 %28, i64* %29, align 8
  call void @_ZdlPv(i8* nonnull %24) #15
  br label %30

30:                                               ; preds = %26, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  br label %31

31:                                               ; preds = %13, %30
  call void @_ZN5blink22InspectorDatabaseAgent11InnerEnableEv(%"class.blink::InspectorDatabaseAgent"* %1)
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %32

32:                                               ; preds = %31, %8
  ret void
}

declare void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink22InspectorDatabaseAgent6enableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDatabaseAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 -1, i32 3, i32 1
  %4 = bitcast i8* %3 to %"class.blink::InspectorDatabaseAgent"*
  tail call void @_ZN5blink22InspectorDatabaseAgent6enableEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDatabaseAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22InspectorDatabaseAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDatabaseAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebVector.1833", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 3
  %5 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 3, i32 2
  %6 = load i8, i8* %5, align 1, !range !15
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %79

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 3, i32 1
  %11 = load i8, i8* %10, align 8, !range !15
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %4 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %15 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %15, i64 2
  %17 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %16, align 8
  tail call void %17(%"class.blink::InspectorAgentState::SimpleField"* %4) #13
  br label %31

18:                                               ; preds = %9
  store i8 0, i8* %5, align 1
  %19 = bitcast %"class.blink::WebVector.1833"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.blink::WebVector.1833", %"class.blink::WebVector.1833"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext false, %"class.blink::WebVector.1833"* nonnull %3) #13
  %21 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 3, i32 0, i32 2
  %22 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 3, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %22, %"class.WTF::String"* dereferenceable(8) %23, %"class.blink::WebVector.1833"* nonnull %3) #13
  %24 = load i8*, i8** %20, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.blink::WebVector.1833", %"class.blink::WebVector.1833"* %3, i64 0, i32 0, i32 0, i32 1
  %28 = ptrtoint i8* %24 to i64
  %29 = bitcast i8** %27 to i64*
  store i64 %28, i64* %29, align 8
  call void @_ZdlPv(i8* nonnull %24) #15
  br label %30

30:                                               ; preds = %26, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  br label %31

31:                                               ; preds = %13, %30
  %32 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %33 = load %"class.blink::Page"*, %"class.blink::Page"** %32, align 8
  %34 = call %"class.blink::DatabaseClient"* @_ZN5blink14DatabaseClient8FromPageEPNS_4PageE(%"class.blink::Page"* %33) #13
  %35 = icmp eq %"class.blink::DatabaseClient"* %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %31
  call void @_ZN5blink14DatabaseClient17SetInspectorAgentEPNS_22InspectorDatabaseAgentE(%"class.blink::DatabaseClient"* nonnull %34, %"class.blink::InspectorDatabaseAgent"* null) #13
  br label %37

37:                                               ; preds = %31, %36
  %38 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 2, i32 0
  %39 = getelementptr inbounds %"class.WTF::HashMap.237", %"class.WTF::HashMap.237"* %38, i64 0, i32 0, i32 0
  %40 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %39, align 8
  %41 = icmp eq %"struct.WTF::KeyValuePair.240"* %40, null
  br i1 %41, label %78, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %74, label %46

46:                                               ; preds = %42
  %47 = zext i32 %44 to i64
  br label %48

48:                                               ; preds = %71, %46
  %49 = phi i64 [ 0, %46 ], [ %72, %71 ]
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %40, i64 %49
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  switch i64 %53, label %54 [
    i64 -1, label %71
    i64 0, label %71
  ]

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #13
  br label %67

67:                                               ; preds = %66, %63
  %68 = bitcast %"struct.WTF::KeyValuePair.240"* %50 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %68, align 8
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %40, i64 %49, i32 1
  %70 = bitcast %"class.blink::Member.241"* %69 to i64*
  store atomic i64 0, i64* %70 monotonic, align 8
  br label %71

71:                                               ; preds = %67, %48, %48
  %72 = add nuw nsw i64 %49, 1
  %73 = icmp eq i64 %72, %47
  br i1 %73, label %74, label %48

74:                                               ; preds = %71, %42
  %75 = bitcast %"struct.WTF::KeyValuePair.240"* %40 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %75) #13
  %76 = bitcast %"class.WTF::HashMap.237"* %38 to i64*
  store atomic i64 0, i64* %76 monotonic, align 8
  store i32 0, i32* %43, align 8
  %77 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  store i32 0, i32* %77, align 4
  br label %78

78:                                               ; preds = %37, %74
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %79

79:                                               ; preds = %78, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink22InspectorDatabaseAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDatabaseAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 -1, i32 3, i32 1
  %4 = bitcast i8* %3 to %"class.blink::InspectorDatabaseAgent"*
  tail call void @_ZN5blink22InspectorDatabaseAgent7disableEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDatabaseAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22InspectorDatabaseAgent7RestoreEv(%"class.blink::InspectorDatabaseAgent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 3, i32 2
  %3 = load i8, i8* %2, align 1, !range !15
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink22InspectorDatabaseAgent11InnerEnableEv(%"class.blink::InspectorDatabaseAgent"* %0)
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22InspectorDatabaseAgent21getDatabaseTableNamesERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIS2_NS5_9allocatorIS2_EEEENS5_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDatabaseAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.2202"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.WTF::Vector.496", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 3, i32 2
  %8 = load i8, i8* %7, align 1, !range !15
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %4
  %11 = tail call i8* @_Znwm(i64 32) #15
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %14, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %11, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i64 29, i1 false) #13
  %15 = getelementptr inbounds i8, i8* %11, i64 29
  store i8 0, i8* %15, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %5) #13
  %16 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %217

20:                                               ; preds = %10
  %21 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %21) #15
  br label %217

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 2, i32 0
  %24 = getelementptr inbounds %"class.WTF::HashMap.237", %"class.WTF::HashMap.237"* %23, i64 0, i32 0
  %25 = tail call { %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.238"* %24, %"class.WTF::String"* dereferenceable(8) %2) #13
  %26 = extractvalue { %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"* } %25, 0
  %27 = getelementptr inbounds %"class.WTF::HashMap.237", %"class.WTF::HashMap.237"* %23, i64 0, i32 0, i32 0
  %28 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %28, i64 %31
  %33 = icmp eq %"struct.WTF::KeyValuePair.240"* %26, %32
  br i1 %33, label %172, label %34

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %26, i64 0, i32 1, i32 0, i32 0
  %36 = load %"class.blink::InspectorDatabaseResource"*, %"class.blink::InspectorDatabaseResource"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::InspectorDatabaseResource", %"class.blink::InspectorDatabaseResource"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::Database"*, %"class.blink::Database"** %37, align 8
  %39 = icmp eq %"class.blink::Database"* %38, null
  br i1 %39, label %172, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.WTF::Vector.496"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #13
  %42 = getelementptr inbounds %"class.WTF::Vector.496", %"class.WTF::Vector.496"* %6, i64 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.WTF::Vector.496", %"class.WTF::Vector.496"* %6, i64 0, i32 0, i32 0, i32 2
  %44 = bitcast %"class.WTF::Vector.496"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false)
  call void @_ZN5blink8Database10TableNamesEv(%"class.WTF::Vector.496"* nonnull sret %6, %"class.blink::Database"* nonnull %38) #13
  %45 = load %"class.WTF::String"*, %"class.WTF::String"** %42, align 8
  %46 = load i32, i32* %43, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 %47
  %49 = call i8* @_Znwm(i64 24) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 24, i1 false) #13
  %50 = icmp eq i32 %46, 0
  br i1 %50, label %92, label %51

51:                                               ; preds = %40
  %52 = shl nuw nsw i64 %47, 3
  %53 = call i8* @_Znwm(i64 %52) #15
  %54 = bitcast i8* %53 to %"class.WTF::String"*
  %55 = getelementptr inbounds i8, i8* %49, i64 8
  %56 = bitcast i8* %55 to i8**
  store i8* %53, i8** %56, align 8
  %57 = bitcast i8* %49 to i8**
  store i8* %53, i8** %57, align 8
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 %47
  %59 = getelementptr inbounds i8, i8* %49, i64 16
  %60 = bitcast i8* %59 to %"class.WTF::String"**
  store %"class.WTF::String"* %58, %"class.WTF::String"** %60, align 8
  %61 = bitcast i8* %55 to i64*
  br label %62

62:                                               ; preds = %51, %86
  %63 = phi %"class.WTF::String"* [ %88, %86 ], [ %54, %51 ]
  %64 = phi %"class.WTF::String"* [ %87, %86 ], [ %45, %51 ]
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %67, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %68, label %86, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %86

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i33
  %78 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #13
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !2

83:                                               ; preds = %74
  call void @llvm.trap() #13
  unreachable

84:                                               ; preds = %74
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %75, align 4
  br label %86

86:                                               ; preds = %84, %69, %62
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 1
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 1
  %89 = icmp eq %"class.WTF::String"* %87, %48
  br i1 %89, label %90, label %62

90:                                               ; preds = %86
  %91 = ptrtoint %"class.WTF::String"* %88 to i64
  store i64 %91, i64* %61, align 8
  br label %92

92:                                               ; preds = %40, %90
  %93 = ptrtoint i8* %49 to i64
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.2202", %"class.std::__1::unique_ptr.2202"* %3, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.std::__1::vector.2205"*, %"class.std::__1::vector.2205"** %94, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.2202"* %3 to i64*
  store i64 %93, i64* %96, align 8
  %97 = icmp eq %"class.std::__1::vector.2205"* %95, null
  br i1 %97, label %135, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.std::__1::vector.2205", %"class.std::__1::vector.2205"* %95, i64 0, i32 0, i32 0
  %100 = load %"class.WTF::String"*, %"class.WTF::String"** %99, align 8
  %101 = icmp eq %"class.WTF::String"* %100, null
  br i1 %101, label %133, label %102

102:                                              ; preds = %98
  %103 = bitcast %"class.WTF::String"* %100 to i8*
  %104 = getelementptr inbounds %"class.std::__1::vector.2205", %"class.std::__1::vector.2205"* %95, i64 0, i32 0, i32 1
  %105 = load %"class.WTF::String"*, %"class.WTF::String"** %104, align 8
  %106 = icmp eq %"class.WTF::String"* %105, %100
  br i1 %106, label %131, label %107

107:                                              ; preds = %102, %126
  %108 = phi %"class.WTF::String"* [ %109, %126 ], [ %105, %102 ]
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %108, i64 -1
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %109, i64 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #13
  br label %126

126:                                              ; preds = %125, %122, %107
  %127 = icmp eq %"class.WTF::String"* %109, %100
  br i1 %127, label %128, label %107

128:                                              ; preds = %126
  %129 = bitcast %"class.std::__1::vector.2205"* %95 to i8**
  %130 = load i8*, i8** %129, align 8
  br label %131

131:                                              ; preds = %128, %102
  %132 = phi i8* [ %130, %128 ], [ %103, %102 ]
  store %"class.WTF::String"* %100, %"class.WTF::String"** %104, align 8
  call void @_ZdlPv(i8* %132) #15
  br label %133

133:                                              ; preds = %131, %98
  %134 = bitcast %"class.std::__1::vector.2205"* %95 to i8*
  call void @_ZdlPv(i8* %134) #15
  br label %135

135:                                              ; preds = %133, %92
  %136 = load %"class.WTF::String"*, %"class.WTF::String"** %42, align 8
  %137 = icmp eq %"class.WTF::String"* %136, null
  br i1 %137, label %171, label %138, !prof !3

138:                                              ; preds = %135
  %139 = bitcast %"class.WTF::String"* %136 to i8*
  %140 = load i32, i32* %43, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %169, label %142, !prof !2

142:                                              ; preds = %138
  %143 = zext i32 %140 to i64
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %136, i64 %143
  br label %145

145:                                              ; preds = %163, %142
  %146 = phi %"class.WTF::String"* [ %164, %163 ], [ %136, %142 ]
  %147 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %146, i64 0, i32 0, i32 0
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #13
  br label %163

163:                                              ; preds = %162, %159, %145
  %164 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %146, i64 1
  %165 = icmp eq %"class.WTF::String"* %164, %144
  br i1 %165, label %166, label %145

166:                                              ; preds = %163
  store i32 0, i32* %43, align 4
  %167 = bitcast %"class.WTF::Vector.496"* %6 to i8**
  %168 = load i8*, i8** %167, align 8
  br label %169

169:                                              ; preds = %166, %138
  %170 = phi i8* [ %168, %166 ], [ %139, %138 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %170) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %42, align 8
  br label %171

171:                                              ; preds = %135, %169
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13
  br label %216

172:                                              ; preds = %22, %34
  %173 = tail call i8* @_Znwm(i64 24) #15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 0, i64 24, i1 false) #13
  %174 = ptrtoint i8* %173 to i64
  %175 = getelementptr inbounds %"class.std::__1::unique_ptr.2202", %"class.std::__1::unique_ptr.2202"* %3, i64 0, i32 0, i32 0, i32 0
  %176 = load %"class.std::__1::vector.2205"*, %"class.std::__1::vector.2205"** %175, align 8
  %177 = bitcast %"class.std::__1::unique_ptr.2202"* %3 to i64*
  store i64 %174, i64* %177, align 8
  %178 = icmp eq %"class.std::__1::vector.2205"* %176, null
  br i1 %178, label %216, label %179

179:                                              ; preds = %172
  %180 = getelementptr inbounds %"class.std::__1::vector.2205", %"class.std::__1::vector.2205"* %176, i64 0, i32 0, i32 0
  %181 = load %"class.WTF::String"*, %"class.WTF::String"** %180, align 8
  %182 = icmp eq %"class.WTF::String"* %181, null
  br i1 %182, label %214, label %183

183:                                              ; preds = %179
  %184 = bitcast %"class.WTF::String"* %181 to i8*
  %185 = getelementptr inbounds %"class.std::__1::vector.2205", %"class.std::__1::vector.2205"* %176, i64 0, i32 0, i32 1
  %186 = load %"class.WTF::String"*, %"class.WTF::String"** %185, align 8
  %187 = icmp eq %"class.WTF::String"* %186, %181
  br i1 %187, label %212, label %188

188:                                              ; preds = %183, %207
  %189 = phi %"class.WTF::String"* [ %190, %207 ], [ %186, %183 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 -1
  %191 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %190, i64 0, i32 0, i32 0
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %188
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #13
  br label %207

207:                                              ; preds = %206, %203, %188
  %208 = icmp eq %"class.WTF::String"* %190, %181
  br i1 %208, label %209, label %188

209:                                              ; preds = %207
  %210 = bitcast %"class.std::__1::vector.2205"* %176 to i8**
  %211 = load i8*, i8** %210, align 8
  br label %212

212:                                              ; preds = %209, %183
  %213 = phi i8* [ %211, %209 ], [ %184, %183 ]
  store %"class.WTF::String"* %181, %"class.WTF::String"** %185, align 8
  tail call void @_ZdlPv(i8* %213) #15
  br label %214

214:                                              ; preds = %212, %179
  %215 = bitcast %"class.std::__1::vector.2205"* %176 to i8*
  tail call void @_ZdlPv(i8* %215) #15
  br label %216

216:                                              ; preds = %172, %214, %171
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %217

217:                                              ; preds = %20, %10, %216
  ret void
}

declare void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Database"* @_ZN5blink22InspectorDatabaseAgent13DatabaseForIdERKN3WTF6StringE(%"class.blink::InspectorDatabaseAgent"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.WTF::HashMap.237", %"class.WTF::HashMap.237"* %3, i64 0, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.238"* %4, %"class.WTF::String"* dereferenceable(8) %1) #13
  %6 = extractvalue { %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"* } %5, 0
  %7 = getelementptr inbounds %"class.WTF::HashMap.237", %"class.WTF::HashMap.237"* %3, i64 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %8, i64 %11
  %13 = icmp eq %"struct.WTF::KeyValuePair.240"* %6, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %6, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::InspectorDatabaseResource"*, %"class.blink::InspectorDatabaseResource"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::InspectorDatabaseResource", %"class.blink::InspectorDatabaseResource"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Database"*, %"class.blink::Database"** %17, align 8
  br label %19

19:                                               ; preds = %2, %14
  %20 = phi %"class.blink::Database"* [ %18, %14 ], [ null, %2 ]
  ret %"class.blink::Database"* %20
}

declare void @_ZN5blink8Database10TableNamesEv(%"class.WTF::Vector.496"* sret, %"class.blink::Database"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink22InspectorDatabaseAgent21getDatabaseTableNamesERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIS2_NS5_9allocatorIS2_EEEENS5_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDatabaseAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.2202"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %1, i64 -1, i32 3, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorDatabaseAgent"*
  tail call void @_ZN5blink22InspectorDatabaseAgent21getDatabaseTableNamesERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIS2_NS5_9allocatorIS2_EEEENS5_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDatabaseAgent"* %6, %"class.WTF::String"* dereferenceable(8) %2, %"class.std::__1::unique_ptr.2202"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22InspectorDatabaseAgent10executeSQLERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol8Database7Backend18ExecuteSQLCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorDatabaseAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.crdtp::DispatchResponse", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = ptrtoint %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %3 to i64
  %10 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 3, i32 2
  %11 = load i8, i8* %10, align 1, !range !15
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %39

13:                                               ; preds = %4
  %14 = bitcast %"class.crdtp::DispatchResponse"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #13
  %15 = tail call i8* @_Znwm(i64 32) #15
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %18, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i64 29, i1 false) #13
  %19 = getelementptr inbounds i8, i8* %15, i64 29
  store i8 0, i8* %19, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %5, %"class.std::__1::basic_string"* nonnull %6) #13
  %20 = bitcast %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %3 to void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::DispatchResponse"*)***
  %21 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::DispatchResponse"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::DispatchResponse"*)** %21, i64 1
  %23 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::DispatchResponse"*)** %22, align 8
  call void %23(%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %3, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %5) #13
  %24 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %13
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #15
  br label %32

32:                                               ; preds = %13, %29
  %33 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %149

37:                                               ; preds = %32
  %38 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %38) #15
  br label %149

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 2, i32 0
  %41 = getelementptr inbounds %"class.WTF::HashMap.237", %"class.WTF::HashMap.237"* %40, i64 0, i32 0
  %42 = tail call { %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.238"* %41, %"class.WTF::String"* dereferenceable(8) %1) #13
  %43 = extractvalue { %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"* } %42, 0
  %44 = getelementptr inbounds %"class.WTF::HashMap.237", %"class.WTF::HashMap.237"* %40, i64 0, i32 0, i32 0
  %45 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %45, i64 %48
  %50 = icmp eq %"struct.WTF::KeyValuePair.240"* %43, %49
  br i1 %50, label %57, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %43, i64 0, i32 1, i32 0, i32 0
  %53 = load %"class.blink::InspectorDatabaseResource"*, %"class.blink::InspectorDatabaseResource"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::InspectorDatabaseResource", %"class.blink::InspectorDatabaseResource"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::Database"*, %"class.blink::Database"** %54, align 8
  %56 = icmp eq %"class.blink::Database"* %55, null
  br i1 %56, label %57, label %81

57:                                               ; preds = %39, %51
  %58 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #13
  %59 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  store i8 18, i8* %60, align 1
  %61 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i64 18, i1 false) #13
  %62 = getelementptr inbounds i8, i8* %61, i64 18
  store i8 0, i8* %62, align 2
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.std::__1::basic_string"* nonnull %8) #13
  %63 = bitcast %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %3 to void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::DispatchResponse"*)***
  %64 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::DispatchResponse"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::DispatchResponse"*)** %64, i64 1
  %66 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::DispatchResponse"*)** %65, align 8
  call void %66(%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %3, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %7) #13
  %67 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %57
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #15
  br label %75

75:                                               ; preds = %57, %72
  %76 = load i8, i8* %60, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %149

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #15
  br label %149

81:                                               ; preds = %51
  %82 = tail call noalias i8* @malloc(i64 16) #13
  %83 = bitcast i8* %82 to i32*
  store i32 1, i32* %83, align 4
  %84 = getelementptr inbounds i8, i8* %82, i64 8
  %85 = bitcast i8* %84 to i64*
  store i64 %9, i64* %85, align 8
  %86 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14SQLTransaction17OnProcessCallbackEEEPhm(i64 24) #13
  %87 = icmp eq i8* %82, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %81
  %89 = bitcast i8* %82 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %89) #13
  br label %90

90:                                               ; preds = %88, %81
  %91 = ptrtoint i8* %82 to i64
  %92 = bitcast i8* %86 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_119TransactionCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = getelementptr inbounds i8, i8* %86, i64 8
  %96 = bitcast i8* %95 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %96, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %97, label %115, label %98

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %115

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = zext i32 %105 to i33
  %107 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %106, i33 1) #13
  %108 = extractvalue { i33, i1 } %107, 1
  %109 = extractvalue { i33, i1 } %107, 0
  %110 = icmp slt i33 %109, 0
  %111 = or i1 %108, %110
  br i1 %111, label %112, label %113, !prof !2

112:                                              ; preds = %103
  tail call void @llvm.trap() #13
  unreachable

113:                                              ; preds = %103
  %114 = trunc i33 %109 to i32
  store i32 %114, i32* %104, align 4
  br label %115

115:                                              ; preds = %90, %98, %113
  %116 = getelementptr inbounds i8, i8* %86, i64 16
  %117 = bitcast i8* %116 to i64*
  store i64 %91, i64* %117, align 8
  %118 = getelementptr inbounds i8, i8* %86, i64 -4
  %119 = bitcast i8* %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = or i16 %120, 1
  store atomic i16 %121, i16* %119 release, align 2
  br i1 %87, label %124, label %122

122:                                              ; preds = %115
  %123 = bitcast i8* %82 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %123) #13
  br label %124

124:                                              ; preds = %115, %122
  %125 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14SQLTransaction15OnErrorCallbackEEEPhm(i64 16) #13
  %126 = bitcast i8* %125 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_124TransactionErrorCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8
  %127 = getelementptr inbounds i8, i8* %125, i64 8
  %128 = bitcast i8* %127 to i64*
  store i64 %91, i64* %128, align 8
  %129 = getelementptr inbounds i8, i8* %125, i64 -4
  %130 = bitcast i8* %129 to i16*
  %131 = load atomic i16, i16* %130 monotonic, align 2
  %132 = or i16 %131, 1
  store atomic i16 %132, i16* %130 release, align 2
  %133 = bitcast i8* %86 to %"class.blink::SQLTransaction::OnProcessCallback"*
  %134 = bitcast i8* %125 to %"class.blink::SQLTransaction::OnErrorCallback"*
  tail call void @_ZN5blink8Database18PerformTransactionEPNS_14SQLTransaction17OnProcessCallbackEPNS1_15OnErrorCallbackEPNS1_17OnSuccessCallbackE(%"class.blink::Database"* nonnull %55, %"class.blink::SQLTransaction::OnProcessCallback"* %133, %"class.blink::SQLTransaction::OnErrorCallback"* %134, %"class.blink::SQLTransaction::OnSuccessCallback"* null) #13
  br i1 %87, label %157, label %135

135:                                              ; preds = %124
  %136 = bitcast i8* %82 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* nonnull %136) #13
  %137 = load i32, i32* %83, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %157

139:                                              ; preds = %135
  %140 = bitcast i8* %84 to %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"**
  %141 = load %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %140, align 8
  store %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* null, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %140, align 8
  %142 = icmp eq %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %141, null
  br i1 %142, label %148, label %143

143:                                              ; preds = %139
  %144 = bitcast %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %141 to void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)***
  %145 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)**, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %145, i64 4
  %147 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %146, align 8
  tail call void %147(%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* nonnull %141) #13
  br label %148

148:                                              ; preds = %143, %139
  tail call void @free(i8* nonnull %82) #13
  br label %157

149:                                              ; preds = %78, %75, %37, %32
  %150 = phi i8* [ %14, %32 ], [ %14, %37 ], [ %58, %75 ], [ %58, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %150) #13
  %151 = icmp eq %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %3, null
  br i1 %151, label %157, label %152

152:                                              ; preds = %149
  %153 = bitcast %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %3 to void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)***
  %154 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)**, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %154, i64 4
  %156 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %155, align 8
  call void %156(%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* nonnull %3) #13
  br label %157

157:                                              ; preds = %148, %135, %124, %149, %152
  ret void
}

declare void @_ZN5blink8Database18PerformTransactionEPNS_14SQLTransaction17OnProcessCallbackEPNS1_15OnErrorCallbackEPNS1_17OnSuccessCallbackE(%"class.blink::Database"*, %"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::SQLTransaction::OnSuccessCallback"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink22InspectorDatabaseAgent10executeSQLERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol8Database7Backend18ExecuteSQLCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorDatabaseAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 -1, i32 3, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorDatabaseAgent"*
  tail call void @_ZN5blink22InspectorDatabaseAgent10executeSQLERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol8Database7Backend18ExecuteSQLCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorDatabaseAgent"* %6, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22InspectorDatabaseAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorDatabaseAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.233"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4PageEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::HeapHashMap"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = bitcast %"class.blink::HeapHashMap"* %14 to i8**
  %18 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %19 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, i64 11
  %21 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %1, i8** %17) #13
  %22 = icmp eq i64 %16, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #13
  br label %29

29:                                               ; preds = %13, %23
  %30 = getelementptr inbounds %"class.blink::InspectorDatabaseAgent", %"class.blink::InspectorDatabaseAgent"* %0, i64 0, i32 0, i32 2
  %31 = bitcast %"class.blink::Member"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %32 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #13
  br label %40

40:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE5TraceEPNS_7VisitorE(%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE(%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %6 = ptrtoint %"class.blink::CoreProbeSink"* %1 to i64
  %7 = bitcast %"class.blink::Member"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::CoreProbeSink"* %1 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #13
  br label %13

13:                                               ; preds = %4, %10
  %14 = tail call i8* @_Znwm(i64 8) #15
  %15 = getelementptr inbounds %"class.crdtp::UberDispatcher", %"class.crdtp::UberDispatcher"* %2, i64 0, i32 1
  %16 = bitcast %"class.crdtp::FrontendChannel"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::protocol::Database::Frontend"*, %"class.blink::protocol::Database::Frontend"** %19, align 8
  %21 = bitcast %"class.blink::protocol::Database::Frontend"** %19 to i8**
  store i8* %14, i8** %21, align 8
  %22 = icmp eq %"class.blink::protocol::Database::Frontend"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::protocol::Database::Frontend"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %13, %23
  %26 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 1
  tail call void @_ZN5blink8protocol8Database10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"* %2, %"class.blink::protocol::Database::Backend"* %26) #13
  %27 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3
  tail call void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"* %27, %"class.blink::InspectorSessionState"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE7DisposeEv(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.crdtp::DispatchResponse", align 8
  %3 = bitcast %"class.blink::InspectorBaseAgent"* %0 to void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)***
  %4 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)**, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %4, i64 8
  %6 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %5, align 8
  call void %6(%"class.crdtp::DispatchResponse"* nonnull sret %2, %"class.blink::InspectorBaseAgent"* %0) #13
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %2, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #15
  br label %15

15:                                               ; preds = %1, %12
  %16 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::protocol::Database::Frontend"*, %"class.blink::protocol::Database::Frontend"** %16, align 8
  store %"class.blink::protocol::Database::Frontend"* null, %"class.blink::protocol::Database::Frontend"** %16, align 8
  %18 = icmp eq %"class.blink::protocol::Database::Frontend"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::protocol::Database::Frontend"* %17 to i8*
  call void @_ZdlPv(i8* %20) #15
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::Member"* %22 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD0Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEED2Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::InspectorBaseAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::Database::Frontend"*, %"class.blink::protocol::Database::Frontend"** %3, align 8
  store %"class.blink::protocol::Database::Frontend"* null, %"class.blink::protocol::Database::Frontend"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::Database::Frontend"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::Database::Frontend"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  %11 = icmp eq %"class.blink::InspectorAgentState::Field"** %10, null
  %12 = bitcast %"class.blink::InspectorAgentState::Field"** %10 to i8*
  br i1 %11, label %19, label %13, !prof !3

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !2

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #13
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  br label %19

19:                                               ; preds = %18, %8
  %20 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #13
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent7RestoreEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEED1Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 -1, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.227"* %2 to %"class.blink::InspectorBaseAgent"*
  %4 = bitcast %"class.std::__1::unique_ptr.227"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 6, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::Database::Frontend"*, %"class.blink::protocol::Database::Frontend"** %5, align 8
  store %"class.blink::protocol::Database::Frontend"* null, %"class.blink::protocol::Database::Frontend"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::Database::Frontend"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::protocol::Database::Frontend"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #15
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 4
  %12 = bitcast %"class.std::__1::unique_ptr.227"* %11 to %"class.blink::InspectorAgentState::Field"***
  %13 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  %14 = icmp eq %"class.blink::InspectorAgentState::Field"** %13, null
  %15 = bitcast %"class.blink::InspectorAgentState::Field"** %13 to i8*
  br i1 %14, label %22, label %16, !prof !3

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %3, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !2

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #13
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  br label %22

22:                                               ; preds = %21, %10
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 3
  %24 = bitcast %"class.std::__1::unique_ptr.227"* %23 to %"class.WTF::StringImpl"**
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #13
  br label %40

40:                                               ; preds = %22, %36, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol8Database8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14SQLTransaction15OnErrorCallbackEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14SQLTransaction15OnErrorCallbackEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14SQLTransaction15OnErrorCallbackEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14SQLTransaction15OnErrorCallbackEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SQLTransaction15OnErrorCallbackEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #13
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %21, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #13
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14SQLTransaction15OnErrorCallbackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SQLTransaction::OnErrorCallback"*
  %4 = bitcast i8* %1 to void (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::Visitor"*)**, void (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SQLTransaction::OnErrorCallback"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14SQLTransaction15OnErrorCallbackEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SQLTransaction::OnErrorCallback"*
  %3 = bitcast i8* %0 to void (%"class.blink::SQLTransaction::OnErrorCallback"*)***
  %4 = load void (%"class.blink::SQLTransaction::OnErrorCallback"*)**, void (%"class.blink::SQLTransaction::OnErrorCallback"*)*** %3, align 8
  %5 = load void (%"class.blink::SQLTransaction::OnErrorCallback"*)*, void (%"class.blink::SQLTransaction::OnErrorCallback"*)** %4, align 8
  tail call void %5(%"class.blink::SQLTransaction::OnErrorCallback"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14SQLTransaction15OnErrorCallbackEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_124TransactionErrorCallbackD2Ev(%"class.blink::(anonymous namespace)::TransactionErrorCallback"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::TransactionErrorCallback", %"class.blink::(anonymous namespace)::TransactionErrorCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_124TransactionErrorCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::TransactionErrorCallback", %"class.blink::(anonymous namespace)::TransactionErrorCallback"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"*, %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"** %3, align 8
  %5 = icmp eq %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::RefCounted.2223", %"class.base::RefCounted.2223"* %12, i64 2
  %14 = bitcast %"class.base::RefCounted.2223"* %13 to %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"**
  %15 = load %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %14, align 8
  store %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* null, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %14, align 8
  %16 = icmp eq %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %15 to void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)***
  %19 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)**, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %19, i64 4
  %21 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %20, align 8
  tail call void %21(%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* nonnull %15) #13
  br label %22

22:                                               ; preds = %17, %11
  %23 = bitcast %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4 to i8*
  tail call void @free(i8* %23) #13
  br label %24

24:                                               ; preds = %1, %6, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_124TransactionErrorCallbackD0Ev(%"class.blink::(anonymous namespace)::TransactionErrorCallback"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::TransactionErrorCallback", %"class.blink::(anonymous namespace)::TransactionErrorCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_124TransactionErrorCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::TransactionErrorCallback", %"class.blink::(anonymous namespace)::TransactionErrorCallback"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"*, %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"** %3, align 8
  %5 = icmp eq %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::RefCounted.2223", %"class.base::RefCounted.2223"* %12, i64 2
  %14 = bitcast %"class.base::RefCounted.2223"* %13 to %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"**
  %15 = load %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %14, align 8
  store %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* null, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %14, align 8
  %16 = icmp eq %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %15 to void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)***
  %19 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)**, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %19, i64 4
  %21 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %20, align 8
  tail call void %21(%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* nonnull %15) #13
  br label %22

22:                                               ; preds = %17, %11
  %23 = bitcast %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4 to i8*
  tail call void @free(i8* %23) #13
  br label %24

24:                                               ; preds = %1, %6, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14SQLTransaction15OnErrorCallback5TraceEPNS_7VisitorE(%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_124TransactionErrorCallback7OnErrorEPNS_8SQLErrorE(%"class.blink::(anonymous namespace)::TransactionErrorCallback"* nocapture readonly, %"class.blink::SQLError"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::TransactionErrorCallback", %"class.blink::(anonymous namespace)::TransactionErrorCallback"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"*, %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"** %3, align 8
  tail call fastcc void @_ZN5blink12_GLOBAL__N_125ExecuteSQLCallbackWrapper23ReportTransactionFailedEPNS_8SQLErrorE(%"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, %"class.blink::SQLError"* %1)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_125ExecuteSQLCallbackWrapper23ReportTransactionFailedEPNS_8SQLErrorE(%"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* nocapture readonly, %"class.blink::SQLError"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.crdtp::detail::PtrMaybe", align 8
  %4 = alloca %"class.crdtp::detail::PtrMaybe.2367", align 8
  %5 = alloca %"class.crdtp::detail::PtrMaybe.2387", align 8
  %6 = tail call i8* @_Znwm(i64 24) #15
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol8Database5ErrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::SQLError", %"class.blink::SQLError"* %1, i64 0, i32 1, i32 1
  %13 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %12) #13
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = ptrtoint %"class.WTF::StringImpl"* %13 to i64
  %17 = bitcast i8* %8 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::SQLError", %"class.blink::SQLError"* %1, i64 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %11, align 8
  %20 = ptrtoint i8* %6 to i64
  br label %74

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %55

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #13
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #13
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %39 = ptrtoint %"class.WTF::StringImpl"* %13 to i64
  %40 = bitcast i8* %8 to i64*
  store i64 %39, i64* %40, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %41, label %58, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #13
  br label %58

55:                                               ; preds = %21
  %56 = ptrtoint %"class.WTF::StringImpl"* %13 to i64
  %57 = bitcast i8* %8 to i64*
  store i64 %56, i64* %57, align 8
  br label %58

58:                                               ; preds = %54, %51, %36, %55
  %59 = getelementptr inbounds %"class.blink::SQLError", %"class.blink::SQLError"* %1, i64 0, i32 1, i32 0
  %60 = load i32, i32* %59, align 8
  store i32 %60, i32* %11, align 8
  %61 = ptrtoint i8* %6 to i64
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %58
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %58
  %71 = phi i32 [ %69, %68 ], [ %67, %58 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #13
  br label %74

74:                                               ; preds = %15, %73, %70
  %75 = phi i64 [ %61, %73 ], [ %61, %70 ], [ %20, %15 ]
  %76 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %76, align 8
  %78 = bitcast %"class.crdtp::detail::PtrMaybe"* %3 to i64*
  store i64 0, i64* %78, align 8
  %79 = bitcast %"class.crdtp::detail::PtrMaybe.2367"* %4 to i64*
  store i64 0, i64* %79, align 8
  %80 = bitcast %"class.crdtp::detail::PtrMaybe.2387"* %5 to i64*
  store i64 %75, i64* %80, align 8
  %81 = bitcast %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %77 to void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::detail::PtrMaybe"*, %"class.crdtp::detail::PtrMaybe.2367"*, %"class.crdtp::detail::PtrMaybe.2387"*)***
  %82 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::detail::PtrMaybe"*, %"class.crdtp::detail::PtrMaybe.2367"*, %"class.crdtp::detail::PtrMaybe.2387"*)**, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::detail::PtrMaybe"*, %"class.crdtp::detail::PtrMaybe.2367"*, %"class.crdtp::detail::PtrMaybe.2387"*)*** %81, align 8
  %83 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::detail::PtrMaybe"*, %"class.crdtp::detail::PtrMaybe.2367"*, %"class.crdtp::detail::PtrMaybe.2387"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::detail::PtrMaybe"*, %"class.crdtp::detail::PtrMaybe.2367"*, %"class.crdtp::detail::PtrMaybe.2387"*)** %82, align 8
  call void %83(%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %77, %"class.crdtp::detail::PtrMaybe"* nonnull %3, %"class.crdtp::detail::PtrMaybe.2367"* nonnull %4, %"class.crdtp::detail::PtrMaybe.2387"* nonnull %5) #13
  %84 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.2387", %"class.crdtp::detail::PtrMaybe.2387"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::protocol::Database::Error"*, %"class.blink::protocol::Database::Error"** %84, align 8
  store %"class.blink::protocol::Database::Error"* null, %"class.blink::protocol::Database::Error"** %84, align 8
  %86 = icmp eq %"class.blink::protocol::Database::Error"* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %74
  %88 = bitcast %"class.blink::protocol::Database::Error"* %85 to void (%"class.blink::protocol::Database::Error"*)***
  %89 = load void (%"class.blink::protocol::Database::Error"*)**, void (%"class.blink::protocol::Database::Error"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::protocol::Database::Error"*)*, void (%"class.blink::protocol::Database::Error"*)** %89, i64 2
  %91 = load void (%"class.blink::protocol::Database::Error"*)*, void (%"class.blink::protocol::Database::Error"*)** %90, align 8
  call void %91(%"class.blink::protocol::Database::Error"* nonnull %85) #13
  br label %92

92:                                               ; preds = %74, %87
  %93 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.2367", %"class.crdtp::detail::PtrMaybe.2367"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = load %"class.std::__1::vector.2371"*, %"class.std::__1::vector.2371"** %93, align 8
  store %"class.std::__1::vector.2371"* null, %"class.std::__1::vector.2371"** %93, align 8
  %95 = icmp eq %"class.std::__1::vector.2371"* %94, null
  br i1 %95, label %125, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.std::__1::vector.2371", %"class.std::__1::vector.2371"* %94, i64 0, i32 0, i32 0
  %98 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %97, align 8
  %99 = icmp eq %"class.std::__1::unique_ptr.2373"* %98, null
  br i1 %99, label %123, label %100

100:                                              ; preds = %96
  %101 = bitcast %"class.std::__1::unique_ptr.2373"* %98 to i8*
  %102 = getelementptr inbounds %"class.std::__1::vector.2371", %"class.std::__1::vector.2371"* %94, i64 0, i32 0, i32 1
  %103 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %102, align 8
  %104 = icmp eq %"class.std::__1::unique_ptr.2373"* %103, %98
  br i1 %104, label %121, label %105

105:                                              ; preds = %100, %116
  %106 = phi %"class.std::__1::unique_ptr.2373"* [ %107, %116 ], [ %103, %100 ]
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %106, i64 -1
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %108, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %108, align 8
  %110 = icmp eq %"class.blink::protocol::Value"* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %105
  %112 = bitcast %"class.blink::protocol::Value"* %109 to void (%"class.blink::protocol::Value"*)***
  %113 = load void (%"class.blink::protocol::Value"*)**, void (%"class.blink::protocol::Value"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %113, i64 2
  %115 = load void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %114, align 8
  call void %115(%"class.blink::protocol::Value"* nonnull %109) #13
  br label %116

116:                                              ; preds = %111, %105
  %117 = icmp eq %"class.std::__1::unique_ptr.2373"* %107, %98
  br i1 %117, label %118, label %105

118:                                              ; preds = %116
  %119 = bitcast %"class.std::__1::vector.2371"* %94 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %100
  %122 = phi i8* [ %120, %118 ], [ %101, %100 ]
  store %"class.std::__1::unique_ptr.2373"* %98, %"class.std::__1::unique_ptr.2373"** %102, align 8
  call void @_ZdlPv(i8* %122) #15
  br label %123

123:                                              ; preds = %121, %96
  %124 = bitcast %"class.std::__1::vector.2371"* %94 to i8*
  call void @_ZdlPv(i8* %124) #15
  br label %125

125:                                              ; preds = %92, %123
  %126 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.std::__1::vector.2205"*, %"class.std::__1::vector.2205"** %126, align 8
  store %"class.std::__1::vector.2205"* null, %"class.std::__1::vector.2205"** %126, align 8
  %128 = icmp eq %"class.std::__1::vector.2205"* %127, null
  br i1 %128, label %166, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.std::__1::vector.2205", %"class.std::__1::vector.2205"* %127, i64 0, i32 0, i32 0
  %131 = load %"class.WTF::String"*, %"class.WTF::String"** %130, align 8
  %132 = icmp eq %"class.WTF::String"* %131, null
  br i1 %132, label %164, label %133

133:                                              ; preds = %129
  %134 = bitcast %"class.WTF::String"* %131 to i8*
  %135 = getelementptr inbounds %"class.std::__1::vector.2205", %"class.std::__1::vector.2205"* %127, i64 0, i32 0, i32 1
  %136 = load %"class.WTF::String"*, %"class.WTF::String"** %135, align 8
  %137 = icmp eq %"class.WTF::String"* %136, %131
  br i1 %137, label %162, label %138

138:                                              ; preds = %133, %157
  %139 = phi %"class.WTF::String"* [ %140, %157 ], [ %136, %133 ]
  %140 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %139, i64 -1
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #13
  br label %157

157:                                              ; preds = %156, %153, %138
  %158 = icmp eq %"class.WTF::String"* %140, %131
  br i1 %158, label %159, label %138

159:                                              ; preds = %157
  %160 = bitcast %"class.std::__1::vector.2205"* %127 to i8**
  %161 = load i8*, i8** %160, align 8
  br label %162

162:                                              ; preds = %159, %133
  %163 = phi i8* [ %161, %159 ], [ %134, %133 ]
  store %"class.WTF::String"* %131, %"class.WTF::String"** %135, align 8
  call void @_ZdlPv(i8* %163) #15
  br label %164

164:                                              ; preds = %162, %129
  %165 = bitcast %"class.std::__1::vector.2205"* %127 to i8*
  call void @_ZdlPv(i8* %165) #15
  br label %166

166:                                              ; preds = %164, %125
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN5blink25InspectorDatabaseResourceC1EPNS_8DatabaseERKN3WTF6StringES6_S6_(%"class.blink::InspectorDatabaseResource"*, %"class.blink::Database"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_25InspectorDatabaseResourceEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_25InspectorDatabaseResourceEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_25InspectorDatabaseResourceEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_25InspectorDatabaseResourceEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25InspectorDatabaseResourceEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_25InspectorDatabaseResourceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorDatabaseResource"*
  tail call void @_ZNK5blink25InspectorDatabaseResource5TraceEPNS_7VisitorE(%"class.blink::InspectorDatabaseResource"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_25InspectorDatabaseResourceEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::InspectorDatabaseResource"*
  tail call void @_ZN5blink25InspectorDatabaseResourceD2Ev(%"class.blink::InspectorDatabaseResource"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_25InspectorDatabaseResourceEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink25InspectorDatabaseResource5TraceEPNS_7VisitorE(%"class.blink::InspectorDatabaseResource"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25InspectorDatabaseResourceD2Ev(%"class.blink::InspectorDatabaseResource"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorDatabaseResource", %"class.blink::InspectorDatabaseResource"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #13
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::InspectorDatabaseResource", %"class.blink::InspectorDatabaseResource"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #13
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::InspectorDatabaseResource", %"class.blink::InspectorDatabaseResource"* %0, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #13
  br label %52

52:                                               ; preds = %35, %48, %51
  %53 = getelementptr inbounds %"class.blink::InspectorDatabaseResource", %"class.blink::InspectorDatabaseResource"* %0, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #13
  br label %69

69:                                               ; preds = %52, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.240"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.238"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::InspectorDatabaseResource"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.240"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.240"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.238"* %0, %"struct.WTF::KeyValuePair.240"* null)
  %9 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.240"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #13
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.240"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.240"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.240"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #13
  br i1 %57, label %157, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.240"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.240"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.240"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #13
  %72 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.240"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = bitcast %"class.WTF::String"* %1 to i64*
  %81 = load i64, i64* %80, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %82 = bitcast %"struct.WTF::KeyValuePair.240"* %79 to i64*
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %79, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  store i64 %81, i64* %82, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #13
  br label %99

99:                                               ; preds = %98, %95, %78
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %79, i64 0, i32 1
  %101 = load %"class.blink::InspectorDatabaseResource"*, %"class.blink::InspectorDatabaseResource"** %2, align 8
  %102 = ptrtoint %"class.blink::InspectorDatabaseResource"* %101 to i64
  %103 = bitcast %"class.blink::Member.241"* %100 to i64*
  store atomic i64 %102, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %99
  %107 = bitcast %"class.blink::InspectorDatabaseResource"* %101 to i8*
  %108 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %107) #13
  br label %109

109:                                              ; preds = %99, %106
  %110 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %145, label %112

112:                                              ; preds = %109
  %113 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %114 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %113, i64 0, i32 1
  %115 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %114) #13
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %119, !prof !2

117:                                              ; preds = %112
  %118 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %114, i8* %118) #13
  br label %119

119:                                              ; preds = %117, %112
  %120 = phi i8* [ %118, %117 ], [ %115, %112 ]
  %121 = bitcast i8* %120 to %"class.blink::ThreadState"**
  %122 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %122, i64 0, i32 9
  %124 = load i8, i8* %123, align 1, !range !15
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %145, label %126

126:                                              ; preds = %119
  %127 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %122, i64 0, i32 13
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %127, align 8
  %130 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %122, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %131 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %130, align 8
  %132 = load atomic i64, i64* %103 monotonic, align 8
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %142, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %131, i64 0, i32 0, i32 0
  %136 = inttoptr i64 %132 to i8*
  %137 = bitcast %"class.blink::MarkingVisitor"* %131 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %138 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %138, i64 5
  %140 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %139, align 8
  tail call void %140(%"class.blink::Visitor"* %135, i8* nonnull %136, i8* %136, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25InspectorDatabaseResourceEE5TraceEPNS_7VisitorEPKv) #13
  %141 = load i64, i64* %127, align 8
  br label %142

142:                                              ; preds = %134, %126
  %143 = phi i64 [ %129, %126 ], [ %141, %134 ]
  %144 = add i64 %143, -1
  store i64 %144, i64* %127, align 8
  br label %145

145:                                              ; preds = %109, %119, %142
  %146 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 2
  %147 = load i32, i32* %146, align 4
  %148 = add i32 %147, 1
  store i32 %148, i32* %146, align 4
  %149 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 3
  %150 = load i32, i32* %149, align 8
  %151 = add i32 %150, %148
  %152 = shl i32 %151, 1
  %153 = load i32, i32* %12, align 8
  %154 = icmp ult i32 %152, %153
  br i1 %154, label %157, label %155

155:                                              ; preds = %145
  %156 = tail call %"struct.WTF::KeyValuePair.240"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.238"* %0, %"struct.WTF::KeyValuePair.240"* %79)
  br label %157

157:                                              ; preds = %54, %145, %155
  %158 = phi i8 [ 1, %145 ], [ 1, %155 ], [ 0, %54 ]
  %159 = phi %"struct.WTF::KeyValuePair.240"* [ %79, %145 ], [ %156, %155 ], [ %47, %54 ]
  %160 = insertvalue { %"struct.WTF::KeyValuePair.240"*, i8 } undef, %"struct.WTF::KeyValuePair.240"* %159, 0
  %161 = insertvalue { %"struct.WTF::KeyValuePair.240"*, i8 } %160, i8 %158, 1
  ret { %"struct.WTF::KeyValuePair.240"*, i8 } %161
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.240"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.238"*, %"struct.WTF::KeyValuePair.240"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #13
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %23, i8* %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #13
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.240"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.238"* %0, i32 %35, %"struct.WTF::KeyValuePair.240"* %1, i8* nonnull dereferenceable(1) %4) #13
  %37 = load i8, i8* %4, align 1, !range !15
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #13
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.240"*
  %44 = call %"struct.WTF::KeyValuePair.240"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.238"* %0, %"struct.WTF::KeyValuePair.240"* %43, i32 %40, %"struct.WTF::KeyValuePair.240"* %1) #13
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.240"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.240"* %46
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.240"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.238"*, i32, %"struct.WTF::KeyValuePair.240"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !15
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0)) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.240"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.240"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #13
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #13
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.240"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.240"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.238"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #13
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.240"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.240"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.238"* %0, %"struct.WTF::KeyValuePair.240"* %42, i32 %1, %"struct.WTF::KeyValuePair.240"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.240"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.240"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.240"* %64, %"struct.WTF::KeyValuePair.240"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %62, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.240"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.240"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %64, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #13
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.240"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member.241"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.241"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %96, i64 %59, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #13
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.240"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.240"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.240"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.238"*, %"struct.WTF::KeyValuePair.240"*, i32, %"struct.WTF::KeyValuePair.240"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.238", align 8
  %6 = bitcast %"class.WTF::HashTable.238"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.238"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.240"* %1, %"struct.WTF::KeyValuePair.240"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.240"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.240"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %19, align 8
  br label %88

21:                                               ; preds = %131
  %22 = bitcast %"class.WTF::HashTable.238"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %132, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.240"* [ null, %15 ], [ %134, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.238"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #13
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.238"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.238"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #13
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.240"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %82, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %79, %54
  %57 = phi i64 [ 0, %54 ], [ %80, %79 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %50, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  switch i64 %61, label %62 [
    i64 -1, label %79
    i64 0, label %79
  ]

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #13
  br label %75

75:                                               ; preds = %74, %71
  %76 = bitcast %"struct.WTF::KeyValuePair.240"* %58 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %50, i64 %57, i32 1
  %78 = bitcast %"class.blink::Member.241"* %77 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %75, %56, %56
  %80 = add nuw nsw i64 %57, 1
  %81 = icmp eq i64 %80, %55
  br i1 %81, label %82, label %56

82:                                               ; preds = %79, %52
  %83 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %83) #13
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %84

84:                                               ; preds = %49, %82
  %85 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, -2147483648
  store i32 %87, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.240"* %29

88:                                               ; preds = %18, %131
  %89 = phi i32 [ %13, %18 ], [ %132, %131 ]
  %90 = phi %"struct.WTF::KeyValuePair.240"* [ %20, %18 ], [ %133, %131 ]
  %91 = phi %"struct.WTF::KeyValuePair.240"* [ null, %18 ], [ %134, %131 ]
  %92 = phi i32 [ 0, %18 ], [ %135, %131 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %90, i64 %93
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"struct.WTF::KeyValuePair.240"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %98 [
    i64 -1, label %131
    i64 0, label %131
  ]

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %94, i64 0, i32 0
  %100 = call { %"struct.WTF::KeyValuePair.240"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.238"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %99) #13
  %101 = extractvalue { %"struct.WTF::KeyValuePair.240"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #13
  br label %118

118:                                              ; preds = %98, %114, %117
  %119 = load i64, i64* %96, align 8
  %120 = bitcast %"struct.WTF::KeyValuePair.240"* %101 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %101, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %90, i64 %93, i32 1
  %123 = bitcast %"class.blink::Member.241"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member.241"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %19, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %126, i64 %93
  %128 = icmp eq %"struct.WTF::KeyValuePair.240"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair.240"* %101, %"struct.WTF::KeyValuePair.240"* %91
  %130 = load i32, i32* %12, align 8
  br label %131

131:                                              ; preds = %88, %88, %118
  %132 = phi i32 [ %89, %88 ], [ %130, %118 ], [ %89, %88 ]
  %133 = phi %"struct.WTF::KeyValuePair.240"* [ %90, %88 ], [ %126, %118 ], [ %90, %88 ]
  %134 = phi %"struct.WTF::KeyValuePair.240"* [ %91, %88 ], [ %129, %118 ], [ %91, %88 ]
  %135 = add i32 %92, 1
  %136 = icmp eq i32 %135, %132
  br i1 %136, label %21, label %88
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.10, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([410 x i8], [410 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #13
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #13
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.240"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %22, i64 %25, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #13
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.240"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #13
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.240"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.241"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25InspectorDatabaseResourceEE5TraceEPNS_7VisitorEPKv) #13
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.241"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25InspectorDatabaseResourceEE5TraceEPNS_7VisitorEPKv) #13
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.240"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.238"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #13
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.240"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.240"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.240"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.240"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.240"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.240"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.240"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.240"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #13
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.240"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.240"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.240"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.240"*, i8 } undef, %"struct.WTF::KeyValuePair.240"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.240"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.240"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !15
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 1, !range !15
  %6 = icmp eq i8 %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store i8 %3, i8* %4, align 1
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector.1833"* null) #13
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #13
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"* %8, %"class.WTF::String"* dereferenceable(8) %7) #13
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !15
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8* %25, i64 %28, i8* %29) #13
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorAgentState::Field"*) local_unnamed_addr #2

declare void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::WebVector.1833"*) local_unnamed_addr #2

declare %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #13
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #13
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

declare void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_22InspectorDatabaseAgentELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::InspectorDatabaseAgent"**
  %5 = load %"class.blink::InspectorDatabaseAgent"*, %"class.blink::InspectorDatabaseAgent"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #13
  %7 = icmp eq %"class.blink::InspectorDatabaseAgent"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::InspectorDatabaseAgent"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22InspectorDatabaseAgentEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #13
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22InspectorDatabaseAgentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 56
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4PageEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 64
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = bitcast i8* %14 to i8**
  %18 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %19 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, i64 11
  %21 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %0, i8** %17) #13
  %22 = icmp eq i64 %16, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %0, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_25InspectorDatabaseResourceEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #13
  br label %29

29:                                               ; preds = %23, %13
  %30 = getelementptr inbounds i8, i8* %1, i64 16
  %31 = bitcast i8* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %32 to i8*
  %36 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %0, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #13
  br label %40

40:                                               ; preds = %29, %34
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22InspectorDatabaseAgentEFvPNS3_8DatabaseEEJNS3_10PersistentIS4_EEEEEFvS6_EE3RunEPNS0_13BindStateBaseES6_(%"class.base::internal::BindStateBase"*, %"class.blink::Database"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %8 = bitcast void ()** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  %13 = bitcast i8* %12 to %"class.blink::InspectorDatabaseAgent"*
  %14 = and i64 %6, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %6, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.blink::InspectorDatabaseAgent"*, %"class.blink::Database"*)**
  %22 = load void (%"class.blink::InspectorDatabaseAgent"*, %"class.blink::Database"*)*, void (%"class.blink::InspectorDatabaseAgent"*, %"class.blink::Database"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %6 to void (%"class.blink::InspectorDatabaseAgent"*, %"class.blink::Database"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.blink::InspectorDatabaseAgent"*, %"class.blink::Database"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.blink::InspectorDatabaseAgent"* %13, %"class.blink::Database"* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink22InspectorDatabaseAgentEFvPNS2_8DatabaseEEJNS2_10PersistentIS3_EEEEC2IRS7_JS9_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::Persistent.2200"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink22InspectorDatabaseAgentEFvPNS2_8DatabaseEEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #13
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::Persistent.2200"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #13
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #13
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !2

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #13
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.2201"**
  store %"class.blink::PersistentBase.2201"* %11, %"class.blink::PersistentBase.2201"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_22InspectorDatabaseAgentELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink22InspectorDatabaseAgentEFvPNS2_8DatabaseEEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #13
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #13
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

declare void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext, %"class.blink::WebVector.1833"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14SQLTransaction17OnProcessCallbackEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14SQLTransaction17OnProcessCallbackEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14SQLTransaction17OnProcessCallbackEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14SQLTransaction17OnProcessCallbackEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SQLTransaction17OnProcessCallbackEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14SQLTransaction17OnProcessCallbackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SQLTransaction::OnProcessCallback"*
  %4 = bitcast i8* %1 to void (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::Visitor"*)**, void (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SQLTransaction::OnProcessCallback"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14SQLTransaction17OnProcessCallbackEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SQLTransaction::OnProcessCallback"*
  %3 = bitcast i8* %0 to void (%"class.blink::SQLTransaction::OnProcessCallback"*)***
  %4 = load void (%"class.blink::SQLTransaction::OnProcessCallback"*)**, void (%"class.blink::SQLTransaction::OnProcessCallback"*)*** %3, align 8
  %5 = load void (%"class.blink::SQLTransaction::OnProcessCallback"*)*, void (%"class.blink::SQLTransaction::OnProcessCallback"*)** %4, align 8
  tail call void %5(%"class.blink::SQLTransaction::OnProcessCallback"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14SQLTransaction17OnProcessCallbackEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119TransactionCallbackD2Ev(%"class.blink::(anonymous namespace)::TransactionCallback"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::TransactionCallback", %"class.blink::(anonymous namespace)::TransactionCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_119TransactionCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::TransactionCallback", %"class.blink::(anonymous namespace)::TransactionCallback"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"*, %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"** %3, align 8
  %5 = icmp eq %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::RefCounted.2223", %"class.base::RefCounted.2223"* %12, i64 2
  %14 = bitcast %"class.base::RefCounted.2223"* %13 to %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"**
  %15 = load %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %14, align 8
  store %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* null, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %14, align 8
  %16 = icmp eq %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %15 to void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)***
  %19 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)**, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %19, i64 4
  %21 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %20, align 8
  tail call void %21(%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* nonnull %15) #13
  br label %22

22:                                               ; preds = %17, %11
  %23 = bitcast %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4 to i8*
  tail call void @free(i8* %23) #13
  br label %24

24:                                               ; preds = %1, %6, %22
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::TransactionCallback", %"class.blink::(anonymous namespace)::TransactionCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #13
  br label %41

41:                                               ; preds = %24, %37, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119TransactionCallbackD0Ev(%"class.blink::(anonymous namespace)::TransactionCallback"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::TransactionCallback", %"class.blink::(anonymous namespace)::TransactionCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_119TransactionCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::TransactionCallback", %"class.blink::(anonymous namespace)::TransactionCallback"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"*, %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"** %3, align 8
  %5 = icmp eq %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::RefCounted.2223", %"class.base::RefCounted.2223"* %12, i64 2
  %14 = bitcast %"class.base::RefCounted.2223"* %13 to %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"**
  %15 = load %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %14, align 8
  store %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* null, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %14, align 8
  %16 = icmp eq %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %15 to void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)***
  %19 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)**, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %19, i64 4
  %21 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %20, align 8
  tail call void %21(%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* nonnull %15) #13
  br label %22

22:                                               ; preds = %17, %11
  %23 = bitcast %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4 to i8*
  tail call void @free(i8* %23) #13
  br label %24

24:                                               ; preds = %22, %6, %1
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::TransactionCallback", %"class.blink::(anonymous namespace)::TransactionCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #13
  br label %41

41:                                               ; preds = %24, %37, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14SQLTransaction17OnProcessCallback5TraceEPNS_7VisitorE(%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_119TransactionCallback9OnProcessEPNS_14SQLTransactionE(%"class.blink::(anonymous namespace)::TransactionCallback"*, %"class.blink::SQLTransaction"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.481", align 8
  %4 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %5 = bitcast %"class.WTF::Vector.481"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.WTF::Vector.481", %"class.WTF::Vector.481"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::Vector.481", %"class.WTF::Vector.481"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #13
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::TransactionCallback", %"class.blink::(anonymous namespace)::TransactionCallback"* %0, i64 0, i32 1
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12SQLStatement17OnSuccessCallbackEEEPhm(i64 16) #13
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::TransactionCallback", %"class.blink::(anonymous namespace)::TransactionCallback"* %0, i64 0, i32 2, i32 0
  %11 = load %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"*, %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"** %10, align 8
  %12 = icmp eq %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %11, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %14) #13
  br label %15

15:                                               ; preds = %2, %13
  %16 = ptrtoint %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %11 to i64
  %17 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_117StatementCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 8
  %19 = bitcast i8* %18 to i64*
  store i64 %16, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 -4
  %21 = bitcast i8* %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = or i16 %22, 1
  store atomic i16 %23, i16* %21 release, align 2
  %24 = bitcast i8* %9 to %"class.blink::SQLStatement::OnSuccessCallback"*
  %25 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12SQLStatement15OnErrorCallbackEEEPhm(i64 16) #13
  %26 = load %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"*, %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"** %10, align 8
  %27 = icmp eq %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %29) #13
  br label %30

30:                                               ; preds = %15, %28
  %31 = ptrtoint %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %26 to i64
  %32 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122StatementErrorCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds i8, i8* %25, i64 8
  %34 = bitcast i8* %33 to i64*
  store i64 %31, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %25, i64 -4
  %36 = bitcast i8* %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = or i16 %37, 1
  store atomic i16 %38, i16* %36 release, align 2
  %39 = bitcast i8* %25 to %"class.blink::SQLStatement::OnErrorCallback"*
  %40 = bitcast %"class.blink::DummyExceptionStateForTesting"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %42, align 8
  %43 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %43, align 2
  %44 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 2
  %45 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 5, i32 0, i32 0
  %46 = bitcast %"class.WTF::StringImpl"** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #13
  %47 = bitcast i8** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 36, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %48 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0
  call void @_ZN5blink14SQLTransaction10ExecuteSQLERKN3WTF6StringERKNS1_6VectorINS_8SQLValueELj0ENS1_18PartitionAllocatorEEEPNS_12SQLStatement17OnSuccessCallbackEPNSB_15OnErrorCallbackERNS_14ExceptionStateE(%"class.blink::SQLTransaction"* %1, %"class.WTF::String"* dereferenceable(8) %8, %"class.WTF::Vector.481"* nonnull dereferenceable(16) %3, %"class.blink::SQLStatement::OnSuccessCallback"* %24, %"class.blink::SQLStatement::OnErrorCallback"* %39, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %48) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %49 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %30
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %48) #13
  br label %53

53:                                               ; preds = %30, %52
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %54 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = icmp eq i64* %55, null
  br i1 %56, label %67, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 3
  %59 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %58, align 8
  %60 = bitcast %"class.v8::Isolate"* %59 to %"class.v8::internal::Isolate"*
  %61 = load i64, i64* %55, align 8
  %62 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %60, i64 %61) #13
  %63 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %59) #13
  br i1 %63, label %67, label %64

64:                                               ; preds = %57
  %65 = bitcast i64* %62 to %"class.v8::Value"*
  %66 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %59, %"class.v8::Value"* %65) #13
  br label %67

67:                                               ; preds = %64, %57, %53
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #13
  br label %83

83:                                               ; preds = %67, %79, %82
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %40) #13
  %84 = load %"class.blink::SQLValue"*, %"class.blink::SQLValue"** %6, align 8
  %85 = icmp eq %"class.blink::SQLValue"* %84, null
  br i1 %85, label %119, label %86, !prof !3

86:                                               ; preds = %83
  %87 = bitcast %"class.blink::SQLValue"* %84 to i8*
  %88 = load i32, i32* %7, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %117, label %90, !prof !2

90:                                               ; preds = %86
  %91 = zext i32 %88 to i64
  %92 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %84, i64 %91
  br label %93

93:                                               ; preds = %111, %90
  %94 = phi %"class.blink::SQLValue"* [ %112, %111 ], [ %84, %90 ]
  %95 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %94, i64 0, i32 2, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #13
  br label %111

111:                                              ; preds = %110, %107, %93
  %112 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %94, i64 1
  %113 = icmp eq %"class.blink::SQLValue"* %112, %92
  br i1 %113, label %114, label %93

114:                                              ; preds = %111
  store i32 0, i32* %7, align 4
  %115 = bitcast %"class.WTF::Vector.481"* %3 to i8**
  %116 = load i8*, i8** %115, align 8
  br label %117

117:                                              ; preds = %114, %86
  %118 = phi i8* [ %116, %114 ], [ %87, %86 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %118) #13
  store %"class.blink::SQLValue"* null, %"class.blink::SQLValue"** %6, align 8
  br label %119

119:                                              ; preds = %83, %117
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #13
  ret i1 true
}

declare void @_ZN5blink14SQLTransaction10ExecuteSQLERKN3WTF6StringERKNS1_6VectorINS_8SQLValueELj0ENS1_18PartitionAllocatorEEEPNS_12SQLStatement17OnSuccessCallbackEPNSB_15OnErrorCallbackERNS_14ExceptionStateE(%"class.blink::SQLTransaction"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.481"* dereferenceable(16), %"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12SQLStatement17OnSuccessCallbackEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12SQLStatement17OnSuccessCallbackEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12SQLStatement17OnSuccessCallbackEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12SQLStatement17OnSuccessCallbackEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12SQLStatement17OnSuccessCallbackEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12SQLStatement17OnSuccessCallbackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SQLStatement::OnSuccessCallback"*
  %4 = bitcast i8* %1 to void (%"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::Visitor"*)**, void (%"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SQLStatement::OnSuccessCallback"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_12SQLStatement17OnSuccessCallbackEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SQLStatement::OnSuccessCallback"*
  %3 = bitcast i8* %0 to void (%"class.blink::SQLStatement::OnSuccessCallback"*)***
  %4 = load void (%"class.blink::SQLStatement::OnSuccessCallback"*)**, void (%"class.blink::SQLStatement::OnSuccessCallback"*)*** %3, align 8
  %5 = load void (%"class.blink::SQLStatement::OnSuccessCallback"*)*, void (%"class.blink::SQLStatement::OnSuccessCallback"*)** %4, align 8
  tail call void %5(%"class.blink::SQLStatement::OnSuccessCallback"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12SQLStatement17OnSuccessCallbackEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117StatementCallbackD2Ev(%"class.blink::(anonymous namespace)::StatementCallback"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::StatementCallback", %"class.blink::(anonymous namespace)::StatementCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_117StatementCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::StatementCallback", %"class.blink::(anonymous namespace)::StatementCallback"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"*, %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"** %3, align 8
  %5 = icmp eq %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::RefCounted.2223", %"class.base::RefCounted.2223"* %12, i64 2
  %14 = bitcast %"class.base::RefCounted.2223"* %13 to %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"**
  %15 = load %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %14, align 8
  store %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* null, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %14, align 8
  %16 = icmp eq %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %15 to void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)***
  %19 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)**, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %19, i64 4
  %21 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %20, align 8
  tail call void %21(%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* nonnull %15) #13
  br label %22

22:                                               ; preds = %17, %11
  %23 = bitcast %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4 to i8*
  tail call void @free(i8* %23) #13
  br label %24

24:                                               ; preds = %1, %6, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117StatementCallbackD0Ev(%"class.blink::(anonymous namespace)::StatementCallback"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::StatementCallback", %"class.blink::(anonymous namespace)::StatementCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_117StatementCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::StatementCallback", %"class.blink::(anonymous namespace)::StatementCallback"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"*, %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"** %3, align 8
  %5 = icmp eq %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::RefCounted.2223", %"class.base::RefCounted.2223"* %12, i64 2
  %14 = bitcast %"class.base::RefCounted.2223"* %13 to %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"**
  %15 = load %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %14, align 8
  store %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* null, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %14, align 8
  %16 = icmp eq %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %15 to void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)***
  %19 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)**, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %19, i64 4
  %21 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %20, align 8
  tail call void %21(%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* nonnull %15) #13
  br label %22

22:                                               ; preds = %17, %11
  %23 = bitcast %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4 to i8*
  tail call void @free(i8* %23) #13
  br label %24

24:                                               ; preds = %1, %6, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12SQLStatement17OnSuccessCallback5TraceEPNS_7VisitorE(%"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_117StatementCallback9OnSuccessEPNS_14SQLTransactionEPNS_12SQLResultSetE(%"class.blink::(anonymous namespace)::StatementCallback"* nocapture readonly, %"class.blink::SQLTransaction"* nocapture readnone, %"class.blink::SQLResultSet"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.2412", align 8
  %5 = alloca %"class.std::__1::unique_ptr.2418", align 8
  %6 = alloca %"class.std::__1::unique_ptr.2373", align 8
  %7 = alloca %"class.crdtp::detail::PtrMaybe", align 8
  %8 = alloca %"class.crdtp::detail::PtrMaybe.2367", align 8
  %9 = alloca %"class.crdtp::detail::PtrMaybe.2387", align 8
  %10 = tail call %"class.blink::SQLResultSetRowList"* @_ZNK5blink12SQLResultSet4rowsEv(%"class.blink::SQLResultSet"* %2) #13
  %11 = getelementptr inbounds %"class.blink::SQLResultSetRowList", %"class.blink::SQLResultSetRowList"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SQLResultSetRowList", %"class.blink::SQLResultSetRowList"* %10, i64 0, i32 1, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  %17 = tail call i8* @_Znwm(i64 24) #15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #13
  %18 = icmp eq i32 %14, 0
  br i1 %18, label %60, label %19

19:                                               ; preds = %3
  %20 = shl nuw nsw i64 %15, 3
  %21 = tail call i8* @_Znwm(i64 %20) #15
  %22 = bitcast i8* %21 to %"class.WTF::String"*
  %23 = getelementptr inbounds i8, i8* %17, i64 8
  %24 = bitcast i8* %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast i8* %17 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 %15
  %27 = getelementptr inbounds i8, i8* %17, i64 16
  %28 = bitcast i8* %27 to %"class.WTF::String"**
  store %"class.WTF::String"* %26, %"class.WTF::String"** %28, align 8
  %29 = bitcast i8* %23 to i64*
  br label %30

30:                                               ; preds = %19, %54
  %31 = phi %"class.WTF::String"* [ %56, %54 ], [ %22, %19 ]
  %32 = phi %"class.WTF::String"* [ %55, %54 ], [ %12, %19 ]
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %35, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #13
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %42
  tail call void @llvm.trap() #13
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %30
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 1
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 1
  %57 = icmp eq %"class.WTF::String"* %55, %16
  br i1 %57, label %58, label %30

58:                                               ; preds = %54
  %59 = ptrtoint %"class.WTF::String"* %56 to i64
  store i64 %59, i64* %29, align 8
  br label %60

60:                                               ; preds = %3, %58
  %61 = ptrtoint i8* %17 to i64
  %62 = tail call i8* @_Znwm(i64 24) #15
  %63 = bitcast i8* %62 to %"class.std::__1::vector.2371"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 24, i1 false) #13
  %64 = ptrtoint i8* %62 to i64
  %65 = getelementptr inbounds %"class.blink::SQLResultSetRowList", %"class.blink::SQLResultSetRowList"* %10, i64 0, i32 2
  %66 = getelementptr inbounds %"class.blink::SQLResultSetRowList", %"class.blink::SQLResultSetRowList"* %10, i64 0, i32 2, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %60
  %70 = bitcast %"class.std::__1::unique_ptr.2373"* %6 to i8*
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %6, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.2373"* %6 to i8**
  %73 = getelementptr inbounds i8, i8* %62, i64 8
  %74 = bitcast i8* %73 to %"class.std::__1::unique_ptr.2373"**
  %75 = getelementptr inbounds i8, i8* %62, i64 16
  %76 = bitcast i8* %75 to %"class.std::__1::unique_ptr.2373"**
  %77 = bitcast i8* %73 to i64*
  %78 = bitcast %"class.std::__1::unique_ptr.2418"* %5 to i8*
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.2418", %"class.std::__1::unique_ptr.2418"* %5, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.std::__1::unique_ptr.2418"* %5 to i8**
  %81 = bitcast %"class.std::__1::unique_ptr.2412"* %4 to i8*
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.2412", %"class.std::__1::unique_ptr.2412"* %4, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr.2412"* %4 to i8**
  br label %178

84:                                               ; preds = %290, %60
  %85 = getelementptr inbounds %"class.blink::(anonymous namespace)::StatementCallback", %"class.blink::(anonymous namespace)::StatementCallback"* %0, i64 0, i32 1, i32 0
  %86 = load %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"*, %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %86, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %87, align 8
  %89 = bitcast %"class.crdtp::detail::PtrMaybe"* %7 to i64*
  store i64 %61, i64* %89, align 8
  %90 = bitcast %"class.crdtp::detail::PtrMaybe.2367"* %8 to i64*
  store i64 %64, i64* %90, align 8
  %91 = bitcast %"class.crdtp::detail::PtrMaybe.2387"* %9 to i64*
  store i64 0, i64* %91, align 8
  %92 = bitcast %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %88 to void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::detail::PtrMaybe"*, %"class.crdtp::detail::PtrMaybe.2367"*, %"class.crdtp::detail::PtrMaybe.2387"*)***
  %93 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::detail::PtrMaybe"*, %"class.crdtp::detail::PtrMaybe.2367"*, %"class.crdtp::detail::PtrMaybe.2387"*)**, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::detail::PtrMaybe"*, %"class.crdtp::detail::PtrMaybe.2367"*, %"class.crdtp::detail::PtrMaybe.2387"*)*** %92, align 8
  %94 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::detail::PtrMaybe"*, %"class.crdtp::detail::PtrMaybe.2367"*, %"class.crdtp::detail::PtrMaybe.2387"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.crdtp::detail::PtrMaybe"*, %"class.crdtp::detail::PtrMaybe.2367"*, %"class.crdtp::detail::PtrMaybe.2387"*)** %93, align 8
  call void %94(%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %88, %"class.crdtp::detail::PtrMaybe"* nonnull %7, %"class.crdtp::detail::PtrMaybe.2367"* nonnull %8, %"class.crdtp::detail::PtrMaybe.2387"* nonnull %9) #13
  %95 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.2387", %"class.crdtp::detail::PtrMaybe.2387"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::protocol::Database::Error"*, %"class.blink::protocol::Database::Error"** %95, align 8
  store %"class.blink::protocol::Database::Error"* null, %"class.blink::protocol::Database::Error"** %95, align 8
  %97 = icmp eq %"class.blink::protocol::Database::Error"* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %84
  %99 = bitcast %"class.blink::protocol::Database::Error"* %96 to void (%"class.blink::protocol::Database::Error"*)***
  %100 = load void (%"class.blink::protocol::Database::Error"*)**, void (%"class.blink::protocol::Database::Error"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.blink::protocol::Database::Error"*)*, void (%"class.blink::protocol::Database::Error"*)** %100, i64 2
  %102 = load void (%"class.blink::protocol::Database::Error"*)*, void (%"class.blink::protocol::Database::Error"*)** %101, align 8
  call void %102(%"class.blink::protocol::Database::Error"* nonnull %96) #13
  br label %103

103:                                              ; preds = %84, %98
  %104 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.2367", %"class.crdtp::detail::PtrMaybe.2367"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"class.std::__1::vector.2371"*, %"class.std::__1::vector.2371"** %104, align 8
  store %"class.std::__1::vector.2371"* null, %"class.std::__1::vector.2371"** %104, align 8
  %106 = icmp eq %"class.std::__1::vector.2371"* %105, null
  br i1 %106, label %136, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.std::__1::vector.2371", %"class.std::__1::vector.2371"* %105, i64 0, i32 0, i32 0
  %109 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %108, align 8
  %110 = icmp eq %"class.std::__1::unique_ptr.2373"* %109, null
  br i1 %110, label %134, label %111

111:                                              ; preds = %107
  %112 = bitcast %"class.std::__1::unique_ptr.2373"* %109 to i8*
  %113 = getelementptr inbounds %"class.std::__1::vector.2371", %"class.std::__1::vector.2371"* %105, i64 0, i32 0, i32 1
  %114 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %113, align 8
  %115 = icmp eq %"class.std::__1::unique_ptr.2373"* %114, %109
  br i1 %115, label %132, label %116

116:                                              ; preds = %111, %127
  %117 = phi %"class.std::__1::unique_ptr.2373"* [ %118, %127 ], [ %114, %111 ]
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %117, i64 -1
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %118, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %119, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %119, align 8
  %121 = icmp eq %"class.blink::protocol::Value"* %120, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %116
  %123 = bitcast %"class.blink::protocol::Value"* %120 to void (%"class.blink::protocol::Value"*)***
  %124 = load void (%"class.blink::protocol::Value"*)**, void (%"class.blink::protocol::Value"*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %124, i64 2
  %126 = load void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %125, align 8
  call void %126(%"class.blink::protocol::Value"* nonnull %120) #13
  br label %127

127:                                              ; preds = %122, %116
  %128 = icmp eq %"class.std::__1::unique_ptr.2373"* %118, %109
  br i1 %128, label %129, label %116

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector.2371"* %105 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %111
  %133 = phi i8* [ %131, %129 ], [ %112, %111 ]
  store %"class.std::__1::unique_ptr.2373"* %109, %"class.std::__1::unique_ptr.2373"** %113, align 8
  call void @_ZdlPv(i8* %133) #15
  br label %134

134:                                              ; preds = %132, %107
  %135 = bitcast %"class.std::__1::vector.2371"* %105 to i8*
  call void @_ZdlPv(i8* %135) #15
  br label %136

136:                                              ; preds = %103, %134
  %137 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %138 = load %"class.std::__1::vector.2205"*, %"class.std::__1::vector.2205"** %137, align 8
  store %"class.std::__1::vector.2205"* null, %"class.std::__1::vector.2205"** %137, align 8
  %139 = icmp eq %"class.std::__1::vector.2205"* %138, null
  br i1 %139, label %177, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.std::__1::vector.2205", %"class.std::__1::vector.2205"* %138, i64 0, i32 0, i32 0
  %142 = load %"class.WTF::String"*, %"class.WTF::String"** %141, align 8
  %143 = icmp eq %"class.WTF::String"* %142, null
  br i1 %143, label %175, label %144

144:                                              ; preds = %140
  %145 = bitcast %"class.WTF::String"* %142 to i8*
  %146 = getelementptr inbounds %"class.std::__1::vector.2205", %"class.std::__1::vector.2205"* %138, i64 0, i32 0, i32 1
  %147 = load %"class.WTF::String"*, %"class.WTF::String"** %146, align 8
  %148 = icmp eq %"class.WTF::String"* %147, %142
  br i1 %148, label %173, label %149

149:                                              ; preds = %144, %168
  %150 = phi %"class.WTF::String"* [ %151, %168 ], [ %147, %144 ]
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %150, i64 -1
  %152 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %151, i64 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #13
  br label %168

168:                                              ; preds = %167, %164, %149
  %169 = icmp eq %"class.WTF::String"* %151, %142
  br i1 %169, label %170, label %149

170:                                              ; preds = %168
  %171 = bitcast %"class.std::__1::vector.2205"* %138 to i8**
  %172 = load i8*, i8** %171, align 8
  br label %173

173:                                              ; preds = %170, %144
  %174 = phi i8* [ %172, %170 ], [ %145, %144 ]
  store %"class.WTF::String"* %142, %"class.WTF::String"** %146, align 8
  call void @_ZdlPv(i8* %174) #15
  br label %175

175:                                              ; preds = %173, %140
  %176 = bitcast %"class.std::__1::vector.2205"* %138 to i8*
  call void @_ZdlPv(i8* %176) #15
  br label %177

177:                                              ; preds = %136, %175
  ret i1 true

178:                                              ; preds = %69, %290
  %179 = phi i32 [ 0, %69 ], [ %291, %290 ]
  %180 = call dereferenceable(24) %"class.blink::SQLValue"* @_ZNK3WTF6VectorIN5blink8SQLValueELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.481"* %65, i32 %179) #13
  %181 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %180, i64 0, i32 0
  %182 = load i32, i32* %181, align 8
  switch i32 %182, label %290 [
    i32 2, label %183
    i32 1, label %241
    i32 0, label %266
  ]

183:                                              ; preds = %178
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #13
  %184 = call %"class.WTF::StringImpl"* @_ZNK5blink8SQLValue9GetStringEv(%"class.blink::SQLValue"* %180) #13
  %185 = call i8* @_Znwm(i64 24) #15
  %186 = bitcast i8* %185 to i32 (...)***
  %187 = getelementptr inbounds i8, i8* %185, i64 8
  %188 = bitcast i8* %187 to i32*
  store i32 4, i32* %188, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %186, align 8
  %189 = getelementptr inbounds i8, i8* %185, i64 16
  %190 = bitcast i8* %189 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %184, %"class.WTF::StringImpl"** %190, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %191, label %209, label %192

192:                                              ; preds = %183
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %209

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = zext i32 %199 to i33
  %201 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %200, i33 1) #13
  %202 = extractvalue { i33, i1 } %201, 1
  %203 = extractvalue { i33, i1 } %201, 0
  %204 = icmp slt i33 %203, 0
  %205 = or i1 %202, %204
  br i1 %205, label %206, label %207, !prof !2

206:                                              ; preds = %197
  call void @llvm.trap() #13
  unreachable

207:                                              ; preds = %197
  %208 = trunc i33 %203 to i32
  store i32 %208, i32* %198, align 4
  br label %209

209:                                              ; preds = %183, %192, %207
  store i8* %185, i8** %83, align 8
  %210 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %74, align 8
  %211 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %76, align 8
  %212 = icmp ult %"class.std::__1::unique_ptr.2373"* %210, %211
  br i1 %212, label %213, label %218

213:                                              ; preds = %209
  %214 = ptrtoint i8* %185 to i64
  store %"class.blink::protocol::StringValue"* null, %"class.blink::protocol::StringValue"** %82, align 8
  %215 = bitcast %"class.std::__1::unique_ptr.2373"* %210 to i64*
  store i64 %214, i64* %215, align 8
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %210, i64 1
  %217 = ptrtoint %"class.std::__1::unique_ptr.2373"* %216 to i64
  store i64 %217, i64* %77, align 8
  br label %219

218:                                              ; preds = %209
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJNS1_INS3_11StringValueENS5_ISC_EEEEEEEvDpOT_(%"class.std::__1::vector.2371"* nonnull %63, %"class.std::__1::unique_ptr.2412"* nonnull dereferenceable(8) %4) #13
  br label %219

219:                                              ; preds = %213, %218
  %220 = load %"class.blink::protocol::StringValue"*, %"class.blink::protocol::StringValue"** %82, align 8
  store %"class.blink::protocol::StringValue"* null, %"class.blink::protocol::StringValue"** %82, align 8
  %221 = icmp eq %"class.blink::protocol::StringValue"* %220, null
  br i1 %221, label %227, label %222

222:                                              ; preds = %219
  %223 = bitcast %"class.blink::protocol::StringValue"* %220 to void (%"class.blink::protocol::StringValue"*)***
  %224 = load void (%"class.blink::protocol::StringValue"*)**, void (%"class.blink::protocol::StringValue"*)*** %223, align 8
  %225 = getelementptr inbounds void (%"class.blink::protocol::StringValue"*)*, void (%"class.blink::protocol::StringValue"*)** %224, i64 2
  %226 = load void (%"class.blink::protocol::StringValue"*)*, void (%"class.blink::protocol::StringValue"*)** %225, align 8
  call void %226(%"class.blink::protocol::StringValue"* nonnull %220) #13
  br label %227

227:                                              ; preds = %219, %222
  br i1 %191, label %288, label %228

228:                                              ; preds = %227
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  br i1 %232, label %235, label %237

235:                                              ; preds = %228
  %236 = add i32 %234, -1
  store i32 %236, i32* %233, align 4
  br label %237

237:                                              ; preds = %235, %228
  %238 = phi i32 [ %236, %235 ], [ %234, %228 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %288

240:                                              ; preds = %237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #13
  br label %288

241:                                              ; preds = %178
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #13
  %242 = call double @_ZNK5blink8SQLValue6NumberEv(%"class.blink::SQLValue"* %180) #13
  %243 = call i8* @_Znwm(i64 24) #15
  %244 = bitcast i8* %243 to i32 (...)***
  %245 = getelementptr inbounds i8, i8* %243, i64 8
  %246 = bitcast i8* %245 to i32*
  store i32 3, i32* %246, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %244, align 8
  %247 = getelementptr inbounds i8, i8* %243, i64 16
  %248 = bitcast i8* %247 to double*
  store double %242, double* %248, align 8
  store i8* %243, i8** %80, align 8
  %249 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %74, align 8
  %250 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %76, align 8
  %251 = icmp ult %"class.std::__1::unique_ptr.2373"* %249, %250
  br i1 %251, label %252, label %257

252:                                              ; preds = %241
  %253 = ptrtoint i8* %243 to i64
  store %"class.blink::protocol::FundamentalValue"* null, %"class.blink::protocol::FundamentalValue"** %79, align 8
  %254 = bitcast %"class.std::__1::unique_ptr.2373"* %249 to i64*
  store i64 %253, i64* %254, align 8
  %255 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %249, i64 1
  %256 = ptrtoint %"class.std::__1::unique_ptr.2373"* %255 to i64
  store i64 %256, i64* %77, align 8
  br label %258

257:                                              ; preds = %241
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJNS1_INS3_16FundamentalValueENS5_ISC_EEEEEEEvDpOT_(%"class.std::__1::vector.2371"* nonnull %63, %"class.std::__1::unique_ptr.2418"* nonnull dereferenceable(8) %5) #13
  br label %258

258:                                              ; preds = %252, %257
  %259 = load %"class.blink::protocol::FundamentalValue"*, %"class.blink::protocol::FundamentalValue"** %79, align 8
  store %"class.blink::protocol::FundamentalValue"* null, %"class.blink::protocol::FundamentalValue"** %79, align 8
  %260 = icmp eq %"class.blink::protocol::FundamentalValue"* %259, null
  br i1 %260, label %288, label %261

261:                                              ; preds = %258
  %262 = bitcast %"class.blink::protocol::FundamentalValue"* %259 to void (%"class.blink::protocol::FundamentalValue"*)***
  %263 = load void (%"class.blink::protocol::FundamentalValue"*)**, void (%"class.blink::protocol::FundamentalValue"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::protocol::FundamentalValue"*)*, void (%"class.blink::protocol::FundamentalValue"*)** %263, i64 2
  %265 = load void (%"class.blink::protocol::FundamentalValue"*)*, void (%"class.blink::protocol::FundamentalValue"*)** %264, align 8
  call void %265(%"class.blink::protocol::FundamentalValue"* nonnull %259) #13
  br label %288

266:                                              ; preds = %178
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #13
  %267 = call i8* @_Znwm(i64 16) #15
  %268 = bitcast i8* %267 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8protocol5ValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %268, align 8
  %269 = getelementptr inbounds i8, i8* %267, i64 8
  %270 = bitcast i8* %269 to i32*
  store i32 0, i32* %270, align 8
  store i8* %267, i8** %72, align 8
  %271 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %74, align 8
  %272 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %76, align 8
  %273 = icmp ult %"class.std::__1::unique_ptr.2373"* %271, %272
  br i1 %273, label %274, label %279

274:                                              ; preds = %266
  %275 = ptrtoint i8* %267 to i64
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %71, align 8
  %276 = bitcast %"class.std::__1::unique_ptr.2373"* %271 to i64*
  store i64 %275, i64* %276, align 8
  %277 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %271, i64 1
  %278 = ptrtoint %"class.std::__1::unique_ptr.2373"* %277 to i64
  store i64 %278, i64* %77, align 8
  br label %280

279:                                              ; preds = %266
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.2371"* nonnull %63, %"class.std::__1::unique_ptr.2373"* nonnull dereferenceable(8) %6) #13
  br label %280

280:                                              ; preds = %274, %279
  %281 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %71, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %71, align 8
  %282 = icmp eq %"class.blink::protocol::Value"* %281, null
  br i1 %282, label %288, label %283

283:                                              ; preds = %280
  %284 = bitcast %"class.blink::protocol::Value"* %281 to void (%"class.blink::protocol::Value"*)***
  %285 = load void (%"class.blink::protocol::Value"*)**, void (%"class.blink::protocol::Value"*)*** %284, align 8
  %286 = getelementptr inbounds void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %285, i64 2
  %287 = load void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %286, align 8
  call void %287(%"class.blink::protocol::Value"* nonnull %281) #13
  br label %288

288:                                              ; preds = %283, %280, %261, %258, %240, %237, %227
  %289 = phi i8* [ %81, %227 ], [ %81, %237 ], [ %81, %240 ], [ %78, %258 ], [ %78, %261 ], [ %70, %280 ], [ %70, %283 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %289) #13
  br label %290

290:                                              ; preds = %288, %178
  %291 = add nuw i32 %179, 1
  %292 = load i32, i32* %66, align 4
  %293 = icmp ult i32 %291, %292
  br i1 %293, label %178, label %84
}

declare %"class.blink::SQLResultSetRowList"* @_ZNK5blink12SQLResultSet4rowsEv(%"class.blink::SQLResultSet"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink8SQLValue9GetStringEv(%"class.blink::SQLValue"*) local_unnamed_addr #2

declare double @_ZNK5blink8SQLValue6NumberEv(%"class.blink::SQLValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::SQLValue"* @_ZNK3WTF6VectorIN5blink8SQLValueELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.481"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.481", %"class.WTF::Vector.481"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.481", %"class.WTF::Vector.481"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::SQLValue"*, %"class.blink::SQLValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %24, i64 %25
  ret %"class.blink::SQLValue"* %26
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJNS1_INS3_11StringValueENS5_ISC_EEEEEEEvDpOT_(%"class.std::__1::vector.2371"*, %"class.std::__1::unique_ptr.2412"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2371", %"class.std::__1::vector.2371"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.2373"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2371"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2371"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2371", %"class.std::__1::vector.2371"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.2373"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.2373"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.2373"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.2373"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.2412", %"class.std::__1::unique_ptr.2412"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.2412"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::StringValue"* null, %"class.blink::protocol::StringValue"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.2373"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.2373"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2371", %"class.std::__1::vector.2371"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.2373"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.2373"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Value"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.2373"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.2373"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.2373"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.2373"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !16

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.2373"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.2373"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.2373"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.2373"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.2373"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.2373"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.2373"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.2373"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.2373"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.2373"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.2373"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.2373"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.2373"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.2373"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.2373"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.2373"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.2373"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.2373"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.2373"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.2373"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.2373"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.2373"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.2373"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.2373"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.2373"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.2373"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.2373"*
  %138 = icmp eq %"class.std::__1::unique_ptr.2373"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.2373"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %142, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Value"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Value"* %143 to void (%"class.blink::protocol::Value"*)***
  %147 = load void (%"class.blink::protocol::Value"*)**, void (%"class.blink::protocol::Value"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Value"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.2373"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJNS1_INS3_16FundamentalValueENS5_ISC_EEEEEEEvDpOT_(%"class.std::__1::vector.2371"*, %"class.std::__1::unique_ptr.2418"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2371", %"class.std::__1::vector.2371"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.2373"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2371"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2371"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2371", %"class.std::__1::vector.2371"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.2373"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.2373"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.2373"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.2373"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.2418", %"class.std::__1::unique_ptr.2418"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.2418"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::FundamentalValue"* null, %"class.blink::protocol::FundamentalValue"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.2373"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.2373"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2371", %"class.std::__1::vector.2371"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.2373"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.2373"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Value"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.2373"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.2373"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.2373"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.2373"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !18

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.2373"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.2373"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.2373"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.2373"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.2373"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.2373"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.2373"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.2373"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.2373"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.2373"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.2373"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.2373"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.2373"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.2373"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.2373"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.2373"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.2373"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.2373"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.2373"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.2373"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.2373"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.2373"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.2373"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.2373"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.2373"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.2373"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.2373"*
  %138 = icmp eq %"class.std::__1::unique_ptr.2373"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.2373"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %142, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Value"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Value"* %143 to void (%"class.blink::protocol::Value"*)***
  %147 = load void (%"class.blink::protocol::Value"*)**, void (%"class.blink::protocol::Value"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Value"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.2373"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.2371"*, %"class.std::__1::unique_ptr.2373"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2371", %"class.std::__1::vector.2371"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.2373"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2371"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2371"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2371", %"class.std::__1::vector.2371"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.2373"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.2373"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.2373"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.2373"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.2373"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.2373"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.2373"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2371", %"class.std::__1::vector.2371"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.2373"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.2373"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Value"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.2373"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.2373"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.2373"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.2373"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !19

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.2373"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.2373"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.2373"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.2373"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.2373"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.2373"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.2373"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.2373"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.2373"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.2373"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.2373"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.2373"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.2373"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.2373"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.2373"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.2373"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.2373"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.2373"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.2373"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.2373"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.2373"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.2373"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.2373"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.2373"*, %"class.std::__1::unique_ptr.2373"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.2373"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.2373"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.2373"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.2373"*
  %138 = icmp eq %"class.std::__1::unique_ptr.2373"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.2373"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %142, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Value"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Value"* %143 to void (%"class.blink::protocol::Value"*)***
  %147 = load void (%"class.blink::protocol::Value"*)**, void (%"class.blink::protocol::Value"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Value"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.2373"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12SQLStatement15OnErrorCallbackEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12SQLStatement15OnErrorCallbackEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12SQLStatement15OnErrorCallbackEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12SQLStatement15OnErrorCallbackEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12SQLStatement15OnErrorCallbackEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12SQLStatement15OnErrorCallbackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SQLStatement::OnErrorCallback"*
  %4 = bitcast i8* %1 to void (%"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::Visitor"*)**, void (%"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SQLStatement::OnErrorCallback"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_12SQLStatement15OnErrorCallbackEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SQLStatement::OnErrorCallback"*
  %3 = bitcast i8* %0 to void (%"class.blink::SQLStatement::OnErrorCallback"*)***
  %4 = load void (%"class.blink::SQLStatement::OnErrorCallback"*)**, void (%"class.blink::SQLStatement::OnErrorCallback"*)*** %3, align 8
  %5 = load void (%"class.blink::SQLStatement::OnErrorCallback"*)*, void (%"class.blink::SQLStatement::OnErrorCallback"*)** %4, align 8
  tail call void %5(%"class.blink::SQLStatement::OnErrorCallback"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12SQLStatement15OnErrorCallbackEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122StatementErrorCallbackD2Ev(%"class.blink::(anonymous namespace)::StatementErrorCallback"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::StatementErrorCallback", %"class.blink::(anonymous namespace)::StatementErrorCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122StatementErrorCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::StatementErrorCallback", %"class.blink::(anonymous namespace)::StatementErrorCallback"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"*, %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"** %3, align 8
  %5 = icmp eq %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::RefCounted.2223", %"class.base::RefCounted.2223"* %12, i64 2
  %14 = bitcast %"class.base::RefCounted.2223"* %13 to %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"**
  %15 = load %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %14, align 8
  store %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* null, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %14, align 8
  %16 = icmp eq %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %15 to void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)***
  %19 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)**, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %19, i64 4
  %21 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %20, align 8
  tail call void %21(%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* nonnull %15) #13
  br label %22

22:                                               ; preds = %17, %11
  %23 = bitcast %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4 to i8*
  tail call void @free(i8* %23) #13
  br label %24

24:                                               ; preds = %1, %6, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122StatementErrorCallbackD0Ev(%"class.blink::(anonymous namespace)::StatementErrorCallback"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::StatementErrorCallback", %"class.blink::(anonymous namespace)::StatementErrorCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122StatementErrorCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::StatementErrorCallback", %"class.blink::(anonymous namespace)::StatementErrorCallback"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"*, %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"** %3, align 8
  %5 = icmp eq %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper", %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::RefCounted.2223", %"class.base::RefCounted.2223"* %12, i64 2
  %14 = bitcast %"class.base::RefCounted.2223"* %13 to %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"**
  %15 = load %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %14, align 8
  store %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* null, %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"** %14, align 8
  %16 = icmp eq %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* %15 to void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)***
  %19 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)**, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %19, i64 4
  %21 = load void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)*, void (%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"*)** %20, align 8
  tail call void %21(%"class.blink::protocol::Database::Backend::ExecuteSQLCallback"* nonnull %15) #13
  br label %22

22:                                               ; preds = %17, %11
  %23 = bitcast %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %4 to i8*
  tail call void @free(i8* %23) #13
  br label %24

24:                                               ; preds = %1, %6, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12SQLStatement15OnErrorCallback5TraceEPNS_7VisitorE(%"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_122StatementErrorCallback7OnErrorEPNS_14SQLTransactionEPNS_8SQLErrorE(%"class.blink::(anonymous namespace)::StatementErrorCallback"* nocapture readonly, %"class.blink::SQLTransaction"* nocapture readnone, %"class.blink::SQLError"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::StatementErrorCallback", %"class.blink::(anonymous namespace)::StatementErrorCallback"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"*, %"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"** %4, align 8
  tail call fastcc void @_ZN5blink12_GLOBAL__N_125ExecuteSQLCallbackWrapper23ReportTransactionFailedEPNS_8SQLErrorE(%"class.blink::(anonymous namespace)::ExecuteSQLCallbackWrapper"* %5, %"class.blink::SQLError"* %2)
  ret i1 true
}

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_25InspectorDatabaseResourceEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.238"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.240"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #13
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.240"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.240"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #13
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.240"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.238", %"class.WTF::HashTable.238"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.240", %"struct.WTF::KeyValuePair.240"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.240"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.240"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"* } undef, %"struct.WTF::KeyValuePair.240"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"* } %77, %"struct.WTF::KeyValuePair.240"* %76, 1
  ret { %"struct.WTF::KeyValuePair.240"*, %"struct.WTF::KeyValuePair.240"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4PageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Page"*
  tail call void @_ZNK5blink4Page5TraceEPNS_7VisitorE(%"class.blink::Page"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink4Page5TraceEPNS_7VisitorE(%"class.blink::Page"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CoreProbeSink"*
  tail call void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink8protocol8Database10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"*, %"class.blink::protocol::Database::Backend"*) local_unnamed_addr #2

declare void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorSessionState"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink22WrapPersistentInternalINS_22InspectorDatabaseAgentEEENS_10PersistentIT_EEPS3_: argument 0"}
!6 = distinct !{!6, !"_ZN5blink22WrapPersistentInternalINS_22InspectorDatabaseAgentEEENS_10PersistentIT_EEPS3_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTF13BindRepeatingIMN5blink22InspectorDatabaseAgentEFvPNS1_8DatabaseEEJNS1_10PersistentIS2_EEEFvS4_EEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!9 = distinct !{!9, !"_ZN3WTF13BindRepeatingIMN5blink22InspectorDatabaseAgentEFvPNS1_8DatabaseEEJNS1_10PersistentIS2_EEEFvS4_EEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!10 = !{!11, !13, !8}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink22InspectorDatabaseAgentEFvPNS3_8DatabaseEEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink22InspectorDatabaseAgentEFvPNS3_8DatabaseEEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base13BindRepeatingIRMN5blink22InspectorDatabaseAgentEFvPNS1_8DatabaseEEJNS1_10PersistentIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!14 = distinct !{!14, !"_ZN4base13BindRepeatingIRMN5blink22InspectorDatabaseAgentEFvPNS1_8DatabaseEEJNS1_10PersistentIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!15 = !{i8 0, i8 2}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !17}
!19 = distinct !{!19, !17}
