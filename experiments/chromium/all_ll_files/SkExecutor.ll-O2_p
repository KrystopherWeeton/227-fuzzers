; ModuleID = '../../third_party/skia/src/core/SkExecutor.cpp'
source_filename = "../../third_party/skia/src/core/SkExecutor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.SkExecutor = type { i32 (...)** }
%class.SkTrivialExecutor = type { %class.SkExecutor }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.SkThreadPool = type <{ %class.SkExecutor, %class.SkTArray, %"class.std::__1::deque", %class.SkMutex, %class.SkSemaphore, i8, [7 x i8] }>
%class.SkTArray = type { %"class.std::__1::thread"*, i64 }
%"class.std::__1::thread" = type { i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.7" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::function"**, %"class.std::__1::function"**, %"class.std::__1::function"**, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::function"** }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.13" }
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkThreadPool.24 = type <{ %class.SkExecutor, %class.SkTArray, %class.SkTArray.25, %class.SkMutex, %class.SkSemaphore, i8, [7 x i8] }>
%class.SkTArray.25 = type { %"class.std::__1::function"*, i64 }
%"class.std::__1::__thread_struct" = type { %"class.std::__1::__thread_struct_imp"* }
%"class.std::__1::__thread_struct_imp" = type opaque
%union.pthread_attr_t = type { i64, [48 x i8] }
%"class.std::__1::__thread_specific_ptr" = type { i32 }
%"struct.std::__1::__split_buffer.47" = type { %"class.std::__1::function"**, %"class.std::__1::function"**, %"class.std::__1::function"**, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::allocator"* }
%"class.std::__1::allocator" = type { i8 }

$_ZN10SkExecutor6borrowEv = comdat any

$_ZN17SkTrivialExecutorD0Ev = comdat any

$_ZN17SkTrivialExecutor3addENSt3__18functionIFvvEEE = comdat any

$_ZN8SkTArrayINSt3__16threadELb0EE12emplace_backIJPFvPvEP12SkThreadPoolINS0_5dequeINS0_8functionIFvvEEENS0_9allocatorISB_EEEEEEEERS1_DpOT_ = comdat any

$_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE4LoopEPv = comdat any

$_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEED2Ev = comdat any

$_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEED0Ev = comdat any

$_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE3addES4_ = comdat any

$_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE6borrowEv = comdat any

$_ZN8SkTArrayINSt3__16threadELb0EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvPvEP12SkThreadPoolINS_5dequeINS_8functionIFvvEEENS_9allocatorISE_EEEEEEEEEES7_S7_ = comdat any

$_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE7do_workEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZNSt3__112__deque_baseINS_8functionIFvvEEENS_9allocatorIS3_EEE5clearEv = comdat any

$_ZNSt3__15dequeINS_8functionIFvvEEENS_9allocatorIS3_EEE12emplace_backIJS3_EEERS3_DpOT_ = comdat any

$_ZNSt3__15dequeINS_8functionIFvvEEENS_9allocatorIS3_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPNS_8functionIFvvEEENS_9allocatorIS4_EEE9push_backEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPNS_8functionIFvvEEENS_9allocatorIS4_EEE10push_frontEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPNS_8functionIFvvEEERNS_9allocatorIS4_EEE10push_frontERKS4_ = comdat any

$_ZN8SkTArrayINSt3__16threadELb0EE12emplace_backIJPFvPvEP12SkThreadPoolIS_INS0_8functionIFvvEEELb0EEEEEERS1_DpOT_ = comdat any

$_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE4LoopEPv = comdat any

$_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEED2Ev = comdat any

$_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEED0Ev = comdat any

$_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE3addES4_ = comdat any

$_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE6borrowEv = comdat any

$_ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvPvEP12SkThreadPoolI8SkTArrayINS_8functionIFvvEEELb0EEEEEEEES7_S7_ = comdat any

$_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE7do_workEv = comdat any

$_ZN8SkTArrayINSt3__18functionIFvvEEELb0EE12checkReallocEiNS4_11ReallocTypeE = comdat any

$_ZTV17SkTrivialExecutor = comdat any

$_ZTV12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

$_ZTV12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE = comdat any

@_ZL16gDefaultExecutor = internal unnamed_addr global %class.SkExecutor* null, align 8
@_ZTV10SkExecutor = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkExecutor*)* @_ZN10SkExecutorD2Ev to i8*), i8* bitcast (void (%class.SkExecutor*)* @_ZN10SkExecutorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkExecutor*)* @_ZN10SkExecutor6borrowEv to i8*)] }, align 8
@_ZZL16trivial_executorvE8executor = internal unnamed_addr global %class.SkTrivialExecutor* null, align 8
@_ZGVZL16trivial_executorvE8executor = internal global i64 0, align 8
@_ZTV17SkTrivialExecutor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkExecutor*)* @_ZN10SkExecutorD2Ev to i8*), i8* bitcast (void (%class.SkTrivialExecutor*)* @_ZN17SkTrivialExecutorD0Ev to i8*), i8* bitcast (void (%class.SkTrivialExecutor*, %"class.std::__1::function"*)* @_ZN17SkTrivialExecutor3addENSt3__18functionIFvvEEE to i8*), i8* bitcast (void (%class.SkExecutor*)* @_ZN10SkExecutor6borrowEv to i8*)] }, comdat, align 8
@_ZTV12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkThreadPool*)* @_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEED2Ev to i8*), i8* bitcast (void (%class.SkThreadPool*)* @_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEED0Ev to i8*), i8* bitcast (void (%class.SkThreadPool*, %"class.std::__1::function"*)* @_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE3addES4_ to i8*), i8* bitcast (void (%class.SkThreadPool*)* @_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE6borrowEv to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [26 x i8] c"thread constructor failed\00", align 1
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@_ZTV12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkThreadPool.24*)* @_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEED2Ev to i8*), i8* bitcast (void (%class.SkThreadPool.24*)* @_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEED0Ev to i8*), i8* bitcast (void (%class.SkThreadPool.24*, %"class.std::__1::function"*)* @_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE3addES4_ to i8*), i8* bitcast (void (%class.SkThreadPool.24*)* @_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE6borrowEv to i8*)] }, comdat, align 8

@_ZN10SkExecutorD1Ev = hidden unnamed_addr alias void (%class.SkExecutor*), void (%class.SkExecutor*)* @_ZN10SkExecutorD2Ev

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN10SkExecutorD0Ev(%class.SkExecutor* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden dereferenceable(8) %class.SkExecutor* @_ZN10SkExecutor10GetDefaultEv() local_unnamed_addr #2 align 2 {
  %1 = load %class.SkExecutor*, %class.SkExecutor** @_ZL16gDefaultExecutor, align 8
  %2 = icmp eq %class.SkExecutor* %1, null
  br i1 %2, label %3, label %14

3:                                                ; preds = %0
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZL16trivial_executorvE8executor to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL16trivial_executorvE8executor) #17
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = tail call i8* @_Znwm(i64 8) #18
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV17SkTrivialExecutor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  store i8* %10, i8** bitcast (%class.SkTrivialExecutor** @_ZZL16trivial_executorvE8executor to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL16trivial_executorvE8executor) #17
  br label %12

12:                                               ; preds = %3, %6, %9
  %13 = load %class.SkExecutor*, %class.SkExecutor** bitcast (%class.SkTrivialExecutor** @_ZZL16trivial_executorvE8executor to %class.SkExecutor**), align 8
  br label %14

14:                                               ; preds = %0, %12
  %15 = phi %class.SkExecutor* [ %13, %12 ], [ %1, %0 ]
  ret %class.SkExecutor* %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10SkExecutor10SetDefaultEPS_(%class.SkExecutor*) local_unnamed_addr #3 align 2 {
  store %class.SkExecutor* %0, %class.SkExecutor** @_ZL16gDefaultExecutor, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkExecutor* @_ZN10SkExecutor18MakeFIFOThreadPoolEib(i32, i1 zeroext) local_unnamed_addr #4 align 2 {
  %3 = alloca void (i8*)*, align 8
  %4 = alloca %class.SkThreadPool*, align 8
  %5 = zext i1 %1 to i8
  %6 = icmp sgt i32 %0, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @sysconf(i32 84) #17
  %9 = trunc i64 %8 to i32
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi i32 [ %9, %7 ], [ %0, %2 ]
  %12 = tail call i8* @_Znwm(i64 112) #18
  %13 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to %class.SkTArray*
  %16 = getelementptr inbounds i8, i8* %12, i64 16
  %17 = bitcast i8* %16 to i64*
  %18 = bitcast i8* %14 to %"class.std::__1::thread"**
  store %"class.std::__1::thread"* null, %"class.std::__1::thread"** %18, align 8
  store i64 1, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 48, i1 false) #17
  %20 = getelementptr inbounds i8, i8* %12, i64 72
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %12, i64 76
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds i8, i8* %12, i64 80
  %24 = bitcast i8* %23 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %24, align 8
  %25 = getelementptr inbounds i8, i8* %12, i64 88
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %12, i64 92
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds i8, i8* %12, i64 96
  %29 = bitcast i8* %28 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %29, align 8
  %30 = getelementptr inbounds i8, i8* %12, i64 104
  store i8 %5, i8* %30, align 8
  %31 = icmp sgt i32 %11, 0
  br i1 %31, label %32, label %41

32:                                               ; preds = %10
  %33 = bitcast void (i8*)** %3 to i8*
  %34 = bitcast %class.SkThreadPool** %4 to i8*
  %35 = bitcast %class.SkThreadPool** %4 to i8**
  br label %36

36:                                               ; preds = %36, %32
  %37 = phi i32 [ 0, %32 ], [ %39, %36 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #17
  store void (i8*)* @_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE4LoopEPv, void (i8*)** %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #17
  store i8* %12, i8** %35, align 8
  %38 = call dereferenceable(8) %"class.std::__1::thread"* @_ZN8SkTArrayINSt3__16threadELb0EE12emplace_backIJPFvPvEP12SkThreadPoolINS0_5dequeINS0_8functionIFvvEEENS0_9allocatorISB_EEEEEEEERS1_DpOT_(%class.SkTArray* %15, void (i8*)** nonnull dereferenceable(8) %3, %class.SkThreadPool** nonnull dereferenceable(8) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  %39 = add nuw nsw i32 %37, 1
  %40 = icmp eq i32 %39, %11
  br i1 %40, label %41, label %36

41:                                               ; preds = %36, %10
  %42 = bitcast i8* %12 to %class.SkExecutor*
  ret %class.SkExecutor* %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkExecutor* @_ZN10SkExecutor18MakeLIFOThreadPoolEib(i32, i1 zeroext) local_unnamed_addr #4 align 2 {
  %3 = alloca void (i8*)*, align 8
  %4 = alloca %class.SkThreadPool.24*, align 8
  %5 = zext i1 %1 to i8
  %6 = icmp sgt i32 %0, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @sysconf(i32 84) #17
  %9 = trunc i64 %8 to i32
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi i32 [ %9, %7 ], [ %0, %2 ]
  %12 = tail call i8* @_Znwm(i64 80) #18
  %13 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to %class.SkTArray*
  %16 = getelementptr inbounds i8, i8* %12, i64 16
  %17 = bitcast i8* %16 to i64*
  %18 = bitcast i8* %14 to %"class.std::__1::thread"**
  store %"class.std::__1::thread"* null, %"class.std::__1::thread"** %18, align 8
  store i64 1, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 32
  %20 = bitcast i8* %19 to i64*
  %21 = getelementptr inbounds i8, i8* %12, i64 24
  %22 = bitcast i8* %21 to %"class.std::__1::function"**
  store %"class.std::__1::function"* null, %"class.std::__1::function"** %22, align 8
  store i64 1, i64* %20, align 8
  %23 = getelementptr inbounds i8, i8* %12, i64 40
  %24 = bitcast i8* %23 to i32*
  store i32 1, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %12, i64 44
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds i8, i8* %12, i64 48
  %27 = bitcast i8* %26 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %27, align 8
  %28 = getelementptr inbounds i8, i8* %12, i64 56
  %29 = bitcast i8* %28 to i32*
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %12, i64 60
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds i8, i8* %12, i64 64
  %32 = bitcast i8* %31 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %12, i64 72
  store i8 %5, i8* %33, align 8
  %34 = icmp sgt i32 %11, 0
  br i1 %34, label %35, label %44

35:                                               ; preds = %10
  %36 = bitcast void (i8*)** %3 to i8*
  %37 = bitcast %class.SkThreadPool.24** %4 to i8*
  %38 = bitcast %class.SkThreadPool.24** %4 to i8**
  br label %39

39:                                               ; preds = %39, %35
  %40 = phi i32 [ 0, %35 ], [ %42, %39 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  store void (i8*)* @_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE4LoopEPv, void (i8*)** %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #17
  store i8* %12, i8** %38, align 8
  %41 = call dereferenceable(8) %"class.std::__1::thread"* @_ZN8SkTArrayINSt3__16threadELb0EE12emplace_backIJPFvPvEP12SkThreadPoolIS_INS0_8functionIFvvEEELb0EEEEEERS1_DpOT_(%class.SkTArray* %15, void (i8*)** nonnull dereferenceable(8) %3, %class.SkThreadPool.24** nonnull dereferenceable(8) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  %42 = add nuw nsw i32 %40, 1
  %43 = icmp eq i32 %42, %11
  br i1 %43, label %44, label %39

44:                                               ; preds = %39, %10
  %45 = bitcast i8* %12 to %class.SkExecutor*
  ret %class.SkExecutor* %45
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkExecutor6borrowEv(%class.SkExecutor*) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10SkExecutorD2Ev(%class.SkExecutor* nocapture) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17SkTrivialExecutorD0Ev(%class.SkTrivialExecutor*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %class.SkTrivialExecutor* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17SkTrivialExecutor3addENSt3__18functionIFvvEEE(%class.SkTrivialExecutor*, %"class.std::__1::function"*) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1, i32 0
  %4 = load void (%"union.std::__1::__function::__policy_storage"*)*, void (%"union.std::__1::__function::__policy_storage"*)** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0
  tail call void %4(%"union.std::__1::__function::__policy_storage"* %5) #17
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind
declare i64 @sysconf(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::thread"* @_ZN8SkTArrayINSt3__16threadELb0EE12emplace_backIJPFvPvEP12SkThreadPoolINS0_5dequeINS0_8functionIFvvEEENS0_9allocatorISB_EEEEEEEERS1_DpOT_(%class.SkTArray*, void (i8*)** dereferenceable(8), %class.SkThreadPool** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  tail call void @_ZN8SkTArrayINSt3__16threadELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %0, i32 1, i32 1) #17
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  %5 = load %"class.std::__1::thread"*, %"class.std::__1::thread"** %4, align 8
  %6 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = and i64 %8, 2147483647
  %10 = getelementptr inbounds %"class.std::__1::thread", %"class.std::__1::thread"* %5, i64 %9
  %11 = add i64 %7, 2
  %12 = and i64 %11, 4294967294
  %13 = and i64 %7, -4294967295
  %14 = or i64 %12, %13
  store i64 %14, i64* %6, align 8
  %15 = tail call i8* @_Znwm(i64 8) #18
  %16 = bitcast i8* %15 to %"class.std::__1::__thread_struct"*
  tail call void @_ZNSt3__115__thread_structC1Ev(%"class.std::__1::__thread_struct"* nonnull %16) #17
  %17 = ptrtoint i8* %15 to i64
  %18 = tail call i8* @_Znwm(i64 24) #18
  %19 = bitcast void (i8*)** %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %class.SkThreadPool** %2 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast i8* %18 to i64*
  store i64 %17, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %18, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %20, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %18, i64 16
  %27 = bitcast i8* %26 to i64*
  store i64 %22, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::thread", %"class.std::__1::thread"* %10, i64 0, i32 0
  %29 = tail call i32 @pthread_create(i64* %28, %union.pthread_attr_t* null, i8* (i8*)* nonnull @_ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvPvEP12SkThreadPoolINS_5dequeINS_8functionIFvvEEENS_9allocatorISE_EEEEEEEEEES7_S7_, i8* nonnull %18) #17
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %3
  tail call void @_ZNSt3__120__throw_system_errorEiPKc(i32 %29, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0)) #16
  unreachable

32:                                               ; preds = %3
  ret %"class.std::__1::thread"* %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE4LoopEPv(i8*) #4 comdat align 2 {
  %2 = bitcast i8* %0 to %class.SkThreadPool*
  %3 = getelementptr inbounds i8, i8* %0, i64 88
  %4 = bitcast i8* %3 to i32*
  %5 = bitcast i8* %3 to %class.SkSemaphore*
  br label %6

6:                                                ; preds = %10, %1
  %7 = atomicrmw sub i32* %4, i32 1 acquire
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %5) #17
  br label %10

10:                                               ; preds = %6, %9
  %11 = tail call zeroext i1 @_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE7do_workEv(%class.SkThreadPool* %2)
  br i1 %11, label %6, label %12

12:                                               ; preds = %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEED2Ev(%class.SkThreadPool*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %83, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 3
  %10 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %9, i64 0, i32 0
  %12 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %13 = bitcast %"class.std::__1::function"*** %12 to i64*
  %14 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::function"*** %14 to i64*
  %16 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 2, i32 0, i32 1
  %17 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %18 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 2
  %19 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 4
  %20 = getelementptr inbounds %class.SkSemaphore, %class.SkSemaphore* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %26

21:                                               ; preds = %76
  %22 = and i64 %78, 4294967294
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %83, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %3, i64 0, i32 0
  br label %139

26:                                               ; preds = %8, %76
  %27 = phi i32 [ 0, %8 ], [ %77, %76 ]
  %28 = atomicrmw sub i32* %10, i32 1 acquire
  %29 = icmp slt i32 %28, 1
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %11) #17
  br label %31

31:                                               ; preds = %30, %26
  %32 = load i64, i64* %13, align 8
  %33 = load i64, i64* %15, align 8
  %34 = sub i64 %32, %33
  %35 = icmp eq i64 %34, 0
  %36 = shl i64 %34, 4
  %37 = add i64 %36, -1
  %38 = select i1 %35, i64 0, i64 %37
  %39 = load i64, i64* %16, align 8
  %40 = load i64, i64* %17, align 8
  %41 = add i64 %40, %39
  %42 = icmp eq i64 %38, %41
  %43 = inttoptr i64 %33 to %"class.std::__1::function"**
  %44 = inttoptr i64 %32 to %"class.std::__1::function"**
  br i1 %42, label %45, label %51

45:                                               ; preds = %31
  tail call void @_ZNSt3__15dequeINS_8functionIFvvEEENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %18) #17
  %46 = load i64, i64* %17, align 8
  %47 = load i64, i64* %16, align 8
  %48 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %14, align 8
  %49 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %12, align 8
  %50 = add i64 %47, %46
  br label %51

51:                                               ; preds = %45, %31
  %52 = phi i64 [ %50, %45 ], [ %41, %31 ]
  %53 = phi %"class.std::__1::function"** [ %49, %45 ], [ %44, %31 ]
  %54 = phi %"class.std::__1::function"** [ %48, %45 ], [ %43, %31 ]
  %55 = icmp eq %"class.std::__1::function"** %53, %54
  br i1 %55, label %62, label %56

56:                                               ; preds = %51
  %57 = lshr i64 %52, 7
  %58 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %54, i64 %57
  %59 = load %"class.std::__1::function"*, %"class.std::__1::function"** %58, align 8
  %60 = and i64 %52, 127
  %61 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %59, i64 %60
  br label %62

62:                                               ; preds = %51, %56
  %63 = phi %"class.std::__1::function"* [ %61, %56 ], [ null, %51 ]
  %64 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %63, i64 0, i32 0, i32 1
  %65 = bitcast %"struct.std::__1::__function::__policy_invoker"* %64 to i64*
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %63, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %66, align 8
  %67 = load i64, i64* %17, align 8
  %68 = add i64 %67, 1
  store i64 %68, i64* %17, align 8
  %69 = atomicrmw add i32* %10, i32 1 release
  %70 = icmp slt i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %62
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %11, i32 1) #17
  br label %72

72:                                               ; preds = %71, %62
  %73 = atomicrmw add i32* %20, i32 1 release
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %19, i32 1) #17
  br label %76

76:                                               ; preds = %75, %72
  %77 = add nuw nsw i32 %27, 1
  %78 = load i64, i64* %4, align 8
  %79 = lshr i64 %78, 1
  %80 = trunc i64 %79 to i32
  %81 = and i32 %80, 2147483647
  %82 = icmp ult i32 %77, %81
  br i1 %82, label %26, label %21

83:                                               ; preds = %139, %1, %21
  %84 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 4
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %84) #17
  %85 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 3, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %85) #17
  %86 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 2, i32 0
  tail call void @_ZNSt3__112__deque_baseINS_8functionIFvvEEENS_9allocatorIS3_EEE5clearEv(%"class.std::__1::__deque_base"* %86) #17
  %87 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %88 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %87, align 8
  %89 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %90 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %89, align 8
  %91 = icmp eq %"class.std::__1::function"** %88, %90
  br i1 %91, label %110, label %92

92:                                               ; preds = %83, %92
  %93 = phi %"class.std::__1::function"** [ %96, %92 ], [ %88, %83 ]
  %94 = bitcast %"class.std::__1::function"** %93 to i8**
  %95 = load i8*, i8** %94, align 8
  tail call void @_ZdlPv(i8* %95) #18
  %96 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %93, i64 1
  %97 = icmp eq %"class.std::__1::function"** %96, %90
  br i1 %97, label %98, label %92

98:                                               ; preds = %92
  %99 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %87, align 8
  %100 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %89, align 8
  %101 = icmp eq %"class.std::__1::function"** %100, %99
  br i1 %101, label %110, label %102

102:                                              ; preds = %98
  %103 = ptrtoint %"class.std::__1::function"** %99 to i64
  %104 = getelementptr %"class.std::__1::function"*, %"class.std::__1::function"** %100, i64 -1
  %105 = ptrtoint %"class.std::__1::function"** %104 to i64
  %106 = sub i64 %105, %103
  %107 = lshr i64 %106, 3
  %108 = xor i64 %107, -1
  %109 = getelementptr %"class.std::__1::function"*, %"class.std::__1::function"** %100, i64 %108
  store %"class.std::__1::function"** %109, %"class.std::__1::function"*** %89, align 8
  br label %110

110:                                              ; preds = %102, %98, %83
  %111 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %86, i64 0, i32 0, i32 0
  %112 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %111, align 8
  %113 = icmp eq %"class.std::__1::function"** %112, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %110
  %115 = bitcast %"class.std::__1::function"** %112 to i8*
  tail call void @_ZdlPv(i8* %115) #18
  br label %116

116:                                              ; preds = %110, %114
  %117 = load i64, i64* %4, align 8
  %118 = and i64 %117, 4294967294
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %3, i64 0, i32 0
  br label %126

122:                                              ; preds = %126, %116
  %123 = phi i64 [ %117, %116 ], [ %131, %126 ]
  %124 = and i64 %123, 1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %138, label %135

126:                                              ; preds = %126, %120
  %127 = phi i64 [ 0, %120 ], [ %130, %126 ]
  %128 = load %"class.std::__1::thread"*, %"class.std::__1::thread"** %121, align 8
  %129 = getelementptr inbounds %"class.std::__1::thread", %"class.std::__1::thread"* %128, i64 %127
  tail call void @_ZNSt3__16threadD1Ev(%"class.std::__1::thread"* %129) #17
  %130 = add nuw nsw i64 %127, 1
  %131 = load i64, i64* %4, align 8
  %132 = lshr i64 %131, 1
  %133 = and i64 %132, 2147483647
  %134 = icmp ult i64 %130, %133
  br i1 %134, label %126, label %122

135:                                              ; preds = %122
  %136 = bitcast %class.SkTArray* %3 to i8**
  %137 = load i8*, i8** %136, align 8
  tail call void @_Z7sk_freePv(i8* %137) #17
  br label %138

138:                                              ; preds = %122, %135
  ret void

139:                                              ; preds = %24, %139
  %140 = phi i64 [ 0, %24 ], [ %143, %139 ]
  %141 = load %"class.std::__1::thread"*, %"class.std::__1::thread"** %25, align 8
  %142 = getelementptr inbounds %"class.std::__1::thread", %"class.std::__1::thread"* %141, i64 %140
  tail call void @_ZNSt3__16thread4joinEv(%"class.std::__1::thread"* %142) #17
  %143 = add nuw nsw i64 %140, 1
  %144 = load i64, i64* %4, align 8
  %145 = lshr i64 %144, 1
  %146 = and i64 %145, 2147483647
  %147 = icmp ult i64 %143, %146
  br i1 %147, label %139, label %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEED0Ev(%class.SkThreadPool*) unnamed_addr #4 comdat align 2 {
  tail call void @_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEED2Ev(%class.SkThreadPool* %0) #17
  %2 = bitcast %class.SkThreadPool* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE3addES4_(%class.SkThreadPool*, %"class.std::__1::function"*) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 3
  %4 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = atomicrmw sub i32* %4, i32 1 acquire
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %8) #17
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 2
  %11 = tail call dereferenceable(32) %"class.std::__1::function"* @_ZNSt3__15dequeINS_8functionIFvvEEENS_9allocatorIS3_EEE12emplace_backIJS3_EEERS3_DpOT_(%"class.std::__1::deque"* %10, %"class.std::__1::function"* dereferenceable(32) %1)
  %12 = atomicrmw add i32* %4, i32 1 release
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  %15 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %15, i32 1) #17
  br label %16

16:                                               ; preds = %9, %14
  %17 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 4
  %18 = getelementptr inbounds %class.SkSemaphore, %class.SkSemaphore* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 release
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %17, i32 1) #17
  br label %22

22:                                               ; preds = %16, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE6borrowEv(%class.SkThreadPool*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 4
  %7 = tail call zeroext i1 @_ZN11SkSemaphore8try_waitEv(%class.SkSemaphore* %6) #17
  br i1 %7, label %8, label %10

8:                                                ; preds = %5
  %9 = tail call zeroext i1 @_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE7do_workEv(%class.SkThreadPool* %0)
  br label %10

10:                                               ; preds = %1, %8, %5
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__16threadELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %77

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %77, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #17
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %65, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %60, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::thread"*, %"class.std::__1::thread"** %49, align 8
  %55 = bitcast i8* %53 to i64*
  %56 = getelementptr inbounds %"class.std::__1::thread", %"class.std::__1::thread"* %54, i64 %51, i32 0
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %55, align 8
  store i64 0, i64* %56, align 8
  %58 = load %"class.std::__1::thread"*, %"class.std::__1::thread"** %49, align 8
  %59 = getelementptr inbounds %"class.std::__1::thread", %"class.std::__1::thread"* %58, i64 %51
  tail call void @_ZNSt3__16threadD1Ev(%"class.std::__1::thread"* %59) #17
  %60 = add nuw nsw i64 %51, 1
  %61 = load i64, i64* %4, align 8
  %62 = lshr i64 %61, 1
  %63 = and i64 %62, 2147483647
  %64 = icmp ult i64 %60, %63
  br i1 %64, label %50, label %65

65:                                               ; preds = %50, %35
  %66 = phi i64 [ %45, %35 ], [ %61, %50 ]
  %67 = and i64 %66, 1
  %68 = icmp eq i64 %67, 0
  %69 = bitcast %class.SkTArray* %0 to i8**
  br i1 %68, label %73, label %70

70:                                               ; preds = %65
  %71 = load i8*, i8** %69, align 8
  tail call void @_Z7sk_freePv(i8* %71) #17
  %72 = load i64, i64* %4, align 8
  br label %73

73:                                               ; preds = %65, %70
  %74 = phi i64 [ %72, %70 ], [ %66, %65 ]
  store i8* %44, i8** %69, align 8
  %75 = and i64 %74, -4294967298
  %76 = or i64 %75, 1
  store i64 %76, i64* %4, align 8
  br label %77

77:                                               ; preds = %73, %32, %21
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #12

; Function Attrs: nounwind
declare void @_ZNSt3__16threadD1Ev(%"class.std::__1::thread"*) unnamed_addr #11

declare void @_ZNSt3__115__thread_structC1Ev(%"class.std::__1::__thread_struct"*) unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvPvEP12SkThreadPoolINS_5dequeINS_8functionIFvvEEENS_9allocatorISE_EEEEEEEEEES7_S7_(i8*) #4 comdat {
  %2 = tail call dereferenceable(4) %"class.std::__1::__thread_specific_ptr"* @_ZNSt3__119__thread_local_dataEv() #17
  %3 = bitcast i8* %0 to %"class.std::__1::__thread_struct"**
  %4 = bitcast i8* %0 to i8**
  %5 = load i8*, i8** %4, align 8
  store %"class.std::__1::__thread_struct"* null, %"class.std::__1::__thread_struct"** %3, align 8
  %6 = getelementptr inbounds %"class.std::__1::__thread_specific_ptr", %"class.std::__1::__thread_specific_ptr"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = tail call i32 @pthread_setspecific(i32 %7, i8* %5) #17
  %9 = getelementptr inbounds i8, i8* %0, i64 8
  %10 = bitcast i8* %9 to void (i8*)**
  %11 = getelementptr inbounds i8, i8* %0, i64 16
  %12 = load void (i8*)*, void (i8*)** %10, align 8
  %13 = bitcast i8* %11 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void %12(i8* %14) #17
  %15 = icmp eq i8* %0, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %1
  %17 = load %"class.std::__1::__thread_struct"*, %"class.std::__1::__thread_struct"** %3, align 8
  store %"class.std::__1::__thread_struct"* null, %"class.std::__1::__thread_struct"** %3, align 8
  %18 = icmp eq %"class.std::__1::__thread_struct"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %16
  tail call void @_ZNSt3__115__thread_structD1Ev(%"class.std::__1::__thread_struct"* nonnull %17) #17
  %20 = bitcast %"class.std::__1::__thread_struct"* %17 to i8*
  tail call void @_ZdlPv(i8* %20) #18
  br label %21

21:                                               ; preds = %19, %16
  tail call void @_ZdlPv(i8* nonnull %0) #18
  br label %22

22:                                               ; preds = %1, %21
  ret i8* null
}

; Function Attrs: noreturn
declare void @_ZNSt3__120__throw_system_errorEiPKc(i32, i8*) local_unnamed_addr #13

; Function Attrs: nounwind
declare i32 @pthread_create(i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*) local_unnamed_addr #11

declare dereferenceable(4) %"class.std::__1::__thread_specific_ptr"* @_ZNSt3__119__thread_local_dataEv() local_unnamed_addr #12

; Function Attrs: nounwind
declare i32 @pthread_setspecific(i32, i8*) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZNSt3__115__thread_structD1Ev(%"class.std::__1::__thread_struct"*) unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkThreadPoolINSt3__15dequeINS0_8functionIFvvEEENS0_9allocatorIS4_EEEEE7do_workEv(%class.SkThreadPool*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::__1::function", align 16
  %3 = bitcast %"class.std::__1::function"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #17
  %4 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::function"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 16, i1 false)
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %5, align 16
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %6, align 8
  %8 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 3
  %9 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acquire
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %8, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %13) #17
  br label %14

14:                                               ; preds = %1, %12
  %15 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %16 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %15, align 8, !noalias !4
  %17 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8, !noalias !4
  %19 = lshr i64 %18, 7
  %20 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %16, i64 %19
  %21 = load %"class.std::__1::function"*, %"class.std::__1::function"** %20, align 8, !noalias !4
  %22 = and i64 %18, 127
  %23 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %21, i64 %22
  %24 = bitcast %"class.std::__1::function"* %23 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %21, i64 %22, i32 0, i32 1
  %27 = bitcast %"struct.std::__1::__function::__policy_invoker"* %26 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !4
  %29 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %21, i64 %22, i32 0, i32 2
  %30 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %29, align 8, !noalias !4
  %31 = ptrtoint %"struct.std::__1::__function::__policy"* %30 to i64
  %32 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %30, i64 0, i32 1
  %33 = load void (i8*)*, void (i8*)** %32, align 8, !noalias !4
  %34 = icmp eq void (i8*)* %33, null
  br i1 %34, label %51, label %35

35:                                               ; preds = %14
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %29, align 8, !noalias !4
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %27, align 8, !noalias !4
  %36 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %15, align 8, !noalias !4
  %37 = load i64, i64* %17, align 8, !noalias !4
  %38 = lshr i64 %37, 7
  %39 = and i64 %37, 127
  %40 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %36, i64 %38
  %41 = load %"class.std::__1::function"*, %"class.std::__1::function"** %40, align 8, !noalias !4
  %42 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %41, i64 %39, i32 0, i32 2
  %43 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %42, align 8, !noalias !4
  %44 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %43, i64 0, i32 1
  %45 = load void (i8*)*, void (i8*)** %44, align 8, !noalias !4
  %46 = icmp eq void (i8*)* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %41, i64 %39, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8, !noalias !4
  tail call void %45(i8* %49) #17, !noalias !4
  %50 = load i64, i64* %17, align 8, !noalias !4
  br label %51

51:                                               ; preds = %14, %47, %35
  %52 = phi i64 [ %37, %35 ], [ %50, %47 ], [ %18, %14 ]
  %53 = getelementptr inbounds %class.SkThreadPool, %class.SkThreadPool* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %54 = load i64, i64* %53, align 8, !noalias !4
  %55 = add i64 %54, -1
  store i64 %55, i64* %53, align 8, !noalias !4
  %56 = add i64 %52, 1
  store i64 %56, i64* %17, align 8, !noalias !4
  %57 = icmp ult i64 %56, 256
  br i1 %57, label %66, label %58

58:                                               ; preds = %51
  %59 = bitcast %"class.std::__1::function"*** %15 to i8***
  %60 = load i8**, i8*** %59, align 8, !noalias !4
  %61 = load i8*, i8** %60, align 8, !noalias !4
  tail call void @_ZdlPv(i8* %61) #18, !noalias !4
  %62 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %15, align 8, !noalias !4
  %63 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %62, i64 1
  store %"class.std::__1::function"** %63, %"class.std::__1::function"*** %15, align 8, !noalias !4
  %64 = load i64, i64* %17, align 8, !noalias !4
  %65 = add i64 %64, -128
  store i64 %65, i64* %17, align 8, !noalias !4
  br label %66

66:                                               ; preds = %51, %58
  %67 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %6, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %6, align 8
  %68 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1
  %69 = bitcast %"struct.std::__1::__function::__policy_invoker"* %68 to i64*
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %69, align 16
  %70 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %67, i64 0, i32 1
  %71 = load void (i8*)*, void (i8*)** %70, align 8
  %72 = icmp eq void (i8*)* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %66
  %74 = load i8*, i8** %4, align 16
  tail call void %71(i8* %74) #17
  br label %75

75:                                               ; preds = %73, %66
  %76 = bitcast %"class.std::__1::function"* %2 to <2 x i64>*
  store <2 x i64> %25, <2 x i64>* %76, align 16
  store i64 %28, i64* %69, align 16
  %77 = bitcast %"struct.std::__1::__function::__policy"** %6 to i64*
  store i64 %31, i64* %77, align 8
  %78 = atomicrmw add i32* %9, i32 1 release
  %79 = icmp slt i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %75
  %81 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %8, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %81, i32 1) #17
  br label %82

82:                                               ; preds = %75, %80
  %83 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %6, align 8
  %84 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %83, i64 0, i32 2
  %85 = load i8, i8* %84, align 8, !range !3
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %82
  %88 = load void (%"union.std::__1::__function::__policy_storage"*)*, void (%"union.std::__1::__function::__policy_storage"*)** %5, align 16
  %89 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0
  call void %88(%"union.std::__1::__function::__policy_storage"* nonnull %89) #17
  %90 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %6, align 8
  br label %91

91:                                               ; preds = %82, %87
  %92 = phi %"struct.std::__1::__function::__policy"* [ %90, %87 ], [ %83, %82 ]
  %93 = phi i1 [ true, %87 ], [ false, %82 ]
  %94 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %92, i64 0, i32 1
  %95 = load void (i8*)*, void (i8*)** %94, align 8
  %96 = icmp eq void (i8*)* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = load i8*, i8** %4, align 16
  call void %95(i8* %98) #17
  br label %99

99:                                               ; preds = %91, %97
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #17
  ret i1 %93
}

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #4 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #19
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #14 comdat {
  tail call void @abort() #16
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #15

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #12

declare void @_ZNSt3__16thread4joinEv(%"class.std::__1::thread"*) local_unnamed_addr #12

; Function Attrs: nounwind
declare void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore*) unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseINS_8functionIFvvEEENS_9allocatorIS3_EEE5clearEv(%"class.std::__1::__deque_base"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 7
  %7 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %8, align 8
  %10 = icmp eq %"class.std::__1::function"** %9, %3
  %11 = ptrtoint %"class.std::__1::function"** %9 to i64
  %12 = ptrtoint %"class.std::__1::function"** %3 to i64
  %13 = bitcast %"class.std::__1::function"** %3 to i8**
  br i1 %10, label %14, label %16

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %29

16:                                               ; preds = %1
  %17 = load %"class.std::__1::function"*, %"class.std::__1::function"** %7, align 8
  %18 = and i64 %5, 127
  %19 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 %18
  %20 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %5
  %23 = lshr i64 %22, 7
  %24 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %3, i64 %23
  %25 = load %"class.std::__1::function"*, %"class.std::__1::function"** %24, align 8
  %26 = and i64 %22, 127
  %27 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %25, i64 %26
  %28 = icmp eq %"class.std::__1::function"* %27, %19
  br i1 %28, label %29, label %47

29:                                               ; preds = %14, %16
  %30 = phi i64* [ %15, %14 ], [ %20, %16 ]
  %31 = bitcast %"class.std::__1::function"*** %8 to i64*
  br label %38

32:                                               ; preds = %69
  %33 = bitcast %"class.std::__1::function"*** %8 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::function"*** %2 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = inttoptr i64 %36 to i8**
  br label %38

38:                                               ; preds = %29, %32
  %39 = phi i64* [ %30, %29 ], [ %20, %32 ]
  %40 = phi i64* [ %31, %29 ], [ %33, %32 ]
  %41 = phi i8** [ %13, %29 ], [ %37, %32 ]
  %42 = phi i64 [ %12, %29 ], [ %36, %32 ]
  %43 = phi i64 [ %11, %29 ], [ %34, %32 ]
  store i64 0, i64* %39, align 8
  %44 = sub i64 %43, %42
  %45 = ashr exact i64 %44, 3
  %46 = icmp ugt i64 %45, 2
  br i1 %46, label %74, label %85

47:                                               ; preds = %16, %69
  %48 = phi %"class.std::__1::function"* [ %72, %69 ], [ %19, %16 ]
  %49 = phi %"class.std::__1::function"** [ %71, %69 ], [ %7, %16 ]
  %50 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %48, i64 0, i32 0, i32 2
  %51 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %51, i64 0, i32 1
  %53 = load void (i8*)*, void (i8*)** %52, align 8
  %54 = icmp eq void (i8*)* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %48, i64 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  tail call void %53(i8* %57) #17
  br label %58

58:                                               ; preds = %47, %55
  %59 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %48, i64 1
  %60 = ptrtoint %"class.std::__1::function"* %59 to i64
  %61 = bitcast %"class.std::__1::function"** %49 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = icmp eq i64 %63, 4096
  br i1 %64, label %65, label %69

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %49, i64 1
  %67 = bitcast %"class.std::__1::function"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  br label %69

69:                                               ; preds = %58, %65
  %70 = phi i64 [ %68, %65 ], [ %60, %58 ]
  %71 = phi %"class.std::__1::function"** [ %66, %65 ], [ %49, %58 ]
  %72 = inttoptr i64 %70 to %"class.std::__1::function"*
  %73 = icmp eq %"class.std::__1::function"* %27, %72
  br i1 %73, label %32, label %47

74:                                               ; preds = %38, %74
  %75 = phi i8** [ %84, %74 ], [ %41, %38 ]
  %76 = load i8*, i8** %75, align 8
  tail call void @_ZdlPv(i8* %76) #18
  %77 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %2, align 8
  %78 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %77, i64 1
  store %"class.std::__1::function"** %78, %"class.std::__1::function"*** %2, align 8
  %79 = load i64, i64* %40, align 8
  %80 = ptrtoint %"class.std::__1::function"** %78 to i64
  %81 = sub i64 %79, %80
  %82 = ashr exact i64 %81, 3
  %83 = icmp ugt i64 %82, 2
  %84 = bitcast %"class.std::__1::function"** %78 to i8**
  br i1 %83, label %74, label %85

85:                                               ; preds = %74, %38
  %86 = phi i64 [ %45, %38 ], [ %82, %74 ]
  switch i64 %86, label %90 [
    i64 1, label %88
    i64 2, label %87
  ]

87:                                               ; preds = %85
  br label %88

88:                                               ; preds = %85, %87
  %89 = phi i64 [ 128, %87 ], [ 64, %85 ]
  store i64 %89, i64* %4, align 8
  br label %90

90:                                               ; preds = %88, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.std::__1::function"* @_ZNSt3__15dequeINS_8functionIFvvEEENS_9allocatorIS3_EEE12emplace_backIJS3_EEERS3_DpOT_(%"class.std::__1::deque"*, %"class.std::__1::function"* dereferenceable(32)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = bitcast %"class.std::__1::function"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::function"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp eq i64 %9, 0
  %11 = shl i64 %9, 4
  %12 = add i64 %11, -1
  %13 = select i1 %10, i64 0, i64 %12
  %14 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %15
  %19 = icmp eq i64 %13, %18
  %20 = inttoptr i64 %8 to %"class.std::__1::function"**
  %21 = inttoptr i64 %5 to %"class.std::__1::function"**
  br i1 %19, label %22, label %28

22:                                               ; preds = %2
  tail call void @_ZNSt3__15dequeINS_8functionIFvvEEENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %0)
  %23 = load i64, i64* %16, align 8
  %24 = load i64, i64* %14, align 8
  %25 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %6, align 8
  %26 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %3, align 8
  %27 = add i64 %24, %23
  br label %28

28:                                               ; preds = %22, %2
  %29 = phi i64 [ %27, %22 ], [ %18, %2 ]
  %30 = phi %"class.std::__1::function"** [ %26, %22 ], [ %21, %2 ]
  %31 = phi %"class.std::__1::function"** [ %25, %22 ], [ %20, %2 ]
  %32 = icmp eq %"class.std::__1::function"** %30, %31
  br i1 %32, label %39, label %33

33:                                               ; preds = %28
  %34 = lshr i64 %29, 7
  %35 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %31, i64 %34
  %36 = load %"class.std::__1::function"*, %"class.std::__1::function"** %35, align 8
  %37 = and i64 %29, 127
  %38 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %36, i64 %37
  br label %39

39:                                               ; preds = %28, %33
  %40 = phi %"class.std::__1::function"* [ %38, %33 ], [ null, %28 ]
  %41 = bitcast %"class.std::__1::function"* %40 to i8*
  %42 = bitcast %"class.std::__1::function"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 16, i1 false) #17
  %43 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %40, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1
  %45 = bitcast %"struct.std::__1::__function::__policy_invoker"* %44 to i64*
  %46 = bitcast %"struct.std::__1::__function::__policy_invoker"* %43 to i64*
  %47 = load i64, i64* %45, align 8
  store i64 %47, i64* %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %40, i64 0, i32 0, i32 2
  %49 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 2
  %50 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %49, align 8
  store %"struct.std::__1::__function::__policy"* %50, %"struct.std::__1::__function::__policy"** %48, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %50, i64 0, i32 1
  %52 = load void (i8*)*, void (i8*)** %51, align 8
  %53 = icmp eq void (i8*)* %52, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %39
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %49, align 8
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %45, align 8
  br label %55

55:                                               ; preds = %39, %54
  %56 = load i64, i64* %16, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %16, align 8
  %58 = load i64, i64* %14, align 8
  %59 = add i64 %58, %57
  %60 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %6, align 8
  %61 = lshr i64 %59, 7
  %62 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %60, i64 %61
  %63 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %3, align 8
  %64 = icmp eq %"class.std::__1::function"** %63, %60
  %65 = load %"class.std::__1::function"*, %"class.std::__1::function"** %62, align 8
  %66 = and i64 %59, 127
  %67 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %65, i64 %66
  %68 = select i1 %64, %"class.std::__1::function"* null, %"class.std::__1::function"* %67
  %69 = icmp eq %"class.std::__1::function"* %68, %65
  br i1 %69, label %70, label %74

70:                                               ; preds = %55
  %71 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %62, i64 -1
  %72 = load %"class.std::__1::function"*, %"class.std::__1::function"** %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %72, i64 128
  br label %74

74:                                               ; preds = %55, %70
  %75 = phi %"class.std::__1::function"* [ %73, %70 ], [ %68, %55 ]
  %76 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %75, i64 -1
  ret %"class.std::__1::function"* %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_8functionIFvvEEENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::__1::function"*, align 8
  %3 = alloca %"class.std::__1::function"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.47", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 127
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -128
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %10, align 8
  %12 = bitcast %"class.std::__1::function"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %11, i64 1
  store %"class.std::__1::function"** %14, %"class.std::__1::function"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %17, align 8
  %19 = icmp eq %"class.std::__1::function"** %16, %18
  %20 = ptrtoint %"class.std::__1::function"** %18 to i64
  %21 = bitcast %"class.std::__1::function"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %23, align 8
  %25 = icmp ugt %"class.std::__1::function"** %14, %24
  %26 = ptrtoint %"class.std::__1::function"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"class.std::__1::function"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %14, i64 %32
  %34 = ptrtoint %"class.std::__1::function"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.std::__1::function"** %33 to i8*
  %40 = bitcast %"class.std::__1::function"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #17
  %41 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"class.std::__1::function"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %33, i64 %36
  store %"class.std::__1::function"** %44, %"class.std::__1::function"*** %15, align 8
  %45 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %43, i64 %32
  store %"class.std::__1::function"** %45, %"class.std::__1::function"*** %10, align 8
  %46 = bitcast %"class.std::__1::function"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"class.std::__1::function"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #18
  %60 = bitcast i8* %59 to %"class.std::__1::function"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %60, i64 %57
  %63 = ptrtoint %"class.std::__1::function"** %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %60, i64 %53
  %65 = ptrtoint %"class.std::__1::function"** %64 to i64
  %66 = ptrtoint %"class.std::__1::function"** %14 to i64
  %67 = ptrtoint %"class.std::__1::function"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"class.std::__1::function"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"class.std::__1::function"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"class.std::__1::function"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %79, i64 1
  %87 = ptrtoint %"class.std::__1::function"** %86 to i64
  %88 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !7

91:                                               ; preds = %78
  %92 = ptrtoint %"class.std::__1::function"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"class.std::__1::function"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"class.std::__1::function"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.std::__1::function"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"class.std::__1::function"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"class.std::__1::function"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %99, i64 1
  %106 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %101, i64 1
  %107 = bitcast %"class.std::__1::function"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::function"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %99, i64 2
  %111 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %101, i64 2
  %112 = bitcast %"class.std::__1::function"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.std::__1::function"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %99, i64 3
  %116 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %101, i64 3
  %117 = bitcast %"class.std::__1::function"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.std::__1::function"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %99, i64 4
  %121 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %101, i64 4
  %122 = bitcast %"class.std::__1::function"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.std::__1::function"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %99, i64 5
  %126 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %101, i64 5
  %127 = bitcast %"class.std::__1::function"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::function"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %99, i64 6
  %131 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %101, i64 6
  %132 = bitcast %"class.std::__1::function"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.std::__1::function"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %99, i64 7
  %136 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %101, i64 7
  %137 = bitcast %"class.std::__1::function"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.std::__1::function"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %99, i64 8
  %141 = ptrtoint %"class.std::__1::function"** %140 to i64
  %142 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %101, i64 8
  %143 = icmp eq %"class.std::__1::function"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"class.std::__1::function"** %70 to i64
  %146 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"class.std::__1::function"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"class.std::__1::function"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"class.std::__1::function"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"class.std::__1::function"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.std::__1::function"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  %156 = bitcast %"class.std::__1::function"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %15, align 8
  %161 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %160, i64 1
  store %"class.std::__1::function"** %161, %"class.std::__1::function"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"class.std::__1::function"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.std::__1::function"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"class.std::__1::function"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"class.std::__1::function"**
  %181 = inttoptr i64 %169 to %"class.std::__1::function"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.std::__1::function"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #17
  %186 = tail call i8* @_Znwm(i64 4096) #18
  %187 = bitcast %"class.std::__1::function"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPNS_8functionIFvvEEENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"* %163, %"class.std::__1::function"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #17
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"class.std::__1::function"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #17
  %190 = tail call i8* @_Znwm(i64 4096) #18
  %191 = bitcast %"class.std::__1::function"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPNS_8functionIFvvEEENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"* %163, %"class.std::__1::function"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #17
  %192 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %167, align 8
  %193 = bitcast %"class.std::__1::function"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %192, i64 1
  store %"class.std::__1::function"** %195, %"class.std::__1::function"*** %167, align 8
  %196 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %164, align 8
  %197 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %172, align 8
  %198 = icmp eq %"class.std::__1::function"** %196, %197
  %199 = ptrtoint %"class.std::__1::function"** %197 to i64
  %200 = bitcast %"class.std::__1::function"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %202, align 8
  %204 = icmp ugt %"class.std::__1::function"** %195, %203
  %205 = ptrtoint %"class.std::__1::function"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"class.std::__1::function"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %195, i64 %211
  %213 = ptrtoint %"class.std::__1::function"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"class.std::__1::function"** %212 to i8*
  %219 = bitcast %"class.std::__1::function"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #17
  %220 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"class.std::__1::function"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %212, i64 %215
  store %"class.std::__1::function"** %223, %"class.std::__1::function"*** %164, align 8
  %224 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %222, i64 %211
  store %"class.std::__1::function"** %224, %"class.std::__1::function"*** %167, align 8
  %225 = bitcast %"class.std::__1::function"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #16
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #18
  %237 = bitcast i8* %236 to %"class.std::__1::function"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %237, i64 %234
  %240 = ptrtoint %"class.std::__1::function"** %239 to i64
  %241 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %237, i64 %230
  %242 = ptrtoint %"class.std::__1::function"** %241 to i64
  %243 = ptrtoint %"class.std::__1::function"** %195 to i64
  %244 = ptrtoint %"class.std::__1::function"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"class.std::__1::function"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"class.std::__1::function"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"class.std::__1::function"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %256, i64 1
  %264 = ptrtoint %"class.std::__1::function"** %263 to i64
  %265 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !9

268:                                              ; preds = %255
  %269 = ptrtoint %"class.std::__1::function"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"class.std::__1::function"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"class.std::__1::function"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.std::__1::function"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"class.std::__1::function"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"class.std::__1::function"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %276, i64 1
  %283 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %278, i64 1
  %284 = bitcast %"class.std::__1::function"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.std::__1::function"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %276, i64 2
  %288 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %278, i64 2
  %289 = bitcast %"class.std::__1::function"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.std::__1::function"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %276, i64 3
  %293 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %278, i64 3
  %294 = bitcast %"class.std::__1::function"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.std::__1::function"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %276, i64 4
  %298 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %278, i64 4
  %299 = bitcast %"class.std::__1::function"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.std::__1::function"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %276, i64 5
  %303 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %278, i64 5
  %304 = bitcast %"class.std::__1::function"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.std::__1::function"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %276, i64 6
  %308 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %278, i64 6
  %309 = bitcast %"class.std::__1::function"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.std::__1::function"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %276, i64 7
  %313 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %278, i64 7
  %314 = bitcast %"class.std::__1::function"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.std::__1::function"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %276, i64 8
  %318 = ptrtoint %"class.std::__1::function"** %317 to i64
  %319 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %278, i64 8
  %320 = icmp eq %"class.std::__1::function"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"class.std::__1::function"** %247 to i64
  %323 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"class.std::__1::function"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"class.std::__1::function"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.std::__1::function"** %325 to i8*
  call void @_ZdlPv(i8* %330) #18
  %331 = bitcast %"class.std::__1::function"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %164, align 8
  %336 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %335, i64 1
  store %"class.std::__1::function"** %336, %"class.std::__1::function"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #17
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"class.std::__1::function"** null, %"class.std::__1::function"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator"** %342 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %346, %"class.std::__1::__compressed_pair.4"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #16
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #18
  %354 = bitcast i8* %353 to %"class.std::__1::function"**
  %355 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %354, i64 %171
  store %"class.std::__1::function"** %356, %"class.std::__1::function"*** %340, align 8
  store %"class.std::__1::function"** %356, %"class.std::__1::function"*** %339, align 8
  %357 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %354, i64 %345
  store %"class.std::__1::function"** %357, %"class.std::__1::function"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #18
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"class.std::__1::function"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"class.std::__1::function"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"class.std::__1::function"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %356, i64 %370
  store %"class.std::__1::function"** %371, %"class.std::__1::function"*** %340, align 8
  store %"class.std::__1::function"** %371, %"class.std::__1::function"*** %339, align 8
  %372 = ptrtoint %"class.std::__1::function"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #16
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i64*
  %382 = bitcast %"class.std::__1::function"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #18
  %386 = bitcast i8* %385 to %"class.std::__1::function"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %386, i64 %383
  %389 = ptrtoint %"class.std::__1::function"** %388 to i64
  %390 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %386, i64 %377
  %391 = ptrtoint %"class.std::__1::function"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"class.std::__1::function"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"class.std::__1::function"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #18
  %394 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %164, align 8
  %395 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %167, align 8
  %396 = ptrtoint %"class.std::__1::function"** %395 to i64
  %397 = ptrtoint %"class.std::__1::function"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"class.std::__1::function"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"class.std::__1::function"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"class.std::__1::function"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"class.std::__1::function"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %406, i64 1
  store %"class.std::__1::function"** %408, %"class.std::__1::function"*** %340, align 8
  %409 = icmp eq %"class.std::__1::function"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"class.std::__1::function"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i64*
  %413 = bitcast %"class.std::__1::function"*** %339 to i64*
  %414 = bitcast %"class.std::__1::function"*** %340 to i64*
  %415 = bitcast %"class.std::__1::function"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"class.std::__1::function"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.std::__1::function"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"class.std::__1::function"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.std::__1::function"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"class.std::__1::function"**
  %441 = inttoptr i64 %434 to %"class.std::__1::function"**
  %442 = icmp eq %"class.std::__1::function"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"class.std::__1::function"*, %"class.std::__1::function"** %441, i64 -1
  %445 = ptrtoint %"class.std::__1::function"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"class.std::__1::function"*, %"class.std::__1::function"** %441, i64 %448
  store %"class.std::__1::function"** %449, %"class.std::__1::function"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #18
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #17
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"class.std::__1::function"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_8functionIFvvEEERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.47"* nonnull %4, %"class.std::__1::function"** dereferenceable(8) %457)
  %458 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %167, align 8
  %459 = icmp eq %"class.std::__1::function"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_8functionIFvvEEENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::function"** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %5, align 8
  %7 = icmp eq %"class.std::__1::function"** %4, %6
  %8 = ptrtoint %"class.std::__1::function"** %6 to i64
  %9 = bitcast %"class.std::__1::function"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %13, align 8
  %15 = icmp ugt %"class.std::__1::function"** %12, %14
  %16 = ptrtoint %"class.std::__1::function"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.std::__1::function"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %12, i64 %22
  %24 = ptrtoint %"class.std::__1::function"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.std::__1::function"** %23 to i8*
  %30 = bitcast %"class.std::__1::function"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #17
  %31 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.std::__1::function"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %23, i64 %26
  store %"class.std::__1::function"** %34, %"class.std::__1::function"*** %3, align 8
  %35 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %33, i64 %22
  store %"class.std::__1::function"** %35, %"class.std::__1::function"*** %11, align 8
  %36 = bitcast %"class.std::__1::function"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.std::__1::function"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #18
  %50 = bitcast i8* %49 to %"class.std::__1::function"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %50, i64 %47
  %53 = ptrtoint %"class.std::__1::function"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %50, i64 %43
  %55 = ptrtoint %"class.std::__1::function"** %54 to i64
  %56 = ptrtoint %"class.std::__1::function"** %12 to i64
  %57 = ptrtoint %"class.std::__1::function"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.std::__1::function"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.std::__1::function"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.std::__1::function"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %69, i64 1
  %77 = ptrtoint %"class.std::__1::function"** %76 to i64
  %78 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !10

81:                                               ; preds = %68
  %82 = ptrtoint %"class.std::__1::function"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.std::__1::function"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.std::__1::function"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.std::__1::function"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.std::__1::function"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.std::__1::function"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %89, i64 1
  %96 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %91, i64 1
  %97 = bitcast %"class.std::__1::function"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.std::__1::function"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %89, i64 2
  %101 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %91, i64 2
  %102 = bitcast %"class.std::__1::function"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.std::__1::function"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %89, i64 3
  %106 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %91, i64 3
  %107 = bitcast %"class.std::__1::function"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::function"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %89, i64 4
  %111 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %91, i64 4
  %112 = bitcast %"class.std::__1::function"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.std::__1::function"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %89, i64 5
  %116 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %91, i64 5
  %117 = bitcast %"class.std::__1::function"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.std::__1::function"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %89, i64 6
  %121 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %91, i64 6
  %122 = bitcast %"class.std::__1::function"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.std::__1::function"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %89, i64 7
  %126 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %91, i64 7
  %127 = bitcast %"class.std::__1::function"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::function"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %89, i64 8
  %131 = ptrtoint %"class.std::__1::function"** %130 to i64
  %132 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %91, i64 8
  %133 = icmp eq %"class.std::__1::function"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.std::__1::function"** %60 to i64
  %136 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.std::__1::function"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.std::__1::function"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.std::__1::function"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.std::__1::function"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.std::__1::function"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #18
  %146 = bitcast %"class.std::__1::function"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.std::__1::function"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %3, align 8
  %153 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %152, i64 1
  store %"class.std::__1::function"** %153, %"class.std::__1::function"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_8functionIFvvEEENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::function"** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %5, align 8
  %7 = icmp eq %"class.std::__1::function"** %4, %6
  %8 = ptrtoint %"class.std::__1::function"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %12, align 8
  %14 = icmp ult %"class.std::__1::function"** %11, %13
  %15 = bitcast %"class.std::__1::function"*** %12 to i64*
  %16 = ptrtoint %"class.std::__1::function"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.std::__1::function"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %11, i64 %22
  %24 = ptrtoint %"class.std::__1::function"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %23, i64 %29
  %31 = bitcast %"class.std::__1::function"** %30 to i8*
  %32 = bitcast %"class.std::__1::function"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #17
  %33 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.std::__1::function"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.std::__1::function"** [ %30, %27 ], [ %23, %17 ]
  store %"class.std::__1::function"** %36, %"class.std::__1::function"*** %3, align 8
  %37 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %35, i64 %22
  store %"class.std::__1::function"** %37, %"class.std::__1::function"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #18
  %51 = bitcast i8* %50 to %"class.std::__1::function"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %51, i64 %48
  %54 = ptrtoint %"class.std::__1::function"** %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %51, i64 %43
  %56 = ptrtoint %"class.std::__1::function"** %55 to i64
  %57 = ptrtoint %"class.std::__1::function"** %4 to i64
  %58 = ptrtoint %"class.std::__1::function"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.std::__1::function"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.std::__1::function"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.std::__1::function"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %70, i64 1
  %78 = ptrtoint %"class.std::__1::function"** %77 to i64
  %79 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !11

82:                                               ; preds = %69
  %83 = ptrtoint %"class.std::__1::function"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.std::__1::function"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.std::__1::function"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.std::__1::function"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.std::__1::function"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.std::__1::function"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %90, i64 1
  %97 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %92, i64 1
  %98 = bitcast %"class.std::__1::function"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::function"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %90, i64 2
  %102 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %92, i64 2
  %103 = bitcast %"class.std::__1::function"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.std::__1::function"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %90, i64 3
  %107 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %92, i64 3
  %108 = bitcast %"class.std::__1::function"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.std::__1::function"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %90, i64 4
  %112 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %92, i64 4
  %113 = bitcast %"class.std::__1::function"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::function"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %90, i64 5
  %117 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %92, i64 5
  %118 = bitcast %"class.std::__1::function"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.std::__1::function"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %90, i64 6
  %122 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %92, i64 6
  %123 = bitcast %"class.std::__1::function"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::function"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %90, i64 7
  %127 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %92, i64 7
  %128 = bitcast %"class.std::__1::function"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::function"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %90, i64 8
  %132 = ptrtoint %"class.std::__1::function"** %131 to i64
  %133 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %92, i64 8
  %134 = icmp eq %"class.std::__1::function"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.std::__1::function"** %61 to i64
  %137 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.std::__1::function"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.std::__1::function"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.std::__1::function"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.std::__1::function"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.std::__1::function"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #18
  %146 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.std::__1::function"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %148, i64 -1
  %150 = bitcast %"class.std::__1::function"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.std::__1::function"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %3, align 8
  %154 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %153, i64 -1
  store %"class.std::__1::function"** %154, %"class.std::__1::function"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_8functionIFvvEEERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.47"*, %"class.std::__1::function"** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %0, i64 0, i32 0
  %6 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %5, align 8
  %7 = icmp eq %"class.std::__1::function"** %4, %6
  %8 = ptrtoint %"class.std::__1::function"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %0, i64 0, i32 2
  %11 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %12, align 8
  %14 = icmp ult %"class.std::__1::function"** %11, %13
  %15 = bitcast %"class.std::__1::function"*** %12 to i64*
  %16 = ptrtoint %"class.std::__1::function"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.std::__1::function"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %11, i64 %22
  %24 = ptrtoint %"class.std::__1::function"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %23, i64 %29
  %31 = bitcast %"class.std::__1::function"** %30 to i8*
  %32 = bitcast %"class.std::__1::function"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #17
  %33 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.std::__1::function"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.std::__1::function"** [ %30, %27 ], [ %23, %17 ]
  store %"class.std::__1::function"** %36, %"class.std::__1::function"*** %3, align 8
  %37 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %35, i64 %22
  store %"class.std::__1::function"** %37, %"class.std::__1::function"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.47"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #18
  %51 = bitcast i8* %50 to %"class.std::__1::function"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %51, i64 %48
  %54 = ptrtoint %"class.std::__1::function"** %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %51, i64 %43
  %56 = ptrtoint %"class.std::__1::function"** %55 to i64
  %57 = ptrtoint %"class.std::__1::function"** %4 to i64
  %58 = ptrtoint %"class.std::__1::function"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.std::__1::function"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.std::__1::function"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.std::__1::function"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %70, i64 1
  %78 = ptrtoint %"class.std::__1::function"** %77 to i64
  %79 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !12

82:                                               ; preds = %69
  %83 = ptrtoint %"class.std::__1::function"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.std::__1::function"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.std::__1::function"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.std::__1::function"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.std::__1::function"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.std::__1::function"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %90, i64 1
  %97 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %92, i64 1
  %98 = bitcast %"class.std::__1::function"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::function"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %90, i64 2
  %102 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %92, i64 2
  %103 = bitcast %"class.std::__1::function"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.std::__1::function"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %90, i64 3
  %107 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %92, i64 3
  %108 = bitcast %"class.std::__1::function"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.std::__1::function"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %90, i64 4
  %112 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %92, i64 4
  %113 = bitcast %"class.std::__1::function"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::function"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %90, i64 5
  %117 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %92, i64 5
  %118 = bitcast %"class.std::__1::function"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.std::__1::function"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %90, i64 6
  %122 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %92, i64 6
  %123 = bitcast %"class.std::__1::function"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::function"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %90, i64 7
  %127 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %92, i64 7
  %128 = bitcast %"class.std::__1::function"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::function"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %90, i64 8
  %132 = ptrtoint %"class.std::__1::function"** %131 to i64
  %133 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %92, i64 8
  %134 = icmp eq %"class.std::__1::function"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.std::__1::function"** %61 to i64
  %137 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.std::__1::function"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.std::__1::function"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.std::__1::function"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.std::__1::function"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.std::__1::function"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #18
  %146 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.std::__1::function"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %148, i64 -1
  %150 = bitcast %"class.std::__1::function"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.std::__1::function"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.std::__1::function"**, %"class.std::__1::function"*** %3, align 8
  %154 = getelementptr inbounds %"class.std::__1::function"*, %"class.std::__1::function"** %153, i64 -1
  store %"class.std::__1::function"** %154, %"class.std::__1::function"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

declare zeroext i1 @_ZN11SkSemaphore8try_waitEv(%class.SkSemaphore*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::thread"* @_ZN8SkTArrayINSt3__16threadELb0EE12emplace_backIJPFvPvEP12SkThreadPoolIS_INS0_8functionIFvvEEELb0EEEEEERS1_DpOT_(%class.SkTArray*, void (i8*)** dereferenceable(8), %class.SkThreadPool.24** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  tail call void @_ZN8SkTArrayINSt3__16threadELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %0, i32 1, i32 1) #17
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  %5 = load %"class.std::__1::thread"*, %"class.std::__1::thread"** %4, align 8
  %6 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = and i64 %8, 2147483647
  %10 = getelementptr inbounds %"class.std::__1::thread", %"class.std::__1::thread"* %5, i64 %9
  %11 = add i64 %7, 2
  %12 = and i64 %11, 4294967294
  %13 = and i64 %7, -4294967295
  %14 = or i64 %12, %13
  store i64 %14, i64* %6, align 8
  %15 = tail call i8* @_Znwm(i64 8) #18
  %16 = bitcast i8* %15 to %"class.std::__1::__thread_struct"*
  tail call void @_ZNSt3__115__thread_structC1Ev(%"class.std::__1::__thread_struct"* nonnull %16) #17
  %17 = ptrtoint i8* %15 to i64
  %18 = tail call i8* @_Znwm(i64 24) #18
  %19 = bitcast void (i8*)** %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %class.SkThreadPool.24** %2 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast i8* %18 to i64*
  store i64 %17, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %18, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %20, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %18, i64 16
  %27 = bitcast i8* %26 to i64*
  store i64 %22, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::thread", %"class.std::__1::thread"* %10, i64 0, i32 0
  %29 = tail call i32 @pthread_create(i64* %28, %union.pthread_attr_t* null, i8* (i8*)* nonnull @_ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvPvEP12SkThreadPoolI8SkTArrayINS_8functionIFvvEEELb0EEEEEEEES7_S7_, i8* nonnull %18) #17
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %3
  tail call void @_ZNSt3__120__throw_system_errorEiPKc(i32 %29, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0)) #16
  unreachable

32:                                               ; preds = %3
  ret %"class.std::__1::thread"* %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE4LoopEPv(i8*) #4 comdat align 2 {
  %2 = bitcast i8* %0 to %class.SkThreadPool.24*
  %3 = getelementptr inbounds i8, i8* %0, i64 56
  %4 = bitcast i8* %3 to i32*
  %5 = bitcast i8* %3 to %class.SkSemaphore*
  br label %6

6:                                                ; preds = %10, %1
  %7 = atomicrmw sub i32* %4, i32 1 acquire
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %5) #17
  br label %10

10:                                               ; preds = %6, %9
  %11 = tail call zeroext i1 @_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE7do_workEv(%class.SkThreadPool.24* %2)
  br i1 %11, label %6, label %12

12:                                               ; preds = %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEED2Ev(%class.SkThreadPool.24*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::__1::function", align 8
  %3 = getelementptr inbounds %class.SkThreadPool.24, %class.SkThreadPool.24* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkThreadPool.24, %class.SkThreadPool.24* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.SkThreadPool.24, %class.SkThreadPool.24* %0, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %33, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  br label %18

13:                                               ; preds = %26
  %14 = and i64 %28, 4294967294
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %33, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %4, i64 0, i32 0
  br label %92

18:                                               ; preds = %9, %26
  %19 = phi i32 [ 0, %9 ], [ %27, %26 ]
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %10, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %11, align 8
  call void @_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE3addES4_(%class.SkThreadPool.24* %0, %"class.std::__1::function"* nonnull %2)
  %20 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %11, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %20, i64 0, i32 1
  %22 = load void (i8*)*, void (i8*)** %21, align 8
  %23 = icmp eq void (i8*)* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %18
  %25 = load i8*, i8** %12, align 8
  call void %22(i8* %25) #17
  br label %26

26:                                               ; preds = %18, %24
  %27 = add nuw nsw i32 %19, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = trunc i64 %29 to i32
  %31 = and i32 %30, 2147483647
  %32 = icmp ult i32 %27, %31
  br i1 %32, label %18, label %13

33:                                               ; preds = %92, %1, %13
  %34 = getelementptr inbounds %class.SkThreadPool.24, %class.SkThreadPool.24* %0, i64 0, i32 4
  call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %34) #17
  %35 = getelementptr inbounds %class.SkThreadPool.24, %class.SkThreadPool.24* %0, i64 0, i32 3, i32 0
  call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %35) #17
  %36 = getelementptr inbounds %class.SkThreadPool.24, %class.SkThreadPool.24* %0, i64 0, i32 2
  %37 = getelementptr inbounds %class.SkThreadPool.24, %class.SkThreadPool.24* %0, i64 0, i32 2, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 4294967294
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %class.SkTArray.25, %class.SkTArray.25* %36, i64 0, i32 0
  br label %47

43:                                               ; preds = %60, %33
  %44 = phi i64 [ %38, %33 ], [ %61, %60 ]
  %45 = and i64 %44, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %69, label %66

47:                                               ; preds = %60, %41
  %48 = phi i64 [ %38, %41 ], [ %61, %60 ]
  %49 = phi i64 [ 0, %41 ], [ %62, %60 ]
  %50 = load %"class.std::__1::function"*, %"class.std::__1::function"** %42, align 8
  %51 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %50, i64 %49, i32 0, i32 2
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %50, i64 %49, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void %54(i8* %58) #17
  %59 = load i64, i64* %37, align 8
  br label %60

60:                                               ; preds = %56, %47
  %61 = phi i64 [ %48, %47 ], [ %59, %56 ]
  %62 = add nuw nsw i64 %49, 1
  %63 = lshr i64 %61, 1
  %64 = and i64 %63, 2147483647
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %47, label %43

66:                                               ; preds = %43
  %67 = bitcast %class.SkTArray.25* %36 to i8**
  %68 = load i8*, i8** %67, align 8
  call void @_Z7sk_freePv(i8* %68) #17
  br label %69

69:                                               ; preds = %43, %66
  %70 = load i64, i64* %5, align 8
  %71 = and i64 %70, 4294967294
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %4, i64 0, i32 0
  br label %79

75:                                               ; preds = %79, %69
  %76 = phi i64 [ %70, %69 ], [ %84, %79 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %91, label %88

79:                                               ; preds = %79, %73
  %80 = phi i64 [ 0, %73 ], [ %83, %79 ]
  %81 = load %"class.std::__1::thread"*, %"class.std::__1::thread"** %74, align 8
  %82 = getelementptr inbounds %"class.std::__1::thread", %"class.std::__1::thread"* %81, i64 %80
  call void @_ZNSt3__16threadD1Ev(%"class.std::__1::thread"* %82) #17
  %83 = add nuw nsw i64 %80, 1
  %84 = load i64, i64* %5, align 8
  %85 = lshr i64 %84, 1
  %86 = and i64 %85, 2147483647
  %87 = icmp ult i64 %83, %86
  br i1 %87, label %79, label %75

88:                                               ; preds = %75
  %89 = bitcast %class.SkTArray* %4 to i8**
  %90 = load i8*, i8** %89, align 8
  call void @_Z7sk_freePv(i8* %90) #17
  br label %91

91:                                               ; preds = %75, %88
  ret void

92:                                               ; preds = %16, %92
  %93 = phi i64 [ 0, %16 ], [ %96, %92 ]
  %94 = load %"class.std::__1::thread"*, %"class.std::__1::thread"** %17, align 8
  %95 = getelementptr inbounds %"class.std::__1::thread", %"class.std::__1::thread"* %94, i64 %93
  call void @_ZNSt3__16thread4joinEv(%"class.std::__1::thread"* %95) #17
  %96 = add nuw nsw i64 %93, 1
  %97 = load i64, i64* %5, align 8
  %98 = lshr i64 %97, 1
  %99 = and i64 %98, 2147483647
  %100 = icmp ult i64 %96, %99
  br i1 %100, label %92, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEED0Ev(%class.SkThreadPool.24*) unnamed_addr #4 comdat align 2 {
  tail call void @_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEED2Ev(%class.SkThreadPool.24* %0) #17
  %2 = bitcast %class.SkThreadPool.24* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE3addES4_(%class.SkThreadPool.24*, %"class.std::__1::function"*) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %class.SkThreadPool.24, %class.SkThreadPool.24* %0, i64 0, i32 3
  %4 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = atomicrmw sub i32* %4, i32 1 acquire
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %8) #17
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %class.SkThreadPool.24, %class.SkThreadPool.24* %0, i64 0, i32 2
  tail call void @_ZN8SkTArrayINSt3__18functionIFvvEEELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.25* %10, i32 1, i32 1) #17
  %11 = getelementptr inbounds %class.SkTArray.25, %class.SkTArray.25* %10, i64 0, i32 0
  %12 = load %"class.std::__1::function"*, %"class.std::__1::function"** %11, align 8
  %13 = getelementptr inbounds %class.SkThreadPool.24, %class.SkThreadPool.24* %0, i64 0, i32 2, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = lshr i64 %14, 1
  %16 = and i64 %15, 2147483647
  %17 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %12, i64 %16
  %18 = bitcast %"class.std::__1::function"* %17 to i8*
  %19 = add i64 %14, 2
  %20 = and i64 %19, 4294967294
  %21 = and i64 %14, -4294967295
  %22 = or i64 %20, %21
  store i64 %22, i64* %13, align 8
  %23 = bitcast %"class.std::__1::function"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %23, i64 16, i1 false) #17
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %12, i64 %16, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::__function::__policy_invoker"* %25 to i64*
  %27 = bitcast %"struct.std::__1::__function::__policy_invoker"* %24 to i64*
  %28 = load i64, i64* %26, align 8
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %12, i64 %16, i32 0, i32 2
  %30 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 2
  %31 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %30, align 8
  store %"struct.std::__1::__function::__policy"* %31, %"struct.std::__1::__function::__policy"** %29, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %31, i64 0, i32 1
  %33 = load void (i8*)*, void (i8*)** %32, align 8
  %34 = icmp eq void (i8*)* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %9
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %30, align 8
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %26, align 8
  br label %36

36:                                               ; preds = %9, %35
  %37 = atomicrmw add i32* %4, i32 1 release
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %40, i32 1) #17
  br label %41

41:                                               ; preds = %36, %39
  %42 = getelementptr inbounds %class.SkThreadPool.24, %class.SkThreadPool.24* %0, i64 0, i32 4
  %43 = getelementptr inbounds %class.SkSemaphore, %class.SkSemaphore* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 1 release
  %45 = icmp slt i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %41
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %42, i32 1) #17
  br label %47

47:                                               ; preds = %41, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE6borrowEv(%class.SkThreadPool.24*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkThreadPool.24, %class.SkThreadPool.24* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkThreadPool.24, %class.SkThreadPool.24* %0, i64 0, i32 4
  %7 = tail call zeroext i1 @_ZN11SkSemaphore8try_waitEv(%class.SkSemaphore* %6) #17
  br i1 %7, label %8, label %10

8:                                                ; preds = %5
  %9 = tail call zeroext i1 @_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE7do_workEv(%class.SkThreadPool.24* %0)
  br label %10

10:                                               ; preds = %1, %8, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvPvEP12SkThreadPoolI8SkTArrayINS_8functionIFvvEEELb0EEEEEEEES7_S7_(i8*) #4 comdat {
  %2 = tail call dereferenceable(4) %"class.std::__1::__thread_specific_ptr"* @_ZNSt3__119__thread_local_dataEv() #17
  %3 = bitcast i8* %0 to %"class.std::__1::__thread_struct"**
  %4 = bitcast i8* %0 to i8**
  %5 = load i8*, i8** %4, align 8
  store %"class.std::__1::__thread_struct"* null, %"class.std::__1::__thread_struct"** %3, align 8
  %6 = getelementptr inbounds %"class.std::__1::__thread_specific_ptr", %"class.std::__1::__thread_specific_ptr"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = tail call i32 @pthread_setspecific(i32 %7, i8* %5) #17
  %9 = getelementptr inbounds i8, i8* %0, i64 8
  %10 = bitcast i8* %9 to void (i8*)**
  %11 = getelementptr inbounds i8, i8* %0, i64 16
  %12 = load void (i8*)*, void (i8*)** %10, align 8
  %13 = bitcast i8* %11 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void %12(i8* %14) #17
  %15 = icmp eq i8* %0, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %1
  %17 = load %"class.std::__1::__thread_struct"*, %"class.std::__1::__thread_struct"** %3, align 8
  store %"class.std::__1::__thread_struct"* null, %"class.std::__1::__thread_struct"** %3, align 8
  %18 = icmp eq %"class.std::__1::__thread_struct"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %16
  tail call void @_ZNSt3__115__thread_structD1Ev(%"class.std::__1::__thread_struct"* nonnull %17) #17
  %20 = bitcast %"class.std::__1::__thread_struct"* %17 to i8*
  tail call void @_ZdlPv(i8* %20) #18
  br label %21

21:                                               ; preds = %19, %16
  tail call void @_ZdlPv(i8* nonnull %0) #18
  br label %22

22:                                               ; preds = %1, %21
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkThreadPoolI8SkTArrayINSt3__18functionIFvvEEELb0EEE7do_workEv(%class.SkThreadPool.24*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::__1::function", align 16
  %3 = bitcast %"class.std::__1::function"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #17
  %4 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::function"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 16, i1 false)
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %5, align 16
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %6, align 8
  %8 = getelementptr inbounds %class.SkThreadPool.24, %class.SkThreadPool.24* %0, i64 0, i32 3
  %9 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acquire
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %8, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %13) #17
  br label %14

14:                                               ; preds = %1, %12
  %15 = getelementptr inbounds %class.SkThreadPool.24, %class.SkThreadPool.24* %0, i64 0, i32 2
  %16 = getelementptr inbounds %class.SkTArray.25, %class.SkTArray.25* %15, i64 0, i32 0
  %17 = load %"class.std::__1::function"*, %"class.std::__1::function"** %16, align 8, !noalias !13
  %18 = getelementptr inbounds %class.SkThreadPool.24, %class.SkThreadPool.24* %0, i64 0, i32 2, i32 1
  %19 = load i64, i64* %18, align 8, !noalias !13
  %20 = lshr i64 %19, 1
  %21 = and i64 %20, 2147483647
  %22 = add nsw i64 %21, -1
  %23 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 %22
  %24 = bitcast %"class.std::__1::function"* %23 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 %22, i32 0, i32 1
  %27 = bitcast %"struct.std::__1::__function::__policy_invoker"* %26 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !13
  %29 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 %22, i32 0, i32 2
  %30 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %29, align 8, !noalias !13
  %31 = ptrtoint %"struct.std::__1::__function::__policy"* %30 to i64
  %32 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %30, i64 0, i32 1
  %33 = load void (i8*)*, void (i8*)** %32, align 8, !noalias !13
  %34 = icmp eq void (i8*)* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %14
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %29, align 8, !noalias !13
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %27, align 8, !noalias !13
  %36 = load i64, i64* %18, align 8, !noalias !13
  %37 = load %"class.std::__1::function"*, %"class.std::__1::function"** %16, align 8, !noalias !13
  %38 = lshr i64 %36, 1
  %39 = and i64 %38, 2147483647
  br label %40

40:                                               ; preds = %35, %14
  %41 = phi i64 [ %21, %14 ], [ %39, %35 ]
  %42 = phi %"class.std::__1::function"* [ %17, %14 ], [ %37, %35 ]
  %43 = phi i64 [ %19, %14 ], [ %36, %35 ]
  %44 = add nuw nsw i64 %41, 4294967295
  %45 = shl nuw nsw i64 %44, 1
  %46 = and i64 %45, 4294967294
  %47 = and i64 %43, -4294967295
  %48 = or i64 %46, %47
  store i64 %48, i64* %18, align 8, !noalias !13
  %49 = and i64 %44, 2147483647
  %50 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %42, i64 %49, i32 0, i32 2
  %51 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %50, align 8, !noalias !13
  %52 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %51, i64 0, i32 1
  %53 = load void (i8*)*, void (i8*)** %52, align 8, !noalias !13
  %54 = icmp eq void (i8*)* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %40
  %56 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %42, i64 %49, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8, !noalias !13
  tail call void %53(i8* %57) #17, !noalias !13
  br label %58

58:                                               ; preds = %40, %55
  tail call void @_ZN8SkTArrayINSt3__18functionIFvvEEELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.25* %15, i32 0, i32 2) #17, !noalias !13
  %59 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %6, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %6, align 8
  %60 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1
  %61 = bitcast %"struct.std::__1::__function::__policy_invoker"* %60 to i64*
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %61, align 16
  %62 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %59, i64 0, i32 1
  %63 = load void (i8*)*, void (i8*)** %62, align 8
  %64 = icmp eq void (i8*)* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %58
  %66 = load i8*, i8** %4, align 16
  tail call void %63(i8* %66) #17
  br label %67

67:                                               ; preds = %65, %58
  %68 = bitcast %"class.std::__1::function"* %2 to <2 x i64>*
  store <2 x i64> %25, <2 x i64>* %68, align 16
  store i64 %28, i64* %61, align 16
  %69 = bitcast %"struct.std::__1::__function::__policy"** %6 to i64*
  store i64 %31, i64* %69, align 8
  %70 = atomicrmw add i32* %9, i32 1 release
  %71 = icmp slt i32 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %67
  %73 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %8, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %73, i32 1) #17
  br label %74

74:                                               ; preds = %67, %72
  %75 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %6, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %75, i64 0, i32 2
  %77 = load i8, i8* %76, align 8, !range !3
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %74
  %80 = load void (%"union.std::__1::__function::__policy_storage"*)*, void (%"union.std::__1::__function::__policy_storage"*)** %5, align 16
  %81 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0
  call void %80(%"union.std::__1::__function::__policy_storage"* nonnull %81) #17
  %82 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %6, align 8
  br label %83

83:                                               ; preds = %74, %79
  %84 = phi %"struct.std::__1::__function::__policy"* [ %82, %79 ], [ %75, %74 ]
  %85 = phi i1 [ true, %79 ], [ false, %74 ]
  %86 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %84, i64 0, i32 1
  %87 = load void (i8*)*, void (i8*)** %86, align 8
  %88 = icmp eq void (i8*)* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %83
  %90 = load i8*, i8** %4, align 16
  call void %87(i8* %90) #17
  br label %91

91:                                               ; preds = %83, %89
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #17
  ret i1 %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__18functionIFvvEEELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.25*, i32, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.25, %class.SkTArray.25* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %98

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %98, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 32) #17
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %86, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.25, %class.SkTArray.25* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %80, %48
  %51 = phi i64 [ 0, %48 ], [ %81, %80 ]
  %52 = shl nuw nsw i64 %51, 5
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::function"*, %"class.std::__1::function"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %54, i64 %51
  %56 = bitcast %"class.std::__1::function"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %56, i64 16, i1 false) #17
  %57 = getelementptr inbounds i8, i8* %53, i64 16
  %58 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %54, i64 %51, i32 0, i32 1
  %59 = bitcast %"struct.std::__1::__function::__policy_invoker"* %58 to i64*
  %60 = bitcast i8* %57 to i64*
  %61 = load i64, i64* %59, align 8
  store i64 %61, i64* %60, align 8
  %62 = getelementptr inbounds i8, i8* %53, i64 24
  %63 = bitcast i8* %62 to %"struct.std::__1::__function::__policy"**
  %64 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %54, i64 %51, i32 0, i32 2
  %65 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %64, align 8
  store %"struct.std::__1::__function::__policy"* %65, %"struct.std::__1::__function::__policy"** %63, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %65, i64 0, i32 1
  %67 = load void (i8*)*, void (i8*)** %66, align 8
  %68 = icmp eq void (i8*)* %67, null
  br i1 %68, label %70, label %69

69:                                               ; preds = %50
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %64, align 8
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %59, align 8
  br label %70

70:                                               ; preds = %69, %50
  %71 = load %"class.std::__1::function"*, %"class.std::__1::function"** %49, align 8
  %72 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %71, i64 %51, i32 0, i32 2
  %73 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %73, i64 0, i32 1
  %75 = load void (i8*)*, void (i8*)** %74, align 8
  %76 = icmp eq void (i8*)* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %71, i64 %51, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  tail call void %75(i8* %79) #17
  br label %80

80:                                               ; preds = %77, %70
  %81 = add nuw nsw i64 %51, 1
  %82 = load i64, i64* %4, align 8
  %83 = lshr i64 %82, 1
  %84 = and i64 %83, 2147483647
  %85 = icmp ult i64 %81, %84
  br i1 %85, label %50, label %86

86:                                               ; preds = %80, %35
  %87 = phi i64 [ %45, %35 ], [ %82, %80 ]
  %88 = and i64 %87, 1
  %89 = icmp eq i64 %88, 0
  %90 = bitcast %class.SkTArray.25* %0 to i8**
  br i1 %89, label %94, label %91

91:                                               ; preds = %86
  %92 = load i8*, i8** %90, align 8
  tail call void @_Z7sk_freePv(i8* %92) #17
  %93 = load i64, i64* %4, align 8
  br label %94

94:                                               ; preds = %86, %91
  %95 = phi i64 [ %93, %91 ], [ %87, %86 ]
  store i8* %44, i8** %90, align 8
  %96 = and i64 %95, -4294967298
  %97 = or i64 %96, 1
  store i64 %97, i64* %4, align 8
  br label %98

98:                                               ; preds = %94, %32, %21
  ret void
}

attributes #0 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold noreturn nounwind }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nofree nounwind }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { noreturn nounwind }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZL3popPNSt3__15dequeINS_8functionIFvvEEENS_9allocatorIS3_EEEE: argument 0"}
!6 = distinct !{!6, !"_ZL3popPNSt3__15dequeINS_8functionIFvvEEENS_9allocatorIS3_EEEE"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = distinct !{!9, !8}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !8}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZL3popP8SkTArrayINSt3__18functionIFvvEEELb0EE: argument 0"}
!15 = distinct !{!15, !"_ZL3popP8SkTArrayINSt3__18functionIFvvEEELb0EE"}
