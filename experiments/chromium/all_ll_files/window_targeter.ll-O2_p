; ModuleID = '../../ui/aura/window_targeter.cc'
source_filename = "../../ui/aura/window_targeter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.aura::WindowTargeter" = type { %"class.ui::EventTargeter", %"class.aura::Window"*, %"class.gfx::Insets", %"class.gfx::Insets" }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.344", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.390", %"class.std::__1::unique_ptr.351", %"class.std::__1::vector.51", i32, i32, i32, [4 x i8], %"class.base::ObserverList.396", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.408", %"class.base::WeakPtr.414" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList.270" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type { %"class.ui::LayerAnimationDelegate", %"class.cc::ContentLayerClient", %"class.cc::TextureLayerClient", i32, %"class.ui::Compositor"*, %"class.ui::Layer"*, %"class.std::__1::vector.180", %"class.std::__1::vector.187", %"class.ui::Layer"*, %"class.base::internal::flat_tree.195", i8, i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.196", i8, i8, i8, i8, %"class.cc::Region", %"class.cc::Region", float, float, float, float, i8, float, %"class.ui::Layer"*, %"class.ui::Layer"*, float, i32, %"class.std::__1::unique_ptr.202", %"class.std::__1::basic_string", %"class.ui::LayerDelegate"*, %"class.base::ObserverList.208", %"class.ui::LayerOwner"*, %class.scoped_refptr.212, %class.scoped_refptr.236, %class.scoped_refptr.237, %class.scoped_refptr.238, %class.scoped_refptr.239, %class.scoped_refptr.240, %class.scoped_refptr.241, %"class.cc::Layer"*, float, %"class.gfx::ImageSkia", %"class.gfx::Rect", %"struct.viz::TransferableResource", %"class.base::OnceCallback", %"class.gfx::Size", i32, i32, float, i32, %"class.base::WeakPtrFactory.266" }
%"class.ui::LayerAnimationDelegate" = type { i32 (...)** }
%"class.cc::ContentLayerClient" = type { i32 (...)** }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%"class.ui::Compositor" = type { %"class.cc::LayerTreeHostClient", %"class.cc::LayerTreeHostSingleThreadClient", %"class.viz::HostFrameSinkClient", %"class.ui::ThroughputTrackerHost", %"class.gfx::Size", %"class.ui::ContextFactory"*, %"class.viz::mojom::DisplayPrivate"*, %"class.viz::mojom::ExternalBeginFrameController"*, %"class.std::__1::unique_ptr.0", %"class.ui::Layer"*, %"class.base::ObserverList", %"class.base::ObserverList.7", i32, i32, float, [4 x i8], %"class.std::__1::unordered_set", i8, i8, %"class.viz::FrameSinkId", %class.scoped_refptr, %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.112", %"class.base::WeakPtr", %class.scoped_refptr.125, %"class.base::TimeTicks", %"class.base::TimeDelta", i8, i8, i8, float, %"class.ui::LayerAnimatorCollection", %class.scoped_refptr.135, %"class.std::__1::unique_ptr.136", %class.SkMatrix44, %"class.gfx::DisplayColorSpaces", i8, i8, %"class.ui::CompositorLockManager", %"class.std::__1::unique_ptr.163", i8, i64, %"class.base::flat_map.169", %"class.base::WeakPtrFactory.179", %"class.base::WeakPtrFactory.179" }
%"class.cc::LayerTreeHostClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSingleThreadClient" = type { i32 (...)** }
%"class.ui::ThroughputTrackerHost" = type { i32 (...)** }
%"class.ui::ContextFactory" = type { i32 (...)** }
%"class.viz::mojom::DisplayPrivate" = type opaque
%"class.viz::mojom::ExternalBeginFrameController" = type opaque
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.ui::PendingBeginFrameArgs"* }
%"struct.ui::PendingBeginFrameArgs" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.4" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.7" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.8", i64, i32, [4 x i8] }>
%"class.base::LinkedList.8" = type { %"class.base::LinkNode.9" }
%"class.base::LinkNode.9" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.11", %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.27", [4 x i8] }>
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i64 }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { float }
%class.scoped_refptr = type { %"class.cc::Layer"* }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.cc::AnimationHost"* }
%"class.cc::AnimationHost" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.cc::LayerTreeHost"* }
%"class.cc::LayerTreeHost" = type { %"class.cc::MutatorHostClient", %"class.cc::MicroBenchmarkController", %"class.base::WeakPtr.423", %class.scoped_refptr.424, %"class.std::__1::unique_ptr.425", i32, %"class.std::__1::unique_ptr.431", %"class.cc::LayerTreeHostClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.std::__1::unique_ptr.437", %"class.std::__1::unique_ptr.443", i32, %"class.std::__1::unique_ptr.449", %"class.cc::SwapPromiseManager", %"class.std::__1::unique_ptr.473", %"class.std::__1::unique_ptr.473", %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeDebugState", i8, i8, i8, i32, i8, i8, i8, %"class.cc::TaskGraphRunner"*, %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"*, i32, %class.scoped_refptr, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.cc::OverscrollBehavior", %"struct.cc::BrowserControlsParams", float, float, float, float, float, float, float, float, float, i8, i8, %"class.gfx::DisplayColorSpaces", i8, %"class.viz::LocalSurfaceId", i8, i32, i32, i32, %"struct.viz::Selection", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", i8, i8, [4 x i32], %"class.std::__1::unique_ptr.488", i8, %"class.cc::PropertyTrees", i8, i8, %"class.gfx::Vector2dF", %class.scoped_refptr.636, %"class.base::flat_map.637", %"class.base::internal::flat_tree.647", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.678", i8, i8, %"class.cc::MutatorHost"*, %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::vector.704", %"class.std::__1::unordered_map.712", %"class.std::__1::vector.736", %"struct.cc::LayerTreeHost::ScrollAnimationState", %"class.std::__1::unique_ptr.744", %"class.base::TimeTicks", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.771", %"class.base::flat_map.779", %"class.base::WeakPtrFactory.789" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::MicroBenchmarkController" = type { %"class.cc::LayerTreeHost"*, %"class.std::__1::vector.415", %class.scoped_refptr.125 }
%"class.std::__1::vector.415" = type { %"class.std::__1::__vector_base.416" }
%"class.std::__1::__vector_base.416" = type { %"class.std::__1::unique_ptr.417"*, %"class.std::__1::unique_ptr.417"*, %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::unique_ptr.417" = type opaque
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.std::__1::unique_ptr.417"* }
%"class.base::WeakPtr.423" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.118 }
%class.scoped_refptr.118 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.119", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.119" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.120" }
%"struct.std::__1::atomic.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__cxx_atomic_impl.123" }
%"struct.std::__1::__cxx_atomic_impl.123" = type { %"struct.std::__1::__cxx_atomic_base_impl.124" }
%"struct.std::__1::__cxx_atomic_base_impl.124" = type { i8 }
%class.scoped_refptr.424 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.126" }>
%"class.base::RefCountedThreadSafe.126" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.cc::UkmRecorderFactory"* }
%"class.cc::UkmRecorderFactory" = type opaque
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.cc::UIResourceManager"* }
%"class.cc::UIResourceManager" = type opaque
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.cc::Proxy"* }
%"class.cc::Proxy" = type { i32 (...)** }
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.cc::TaskRunnerProvider"* }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr.125, %class.scoped_refptr.125 }
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.cc::RenderingStatsInstrumentation"* }
%"class.cc::RenderingStatsInstrumentation" = type opaque
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector.455", %"class.std::__1::set.463" }
%"class.std::__1::vector.455" = type { %"class.std::__1::__vector_base.456" }
%"class.std::__1::__vector_base.456" = type { %"class.std::__1::unique_ptr.457"*, %"class.std::__1::unique_ptr.457"*, %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.std::__1::unique_ptr.457"* }
%"class.std::__1::set.463" = type { %"class.std::__1::__tree.464" }
%"class.std::__1::__tree.464" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.465", %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.cc::LayerTreeFrameSink"* }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.476, %class.scoped_refptr.477, %class.scoped_refptr.125, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.478", i64, %"class.base::WeakPtrFactory.484" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type opaque
%class.scoped_refptr.476 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.477 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory.484" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.162 }
%class.scoped_refptr.162 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.cc::TaskGraphRunner" = type opaque
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.494", %"class.base::flat_map.494", %"class.base::flat_map.494", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.494" = type { %"class.base::internal::flat_tree.495" }
%"class.base::internal::flat_tree.495" = type { %"class.std::__1::vector.496" }
%"class.std::__1::vector.496" = type { %"class.std::__1::__vector_base.497" }
%"class.std::__1::__vector_base.497" = type { %"struct.std::__1::pair.498"*, %"struct.std::__1::pair.498"*, %"class.std::__1::__compressed_pair.499" }
%"struct.std::__1::pair.498" = type opaque
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"struct.std::__1::pair.498"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.511", %"class.std::__1::vector.518", %"class.std::__1::vector.525" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.504", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.504" = type { %"class.std::__1::__vector_base.505" }
%"class.std::__1::__vector_base.505" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.506" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.511" = type { %"class.std::__1::__vector_base.512" }
%"class.std::__1::__vector_base.512" = type { i32*, i32*, %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { i32* }
%"class.std::__1::vector.518" = type { %"class.std::__1::__vector_base.519" }
%"class.std::__1::__vector_base.519" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.520" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.525" = type { %"class.std::__1::__vector_base.526" }
%"class.std::__1::__vector_base.526" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.527" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.532", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.571" }
%"class.cc::PropertyTree.532" = type { i32 (...)**, %"class.std::__1::vector.533", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.533" = type { %"class.std::__1::__vector_base.534" }
%"class.std::__1::__vector_base.534" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.543" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.63", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.47" }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.58" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.51", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.50, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.50 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.535" }
%"class.base::internal::flat_tree.535" = type { %"class.std::__1::vector.536" }
%"class.std::__1::vector.536" = type { %"class.std::__1::__vector_base.537" }
%"class.std::__1::__vector_base.537" = type { i32*, i32*, %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { i32* }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.548" }
%"class.std::__1::__hash_table.548" = type <{ %"class.std::__1::unique_ptr.549", %"class.std::__1::__compressed_pair.559", %"class.std::__1::__compressed_pair.564", %"class.std::__1::__compressed_pair.566", [4 x i8] }>
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551", %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"struct.std::__1::__hash_node_base.552"** }
%"struct.std::__1::__hash_node_base.552" = type { %"struct.std::__1::__hash_node_base.552"* }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.std::__1::__bucket_list_deallocator.554" }
%"class.std::__1::__bucket_list_deallocator.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"struct.std::__1::__hash_node_base.552" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::vector.571" = type { %"class.std::__1::__vector_base.572" }
%"class.std::__1::__vector_base.572" = type { %"class.std::__1::unique_ptr.573"*, %"class.std::__1::unique_ptr.573"*, %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::unique_ptr.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type opaque
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.std::__1::unique_ptr.573"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.584" }
%"class.cc::PropertyTree.584" = type { i32 (...)**, %"class.std::__1::vector.585", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.585" = type { %"class.std::__1::__vector_base.586" }
%"class.std::__1::__vector_base.586" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.587" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.592", i32, %"class.base::flat_map.600", %"class.base::flat_map.610", %"class.base::WeakPtr.620" }
%"class.cc::PropertyTree.592" = type { i32 (...)**, %"class.std::__1::vector.593", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.593" = type { %"class.std::__1::__vector_base.594" }
%"class.std::__1::__vector_base.594" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.595" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.600" = type { %"class.base::internal::flat_tree.601" }
%"class.base::internal::flat_tree.601" = type { %"class.std::__1::vector.602" }
%"class.std::__1::vector.602" = type { %"class.std::__1::__vector_base.603" }
%"class.std::__1::__vector_base.603" = type { %"struct.std::__1::pair.604"*, %"struct.std::__1::pair.604"*, %"class.std::__1::__compressed_pair.605" }
%"struct.std::__1::pair.604" = type opaque
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"struct.std::__1::pair.604"* }
%"class.base::flat_map.610" = type { %"class.base::internal::flat_tree.611" }
%"class.base::internal::flat_tree.611" = type { %"class.std::__1::vector.612" }
%"class.std::__1::vector.612" = type { %"class.std::__1::__vector_base.613" }
%"class.std::__1::__vector_base.613" = type { %"struct.std::__1::pair.614"*, %"struct.std::__1::pair.614"*, %"class.std::__1::__compressed_pair.615" }
%"struct.std::__1::pair.614" = type opaque
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"struct.std::__1::pair.614"* }
%"class.base::WeakPtr.620" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.621", %"class.std::__1::vector.628" }
%"class.std::__1::vector.621" = type { %"class.std::__1::__vector_base.622" }
%"class.std::__1::__vector_base.622" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.623" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.628" = type { %"class.std::__1::__vector_base.629" }
%"class.std::__1::__vector_base.629" = type { %"class.std::__1::vector.630"*, %"class.std::__1::vector.630"*, %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::vector.630" = type opaque
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.std::__1::vector.630"* }
%"class.gfx::Vector2dF" = type { float, float }
%class.scoped_refptr.636 = type { %"class.cc::HeadsUpDisplayLayer"* }
%"class.cc::HeadsUpDisplayLayer" = type opaque
%"class.base::flat_map.637" = type { %"class.base::internal::flat_tree.638" }
%"class.base::internal::flat_tree.638" = type { %"class.std::__1::vector.639" }
%"class.std::__1::vector.639" = type { %"class.std::__1::__vector_base.640" }
%"class.std::__1::__vector_base.640" = type { %"struct.std::__1::pair.641"*, %"struct.std::__1::pair.641"*, %"class.std::__1::__compressed_pair.642" }
%"struct.std::__1::pair.641" = type opaque
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"struct.std::__1::pair.641"* }
%"class.base::internal::flat_tree.647" = type { %"class.std::__1::vector.648" }
%"class.std::__1::vector.648" = type { %"class.std::__1::__vector_base.649" }
%"class.std::__1::__vector_base.649" = type { %"class.cc::Layer"**, %"class.cc::Layer"**, %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.cc::Layer"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.655" }
%"class.std::__1::__hash_table.655" = type <{ %"class.std::__1::unique_ptr.656", %"class.std::__1::__compressed_pair.666", %"class.std::__1::__compressed_pair.671", %"class.std::__1::__compressed_pair.674", [4 x i8] }>
%"class.std::__1::unique_ptr.656" = type { %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658", %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"struct.std::__1::__hash_node_base.659"** }
%"struct.std::__1::__hash_node_base.659" = type { %"struct.std::__1::__hash_node_base.659"* }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"class.std::__1::__bucket_list_deallocator.661" }
%"class.std::__1::__bucket_list_deallocator.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"struct.std::__1::__hash_node_base.659" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::unordered_map.678" = type { %"class.std::__1::__hash_table.679" }
%"class.std::__1::__hash_table.679" = type <{ %"class.std::__1::unique_ptr.680", %"class.std::__1::__compressed_pair.690", %"class.std::__1::__compressed_pair.695", %"class.std::__1::__compressed_pair.698", [4 x i8] }>
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682", %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"struct.std::__1::__hash_node_base.683"** }
%"struct.std::__1::__hash_node_base.683" = type { %"struct.std::__1::__hash_node_base.683"* }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.std::__1::__bucket_list_deallocator.685" }
%"class.std::__1::__bucket_list_deallocator.685" = type { %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"struct.std::__1::__hash_node_base.683" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::vector.704" = type { %"class.std::__1::__vector_base.705" }
%"class.std::__1::__vector_base.705" = type { %"struct.std::__1::pair.706"*, %"struct.std::__1::pair.706"*, %"class.std::__1::__compressed_pair.707" }
%"struct.std::__1::pair.706" = type opaque
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"struct.std::__1::pair.706"* }
%"class.std::__1::unordered_map.712" = type { %"class.std::__1::__hash_table.713" }
%"class.std::__1::__hash_table.713" = type <{ %"class.std::__1::unique_ptr.714", %"class.std::__1::__compressed_pair.724", %"class.std::__1::__compressed_pair.729", %"class.std::__1::__compressed_pair.732", [4 x i8] }>
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716", %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"struct.std::__1::__hash_node_base.717"** }
%"struct.std::__1::__hash_node_base.717" = type { %"struct.std::__1::__hash_node_base.717"* }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.std::__1::__bucket_list_deallocator.719" }
%"class.std::__1::__bucket_list_deallocator.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"struct.std::__1::__hash_node_base.717" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::vector.736" = type { %"class.std::__1::__vector_base.737" }
%"class.std::__1::__vector_base.737" = type { %"class.base::OnceCallback.738"*, %"class.base::OnceCallback.738"*, %"class.std::__1::__compressed_pair.739" }
%"class.base::OnceCallback.738" = type opaque
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.base::OnceCallback.738"* }
%"struct.cc::LayerTreeHost::ScrollAnimationState" = type { i8, %"class.base::OnceCallback.357" }
%"class.base::OnceCallback.357" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.68 }
%class.scoped_refptr.68 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"struct.cc::BeginMainFrameMetrics"* }
%"struct.cc::BeginMainFrameMetrics" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.750", %"class.std::__1::vector.757" }
%"class.std::__1::vector.750" = type { %"class.std::__1::__vector_base.751" }
%"class.std::__1::__vector_base.751" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.752" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::vector.757" = type { %"class.std::__1::__vector_base.758" }
%"class.std::__1::__vector_base.758" = type { %"class.std::__1::unique_ptr.759"*, %"class.std::__1::unique_ptr.759"*, %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.872", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.872" = type { %"class.absl::optional_internal::optional_data.873" }
%"class.absl::optional_internal::optional_data.873" = type { %"class.absl::optional_internal::optional_data_base.874" }
%"class.absl::optional_internal::optional_data_base.874" = type { %"class.absl::optional_internal::optional_data_dtor_base.875" }
%"class.absl::optional_internal::optional_data_dtor_base.875" = type { i8, %union.anon.876 }
%union.anon.876 = type { i32 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.std::__1::unique_ptr.759"* }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.771" = type { %"class.std::__1::__vector_base.772" }
%"class.std::__1::__vector_base.772" = type { %"class.std::__1::unique_ptr.773"*, %"class.std::__1::unique_ptr.773"*, %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::unique_ptr.773" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.std::__1::unique_ptr.773"* }
%"class.base::flat_map.779" = type { %"class.base::internal::flat_tree.780" }
%"class.base::internal::flat_tree.780" = type { %"class.std::__1::vector.781" }
%"class.std::__1::vector.781" = type { %"class.std::__1::__vector_base.782" }
%"class.std::__1::__vector_base.782" = type { %"struct.std::__1::pair.783"*, %"struct.std::__1::pair.783"*, %"class.std::__1::__compressed_pair.784" }
%"struct.std::__1::pair.783" = type opaque
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"struct.std::__1::pair.783"* }
%"class.base::WeakPtrFactory.789" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.125 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.ui::LayerAnimatorCollection" = type { %"class.ui::CompositorAnimationObserver", %"class.ui::Compositor"*, %"class.base::TimeTicks", %"class.std::__1::set" }
%"class.ui::CompositorAnimationObserver" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%class.scoped_refptr.135 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.ui::ScopedAnimationDurationScaleMode"* }
%"class.ui::ScopedAnimationDurationScaleMode" = type opaque
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.142" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.142" = type { %"class.absl::optional_internal::optional_data.143" }
%"class.absl::optional_internal::optional_data.143" = type { %"class.absl::optional_internal::optional_data_base.144" }
%"class.absl::optional_internal::optional_data_base.144" = type { %"class.absl::optional_internal::optional_data_dtor_base.145" }
%"class.absl::optional_internal::optional_data_dtor_base.145" = type { i8, %union.anon.146 }
%union.anon.146 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.ui::CompositorLockManager" = type { %class.scoped_refptr.125, %"class.base::TimeTicks", i8, %"class.std::__1::vector.147", %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory" }
%"class.std::__1::vector.147" = type { %"class.std::__1::__vector_base.148" }
%"class.std::__1::__vector_base.148" = type { %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"**, %"class.std::__1::__compressed_pair.157" }
%"class.ui::CompositorLock" = type { %"class.ui::CompositorLockClient"*, %"class.std::__1::unique_ptr.149", %"class.base::WeakPtr.156" }
%"class.ui::CompositorLockClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.cc::ScopedDeferMainFrameUpdate"* }
%"class.cc::ScopedDeferMainFrameUpdate" = type { %"class.base::WeakPtr.152" }
%"class.base::WeakPtr.152" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.156" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.ui::CompositorLock"** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.ui::ScrollInputHandler"* }
%"class.ui::ScrollInputHandler" = type opaque
%"class.base::flat_map.169" = type { %"class.base::internal::flat_tree.170" }
%"class.base::internal::flat_tree.170" = type { %"class.std::__1::vector.171" }
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { %"struct.std::__1::pair.173"*, %"struct.std::__1::pair.173"*, %"class.std::__1::__compressed_pair.174" }
%"struct.std::__1::pair.173" = type opaque
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::pair.173"* }
%"class.base::WeakPtrFactory.179" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.ui::Layer"** }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"class.std::__1::unique_ptr.189"*, %"class.std::__1::unique_ptr.189"*, %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::unique_ptr.189" = type opaque
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.std::__1::unique_ptr.189"* }
%"class.base::internal::flat_tree.195" = type { %"class.std::__1::vector.180" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.ui::Layer::SubpixelPositionOffsetCache"* }
%"class.ui::Layer::SubpixelPositionOffsetCache" = type opaque
%"class.cc::Region" = type { %class.SkRegion }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.std::__1::vector.51"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.85 }
%union.anon.85 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ObserverList.208" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.209", i64, i32, [4 x i8] }>
%"class.base::LinkedList.209" = type { %"class.base::LinkNode.210" }
%"class.base::LinkNode.210" = type { %"class.base::internal::LinkNodeBase" }
%class.scoped_refptr.212 = type { %"class.ui::LayerAnimator"* }
%"class.ui::LayerAnimator" = type { %"class.ui::LayerThreadedAnimationDelegate", %"class.base::RefCounted.213", %"class.cc::AnimationDelegate", %"class.base::circular_deque", %"class.ui::LayerAnimationDelegate"*, %class.scoped_refptr.215, %"class.std::__1::vector.216", i32, i8, %"class.base::TimeDelta", i32, %"class.base::TimeTicks", i8, i8, i8, [5 x i8], %"class.base::ObserverList.224", %"class.std::__1::vector.228" }
%"class.ui::LayerThreadedAnimationDelegate" = type { i32 (...)** }
%"class.base::RefCounted.213" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::AnimationDelegate" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.214"*, i64 }
%"class.std::__1::unique_ptr.214" = type opaque
%class.scoped_refptr.215 = type { %"class.cc::Animation"* }
%"class.cc::Animation" = type opaque
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"class.ui::LayerAnimator::RunningAnimation"*, %"class.ui::LayerAnimator::RunningAnimation"*, %"class.std::__1::__compressed_pair.219" }
%"class.ui::LayerAnimator::RunningAnimation" = type { %"class.base::WeakPtr.218" }
%"class.base::WeakPtr.218" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.ui::LayerAnimator::RunningAnimation"* }
%"class.base::ObserverList.224" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.225", i64, i32, [4 x i8] }>
%"class.base::LinkedList.225" = type { %"class.base::LinkNode.226" }
%"class.base::LinkNode.226" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::vector.228" = type { %"class.std::__1::__vector_base.229" }
%"class.std::__1::__vector_base.229" = type { %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"*, %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::unique_ptr.230" = type opaque
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.std::__1::unique_ptr.230"* }
%class.scoped_refptr.236 = type { %"class.cc::PictureLayer"* }
%"class.cc::PictureLayer" = type opaque
%class.scoped_refptr.237 = type { %"class.cc::MirrorLayer"* }
%"class.cc::MirrorLayer" = type opaque
%class.scoped_refptr.238 = type { %"class.cc::NinePatchLayer"* }
%"class.cc::NinePatchLayer" = type opaque
%class.scoped_refptr.239 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%class.scoped_refptr.240 = type { %"class.cc::SolidColorLayer"* }
%"class.cc::SolidColorLayer" = type opaque
%class.scoped_refptr.241 = type { %"class.cc::SurfaceLayer"* }
%"class.cc::SurfaceLayer" = type <{ %"class.cc::Layer", %"class.base::RepeatingCallback.242", i8, [7 x i8], %"class.viz::SurfaceRange", %"class.absl::optional.248", i8, i8, i8, i8, [4 x i8] }>
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.44", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.80" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.30", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.scoped_refptr* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.39" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.63", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.69" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%"class.gfx::Point3F" = type { float, float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"class.std::__1::unique_ptr.71"*, %"class.std::__1::unique_ptr.71"*, %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::unique_ptr.71" = type opaque
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.std::__1::unique_ptr.71"* }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.89", %"class.std::__1::vector.89", %"class.std::__1::vector.96" }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { i8**, i8**, %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { i8** }
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.98" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.base::RepeatingCallback.242" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.243", %"class.viz::SurfaceId" }
%"class.absl::optional.243" = type { %"class.absl::optional_internal::optional_data.244" }
%"class.absl::optional_internal::optional_data.244" = type { %"class.absl::optional_internal::optional_data_base.245" }
%"class.absl::optional_internal::optional_data_base.245" = type { %"class.absl::optional_internal::optional_data_dtor_base.246" }
%"class.absl::optional_internal::optional_data_dtor_base.246" = type { i8, %union.anon.247 }
%union.anon.247 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.absl::optional.248" = type { %"class.absl::optional_internal::optional_data.249" }
%"class.absl::optional_internal::optional_data.249" = type { %"class.absl::optional_internal::optional_data_base.250" }
%"class.absl::optional_internal::optional_data_base.250" = type { %"class.absl::optional_internal::optional_data_dtor_base.251" }
%"class.absl::optional_internal::optional_data_dtor_base.251" = type { i8, %union.anon.252 }
%union.anon.252 = type { i32 }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"struct.viz::TransferableResource" = type { %"class.util::IdType", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.256", i8, i32, i8, [7 x i8], %"class.absl::optional.261" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.254", i64 }
%"class.util::IdType.254" = type { %"class.base::StrongAlias.255" }
%"class.base::StrongAlias.255" = type { i64 }
%"class.absl::optional.256" = type { %"class.absl::optional_internal::optional_data.257" }
%"class.absl::optional_internal::optional_data.257" = type { %"class.absl::optional_internal::optional_data_base.258" }
%"class.absl::optional_internal::optional_data_base.258" = type { %"class.absl::optional_internal::optional_data_dtor_base.259" }
%"class.absl::optional_internal::optional_data_dtor_base.259" = type { i8, %union.anon.260 }
%union.anon.260 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.261" = type { %"class.absl::optional_internal::optional_data.262" }
%"class.absl::optional_internal::optional_data.262" = type { %"class.absl::optional_internal::optional_data_base.263" }
%"class.absl::optional_internal::optional_data_base.263" = type { %"class.absl::optional_internal::optional_data_dtor_base.264" }
%"class.absl::optional_internal::optional_data_dtor_base.264" = type { i8, [7 x i8], %union.anon.265 }
%union.anon.265 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::WeakPtrFactory.266" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ObserverList.270" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.271", i64, i32, [4 x i8] }>
%"class.base::LinkedList.271" = type { %"class.base::LinkNode.272" }
%"class.base::LinkNode.272" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.274", %"class.std::__1::vector.295", %"class.ui::EventHandler"* }
%"class.std::__1::vector.274" = type { %"class.std::__1::__vector_base.275" }
%"class.std::__1::__vector_base.275" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.302" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque.276" }
%"class.base::circular_deque.276" = type { %"class.base::internal::VectorBuffer.277", i64, i64 }
%"class.base::internal::VectorBuffer.277" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.295" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.288" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map.278", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map.278" = type { %"class.base::internal::flat_tree.279" }
%"class.base::internal::flat_tree.279" = type { %"class.std::__1::vector.280" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"struct.std::__1::pair.282"*, %"struct.std::__1::pair.282"*, %"class.std::__1::__compressed_pair.283" }
%"struct.std::__1::pair.282" = type opaque
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"struct.std::__1::pair.282"* }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.base::flat_map.291"* }
%"class.base::flat_map.291" = type opaque
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.307" }
%"class.std::__1::__tree.307" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.308", %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.316" }
%"class.std::__1::map.316" = type { %"class.std::__1::__tree.317" }
%"class.std::__1::__tree.317" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.318", %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.aura::WindowTreeHost" = type { %"class.ui::internal::InputMethodDelegate", %"class.ui::EventSource", %"class.display::DisplayObserver", %"class.ui::CompositorObserver", %"class.aura::Window"*, i32, [4 x i8], %"class.base::ObserverList.330", %"class.std::__1::unique_ptr.334", %"class.std::__1::unique_ptr.372", float, %"class.ui::Cursor", %"class.gfx::Point", %"class.std::__1::unique_ptr.383", %"class.ui::InputMethod"*, i8, i8, i8, %"class.base::WeakPtrFactory.389" }
%"class.ui::internal::InputMethodDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.325" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.display::DisplayObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.329" }
%"class.base::WeakPtrFactory.329" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.ui::CompositorObserver" = type { i32 (...)** }
%"class.base::ObserverList.330" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.331", i64, i32, [4 x i8] }>
%"class.base::LinkedList.331" = type { %"class.base::LinkNode.332" }
%"class.base::LinkNode.332" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.aura::WindowEventDispatcher"* }
%"class.aura::WindowEventDispatcher" = type { %"class.ui::EventProcessor", %"class.ui::GestureEventHelper", %"class.aura::client::CaptureDelegate", %"class.aura::WindowObserver", %"class.aura::EnvObserver", %"class.aura::WindowTreeHost"*, %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, %"class.ui::FractionOfTimeWithoutUserInputRecorder", i8, i8, i32, %"class.std::__1::unique_ptr.338", %"class.std::__1::unique_ptr.338", %"class.ui::LocatedEvent"*, %"class.base::ScopedMultiSourceObservation", %"class.std::__1::unique_ptr.351", i8, %"class.base::OnceCallback.357", %"class.std::__1::queue", i8, %"class.base::WeakPtrFactory.368", %"class.base::WeakPtrFactory.368" }
%"class.ui::EventProcessor" = type { %"class.ui::EventDispatcherDelegate", %"class.ui::EventSink", %"class.base::WeakPtrFactory.337" }
%"class.ui::EventSink" = type { i32 (...)** }
%"class.base::WeakPtrFactory.337" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.ui::GestureEventHelper" = type { i32 (...)** }
%"class.aura::client::CaptureDelegate" = type { i32 (...)** }
%"class.aura::WindowObserver" = type { %"class.base::CheckedObserver" }
%"class.aura::EnvObserver" = type { i32 (...)** }
%"class.ui::FractionOfTimeWithoutUserInputRecorder" = type { i32 (...)**, %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.ui::LocatedEvent"* }
%"class.ui::LocatedEvent" = type { %"class.ui::Event", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.base::ScopedMultiSourceObservation" = type { %"class.aura::WindowObserver"*, %"class.std::__1::vector.344" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.364" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.358"**, %"class.std::__1::unique_ptr.358"**, %"class.std::__1::unique_ptr.358"**, %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::unique_ptr.358" = type opaque
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.std::__1::unique_ptr.358"** }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.base::WeakPtrFactory.368" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.ui::Compositor"* }
%"class.ui::Cursor" = type { i32, %class.scoped_refptr.378, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr.378 = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted.379", [4 x i8] }>
%"class.base::RefCounted.379" = type { %"class.base::subtle::RefCountedBase" }
%class.SkBitmap = type { %class.sk_sp.380, %class.SkPixmap, %class.sk_sp.382 }
%class.sk_sp.380 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.381, i32, i32 }
%class.sk_sp.381 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.120" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.382 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.ui::ViewProp"* }
%"class.ui::ViewProp" = type opaque
%"class.ui::InputMethod" = type opaque
%"class.base::WeakPtrFactory.389" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.aura::WindowDelegate" = type { %"class.ui::EventHandler" }
%"class.std::__1::vector.344" = type { %"class.std::__1::__vector_base.345" }
%"class.std::__1::__vector_base.345" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.aura::WindowTargeter"* }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.396" = type <{ %"class.std::__1::vector.397", %"class.base::LinkedList.405", i64, i32, [4 x i8] }>
%"class.std::__1::vector.397" = type { %"class.std::__1::__vector_base.398" }
%"class.std::__1::__vector_base.398" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.400" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr.399" }
%"class.base::WeakPtr.399" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.405" = type { %"class.base::LinkNode.406" }
%"class.base::LinkNode.406" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.414" = type { %"class.base::internal::WeakPtrBase" }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.ui::TouchEvent" = type <{ %"class.ui::LocatedEvent", i32, i8, i8, [2 x i8], %"struct.ui::PointerDetails", [4 x i8] }>
%"struct.ui::PointerDetails" = type { i32, float, float, float, float, float, float, float, i32, %"class.gfx::Vector2d" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.aura::Env" = type { %"class.ui::EventTarget", %"class.base::SupportsUserData.base", [7 x i8], %"class.base::ObserverList.799", %"class.base::ObserverList.803", %"class.base::ObserverList.807", %"class.std::__1::set.811", %"class.std::__1::unique_ptr.821", i32, %"class.gfx::Point", i8, %"class.std::__1::unique_ptr.827", %"class.std::__1::unique_ptr.833", %"class.std::__1::unique_ptr.839", %"class.std::__1::unique_ptr.845", %"class.ui::ContextFactory"*, i8, %"class.std::__1::unique_ptr.851", %"class.std::__1::vector.857" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.790", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.790" = type { %"class.std::__1::__tree.791" }
%"class.std::__1::__tree.791" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.792", %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::ObserverList.799" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.800", i64, i32, [4 x i8] }>
%"class.base::LinkedList.800" = type { %"class.base::LinkNode.801" }
%"class.base::LinkNode.801" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.803" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.804", i64, i32, [4 x i8] }>
%"class.base::LinkedList.804" = type { %"class.base::LinkNode.805" }
%"class.base::LinkNode.805" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.807" = type <{ %"class.std::__1::vector.397", %"class.base::LinkedList.808", i64, i32, [4 x i8] }>
%"class.base::LinkedList.808" = type { %"class.base::LinkNode.809" }
%"class.base::LinkNode.809" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::set.811" = type { %"class.std::__1::__tree.812" }
%"class.std::__1::__tree.812" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.813", %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::unique_ptr.821" = type { %"class.std::__1::__compressed_pair.822" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"class.aura::EnvInputStateController"* }
%"class.aura::EnvInputStateController" = type opaque
%"class.std::__1::unique_ptr.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.ui::GestureRecognizer"* }
%"class.ui::GestureRecognizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.833" = type { %"class.std::__1::__compressed_pair.834" }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"class.ui::CursorFactory"* }
%"class.ui::CursorFactory" = type opaque
%"class.std::__1::unique_ptr.839" = type { %"class.std::__1::__compressed_pair.840" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"class.aura::InputStateLookup"* }
%"class.aura::InputStateLookup" = type opaque
%"class.std::__1::unique_ptr.845" = type { %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type opaque
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"class.aura::WindowOcclusionTracker"* }
%"class.aura::WindowOcclusionTracker" = type opaque
%"class.std::__1::vector.857" = type { %"class.std::__1::__vector_base.858" }
%"class.std::__1::__vector_base.858" = type { %"class.aura::WindowTreeHost"**, %"class.aura::WindowTreeHost"**, %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"class.aura::WindowTreeHost"** }
%"class.aura::client::FocusClient" = type { i32 (...)** }
%"class.aura::client::EventClient" = type { i32 (...)** }
%"class.ui::EventTargetIterator" = type { i32 (...)** }

@_ZTVN4aura14WindowTargeterE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.aura::WindowTargeter"*)* @_ZN4aura14WindowTargeterD2Ev to i8*), i8* bitcast (void (%"class.aura::WindowTargeter"*)* @_ZN4aura14WindowTargeterD0Ev to i8*), i8* bitcast (%"class.ui::EventTarget"* (%"class.aura::WindowTargeter"*, %"class.ui::EventTarget"*, %"class.ui::Event"*)* @_ZN4aura14WindowTargeter18FindTargetForEventEPN2ui11EventTargetEPNS1_5EventE to i8*), i8* bitcast (%"class.ui::EventTarget"* (%"class.aura::WindowTargeter"*, %"class.ui::EventTarget"*, %"class.ui::Event"*)* @_ZN4aura14WindowTargeter18FindNextBestTargetEPN2ui11EventTargetEPNS1_5EventE to i8*), i8* bitcast (i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)* @_ZN4aura14WindowTargeter31SubtreeShouldBeExploredForEventEPNS_6WindowERKN2ui12LocatedEventE to i8*), i8* bitcast (i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*)* @_ZNK4aura14WindowTargeter15GetHitTestRectsEPNS_6WindowEPN3gfx4RectES5_ to i8*), i8* bitcast (%"class.std::__1::vector.51"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)* @_ZNK4aura14WindowTargeter25GetExtraHitTestShapeRectsEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)* @_ZN4aura14WindowTargeter11OnInstalledEPNS_6WindowE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)* @_ZN4aura14WindowTargeter25FindTargetForLocatedEventEPNS_6WindowEPN2ui12LocatedEventE to i8*), i8* bitcast (i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)* @_ZNK4aura14WindowTargeter21SubtreeCanAcceptEventEPNS_6WindowERKN2ui12LocatedEventE to i8*), i8* bitcast (i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)* @_ZNK4aura14WindowTargeter25EventLocationInsideBoundsEPNS_6WindowERKN2ui12LocatedEventE to i8*), i8* bitcast (i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)* @_ZNK4aura14WindowTargeter23ShouldUseExtendedBoundsEPKNS_6WindowE to i8*)] }, align 8

@_ZN4aura14WindowTargeterC1Ev = hidden unnamed_addr alias void (%"class.aura::WindowTargeter"*), void (%"class.aura::WindowTargeter"*)* @_ZN4aura14WindowTargeterC2Ev
@_ZN4aura14WindowTargeterD1Ev = hidden unnamed_addr alias void (%"class.aura::WindowTargeter"*), void (%"class.aura::WindowTargeter"*)* @_ZN4aura14WindowTargeterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTargeterC2Ev(%"class.aura::WindowTargeter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN4aura14WindowTargeterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 1
  %4 = bitcast %"class.aura::Window"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4aura14WindowTargeterD2Ev(%"class.aura::WindowTargeter"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTargeterD0Ev(%"class.aura::WindowTargeter"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.aura::WindowTargeter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4aura14WindowTargeter31SubtreeShouldBeExploredForEventEPNS_6WindowERKN2ui12LocatedEventE(%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"* dereferenceable(160)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.aura::WindowTargeter"* %0 to i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)***
  %5 = load i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)**, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)*, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)** %5, i64 9
  %7 = load i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)*, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.aura::WindowTargeter"* %0, %"class.aura::Window"* %1, %"class.ui::LocatedEvent"* dereferenceable(160) %2) #10
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = load i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)**, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)*** %4, align 8
  %11 = getelementptr inbounds i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)*, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)** %10, i64 10
  %12 = load i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)*, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.aura::WindowTargeter"* %0, %"class.aura::Window"* %1, %"class.ui::LocatedEvent"* dereferenceable(160) %2) #10
  br label %14

14:                                               ; preds = %9, %3
  %15 = phi i1 [ false, %3 ], [ %13, %9 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4aura14WindowTargeter15GetHitTestRectsEPNS_6WindowEPN3gfx4RectES5_(%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 7
  %6 = bitcast %"class.gfx::Rect"* %3 to i8*
  %7 = bitcast %"class.gfx::Rect"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 16, i1 false)
  %8 = bitcast %"class.gfx::Rect"* %2 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %7, i64 16, i1 false)
  %9 = bitcast %"class.aura::WindowTargeter"* %0 to i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)***
  %10 = load i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)**, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)*, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)** %10, i64 11
  %12 = load i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)*, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.aura::WindowTargeter"* %0, %"class.aura::Window"* %1) #10
  br i1 %13, label %14, label %17

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 2
  tail call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* %2, %"class.gfx::Insets"* dereferenceable(16) %15) #10
  %16 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 3
  tail call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* %3, %"class.gfx::Insets"* dereferenceable(16) %16) #10
  br label %17

17:                                               ; preds = %14, %4
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"*, %"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.std::__1::vector.51"* @_ZNK4aura14WindowTargeter25GetExtraHitTestShapeRectsEPNS_6WindowE(%"class.aura::WindowTargeter"* nocapture readnone, %"class.aura::Window"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.std::__1::vector.51"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTargeter9SetInsetsERKN3gfx6InsetsE(%"class.aura::WindowTargeter"* nocapture, %"class.gfx::Insets"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %43

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 2, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %43

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 2, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %21, label %43

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 2, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 3, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %5
  br i1 %30, label %31, label %43

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 3, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, %11
  br i1 %34, label %35, label %43

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 3, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, %17
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 3, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, %23
  br i1 %42, label %48, label %43

43:                                               ; preds = %39, %35, %31, %27, %21, %15, %9, %2
  %44 = bitcast %"class.gfx::Insets"* %3 to i8*
  %45 = bitcast %"class.gfx::Insets"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 4 %45, i64 16, i1 false) #10
  %46 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 3
  %47 = bitcast %"class.gfx::Insets"* %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 4 %45, i64 16, i1 false) #10
  br label %48

48:                                               ; preds = %39, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTargeter9SetInsetsERKN3gfx6InsetsES4_(%"class.aura::WindowTargeter"* nocapture, %"class.gfx::Insets"* nocapture readonly dereferenceable(16), %"class.gfx::Insets"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %52

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 2, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %52

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 2, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %52

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 2, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %52

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 3, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %34, label %52

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 3, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %2, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %40, label %52

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 3, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %2, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %46, label %52

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 3, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %2, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %48, %50
  br i1 %51, label %58, label %52

52:                                               ; preds = %28, %34, %40, %3, %10, %16, %46, %22
  %53 = bitcast %"class.gfx::Insets"* %4 to i8*
  %54 = bitcast %"class.gfx::Insets"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 4 %54, i64 16, i1 false)
  %55 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 3
  %56 = bitcast %"class.gfx::Insets"* %55 to i8*
  %57 = bitcast %"class.gfx::Insets"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 4 %57, i64 16, i1 false)
  br label %58

58:                                               ; preds = %46, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZN4aura14WindowTargeter29GetPriorityTargetInRootWindowEPNS_6WindowERKN2ui12LocatedEventE(%"class.aura::WindowTargeter"* nocapture readnone, %"class.aura::Window"*, %"class.ui::LocatedEvent"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 0
  %5 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %19 [
    i32 34, label %12
    i32 35, label %7
    i32 36, label %7
    i32 1, label %12
    i32 2, label %12
    i32 3, label %12
    i32 4, label %12
    i32 5, label %12
    i32 6, label %12
    i32 9, label %12
    i32 10, label %12
  ]

7:                                                ; preds = %3, %3
  %8 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 262144
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3, %7
  %13 = tail call %"class.aura::WindowTreeHost"* @_ZN4aura6Window7GetHostEv(%"class.aura::Window"* %1) #10
  %14 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %13, i64 0, i32 8, i32 0, i32 0, i32 0
  %15 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %14, align 8
  %16 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %15, i64 0, i32 6
  %17 = load %"class.aura::Window"*, %"class.aura::Window"** %16, align 8
  %18 = icmp eq %"class.aura::Window"* %17, null
  br i1 %18, label %19, label %53

19:                                               ; preds = %7, %3, %12
  %20 = tail call %"class.aura::Window"* @_ZN4aura6client16GetCaptureWindowEPNS_6WindowE(%"class.aura::Window"* %1) #10
  %21 = icmp eq %"class.aura::Window"* %20, null
  br i1 %21, label %22, label %53

22:                                               ; preds = %19
  %23 = load i32, i32* %5, align 8
  %24 = add i32 %23, -27
  %25 = icmp ult i32 %24, 3
  br i1 %25, label %26, label %35

26:                                               ; preds = %22
  %27 = tail call %"class.aura::WindowTreeHost"* @_ZN4aura6Window7GetHostEv(%"class.aura::Window"* %1) #10
  %28 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %27, i64 0, i32 8, i32 0, i32 0, i32 0
  %29 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %28, align 8
  %30 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %29, i64 0, i32 8
  %31 = load %"class.aura::Window"*, %"class.aura::Window"** %30, align 8
  %32 = icmp eq %"class.aura::Window"* %31, null
  br i1 %32, label %33, label %53

33:                                               ; preds = %26
  %34 = load i32, i32* %5, align 8
  br label %35

35:                                               ; preds = %33, %22
  %36 = phi i32 [ %34, %33 ], [ %23, %22 ]
  %37 = add i32 %36, -11
  %38 = icmp ult i32 %37, 4
  br i1 %38, label %39, label %52

39:                                               ; preds = %35
  %40 = tail call %"class.ui::TouchEvent"* @_ZNK2ui5Event12AsTouchEventEv(%"class.ui::Event"* %4) #10
  %41 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #10
  %42 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %41, i64 0, i32 11, i32 0, i32 0, i32 0
  %43 = load %"class.ui::GestureRecognizer"*, %"class.ui::GestureRecognizer"** %42, align 8
  %44 = bitcast %"class.ui::GestureRecognizer"* %43 to %"class.ui::GestureConsumer"* (%"class.ui::GestureRecognizer"*, %"class.ui::TouchEvent"*)***
  %45 = load %"class.ui::GestureConsumer"* (%"class.ui::GestureRecognizer"*, %"class.ui::TouchEvent"*)**, %"class.ui::GestureConsumer"* (%"class.ui::GestureRecognizer"*, %"class.ui::TouchEvent"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.ui::GestureConsumer"* (%"class.ui::GestureRecognizer"*, %"class.ui::TouchEvent"*)*, %"class.ui::GestureConsumer"* (%"class.ui::GestureRecognizer"*, %"class.ui::TouchEvent"*)** %45, i64 5
  %47 = load %"class.ui::GestureConsumer"* (%"class.ui::GestureRecognizer"*, %"class.ui::TouchEvent"*)*, %"class.ui::GestureConsumer"* (%"class.ui::GestureRecognizer"*, %"class.ui::TouchEvent"*)** %46, align 8
  %48 = tail call %"class.ui::GestureConsumer"* %47(%"class.ui::GestureRecognizer"* %43, %"class.ui::TouchEvent"* dereferenceable(216) %40) #10
  %49 = icmp eq %"class.ui::GestureConsumer"* %48, null
  %50 = getelementptr inbounds %"class.ui::GestureConsumer", %"class.ui::GestureConsumer"* %48, i64 -19
  %51 = bitcast %"class.ui::GestureConsumer"* %50 to %"class.aura::Window"*
  br i1 %49, label %52, label %53

52:                                               ; preds = %39, %35
  br label %53

53:                                               ; preds = %26, %12, %52, %39, %19
  %54 = phi %"class.aura::Window"* [ null, %52 ], [ %51, %39 ], [ %20, %19 ], [ %17, %12 ], [ %31, %26 ]
  ret %"class.aura::Window"* %54
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.aura::WindowTreeHost"* @_ZN4aura6Window7GetHostEv(%"class.aura::Window"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.aura::Window"* @_ZN4aura6client16GetCaptureWindowEPNS_6WindowE(%"class.aura::Window"*) local_unnamed_addr #4

declare %"class.ui::TouchEvent"* @_ZNK2ui5Event12AsTouchEventEv(%"class.ui::Event"*) local_unnamed_addr #4

declare %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZN4aura14WindowTargeter22FindTargetInRootWindowEPNS_6WindowERKN2ui12LocatedEventE(%"class.aura::WindowTargeter"* nocapture readnone, %"class.aura::Window"*, %"class.ui::LocatedEvent"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.aura::Window"* @_ZN4aura14WindowTargeter29GetPriorityTargetInRootWindowEPNS_6WindowERKN2ui12LocatedEventE(%"class.aura::WindowTargeter"* undef, %"class.aura::Window"* %1, %"class.ui::LocatedEvent"* dereferenceable(160) %2)
  %5 = icmp eq %"class.aura::Window"* %4, null
  br i1 %5, label %6, label %37

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -11
  %10 = icmp ult i32 %9, 4
  br i1 %10, label %11, label %36

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 0
  %13 = tail call %"class.ui::TouchEvent"* @_ZNK2ui5Event12AsTouchEventEv(%"class.ui::Event"* %12) #10
  %14 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #10
  %15 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %14, i64 0, i32 11, i32 0, i32 0, i32 0
  %16 = load %"class.ui::GestureRecognizer"*, %"class.ui::GestureRecognizer"** %15, align 8
  %17 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 1
  %18 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %13, i64 0, i32 0, i32 0, i32 11
  %19 = load i32, i32* %18, align 8
  %20 = bitcast %"class.ui::GestureRecognizer"* %16 to %"class.ui::GestureConsumer"* (%"class.ui::GestureRecognizer"*, %"class.gfx::PointF"*, i32)***
  %21 = load %"class.ui::GestureConsumer"* (%"class.ui::GestureRecognizer"*, %"class.gfx::PointF"*, i32)**, %"class.ui::GestureConsumer"* (%"class.ui::GestureRecognizer"*, %"class.gfx::PointF"*, i32)*** %20, align 8
  %22 = getelementptr inbounds %"class.ui::GestureConsumer"* (%"class.ui::GestureRecognizer"*, %"class.gfx::PointF"*, i32)*, %"class.ui::GestureConsumer"* (%"class.ui::GestureRecognizer"*, %"class.gfx::PointF"*, i32)** %21, i64 6
  %23 = load %"class.ui::GestureConsumer"* (%"class.ui::GestureRecognizer"*, %"class.gfx::PointF"*, i32)*, %"class.ui::GestureConsumer"* (%"class.ui::GestureRecognizer"*, %"class.gfx::PointF"*, i32)** %22, align 8
  %24 = tail call %"class.ui::GestureConsumer"* %23(%"class.ui::GestureRecognizer"* %16, %"class.gfx::PointF"* dereferenceable(8) %17, i32 %19) #10
  %25 = icmp eq %"class.ui::GestureConsumer"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.ui::GestureConsumer", %"class.ui::GestureConsumer"* %24, i64 -19
  %28 = bitcast %"class.ui::GestureConsumer"* %27 to %"class.aura::Window"*
  br label %37

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 7
  %31 = tail call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %17) #10
  %32 = trunc i64 %31 to i32
  %33 = lshr i64 %31, 32
  %34 = trunc i64 %33 to i32
  %35 = tail call zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"* %30, i32 %32, i32 %34) #10
  br i1 %35, label %36, label %37

36:                                               ; preds = %29, %6
  br label %37

37:                                               ; preds = %26, %3, %29, %36
  %38 = phi %"class.aura::Window"* [ null, %36 ], [ %1, %29 ], [ %4, %3 ], [ %28, %26 ]
  ret %"class.aura::Window"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4aura14WindowTargeter40ProcessEventIfTargetsDifferentRootWindowEPNS_6WindowES2_PN2ui5EventE(%"class.aura::WindowTargeter"* nocapture readnone, %"class.aura::Window"*, %"class.aura::Window"*, %"class.ui::Event"*) local_unnamed_addr #5 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca %"class.gfx::Transform", align 4
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %1, %"class.aura::Window"* %2) #10
  br i1 %8, label %94, label %9

9:                                                ; preds = %4
  %10 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %2) #10
  %11 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %3, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %18 [
    i32 1, label %27
    i32 2, label %27
    i32 3, label %27
    i32 4, label %27
    i32 5, label %27
    i32 6, label %27
    i32 9, label %27
    i32 10, label %27
    i32 34, label %27
    i32 35, label %13
    i32 36, label %13
  ]

13:                                               ; preds = %9, %9
  %14 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %3, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 262144
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %27, label %21

18:                                               ; preds = %9
  %19 = add i32 %12, -11
  %20 = icmp ult i32 %19, 4
  br i1 %20, label %27, label %21

21:                                               ; preds = %18, %13
  switch i32 %12, label %82 [
    i32 16, label %27
    i32 17, label %27
    i32 18, label %27
    i32 19, label %27
    i32 23, label %27
    i32 21, label %27
    i32 20, label %27
    i32 22, label %27
    i32 24, label %27
    i32 25, label %27
    i32 26, label %27
    i32 27, label %27
    i32 28, label %27
    i32 29, label %27
    i32 30, label %27
    i32 31, label %27
    i32 32, label %27
    i32 33, label %27
    i32 36, label %22
    i32 35, label %22
  ]

22:                                               ; preds = %21, %21
  %23 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %3, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 262144
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %82, label %27

27:                                               ; preds = %22, %9, %9, %9, %9, %9, %9, %9, %9, %9, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %13, %18
  %28 = tail call %"class.ui::LocatedEvent"* @_ZN2ui5Event14AsLocatedEventEv(%"class.ui::Event"* %3) #10
  %29 = bitcast i64* %5 to %"class.gfx::Point"*
  %30 = icmp eq %"class.aura::Window"* %10, null
  %31 = icmp eq %"class.aura::Window"* %10, %2
  %32 = or i1 %30, %31
  br i1 %32, label %67, label %33

33:                                               ; preds = %27
  %34 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = bitcast i64* %5 to i32*
  %36 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %29, i64 0, i32 1
  %37 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %28, i64 0, i32 1
  %38 = tail call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %37) #10
  store i64 %38, i64* %5, align 8
  call void @_ZN4aura6Window20ConvertPointToTargetEPKS0_S2_PN3gfx5PointE(%"class.aura::Window"* %2, %"class.aura::Window"* nonnull %10, %"class.gfx::Point"* nonnull %29) #10
  %39 = call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %37) #10
  %40 = trunc i64 %39 to i32
  %41 = lshr i64 %39, 32
  %42 = trunc i64 %41 to i32
  %43 = load i32, i32* %35, align 8
  %44 = icmp sgt i32 %43, -1
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %40, i32 %43) #10
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !2
  %50 = load i32, i32* %36, align 4
  %51 = icmp sgt i32 %50, -1
  %52 = select i1 %51, i32 -2147483648, i32 2147483647
  %53 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %42, i32 %50) #10
  %54 = extractvalue { i32, i1 } %53, 1
  %55 = extractvalue { i32, i1 } %53, 0
  %56 = select i1 %54, i32 %52, i32 %55, !prof !2
  %57 = sitofp i32 %49 to float
  %58 = sitofp i32 %56 to float
  %59 = bitcast %"class.gfx::PointF"* %37 to <2 x float>*
  %60 = load <2 x float>, <2 x float>* %59, align 4
  %61 = extractelement <2 x float> %60, i32 0
  %62 = fsub float %61, %57
  %63 = insertelement <2 x float> undef, float %62, i32 0
  %64 = extractelement <2 x float> %60, i32 1
  %65 = fsub float %64, %58
  %66 = insertelement <2 x float> %63, float %65, i32 1
  store <2 x float> %66, <2 x float>* %59, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %67

67:                                               ; preds = %27, %33
  %68 = call %"class.aura::WindowTreeHost"* @_ZN4aura6Window7GetHostEv(%"class.aura::Window"* %10) #10
  %69 = bitcast %"class.gfx::Transform"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %69) #10
  %70 = bitcast %"class.aura::WindowTreeHost"* %68 to void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)***
  %71 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)**, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %71, i64 3
  %73 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %72, align 8
  call void %73(%"class.gfx::Transform"* nonnull sret %6, %"class.aura::WindowTreeHost"* %68) #10
  %74 = bitcast %"class.gfx::Transform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %74) #10
  %75 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)**, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*** %70, align 8
  %76 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %75, i64 6
  %77 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %76, align 8
  call void %77(%"class.gfx::Transform"* nonnull sret %7, %"class.aura::WindowTreeHost"* %68) #10
  %78 = bitcast %"class.ui::LocatedEvent"* %28 to void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)***
  %79 = load void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)**, void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)*, void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)** %79, i64 3
  %81 = load void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)*, void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)** %80, align 8
  call void %81(%"class.ui::LocatedEvent"* %28, %"class.gfx::Transform"* nonnull dereferenceable(68) %6, %"class.gfx::Transform"* nonnull dereferenceable(68) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %74) #10
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %69) #10
  br label %82

82:                                               ; preds = %22, %21, %67
  %83 = call %"class.aura::WindowTreeHost"* @_ZN4aura6Window7GetHostEv(%"class.aura::Window"* %10) #10
  %84 = bitcast %"class.aura::WindowTreeHost"* %83 to %"class.ui::EventSink"* (%"class.aura::WindowTreeHost"*)***
  %85 = load %"class.ui::EventSink"* (%"class.aura::WindowTreeHost"*)**, %"class.ui::EventSink"* (%"class.aura::WindowTreeHost"*)*** %84, align 8
  %86 = getelementptr inbounds %"class.ui::EventSink"* (%"class.aura::WindowTreeHost"*)*, %"class.ui::EventSink"* (%"class.aura::WindowTreeHost"*)** %85, i64 10
  %87 = load %"class.ui::EventSink"* (%"class.aura::WindowTreeHost"*)*, %"class.ui::EventSink"* (%"class.aura::WindowTreeHost"*)** %86, align 8
  %88 = call %"class.ui::EventSink"* %87(%"class.aura::WindowTreeHost"* %83) #10
  %89 = bitcast %"class.ui::EventSink"* %88 to i24 (%"class.ui::EventSink"*, %"class.ui::Event"*)***
  %90 = load i24 (%"class.ui::EventSink"*, %"class.ui::Event"*)**, i24 (%"class.ui::EventSink"*, %"class.ui::Event"*)*** %89, align 8
  %91 = getelementptr inbounds i24 (%"class.ui::EventSink"*, %"class.ui::Event"*)*, i24 (%"class.ui::EventSink"*, %"class.ui::Event"*)** %90, i64 2
  %92 = load i24 (%"class.ui::EventSink"*, %"class.ui::Event"*)*, i24 (%"class.ui::EventSink"*, %"class.ui::Event"*)** %91, align 8
  %93 = call i24 %92(%"class.ui::EventSink"* %88, %"class.ui::Event"* %3) #10
  br label %94

94:                                               ; preds = %4, %82
  %95 = phi i1 [ true, %82 ], [ false, %4 ]
  ret i1 %95
}

declare zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"*, %"class.aura::Window"*) local_unnamed_addr #4

declare %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"*) local_unnamed_addr #4

declare %"class.ui::LocatedEvent"* @_ZN2ui5Event14AsLocatedEventEv(%"class.ui::Event"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::EventTarget"* @_ZN4aura14WindowTargeter18FindTargetForEventEPN2ui11EventTargetEPNS1_5EventE(%"class.aura::WindowTargeter"*, %"class.ui::EventTarget"*, %"class.ui::Event"*) unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.ui::EventTarget"* %1, null
  %5 = getelementptr inbounds %"class.ui::EventTarget", %"class.ui::EventTarget"* %1, i64 -2, i32 2, i32 0, i32 1
  %6 = bitcast %"class.ui::EventHandler"*** %5 to %"class.aura::Window"*
  %7 = select i1 %4, %"class.aura::Window"* null, %"class.aura::Window"* %6
  %8 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %2, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -7
  %11 = icmp ult i32 %10, 2
  br i1 %11, label %12, label %36

12:                                               ; preds = %3
  %13 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %7) #10
  %14 = tail call %"class.aura::client::FocusClient"* @_ZN4aura6client14GetFocusClientEPNS_6WindowE(%"class.aura::Window"* %13) #10
  %15 = icmp eq %"class.aura::client::FocusClient"* %14, null
  br i1 %15, label %58, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.aura::client::FocusClient"* %14 to %"class.aura::Window"* (%"class.aura::client::FocusClient"*)***
  %18 = load %"class.aura::Window"* (%"class.aura::client::FocusClient"*)**, %"class.aura::Window"* (%"class.aura::client::FocusClient"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.aura::Window"* (%"class.aura::client::FocusClient"*)*, %"class.aura::Window"* (%"class.aura::client::FocusClient"*)** %18, i64 6
  %20 = load %"class.aura::Window"* (%"class.aura::client::FocusClient"*)*, %"class.aura::Window"* (%"class.aura::client::FocusClient"*)** %19, align 8
  %21 = tail call %"class.aura::Window"* %20(%"class.aura::client::FocusClient"* nonnull %14) #10
  %22 = icmp eq %"class.aura::Window"* %21, null
  br i1 %22, label %58, label %23

23:                                               ; preds = %16
  %24 = tail call %"class.aura::client::EventClient"* @_ZN4aura6client14GetEventClientEPKNS_6WindowE(%"class.aura::Window"* %13) #10
  %25 = icmp eq %"class.aura::client::EventClient"* %24, null
  br i1 %25, label %61, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.aura::client::EventClient"* %24 to i1 (%"class.aura::client::EventClient"*, %"class.aura::Window"*)***
  %28 = load i1 (%"class.aura::client::EventClient"*, %"class.aura::Window"*)**, i1 (%"class.aura::client::EventClient"*, %"class.aura::Window"*)*** %27, align 8
  %29 = load i1 (%"class.aura::client::EventClient"*, %"class.aura::Window"*)*, i1 (%"class.aura::client::EventClient"*, %"class.aura::Window"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.aura::client::EventClient"* nonnull %24, %"class.aura::Window"* nonnull %21) #10
  br i1 %30, label %61, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.aura::client::FocusClient"* %14 to void (%"class.aura::client::FocusClient"*, %"class.aura::Window"*)***
  %33 = load void (%"class.aura::client::FocusClient"*, %"class.aura::Window"*)**, void (%"class.aura::client::FocusClient"*, %"class.aura::Window"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.aura::client::FocusClient"*, %"class.aura::Window"*)*, void (%"class.aura::client::FocusClient"*, %"class.aura::Window"*)** %33, i64 4
  %35 = load void (%"class.aura::client::FocusClient"*, %"class.aura::Window"*)*, void (%"class.aura::client::FocusClient"*, %"class.aura::Window"*)** %34, align 8
  tail call void %35(%"class.aura::client::FocusClient"* nonnull %14, %"class.aura::Window"* null) #10
  br label %70

36:                                               ; preds = %3
  switch i32 %9, label %42 [
    i32 1, label %51
    i32 2, label %51
    i32 3, label %51
    i32 4, label %51
    i32 5, label %51
    i32 6, label %51
    i32 9, label %51
    i32 10, label %51
    i32 34, label %51
    i32 35, label %37
    i32 36, label %37
  ]

37:                                               ; preds = %36, %36
  %38 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %2, i64 0, i32 4
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 262144
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %51, label %45

42:                                               ; preds = %36
  %43 = add i32 %9, -11
  %44 = icmp ult i32 %43, 4
  br i1 %44, label %51, label %45

45:                                               ; preds = %42, %37
  switch i32 %9, label %58 [
    i32 16, label %51
    i32 17, label %51
    i32 18, label %51
    i32 19, label %51
    i32 23, label %51
    i32 21, label %51
    i32 20, label %51
    i32 22, label %51
    i32 24, label %51
    i32 25, label %51
    i32 26, label %51
    i32 27, label %51
    i32 28, label %51
    i32 29, label %51
    i32 30, label %51
    i32 31, label %51
    i32 32, label %51
    i32 33, label %51
    i32 36, label %46
    i32 35, label %46
  ]

46:                                               ; preds = %45, %45
  %47 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %2, i64 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 262144
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %58, label %51

51:                                               ; preds = %46, %45, %45, %45, %45, %45, %45, %45, %45, %45, %45, %45, %45, %45, %45, %45, %45, %45, %45, %42, %37, %36, %36, %36, %36, %36, %36, %36, %36, %36
  %52 = bitcast %"class.ui::Event"* %2 to %"class.ui::LocatedEvent"*
  %53 = bitcast %"class.aura::WindowTargeter"* %0 to %"class.aura::Window"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)***
  %54 = load %"class.aura::Window"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)**, %"class.aura::Window"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)*** %53, align 8
  %55 = getelementptr inbounds %"class.aura::Window"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)*, %"class.aura::Window"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)** %54, i64 8
  %56 = load %"class.aura::Window"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)*, %"class.aura::Window"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)** %55, align 8
  %57 = tail call %"class.aura::Window"* %56(%"class.aura::WindowTargeter"* %0, %"class.aura::Window"* %7, %"class.ui::LocatedEvent"* %52) #10
  br label %58

58:                                               ; preds = %51, %46, %45, %16, %12
  %59 = phi %"class.aura::Window"* [ %7, %12 ], [ %7, %16 ], [ %57, %51 ], [ %7, %46 ], [ %7, %45 ]
  %60 = icmp eq %"class.aura::Window"* %59, null
  br i1 %60, label %70, label %61

61:                                               ; preds = %26, %23, %58
  %62 = phi %"class.aura::Window"* [ %59, %58 ], [ %21, %23 ], [ %21, %26 ]
  %63 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %7, i64 0, i32 13
  %64 = load %"class.aura::Window"*, %"class.aura::Window"** %63, align 8
  %65 = icmp eq %"class.aura::Window"* %64, null
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  %67 = tail call zeroext i1 @_ZN4aura14WindowTargeter40ProcessEventIfTargetsDifferentRootWindowEPNS_6WindowES2_PN2ui5EventE(%"class.aura::WindowTargeter"* undef, %"class.aura::Window"* %7, %"class.aura::Window"* nonnull %62, %"class.ui::Event"* %2)
  br i1 %67, label %70, label %68

68:                                               ; preds = %61, %66
  %69 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %62, i64 0, i32 2
  br label %70

70:                                               ; preds = %58, %31, %68, %66
  %71 = phi %"class.ui::EventTarget"* [ null, %66 ], [ %69, %68 ], [ null, %31 ], [ null, %58 ]
  ret %"class.ui::EventTarget"* %71
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZN4aura14WindowTargeter21FindTargetForKeyEventEPNS_6WindowE(%"class.aura::WindowTargeter"* nocapture readnone, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #10
  %4 = tail call %"class.aura::client::FocusClient"* @_ZN4aura6client14GetFocusClientEPNS_6WindowE(%"class.aura::Window"* %3) #10
  %5 = icmp eq %"class.aura::client::FocusClient"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.aura::client::FocusClient"* %4 to %"class.aura::Window"* (%"class.aura::client::FocusClient"*)***
  %8 = load %"class.aura::Window"* (%"class.aura::client::FocusClient"*)**, %"class.aura::Window"* (%"class.aura::client::FocusClient"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.aura::Window"* (%"class.aura::client::FocusClient"*)*, %"class.aura::Window"* (%"class.aura::client::FocusClient"*)** %8, i64 6
  %10 = load %"class.aura::Window"* (%"class.aura::client::FocusClient"*)*, %"class.aura::Window"* (%"class.aura::client::FocusClient"*)** %9, align 8
  %11 = tail call %"class.aura::Window"* %10(%"class.aura::client::FocusClient"* nonnull %4) #10
  %12 = icmp eq %"class.aura::Window"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %6
  %14 = tail call %"class.aura::client::EventClient"* @_ZN4aura6client14GetEventClientEPKNS_6WindowE(%"class.aura::Window"* %3) #10
  %15 = icmp eq %"class.aura::client::EventClient"* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %13
  %17 = bitcast %"class.aura::client::EventClient"* %14 to i1 (%"class.aura::client::EventClient"*, %"class.aura::Window"*)***
  %18 = load i1 (%"class.aura::client::EventClient"*, %"class.aura::Window"*)**, i1 (%"class.aura::client::EventClient"*, %"class.aura::Window"*)*** %17, align 8
  %19 = load i1 (%"class.aura::client::EventClient"*, %"class.aura::Window"*)*, i1 (%"class.aura::client::EventClient"*, %"class.aura::Window"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.aura::client::EventClient"* nonnull %14, %"class.aura::Window"* nonnull %11) #10
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.aura::client::FocusClient"* %4 to void (%"class.aura::client::FocusClient"*, %"class.aura::Window"*)***
  %23 = load void (%"class.aura::client::FocusClient"*, %"class.aura::Window"*)**, void (%"class.aura::client::FocusClient"*, %"class.aura::Window"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.aura::client::FocusClient"*, %"class.aura::Window"*)*, void (%"class.aura::client::FocusClient"*, %"class.aura::Window"*)** %23, i64 4
  %25 = load void (%"class.aura::client::FocusClient"*, %"class.aura::Window"*)*, void (%"class.aura::client::FocusClient"*, %"class.aura::Window"*)** %24, align 8
  tail call void %25(%"class.aura::client::FocusClient"* nonnull %4, %"class.aura::Window"* null) #10
  br label %26

26:                                               ; preds = %6, %16, %13, %21, %2
  %27 = phi %"class.aura::Window"* [ %1, %2 ], [ %1, %6 ], [ null, %21 ], [ %11, %13 ], [ %11, %16 ]
  ret %"class.aura::Window"* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZN4aura14WindowTargeter24FindTargetForNonKeyEventEPNS_6WindowEPN2ui5EventE(%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::Event"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %2, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %11 [
    i32 1, label %20
    i32 2, label %20
    i32 3, label %20
    i32 4, label %20
    i32 5, label %20
    i32 6, label %20
    i32 9, label %20
    i32 10, label %20
    i32 34, label %20
    i32 35, label %6
    i32 36, label %6
  ]

6:                                                ; preds = %3, %3
  %7 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %2, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 262144
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %20, label %14

11:                                               ; preds = %3
  %12 = add i32 %5, -11
  %13 = icmp ult i32 %12, 4
  br i1 %13, label %20, label %14

14:                                               ; preds = %11, %6
  switch i32 %5, label %27 [
    i32 16, label %20
    i32 17, label %20
    i32 18, label %20
    i32 19, label %20
    i32 23, label %20
    i32 21, label %20
    i32 20, label %20
    i32 22, label %20
    i32 24, label %20
    i32 25, label %20
    i32 26, label %20
    i32 27, label %20
    i32 28, label %20
    i32 29, label %20
    i32 30, label %20
    i32 31, label %20
    i32 32, label %20
    i32 33, label %20
    i32 36, label %15
    i32 35, label %15
  ]

15:                                               ; preds = %14, %14
  %16 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %2, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 262144
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %15, %3, %3, %3, %3, %3, %3, %3, %3, %3, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %6, %11
  %21 = bitcast %"class.ui::Event"* %2 to %"class.ui::LocatedEvent"*
  %22 = bitcast %"class.aura::WindowTargeter"* %0 to %"class.aura::Window"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)***
  %23 = load %"class.aura::Window"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)**, %"class.aura::Window"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.aura::Window"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)*, %"class.aura::Window"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)** %23, i64 8
  %25 = load %"class.aura::Window"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)*, %"class.aura::Window"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)** %24, align 8
  %26 = tail call %"class.aura::Window"* %25(%"class.aura::WindowTargeter"* %0, %"class.aura::Window"* %1, %"class.ui::LocatedEvent"* %21) #10
  br label %27

27:                                               ; preds = %15, %14, %20
  %28 = phi %"class.aura::Window"* [ %26, %20 ], [ %1, %15 ], [ %1, %14 ]
  ret %"class.aura::Window"* %28
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.ui::EventTarget"* @_ZN4aura14WindowTargeter18FindNextBestTargetEPN2ui11EventTargetEPNS1_5EventE(%"class.aura::WindowTargeter"* nocapture readnone, %"class.ui::EventTarget"* nocapture readnone, %"class.ui::Event"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.ui::EventTarget"* null
}

declare %"class.aura::client::FocusClient"* @_ZN4aura6client14GetFocusClientEPNS_6WindowE(%"class.aura::Window"*) local_unnamed_addr #4

declare %"class.aura::client::EventClient"* @_ZN4aura6client14GetEventClientEPKNS_6WindowE(%"class.aura::Window"*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4aura14WindowTargeter11OnInstalledEPNS_6WindowE(%"class.aura::WindowTargeter"* nocapture, %"class.aura::Window"*) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 1
  store %"class.aura::Window"* %1, %"class.aura::Window"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZN4aura14WindowTargeter25FindTargetForLocatedEventEPNS_6WindowEPN2ui12LocatedEventE(%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 13
  %5 = load %"class.aura::Window"*, %"class.aura::Window"** %4, align 8
  %6 = icmp eq %"class.aura::Window"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %3
  %8 = tail call %"class.aura::Window"* @_ZN4aura14WindowTargeter22FindTargetInRootWindowEPNS_6WindowERKN2ui12LocatedEventE(%"class.aura::WindowTargeter"* undef, %"class.aura::Window"* %1, %"class.ui::LocatedEvent"* dereferenceable(160) %2)
  %9 = icmp eq %"class.aura::Window"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %8, i64 0, i32 2
  %12 = bitcast %"class.aura::Window"* %1 to void (%"class.aura::Window"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)***
  %13 = load void (%"class.aura::Window"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)**, void (%"class.aura::Window"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.aura::Window"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)*, void (%"class.aura::Window"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)** %13, i64 21
  %15 = load void (%"class.aura::Window"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)*, void (%"class.aura::Window"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)** %14, align 8
  tail call void %15(%"class.aura::Window"* %1, %"class.ui::EventTarget"* %11, %"class.ui::LocatedEvent"* %2) #10
  br label %18

16:                                               ; preds = %7, %3
  %17 = tail call %"class.aura::Window"* @_ZN4aura14WindowTargeter36FindTargetForLocatedEventRecursivelyEPNS_6WindowEPN2ui12LocatedEventE(%"class.aura::WindowTargeter"* %0, %"class.aura::Window"* %1, %"class.ui::LocatedEvent"* %2)
  br label %18

18:                                               ; preds = %10, %16
  %19 = phi %"class.aura::Window"* [ %17, %16 ], [ %8, %10 ]
  ret %"class.aura::Window"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZN4aura14WindowTargeter36FindTargetForLocatedEventRecursivelyEPNS_6WindowEPN2ui12LocatedEventE(%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.aura::Window"* %1 to %"class.ui::EventTargetIterator"* (%"class.aura::Window"*)***
  %5 = load %"class.ui::EventTargetIterator"* (%"class.aura::Window"*)**, %"class.ui::EventTargetIterator"* (%"class.aura::Window"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.ui::EventTargetIterator"* (%"class.aura::Window"*)*, %"class.ui::EventTargetIterator"* (%"class.aura::Window"*)** %5, i64 19
  %7 = load %"class.ui::EventTargetIterator"* (%"class.aura::Window"*)*, %"class.ui::EventTargetIterator"* (%"class.aura::Window"*)** %6, align 8
  %8 = tail call %"class.ui::EventTargetIterator"* %7(%"class.aura::Window"* %1) #10
  %9 = icmp eq %"class.ui::EventTargetIterator"* %8, null
  br i1 %9, label %67, label %10

10:                                               ; preds = %3
  %11 = icmp eq %"class.aura::Window"* %1, null
  %12 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 2
  %13 = select i1 %11, %"class.ui::EventTarget"* null, %"class.ui::EventTarget"* %12
  %14 = bitcast %"class.ui::EventTargetIterator"* %8 to %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)***
  %15 = load %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)**, %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)*, %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)** %15, i64 2
  %17 = load %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)*, %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)** %16, align 8
  %18 = tail call %"class.ui::EventTarget"* %17(%"class.ui::EventTargetIterator"* nonnull %8) #10
  %19 = icmp eq %"class.ui::EventTarget"* %18, null
  br i1 %19, label %61, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 0
  br label %22

22:                                               ; preds = %20, %54
  %23 = phi %"class.ui::EventTarget"* [ %18, %20 ], [ %59, %54 ]
  %24 = phi %"class.ui::EventTarget"* [ %13, %20 ], [ %55, %54 ]
  %25 = bitcast %"class.ui::EventTarget"* %23 to %"class.ui::EventTargeter"* (%"class.ui::EventTarget"*)***
  %26 = load %"class.ui::EventTargeter"* (%"class.ui::EventTarget"*)**, %"class.ui::EventTargeter"* (%"class.ui::EventTarget"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.ui::EventTargeter"* (%"class.ui::EventTarget"*)*, %"class.ui::EventTargeter"* (%"class.ui::EventTarget"*)** %26, i64 5
  %28 = load %"class.ui::EventTargeter"* (%"class.ui::EventTarget"*)*, %"class.ui::EventTargeter"* (%"class.ui::EventTarget"*)** %27, align 8
  %29 = tail call %"class.ui::EventTargeter"* %28(%"class.ui::EventTarget"* nonnull %23) #10
  %30 = bitcast %"class.ui::EventTargeter"* %29 to %"class.aura::WindowTargeter"*
  %31 = icmp eq %"class.ui::EventTargeter"* %29, null
  %32 = select i1 %31, %"class.aura::WindowTargeter"* %0, %"class.aura::WindowTargeter"* %30
  %33 = getelementptr inbounds %"class.ui::EventTarget", %"class.ui::EventTarget"* %23, i64 -2, i32 2, i32 0, i32 1
  %34 = bitcast %"class.ui::EventHandler"*** %33 to %"class.aura::Window"*
  %35 = bitcast %"class.aura::WindowTargeter"* %32 to i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)***
  %36 = load i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)**, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)*, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)** %36, i64 4
  %38 = load i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)*, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"*)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.aura::WindowTargeter"* %32, %"class.aura::Window"* %34, %"class.ui::LocatedEvent"* dereferenceable(160) %2) #10
  br i1 %39, label %40, label %54

40:                                               ; preds = %22
  %41 = bitcast %"class.ui::EventTarget"* %24 to void (%"class.ui::EventTarget"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)***
  %42 = load void (%"class.ui::EventTarget"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)**, void (%"class.ui::EventTarget"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.ui::EventTarget"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)*, void (%"class.ui::EventTarget"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)** %42, i64 6
  %44 = load void (%"class.ui::EventTarget"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)*, void (%"class.ui::EventTarget"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)** %43, align 8
  tail call void %44(%"class.ui::EventTarget"* %24, %"class.ui::EventTarget"* nonnull %23, %"class.ui::LocatedEvent"* %2) #10
  %45 = bitcast %"class.aura::WindowTargeter"* %32 to %"class.ui::EventTarget"* (%"class.aura::WindowTargeter"*, %"class.ui::EventTarget"*, %"class.ui::Event"*)***
  %46 = load %"class.ui::EventTarget"* (%"class.aura::WindowTargeter"*, %"class.ui::EventTarget"*, %"class.ui::Event"*)**, %"class.ui::EventTarget"* (%"class.aura::WindowTargeter"*, %"class.ui::EventTarget"*, %"class.ui::Event"*)*** %45, align 8
  %47 = getelementptr inbounds %"class.ui::EventTarget"* (%"class.aura::WindowTargeter"*, %"class.ui::EventTarget"*, %"class.ui::Event"*)*, %"class.ui::EventTarget"* (%"class.aura::WindowTargeter"*, %"class.ui::EventTarget"*, %"class.ui::Event"*)** %46, i64 2
  %48 = load %"class.ui::EventTarget"* (%"class.aura::WindowTargeter"*, %"class.ui::EventTarget"*, %"class.ui::Event"*)*, %"class.ui::EventTarget"* (%"class.aura::WindowTargeter"*, %"class.ui::EventTarget"*, %"class.ui::Event"*)** %47, align 8
  %49 = tail call %"class.ui::EventTarget"* %48(%"class.aura::WindowTargeter"* %32, %"class.ui::EventTarget"* nonnull %23, %"class.ui::Event"* %21) #10
  %50 = icmp eq %"class.ui::EventTarget"* %49, null
  %51 = getelementptr inbounds %"class.ui::EventTarget", %"class.ui::EventTarget"* %49, i64 -2, i32 2, i32 0, i32 1
  %52 = icmp eq %"class.ui::EventHandler"*** %51, null
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %75

54:                                               ; preds = %40, %22
  %55 = phi %"class.ui::EventTarget"* [ %24, %22 ], [ %23, %40 ]
  %56 = load %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)**, %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)*** %14, align 8
  %57 = getelementptr inbounds %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)*, %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)** %56, i64 2
  %58 = load %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)*, %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)** %57, align 8
  %59 = tail call %"class.ui::EventTarget"* %58(%"class.ui::EventTargetIterator"* nonnull %8) #10
  %60 = icmp eq %"class.ui::EventTarget"* %59, null
  br i1 %60, label %61, label %22

61:                                               ; preds = %54, %10
  %62 = phi %"class.ui::EventTarget"* [ %13, %10 ], [ %55, %54 ]
  %63 = bitcast %"class.ui::EventTarget"* %62 to void (%"class.ui::EventTarget"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)***
  %64 = load void (%"class.ui::EventTarget"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)**, void (%"class.ui::EventTarget"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.ui::EventTarget"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)*, void (%"class.ui::EventTarget"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)** %64, i64 6
  %66 = load void (%"class.ui::EventTarget"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)*, void (%"class.ui::EventTarget"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)** %65, align 8
  tail call void %66(%"class.ui::EventTarget"* %62, %"class.ui::EventTarget"* %13, %"class.ui::LocatedEvent"* %2) #10
  br label %67

67:                                               ; preds = %3, %61
  %68 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 0
  %69 = bitcast %"class.aura::Window"* %1 to i1 (%"class.aura::Window"*, %"class.ui::Event"*)***
  %70 = load i1 (%"class.aura::Window"*, %"class.ui::Event"*)**, i1 (%"class.aura::Window"*, %"class.ui::Event"*)*** %69, align 8
  %71 = getelementptr inbounds i1 (%"class.aura::Window"*, %"class.ui::Event"*)*, i1 (%"class.aura::Window"*, %"class.ui::Event"*)** %70, i64 17
  %72 = load i1 (%"class.aura::Window"*, %"class.ui::Event"*)*, i1 (%"class.aura::Window"*, %"class.ui::Event"*)** %71, align 8
  %73 = tail call zeroext i1 %72(%"class.aura::Window"* %1, %"class.ui::Event"* dereferenceable(144) %68) #10
  %74 = select i1 %73, %"class.aura::Window"* %1, %"class.aura::Window"* null
  br label %77

75:                                               ; preds = %40
  %76 = bitcast %"class.ui::EventHandler"*** %51 to %"class.aura::Window"*
  br label %77

77:                                               ; preds = %75, %67
  %78 = phi %"class.aura::Window"* [ %74, %67 ], [ %76, %75 ]
  br i1 %9, label %84, label %79

79:                                               ; preds = %77
  %80 = bitcast %"class.ui::EventTargetIterator"* %8 to void (%"class.ui::EventTargetIterator"*)***
  %81 = load void (%"class.ui::EventTargetIterator"*)**, void (%"class.ui::EventTargetIterator"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.ui::EventTargetIterator"*)*, void (%"class.ui::EventTargetIterator"*)** %81, i64 1
  %83 = load void (%"class.ui::EventTargetIterator"*)*, void (%"class.ui::EventTargetIterator"*)** %82, align 8
  tail call void %83(%"class.ui::EventTargetIterator"* nonnull %8) #10
  br label %84

84:                                               ; preds = %77, %79
  ret %"class.aura::Window"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4aura14WindowTargeter21SubtreeCanAcceptEventEPNS_6WindowERKN2ui12LocatedEventE(%"class.aura::WindowTargeter"* nocapture readnone, %"class.aura::Window"*, %"class.ui::LocatedEvent"* dereferenceable(160)) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.gfx::Point"*
  %6 = tail call zeroext i1 @_ZNK4aura6Window9IsVisibleEv(%"class.aura::Window"* %1) #10
  br i1 %6, label %7, label %38

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 24
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %10 [
    i32 3, label %38
    i32 0, label %38
  ]

10:                                               ; preds = %7
  %11 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #10
  %12 = tail call %"class.aura::client::EventClient"* @_ZN4aura6client14GetEventClientEPKNS_6WindowE(%"class.aura::Window"* %11) #10
  %13 = icmp eq %"class.aura::client::EventClient"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.aura::client::EventClient"* %12 to i1 (%"class.aura::client::EventClient"*, %"class.aura::Window"*)***
  %16 = load i1 (%"class.aura::client::EventClient"*, %"class.aura::Window"*)**, i1 (%"class.aura::client::EventClient"*, %"class.aura::Window"*)*** %15, align 8
  %17 = load i1 (%"class.aura::client::EventClient"*, %"class.aura::Window"*)*, i1 (%"class.aura::client::EventClient"*, %"class.aura::Window"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.aura::client::EventClient"* nonnull %12, %"class.aura::Window"* %1) #10
  br i1 %18, label %19, label %38

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 13
  %21 = load %"class.aura::Window"*, %"class.aura::Window"** %20, align 8
  %22 = icmp eq %"class.aura::Window"* %21, null
  %23 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  br i1 %22, label %36, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %21, i64 0, i32 12
  %26 = load %"class.aura::WindowDelegate"*, %"class.aura::WindowDelegate"** %25, align 8
  %27 = icmp eq %"class.aura::WindowDelegate"* %26, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 1
  %30 = tail call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %29) #10
  store i64 %30, i64* %4, align 8
  %31 = bitcast %"class.aura::WindowDelegate"* %26 to i1 (%"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.gfx::Point"*)***
  %32 = load i1 (%"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.gfx::Point"*)**, i1 (%"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.gfx::Point"*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.gfx::Point"*)*, i1 (%"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.gfx::Point"*)** %32, i64 15
  %34 = load i1 (%"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.gfx::Point"*)*, i1 (%"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.gfx::Point"*)** %33, align 8
  %35 = call zeroext i1 %34(%"class.aura::WindowDelegate"* nonnull %26, %"class.aura::Window"* %1, %"class.gfx::Point"* nonnull dereferenceable(8) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br i1 %35, label %37, label %38

36:                                               ; preds = %19, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %37

37:                                               ; preds = %36, %28
  br label %38

38:                                               ; preds = %7, %7, %14, %28, %37, %3
  %39 = phi i1 [ false, %3 ], [ false, %7 ], [ false, %14 ], [ true, %37 ], [ false, %28 ], [ false, %7 ]
  ret i1 %39
}

declare zeroext i1 @_ZNK4aura6Window9IsVisibleEv(%"class.aura::Window"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4aura14WindowTargeter25EventLocationInsideBoundsEPNS_6WindowERKN2ui12LocatedEventE(%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.ui::LocatedEvent"* dereferenceable(160)) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.gfx::Point"*
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 1
  %8 = tail call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %7) #10
  store i64 %8, i64* %4, align 8
  %9 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 13
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %11 = icmp eq %"class.aura::Window"* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %3
  call void @_ZN4aura6Window20ConvertPointToTargetEPKS0_S2_PN3gfx5PointE(%"class.aura::Window"* nonnull %10, %"class.aura::Window"* %1, %"class.gfx::Point"* nonnull %5) #10
  br label %13

13:                                               ; preds = %3, %12
  %14 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -11
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  switch i32 %15, label %25 [
    i32 16, label %24
    i32 17, label %24
    i32 18, label %24
    i32 19, label %24
    i32 23, label %24
    i32 21, label %24
    i32 20, label %24
    i32 22, label %24
    i32 24, label %24
    i32 25, label %24
    i32 26, label %24
    i32 27, label %24
    i32 28, label %24
    i32 29, label %24
    i32 30, label %24
    i32 31, label %24
    i32 32, label %24
    i32 33, label %24
    i32 36, label %19
    i32 35, label %19
  ]

19:                                               ; preds = %18, %18
  %20 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 262144
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %19, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18
  br label %25

25:                                               ; preds = %19, %18, %24, %13
  %26 = phi i32 [ 1, %13 ], [ 2, %24 ], [ 0, %19 ], [ 0, %18 ]
  %27 = call zeroext i1 @_ZNK4aura14WindowTargeter17PointInsideBoundsEPNS_6WindowENS0_10BoundsTypeERKN3gfx5PointE(%"class.aura::WindowTargeter"* %0, %"class.aura::Window"* %1, i32 %26, %"class.gfx::Point"* nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret i1 %27
}

declare void @_ZN4aura6Window20ConvertPointToTargetEPKS0_S2_PN3gfx5PointE(%"class.aura::Window"*, %"class.aura::Window"*, %"class.gfx::Point"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4aura14WindowTargeter17PointInsideBoundsEPNS_6WindowENS0_10BoundsTypeERKN3gfx5PointE(%"class.aura::WindowTargeter"*, %"class.aura::Window"*, i32, %"class.gfx::Point"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.gfx::Rect", align 4
  %6 = alloca %"class.gfx::Rect", align 4
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.gfx::Point"*
  %9 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 0, i64 16, i1 false) #10
  %10 = bitcast %"class.gfx::Rect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 0, i64 16, i1 false) #10
  %11 = bitcast %"class.aura::WindowTargeter"* %0 to i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*)***
  %12 = load i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*)**, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*)*, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*)** %12, i64 5
  %14 = load i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*)*, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*)** %13, align 8
  %15 = call zeroext i1 %14(%"class.aura::WindowTargeter"* %0, %"class.aura::Window"* %1, %"class.gfx::Rect"* nonnull %5, %"class.gfx::Rect"* nonnull %6) #10
  br i1 %15, label %16, label %140

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 7, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 7, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 0, %18
  %22 = sub nsw i32 0, %20
  call void @_ZN3gfx4Rect6OffsetEii(%"class.gfx::Rect"* nonnull %5, i32 %21, i32 %22) #10
  call void @_ZN3gfx4Rect6OffsetEii(%"class.gfx::Rect"* nonnull %6, i32 %21, i32 %22) #10
  %23 = add i32 %2, -1
  %24 = icmp ult i32 %23, 2
  %25 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %3, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %3, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  br i1 %24, label %29, label %31

29:                                               ; preds = %16
  %30 = call zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"* nonnull %6, i32 %26, i32 %28) #10
  br i1 %30, label %33, label %67

31:                                               ; preds = %16
  %32 = call zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"* nonnull %5, i32 %26, i32 %28) #10
  br i1 %32, label %33, label %67

33:                                               ; preds = %29, %31
  %34 = bitcast %"class.aura::WindowTargeter"* %0 to %"class.std::__1::vector.51"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)***
  %35 = load %"class.std::__1::vector.51"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)**, %"class.std::__1::vector.51"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.51"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)*, %"class.std::__1::vector.51"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)** %35, i64 6
  %37 = load %"class.std::__1::vector.51"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)*, %"class.std::__1::vector.51"* (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)** %36, align 8
  %38 = call %"class.std::__1::vector.51"* %37(%"class.aura::WindowTargeter"* %0, %"class.aura::Window"* %1) #10
  %39 = icmp eq %"class.std::__1::vector.51"* %38, null
  br i1 %39, label %140, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %38, i64 0, i32 0, i32 0
  %42 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %38, i64 0, i32 0, i32 1
  %44 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %43, align 8
  %45 = icmp eq %"class.gfx::Rect"* %42, %44
  br i1 %45, label %57, label %48

46:                                               ; preds = %48
  %47 = icmp eq %"class.gfx::Rect"* %53, %44
  br i1 %47, label %54, label %48

48:                                               ; preds = %40, %46
  %49 = phi %"class.gfx::Rect"* [ %53, %46 ], [ %42, %40 ]
  %50 = load i32, i32* %25, align 4
  %51 = load i32, i32* %27, align 4
  %52 = call zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"* %49, i32 %50, i32 %51) #10
  %53 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %49, i64 1
  br i1 %52, label %54, label %46

54:                                               ; preds = %46, %48
  %55 = phi i1 [ true, %48 ], [ false, %46 ]
  %56 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %41, align 8
  br label %57

57:                                               ; preds = %54, %40
  %58 = phi %"class.gfx::Rect"* [ %42, %40 ], [ %56, %54 ]
  %59 = phi i1 [ false, %40 ], [ %55, %54 ]
  %60 = icmp eq %"class.gfx::Rect"* %58, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %57
  %62 = ptrtoint %"class.gfx::Rect"* %58 to i64
  %63 = bitcast %"class.gfx::Rect"** %43 to i64*
  store i64 %62, i64* %63, align 8
  %64 = bitcast %"class.gfx::Rect"* %58 to i8*
  call void @_ZdlPv(i8* %64) #9
  br label %65

65:                                               ; preds = %61, %57
  %66 = bitcast %"class.std::__1::vector.51"* %38 to i8*
  call void @_ZdlPv(i8* %66) #9
  br label %140

67:                                               ; preds = %29, %31
  %68 = bitcast %"class.aura::WindowTargeter"* %0 to i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)***
  %69 = load i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)**, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)*** %68, align 8
  %70 = getelementptr inbounds i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)*, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)** %69, i64 11
  %71 = load i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)*, i1 (%"class.aura::WindowTargeter"*, %"class.aura::Window"*)** %70, align 8
  %72 = call zeroext i1 %71(%"class.aura::WindowTargeter"* %0, %"class.aura::Window"* %1) #10
  br i1 %72, label %73, label %101

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 2, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 2, i32 3
  %77 = load i32, i32* %76, align 4
  %78 = sub i32 0, %75
  %79 = icmp eq i32 %77, %78
  br i1 %79, label %80, label %140

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 2, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 2, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = sub i32 0, %82
  %86 = icmp eq i32 %84, %85
  br i1 %86, label %87, label %140

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 3, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 3, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = sub i32 0, %89
  %93 = icmp eq i32 %91, %92
  br i1 %93, label %94, label %140

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 3, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 3, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = sub i32 0, %96
  %100 = icmp eq i32 %98, %99
  br i1 %100, label %101, label %140

101:                                              ; preds = %94, %67
  %102 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 1, i32 2
  %103 = load %"class.ui::Layer"*, %"class.ui::Layer"** %102, align 8
  %104 = call zeroext i1 @_ZNK2ui5Layer16GetMasksToBoundsEv(%"class.ui::Layer"* %103) #10
  br i1 %104, label %140, label %105

105:                                              ; preds = %101
  %106 = bitcast %"class.aura::Window"* %1 to %"class.ui::EventTargetIterator"* (%"class.aura::Window"*)***
  %107 = load %"class.ui::EventTargetIterator"* (%"class.aura::Window"*)**, %"class.ui::EventTargetIterator"* (%"class.aura::Window"*)*** %106, align 8
  %108 = getelementptr inbounds %"class.ui::EventTargetIterator"* (%"class.aura::Window"*)*, %"class.ui::EventTargetIterator"* (%"class.aura::Window"*)** %107, i64 19
  %109 = load %"class.ui::EventTargetIterator"* (%"class.aura::Window"*)*, %"class.ui::EventTargetIterator"* (%"class.aura::Window"*)** %108, align 8
  %110 = call %"class.ui::EventTargetIterator"* %109(%"class.aura::Window"* %1) #10
  %111 = icmp eq %"class.ui::EventTargetIterator"* %110, null
  br i1 %111, label %140, label %112

112:                                              ; preds = %105
  %113 = bitcast %"class.ui::EventTargetIterator"* %110 to %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)***
  %114 = load %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)**, %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)*** %113, align 8
  %115 = getelementptr inbounds %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)*, %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)** %114, i64 2
  %116 = load %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)*, %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)** %115, align 8
  %117 = call %"class.ui::EventTarget"* %116(%"class.ui::EventTargetIterator"* nonnull %110) #10
  %118 = icmp eq %"class.ui::EventTarget"* %117, null
  br i1 %118, label %134, label %119

119:                                              ; preds = %112
  %120 = bitcast i64* %7 to i8*
  %121 = bitcast %"class.gfx::Point"* %3 to i64*
  br label %122

122:                                              ; preds = %119, %128
  %123 = phi %"class.ui::EventTarget"* [ %117, %119 ], [ %132, %128 ]
  %124 = getelementptr inbounds %"class.ui::EventTarget", %"class.ui::EventTarget"* %123, i64 -2, i32 2, i32 0, i32 1
  %125 = bitcast %"class.ui::EventHandler"*** %124 to %"class.aura::Window"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #10
  %126 = load i64, i64* %121, align 4
  store i64 %126, i64* %7, align 8
  call void @_ZN4aura6Window20ConvertPointToTargetEPKS0_S2_PN3gfx5PointE(%"class.aura::Window"* %1, %"class.aura::Window"* %125, %"class.gfx::Point"* nonnull %8) #10
  %127 = call zeroext i1 @_ZNK4aura14WindowTargeter17PointInsideBoundsEPNS_6WindowENS0_10BoundsTypeERKN3gfx5PointE(%"class.aura::WindowTargeter"* %0, %"class.aura::Window"* %125, i32 %2, %"class.gfx::Point"* nonnull dereferenceable(8) %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #10
  br i1 %127, label %134, label %128

128:                                              ; preds = %122
  %129 = load %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)**, %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)*** %113, align 8
  %130 = getelementptr inbounds %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)*, %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)** %129, i64 2
  %131 = load %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)*, %"class.ui::EventTarget"* (%"class.ui::EventTargetIterator"*)** %130, align 8
  %132 = call %"class.ui::EventTarget"* %131(%"class.ui::EventTargetIterator"* nonnull %110) #10
  %133 = icmp eq %"class.ui::EventTarget"* %132, null
  br i1 %133, label %134, label %122

134:                                              ; preds = %122, %128, %112
  %135 = phi i1 [ false, %112 ], [ false, %128 ], [ true, %122 ]
  %136 = bitcast %"class.ui::EventTargetIterator"* %110 to void (%"class.ui::EventTargetIterator"*)***
  %137 = load void (%"class.ui::EventTargetIterator"*)**, void (%"class.ui::EventTargetIterator"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.ui::EventTargetIterator"*)*, void (%"class.ui::EventTargetIterator"*)** %137, i64 1
  %139 = load void (%"class.ui::EventTargetIterator"*)*, void (%"class.ui::EventTargetIterator"*)** %138, align 8
  call void %139(%"class.ui::EventTargetIterator"* nonnull %110) #10
  br label %140

140:                                              ; preds = %33, %105, %87, %73, %94, %80, %101, %65, %134, %4
  %141 = phi i1 [ false, %4 ], [ false, %94 ], [ false, %80 ], [ false, %101 ], [ %59, %65 ], [ %135, %134 ], [ true, %33 ], [ false, %73 ], [ false, %87 ], [ false, %105 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret i1 %141
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4aura14WindowTargeter23ShouldUseExtendedBoundsEPKNS_6WindowE(%"class.aura::WindowTargeter"* nocapture readonly, %"class.aura::Window"* readnone) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %0, i64 0, i32 1
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = icmp ne %"class.aura::Window"* %4, null
  %6 = icmp eq %"class.aura::Window"* %4, %1
  %7 = and i1 %6, %5
  ret i1 %7
}

declare zeroext i1 @_ZNK2ui5Layer16GetMasksToBoundsEv(%"class.ui::Layer"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"*, i32, i32) local_unnamed_addr #4

declare i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN3gfx4Rect6OffsetEii(%"class.gfx::Rect"*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
