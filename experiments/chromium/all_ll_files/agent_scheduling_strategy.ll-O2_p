; ModuleID = '../../third_party/blink/renderer/platform/scheduler/main_thread/agent_scheduling_strategy.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/main_thread/agent_scheduling_strategy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::FeatureParam" = type { %"struct.base::Feature"*, i8*, i32, %"struct.base::FeatureParam<blink::scheduler::PerAgentAffectedQueues, true>::Option"*, i64 }
%"struct.base::FeatureParam<blink::scheduler::PerAgentAffectedQueues, true>::Option" = type { i32, i8* }
%"struct.base::FeatureParam.390" = type { %"struct.base::Feature"*, i8*, i32, %"struct.base::FeatureParam<blink::scheduler::PerAgentSlowDownMethod, true>::Option"*, i64 }
%"struct.base::FeatureParam<blink::scheduler::PerAgentSlowDownMethod, true>::Option" = type { i32, i8* }
%"struct.base::FeatureParam.391" = type { %"struct.base::Feature"*, i8*, i32, %"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option"*, i64 }
%"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option" = type { i32, i8* }
%"class.blink::scheduler::AgentSchedulingStrategy" = type { i32 (...)** }
%"class.blink::scheduler::AgentSchedulingStrategy::Delegate" = type { i32 (...)** }
%"struct.base::FeatureParam.392" = type <{ %"struct.base::Feature"*, i8*, i32, [4 x i8] }>
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.PollableThreadSafeFlag = type { i32, %"class.base::Lock"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.160 }
%union.anon.160 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy" = type { %"class.blink::scheduler::AgentSchedulingStrategy" }
%"class.blink::scheduler::FrameSchedulerImpl" = type { %"class.blink::FrameScheduler", %"class.blink::scheduler::FrameTaskQueueController::Delegate", i32, i8, %"class.base::TimeDelta", %"class.blink::scheduler::TraceableVariableController", %"class.std::__1::unique_ptr.36", %"class.WTF::HashMap.147", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::PageSchedulerImpl"*, %"class.blink::FrameScheduler::Delegate"*, %"class.base::trace_event::BlameContext"*, i32, [4 x i8], %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.355", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::StateTracer", %"class.blink::scheduler::TraceableState", %"class.WTF::Vector.357", %"class.blink::scheduler::TraceableState", i32, [4 x i8], %"class.blink::scheduler::TraceableState", i64, %"class.base::flat_map", %"class.std::__1::bitset", %"class.blink::scheduler::TraceableState", i64, i8, i8, [6 x i8], %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.372", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.std::__1::unique_ptr.374", %"class.base::WeakPtrFactory.380", %"class.base::WeakPtrFactory.380", %"class.base::WeakPtrFactory.380" }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.10" }
%"class.WTF::HashTable.10" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"class.blink::scheduler::FrameTaskQueueController::Delegate" = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::scheduler::TraceableVariableController" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.19", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.33", [4 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21", %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { float }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::scheduler::FrameTaskQueueController"* }
%"class.blink::scheduler::FrameTaskQueueController" = type { %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameTaskQueueController::Delegate"*, %"class.WTF::HashMap.39", %"class.WTF::HashSet.44", %"class.WTF::HashMap.137", %"class.WTF::Vector" }
%"class.WTF::HashMap.39" = type { %"class.WTF::HashTable.40" }
%"class.WTF::HashTable.40" = type <{ %"struct.WTF::KeyValuePair.43"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.43" = type opaque
%"class.WTF::HashSet.44" = type { %"class.WTF::HashTable.45" }
%"class.WTF::HashTable.45" = type <{ %class.scoped_refptr.48*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.48 = type { %"class.blink::scheduler::MainThreadTaskQueue"* }
%"class.blink::scheduler::MainThreadTaskQueue" = type { %"class.base::RefCountedThreadSafe.49", %class.scoped_refptr.50, i32, %"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits", i8, %"class.absl::optional.126", %"class.absl::optional.131", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::AgentGroupSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.base::WeakPtrFactory.136" }
%"class.base::RefCountedThreadSafe.49" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.50 = type { %"class.base::sequence_manager::TaskQueue"* }
%"class.base::sequence_manager::TaskQueue" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.51", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.52", %"class.base::WeakPtr", %class.scoped_refptr.55, %class.scoped_refptr.124, i32, i32, i8*, %"class.base::WeakPtrFactory.125" }
%"class.base::RefCountedThreadSafe.51" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr.55, %class.scoped_refptr.57, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%class.scoped_refptr.57 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.58", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.58" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.59", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl.62" }
%"struct.std::__1::__cxx_atomic_impl.62" = type { %"struct.std::__1::__cxx_atomic_base_impl.63" }
%"struct.std::__1::__cxx_atomic_base_impl.63" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.64, i8, [7 x i8] }>
%class.scoped_refptr.64 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.65", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.65" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.66" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TimeDomain" = type { i32 (...)**, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::internal::IntrusiveHeap", i32, %class.scoped_refptr.55 }
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"class.std::__1::__compressed_pair.70" }
%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp" = type { %"struct.base::sequence_manager::internal::DelayedWakeUp", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* }
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr.75", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.81 }
%class.scoped_refptr.81 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.82", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.82" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.83", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.107", %"class.base::RepeatingCallback.108", %"class.absl::optional.109", i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type opaque
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.89", %"struct.std::__1::less" }>
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.93" }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.91, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.91 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.92" }>
%"class.base::RefCountedThreadSafe.92" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.99", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.101" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::HeapHandle" = type { i64 }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::RepeatingCallback.107" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.108" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.109" = type { %"class.absl::optional_internal::optional_data.110" }
%"class.absl::optional_internal::optional_data.110" = type { %"class.absl::optional_internal::optional_data_base.111" }
%"class.absl::optional_internal::optional_data_base.111" = type { %"class.absl::optional_internal::optional_data_dtor_base.112" }
%"class.absl::optional_internal::optional_data_dtor_base.112" = type { i8, %union.anon.113 }
%union.anon.113 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr.55, %"class.std::__1::unique_ptr.114", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.385", i64, [64 x %"class.base::RepeatingCallback.277"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.114", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.std::__1::atomic.385" = type { %"struct.std::__1::__atomic_base.386" }
%"struct.std::__1::__atomic_base.386" = type { %"struct.std::__1::__atomic_base.387" }
%"struct.std::__1::__atomic_base.387" = type { %"struct.std::__1::__cxx_atomic_impl.388" }
%"struct.std::__1::__cxx_atomic_impl.388" = type { %"struct.std::__1::__cxx_atomic_base_impl.389" }
%"struct.std::__1::__cxx_atomic_base_impl.389" = type { i64 }
%"class.base::RepeatingCallback.277" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.123 }
%class.scoped_refptr.123 = type { %"class.base::internal::WeakReference::Flag"* }
%class.scoped_refptr.55 = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe.56", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe.56" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.124 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.125" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits" = type { i8, i32 }
%"class.absl::optional.126" = type { %"class.absl::optional_internal::optional_data.127" }
%"class.absl::optional_internal::optional_data.127" = type { %"class.absl::optional_internal::optional_data_base.128" }
%"class.absl::optional_internal::optional_data_base.128" = type { %"class.absl::optional_internal::optional_data_dtor_base.129" }
%"class.absl::optional_internal::optional_data_dtor_base.129" = type { i8, %union.anon.130 }
%union.anon.130 = type { i32 }
%"class.absl::optional.131" = type { %"class.absl::optional_internal::optional_data.132" }
%"class.absl::optional_internal::optional_data.132" = type { %"class.absl::optional_internal::optional_data_base.133" }
%"class.absl::optional_internal::optional_data_base.133" = type { %"class.absl::optional_internal::optional_data_dtor_base.134" }
%"class.absl::optional_internal::optional_data_dtor_base.134" = type { i8, %union.anon.135 }
%union.anon.135 = type { i32 }
%"class.blink::scheduler::AgentGroupSchedulerImpl" = type { %"class.blink::AgentGroupScheduler", %class.scoped_refptr.48, %class.scoped_refptr.124, %class.scoped_refptr.48, %class.scoped_refptr.124, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::BrowserInterfaceBrokerProxy" }
%"class.blink::AgentGroupScheduler" = type { %"class.blink::scheduler::WebAgentGroupScheduler" }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote", %"class.std::__1::map.330" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.324" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.156, %"class.std::__1::unique_ptr.274", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.91, i32 }>
%class.scoped_refptr.156 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.91, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.240", %"class.absl::optional.245", %"class.absl::optional.201", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.265", i8, [7 x i8], %class.scoped_refptr.91, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.157" }>
%"class.base::RefCountedThreadSafe.157" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.176" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.176" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.91, %"class.std::__1::unique_ptr.177", %"class.absl::optional.187", %"struct.std::__1::atomic.197", i8, i8, i8, i8, i32, i32, %"class.absl::optional.201", %"class.std::__1::unique_ptr.206", i8, i64, %class.scoped_refptr.236, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.238", %"class.base::WeakPtrFactory.239" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.91, i8, %"class.mojo::ScopedHandleBase.180", %class.scoped_refptr.181, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.182", i8*, %"class.base::WeakPtrFactory.183" }
%"class.mojo::ScopedHandleBase.180" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.181 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.182" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.183" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.187" = type { %"class.absl::optional_internal::optional_data.188" }
%"class.absl::optional_internal::optional_data.188" = type { %"class.absl::optional_internal::optional_data_base.189" }
%"class.absl::optional_internal::optional_data_base.189" = type { %"class.absl::optional_internal::optional_data_dtor_base.190" }
%"class.absl::optional_internal::optional_data_dtor_base.190" = type { i8, %union.anon.191 }
%union.anon.191 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.192", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.192" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i8 }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.209", i8, i64, %class.scoped_refptr.210, %class.scoped_refptr.232 }
%"class.base::RepeatingCallback.209" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.210 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.221", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.211 }
%class.scoped_refptr.211 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.212", %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::map.221" = type { %"class.std::__1::__tree.222" }
%"class.std::__1::__tree.222" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.223", %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%class.scoped_refptr.232 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.236 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.384", [4 x i8], %"class.base::RepeatingCallback.277", %class.scoped_refptr.91, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.59", [4 x i8] }>
%"class.base::RefCountedThreadSafe.384" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.238" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.239" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.240" = type { %"class.absl::optional_internal::optional_data.241" }
%"class.absl::optional_internal::optional_data.241" = type { %"class.absl::optional_internal::optional_data_base.242" }
%"class.absl::optional_internal::optional_data_base.242" = type { %"class.absl::optional_internal::optional_data_dtor_base.243" }
%"class.absl::optional_internal::optional_data_dtor_base.243" = type { i8, %union.anon.244 }
%union.anon.244 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.245" = type { %"class.absl::optional_internal::optional_data.246" }
%"class.absl::optional_internal::optional_data.246" = type { %"class.absl::optional_internal::optional_data_base.247" }
%"class.absl::optional_internal::optional_data_base.247" = type { %"class.absl::optional_internal::optional_data_dtor_base.248" }
%"class.absl::optional_internal::optional_data_dtor_base.248" = type { i8, [7 x i8], %union.anon.249 }
%union.anon.249 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.201" = type { %"class.absl::optional_internal::optional_data.202" }
%"class.absl::optional_internal::optional_data.202" = type { %"class.absl::optional_internal::optional_data_base.203" }
%"class.absl::optional_internal::optional_data_base.203" = type { %"class.absl::optional_internal::optional_data_dtor_base.204" }
%"class.absl::optional_internal::optional_data_dtor_base.204" = type { i8, %union.anon.205 }
%union.anon.205 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.250 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.250 = type { %"class.std::__1::map.253" }
%"class.std::__1::map.253" = type { %"class.std::__1::__tree.254" }
%"class.std::__1::__tree.254" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.255", %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.264"*, i64 }
%"class.std::__1::unique_ptr.264" = type opaque
%"class.std::__1::map.265" = type { %"class.std::__1::__tree.266" }
%"class.std::__1::__tree.266" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.267", %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.277", %"class.base::OnceCallback.278", %"class.absl::optional.279", %"class.absl::optional.284", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.291", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.299", %"class.std::__1::map.310", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.319", i8, %class.scoped_refptr.91, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.320" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.278" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.279" = type { %"class.absl::optional_internal::optional_data.280" }
%"class.absl::optional_internal::optional_data.280" = type { %"class.absl::optional_internal::optional_data_base.281" }
%"class.absl::optional_internal::optional_data_base.281" = type { %"class.absl::optional_internal::optional_data_dtor_base.282" }
%"class.absl::optional_internal::optional_data_dtor_base.282" = type { i8, %union.anon.283 }
%union.anon.283 = type { %"class.base::TimeDelta" }
%"class.absl::optional.284" = type { %"class.absl::optional_internal::optional_data.285" }
%"class.absl::optional_internal::optional_data.285" = type { %"class.absl::optional_internal::optional_data_base.286" }
%"class.absl::optional_internal::optional_data_base.286" = type { %"class.absl::optional_internal::optional_data_dtor_base.287" }
%"class.absl::optional_internal::optional_data_dtor_base.287" = type { i8, %union.anon.288 }
%union.anon.288 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.91, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.289" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.289" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.290 }
%class.scoped_refptr.290 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.294", %class.scoped_refptr.295 }
%"class.base::RepeatingCallback.294" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.295 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.157", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.299" = type { %"class.std::__1::__tree.300" }
%"class.std::__1::__tree.300" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.301", %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::map.310" = type { %"class.std::__1::__tree.311" }
%"class.std::__1::__tree.311" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.312", %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.base::OnceCallback.319" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.320" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.330" = type { %"class.std::__1::__tree.331" }
%"class.std::__1::__tree.331" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.332", %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.base::WeakPtrFactory.136" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::HashMap.137" = type { %"class.WTF::HashTable.138" }
%"class.WTF::HashTable.138" = type <{ %"struct.WTF::KeyValuePair.141"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.141" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.WTF::HashMap.147" = type { %"class.WTF::HashTable.148" }
%"class.WTF::HashTable.148" = type <{ %"struct.WTF::KeyValuePair.151"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.151" = type opaque
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::scheduler::PageSchedulerImpl" = type { %"class.blink::PageScheduler", i8, [7 x i8], %"class.blink::scheduler::TraceableVariableController", %"class.WTF::HashSet.152", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::AgentGroupSchedulerImpl"*, i32, %"class.base::TimeTicks", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::PageScheduler::Delegate"*, %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.base::TimeDelta", i8, %"class.base::TimeDelta", i8, %"class.blink::TaskHandle", %"class.base::TimeTicks", %"class.std::__1::unique_ptr.348", %"class.base::WeakPtrFactory.354" }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.WTF::HashSet.152" = type { %"class.WTF::HashTable.153" }
%"class.WTF::HashTable.153" = type <{ %"class.blink::scheduler::FrameSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.blink::scheduler::CPUTimeBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.absl::optional.279", %"class.absl::optional.279", %"class.base::TimeDelta", %"class.blink::scheduler::TraceableCounter", %"class.base::TimeTicks", double, %"class.base::RepeatingCallback.345" }
%"class.blink::scheduler::BudgetPool.base" = type <{ i32 (...)**, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.WTF::HashSet.341", i8 }>
%"class.blink::scheduler::BudgetPoolController" = type { i32 (...)** }
%"class.WTF::HashSet.341" = type { %"class.WTF::HashTable.342" }
%"class.WTF::HashTable.342" = type <{ %"class.base::sequence_manager::TaskQueue"**, i32, i32, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableCounter" = type { %"class.blink::scheduler::TraceableVariable", i8*, double (%"class.base::TimeDelta"*)*, %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableVariable" = type { i32 (...)**, %"class.blink::scheduler::TraceableVariableController"* }
%"class.base::RepeatingCallback.345" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::scheduler::WakeUpBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, %"class.absl::optional" }
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::CancelableClosureHolder" = type { %"class.base::RepeatingCallback.277", %"class.base::internal::CancelableCallbackImpl" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::RepeatingCallback.277", %"class.base::WeakPtrFactory.346" }
%"class.base::WeakPtrFactory.346" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.347 }
%class.scoped_refptr.347 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::scheduler::PageSchedulerImpl::PageLifecycleStateTracker"* }
%"class.blink::scheduler::PageSchedulerImpl::PageLifecycleStateTracker" = type <{ %"class.blink::scheduler::PageSchedulerImpl"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.354" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.base::trace_event::BlameContext" = type { %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory.106" }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory.106" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::TraceableState.355" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::StateTracer.base" = type <{ i8*, i8 }>
%"class.blink::scheduler::StateTracer" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::Vector.357" = type { %"class.WTF::VectorBuffer.358" }
%"class.WTF::VectorBuffer.358" = type { %"class.WTF::VectorBufferBase.359" }
%"class.WTF::VectorBufferBase.359" = type { %"class.blink::scheduler::MainThreadTaskQueue::ThrottleHandle"*, i32, i32 }
%"class.blink::scheduler::MainThreadTaskQueue::ThrottleHandle" = type { %"class.base::WeakPtr.360", %"class.base::WeakPtr.361" }
%"class.base::WeakPtr.360" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.361" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.364" }
%"class.std::__1::vector.364" = type { %"class.std::__1::__vector_base.365" }
%"class.std::__1::__vector_base.365" = type { %"struct.std::__1::pair.366"*, %"struct.std::__1::pair.366"*, %"class.std::__1::__compressed_pair.367" }
%"struct.std::__1::pair.366" = type opaque
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"struct.std::__1::pair.366"* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.blink::scheduler::TraceableState.372" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableState" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.power_scheduler::PowerModeVoter"* }
%"class.power_scheduler::PowerModeVoter" = type { %"class.power_scheduler::PowerModeVoter::Delegate"* }
%"class.power_scheduler::PowerModeVoter::Delegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory.380" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal" = type { %"class.blink::scheduler::AgentSchedulingStrategy", %"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, i32, i32, i32, %"class.base::TimeDelta", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.base::Lock", %class.PollableThreadSafeFlag }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::scheduler::FrameSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }

$_ZNK4base12FeatureParamIN5blink9scheduler22PerAgentAffectedQueuesELb1EE3GetEv = comdat any

$_ZNK4base12FeatureParamIN5blink9scheduler22PerAgentSlowDownMethodELb1EE3GetEv = comdat any

$_ZNK4base12FeatureParamIN5blink9scheduler14PerAgentSignalELb1EE3GetEv = comdat any

$_ZN3WTF9HashTableIPKN5blink9scheduler18FrameSchedulerImplES5_NS_17IdentityExtractorENS_7PtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKS5_S5_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9scheduler18FrameSchedulerImplES5_NS_17IdentityExtractorENS_7PtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9scheduler18FrameSchedulerImplES5_NS_17IdentityExtractorENS_7PtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSD_ = comdat any

@_ZTVN5blink9scheduler23AgentSchedulingStrategyE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::AgentSchedulingStrategy"*)* @_ZN5blink9scheduler23AgentSchedulingStrategyD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::AgentSchedulingStrategy"*)* @_ZN5blink9scheduler23AgentSchedulingStrategyD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN5blink9schedulerL30kPerAgentSchedulingExperimentsE = internal constant %"struct.base::Feature" { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i32 0, i32 0), i32 0 }, align 8
@_ZN5blink9schedulerL15kPerAgentQueuesE = internal constant %"struct.base::FeatureParam" { %"struct.base::Feature"* @_ZN5blink9schedulerL30kPerAgentSchedulingExperimentsE, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i32 0, %"struct.base::FeatureParam<blink::scheduler::PerAgentAffectedQueues, true>::Option"* getelementptr inbounds ([2 x %"struct.base::FeatureParam<blink::scheduler::PerAgentAffectedQueues, true>::Option"], [2 x %"struct.base::FeatureParam<blink::scheduler::PerAgentAffectedQueues, true>::Option"]* @_ZN5blink9schedulerL22kPerAgentQueuesOptionsE, i32 0, i32 0), i64 2 }, align 8
@_ZN5blink9schedulerL15kPerAgentMethodE = internal constant %"struct.base::FeatureParam.390" { %"struct.base::Feature"* @_ZN5blink9schedulerL30kPerAgentSchedulingExperimentsE, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i32 0, %"struct.base::FeatureParam<blink::scheduler::PerAgentSlowDownMethod, true>::Option"* getelementptr inbounds ([2 x %"struct.base::FeatureParam<blink::scheduler::PerAgentSlowDownMethod, true>::Option"], [2 x %"struct.base::FeatureParam<blink::scheduler::PerAgentSlowDownMethod, true>::Option"]* @_ZN5blink9schedulerL22kPerAgentMethodOptionsE, i32 0, i32 0), i64 2 }, align 8
@_ZN5blink9schedulerL15kPerAgentSignalE = internal constant %"struct.base::FeatureParam.391" { %"struct.base::Feature"* @_ZN5blink9schedulerL30kPerAgentSchedulingExperimentsE, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), i32 0, %"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option"* getelementptr inbounds ([3 x %"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option"], [3 x %"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option"]* @_ZN5blink9schedulerL22kPerAgentSignalOptionsE, i32 0, i32 0), i64 3 }, align 8
@.str = private unnamed_addr constant [44 x i8] c"BlinkSchedulerPerAgentSchedulingExperiments\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"queues\00", align 1
@_ZN5blink9schedulerL22kPerAgentQueuesOptionsE = internal constant [2 x %"struct.base::FeatureParam<blink::scheduler::PerAgentAffectedQueues, true>::Option"] [%"struct.base::FeatureParam<blink::scheduler::PerAgentAffectedQueues, true>::Option" { i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0) }, %"struct.base::FeatureParam<blink::scheduler::PerAgentAffectedQueues, true>::Option" { i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0) }], align 16
@.str.2 = private unnamed_addr constant [13 x i8] c"timer-queues\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"all-queues\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"method\00", align 1
@_ZN5blink9schedulerL22kPerAgentMethodOptionsE = internal constant [2 x %"struct.base::FeatureParam<blink::scheduler::PerAgentSlowDownMethod, true>::Option"] [%"struct.base::FeatureParam<blink::scheduler::PerAgentSlowDownMethod, true>::Option" { i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0) }, %"struct.base::FeatureParam<blink::scheduler::PerAgentSlowDownMethod, true>::Option" { i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i32 0, i32 0) }], align 16
@.str.5 = private unnamed_addr constant [8 x i8] c"disable\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"best-effort\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"signal\00", align 1
@_ZN5blink9schedulerL22kPerAgentSignalOptionsE = internal constant [3 x %"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option"] [%"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option" { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0) }, %"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option" { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0) }, %"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option" { i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0) }], align 16
@.str.8 = private unnamed_addr constant [4 x i8] c"fmp\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"onload\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"delay\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"delay_ms\00", align 1
@_ZN5blink9schedulerL16kPerAgentDelayMsE = internal constant { %"struct.base::Feature"*, i8*, i32 } { %"struct.base::Feature"* @_ZN5blink9schedulerL30kPerAgentSchedulingExperimentsE, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i32 0 }, align 8
@_ZTVN5blink9scheduler12_GLOBAL__N_112NoOpStrategyE = internal unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::AgentSchedulingStrategy"*)* @_ZN5blink9scheduler23AgentSchedulingStrategyD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"*)* @_ZN5blink9scheduler12_GLOBAL__N_112NoOpStrategyD0Ev to i8*), i8* bitcast (i32 (%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"*, %"class.blink::scheduler::FrameSchedulerImpl"*)* @_ZN5blink9scheduler12_GLOBAL__N_112NoOpStrategy12OnFrameAddedERKNS0_18FrameSchedulerImplE to i8*), i8* bitcast (i32 (%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"*, %"class.blink::scheduler::FrameSchedulerImpl"*)* @_ZN5blink9scheduler12_GLOBAL__N_112NoOpStrategy14OnFrameRemovedERKNS0_18FrameSchedulerImplE to i8*), i8* bitcast (i32 (%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"*, %"class.blink::scheduler::FrameSchedulerImpl"*)* @_ZN5blink9scheduler12_GLOBAL__N_112NoOpStrategy31OnMainFrameFirstMeaningfulPaintERKNS0_18FrameSchedulerImplE to i8*), i8* bitcast (i32 (%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"*)* @_ZN5blink9scheduler12_GLOBAL__N_112NoOpStrategy12OnInputEventEv to i8*), i8* bitcast (i32 (%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"*, %"class.blink::scheduler::FrameSchedulerImpl"*)* @_ZN5blink9scheduler12_GLOBAL__N_112NoOpStrategy28OnDocumentChangedInMainFrameERKNS0_18FrameSchedulerImplE to i8*), i8* bitcast (i32 (%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"*, %"class.blink::scheduler::FrameSchedulerImpl"*)* @_ZN5blink9scheduler12_GLOBAL__N_112NoOpStrategy15OnMainFrameLoadERKNS0_18FrameSchedulerImplE to i8*), i8* bitcast (i32 (%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"*, %"class.blink::scheduler::FrameSchedulerImpl"*)* @_ZN5blink9scheduler12_GLOBAL__N_112NoOpStrategy13OnDelayPassedERKNS0_18FrameSchedulerImplE to i8*), i8* bitcast (i16 (%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"*, %"class.blink::scheduler::MainThreadTaskQueue"*)* @_ZNK5blink9scheduler12_GLOBAL__N_112NoOpStrategy17QueueEnabledStateERKNS0_19MainThreadTaskQueueE to i8*), i8* bitcast (i16 (%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"*, %"class.blink::scheduler::MainThreadTaskQueue"*)* @_ZNK5blink9scheduler12_GLOBAL__N_112NoOpStrategy13QueuePriorityERKNS0_19MainThreadTaskQueueE to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"*)* @_ZNK5blink9scheduler12_GLOBAL__N_112NoOpStrategy24ShouldNotifyOnInputEventEv to i8*)] }, align 8
@_ZTVN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignalE = internal unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*)* @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignalD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*)* @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignalD0Ev to i8*), i8* bitcast (i32 (%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*, %"class.blink::scheduler::FrameSchedulerImpl"*)* @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal12OnFrameAddedERKNS0_18FrameSchedulerImplE to i8*), i8* bitcast (i32 (%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*, %"class.blink::scheduler::FrameSchedulerImpl"*)* @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal14OnFrameRemovedERKNS0_18FrameSchedulerImplE to i8*), i8* bitcast (i32 (%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*, %"class.blink::scheduler::FrameSchedulerImpl"*)* @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal31OnMainFrameFirstMeaningfulPaintERKNS0_18FrameSchedulerImplE to i8*), i8* bitcast (i32 (%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*)* @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal12OnInputEventEv to i8*), i8* bitcast (i32 (%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*, %"class.blink::scheduler::FrameSchedulerImpl"*)* @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal28OnDocumentChangedInMainFrameERKNS0_18FrameSchedulerImplE to i8*), i8* bitcast (i32 (%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*, %"class.blink::scheduler::FrameSchedulerImpl"*)* @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal15OnMainFrameLoadERKNS0_18FrameSchedulerImplE to i8*), i8* bitcast (i32 (%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*, %"class.blink::scheduler::FrameSchedulerImpl"*)* @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal13OnDelayPassedERKNS0_18FrameSchedulerImplE to i8*), i8* bitcast (i16 (%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*, %"class.blink::scheduler::MainThreadTaskQueue"*)* @_ZNK5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal17QueueEnabledStateERKNS0_19MainThreadTaskQueueE to i8*), i8* bitcast (i16 (%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*, %"class.blink::scheduler::MainThreadTaskQueue"*)* @_ZNK5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal13QueuePriorityERKNS0_19MainThreadTaskQueueE to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*)* @_ZNK5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal24ShouldNotifyOnInputEventEv to i8*)] }, align 8
@.str.14 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.15 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink9scheduler18FrameSchedulerImplEEEPKcv = private unnamed_addr constant [92 x i8] c"const char *WTF::GetStringWithTypeName() [T = const blink::scheduler::FrameSchedulerImpl *]\00", align 1

@_ZN5blink9scheduler23AgentSchedulingStrategyD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::AgentSchedulingStrategy"*), void (%"class.blink::scheduler::AgentSchedulingStrategy"*)* @_ZN5blink9scheduler23AgentSchedulingStrategyD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink9scheduler23AgentSchedulingStrategy19VerifyValidSequenceEv(%"class.blink::scheduler::AgentSchedulingStrategy"* nocapture) local_unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler23AgentSchedulingStrategyD0Ev(%"class.blink::scheduler::AgentSchedulingStrategy"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::scheduler::AgentSchedulingStrategy"* @_ZN5blink9scheduler23AgentSchedulingStrategy6CreateERNS1_8DelegateE(%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"* dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %2 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink9schedulerL30kPerAgentSchedulingExperimentsE) #14
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = tail call i8* @_Znwm(i64 8) #15
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_112NoOpStrategyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  br label %32

6:                                                ; preds = %1
  %7 = tail call i32 @_ZNK4base12FeatureParamIN5blink9scheduler22PerAgentAffectedQueuesELb1EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN5blink9schedulerL15kPerAgentQueuesE)
  %8 = tail call i32 @_ZNK4base12FeatureParamIN5blink9scheduler22PerAgentSlowDownMethodELb1EE3GetEv(%"struct.base::FeatureParam.390"* nonnull @_ZN5blink9schedulerL15kPerAgentMethodE)
  %9 = tail call i32 @_ZNK4base12FeatureParamIN5blink9scheduler14PerAgentSignalELb1EE3GetEv(%"struct.base::FeatureParam.391"* nonnull @_ZN5blink9schedulerL15kPerAgentSignalE)
  %10 = tail call i32 @_ZNK4base12FeatureParamIiLb0EE3GetEv(%"struct.base::FeatureParam.392"* bitcast ({ %"struct.base::Feature"*, i8*, i32 }* @_ZN5blink9schedulerL16kPerAgentDelayMsE to %"struct.base::FeatureParam.392"*)) #14
  %11 = sext i32 %10 to i64
  %12 = mul nsw i64 %11, 1000
  %13 = tail call i8* @_Znwm(i64 144) #15
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to %"class.blink::scheduler::AgentSchedulingStrategy::Delegate"**
  store %"class.blink::scheduler::AgentSchedulingStrategy::Delegate"* %0, %"class.blink::scheduler::AgentSchedulingStrategy::Delegate"** %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 %7, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %13, i64 20
  %20 = bitcast i8* %19 to i32*
  store i32 %8, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %13, i64 24
  %22 = bitcast i8* %21 to i32*
  store i32 %9, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %13, i64 32
  %24 = bitcast i8* %23 to i64*
  store i64 %12, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %13, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 20, i1 false) #14
  %26 = getelementptr inbounds i8, i8* %13, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 20, i1 false) #14
  %27 = getelementptr inbounds i8, i8* %13, i64 88
  %28 = bitcast i8* %27 to %"class.base::Lock"*
  %29 = bitcast i8* %27 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %29) #14
  %30 = getelementptr inbounds i8, i8* %13, i64 128
  %31 = bitcast i8* %30 to %class.PollableThreadSafeFlag*
  tail call void @_ZN22PollableThreadSafeFlagC1EPN4base4LockE(%class.PollableThreadSafeFlag* %31, %"class.base::Lock"* %28) #14
  br label %32

32:                                               ; preds = %6, %3
  %33 = phi i8* [ %13, %6 ], [ %4, %3 ]
  %34 = bitcast i8* %33 to %"class.blink::scheduler::AgentSchedulingStrategy"*
  ret %"class.blink::scheduler::AgentSchedulingStrategy"* %34
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4base12FeatureParamIN5blink9scheduler22PerAgentAffectedQueuesELb1EE3GetEv(%"struct.base::FeatureParam"*) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load %"struct.base::Feature"*, %"struct.base::Feature"** %8, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i64 @strlen(i8* %13) #14
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #13
  unreachable

18:                                               ; preds = %1
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #15
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

29:                                               ; preds = %18
  %30 = trunc i64 %14 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = icmp eq i64 %14, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29, %20
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %28, %20 ]
  %36 = phi i8* [ %11, %29 ], [ %23, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %13, i64 %14, i1 false) #14
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %35, %34 ]
  %39 = phi i8* [ %11, %29 ], [ %36, %34 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %14
  store i8 0, i8* %40, align 1
  call void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"struct.base::Feature"* dereferenceable(16) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %37, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  %48 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i64, i64* %7, align 8
  %53 = zext i8 %50 to i64
  %54 = select i1 %51, i64 %52, i64 %53
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 4
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %92, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 3
  br label %64

62:                                               ; preds = %47
  %63 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 2
  br label %132

64:                                               ; preds = %86, %60
  %65 = phi i64 [ %58, %60 ], [ %83, %86 ]
  %66 = phi i64 [ %52, %60 ], [ %88, %86 ]
  %67 = phi i8 [ %50, %60 ], [ %87, %86 ]
  %68 = phi i64 [ 0, %60 ], [ %84, %86 ]
  %69 = load %"struct.base::FeatureParam<blink::scheduler::PerAgentAffectedQueues, true>::Option"*, %"struct.base::FeatureParam<blink::scheduler::PerAgentAffectedQueues, true>::Option"** %61, align 8
  %70 = getelementptr inbounds %"struct.base::FeatureParam<blink::scheduler::PerAgentAffectedQueues, true>::Option", %"struct.base::FeatureParam<blink::scheduler::PerAgentAffectedQueues, true>::Option"* %69, i64 %68, i32 1
  %71 = load i8*, i8** %70, align 8
  %72 = call i64 @strlen(i8* %71) #14
  %73 = icmp slt i8 %67, 0
  %74 = zext i8 %67 to i64
  %75 = select i1 %73, i64 %66, i64 %74
  %76 = icmp eq i64 %72, %75
  br i1 %76, label %77, label %82

77:                                               ; preds = %64
  %78 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* %71, i64 %72) #14
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %89, label %80

80:                                               ; preds = %77
  %81 = load i64, i64* %57, align 8
  br label %82

82:                                               ; preds = %80, %64
  %83 = phi i64 [ %81, %80 ], [ %65, %64 ]
  %84 = add nuw i64 %68, 1
  %85 = icmp ult i64 %84, %83
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = load i8, i8* %49, align 1
  %88 = load i64, i64* %7, align 8
  br label %64

89:                                               ; preds = %77
  %90 = load %"struct.base::FeatureParam<blink::scheduler::PerAgentAffectedQueues, true>::Option"*, %"struct.base::FeatureParam<blink::scheduler::PerAgentAffectedQueues, true>::Option"** %61, align 8
  %91 = getelementptr inbounds %"struct.base::FeatureParam<blink::scheduler::PerAgentAffectedQueues, true>::Option", %"struct.base::FeatureParam<blink::scheduler::PerAgentAffectedQueues, true>::Option"* %90, i64 %68, i32 0
  br label %132

92:                                               ; preds = %82, %56
  %93 = load %"struct.base::Feature"*, %"struct.base::Feature"** %8, align 8
  %94 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #14
  %95 = load i8*, i8** %12, align 8
  %96 = call i64 @strlen(i8* %95) #14
  %97 = icmp ugt i64 %96, -17
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %99) #13
  unreachable

100:                                              ; preds = %92
  %101 = icmp ult i64 %96, 23
  br i1 %101, label %111, label %102

102:                                              ; preds = %100
  %103 = add nuw i64 %96, 16
  %104 = and i64 %103, -16
  %105 = call i8* @_Znwm(i64 %104) #15
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %105, i8** %106, align 8
  %107 = or i64 %104, -9223372036854775808
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %96, i64* %109, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %116

111:                                              ; preds = %100
  %112 = trunc i64 %96 to i8
  %113 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  store i8 %112, i8* %114, align 1
  %115 = icmp eq i64 %96, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %111, %102
  %117 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %111 ], [ %110, %102 ]
  %118 = phi i8* [ %94, %111 ], [ %105, %102 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %118, i8* align 1 %95, i64 %96, i1 false) #14
  br label %119

119:                                              ; preds = %111, %116
  %120 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %111 ], [ %117, %116 ]
  %121 = phi i8* [ %94, %111 ], [ %118, %116 ]
  %122 = getelementptr inbounds i8, i8* %121, i64 %96
  store i8 0, i8* %122, align 1
  %123 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 2
  %124 = load i32, i32* %123, align 8
  call void @_ZN4base19LogInvalidEnumValueERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_i(%"struct.base::Feature"* dereferenceable(16) %93, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 %124) #14
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #15
  br label %131

131:                                              ; preds = %119, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #14
  br label %132

132:                                              ; preds = %89, %131, %62
  %133 = phi i32* [ %63, %62 ], [ %123, %131 ], [ %91, %89 ]
  %134 = load i32, i32* %133, align 8
  %135 = load i8, i8* %49, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %132
  %138 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %138) #15
  br label %139

139:                                              ; preds = %132, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret i32 %134
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4base12FeatureParamIN5blink9scheduler22PerAgentSlowDownMethodELb1EE3GetEv(%"struct.base::FeatureParam.390"*) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.base::FeatureParam.390", %"struct.base::FeatureParam.390"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load %"struct.base::Feature"*, %"struct.base::Feature"** %8, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"struct.base::FeatureParam.390", %"struct.base::FeatureParam.390"* %0, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i64 @strlen(i8* %13) #14
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #13
  unreachable

18:                                               ; preds = %1
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #15
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

29:                                               ; preds = %18
  %30 = trunc i64 %14 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = icmp eq i64 %14, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29, %20
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %28, %20 ]
  %36 = phi i8* [ %11, %29 ], [ %23, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %13, i64 %14, i1 false) #14
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %35, %34 ]
  %39 = phi i8* [ %11, %29 ], [ %36, %34 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %14
  store i8 0, i8* %40, align 1
  call void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"struct.base::Feature"* dereferenceable(16) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %37, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  %48 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i64, i64* %7, align 8
  %53 = zext i8 %50 to i64
  %54 = select i1 %51, i64 %52, i64 %53
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.base::FeatureParam.390", %"struct.base::FeatureParam.390"* %0, i64 0, i32 4
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %92, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.base::FeatureParam.390", %"struct.base::FeatureParam.390"* %0, i64 0, i32 3
  br label %64

62:                                               ; preds = %47
  %63 = getelementptr inbounds %"struct.base::FeatureParam.390", %"struct.base::FeatureParam.390"* %0, i64 0, i32 2
  br label %132

64:                                               ; preds = %86, %60
  %65 = phi i64 [ %58, %60 ], [ %83, %86 ]
  %66 = phi i64 [ %52, %60 ], [ %88, %86 ]
  %67 = phi i8 [ %50, %60 ], [ %87, %86 ]
  %68 = phi i64 [ 0, %60 ], [ %84, %86 ]
  %69 = load %"struct.base::FeatureParam<blink::scheduler::PerAgentSlowDownMethod, true>::Option"*, %"struct.base::FeatureParam<blink::scheduler::PerAgentSlowDownMethod, true>::Option"** %61, align 8
  %70 = getelementptr inbounds %"struct.base::FeatureParam<blink::scheduler::PerAgentSlowDownMethod, true>::Option", %"struct.base::FeatureParam<blink::scheduler::PerAgentSlowDownMethod, true>::Option"* %69, i64 %68, i32 1
  %71 = load i8*, i8** %70, align 8
  %72 = call i64 @strlen(i8* %71) #14
  %73 = icmp slt i8 %67, 0
  %74 = zext i8 %67 to i64
  %75 = select i1 %73, i64 %66, i64 %74
  %76 = icmp eq i64 %72, %75
  br i1 %76, label %77, label %82

77:                                               ; preds = %64
  %78 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* %71, i64 %72) #14
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %89, label %80

80:                                               ; preds = %77
  %81 = load i64, i64* %57, align 8
  br label %82

82:                                               ; preds = %80, %64
  %83 = phi i64 [ %81, %80 ], [ %65, %64 ]
  %84 = add nuw i64 %68, 1
  %85 = icmp ult i64 %84, %83
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = load i8, i8* %49, align 1
  %88 = load i64, i64* %7, align 8
  br label %64

89:                                               ; preds = %77
  %90 = load %"struct.base::FeatureParam<blink::scheduler::PerAgentSlowDownMethod, true>::Option"*, %"struct.base::FeatureParam<blink::scheduler::PerAgentSlowDownMethod, true>::Option"** %61, align 8
  %91 = getelementptr inbounds %"struct.base::FeatureParam<blink::scheduler::PerAgentSlowDownMethod, true>::Option", %"struct.base::FeatureParam<blink::scheduler::PerAgentSlowDownMethod, true>::Option"* %90, i64 %68, i32 0
  br label %132

92:                                               ; preds = %82, %56
  %93 = load %"struct.base::Feature"*, %"struct.base::Feature"** %8, align 8
  %94 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #14
  %95 = load i8*, i8** %12, align 8
  %96 = call i64 @strlen(i8* %95) #14
  %97 = icmp ugt i64 %96, -17
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %99) #13
  unreachable

100:                                              ; preds = %92
  %101 = icmp ult i64 %96, 23
  br i1 %101, label %111, label %102

102:                                              ; preds = %100
  %103 = add nuw i64 %96, 16
  %104 = and i64 %103, -16
  %105 = call i8* @_Znwm(i64 %104) #15
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %105, i8** %106, align 8
  %107 = or i64 %104, -9223372036854775808
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %96, i64* %109, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %116

111:                                              ; preds = %100
  %112 = trunc i64 %96 to i8
  %113 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  store i8 %112, i8* %114, align 1
  %115 = icmp eq i64 %96, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %111, %102
  %117 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %111 ], [ %110, %102 ]
  %118 = phi i8* [ %94, %111 ], [ %105, %102 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %118, i8* align 1 %95, i64 %96, i1 false) #14
  br label %119

119:                                              ; preds = %111, %116
  %120 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %111 ], [ %117, %116 ]
  %121 = phi i8* [ %94, %111 ], [ %118, %116 ]
  %122 = getelementptr inbounds i8, i8* %121, i64 %96
  store i8 0, i8* %122, align 1
  %123 = getelementptr inbounds %"struct.base::FeatureParam.390", %"struct.base::FeatureParam.390"* %0, i64 0, i32 2
  %124 = load i32, i32* %123, align 8
  call void @_ZN4base19LogInvalidEnumValueERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_i(%"struct.base::Feature"* dereferenceable(16) %93, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 %124) #14
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #15
  br label %131

131:                                              ; preds = %119, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #14
  br label %132

132:                                              ; preds = %89, %131, %62
  %133 = phi i32* [ %63, %62 ], [ %123, %131 ], [ %91, %89 ]
  %134 = load i32, i32* %133, align 8
  %135 = load i8, i8* %49, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %132
  %138 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %138) #15
  br label %139

139:                                              ; preds = %132, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret i32 %134
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4base12FeatureParamIN5blink9scheduler14PerAgentSignalELb1EE3GetEv(%"struct.base::FeatureParam.391"*) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.base::FeatureParam.391", %"struct.base::FeatureParam.391"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load %"struct.base::Feature"*, %"struct.base::Feature"** %8, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"struct.base::FeatureParam.391", %"struct.base::FeatureParam.391"* %0, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i64 @strlen(i8* %13) #14
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #13
  unreachable

18:                                               ; preds = %1
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #15
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

29:                                               ; preds = %18
  %30 = trunc i64 %14 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = icmp eq i64 %14, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29, %20
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %28, %20 ]
  %36 = phi i8* [ %11, %29 ], [ %23, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %13, i64 %14, i1 false) #14
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %35, %34 ]
  %39 = phi i8* [ %11, %29 ], [ %36, %34 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %14
  store i8 0, i8* %40, align 1
  call void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"struct.base::Feature"* dereferenceable(16) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %37, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  %48 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i64, i64* %7, align 8
  %53 = zext i8 %50 to i64
  %54 = select i1 %51, i64 %52, i64 %53
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.base::FeatureParam.391", %"struct.base::FeatureParam.391"* %0, i64 0, i32 4
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %92, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.base::FeatureParam.391", %"struct.base::FeatureParam.391"* %0, i64 0, i32 3
  br label %64

62:                                               ; preds = %47
  %63 = getelementptr inbounds %"struct.base::FeatureParam.391", %"struct.base::FeatureParam.391"* %0, i64 0, i32 2
  br label %132

64:                                               ; preds = %86, %60
  %65 = phi i64 [ %58, %60 ], [ %83, %86 ]
  %66 = phi i64 [ %52, %60 ], [ %88, %86 ]
  %67 = phi i8 [ %50, %60 ], [ %87, %86 ]
  %68 = phi i64 [ 0, %60 ], [ %84, %86 ]
  %69 = load %"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option"*, %"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option"** %61, align 8
  %70 = getelementptr inbounds %"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option", %"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option"* %69, i64 %68, i32 1
  %71 = load i8*, i8** %70, align 8
  %72 = call i64 @strlen(i8* %71) #14
  %73 = icmp slt i8 %67, 0
  %74 = zext i8 %67 to i64
  %75 = select i1 %73, i64 %66, i64 %74
  %76 = icmp eq i64 %72, %75
  br i1 %76, label %77, label %82

77:                                               ; preds = %64
  %78 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* %71, i64 %72) #14
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %89, label %80

80:                                               ; preds = %77
  %81 = load i64, i64* %57, align 8
  br label %82

82:                                               ; preds = %80, %64
  %83 = phi i64 [ %81, %80 ], [ %65, %64 ]
  %84 = add nuw i64 %68, 1
  %85 = icmp ult i64 %84, %83
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = load i8, i8* %49, align 1
  %88 = load i64, i64* %7, align 8
  br label %64

89:                                               ; preds = %77
  %90 = load %"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option"*, %"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option"** %61, align 8
  %91 = getelementptr inbounds %"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option", %"struct.base::FeatureParam<blink::scheduler::PerAgentSignal, true>::Option"* %90, i64 %68, i32 0
  br label %132

92:                                               ; preds = %82, %56
  %93 = load %"struct.base::Feature"*, %"struct.base::Feature"** %8, align 8
  %94 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #14
  %95 = load i8*, i8** %12, align 8
  %96 = call i64 @strlen(i8* %95) #14
  %97 = icmp ugt i64 %96, -17
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %99) #13
  unreachable

100:                                              ; preds = %92
  %101 = icmp ult i64 %96, 23
  br i1 %101, label %111, label %102

102:                                              ; preds = %100
  %103 = add nuw i64 %96, 16
  %104 = and i64 %103, -16
  %105 = call i8* @_Znwm(i64 %104) #15
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %105, i8** %106, align 8
  %107 = or i64 %104, -9223372036854775808
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %96, i64* %109, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %116

111:                                              ; preds = %100
  %112 = trunc i64 %96 to i8
  %113 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  store i8 %112, i8* %114, align 1
  %115 = icmp eq i64 %96, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %111, %102
  %117 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %111 ], [ %110, %102 ]
  %118 = phi i8* [ %94, %111 ], [ %105, %102 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %118, i8* align 1 %95, i64 %96, i1 false) #14
  br label %119

119:                                              ; preds = %111, %116
  %120 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %111 ], [ %117, %116 ]
  %121 = phi i8* [ %94, %111 ], [ %118, %116 ]
  %122 = getelementptr inbounds i8, i8* %121, i64 %96
  store i8 0, i8* %122, align 1
  %123 = getelementptr inbounds %"struct.base::FeatureParam.391", %"struct.base::FeatureParam.391"* %0, i64 0, i32 2
  %124 = load i32, i32* %123, align 8
  call void @_ZN4base19LogInvalidEnumValueERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_i(%"struct.base::Feature"* dereferenceable(16) %93, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 %124) #14
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #15
  br label %131

131:                                              ; preds = %119, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #14
  br label %132

132:                                              ; preds = %89, %131, %62
  %133 = phi i32* [ %63, %62 ], [ %123, %131 ], [ %91, %89 ]
  %134 = load i32, i32* %133, align 8
  %135 = load i8, i8* %49, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %132
  %138 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %138) #15
  br label %139

139:                                              ; preds = %132, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret i32 %134
}

declare i32 @_ZNK4base12FeatureParamIiLb0EE3GetEv(%"struct.base::FeatureParam.392"*) local_unnamed_addr #4

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink9scheduler23AgentSchedulingStrategyD2Ev(%"class.blink::scheduler::AgentSchedulingStrategy"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::AgentSchedulingStrategy", %"class.blink::scheduler::AgentSchedulingStrategy"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink9scheduler23AgentSchedulingStrategyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_112NoOpStrategyD0Ev(%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"*) unnamed_addr #8 align 2 {
  %2 = bitcast %"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN5blink9scheduler12_GLOBAL__N_112NoOpStrategy12OnFrameAddedERKNS0_18FrameSchedulerImplE(%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"* nocapture readnone, %"class.blink::scheduler::FrameSchedulerImpl"* nocapture readnone dereferenceable(1120)) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN5blink9scheduler12_GLOBAL__N_112NoOpStrategy14OnFrameRemovedERKNS0_18FrameSchedulerImplE(%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"* nocapture readnone, %"class.blink::scheduler::FrameSchedulerImpl"* nocapture readnone dereferenceable(1120)) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN5blink9scheduler12_GLOBAL__N_112NoOpStrategy31OnMainFrameFirstMeaningfulPaintERKNS0_18FrameSchedulerImplE(%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"* nocapture readnone, %"class.blink::scheduler::FrameSchedulerImpl"* nocapture readnone dereferenceable(1120)) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN5blink9scheduler12_GLOBAL__N_112NoOpStrategy12OnInputEventEv(%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN5blink9scheduler12_GLOBAL__N_112NoOpStrategy28OnDocumentChangedInMainFrameERKNS0_18FrameSchedulerImplE(%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"* nocapture readnone, %"class.blink::scheduler::FrameSchedulerImpl"* nocapture readnone dereferenceable(1120)) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN5blink9scheduler12_GLOBAL__N_112NoOpStrategy15OnMainFrameLoadERKNS0_18FrameSchedulerImplE(%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"* nocapture readnone, %"class.blink::scheduler::FrameSchedulerImpl"* nocapture readnone dereferenceable(1120)) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN5blink9scheduler12_GLOBAL__N_112NoOpStrategy13OnDelayPassedERKNS0_18FrameSchedulerImplE(%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"* nocapture readnone, %"class.blink::scheduler::FrameSchedulerImpl"* nocapture readnone dereferenceable(1120)) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i16 @_ZNK5blink9scheduler12_GLOBAL__N_112NoOpStrategy17QueueEnabledStateERKNS0_19MainThreadTaskQueueE(%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"* nocapture readnone, %"class.blink::scheduler::MainThreadTaskQueue"* nocapture readnone dereferenceable(88)) unnamed_addr #0 align 2 {
  ret i16 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i16 @_ZNK5blink9scheduler12_GLOBAL__N_112NoOpStrategy13QueuePriorityERKNS0_19MainThreadTaskQueueE(%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"* nocapture readnone, %"class.blink::scheduler::MainThreadTaskQueue"* nocapture readnone dereferenceable(88)) unnamed_addr #0 align 2 {
  ret i16 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_112NoOpStrategy24ShouldNotifyOnInputEventEv(%"class.blink::scheduler::(anonymous namespace)::NoOpStrategy"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN4base19LogInvalidEnumValueERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_i(%"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #4

declare void @_ZN22PollableThreadSafeFlagC1EPN4base4LockE(%class.PollableThreadSafeFlag*, %"class.base::Lock"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignalD2Ev(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 8, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #14
  %4 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::scheduler::FrameSchedulerImpl"**, %"class.blink::scheduler::FrameSchedulerImpl"*** %4, align 8
  %6 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %5, null
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #14
  store %"class.blink::scheduler::FrameSchedulerImpl"** null, %"class.blink::scheduler::FrameSchedulerImpl"*** %4, align 8
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::scheduler::FrameSchedulerImpl"**, %"class.blink::scheduler::FrameSchedulerImpl"*** %10, align 8
  %12 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %11, null
  br i1 %12, label %15, label %13, !prof !2

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %11 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %14) #14
  store %"class.blink::scheduler::FrameSchedulerImpl"** null, %"class.blink::scheduler::FrameSchedulerImpl"*** %10, align 8
  br label %15

15:                                               ; preds = %9, %13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink9scheduler23AgentSchedulingStrategyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignalD0Ev(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 8, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #14
  %4 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::scheduler::FrameSchedulerImpl"**, %"class.blink::scheduler::FrameSchedulerImpl"*** %4, align 8
  %6 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %5, null
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #14
  store %"class.blink::scheduler::FrameSchedulerImpl"** null, %"class.blink::scheduler::FrameSchedulerImpl"*** %4, align 8
  br label %9

9:                                                ; preds = %7, %1
  %10 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::scheduler::FrameSchedulerImpl"**, %"class.blink::scheduler::FrameSchedulerImpl"*** %10, align 8
  %12 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %11, null
  br i1 %12, label %15, label %13, !prof !2

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %11 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %14) #14
  br label %15

15:                                               ; preds = %9, %13
  %16 = bitcast %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal12OnFrameAddedERKNS0_18FrameSchedulerImplE(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*, %"class.blink::scheduler::FrameSchedulerImpl"* dereferenceable(1120)) unnamed_addr #3 align 2 {
  tail call fastcc void @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal13OnNewDocumentERKNS0_18FrameSchedulerImplE(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, %"class.blink::scheduler::FrameSchedulerImpl"* dereferenceable(1120) %1)
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal14OnFrameRemovedERKNS0_18FrameSchedulerImplE(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*, %"class.blink::scheduler::FrameSchedulerImpl"* dereferenceable(1120)) unnamed_addr #3 align 2 {
  %3 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"* %1 to i32 (%"class.blink::scheduler::FrameSchedulerImpl"*)***
  %4 = load i32 (%"class.blink::scheduler::FrameSchedulerImpl"*)**, i32 (%"class.blink::scheduler::FrameSchedulerImpl"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.blink::scheduler::FrameSchedulerImpl"*)*, i32 (%"class.blink::scheduler::FrameSchedulerImpl"*)** %4, i64 20
  %6 = load i32 (%"class.blink::scheduler::FrameSchedulerImpl"*)*, i32 (%"class.blink::scheduler::FrameSchedulerImpl"*)** %5, align 8
  %7 = tail call i32 %6(%"class.blink::scheduler::FrameSchedulerImpl"* %1) #14
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %224

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 6
  %11 = ptrtoint %"class.blink::scheduler::FrameSchedulerImpl"* %1 to i64
  %12 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %10, i64 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %10, i64 0, i32 0, i32 0
  %14 = load %"class.blink::scheduler::FrameSchedulerImpl"**, %"class.blink::scheduler::FrameSchedulerImpl"*** %13, align 8
  %15 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %14, null
  %16 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 6, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  br i1 %15, label %79, label %18

18:                                               ; preds = %9
  %19 = add i32 %17, -1
  %20 = zext i32 %19 to i64
  %21 = shl i64 %11, 32
  %22 = xor i64 %21, -1
  %23 = add i64 %22, %11
  %24 = lshr i64 %23, 22
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 13
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 8
  %30 = xor i64 %29, %28
  %31 = mul i64 %30, 9
  %32 = lshr i64 %31, 15
  %33 = xor i64 %32, %31
  %34 = shl i64 %33, 27
  %35 = xor i64 %34, -1
  %36 = add i64 %33, %35
  %37 = lshr i64 %36, 31
  %38 = xor i64 %37, %36
  %39 = trunc i64 %38 to i32
  %40 = and i32 %19, %39
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %14, i64 %41
  %43 = load %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %42, align 8
  %44 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %43, %1
  br i1 %44, label %74, label %45

45:                                               ; preds = %18
  %46 = xor i32 %39, -1
  %47 = lshr i32 %39, 23
  %48 = add i32 %47, %46
  %49 = shl i32 %48, 12
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 7
  %52 = xor i32 %51, %50
  %53 = shl i32 %52, 2
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 20
  %56 = xor i32 %55, %54
  %57 = or i32 %56, 1
  %58 = zext i32 %57 to i64
  br label %59

59:                                               ; preds = %64, %45
  %60 = phi %"class.blink::scheduler::FrameSchedulerImpl"* [ %43, %45 ], [ %70, %64 ]
  %61 = phi i64 [ %41, %45 ], [ %68, %64 ]
  %62 = phi i64 [ 0, %45 ], [ %66, %64 ]
  %63 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %60, null
  br i1 %63, label %79, label %64

64:                                               ; preds = %59
  %65 = icmp eq i64 %62, 0
  %66 = select i1 %65, i64 %58, i64 %62
  %67 = add i64 %66, %61
  %68 = and i64 %67, %20
  %69 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %14, i64 %68
  %70 = load %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %69, align 8
  %71 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %70, %1
  br i1 %71, label %72, label %59

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %14, i64 %68
  br label %74

74:                                               ; preds = %72, %18
  %75 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %42, %18 ], [ %73, %72 ]
  %76 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = zext i32 %17 to i64
  br label %82

79:                                               ; preds = %59, %74, %9
  %80 = zext i32 %17 to i64
  %81 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %14, i64 %80
  br label %82

82:                                               ; preds = %77, %79
  %83 = phi i64 [ %78, %77 ], [ %80, %79 ]
  %84 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %75, %77 ], [ %81, %79 ]
  %85 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %14, i64 %83
  %86 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %85, %84
  br i1 %86, label %109, label %87

87:                                               ; preds = %82
  store %"class.blink::scheduler::FrameSchedulerImpl"* inttoptr (i64 -1 to %"class.blink::scheduler::FrameSchedulerImpl"*), %"class.blink::scheduler::FrameSchedulerImpl"** %84, align 8
  %88 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 6, i32 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, 1
  %91 = and i32 %90, 2147483647
  %92 = and i32 %89, -2147483648
  %93 = or i32 %91, %92
  store i32 %93, i32* %88, align 8
  %94 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 6, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, -1
  store i32 %96, i32* %94, align 4
  %97 = mul i32 %96, 6
  %98 = load i32, i32* %16, align 8
  %99 = icmp ult i32 %97, %98
  %100 = icmp ugt i32 %98, 8
  %101 = and i1 %99, %100
  br i1 %101, label %102, label %109

102:                                              ; preds = %87
  %103 = lshr i32 %98, 1
  %104 = zext i32 %103 to i64
  %105 = shl nuw nsw i64 %104, 3
  %106 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %105, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink9scheduler18FrameSchedulerImplEEEPKcv, i64 0, i64 0)) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %106, i8 0, i64 %105, i1 false) #14
  %107 = bitcast i8* %106 to %"class.blink::scheduler::FrameSchedulerImpl"**
  %108 = tail call %"class.blink::scheduler::FrameSchedulerImpl"** @_ZN3WTF9HashTableIPKN5blink9scheduler18FrameSchedulerImplES5_NS_17IdentityExtractorENS_7PtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable"* %12, %"class.blink::scheduler::FrameSchedulerImpl"** %107, i32 %103, %"class.blink::scheduler::FrameSchedulerImpl"** null) #14
  br label %109

109:                                              ; preds = %82, %87, %102
  %110 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7
  %111 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %110, i64 0, i32 0
  %112 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %110, i64 0, i32 0, i32 0
  %113 = load %"class.blink::scheduler::FrameSchedulerImpl"**, %"class.blink::scheduler::FrameSchedulerImpl"*** %112, align 8
  %114 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %113, null
  %115 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 1
  %116 = load i32, i32* %115, align 8
  br i1 %114, label %178, label %117

117:                                              ; preds = %109
  %118 = add i32 %116, -1
  %119 = zext i32 %118 to i64
  %120 = shl i64 %11, 32
  %121 = xor i64 %120, -1
  %122 = add i64 %121, %11
  %123 = lshr i64 %122, 22
  %124 = xor i64 %123, %122
  %125 = shl i64 %124, 13
  %126 = xor i64 %125, -1
  %127 = add i64 %124, %126
  %128 = lshr i64 %127, 8
  %129 = xor i64 %128, %127
  %130 = mul i64 %129, 9
  %131 = lshr i64 %130, 15
  %132 = xor i64 %131, %130
  %133 = shl i64 %132, 27
  %134 = xor i64 %133, -1
  %135 = add i64 %132, %134
  %136 = lshr i64 %135, 31
  %137 = xor i64 %136, %135
  %138 = trunc i64 %137 to i32
  %139 = and i32 %118, %138
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %113, i64 %140
  %142 = load %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %141, align 8
  %143 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %142, %1
  br i1 %143, label %173, label %144

144:                                              ; preds = %117
  %145 = xor i32 %138, -1
  %146 = lshr i32 %138, 23
  %147 = add i32 %146, %145
  %148 = shl i32 %147, 12
  %149 = xor i32 %148, %147
  %150 = lshr i32 %149, 7
  %151 = xor i32 %150, %149
  %152 = shl i32 %151, 2
  %153 = xor i32 %152, %151
  %154 = lshr i32 %153, 20
  %155 = xor i32 %154, %153
  %156 = or i32 %155, 1
  %157 = zext i32 %156 to i64
  br label %158

158:                                              ; preds = %163, %144
  %159 = phi %"class.blink::scheduler::FrameSchedulerImpl"* [ %142, %144 ], [ %169, %163 ]
  %160 = phi i64 [ %140, %144 ], [ %167, %163 ]
  %161 = phi i64 [ 0, %144 ], [ %165, %163 ]
  %162 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %159, null
  br i1 %162, label %178, label %163

163:                                              ; preds = %158
  %164 = icmp eq i64 %161, 0
  %165 = select i1 %164, i64 %157, i64 %161
  %166 = add i64 %165, %160
  %167 = and i64 %166, %119
  %168 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %113, i64 %167
  %169 = load %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %168, align 8
  %170 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %169, %1
  br i1 %170, label %171, label %158

171:                                              ; preds = %163
  %172 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %113, i64 %167
  br label %173

173:                                              ; preds = %171, %117
  %174 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %141, %117 ], [ %172, %171 ]
  %175 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %173
  %177 = zext i32 %116 to i64
  br label %181

178:                                              ; preds = %158, %173, %109
  %179 = zext i32 %116 to i64
  %180 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %113, i64 %179
  br label %181

181:                                              ; preds = %176, %178
  %182 = phi i64 [ %177, %176 ], [ %179, %178 ]
  %183 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %174, %176 ], [ %180, %178 ]
  %184 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %113, i64 %182
  %185 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %184, %183
  br i1 %185, label %208, label %186

186:                                              ; preds = %181
  store %"class.blink::scheduler::FrameSchedulerImpl"* inttoptr (i64 -1 to %"class.blink::scheduler::FrameSchedulerImpl"*), %"class.blink::scheduler::FrameSchedulerImpl"** %183, align 8
  %187 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 3
  %188 = load i32, i32* %187, align 8
  %189 = add i32 %188, 1
  %190 = and i32 %189, 2147483647
  %191 = and i32 %188, -2147483648
  %192 = or i32 %190, %191
  store i32 %192, i32* %187, align 8
  %193 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 2
  %194 = load i32, i32* %193, align 4
  %195 = add i32 %194, -1
  store i32 %195, i32* %193, align 4
  %196 = mul i32 %195, 6
  %197 = load i32, i32* %115, align 8
  %198 = icmp ult i32 %196, %197
  %199 = icmp ugt i32 %197, 8
  %200 = and i1 %198, %199
  br i1 %200, label %201, label %208

201:                                              ; preds = %186
  %202 = lshr i32 %197, 1
  %203 = zext i32 %202 to i64
  %204 = shl nuw nsw i64 %203, 3
  %205 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %204, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink9scheduler18FrameSchedulerImplEEEPKcv, i64 0, i64 0)) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %205, i8 0, i64 %204, i1 false) #14
  %206 = bitcast i8* %205 to %"class.blink::scheduler::FrameSchedulerImpl"**
  %207 = tail call %"class.blink::scheduler::FrameSchedulerImpl"** @_ZN3WTF9HashTableIPKN5blink9scheduler18FrameSchedulerImplES5_NS_17IdentityExtractorENS_7PtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable"* %111, %"class.blink::scheduler::FrameSchedulerImpl"** %206, i32 %202, %"class.blink::scheduler::FrameSchedulerImpl"** null) #14
  br label %208

208:                                              ; preds = %181, %186, %201
  %209 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 2
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %224

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 9
  %214 = tail call zeroext i1 @_ZNK22PollableThreadSafeFlag5IsSetEv(%class.PollableThreadSafeFlag* %213) #14
  br i1 %214, label %215, label %224

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 8
  %217 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %216, i64 0, i32 0, i32 0
  %218 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %217) #14
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %222, label %220, !prof !2

220:                                              ; preds = %215
  %221 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %216, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %221) #14
  br label %222

222:                                              ; preds = %220, %215
  tail call void @_ZN22PollableThreadSafeFlag14SetWhileLockedEb(%class.PollableThreadSafeFlag* %213, i1 zeroext false) #14
  %223 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %217) #14
  br label %224

224:                                              ; preds = %222, %212, %208, %2
  %225 = phi i32 [ 0, %2 ], [ 1, %208 ], [ 1, %212 ], [ 1, %222 ]
  ret i32 %225
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal31OnMainFrameFirstMeaningfulPaintERKNS0_18FrameSchedulerImplE(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*, %"class.blink::scheduler::FrameSchedulerImpl"* dereferenceable(1120)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %133

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 5, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %126

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7
  %12 = ptrtoint %"class.blink::scheduler::FrameSchedulerImpl"* %1 to i64
  %13 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %11, i64 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %11, i64 0, i32 0, i32 0
  %15 = load %"class.blink::scheduler::FrameSchedulerImpl"**, %"class.blink::scheduler::FrameSchedulerImpl"*** %14, align 8
  %16 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %15, null
  %17 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  br i1 %16, label %80, label %19

19:                                               ; preds = %10
  %20 = add i32 %18, -1
  %21 = zext i32 %20 to i64
  %22 = shl i64 %12, 32
  %23 = xor i64 %22, -1
  %24 = add i64 %23, %12
  %25 = lshr i64 %24, 22
  %26 = xor i64 %25, %24
  %27 = shl i64 %26, 13
  %28 = xor i64 %27, -1
  %29 = add i64 %26, %28
  %30 = lshr i64 %29, 8
  %31 = xor i64 %30, %29
  %32 = mul i64 %31, 9
  %33 = lshr i64 %32, 15
  %34 = xor i64 %33, %32
  %35 = shl i64 %34, 27
  %36 = xor i64 %35, -1
  %37 = add i64 %34, %36
  %38 = lshr i64 %37, 31
  %39 = xor i64 %38, %37
  %40 = trunc i64 %39 to i32
  %41 = and i32 %20, %40
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %15, i64 %42
  %44 = load %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %43, align 8
  %45 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %44, %1
  br i1 %45, label %75, label %46

46:                                               ; preds = %19
  %47 = xor i32 %40, -1
  %48 = lshr i32 %40, 23
  %49 = add i32 %48, %47
  %50 = shl i32 %49, 12
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 7
  %53 = xor i32 %52, %51
  %54 = shl i32 %53, 2
  %55 = xor i32 %54, %53
  %56 = lshr i32 %55, 20
  %57 = xor i32 %56, %55
  %58 = or i32 %57, 1
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %65, %46
  %61 = phi %"class.blink::scheduler::FrameSchedulerImpl"* [ %44, %46 ], [ %71, %65 ]
  %62 = phi i64 [ %42, %46 ], [ %69, %65 ]
  %63 = phi i64 [ 0, %46 ], [ %67, %65 ]
  %64 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %61, null
  br i1 %64, label %80, label %65

65:                                               ; preds = %60
  %66 = icmp eq i64 %63, 0
  %67 = select i1 %66, i64 %59, i64 %63
  %68 = add i64 %67, %62
  %69 = and i64 %68, %21
  %70 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %15, i64 %69
  %71 = load %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %70, align 8
  %72 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %71, %1
  br i1 %72, label %73, label %60

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %15, i64 %69
  br label %75

75:                                               ; preds = %73, %19
  %76 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %43, %19 ], [ %74, %73 ]
  %77 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = zext i32 %18 to i64
  br label %83

80:                                               ; preds = %60, %75, %10
  %81 = zext i32 %18 to i64
  %82 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %15, i64 %81
  br label %83

83:                                               ; preds = %78, %80
  %84 = phi i64 [ %79, %78 ], [ %81, %80 ]
  %85 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %76, %78 ], [ %82, %80 ]
  %86 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %15, i64 %84
  %87 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %86, %85
  br i1 %87, label %110, label %88

88:                                               ; preds = %83
  store %"class.blink::scheduler::FrameSchedulerImpl"* inttoptr (i64 -1 to %"class.blink::scheduler::FrameSchedulerImpl"*), %"class.blink::scheduler::FrameSchedulerImpl"** %85, align 8
  %89 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, 1
  %92 = and i32 %91, 2147483647
  %93 = and i32 %90, -2147483648
  %94 = or i32 %92, %93
  store i32 %94, i32* %89, align 8
  %95 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = add i32 %96, -1
  store i32 %97, i32* %95, align 4
  %98 = mul i32 %97, 6
  %99 = load i32, i32* %17, align 8
  %100 = icmp ult i32 %98, %99
  %101 = icmp ugt i32 %99, 8
  %102 = and i1 %100, %101
  br i1 %102, label %103, label %110

103:                                              ; preds = %88
  %104 = lshr i32 %99, 1
  %105 = zext i32 %104 to i64
  %106 = shl nuw nsw i64 %105, 3
  %107 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %106, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink9scheduler18FrameSchedulerImplEEEPKcv, i64 0, i64 0)) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %107, i8 0, i64 %106, i1 false) #14
  %108 = bitcast i8* %107 to %"class.blink::scheduler::FrameSchedulerImpl"**
  %109 = tail call %"class.blink::scheduler::FrameSchedulerImpl"** @_ZN3WTF9HashTableIPKN5blink9scheduler18FrameSchedulerImplES5_NS_17IdentityExtractorENS_7PtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable"* %13, %"class.blink::scheduler::FrameSchedulerImpl"** %108, i32 %104, %"class.blink::scheduler::FrameSchedulerImpl"** null) #14
  br label %110

110:                                              ; preds = %83, %88, %103
  %111 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %133

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 9
  %116 = tail call zeroext i1 @_ZNK22PollableThreadSafeFlag5IsSetEv(%class.PollableThreadSafeFlag* %115) #14
  br i1 %116, label %117, label %133

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 8
  %119 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %118, i64 0, i32 0, i32 0
  %120 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %119) #14
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %124, label %122, !prof !2

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %118, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %123) #14
  br label %124

124:                                              ; preds = %122, %117
  tail call void @_ZN22PollableThreadSafeFlag14SetWhileLockedEb(%class.PollableThreadSafeFlag* %115, i1 zeroext false) #14
  %125 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %119) #14
  br label %133

126:                                              ; preds = %6
  %127 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 1
  %128 = load %"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::AgentSchedulingStrategy::Delegate"** %127, align 8
  %129 = bitcast %"class.blink::scheduler::AgentSchedulingStrategy::Delegate"* %128 to void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)***
  %130 = load void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)**, void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)*, void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)** %130, i64 2
  %132 = load void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)*, void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)** %131, align 8
  tail call void %132(%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"* %128, %"class.blink::scheduler::FrameSchedulerImpl"* dereferenceable(1120) %1, i64 %8) #14
  br label %133

133:                                              ; preds = %124, %114, %110, %2, %126
  %134 = phi i32 [ 0, %126 ], [ 0, %2 ], [ 1, %110 ], [ 1, %114 ], [ 1, %124 ]
  ret i32 %134
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal12OnInputEventEv(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.blink::scheduler::FrameSchedulerImpl"**, %"class.blink::scheduler::FrameSchedulerImpl"*** %7, align 8
  %9 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 1
  %12 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %8 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #14
  %13 = bitcast %"class.WTF::HashSet"* %2 to i64*
  store atomic i64 0, i64* %13 monotonic, align 8
  store i32 0, i32* %11, align 8
  store i32 0, i32* %3, align 4
  br label %14

14:                                               ; preds = %6, %10
  %15 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 9
  %16 = tail call zeroext i1 @_ZNK22PollableThreadSafeFlag5IsSetEv(%class.PollableThreadSafeFlag* %15) #14
  br i1 %16, label %17, label %26

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 8
  %19 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %18, i64 0, i32 0, i32 0
  %20 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %19) #14
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22, !prof !2

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %18, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %23) #14
  br label %24

24:                                               ; preds = %22, %17
  tail call void @_ZN22PollableThreadSafeFlag14SetWhileLockedEb(%class.PollableThreadSafeFlag* %15, i1 zeroext false) #14
  %25 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %19) #14
  br label %26

26:                                               ; preds = %24, %14, %1
  %27 = phi i32 [ 0, %1 ], [ 1, %14 ], [ 1, %24 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal28OnDocumentChangedInMainFrameERKNS0_18FrameSchedulerImplE(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*, %"class.blink::scheduler::FrameSchedulerImpl"* dereferenceable(1120)) unnamed_addr #3 align 2 {
  tail call fastcc void @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal13OnNewDocumentERKNS0_18FrameSchedulerImplE(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, %"class.blink::scheduler::FrameSchedulerImpl"* dereferenceable(1120) %1)
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal15OnMainFrameLoadERKNS0_18FrameSchedulerImplE(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*, %"class.blink::scheduler::FrameSchedulerImpl"* dereferenceable(1120)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %133

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 5, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %126

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7
  %12 = ptrtoint %"class.blink::scheduler::FrameSchedulerImpl"* %1 to i64
  %13 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %11, i64 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %11, i64 0, i32 0, i32 0
  %15 = load %"class.blink::scheduler::FrameSchedulerImpl"**, %"class.blink::scheduler::FrameSchedulerImpl"*** %14, align 8
  %16 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %15, null
  %17 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  br i1 %16, label %80, label %19

19:                                               ; preds = %10
  %20 = add i32 %18, -1
  %21 = zext i32 %20 to i64
  %22 = shl i64 %12, 32
  %23 = xor i64 %22, -1
  %24 = add i64 %23, %12
  %25 = lshr i64 %24, 22
  %26 = xor i64 %25, %24
  %27 = shl i64 %26, 13
  %28 = xor i64 %27, -1
  %29 = add i64 %26, %28
  %30 = lshr i64 %29, 8
  %31 = xor i64 %30, %29
  %32 = mul i64 %31, 9
  %33 = lshr i64 %32, 15
  %34 = xor i64 %33, %32
  %35 = shl i64 %34, 27
  %36 = xor i64 %35, -1
  %37 = add i64 %34, %36
  %38 = lshr i64 %37, 31
  %39 = xor i64 %38, %37
  %40 = trunc i64 %39 to i32
  %41 = and i32 %20, %40
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %15, i64 %42
  %44 = load %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %43, align 8
  %45 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %44, %1
  br i1 %45, label %75, label %46

46:                                               ; preds = %19
  %47 = xor i32 %40, -1
  %48 = lshr i32 %40, 23
  %49 = add i32 %48, %47
  %50 = shl i32 %49, 12
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 7
  %53 = xor i32 %52, %51
  %54 = shl i32 %53, 2
  %55 = xor i32 %54, %53
  %56 = lshr i32 %55, 20
  %57 = xor i32 %56, %55
  %58 = or i32 %57, 1
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %65, %46
  %61 = phi %"class.blink::scheduler::FrameSchedulerImpl"* [ %44, %46 ], [ %71, %65 ]
  %62 = phi i64 [ %42, %46 ], [ %69, %65 ]
  %63 = phi i64 [ 0, %46 ], [ %67, %65 ]
  %64 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %61, null
  br i1 %64, label %80, label %65

65:                                               ; preds = %60
  %66 = icmp eq i64 %63, 0
  %67 = select i1 %66, i64 %59, i64 %63
  %68 = add i64 %67, %62
  %69 = and i64 %68, %21
  %70 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %15, i64 %69
  %71 = load %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %70, align 8
  %72 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %71, %1
  br i1 %72, label %73, label %60

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %15, i64 %69
  br label %75

75:                                               ; preds = %73, %19
  %76 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %43, %19 ], [ %74, %73 ]
  %77 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = zext i32 %18 to i64
  br label %83

80:                                               ; preds = %60, %75, %10
  %81 = zext i32 %18 to i64
  %82 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %15, i64 %81
  br label %83

83:                                               ; preds = %78, %80
  %84 = phi i64 [ %79, %78 ], [ %81, %80 ]
  %85 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %76, %78 ], [ %82, %80 ]
  %86 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %15, i64 %84
  %87 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %86, %85
  br i1 %87, label %110, label %88

88:                                               ; preds = %83
  store %"class.blink::scheduler::FrameSchedulerImpl"* inttoptr (i64 -1 to %"class.blink::scheduler::FrameSchedulerImpl"*), %"class.blink::scheduler::FrameSchedulerImpl"** %85, align 8
  %89 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, 1
  %92 = and i32 %91, 2147483647
  %93 = and i32 %90, -2147483648
  %94 = or i32 %92, %93
  store i32 %94, i32* %89, align 8
  %95 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = add i32 %96, -1
  store i32 %97, i32* %95, align 4
  %98 = mul i32 %97, 6
  %99 = load i32, i32* %17, align 8
  %100 = icmp ult i32 %98, %99
  %101 = icmp ugt i32 %99, 8
  %102 = and i1 %100, %101
  br i1 %102, label %103, label %110

103:                                              ; preds = %88
  %104 = lshr i32 %99, 1
  %105 = zext i32 %104 to i64
  %106 = shl nuw nsw i64 %105, 3
  %107 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %106, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink9scheduler18FrameSchedulerImplEEEPKcv, i64 0, i64 0)) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %107, i8 0, i64 %106, i1 false) #14
  %108 = bitcast i8* %107 to %"class.blink::scheduler::FrameSchedulerImpl"**
  %109 = tail call %"class.blink::scheduler::FrameSchedulerImpl"** @_ZN3WTF9HashTableIPKN5blink9scheduler18FrameSchedulerImplES5_NS_17IdentityExtractorENS_7PtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable"* %13, %"class.blink::scheduler::FrameSchedulerImpl"** %108, i32 %104, %"class.blink::scheduler::FrameSchedulerImpl"** null) #14
  br label %110

110:                                              ; preds = %83, %88, %103
  %111 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %133

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 9
  %116 = tail call zeroext i1 @_ZNK22PollableThreadSafeFlag5IsSetEv(%class.PollableThreadSafeFlag* %115) #14
  br i1 %116, label %117, label %133

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 8
  %119 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %118, i64 0, i32 0, i32 0
  %120 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %119) #14
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %124, label %122, !prof !2

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %118, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %123) #14
  br label %124

124:                                              ; preds = %122, %117
  tail call void @_ZN22PollableThreadSafeFlag14SetWhileLockedEb(%class.PollableThreadSafeFlag* %115, i1 zeroext false) #14
  %125 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %119) #14
  br label %133

126:                                              ; preds = %6
  %127 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 1
  %128 = load %"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::AgentSchedulingStrategy::Delegate"** %127, align 8
  %129 = bitcast %"class.blink::scheduler::AgentSchedulingStrategy::Delegate"* %128 to void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)***
  %130 = load void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)**, void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)*, void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)** %130, i64 2
  %132 = load void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)*, void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)** %131, align 8
  tail call void %132(%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"* %128, %"class.blink::scheduler::FrameSchedulerImpl"* dereferenceable(1120) %1, i64 %8) #14
  br label %133

133:                                              ; preds = %124, %114, %110, %2, %126
  %134 = phi i32 [ 0, %126 ], [ 0, %2 ], [ 1, %110 ], [ 1, %114 ], [ 1, %124 ]
  ret i32 %134
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal13OnDelayPassedERKNS0_18FrameSchedulerImplE(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*, %"class.blink::scheduler::FrameSchedulerImpl"* dereferenceable(1120)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7
  %4 = ptrtoint %"class.blink::scheduler::FrameSchedulerImpl"* %1 to i64
  %5 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::scheduler::FrameSchedulerImpl"**, %"class.blink::scheduler::FrameSchedulerImpl"*** %6, align 8
  %8 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %7, null
  %9 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  br i1 %8, label %72, label %11

11:                                               ; preds = %2
  %12 = add i32 %10, -1
  %13 = zext i32 %12 to i64
  %14 = shl i64 %4, 32
  %15 = xor i64 %14, -1
  %16 = add i64 %15, %4
  %17 = lshr i64 %16, 22
  %18 = xor i64 %17, %16
  %19 = shl i64 %18, 13
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 8
  %23 = xor i64 %22, %21
  %24 = mul i64 %23, 9
  %25 = lshr i64 %24, 15
  %26 = xor i64 %25, %24
  %27 = shl i64 %26, 27
  %28 = xor i64 %27, -1
  %29 = add i64 %26, %28
  %30 = lshr i64 %29, 31
  %31 = xor i64 %30, %29
  %32 = trunc i64 %31 to i32
  %33 = and i32 %12, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %7, i64 %34
  %36 = load %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %35, align 8
  %37 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %36, %1
  br i1 %37, label %67, label %38

38:                                               ; preds = %11
  %39 = xor i32 %32, -1
  %40 = lshr i32 %32, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %57, %38
  %53 = phi %"class.blink::scheduler::FrameSchedulerImpl"* [ %36, %38 ], [ %63, %57 ]
  %54 = phi i64 [ %34, %38 ], [ %61, %57 ]
  %55 = phi i64 [ 0, %38 ], [ %59, %57 ]
  %56 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %53, null
  br i1 %56, label %72, label %57

57:                                               ; preds = %52
  %58 = icmp eq i64 %55, 0
  %59 = select i1 %58, i64 %51, i64 %55
  %60 = add i64 %59, %54
  %61 = and i64 %60, %13
  %62 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %7, i64 %61
  %63 = load %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %62, align 8
  %64 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %63, %1
  br i1 %64, label %65, label %52

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %7, i64 %61
  br label %67

67:                                               ; preds = %65, %11
  %68 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %35, %11 ], [ %66, %65 ]
  %69 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = zext i32 %10 to i64
  br label %75

72:                                               ; preds = %52, %67, %2
  %73 = zext i32 %10 to i64
  %74 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %7, i64 %73
  br label %75

75:                                               ; preds = %70, %72
  %76 = phi i64 [ %71, %70 ], [ %73, %72 ]
  %77 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %68, %70 ], [ %74, %72 ]
  %78 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %7, i64 %76
  %79 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %78, %77
  br i1 %79, label %102, label %80

80:                                               ; preds = %75
  store %"class.blink::scheduler::FrameSchedulerImpl"* inttoptr (i64 -1 to %"class.blink::scheduler::FrameSchedulerImpl"*), %"class.blink::scheduler::FrameSchedulerImpl"** %77, align 8
  %81 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 1
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  %87 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %88, -1
  store i32 %89, i32* %87, align 4
  %90 = mul i32 %89, 6
  %91 = load i32, i32* %9, align 8
  %92 = icmp ult i32 %90, %91
  %93 = icmp ugt i32 %91, 8
  %94 = and i1 %92, %93
  br i1 %94, label %95, label %102

95:                                               ; preds = %80
  %96 = lshr i32 %91, 1
  %97 = zext i32 %96 to i64
  %98 = shl nuw nsw i64 %97, 3
  %99 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %98, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink9scheduler18FrameSchedulerImplEEEPKcv, i64 0, i64 0)) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %99, i8 0, i64 %98, i1 false) #14
  %100 = bitcast i8* %99 to %"class.blink::scheduler::FrameSchedulerImpl"**
  %101 = tail call %"class.blink::scheduler::FrameSchedulerImpl"** @_ZN3WTF9HashTableIPKN5blink9scheduler18FrameSchedulerImplES5_NS_17IdentityExtractorENS_7PtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable"* %5, %"class.blink::scheduler::FrameSchedulerImpl"** %100, i32 %96, %"class.blink::scheduler::FrameSchedulerImpl"** null) #14
  br label %102

102:                                              ; preds = %75, %80, %95
  %103 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %118

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 9
  %108 = tail call zeroext i1 @_ZNK22PollableThreadSafeFlag5IsSetEv(%class.PollableThreadSafeFlag* %107) #14
  br i1 %108, label %109, label %118

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 8
  %111 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %110, i64 0, i32 0, i32 0
  %112 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %111) #14
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %116, label %114, !prof !2

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %110, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %115) #14
  br label %116

116:                                              ; preds = %114, %109
  tail call void @_ZN22PollableThreadSafeFlag14SetWhileLockedEb(%class.PollableThreadSafeFlag* %107, i1 zeroext false) #14
  %117 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %111) #14
  br label %118

118:                                              ; preds = %102, %106, %116
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i16 @_ZNK5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal17QueueEnabledStateERKNS0_19MainThreadTaskQueueE(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* nocapture readonly, %"class.blink::scheduler::MainThreadTaskQueue"* dereferenceable(88)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal17ShouldAffectQueueERKNS0_19MainThreadTaskQueueE(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, %"class.blink::scheduler::MainThreadTaskQueue"* dereferenceable(88) %1)
  br i1 %7, label %9, label %8

8:                                                ; preds = %6, %2
  br label %9

9:                                                ; preds = %6, %8
  %10 = phi i16 [ 0, %8 ], [ 1, %6 ]
  ret i16 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i16 @_ZNK5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal13QueuePriorityERKNS0_19MainThreadTaskQueueE(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* nocapture readonly, %"class.blink::scheduler::MainThreadTaskQueue"* dereferenceable(88)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal17ShouldAffectQueueERKNS0_19MainThreadTaskQueueE(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, %"class.blink::scheduler::MainThreadTaskQueue"* dereferenceable(88) %1)
  br i1 %7, label %9, label %8

8:                                                ; preds = %6, %2
  br label %9

9:                                                ; preds = %6, %8
  %10 = phi i16 [ 1536, %8 ], [ 1537, %6 ]
  ret i16 %10
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal24ShouldNotifyOnInputEventEv(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 9
  %7 = tail call zeroext i1 @_ZNK22PollableThreadSafeFlag5IsSetEv(%class.PollableThreadSafeFlag* %6) #14
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i1 [ %7, %5 ], [ false, %1 ]
  ret i1 %9
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #12

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal13OnNewDocumentERKNS0_18FrameSchedulerImplE(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"*, %"class.blink::scheduler::FrameSchedulerImpl"* dereferenceable(1120)) unnamed_addr #3 align 2 {
  %3 = alloca %"class.blink::scheduler::FrameSchedulerImpl"*, align 8
  %4 = alloca %"class.blink::scheduler::FrameSchedulerImpl"*, align 8
  %5 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"* %1 to i32 (%"class.blink::scheduler::FrameSchedulerImpl"*)***
  %6 = load i32 (%"class.blink::scheduler::FrameSchedulerImpl"*)**, i32 (%"class.blink::scheduler::FrameSchedulerImpl"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.blink::scheduler::FrameSchedulerImpl"*)*, i32 (%"class.blink::scheduler::FrameSchedulerImpl"*)** %6, i64 20
  %8 = load i32 (%"class.blink::scheduler::FrameSchedulerImpl"*)*, i32 (%"class.blink::scheduler::FrameSchedulerImpl"*)** %7, align 8
  %9 = tail call i32 %8(%"class.blink::scheduler::FrameSchedulerImpl"* %1) #14
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %48

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %35 [
    i32 2, label %14
    i32 0, label %23
  ]

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 1
  %16 = load %"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::AgentSchedulingStrategy::Delegate"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 5, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.blink::scheduler::AgentSchedulingStrategy::Delegate"* %16 to void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)***
  %20 = load void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)**, void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)*, void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)** %20, i64 2
  %22 = load void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)*, void (%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"*, %"class.blink::scheduler::FrameSchedulerImpl"*, i64)** %21, align 8
  tail call void %22(%"class.blink::scheduler::AgentSchedulingStrategy::Delegate"* %16, %"class.blink::scheduler::FrameSchedulerImpl"* dereferenceable(1120) %1, i64 %18) #14
  br label %35

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 9
  %25 = tail call zeroext i1 @_ZNK22PollableThreadSafeFlag5IsSetEv(%class.PollableThreadSafeFlag* %24) #14
  br i1 %25, label %35, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 8
  %28 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %27, i64 0, i32 0, i32 0
  %29 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %28) #14
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31, !prof !2

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %27, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %32) #14
  br label %33

33:                                               ; preds = %31, %26
  tail call void @_ZN22PollableThreadSafeFlag14SetWhileLockedEb(%class.PollableThreadSafeFlag* %24, i1 zeroext true) #14
  %34 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %28) #14
  br label %35

35:                                               ; preds = %23, %33, %11, %14
  %36 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #14
  store %"class.blink::scheduler::FrameSchedulerImpl"* %1, %"class.blink::scheduler::FrameSchedulerImpl"** %3, align 8
  %37 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 6, i32 0
  %38 = call { %"class.blink::scheduler::FrameSchedulerImpl"**, i8 } @_ZN3WTF9HashTableIPKN5blink9scheduler18FrameSchedulerImplES5_NS_17IdentityExtractorENS_7PtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKS5_S5_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %37, %"class.blink::scheduler::FrameSchedulerImpl"** nonnull dereferenceable(8) %3, %"class.blink::scheduler::FrameSchedulerImpl"** nonnull dereferenceable(8) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #14
  %39 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"* %1 to i1 (%"class.blink::scheduler::FrameSchedulerImpl"*)***
  %40 = load i1 (%"class.blink::scheduler::FrameSchedulerImpl"*)**, i1 (%"class.blink::scheduler::FrameSchedulerImpl"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::scheduler::FrameSchedulerImpl"*)*, i1 (%"class.blink::scheduler::FrameSchedulerImpl"*)** %40, i64 38
  %42 = load i1 (%"class.blink::scheduler::FrameSchedulerImpl"*)*, i1 (%"class.blink::scheduler::FrameSchedulerImpl"*)** %41, align 8
  %43 = call zeroext i1 %42(%"class.blink::scheduler::FrameSchedulerImpl"* %1) #14
  br i1 %43, label %44, label %48

44:                                               ; preds = %35
  %45 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #14
  store %"class.blink::scheduler::FrameSchedulerImpl"* %1, %"class.blink::scheduler::FrameSchedulerImpl"** %4, align 8
  %46 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0
  %47 = call { %"class.blink::scheduler::FrameSchedulerImpl"**, i8 } @_ZN3WTF9HashTableIPKN5blink9scheduler18FrameSchedulerImplES5_NS_17IdentityExtractorENS_7PtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKS5_S5_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %46, %"class.blink::scheduler::FrameSchedulerImpl"** nonnull dereferenceable(8) %4, %"class.blink::scheduler::FrameSchedulerImpl"** nonnull dereferenceable(8) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #14
  br label %48

48:                                               ; preds = %35, %44, %2
  ret void
}

declare zeroext i1 @_ZNK22PollableThreadSafeFlag5IsSetEv(%class.PollableThreadSafeFlag*) local_unnamed_addr #4

declare void @_ZN22PollableThreadSafeFlag14SetWhileLockedEb(%class.PollableThreadSafeFlag*, i1 zeroext) local_unnamed_addr #4

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::scheduler::FrameSchedulerImpl"**, i8 } @_ZN3WTF9HashTableIPKN5blink9scheduler18FrameSchedulerImplES5_NS_17IdentityExtractorENS_7PtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKS5_S5_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::scheduler::FrameSchedulerImpl"** dereferenceable(8), %"class.blink::scheduler::FrameSchedulerImpl"** dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.blink::scheduler::FrameSchedulerImpl"**, %"class.blink::scheduler::FrameSchedulerImpl"*** %4, align 8
  %6 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::scheduler::FrameSchedulerImpl"** @_ZN3WTF9HashTableIPKN5blink9scheduler18FrameSchedulerImplES5_NS_17IdentityExtractorENS_7PtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"class.blink::scheduler::FrameSchedulerImpl"** null)
  %9 = load %"class.blink::scheduler::FrameSchedulerImpl"**, %"class.blink::scheduler::FrameSchedulerImpl"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %11, i64 %38
  %40 = load %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %39, align 8
  %41 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::scheduler::FrameSchedulerImpl"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::scheduler::FrameSchedulerImpl"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %58, inttoptr (i64 -1 to %"class.blink::scheduler::FrameSchedulerImpl"*)
  %66 = select i1 %65, %"class.blink::scheduler::FrameSchedulerImpl"** %59, %"class.blink::scheduler::FrameSchedulerImpl"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %11, i64 %70
  %72 = load %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %71, align 8
  %73 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::scheduler::FrameSchedulerImpl"** @_ZN3WTF9HashTableIPKN5blink9scheduler18FrameSchedulerImplES5_NS_17IdentityExtractorENS_7PtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"class.blink::scheduler::FrameSchedulerImpl"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::scheduler::FrameSchedulerImpl"**, i8 } undef, %"class.blink::scheduler::FrameSchedulerImpl"** %105, 0
  %107 = insertvalue { %"class.blink::scheduler::FrameSchedulerImpl"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::scheduler::FrameSchedulerImpl"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::scheduler::FrameSchedulerImpl"** @_ZN3WTF9HashTableIPKN5blink9scheduler18FrameSchedulerImplES5_NS_17IdentityExtractorENS_7PtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"*, %"class.blink::scheduler::FrameSchedulerImpl"**) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #14
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %22, i8* %23) #14
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink9scheduler18FrameSchedulerImplEEEPKcv, i64 0, i64 0)) #14
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #14
  %36 = bitcast i8* %35 to %"class.blink::scheduler::FrameSchedulerImpl"**
  %37 = call %"class.blink::scheduler::FrameSchedulerImpl"** @_ZN3WTF9HashTableIPKN5blink9scheduler18FrameSchedulerImplES5_NS_17IdentityExtractorENS_7PtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable"* %0, %"class.blink::scheduler::FrameSchedulerImpl"** %36, i32 %32, %"class.blink::scheduler::FrameSchedulerImpl"** %1) #14
  ret %"class.blink::scheduler::FrameSchedulerImpl"** %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #12

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::scheduler::FrameSchedulerImpl"** @_ZN3WTF9HashTableIPKN5blink9scheduler18FrameSchedulerImplES5_NS_17IdentityExtractorENS_7PtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable"*, %"class.blink::scheduler::FrameSchedulerImpl"**, i32, %"class.blink::scheduler::FrameSchedulerImpl"**) local_unnamed_addr #3 comdat align 2 {
  %5 = ptrtoint %"class.blink::scheduler::FrameSchedulerImpl"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::scheduler::FrameSchedulerImpl"**, %"class.blink::scheduler::FrameSchedulerImpl"*** %9, align 8
  %17 = ptrtoint %"class.blink::scheduler::FrameSchedulerImpl"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #14
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::scheduler::FrameSchedulerImpl"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %34, i64 %37
  %39 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %1, i64 %62
  %64 = ptrtoint %"class.blink::scheduler::FrameSchedulerImpl"** %63 to i64
  %65 = load %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %63, align 8
  %66 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::scheduler::FrameSchedulerImpl"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::scheduler::FrameSchedulerImpl"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::scheduler::FrameSchedulerImpl"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %87, null
  %89 = ptrtoint %"class.blink::scheduler::FrameSchedulerImpl"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::scheduler::FrameSchedulerImpl"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %93, inttoptr (i64 -1 to %"class.blink::scheduler::FrameSchedulerImpl"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %1, i64 %104
  %106 = ptrtoint %"class.blink::scheduler::FrameSchedulerImpl"** %105 to i64
  %107 = load %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %105, align 8
  %108 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::scheduler::FrameSchedulerImpl"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::scheduler::FrameSchedulerImpl"**, %"class.blink::scheduler::FrameSchedulerImpl"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %113, i64 %37
  %115 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %114, %3
  %116 = select i1 %115, %"class.blink::scheduler::FrameSchedulerImpl"** %111, %"class.blink::scheduler::FrameSchedulerImpl"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::scheduler::FrameSchedulerImpl"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_120TrackMainFrameSignal17ShouldAffectQueueERKNS0_19MainThreadTaskQueueE(%"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* nocapture readonly, %"class.blink::scheduler::MainThreadTaskQueue"* dereferenceable(88)) unnamed_addr #3 align 2 {
  %3 = tail call %"class.blink::scheduler::FrameSchedulerImpl"* @_ZNK5blink9scheduler19MainThreadTaskQueue17GetFrameSchedulerEv(%"class.blink::scheduler::MainThreadTaskQueue"* %1) #14
  %4 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"* %3, null
  br i1 %4, label %71, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %1, i64 0, i32 3, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 7
  br i1 %12, label %13, label %71

13:                                               ; preds = %9, %5
  %14 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 7, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %71, label %17

17:                                               ; preds = %13
  %18 = tail call %"class.blink::scheduler::FrameSchedulerImpl"* @_ZNK5blink9scheduler19MainThreadTaskQueue17GetFrameSchedulerEv(%"class.blink::scheduler::MainThreadTaskQueue"* %1) #14
  %19 = tail call dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK5blink9scheduler18FrameSchedulerImpl17GetAgentClusterIdEv(%"class.blink::scheduler::FrameSchedulerImpl"* %18) #14
  %20 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %19, i64 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %19, i64 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 6, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 6, i32 0, i32 0
  %28 = load %"class.blink::scheduler::FrameSchedulerImpl"**, %"class.blink::scheduler::FrameSchedulerImpl"*** %27, align 8
  %29 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal", %"class.blink::scheduler::(anonymous namespace)::TrackMainFrameSignal"* %0, i64 0, i32 6, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %28, i64 %31
  br i1 %26, label %71, label %33

33:                                               ; preds = %17
  %34 = icmp eq i32 %30, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %33, %39
  %36 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %40, %39 ], [ %28, %33 ]
  %37 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  switch i64 %38, label %42 [
    i64 -1, label %39
    i64 0, label %39
  ]

39:                                               ; preds = %35, %35
  %40 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %36, i64 1
  %41 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %40, %32
  br i1 %41, label %71, label %35

42:                                               ; preds = %35, %33
  %43 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %28, %33 ], [ %36, %35 ]
  %44 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %43, %32
  br i1 %44, label %71, label %45

45:                                               ; preds = %42
  %46 = load %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %43, align 8
  br label %47

47:                                               ; preds = %45, %68
  %48 = phi %"class.blink::scheduler::FrameSchedulerImpl"* [ %69, %68 ], [ %46, %45 ]
  %49 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %62, %68 ], [ %43, %45 ]
  %50 = tail call dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK5blink9scheduler18FrameSchedulerImpl17GetAgentClusterIdEv(%"class.blink::scheduler::FrameSchedulerImpl"* %48) #14
  %51 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %50, i64 0, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %21
  br i1 %53, label %54, label %58

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %50, i64 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %23
  br i1 %57, label %71, label %58

58:                                               ; preds = %54, %47
  %59 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %49, i64 1
  %60 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %59, %32
  br i1 %60, label %71, label %61

61:                                               ; preds = %58, %65
  %62 = phi %"class.blink::scheduler::FrameSchedulerImpl"** [ %66, %65 ], [ %59, %58 ]
  %63 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %68 [
    i64 -1, label %65
    i64 0, label %65
  ]

65:                                               ; preds = %61, %61
  %66 = getelementptr inbounds %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %62, i64 1
  %67 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %66, %32
  br i1 %67, label %71, label %61

68:                                               ; preds = %61
  %69 = inttoptr i64 %64 to %"class.blink::scheduler::FrameSchedulerImpl"*
  %70 = icmp eq %"class.blink::scheduler::FrameSchedulerImpl"** %62, %32
  br i1 %70, label %71, label %47

71:                                               ; preds = %39, %58, %68, %54, %65, %17, %42, %13, %9, %2
  %72 = phi i1 [ false, %2 ], [ false, %9 ], [ false, %13 ], [ true, %42 ], [ true, %17 ], [ true, %65 ], [ true, %58 ], [ true, %68 ], [ false, %54 ], [ true, %39 ]
  ret i1 %72
}

declare %"class.blink::scheduler::FrameSchedulerImpl"* @_ZNK5blink9scheduler19MainThreadTaskQueue17GetFrameSchedulerEv(%"class.blink::scheduler::MainThreadTaskQueue"*) local_unnamed_addr #4

declare dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK5blink9scheduler18FrameSchedulerImpl17GetAgentClusterIdEv(%"class.blink::scheduler::FrameSchedulerImpl"*) local_unnamed_addr #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
