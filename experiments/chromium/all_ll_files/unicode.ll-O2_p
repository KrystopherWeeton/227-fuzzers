; ModuleID = '../../third_party/unrar/src/unicode.cpp'
source_filename = "../../third_party/unrar/src/unicode.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z10WideToCharPKwPcm(i32*, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %struct.__mbstate_t*
  %7 = alloca i32*, align 8
  store i8 0, i8* %1, align 1
  %8 = bitcast i64* %4 to %struct.__mbstate_t*
  %9 = tail call i32* @wcschr(i32* %0, i32 signext 65534) #9
  %10 = icmp eq i32* %9, null
  br i1 %10, label %73, label %11

11:                                               ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 %2, i1 false) #10
  %12 = load i32, i32* %0, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %65, label %14

14:                                               ; preds = %11
  %15 = bitcast i64* %4 to i8*
  br label %16

16:                                               ; preds = %57, %14
  %17 = phi i8 [ 1, %14 ], [ %58, %57 ]
  %18 = phi i32* [ %0, %14 ], [ %62, %57 ]
  %19 = phi i32 [ 0, %14 ], [ %59, %57 ]
  %20 = phi i32 [ 0, %14 ], [ %60, %57 ]
  %21 = zext i32 %19 to i64
  br label %22

22:                                               ; preds = %31, %16
  %23 = phi i32* [ %18, %16 ], [ %34, %31 ]
  %24 = phi i32 [ %20, %16 ], [ %32, %31 ]
  %25 = call i64 @__ctype_get_mb_cur_max() #10
  %26 = sub i64 %2, %25
  %27 = icmp ugt i64 %26, %21
  br i1 %27, label %28, label %65

28:                                               ; preds = %22
  %29 = load i32, i32* %23, align 4
  %30 = icmp eq i32 %29, 65534
  br i1 %30, label %31, label %37

31:                                               ; preds = %28
  %32 = add i32 %24, 1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i32, i32* %0, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %65, label %22

37:                                               ; preds = %28
  %38 = and i32 %29, -128
  %39 = icmp eq i32 %38, 57472
  br i1 %39, label %40, label %44

40:                                               ; preds = %37
  %41 = trunc i32 %29 to i8
  %42 = add i32 %19, 1
  %43 = getelementptr inbounds i8, i8* %1, i64 %21
  store i8 %41, i8* %43, align 1
  br label %57

44:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  store i64 0, i64* %4, align 8
  %45 = getelementptr inbounds i8, i8* %1, i64 %21
  %46 = call i64 @wcrtomb(i8* %45, i32 signext %29, %struct.__mbstate_t* nonnull %8) #10
  %47 = icmp eq i64 %46, -1
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  store i8 95, i8* %45, align 1
  br label %49

49:                                               ; preds = %48, %44
  %50 = phi i8 [ 0, %48 ], [ %17, %44 ]
  store i64 0, i64* %4, align 8
  %51 = call i64 @__ctype_get_mb_cur_max() #10
  %52 = call i64 @mbrtowc(i32* null, i8* %45, i64 %51, %struct.__mbstate_t* nonnull %8) #10
  %53 = trunc i64 %52 to i32
  %54 = icmp sgt i32 %53, 1
  %55 = select i1 %54, i32 %53, i32 1
  %56 = add i32 %55, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  br label %57

57:                                               ; preds = %49, %40
  %58 = phi i8 [ %17, %40 ], [ %50, %49 ]
  %59 = phi i32 [ %42, %40 ], [ %56, %49 ]
  %60 = add i32 %24, 1
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i32, i32* %0, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %16

65:                                               ; preds = %57, %22, %31, %11
  %66 = phi i8 [ 1, %11 ], [ %17, %31 ], [ %17, %22 ], [ %58, %57 ]
  %67 = phi i32 [ 0, %11 ], [ %19, %31 ], [ %19, %22 ], [ %59, %57 ]
  %68 = zext i32 %67 to i64
  %69 = add i64 %2, -1
  %70 = icmp ugt i64 %69, %68
  %71 = select i1 %70, i64 %68, i64 %69
  %72 = getelementptr inbounds i8, i8* %1, i64 %71
  store i8 0, i8* %72, align 1
  br label %93

73:                                               ; preds = %3
  %74 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #10
  store i64 0, i64* %5, align 8
  %75 = bitcast i32** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #10
  store i32* %0, i32** %7, align 8
  %76 = call i64 @wcsrtombs(i8* %1, i32** nonnull %7, i64 %2, %struct.__mbstate_t* nonnull %6) #10
  %77 = icmp eq i64 %76, -1
  br i1 %77, label %78, label %84

78:                                               ; preds = %73
  %79 = tail call i32* @__errno_location() #11
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 84
  br i1 %81, label %82, label %86

82:                                               ; preds = %78
  store i64 0, i64* %5, align 8
  store i32* %0, i32** %7, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 %2, i1 false)
  %83 = call i64 @wcsrtombs(i8* %1, i32** nonnull %7, i64 %2, %struct.__mbstate_t* nonnull %6) #10
  br label %84

84:                                               ; preds = %82, %73
  %85 = phi i64 [ %83, %82 ], [ %76, %73 ]
  switch i64 %85, label %91 [
    i64 -1, label %86
    i64 0, label %87
  ]

86:                                               ; preds = %78, %84
  br label %91

87:                                               ; preds = %84
  %88 = load i32, i32* %0, align 4
  %89 = icmp eq i32 %88, 0
  %90 = zext i1 %89 to i8
  br label %91

91:                                               ; preds = %87, %86, %84
  %92 = phi i8 [ 1, %84 ], [ 0, %86 ], [ %90, %87 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #10
  br label %93

93:                                               ; preds = %65, %91
  %94 = phi i8 [ %92, %91 ], [ %66, %65 ]
  %95 = icmp eq i64 %2, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %93
  %97 = add i64 %2, -1
  %98 = getelementptr inbounds i8, i8* %1, i64 %97
  store i8 0, i8* %98, align 1
  br label %99

99:                                               ; preds = %93, %96
  %100 = icmp ne i8 %94, 0
  ret i1 %100
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare i64 @wcsrtombs(i8*, i32**, i64, %struct.__mbstate_t*) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z10CharToWidePKcPwm(i8*, i32*, i64) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %struct.__mbstate_t*
  %7 = alloca i8*, align 8
  store i32 0, i32* %1, align 4
  %8 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  store i64 0, i64* %5, align 8
  %9 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  store i8* %0, i8** %7, align 8
  %10 = call i64 @mbsrtowcs(i32* %1, i8** nonnull %7, i64 %2, %struct.__mbstate_t* nonnull %6) #10
  switch i64 %10, label %80 [
    i64 -1, label %14
    i64 0, label %11
  ]

11:                                               ; preds = %3
  %12 = load i8, i8* %0, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %80, label %14

14:                                               ; preds = %11, %3
  %15 = icmp ugt i64 %2, 1
  br i1 %15, label %16, label %80

16:                                               ; preds = %14
  %17 = bitcast i64* %4 to %struct.__mbstate_t*
  %18 = bitcast i64* %4 to i8*
  br label %19

19:                                               ; preds = %65, %16
  %20 = phi i64 [ 0, %16 ], [ %70, %65 ]
  %21 = phi i8 [ 0, %16 ], [ %68, %65 ]
  %22 = phi i32 [ 0, %16 ], [ %67, %65 ]
  %23 = phi i32 [ 0, %16 ], [ %69, %65 ]
  %24 = zext i32 %22 to i64
  %25 = getelementptr inbounds i8, i8* %0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %72, label %28

28:                                               ; preds = %19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  store i64 0, i64* %4, align 8
  %29 = getelementptr inbounds i32, i32* %1, i64 %20
  %30 = call i64 @__ctype_get_mb_cur_max() #10
  %31 = call i64 @mbrtowc(i32* %29, i8* %25, i64 %30, %struct.__mbstate_t* nonnull %17) #10
  %32 = icmp ugt i64 %31, -3
  br i1 %32, label %33, label %56

33:                                               ; preds = %28
  %34 = load i8, i8* %25, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %63

36:                                               ; preds = %33
  %37 = and i8 %21, 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %36
  %40 = zext i32 %23 to i64
  br label %47

41:                                               ; preds = %36
  %42 = add i32 %23, 1
  store i32 65534, i32* %29, align 4
  %43 = zext i32 %42 to i64
  %44 = icmp ult i64 %43, %2
  br i1 %44, label %45, label %63

45:                                               ; preds = %41
  %46 = load i8, i8* %25, align 1
  br label %47

47:                                               ; preds = %45, %39
  %48 = phi i64 [ %40, %39 ], [ %43, %45 ]
  %49 = phi i8 [ %34, %39 ], [ %46, %45 ]
  %50 = phi i32 [ %23, %39 ], [ %42, %45 ]
  %51 = phi i8 [ %21, %39 ], [ 1, %45 ]
  %52 = add i32 %22, 1
  %53 = zext i8 %49 to i32
  %54 = or i32 %53, 57344
  %55 = getelementptr inbounds i32, i32* %1, i64 %48
  store i32 %54, i32* %55, align 4
  br label %65

56:                                               ; preds = %28
  store i64 0, i64* %4, align 8
  %57 = call i64 @__ctype_get_mb_cur_max() #10
  %58 = call i64 @mbrtowc(i32* null, i8* %25, i64 %57, %struct.__mbstate_t* nonnull %17) #10
  %59 = trunc i64 %58 to i32
  %60 = icmp sgt i32 %59, 1
  %61 = select i1 %60, i32 %59, i32 1
  %62 = add i32 %61, %22
  br label %65

63:                                               ; preds = %41, %33
  %64 = phi i32 [ %23, %33 ], [ %42, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  br label %72

65:                                               ; preds = %56, %47
  %66 = phi i32 [ %50, %47 ], [ %23, %56 ]
  %67 = phi i32 [ %52, %47 ], [ %62, %56 ]
  %68 = phi i8 [ %51, %47 ], [ %21, %56 ]
  %69 = add i32 %66, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %70 = zext i32 %69 to i64
  %71 = icmp ult i64 %70, %2
  br i1 %71, label %19, label %72

72:                                               ; preds = %19, %65, %63
  %73 = phi i8 [ 0, %63 ], [ 1, %19 ], [ 0, %65 ]
  %74 = phi i32 [ %64, %63 ], [ %23, %19 ], [ %69, %65 ]
  %75 = zext i32 %74 to i64
  %76 = add i64 %2, -1
  %77 = icmp ugt i64 %76, %75
  %78 = select i1 %77, i64 %75, i64 %76
  %79 = getelementptr inbounds i32, i32* %1, i64 %78
  store i32 0, i32* %79, align 4
  br label %80

80:                                               ; preds = %11, %3, %72, %14
  %81 = phi i8 [ %73, %72 ], [ 0, %14 ], [ 1, %3 ], [ 1, %11 ]
  %82 = icmp eq i64 %2, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %80
  %84 = add i64 %2, -1
  %85 = getelementptr inbounds i32, i32* %1, i64 %84
  store i32 0, i32* %85, align 4
  br label %86

86:                                               ; preds = %80, %83
  %87 = icmp ne i8 %81, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  ret i1 %87
}

; Function Attrs: nounwind
declare i64 @mbsrtowcs(i32*, i8**, i64, %struct.__mbstate_t*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_Z9WideToRawPKwPhm(i32* nocapture readonly, i8* returned, i64) local_unnamed_addr #4 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %23, label %5

5:                                                ; preds = %3, %19
  %6 = phi i64 [ %20, %19 ], [ 0, %3 ]
  %7 = phi i32* [ %21, %19 ], [ %0, %3 ]
  %8 = load i32, i32* %7, align 4
  %9 = trunc i32 %8 to i8
  %10 = shl i64 %6, 1
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  store i8 %9, i8* %11, align 1
  %12 = load i32, i32* %7, align 4
  %13 = lshr i32 %12, 8
  %14 = trunc i32 %13 to i8
  %15 = or i64 %10, 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %15
  store i8 %14, i8* %16, align 1
  %17 = load i32, i32* %7, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %5
  %20 = add nuw i64 %6, 1
  %21 = getelementptr inbounds i32, i32* %7, i64 1
  %22 = icmp eq i64 %20, %2
  br i1 %22, label %23, label %5

23:                                               ; preds = %5, %19, %3
  ret i8* %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32* @_Z9RawToWidePKhPwm(i8* nocapture readonly, i32* returned, i64) local_unnamed_addr #4 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %22, label %5

5:                                                ; preds = %3, %5
  %6 = phi i64 [ %19, %5 ], [ 0, %3 ]
  %7 = shl i64 %6, 1
  %8 = getelementptr inbounds i8, i8* %0, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = or i64 %7, 1
  %12 = getelementptr inbounds i8, i8* %0, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = shl nuw nsw i32 %14, 8
  %16 = or i32 %15, %10
  %17 = getelementptr inbounds i32, i32* %1, i64 %6
  store i32 %16, i32* %17, align 4
  %18 = icmp ne i32 %16, 0
  %19 = add nuw i64 %6, 1
  %20 = icmp ult i64 %19, %2
  %21 = and i1 %18, %20
  br i1 %21, label %5, label %22

22:                                               ; preds = %5, %3
  ret i32* %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_Z9WideToUtfPKwPcm(i32* nocapture readonly, i8* nocapture, i64) local_unnamed_addr #4 {
  %4 = load i32, i32* %0, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %100, label %6

6:                                                ; preds = %3
  %7 = add nsw i64 %2, -1
  br label %8

8:                                                ; preds = %6, %94
  %9 = phi i32 [ %98, %94 ], [ %4, %6 ]
  %10 = phi i64 [ %97, %94 ], [ %7, %6 ]
  %11 = phi i32* [ %96, %94 ], [ %0, %6 ]
  %12 = phi i8* [ %95, %94 ], [ %1, %6 ]
  %13 = add nsw i64 %10, -1
  %14 = icmp sgt i64 %10, 0
  br i1 %14, label %15, label %100

15:                                               ; preds = %8
  %16 = getelementptr inbounds i32, i32* %11, i64 1
  %17 = icmp ult i32 %9, 128
  br i1 %17, label %18, label %21

18:                                               ; preds = %15
  %19 = trunc i32 %9 to i8
  %20 = getelementptr inbounds i8, i8* %12, i64 1
  store i8 %19, i8* %12, align 1
  br label %94

21:                                               ; preds = %15
  %22 = icmp ult i32 %9, 2048
  br i1 %22, label %23, label %35

23:                                               ; preds = %21
  %24 = add nsw i64 %10, -2
  %25 = icmp sgt i64 %24, -1
  br i1 %25, label %26, label %35

26:                                               ; preds = %23
  %27 = lshr i32 %9, 6
  %28 = trunc i32 %27 to i8
  %29 = or i8 %28, -64
  %30 = getelementptr inbounds i8, i8* %12, i64 1
  store i8 %29, i8* %12, align 1
  %31 = trunc i32 %9 to i8
  %32 = and i8 %31, 63
  %33 = or i8 %32, -128
  %34 = getelementptr inbounds i8, i8* %12, i64 2
  store i8 %33, i8* %30, align 1
  br label %94

35:                                               ; preds = %23, %21
  %36 = phi i64 [ -1, %23 ], [ %13, %21 ]
  %37 = and i32 %9, -1024
  %38 = icmp eq i32 %37, 55296
  br i1 %38, label %39, label %48

39:                                               ; preds = %35
  %40 = load i32, i32* %16, align 4
  %41 = and i32 %40, -1024
  %42 = icmp eq i32 %41, 56320
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl i32 %9, 10
  %45 = add i32 %44, -56613888
  %46 = add i32 %45, %40
  %47 = getelementptr inbounds i32, i32* %11, i64 2
  br label %48

48:                                               ; preds = %43, %39, %35
  %49 = phi i32* [ %47, %43 ], [ %16, %39 ], [ %16, %35 ]
  %50 = phi i32 [ %46, %43 ], [ %9, %39 ], [ %9, %35 ]
  %51 = icmp ult i32 %50, 65536
  br i1 %51, label %52, label %69

52:                                               ; preds = %48
  %53 = add nsw i64 %36, -2
  %54 = icmp sgt i64 %53, -1
  br i1 %54, label %55, label %71

55:                                               ; preds = %52
  %56 = lshr i32 %50, 12
  %57 = trunc i32 %56 to i8
  %58 = or i8 %57, -32
  %59 = getelementptr inbounds i8, i8* %12, i64 1
  store i8 %58, i8* %12, align 1
  %60 = lshr i32 %50, 6
  %61 = trunc i32 %60 to i8
  %62 = and i8 %61, 63
  %63 = or i8 %62, -128
  %64 = getelementptr inbounds i8, i8* %12, i64 2
  store i8 %63, i8* %59, align 1
  %65 = trunc i32 %50 to i8
  %66 = and i8 %65, 63
  %67 = or i8 %66, -128
  %68 = getelementptr inbounds i8, i8* %12, i64 3
  store i8 %67, i8* %64, align 1
  br label %94

69:                                               ; preds = %48
  %70 = icmp ult i32 %50, 2097152
  br i1 %70, label %71, label %94

71:                                               ; preds = %52, %69
  %72 = phi i64 [ %36, %69 ], [ %53, %52 ]
  %73 = add nsw i64 %72, -3
  %74 = icmp sgt i64 %73, -1
  br i1 %74, label %75, label %94

75:                                               ; preds = %71
  %76 = lshr i32 %50, 18
  %77 = trunc i32 %76 to i8
  %78 = or i8 %77, -16
  %79 = getelementptr inbounds i8, i8* %12, i64 1
  store i8 %78, i8* %12, align 1
  %80 = lshr i32 %50, 12
  %81 = trunc i32 %80 to i8
  %82 = and i8 %81, 63
  %83 = or i8 %82, -128
  %84 = getelementptr inbounds i8, i8* %12, i64 2
  store i8 %83, i8* %79, align 1
  %85 = lshr i32 %50, 6
  %86 = trunc i32 %85 to i8
  %87 = and i8 %86, 63
  %88 = or i8 %87, -128
  %89 = getelementptr inbounds i8, i8* %12, i64 3
  store i8 %88, i8* %84, align 1
  %90 = trunc i32 %50 to i8
  %91 = and i8 %90, 63
  %92 = or i8 %91, -128
  %93 = getelementptr inbounds i8, i8* %12, i64 4
  store i8 %92, i8* %89, align 1
  br label %94

94:                                               ; preds = %26, %69, %71, %75, %55, %18
  %95 = phi i8* [ %20, %18 ], [ %34, %26 ], [ %68, %55 ], [ %93, %75 ], [ %12, %71 ], [ %12, %69 ]
  %96 = phi i32* [ %16, %18 ], [ %16, %26 ], [ %49, %55 ], [ %49, %75 ], [ %49, %71 ], [ %49, %69 ]
  %97 = phi i64 [ %13, %18 ], [ %24, %26 ], [ %53, %55 ], [ %73, %75 ], [ %73, %71 ], [ %36, %69 ]
  %98 = load i32, i32* %96, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %8

100:                                              ; preds = %8, %94, %3
  %101 = phi i8* [ %1, %3 ], [ %95, %94 ], [ %12, %8 ]
  store i8 0, i8* %101, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_Z13WideToUtfSizePKw(i32* nocapture readonly) local_unnamed_addr #5 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %39, label %4

4:                                                ; preds = %1, %33
  %5 = phi i32 [ %37, %33 ], [ %2, %1 ]
  %6 = phi i64 [ %35, %33 ], [ 0, %1 ]
  %7 = phi i32* [ %36, %33 ], [ %0, %1 ]
  %8 = icmp slt i32 %5, 128
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = add i64 %6, 1
  br label %33

11:                                               ; preds = %4
  %12 = icmp slt i32 %5, 2048
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = add i64 %6, 2
  br label %33

15:                                               ; preds = %11
  %16 = icmp ult i32 %5, 65536
  br i1 %16, label %17, label %29

17:                                               ; preds = %15
  %18 = and i32 %5, -1024
  %19 = icmp eq i32 %18, 55296
  br i1 %19, label %20, label %27

20:                                               ; preds = %17
  %21 = getelementptr inbounds i32, i32* %7, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, -1024
  %24 = icmp eq i32 %23, 56320
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = add i64 %6, 4
  br label %33

27:                                               ; preds = %20, %17
  %28 = add i64 %6, 3
  br label %33

29:                                               ; preds = %15
  %30 = icmp ult i32 %5, 2097152
  %31 = add i64 %6, 4
  %32 = select i1 %30, i64 %31, i64 %6
  br label %33

33:                                               ; preds = %29, %9, %27, %25, %13
  %34 = phi i32* [ %7, %9 ], [ %7, %13 ], [ %21, %25 ], [ %7, %27 ], [ %7, %29 ]
  %35 = phi i64 [ %10, %9 ], [ %14, %13 ], [ %26, %25 ], [ %28, %27 ], [ %32, %29 ]
  %36 = getelementptr inbounds i32, i32* %34, i64 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %4

39:                                               ; preds = %33, %1
  %40 = phi i64 [ 0, %1 ], [ %35, %33 ]
  %41 = add i64 %40, 1
  ret i64 %41
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_Z9UtfToWidePKcPwm(i8* nocapture readonly, i32* nocapture, i64) local_unnamed_addr #4 {
  %4 = load i8, i8* %0, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %107, label %6

6:                                                ; preds = %3
  %7 = add nsw i64 %2, -1
  br label %8

8:                                                ; preds = %6, %101
  %9 = phi i8 [ %105, %101 ], [ %4, %6 ]
  %10 = phi i64 [ %104, %101 ], [ %7, %6 ]
  %11 = phi i8 [ %103, %101 ], [ 1, %6 ]
  %12 = phi i8* [ %87, %101 ], [ %0, %6 ]
  %13 = phi i32* [ %102, %101 ], [ %1, %6 ]
  %14 = getelementptr inbounds i8, i8* %12, i64 1
  %15 = zext i8 %9 to i32
  %16 = icmp sgt i8 %9, -1
  br i1 %16, label %86, label %17

17:                                               ; preds = %8
  %18 = and i32 %15, 224
  %19 = icmp eq i32 %18, 192
  br i1 %19, label %20, label %31

20:                                               ; preds = %17
  %21 = load i8, i8* %14, align 1
  %22 = sext i8 %21 to i32
  %23 = and i32 %22, 192
  %24 = icmp eq i32 %23, 128
  br i1 %24, label %25, label %107

25:                                               ; preds = %20
  %26 = shl nuw nsw i32 %15, 6
  %27 = and i32 %26, 1984
  %28 = and i32 %22, 63
  %29 = or i32 %28, %27
  %30 = getelementptr inbounds i8, i8* %12, i64 2
  br label %86

31:                                               ; preds = %17
  %32 = and i32 %15, 240
  %33 = icmp eq i32 %32, 224
  br i1 %33, label %34, label %54

34:                                               ; preds = %31
  %35 = load i8, i8* %14, align 1
  %36 = sext i8 %35 to i32
  %37 = and i32 %36, 192
  %38 = icmp eq i32 %37, 128
  br i1 %38, label %39, label %107

39:                                               ; preds = %34
  %40 = getelementptr inbounds i8, i8* %12, i64 2
  %41 = load i8, i8* %40, align 1
  %42 = sext i8 %41 to i32
  %43 = and i32 %42, 192
  %44 = icmp eq i32 %43, 128
  br i1 %44, label %45, label %107

45:                                               ; preds = %39
  %46 = shl nuw nsw i32 %15, 12
  %47 = and i32 %46, 61440
  %48 = shl nsw i32 %36, 6
  %49 = and i32 %48, 4032
  %50 = or i32 %49, %47
  %51 = and i32 %42, 63
  %52 = or i32 %50, %51
  %53 = getelementptr inbounds i8, i8* %12, i64 3
  br label %86

54:                                               ; preds = %31
  %55 = and i32 %15, 248
  %56 = icmp eq i32 %55, 240
  br i1 %56, label %57, label %107

57:                                               ; preds = %54
  %58 = load i8, i8* %14, align 1
  %59 = sext i8 %58 to i32
  %60 = and i32 %59, 192
  %61 = icmp eq i32 %60, 128
  br i1 %61, label %62, label %107

62:                                               ; preds = %57
  %63 = getelementptr inbounds i8, i8* %12, i64 2
  %64 = load i8, i8* %63, align 1
  %65 = sext i8 %64 to i32
  %66 = and i32 %65, 192
  %67 = icmp eq i32 %66, 128
  br i1 %67, label %68, label %107

68:                                               ; preds = %62
  %69 = getelementptr inbounds i8, i8* %12, i64 3
  %70 = load i8, i8* %69, align 1
  %71 = sext i8 %70 to i32
  %72 = and i32 %71, 192
  %73 = icmp eq i32 %72, 128
  br i1 %73, label %74, label %107

74:                                               ; preds = %68
  %75 = shl nuw nsw i32 %15, 18
  %76 = and i32 %75, 1835008
  %77 = shl nsw i32 %59, 12
  %78 = and i32 %77, 258048
  %79 = or i32 %78, %76
  %80 = shl nsw i32 %65, 6
  %81 = and i32 %80, 4032
  %82 = or i32 %79, %81
  %83 = and i32 %71, 63
  %84 = or i32 %82, %83
  %85 = getelementptr inbounds i8, i8* %12, i64 4
  br label %86

86:                                               ; preds = %8, %25, %74, %45
  %87 = phi i8* [ %30, %25 ], [ %53, %45 ], [ %85, %74 ], [ %14, %8 ]
  %88 = phi i32 [ %29, %25 ], [ %52, %45 ], [ %84, %74 ], [ %15, %8 ]
  %89 = icmp slt i64 %10, 1
  br i1 %89, label %107, label %90

90:                                               ; preds = %86
  %91 = add nsw i64 %10, -1
  %92 = icmp ugt i32 %88, 65535
  br i1 %92, label %93, label %98

93:                                               ; preds = %90
  %94 = add nsw i64 %10, -2
  %95 = icmp slt i64 %94, 0
  br i1 %95, label %107, label %96

96:                                               ; preds = %93
  %97 = icmp ugt i32 %88, 1114111
  br i1 %97, label %101, label %98

98:                                               ; preds = %90, %96
  %99 = phi i64 [ %94, %96 ], [ %91, %90 ]
  %100 = getelementptr inbounds i32, i32* %13, i64 1
  store i32 %88, i32* %13, align 4
  br label %101

101:                                              ; preds = %96, %98
  %102 = phi i32* [ %100, %98 ], [ %13, %96 ]
  %103 = phi i8 [ %11, %98 ], [ 0, %96 ]
  %104 = phi i64 [ %99, %98 ], [ %94, %96 ]
  %105 = load i8, i8* %87, align 1
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %8

107:                                              ; preds = %101, %20, %39, %34, %68, %62, %57, %54, %86, %93, %3
  %108 = phi i32* [ %1, %3 ], [ %13, %93 ], [ %13, %86 ], [ %13, %54 ], [ %13, %57 ], [ %13, %62 ], [ %13, %68 ], [ %13, %34 ], [ %13, %39 ], [ %13, %20 ], [ %102, %101 ]
  %109 = phi i8 [ 1, %3 ], [ %11, %93 ], [ %11, %86 ], [ 0, %54 ], [ 0, %57 ], [ 0, %62 ], [ 0, %68 ], [ 0, %34 ], [ 0, %39 ], [ 0, %20 ], [ %103, %101 ]
  store i32 0, i32* %108, align 4
  %110 = and i8 %109, 1
  %111 = icmp ne i8 %110, 0
  ret i1 %111
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_Z10IsTextUtf8PKh(i8* nocapture readonly) local_unnamed_addr #6 {
  %2 = tail call i64 @strlen(i8* %0) #9
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %43, label %8

4:                                                ; preds = %85, %75, %65, %55, %45, %17
  %5 = phi i64 [ %19, %17 ], [ %46, %45 ], [ %56, %55 ], [ %66, %65 ], [ %76, %75 ], [ %86, %85 ]
  %6 = phi i8* [ %20, %17 ], [ %47, %45 ], [ %57, %55 ], [ %67, %65 ], [ %77, %75 ], [ %87, %85 ]
  %7 = phi i1 [ %22, %17 ], [ %49, %45 ], [ %59, %55 ], [ %69, %65 ], [ %79, %75 ], [ %88, %85 ]
  br i1 %7, label %43, label %8

8:                                                ; preds = %1, %4
  %9 = phi i64 [ %5, %4 ], [ %2, %1 ]
  %10 = phi i8* [ %6, %4 ], [ %0, %1 ]
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp sgt i8 %11, -1
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = and i32 %12, 64
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %43, label %28

17:                                               ; preds = %8, %28, %31, %34, %37, %40
  %18 = phi i32 [ -1, %8 ], [ 1, %28 ], [ 2, %31 ], [ 3, %34 ], [ 4, %37 ], [ 5, %40 ]
  %19 = add i64 %9, -1
  %20 = getelementptr inbounds i8, i8* %10, i64 1
  %21 = icmp sgt i32 %18, 0
  %22 = icmp eq i64 %19, 0
  br i1 %21, label %23, label %4

23:                                               ; preds = %17
  br i1 %22, label %43, label %24

24:                                               ; preds = %23
  %25 = load i8, i8* %20, align 1
  %26 = and i8 %25, -64
  %27 = icmp eq i8 %26, -128
  br i1 %27, label %45, label %43

28:                                               ; preds = %14
  %29 = and i32 %12, 32
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %17, label %31

31:                                               ; preds = %28
  %32 = and i32 %12, 16
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %17, label %34

34:                                               ; preds = %31
  %35 = and i32 %12, 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %17, label %37

37:                                               ; preds = %34
  %38 = and i32 %12, 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %17, label %40

40:                                               ; preds = %37
  %41 = and i32 %12, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %17, label %43

43:                                               ; preds = %4, %14, %40, %23, %24, %50, %51, %60, %61, %70, %71, %80, %81, %1
  %44 = phi i1 [ true, %1 ], [ false, %81 ], [ false, %80 ], [ false, %71 ], [ false, %70 ], [ false, %61 ], [ false, %60 ], [ false, %51 ], [ false, %50 ], [ false, %24 ], [ false, %23 ], [ false, %40 ], [ true, %4 ], [ false, %14 ]
  ret i1 %44

45:                                               ; preds = %24
  %46 = add i64 %9, -2
  %47 = getelementptr inbounds i8, i8* %10, i64 2
  %48 = icmp sgt i32 %18, 1
  %49 = icmp eq i64 %46, 0
  br i1 %48, label %50, label %4

50:                                               ; preds = %45
  br i1 %49, label %43, label %51

51:                                               ; preds = %50
  %52 = load i8, i8* %47, align 1
  %53 = and i8 %52, -64
  %54 = icmp eq i8 %53, -128
  br i1 %54, label %55, label %43

55:                                               ; preds = %51
  %56 = add i64 %9, -3
  %57 = getelementptr inbounds i8, i8* %10, i64 3
  %58 = icmp sgt i32 %18, 2
  %59 = icmp eq i64 %56, 0
  br i1 %58, label %60, label %4

60:                                               ; preds = %55
  br i1 %59, label %43, label %61

61:                                               ; preds = %60
  %62 = load i8, i8* %57, align 1
  %63 = and i8 %62, -64
  %64 = icmp eq i8 %63, -128
  br i1 %64, label %65, label %43

65:                                               ; preds = %61
  %66 = add i64 %9, -4
  %67 = getelementptr inbounds i8, i8* %10, i64 4
  %68 = icmp sgt i32 %18, 3
  %69 = icmp eq i64 %66, 0
  br i1 %68, label %70, label %4

70:                                               ; preds = %65
  br i1 %69, label %43, label %71

71:                                               ; preds = %70
  %72 = load i8, i8* %67, align 1
  %73 = and i8 %72, -64
  %74 = icmp eq i8 %73, -128
  br i1 %74, label %75, label %43

75:                                               ; preds = %71
  %76 = add i64 %9, -5
  %77 = getelementptr inbounds i8, i8* %10, i64 5
  %78 = icmp sgt i32 %18, 4
  %79 = icmp eq i64 %76, 0
  br i1 %78, label %80, label %4

80:                                               ; preds = %75
  br i1 %79, label %43, label %81

81:                                               ; preds = %80
  %82 = load i8, i8* %77, align 1
  %83 = and i8 %82, -64
  %84 = icmp eq i8 %83, -128
  br i1 %84, label %85, label %43

85:                                               ; preds = %81
  %86 = add i64 %9, -6
  %87 = getelementptr inbounds i8, i8* %10, i64 6
  %88 = icmp eq i64 %86, 0
  br label %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_Z10IsTextUtf8PKhm(i8* nocapture readonly, i64) local_unnamed_addr #5 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %28, label %8

4:                                                ; preds = %85, %75, %65, %55, %45, %17
  %5 = phi i64 [ %19, %17 ], [ %46, %45 ], [ %56, %55 ], [ %66, %65 ], [ %76, %75 ], [ %86, %85 ]
  %6 = phi i8* [ %20, %17 ], [ %47, %45 ], [ %57, %55 ], [ %67, %65 ], [ %77, %75 ], [ %87, %85 ]
  %7 = phi i1 [ %22, %17 ], [ %49, %45 ], [ %59, %55 ], [ %69, %65 ], [ %79, %75 ], [ %88, %85 ]
  br i1 %7, label %28, label %8

8:                                                ; preds = %2, %4
  %9 = phi i64 [ %5, %4 ], [ %1, %2 ]
  %10 = phi i8* [ %6, %4 ], [ %0, %2 ]
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp sgt i8 %11, -1
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = and i32 %12, 64
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %28, label %30

17:                                               ; preds = %8, %30, %33, %36, %39, %42
  %18 = phi i32 [ -1, %8 ], [ 1, %30 ], [ 2, %33 ], [ 3, %36 ], [ 4, %39 ], [ 5, %42 ]
  %19 = add i64 %9, -1
  %20 = getelementptr inbounds i8, i8* %10, i64 1
  %21 = icmp sgt i32 %18, 0
  %22 = icmp eq i64 %19, 0
  br i1 %21, label %23, label %4

23:                                               ; preds = %17
  br i1 %22, label %28, label %24

24:                                               ; preds = %23
  %25 = load i8, i8* %20, align 1
  %26 = and i8 %25, -64
  %27 = icmp eq i8 %26, -128
  br i1 %27, label %45, label %28

28:                                               ; preds = %42, %14, %4, %23, %24, %50, %51, %60, %61, %70, %71, %80, %81, %2
  %29 = phi i1 [ true, %2 ], [ false, %81 ], [ false, %80 ], [ false, %71 ], [ false, %70 ], [ false, %61 ], [ false, %60 ], [ false, %51 ], [ false, %50 ], [ false, %24 ], [ false, %23 ], [ false, %14 ], [ true, %4 ], [ false, %42 ]
  ret i1 %29

30:                                               ; preds = %14
  %31 = and i32 %12, 32
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %17, label %33

33:                                               ; preds = %30
  %34 = and i32 %12, 16
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %17, label %36

36:                                               ; preds = %33
  %37 = and i32 %12, 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %17, label %39

39:                                               ; preds = %36
  %40 = and i32 %12, 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %17, label %42

42:                                               ; preds = %39
  %43 = and i32 %12, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %17, label %28

45:                                               ; preds = %24
  %46 = add i64 %9, -2
  %47 = getelementptr inbounds i8, i8* %10, i64 2
  %48 = icmp sgt i32 %18, 1
  %49 = icmp eq i64 %46, 0
  br i1 %48, label %50, label %4

50:                                               ; preds = %45
  br i1 %49, label %28, label %51

51:                                               ; preds = %50
  %52 = load i8, i8* %47, align 1
  %53 = and i8 %52, -64
  %54 = icmp eq i8 %53, -128
  br i1 %54, label %55, label %28

55:                                               ; preds = %51
  %56 = add i64 %9, -3
  %57 = getelementptr inbounds i8, i8* %10, i64 3
  %58 = icmp sgt i32 %18, 2
  %59 = icmp eq i64 %56, 0
  br i1 %58, label %60, label %4

60:                                               ; preds = %55
  br i1 %59, label %28, label %61

61:                                               ; preds = %60
  %62 = load i8, i8* %57, align 1
  %63 = and i8 %62, -64
  %64 = icmp eq i8 %63, -128
  br i1 %64, label %65, label %28

65:                                               ; preds = %61
  %66 = add i64 %9, -4
  %67 = getelementptr inbounds i8, i8* %10, i64 4
  %68 = icmp sgt i32 %18, 3
  %69 = icmp eq i64 %66, 0
  br i1 %68, label %70, label %4

70:                                               ; preds = %65
  br i1 %69, label %28, label %71

71:                                               ; preds = %70
  %72 = load i8, i8* %67, align 1
  %73 = and i8 %72, -64
  %74 = icmp eq i8 %73, -128
  br i1 %74, label %75, label %28

75:                                               ; preds = %71
  %76 = add i64 %9, -5
  %77 = getelementptr inbounds i8, i8* %10, i64 5
  %78 = icmp sgt i32 %18, 4
  %79 = icmp eq i64 %76, 0
  br i1 %78, label %80, label %4

80:                                               ; preds = %75
  br i1 %79, label %28, label %81

81:                                               ; preds = %80
  %82 = load i8, i8* %77, align 1
  %83 = and i8 %82, -64
  %84 = icmp eq i8 %83, -128
  br i1 %84, label %85, label %28

85:                                               ; preds = %81
  %86 = add i64 %9, -6
  %87 = getelementptr inbounds i8, i8* %10, i64 6
  %88 = icmp eq i64 %86, 0
  br label %4
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z8wcsicompPKwS0_(i32* nocapture readonly, i32* nocapture readonly) local_unnamed_addr #0 {
  %3 = load i32, i32* %0, align 4
  %4 = tail call i32 @towupper(i32 %3) #10
  %5 = load i32, i32* %1, align 4
  %6 = tail call i32 @towupper(i32 %5) #10
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %18, %2
  %9 = phi i32 [ %4, %2 ], [ %22, %18 ]
  %10 = phi i32 [ %6, %2 ], [ %24, %18 ]
  %11 = icmp slt i32 %9, %10
  %12 = select i1 %11, i32 -1, i32 1
  br label %26

13:                                               ; preds = %2, %18
  %14 = phi i32* [ %20, %18 ], [ %1, %2 ]
  %15 = phi i32* [ %19, %18 ], [ %0, %2 ]
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds i32, i32* %15, i64 1
  %20 = getelementptr inbounds i32, i32* %14, i64 1
  %21 = load i32, i32* %19, align 4
  %22 = tail call i32 @towupper(i32 %21) #10
  %23 = load i32, i32* %20, align 4
  %24 = tail call i32 @towupper(i32 %23) #10
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %13, label %8

26:                                               ; preds = %13, %8
  %27 = phi i32 [ %12, %8 ], [ 0, %13 ]
  ret i32 %27
}

; Function Attrs: nounwind
declare i32 @towupper(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z9wcsnicompPKwS0_m(i32* nocapture readonly, i32* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %33, label %5

5:                                                ; preds = %3
  %6 = load i32, i32* %0, align 4
  %7 = tail call i32 @towupper(i32 %6) #10
  %8 = load i32, i32* %1, align 4
  %9 = tail call i32 @towupper(i32 %8) #10
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %16, label %11

11:                                               ; preds = %25, %5
  %12 = phi i32 [ %7, %5 ], [ %29, %25 ]
  %13 = phi i32 [ %9, %5 ], [ %31, %25 ]
  %14 = icmp slt i32 %12, %13
  %15 = select i1 %14, i32 -1, i32 1
  br label %33

16:                                               ; preds = %5, %25
  %17 = phi i64 [ %23, %25 ], [ %2, %5 ]
  %18 = phi i32* [ %27, %25 ], [ %1, %5 ]
  %19 = phi i32* [ %26, %25 ], [ %0, %5 ]
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %16
  %23 = add i64 %17, -1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds i32, i32* %19, i64 1
  %27 = getelementptr inbounds i32, i32* %18, i64 1
  %28 = load i32, i32* %26, align 4
  %29 = tail call i32 @towupper(i32 %28) #10
  %30 = load i32, i32* %27, align 4
  %31 = tail call i32 @towupper(i32 %30) #10
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %16, label %11

33:                                               ; preds = %16, %22, %11, %3
  %34 = phi i32 [ 0, %3 ], [ %15, %11 ], [ 0, %22 ], [ 0, %16 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32* @_Z10wcscasestrPKwS0_(i32* readonly, i32* nocapture readonly) local_unnamed_addr #0 {
  %3 = load i32, i32* %0, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %30, label %5

5:                                                ; preds = %2, %25
  %6 = phi i32* [ %27, %25 ], [ %0, %2 ]
  %7 = phi i64 [ %26, %25 ], [ 0, %2 ]
  %8 = load i32, i32* %1, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %30, label %14

10:                                               ; preds = %14
  %11 = getelementptr inbounds i32, i32* %1, i64 %24
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %5, %10
  %15 = phi i32* [ %11, %10 ], [ %1, %5 ]
  %16 = phi i64 [ %24, %10 ], [ 0, %5 ]
  %17 = add i64 %16, %7
  %18 = getelementptr inbounds i32, i32* %0, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = tail call i32 @towlower(i32 %19) #10
  %21 = load i32, i32* %15, align 4
  %22 = tail call i32 @towlower(i32 %21) #10
  %23 = icmp eq i32 %20, %22
  %24 = add i64 %16, 1
  br i1 %23, label %10, label %25

25:                                               ; preds = %14
  %26 = add i64 %7, 1
  %27 = getelementptr inbounds i32, i32* %0, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %5

30:                                               ; preds = %25, %5, %10, %2
  %31 = phi i32* [ null, %2 ], [ %6, %10 ], [ %6, %5 ], [ null, %25 ]
  ret i32* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z8tolowerwi(i32) local_unnamed_addr #0 {
  %2 = tail call i32 @towlower(i32 %0) #10
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32* @_Z8wcslowerPw(i32* returned) local_unnamed_addr #0 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %5, %1
  ret i32* %0

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %10, %5 ], [ %2, %1 ]
  %7 = phi i32* [ %9, %5 ], [ %0, %1 ]
  %8 = tail call i32 @towlower(i32 %6) #10
  store i32 %8, i32* %7, align 4
  %9 = getelementptr inbounds i32, i32* %7, i64 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %4, label %5
}

; Function Attrs: nounwind
declare i32 @towlower(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32* @_Z8wcsupperPw(i32* returned) local_unnamed_addr #0 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %5, %1
  ret i32* %0

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %10, %5 ], [ %2, %1 ]
  %7 = phi i32* [ %9, %5 ], [ %0, %1 ]
  %8 = tail call i32 @towupper(i32 %6) #10
  store i32 %8, i32* %7, align 4
  %9 = getelementptr inbounds i32, i32* %7, i64 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %4, label %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z8toupperwi(i32) local_unnamed_addr #0 {
  %2 = tail call i32 @towupper(i32 %0) #10
  ret i32 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_Z5atoiwPKw(i32* nocapture readonly) local_unnamed_addr #5 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp eq i32 %2, 45
  %4 = getelementptr inbounds i32, i32* %0, i64 1
  %5 = select i1 %3, i32* %4, i32* %0
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -48
  %8 = icmp ult i32 %7, 10
  br i1 %8, label %9, label %21

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %18, %9 ], [ %6, %1 ]
  %11 = phi i64 [ %16, %9 ], [ 0, %1 ]
  %12 = phi i32* [ %17, %9 ], [ %5, %1 ]
  %13 = mul i64 %11, 10
  %14 = add nsw i32 %10, -48
  %15 = sext i32 %14 to i64
  %16 = add i64 %13, %15
  %17 = getelementptr inbounds i32, i32* %12, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, -48
  %20 = icmp ult i32 %19, 10
  br i1 %20, label %9, label %21

21:                                               ; preds = %9, %1
  %22 = phi i64 [ 0, %1 ], [ %16, %9 ]
  %23 = icmp sgt i64 %22, -1
  %24 = and i1 %3, %23
  %25 = sub nsw i64 0, %22
  %26 = select i1 %24, i64 %25, i64 %22
  %27 = trunc i64 %26 to i32
  ret i32 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_Z6atoilwPKw(i32* nocapture readonly) local_unnamed_addr #5 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp eq i32 %2, 45
  %4 = getelementptr inbounds i32, i32* %0, i64 1
  %5 = select i1 %3, i32* %4, i32* %0
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -48
  %8 = icmp ult i32 %7, 10
  br i1 %8, label %9, label %21

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %18, %9 ], [ %6, %1 ]
  %11 = phi i64 [ %16, %9 ], [ 0, %1 ]
  %12 = phi i32* [ %17, %9 ], [ %5, %1 ]
  %13 = mul i64 %11, 10
  %14 = add nsw i32 %10, -48
  %15 = sext i32 %14 to i64
  %16 = add i64 %13, %15
  %17 = getelementptr inbounds i32, i32* %12, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, -48
  %20 = icmp ult i32 %19, 10
  br i1 %20, label %9, label %21

21:                                               ; preds = %9, %1
  %22 = phi i64 [ 0, %1 ], [ %16, %9 ]
  %23 = icmp sgt i64 %22, -1
  %24 = and i1 %3, %23
  %25 = sub nsw i64 0, %22
  %26 = select i1 %24, i64 %25, i64 %22
  ret i64 %26
}

; Function Attrs: nounwind readonly
declare i32* @wcschr(i32*, i32 signext) local_unnamed_addr #8

; Function Attrs: nounwind
declare i64 @__ctype_get_mb_cur_max() local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @wcrtomb(i8*, i32 signext, %struct.__mbstate_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
