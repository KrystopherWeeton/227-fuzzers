; ModuleID = '../../sql/recover_module/payload.cc'
source_filename = "../../sql/recover_module/payload.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sql::recover::LeafPayloadReader" = type { %"class.sql::recover::DatabasePageReader"*, i64, i32, i32, i32, i32, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"class.sql::recover::DatabasePageReader" = type <{ i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.sql::recover::VirtualTable"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.sql::recover::VirtualTable" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN3sql7recover17LeafPayloadReaderC1EPNS0_18DatabasePageReaderE = hidden unnamed_addr alias void (%"class.sql::recover::LeafPayloadReader"*, %"class.sql::recover::DatabasePageReader"*), void (%"class.sql::recover::LeafPayloadReader"*, %"class.sql::recover::DatabasePageReader"*)* @_ZN3sql7recover17LeafPayloadReaderC2EPNS0_18DatabasePageReaderE
@_ZN3sql7recover17LeafPayloadReaderD1Ev = hidden unnamed_addr alias void (%"class.sql::recover::LeafPayloadReader"*), void (%"class.sql::recover::LeafPayloadReader"*)* @_ZN3sql7recover17LeafPayloadReaderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3sql7recover17LeafPayloadReaderC2EPNS0_18DatabasePageReaderE(%"class.sql::recover::LeafPayloadReader"* nocapture, %"class.sql::recover::DatabasePageReader"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 0
  store %"class.sql::recover::DatabasePageReader"* %1, %"class.sql::recover::DatabasePageReader"** %3, align 8
  %4 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 7
  %6 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3sql7recover17LeafPayloadReaderD2Ev(%"class.sql::recover::LeafPayloadReader"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 7, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql7recover17LeafPayloadReader10InitializeEli(%"class.sql::recover::LeafPayloadReader"* nocapture, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 3
  store i32 %2, i32* %5, align 4
  %6 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 0
  %7 = load %"class.sql::recover::DatabasePageReader"*, %"class.sql::recover::DatabasePageReader"** %6, align 8
  %8 = getelementptr inbounds %"class.sql::recover::DatabasePageReader", %"class.sql::recover::DatabasePageReader"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 2
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %"class.sql::recover::DatabasePageReader", %"class.sql::recover::DatabasePageReader"* %7, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, -35
  %14 = sext i32 %13 to i64
  %15 = icmp slt i64 %14, %1
  br i1 %15, label %20, label %16

16:                                               ; preds = %3
  %17 = trunc i64 %1 to i32
  %18 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 4
  store i32 %17, i32* %18, align 8
  %19 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 5
  store i32 0, i32* %19, align 4
  br label %46

20:                                               ; preds = %3
  %21 = shl i32 %12, 5
  %22 = add i32 %21, -384
  %23 = sdiv i32 %22, 255
  %24 = add nsw i32 %23, -23
  %25 = add nsw i32 %12, -4
  %26 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 6
  store i32 %25, i32* %26, align 8
  %27 = sext i32 %24 to i64
  %28 = sub nsw i64 %1, %27
  %29 = sext i32 %25 to i64
  %30 = sdiv i64 %28, %29
  %31 = srem i64 %28, %29
  %32 = trunc i64 %31 to i32
  %33 = add nsw i32 %24, %32
  %34 = icmp sgt i32 %33, %13
  %35 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 4
  br i1 %34, label %38, label %36

36:                                               ; preds = %20
  store i32 %33, i32* %35, align 8
  %37 = trunc i64 %30 to i32
  br label %41

38:                                               ; preds = %20
  store i32 %24, i32* %35, align 8
  %39 = trunc i64 %30 to i32
  %40 = add i32 %39, 1
  br label %41

41:                                               ; preds = %36, %38
  %42 = phi i32 [ %37, %36 ], [ %40, %38 ]
  %43 = phi i32 [ %33, %36 ], [ %24, %38 ]
  %44 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 5
  store i32 %42, i32* %44, align 4
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %16, %41
  %47 = phi i32 [ %17, %16 ], [ %43, %41 ]
  br label %48

48:                                               ; preds = %41, %46
  %49 = phi i32 [ 0, %46 ], [ %42, %41 ]
  %50 = phi i32 [ %47, %46 ], [ %43, %41 ]
  %51 = phi i32 [ 0, %46 ], [ 4, %41 ]
  %52 = add nsw i32 %50, %2
  %53 = add nsw i32 %52, %51
  %54 = icmp sgt i32 %53, %12
  br i1 %54, label %55, label %56

55:                                               ; preds = %48
  store i32 0, i32* %10, align 8
  br label %82

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 7
  %58 = bitcast %"class.std::__1::vector"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 7, i32 0, i32 1
  %61 = bitcast i32** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = sext i32 %49 to i64
  %63 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %64 = bitcast i32** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %59
  %67 = ashr exact i64 %66, 2
  %68 = icmp ult i64 %67, %62
  br i1 %68, label %69, label %82

69:                                               ; preds = %56
  %70 = icmp slt i32 %49, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %69
  tail call void @abort() #9
  unreachable

72:                                               ; preds = %69
  %73 = shl nsw i64 %62, 2
  %74 = tail call i8* @_Znwm(i64 %73) #8
  %75 = bitcast i8* %74 to i32*
  %76 = ptrtoint i8* %74 to i64
  %77 = getelementptr inbounds i32, i32* %75, i64 %62
  %78 = ptrtoint i32* %77 to i64
  store i64 %76, i64* %58, align 8
  store i64 %76, i64* %61, align 8
  store i64 %78, i64* %64, align 8
  %79 = icmp eq i64 %59, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %72
  %81 = inttoptr i64 %59 to i8*
  tail call void @_ZdlPv(i8* %81) #8
  br label %82

82:                                               ; preds = %80, %72, %56, %55
  %83 = phi i1 [ false, %55 ], [ true, %56 ], [ true, %72 ], [ true, %80 ]
  ret i1 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql7recover17LeafPayloadReader11ReadPayloadEllPh(%"class.sql::recover::LeafPayloadReader"*, i64, i64, i8* nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = icmp sgt i64 %7, %1
  br i1 %8, label %9, label %44

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 0
  %11 = load %"class.sql::recover::DatabasePageReader"*, %"class.sql::recover::DatabasePageReader"** %10, align 8
  %12 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = tail call i32 @_ZN3sql7recover18DatabasePageReader8ReadPageEi(%"class.sql::recover::DatabasePageReader"* %11, i32 %13) #7
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %107

16:                                               ; preds = %9
  %17 = trunc i64 %1 to i32
  %18 = shl i64 %1, 32
  %19 = ashr exact i64 %18, 32
  %20 = add nsw i64 %19, %2
  %21 = load i32, i32* %5, align 8
  %22 = sext i32 %21 to i64
  %23 = icmp sgt i64 %20, %22
  %24 = trunc i64 %2 to i32
  %25 = sub nsw i32 %21, %17
  %26 = select i1 %23, i32 %25, i32 %24
  %27 = sext i32 %26 to i64
  %28 = icmp eq i32 %26, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %16
  %30 = load %"class.sql::recover::DatabasePageReader"*, %"class.sql::recover::DatabasePageReader"** %10, align 8
  %31 = getelementptr inbounds %"class.sql::recover::DatabasePageReader", %"class.sql::recover::DatabasePageReader"* %30, i64 0, i32 2, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %34, %17
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %32, i64 %36
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %37, i64 %27, i1 false) #7
  br label %38

38:                                               ; preds = %16, %29
  %39 = icmp eq i64 %27, %2
  br i1 %39, label %107, label %40

40:                                               ; preds = %38
  %41 = add nsw i64 %27, %1
  %42 = sub nsw i64 %2, %27
  %43 = getelementptr inbounds i8, i8* %3, i64 %27
  br label %44

44:                                               ; preds = %40, %4
  %45 = phi i64 [ %2, %4 ], [ %42, %40 ]
  %46 = phi i8* [ %3, %4 ], [ %43, %40 ]
  %47 = phi i64 [ %1, %4 ], [ %41, %40 ]
  %48 = icmp sgt i64 %45, 0
  br i1 %48, label %49, label %107

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 6
  %51 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 7
  %52 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 7, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  %54 = bitcast %"class.std::__1::vector"* %51 to i64*
  %55 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 0
  br label %56

56:                                               ; preds = %49, %102
  %57 = phi i64 [ %47, %49 ], [ %103, %102 ]
  %58 = phi i8* [ %46, %49 ], [ %105, %102 ]
  %59 = phi i64 [ %45, %49 ], [ %104, %102 ]
  %60 = load i32, i32* %5, align 8
  %61 = sext i32 %60 to i64
  %62 = sub nsw i64 %57, %61
  %63 = load i32, i32* %50, align 8
  %64 = sext i32 %63 to i64
  %65 = sdiv i64 %62, %64
  %66 = srem i64 %62, %64
  %67 = trunc i64 %66 to i32
  %68 = shl i64 %65, 32
  %69 = ashr exact i64 %68, 32
  br label %70

70:                                               ; preds = %76, %56
  %71 = load i64, i64* %53, align 8
  %72 = load i64, i64* %54, align 8
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 2
  %75 = icmp ugt i64 %74, %69
  br i1 %75, label %78, label %76

76:                                               ; preds = %70
  %77 = tail call zeroext i1 @_ZN3sql7recover17LeafPayloadReader26PopulateNextOverflowPageIdEv(%"class.sql::recover::LeafPayloadReader"* %0)
  br i1 %77, label %70, label %107

78:                                               ; preds = %70
  %79 = inttoptr i64 %72 to i32*
  %80 = getelementptr inbounds i32, i32* %79, i64 %69
  %81 = load i32, i32* %80, align 4
  %82 = load %"class.sql::recover::DatabasePageReader"*, %"class.sql::recover::DatabasePageReader"** %55, align 8
  %83 = tail call i32 @_ZN3sql7recover18DatabasePageReader8ReadPageEi(%"class.sql::recover::DatabasePageReader"* %82, i32 %81) #7
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %107

85:                                               ; preds = %78
  %86 = load %"class.sql::recover::DatabasePageReader"*, %"class.sql::recover::DatabasePageReader"** %55, align 8
  %87 = getelementptr inbounds %"class.sql::recover::DatabasePageReader", %"class.sql::recover::DatabasePageReader"* %86, i64 0, i32 4
  %88 = load i32, i32* %87, align 8
  %89 = add nsw i32 %67, 4
  %90 = sub nsw i32 %88, %89
  %91 = sext i32 %90 to i64
  %92 = icmp slt i64 %59, %91
  %93 = select i1 %92, i64 %59, i64 %91
  %94 = shl i64 %93, 32
  %95 = ashr exact i64 %94, 32
  %96 = icmp eq i64 %94, 0
  br i1 %96, label %102, label %97

97:                                               ; preds = %85
  %98 = getelementptr inbounds %"class.sql::recover::DatabasePageReader", %"class.sql::recover::DatabasePageReader"* %86, i64 0, i32 2, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = sext i32 %89 to i64
  %101 = getelementptr inbounds i8, i8* %99, i64 %100
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %58, i8* align 1 %101, i64 %95, i1 false) #7
  br label %102

102:                                              ; preds = %97, %85
  %103 = add nsw i64 %95, %57
  %104 = sub nsw i64 %59, %95
  %105 = getelementptr inbounds i8, i8* %58, i64 %95
  %106 = icmp sgt i64 %104, 0
  br i1 %106, label %56, label %107

107:                                              ; preds = %102, %78, %76, %44, %38, %9
  %108 = phi i1 [ false, %9 ], [ true, %38 ], [ true, %44 ], [ false, %76 ], [ true, %102 ], [ false, %78 ]
  ret i1 %108
}

declare i32 @_ZN3sql7recover18DatabasePageReader8ReadPageEi(%"class.sql::recover::DatabasePageReader"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql7recover17LeafPayloadReader26PopulateNextOverflowPageIdEv(%"class.sql::recover::LeafPayloadReader"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 7, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, %10
  %14 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 0
  %15 = load %"class.sql::recover::DatabasePageReader"*, %"class.sql::recover::DatabasePageReader"** %14, align 8
  %16 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = tail call i32 @_ZN3sql7recover18DatabasePageReader8ReadPageEi(%"class.sql::recover::DatabasePageReader"* %15, i32 %17) #7
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %27, label %120

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 0
  %22 = load %"class.sql::recover::DatabasePageReader"*, %"class.sql::recover::DatabasePageReader"** %21, align 8
  %23 = getelementptr inbounds i32, i32* %6, i64 -1
  %24 = load i32, i32* %23, align 4
  %25 = tail call i32 @_ZN3sql7recover18DatabasePageReader8ReadPageEi(%"class.sql::recover::DatabasePageReader"* %22, i32 %24) #7
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %120

27:                                               ; preds = %8, %20
  %28 = phi i32 [ %13, %8 ], [ 0, %20 ]
  %29 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 0
  %30 = load %"class.sql::recover::DatabasePageReader"*, %"class.sql::recover::DatabasePageReader"** %29, align 8
  %31 = getelementptr inbounds %"class.sql::recover::DatabasePageReader", %"class.sql::recover::DatabasePageReader"* %30, i64 0, i32 2, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = shl nuw i32 %36, 24
  %38 = getelementptr inbounds i8, i8* %34, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = shl nuw nsw i32 %40, 16
  %42 = or i32 %41, %37
  %43 = getelementptr inbounds i8, i8* %34, i64 2
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 8
  %47 = or i32 %42, %46
  %48 = getelementptr inbounds i8, i8* %34, i64 3
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = or i32 %47, %50
  %52 = sext i32 %51 to i64
  %53 = add nsw i64 %52, -1
  %54 = icmp ult i64 %53, 2147483647
  br i1 %54, label %55, label %120

55:                                               ; preds = %27
  %56 = load i32*, i32** %5, align 8
  %57 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %56, %58
  %60 = ptrtoint i32* %58 to i64
  br i1 %59, label %65, label %61

61:                                               ; preds = %55
  store i32 %51, i32* %56, align 4
  %62 = getelementptr inbounds i32, i32* %56, i64 1
  %63 = ptrtoint i32* %62 to i64
  %64 = bitcast i32** %5 to i64*
  store i64 %63, i64* %64, align 8
  br label %120

65:                                               ; preds = %55
  %66 = ptrtoint i32* %56 to i64
  %67 = bitcast i32** %5 to i64*
  %68 = bitcast %"class.std::__1::vector"* %2 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %66, %69
  %71 = ashr exact i64 %70, 2
  %72 = add nsw i64 %71, 1
  %73 = icmp ugt i64 %72, 4611686018427387903
  br i1 %73, label %74, label %76

74:                                               ; preds = %65
  %75 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %75) #9
  unreachable

76:                                               ; preds = %65
  %77 = bitcast i32** %57 to i64*
  %78 = sub i64 %60, %69
  %79 = ashr exact i64 %78, 2
  %80 = icmp ult i64 %79, 2305843009213693951
  br i1 %80, label %81, label %89

81:                                               ; preds = %76
  %82 = ashr exact i64 %78, 1
  %83 = icmp ult i64 %82, %72
  %84 = select i1 %83, i64 %72, i64 %82
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %94, label %86

86:                                               ; preds = %81
  %87 = icmp ugt i64 %84, 4611686018427387903
  br i1 %87, label %88, label %89

88:                                               ; preds = %86
  tail call void @abort() #9
  unreachable

89:                                               ; preds = %86, %76
  %90 = phi i64 [ %84, %86 ], [ 4611686018427387903, %76 ]
  %91 = shl i64 %90, 2
  %92 = tail call i8* @_Znwm(i64 %91) #8
  %93 = bitcast i8* %92 to i32*
  br label %94

94:                                               ; preds = %89, %81
  %95 = phi i64 [ %90, %89 ], [ 0, %81 ]
  %96 = phi i32* [ %93, %89 ], [ null, %81 ]
  %97 = getelementptr inbounds i32, i32* %96, i64 %71
  %98 = getelementptr inbounds i32, i32* %96, i64 %95
  %99 = ptrtoint i32* %98 to i64
  store i32 %51, i32* %97, align 4
  %100 = getelementptr inbounds i32, i32* %97, i64 1
  %101 = ptrtoint i32* %100 to i64
  %102 = load i32*, i32** %3, align 8
  %103 = load i64, i64* %67, align 8
  %104 = ptrtoint i32* %102 to i64
  %105 = sub i64 %103, %104
  %106 = ashr exact i64 %105, 2
  %107 = sub nsw i64 0, %106
  %108 = getelementptr inbounds i32, i32* %97, i64 %107
  %109 = ptrtoint i32* %108 to i64
  %110 = icmp sgt i64 %105, 0
  br i1 %110, label %111, label %115

111:                                              ; preds = %94
  %112 = bitcast i32* %108 to i8*
  %113 = bitcast i32* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %112, i8* align 4 %113, i64 %105, i1 false) #7
  %114 = load i32*, i32** %3, align 8
  br label %115

115:                                              ; preds = %111, %94
  %116 = phi i32* [ %102, %94 ], [ %114, %111 ]
  store i64 %109, i64* %68, align 8
  store i64 %101, i64* %67, align 8
  store i64 %99, i64* %77, align 8
  %117 = icmp eq i32* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %115
  %119 = bitcast i32* %116 to i8*
  tail call void @_ZdlPv(i8* %119) #8
  br label %120

120:                                              ; preds = %27, %61, %115, %118, %20, %8
  %121 = phi i1 [ false, %8 ], [ false, %20 ], [ false, %27 ], [ true, %61 ], [ true, %115 ], [ true, %118 ]
  ret i1 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN3sql7recover17LeafPayloadReader17ReadInlinePayloadEv(%"class.sql::recover::LeafPayloadReader"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 0
  %3 = load %"class.sql::recover::DatabasePageReader"*, %"class.sql::recover::DatabasePageReader"** %2, align 8
  %4 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = tail call i32 @_ZN3sql7recover18DatabasePageReader8ReadPageEi(%"class.sql::recover::DatabasePageReader"* %3, i32 %5) #7
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %1
  %9 = load %"class.sql::recover::DatabasePageReader"*, %"class.sql::recover::DatabasePageReader"** %2, align 8
  %10 = getelementptr inbounds %"class.sql::recover::DatabasePageReader", %"class.sql::recover::DatabasePageReader"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %11, i64 %14
  br label %16

16:                                               ; preds = %1, %8
  %17 = phi i8* [ %15, %8 ], [ null, %1 ]
  ret i8* %17
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
