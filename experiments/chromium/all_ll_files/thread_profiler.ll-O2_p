; ModuleID = '../../chrome/common/profiler/thread_profiler.cc'
source_filename = "../../chrome/common/profiler/thread_profiler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.ThreadProfiler = type { i32, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.base::RepeatingCallback", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.32", %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ThreadProfiler::WorkIdRecorder"* }
%"class.ThreadProfiler::WorkIdRecorder" = type { %"class.metrics::WorkIdRecorder", %"class.base::WorkIdProvider"* }
%"class.metrics::WorkIdRecorder" = type { i32 (...)** }
%"class.base::WorkIdProvider" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.8", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.8" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.base::StackSamplingProfiler"* }
%"class.base::StackSamplingProfiler" = type <{ %"struct.base::SamplingProfilerThreadToken", %"struct.base::StackSamplingProfiler::SamplingParams", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.base::WaitableEvent", i32, [4 x i8] }>
%"struct.base::SamplingProfilerThreadToken" = type { i32, i64 }
%"struct.base::StackSamplingProfiler::SamplingParams" = type { %"class.base::TimeDelta", i32, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.base::ProfileBuilder"* }
%"class.base::ProfileBuilder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.base::StackSampler"* }
%"class.base::StackSampler" = type opaque
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.24, i8, [7 x i8] }>
%class.scoped_refptr.24 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.25", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.26" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.PeriodicSamplingScheduler* }
%class.PeriodicSamplingScheduler = type { i32 (...)**, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.38 }
%class.scoped_refptr.38 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.39", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.39" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.40" }
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i8 }
%"class.base::NoDestructor" = type { [4 x i8] }
%"class.base::SampleMetadata" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%class.ThreadProfilerConfiguration = type { %"class.std::__1::unique_ptr.68", %"class.absl::variant" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.ThreadProfilerPlatformConfiguration* }
%class.ThreadProfilerPlatformConfiguration = type opaque
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::Union", i64 }
%"union.absl::variant_internal::Union" = type { %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.74 }
%union.anon.74 = type { i32 }
%"class.base::Unwinder" = type { i32 (...)**, %"class.base::ModuleCache"* }
%"class.base::ModuleCache" = type { %"class.std::__1::set", %"class.base::internal::flat_tree", %"class.std::__1::vector.87", %"class.base::ModuleCache::AuxiliaryModuleProvider"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.80" }
%"class.std::__1::__tree.80" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.87" }
%"class.std::__1::vector.87" = type { %"class.std::__1::__vector_base.88" }
%"class.std::__1::__vector_base.88" = type { %"class.std::__1::unique_ptr.89"*, %"class.std::__1::unique_ptr.89"*, %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::unique_ptr.89" = type opaque
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::unique_ptr.89"* }
%"class.base::ModuleCache::AuxiliaryModuleProvider" = type { i32 (...)** }
%"class.base::internal::SequenceLocalStorageMap::ValueDestructorPair" = type { i8*, void (i8*)* }
%"class.base::internal::SequenceLocalStorageMap" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.219" }
%"class.base::internal::flat_tree.219" = type { %"class.std::__1::vector.220" }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.222" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.std::__1::pair"* }
%"class.base::RepeatingCallback.98" = type opaque
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.base::OnceCallback.212" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.213" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"struct.metrics::CallStackProfileParams" = type { i32, i32, i32 }
%"class.metrics::CallStackProfileBuilder" = type { %"class.base::ProfileBuilder", %"class.base::ModuleCache", i32, i8, %"class.metrics::WorkIdRecorder"*, %"class.metrics::SampledProfile", %"class.std::__1::map.124", %"class.std::__1::unordered_map", %"class.std::__1::vector.153", %"class.std::__1::vector.160", %"class.base::OnceCallback", %"class.base::TimeTicks", %"class.metrics::CallStackProfileMetadata" }
%"class.metrics::SampledProfile" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::internal::MapFieldLite", %"class.google::protobuf::internal::MapFieldLite.111", %"class.google::protobuf::RepeatedField", %"class.metrics::PerfDataProto"*, %"class.metrics::CallStackProfile"*, %"class.metrics::PerfStatProto"*, i64, i64, i32, i32, i64, i64, i64, i32, i32, float, float }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"class.google::protobuf::internal::MapFieldLite" = type { %"class.google::protobuf::Map" }
%"class.google::protobuf::Map" = type { %"class.google::protobuf::Map<unsigned int, metrics::Process>::InnerMap" }
%"class.google::protobuf::Map<unsigned int, metrics::Process>::InnerMap" = type { i64, i64, i64, i64, i8**, %"class.google::protobuf::internal::MapAllocator" }
%"class.google::protobuf::internal::MapAllocator" = type { %"class.google::protobuf::Arena"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.102", %"struct.std::__1::atomic.102", %"struct.std::__1::atomic.106", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__cxx_atomic_impl.104" }
%"struct.std::__1::__cxx_atomic_impl.104" = type { %"struct.std::__1::__cxx_atomic_base_impl.105" }
%"struct.std::__1::__cxx_atomic_base_impl.105" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__cxx_atomic_impl.109" }
%"struct.std::__1::__cxx_atomic_impl.109" = type { %"struct.std::__1::__cxx_atomic_base_impl.110" }
%"struct.std::__1::__cxx_atomic_base_impl.110" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.google::protobuf::internal::MapFieldLite.111" = type { %"class.google::protobuf::Map.112" }
%"class.google::protobuf::Map.112" = type { %"class.google::protobuf::Map<unsigned int, metrics::Thread>::InnerMap" }
%"class.google::protobuf::Map<unsigned int, metrics::Thread>::InnerMap" = type { i64, i64, i64, i64, i8**, %"class.google::protobuf::internal::MapAllocator" }
%"class.google::protobuf::RepeatedField" = type { i32, i32, i8* }
%"class.metrics::PerfDataProto" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField.113", %"class.google::protobuf::RepeatedPtrField.114", %"class.google::protobuf::RepeatedPtrField.115", %"class.metrics::PerfDataProto_PerfEventStats"*, %"class.metrics::PerfDataProto_StringMetadata"*, i64 }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.google::protobuf::RepeatedPtrField.113" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.114" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.115" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.metrics::PerfDataProto_PerfEventStats" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", i32, i32, i32, i32, i32, i32, i8, [7 x i8] }>
%"class.metrics::PerfDataProto_StringMetadata" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.metrics::PerfDataProto_StringMetadata_StringAndMd5sumPrefix"* }
%"class.metrics::PerfDataProto_StringMetadata_StringAndMd5sumPrefix" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", i64 }
%"class.metrics::CallStackProfile" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.116", %"class.google::protobuf::RepeatedPtrField.117", %"class.google::protobuf::RepeatedField.118", %"class.google::protobuf::RepeatedPtrField.119", %"class.google::protobuf::RepeatedPtrField.120", %"class.google::protobuf::RepeatedPtrField.121", %"class.google::protobuf::RepeatedPtrField.122", i32, i32, i64 }
%"class.google::protobuf::RepeatedPtrField.116" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.117" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedField.118" = type { i32, i32, i8* }
%"class.google::protobuf::RepeatedPtrField.119" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.120" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.121" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.122" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.metrics::PerfStatProto" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.123", %"struct.google::protobuf::internal::ArenaStringPtr" }
%"class.google::protobuf::RepeatedPtrField.123" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map.124" = type { %"class.std::__1::__tree.125" }
%"class.std::__1::__tree.125" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.133", %"class.std::__1::__compressed_pair.141", %"class.std::__1::__compressed_pair.146", %"class.std::__1::__compressed_pair.150", [4 x i8] }>
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135", %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { float }
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"**, %"class.std::__1::__compressed_pair.155" }
%"class.base::ModuleCache::Module" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.base::ModuleCache::Module"** }
%"class.std::__1::vector.160" = type { %"class.std::__1::__vector_base.161" }
%"class.std::__1::__vector_base.161" = type { %"class.base::TimeTicks"*, %"class.base::TimeTicks"*, %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.base::TimeTicks"* }
%"class.metrics::CallStackProfileMetadata" = type { %"struct.std::__1::array", i64, %"class.std::__1::map.172", %"class.std::__1::unordered_map.181" }
%"struct.std::__1::array" = type { [50 x %"struct.base::MetadataRecorder::Item"] }
%"struct.base::MetadataRecorder::Item" = type { i64, %"class.absl::optional.167", i64 }
%"class.absl::optional.167" = type { %"class.absl::optional_internal::optional_data.168" }
%"class.absl::optional_internal::optional_data.168" = type { %"class.absl::optional_internal::optional_data_base.169" }
%"class.absl::optional_internal::optional_data_base.169" = type { %"class.absl::optional_internal::optional_data_dtor_base.170" }
%"class.absl::optional_internal::optional_data_dtor_base.170" = type { i8, %union.anon.171 }
%union.anon.171 = type { i64 }
%"class.std::__1::map.172" = type { %"class.std::__1::__tree.173" }
%"class.std::__1::__tree.173" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.174", %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.181" = type { %"class.std::__1::__hash_table.182" }
%"class.std::__1::__hash_table.182" = type <{ %"class.std::__1::unique_ptr.183", %"class.std::__1::__compressed_pair.193", %"class.std::__1::__compressed_pair.198", %"class.std::__1::__compressed_pair.203", [4 x i8] }>
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185", %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.std::__1::__hash_node_base.186"** }
%"struct.std::__1::__hash_node_base.186" = type { %"struct.std::__1::__hash_node_base.186"* }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.std::__1::__bucket_list_deallocator.188" }
%"class.std::__1::__bucket_list_deallocator.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"struct.std::__1::__hash_node_base.186" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"class.base::StackSamplerTestDelegate" = type opaque
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.214 }
%class.scoped_refptr.214 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::Process" = type { i32 }

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZZN4base24SequenceLocalStorageSlotINSt3__110unique_ptrI14ThreadProfilerNS1_14default_deleteIS3_EEEENS4_IS6_EEE5AdoptEPS6_ENUlPvE_8__invokeESA_ = comdat any

$_ZN7metrics14WorkIdRecorderD2Ev = comdat any

$_ZN14ThreadProfiler14WorkIdRecorderD0Ev = comdat any

$_ZNK14ThreadProfiler14WorkIdRecorder12RecordWorkIdEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM14ThreadProfilerFvvEJNS_7WeakPtrIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIM14ThreadProfilerFvvEJNS_7WeakPtrIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM14ThreadProfilerFvvEJNS_7WeakPtrIS3_EEEEEEEbPKNS0_13BindStateBaseENS9_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrI14ThreadProfilerEEEJS5_S8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFv13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrI14ThreadProfilerEEEJS4_S7_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZTVN14ThreadProfiler14WorkIdRecorderE = comdat any

@_ZTV25PeriodicSamplingScheduler = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.PeriodicSamplingScheduler*)* @_ZN25PeriodicSamplingSchedulerD2Ev to i8*), i8* bitcast (void (%class.PeriodicSamplingScheduler*)* @_ZN25PeriodicSamplingSchedulerD0Ev to i8*), i8* bitcast (double (%class.PeriodicSamplingScheduler*)* @_ZNK25PeriodicSamplingScheduler10RandDoubleEv to i8*), i8* bitcast (i64 (%class.PeriodicSamplingScheduler*)* @_ZNK25PeriodicSamplingScheduler3NowEv to i8*)] }, align 8
@_ZN12_GLOBAL__N_122g_main_thread_instanceE = internal unnamed_addr global %class.ThreadProfiler* null, align 8
@_ZN8switches14kSingleProcessE = external constant [0 x i8], align 1
@_ZN8switches13kInProcessGPUE = external constant [0 x i8], align 1
@_ZZN14ThreadProfiler18StartOnChildThreadEN7metrics22CallStackProfileParams6ThreadEE44child_thread_profiler_sequence_local_storage = internal unnamed_addr global %"class.base::NoDestructor" zeroinitializer, align 4
@_ZGVZN14ThreadProfiler18StartOnChildThreadEN7metrics22CallStackProfileParams6ThreadEE44child_thread_profiler_sequence_local_storage = internal global i64 0, align 8
@.str = private unnamed_addr constant [30 x i8] c"OnPeriodicCollectionCompleted\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"../../chrome/common/profiler/thread_profiler.cc\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"ScheduleNextPeriodicCollection\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@_ZZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE20process_backgrounded = internal global %"class.base::SampleMetadata" zeroinitializer, align 8
@_ZGVZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE20process_backgrounded = internal global i64 0, align 8
@.str.6 = private unnamed_addr constant [20 x i8] c"ProcessBackgrounded\00", align 1
@_ZTVN14ThreadProfiler14WorkIdRecorderE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.metrics::WorkIdRecorder"*)* @_ZN7metrics14WorkIdRecorderD2Ev to i8*), i8* bitcast (void (%"class.ThreadProfiler::WorkIdRecorder"*)* @_ZN14ThreadProfiler14WorkIdRecorderD0Ev to i8*), i8* bitcast (i32 (%"class.ThreadProfiler::WorkIdRecorder"*)* @_ZNK14ThreadProfiler14WorkIdRecorder12RecordWorkIdEv to i8*)] }, comdat, align 8
@.str.9 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN25PeriodicSamplingSchedulerC1EN4base9TimeDeltaEdNS0_9TimeTicksE = hidden unnamed_addr alias void (%class.PeriodicSamplingScheduler*, i64, double, i64), void (%class.PeriodicSamplingScheduler*, i64, double, i64)* @_ZN25PeriodicSamplingSchedulerC2EN4base9TimeDeltaEdNS0_9TimeTicksE
@_ZN25PeriodicSamplingSchedulerD1Ev = hidden unnamed_addr alias void (%class.PeriodicSamplingScheduler*), void (%class.PeriodicSamplingScheduler*)* @_ZN25PeriodicSamplingSchedulerD2Ev
@_ZN14ThreadProfilerD1Ev = hidden unnamed_addr alias void (%class.ThreadProfiler*), void (%class.ThreadProfiler*)* @_ZN14ThreadProfilerD2Ev
@_ZN14ThreadProfilerC1EN7metrics22CallStackProfileParams6ThreadE13scoped_refptrIN4base22SingleThreadTaskRunnerEE = hidden unnamed_addr alias void (%class.ThreadProfiler*, i32, %"class.base::SingleThreadTaskRunner"*), void (%class.ThreadProfiler*, i32, %"class.base::SingleThreadTaskRunner"*)* @_ZN14ThreadProfilerC2EN7metrics22CallStackProfileParams6ThreadE13scoped_refptrIN4base22SingleThreadTaskRunnerEE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN25PeriodicSamplingSchedulerC2EN4base9TimeDeltaEdNS0_9TimeTicksE(%class.PeriodicSamplingScheduler* nocapture, i64, double, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.PeriodicSamplingScheduler, %class.PeriodicSamplingScheduler* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV25PeriodicSamplingScheduler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = sitofp i64 %1 to double
  %7 = fdiv double %6, %2
  %8 = fcmp oge double %7, 0xC3E0000000000000
  %9 = fcmp ole double %7, 0x43DFFFFFFFFFFFFF
  %10 = and i1 %9, %8
  %11 = fptosi double %7 to i64
  br i1 %10, label %19, label %12

12:                                               ; preds = %4
  %13 = lshr i64 %1, 63
  %14 = trunc i64 %13 to i32
  %15 = fcmp olt double %2, 0.000000e+00
  %16 = zext i1 %15 to i32
  %17 = icmp eq i32 %14, %16
  %18 = select i1 %17, i64 9223372036854775807, i64 -9223372036854775808
  br label %19

19:                                               ; preds = %4, %12
  %20 = phi i64 [ %11, %4 ], [ %18, %12 ]
  %21 = getelementptr inbounds %class.PeriodicSamplingScheduler, %class.PeriodicSamplingScheduler* %0, i64 0, i32 1, i32 0
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %class.PeriodicSamplingScheduler, %class.PeriodicSamplingScheduler* %0, i64 0, i32 2, i32 0
  store i64 %1, i64* %22, align 8
  %23 = getelementptr inbounds %class.PeriodicSamplingScheduler, %class.PeriodicSamplingScheduler* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %3, i64* %23, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN25PeriodicSamplingSchedulerD2Ev(%class.PeriodicSamplingScheduler* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25PeriodicSamplingSchedulerD0Ev(%class.PeriodicSamplingScheduler*) unnamed_addr #2 align 2 {
  %2 = bitcast %class.PeriodicSamplingScheduler* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN25PeriodicSamplingScheduler23GetTimeToNextCollectionEv(%class.PeriodicSamplingScheduler*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  %6 = bitcast %class.PeriodicSamplingScheduler* %0 to i64 (%class.PeriodicSamplingScheduler*)***
  %7 = load i64 (%class.PeriodicSamplingScheduler*)**, i64 (%class.PeriodicSamplingScheduler*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%class.PeriodicSamplingScheduler*)*, i64 (%class.PeriodicSamplingScheduler*)** %7, i64 3
  %9 = load i64 (%class.PeriodicSamplingScheduler*)*, i64 (%class.PeriodicSamplingScheduler*)** %8, align 8
  %10 = tail call i64 %9(%class.PeriodicSamplingScheduler* %0) #12
  store i64 %10, i64* %4, align 8
  %11 = getelementptr inbounds %class.PeriodicSamplingScheduler, %class.PeriodicSamplingScheduler* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp slt i64 %13, %10
  %15 = bitcast i64* %4 to %"class.base::TimeTicks"*
  %16 = select i1 %14, %"class.base::TimeTicks"* %15, %"class.base::TimeTicks"* %11
  %17 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %16, i64 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %12, align 8
  %19 = getelementptr inbounds %class.PeriodicSamplingScheduler, %class.PeriodicSamplingScheduler* %0, i64 0, i32 1
  %20 = getelementptr inbounds %class.PeriodicSamplingScheduler, %class.PeriodicSamplingScheduler* %0, i64 0, i32 2, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = tail call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* %19, i64 %21)
  %23 = bitcast %class.PeriodicSamplingScheduler* %0 to double (%class.PeriodicSamplingScheduler*)***
  %24 = load double (%class.PeriodicSamplingScheduler*)**, double (%class.PeriodicSamplingScheduler*)*** %23, align 8
  %25 = getelementptr inbounds double (%class.PeriodicSamplingScheduler*)*, double (%class.PeriodicSamplingScheduler*)** %24, i64 2
  %26 = load double (%class.PeriodicSamplingScheduler*)*, double (%class.PeriodicSamplingScheduler*)** %25, align 8
  %27 = tail call double %26(%class.PeriodicSamplingScheduler* %0) #12
  %28 = sitofp i64 %22 to double
  %29 = fmul double %27, %28
  %30 = fcmp oge double %29, 0xC3E0000000000000
  %31 = fcmp ole double %29, 0x43DFFFFFFFFFFFFF
  %32 = and i1 %31, %30
  %33 = fptosi double %29 to i64
  br i1 %32, label %41, label %34

34:                                               ; preds = %1
  %35 = lshr i64 %22, 63
  %36 = trunc i64 %35 to i32
  %37 = fcmp olt double %27, 0.000000e+00
  %38 = zext i1 %37 to i32
  %39 = icmp eq i32 %36, %38
  %40 = select i1 %39, i64 9223372036854775807, i64 -9223372036854775808
  br label %41

41:                                               ; preds = %1, %34
  %42 = phi i64 [ %33, %1 ], [ %40, %34 ]
  %43 = load i64, i64* %12, align 8
  %44 = add i64 %42, -9223372036854775807
  %45 = icmp ult i64 %44, 2
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = icmp slt i64 %42, 0
  %48 = select i1 %47, i64 -9223372036854775808, i64 9223372036854775807
  %49 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %43, i64 %42) #12
  %50 = extractvalue { i64, i1 } %49, 1
  %51 = extractvalue { i64, i1 } %49, 0
  %52 = select i1 %50, i64 %48, i64 %51, !prof !2
  br label %62

53:                                               ; preds = %41
  %54 = add i64 %43, -9223372036854775807
  %55 = icmp ugt i64 %54, 1
  %56 = icmp eq i64 %43, %42
  %57 = or i1 %56, %55
  br i1 %57, label %62, label %58

58:                                               ; preds = %53
  %59 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #12
  %60 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #12
  %61 = load i64, i64* %12, align 8
  br label %62

62:                                               ; preds = %46, %53, %58
  %63 = phi i64 [ %43, %46 ], [ %43, %53 ], [ %61, %58 ]
  %64 = phi i64 [ %52, %46 ], [ %42, %53 ], [ %42, %58 ]
  %65 = getelementptr inbounds %class.PeriodicSamplingScheduler, %class.PeriodicSamplingScheduler* %0, i64 0, i32 1, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, -9223372036854775807
  %68 = icmp ult i64 %67, 2
  br i1 %68, label %76, label %69

69:                                               ; preds = %62
  %70 = icmp slt i64 %66, 0
  %71 = select i1 %70, i64 -9223372036854775808, i64 9223372036854775807
  %72 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %63, i64 %66) #12
  %73 = extractvalue { i64, i1 } %72, 1
  %74 = extractvalue { i64, i1 } %72, 0
  %75 = select i1 %73, i64 %71, i64 %74, !prof !2
  br label %84

76:                                               ; preds = %62
  %77 = add i64 %63, -9223372036854775807
  %78 = icmp ugt i64 %77, 1
  %79 = icmp eq i64 %63, %66
  %80 = or i1 %79, %78
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #12
  %83 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #12
  br label %84

84:                                               ; preds = %69, %76, %81
  %85 = phi i64 [ %75, %69 ], [ %66, %76 ], [ %66, %81 ]
  store i64 %85, i64* %12, align 8
  %86 = sub nsw i64 %64, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  ret i64 %86
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #12
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK25PeriodicSamplingScheduler10RandDoubleEv(%class.PeriodicSamplingScheduler* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = tail call double @_ZN4base10RandDoubleEv() #12
  ret double %2
}

declare double @_ZN4base10RandDoubleEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK25PeriodicSamplingScheduler3NowEv(%class.PeriodicSamplingScheduler* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #12
  ret i64 %2
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14ThreadProfilerD2Ev(%class.ThreadProfiler*) unnamed_addr #2 align 2 {
  %2 = load %class.ThreadProfiler*, %class.ThreadProfiler** @_ZN12_GLOBAL__N_122g_main_thread_instanceE, align 8
  %3 = icmp eq %class.ThreadProfiler* %2, %0
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  store %class.ThreadProfiler* null, %class.ThreadProfiler** @_ZN12_GLOBAL__N_122g_main_thread_instanceE, align 8
  br label %5

5:                                                ; preds = %4, %1
  %6 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 8, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %6) #12
  %7 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %class.PeriodicSamplingScheduler*, %class.PeriodicSamplingScheduler** %7, align 8
  store %class.PeriodicSamplingScheduler* null, %class.PeriodicSamplingScheduler** %7, align 8
  %9 = icmp eq %class.PeriodicSamplingScheduler* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = bitcast %class.PeriodicSamplingScheduler* %8 to void (%class.PeriodicSamplingScheduler*)***
  %12 = load void (%class.PeriodicSamplingScheduler*)**, void (%class.PeriodicSamplingScheduler*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.PeriodicSamplingScheduler*)*, void (%class.PeriodicSamplingScheduler*)** %12, i64 1
  %14 = load void (%class.PeriodicSamplingScheduler*)*, void (%class.PeriodicSamplingScheduler*)** %13, align 8
  tail call void %14(%class.PeriodicSamplingScheduler* nonnull %8) #12
  br label %15

15:                                               ; preds = %5, %10
  %16 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %17 = load %"class.base::StackSamplingProfiler"*, %"class.base::StackSamplingProfiler"** %16, align 8
  store %"class.base::StackSamplingProfiler"* null, %"class.base::StackSamplingProfiler"** %16, align 8
  %18 = icmp eq %"class.base::StackSamplingProfiler"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  tail call void @_ZN4base21StackSamplingProfilerD1Ev(%"class.base::StackSamplingProfiler"* nonnull %17) #12
  %20 = bitcast %"class.base::StackSamplingProfiler"* %17 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %23 = load %"class.base::StackSamplingProfiler"*, %"class.base::StackSamplingProfiler"** %22, align 8
  store %"class.base::StackSamplingProfiler"* null, %"class.base::StackSamplingProfiler"** %22, align 8
  %24 = icmp eq %"class.base::StackSamplingProfiler"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  tail call void @_ZN4base21StackSamplingProfilerD1Ev(%"class.base::StackSamplingProfiler"* nonnull %23) #12
  %26 = bitcast %"class.base::StackSamplingProfiler"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %21, %25
  %28 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %28) #12
  %29 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.ThreadProfiler::WorkIdRecorder"*, %"class.ThreadProfiler::WorkIdRecorder"** %29, align 8
  store %"class.ThreadProfiler::WorkIdRecorder"* null, %"class.ThreadProfiler::WorkIdRecorder"** %29, align 8
  %31 = icmp eq %"class.ThreadProfiler::WorkIdRecorder"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.ThreadProfiler::WorkIdRecorder"* %30 to void (%"class.ThreadProfiler::WorkIdRecorder"*)***
  %34 = load void (%"class.ThreadProfiler::WorkIdRecorder"*)**, void (%"class.ThreadProfiler::WorkIdRecorder"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.ThreadProfiler::WorkIdRecorder"*)*, void (%"class.ThreadProfiler::WorkIdRecorder"*)** %34, i64 1
  %36 = load void (%"class.ThreadProfiler::WorkIdRecorder"*)*, void (%"class.ThreadProfiler::WorkIdRecorder"*)** %35, align 8
  tail call void %36(%"class.ThreadProfiler::WorkIdRecorder"* nonnull %30) #12
  br label %37

37:                                               ; preds = %27, %32
  %38 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 2, i32 0
  %39 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %38, align 8
  %40 = icmp eq %"class.base::SingleThreadTaskRunner"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %39, i64 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %42, i64 -2
  %48 = bitcast %"class.base::RefCountedThreadSafe"* %47 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %48) #12
  br label %49

49:                                               ; preds = %37, %41, %46
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %class.ThreadProfiler* @_ZN14ThreadProfiler26CreateAndStartOnMainThreadEv() local_unnamed_addr #2 align 2 {
  %1 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %2 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches14kSingleProcessE, i64 0, i64 0)) #12
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches13kInProcessGPUE, i64 0, i64 0)) #12
  br label %5

5:                                                ; preds = %3, %0
  %6 = tail call i8* @_Znwm(i64 72) #11
  %7 = bitcast i8* %6 to %class.ThreadProfiler*
  tail call void @_ZN14ThreadProfilerC2EN7metrics22CallStackProfileParams6ThreadE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%class.ThreadProfiler* nonnull %7, i32 1, %"class.base::SingleThreadTaskRunner"* null)
  %8 = load %class.ThreadProfiler*, %class.ThreadProfiler** @_ZN12_GLOBAL__N_122g_main_thread_instanceE, align 8
  %9 = icmp eq %class.ThreadProfiler* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %5
  store i8* %6, i8** bitcast (%class.ThreadProfiler** @_ZN12_GLOBAL__N_122g_main_thread_instanceE to i8**), align 8
  br label %11

11:                                               ; preds = %10, %5
  ret %class.ThreadProfiler* %7
}

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #5

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14ThreadProfiler23SetMainThreadTaskRunnerE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #2 align 2 {
  %2 = load %class.ThreadProfiler*, %class.ThreadProfiler** @_ZN12_GLOBAL__N_122g_main_thread_instanceE, align 8
  %3 = icmp eq %"class.base::SingleThreadTaskRunner"* %0, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 1 monotonic
  br label %7

7:                                                ; preds = %1, %4
  %8 = tail call %class.ThreadProfilerConfiguration* @_ZN27ThreadProfilerConfiguration3GetEv() #12
  %9 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %2, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = tail call zeroext i1 @_ZNK27ThreadProfilerConfiguration43IsProfilerEnabledForCurrentProcessAndThreadEN7metrics22CallStackProfileParams6ThreadE(%class.ThreadProfilerConfiguration* %8, i32 %10) #12
  br i1 %11, label %12, label %32

12:                                               ; preds = %7
  br i1 %3, label %16, label %13

13:                                               ; preds = %12
  %14 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  br label %16

16:                                               ; preds = %13, %12
  %17 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %2, i64 0, i32 2
  %18 = ptrtoint %"class.base::SingleThreadTaskRunner"* %0 to i64
  %19 = bitcast %class.scoped_refptr* %17 to i64*
  %20 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %17, i64 0, i32 0
  %21 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %20, align 8
  store i64 %18, i64* %19, align 8
  %22 = icmp eq %"class.base::SingleThreadTaskRunner"* %21, null
  br i1 %22, label %31, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %21, i64 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 -2
  %30 = bitcast %"class.base::RefCountedThreadSafe"* %29 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %30) #12
  br label %31

31:                                               ; preds = %28, %23, %16
  tail call void @_ZN14ThreadProfiler30ScheduleNextPeriodicCollectionEv(%class.ThreadProfiler* %2) #12
  br label %32

32:                                               ; preds = %31, %7
  br i1 %3, label %47, label %33

33:                                               ; preds = %32
  %34 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %0, i64 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw sub i32* %35, i32 1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %34, i64 -2
  %40 = bitcast %"class.base::RefCountedThreadSafe"* %39 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %40) #12
  br label %41

41:                                               ; preds = %33, %38
  %42 = atomicrmw sub i32* %35, i32 1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %34, i64 -2
  %46 = bitcast %"class.base::RefCountedThreadSafe"* %45 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %46) #12
  br label %47

47:                                               ; preds = %32, %41, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14ThreadProfiler27SetMainThreadTaskRunnerImplE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%class.ThreadProfiler*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #2 align 2 {
  %3 = tail call %class.ThreadProfilerConfiguration* @_ZN27ThreadProfilerConfiguration3GetEv() #12
  %4 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = tail call zeroext i1 @_ZNK27ThreadProfilerConfiguration43IsProfilerEnabledForCurrentProcessAndThreadEN7metrics22CallStackProfileParams6ThreadE(%class.ThreadProfilerConfiguration* %3, i32 %5) #12
  br i1 %6, label %7, label %28

7:                                                ; preds = %2
  %8 = icmp eq %"class.base::SingleThreadTaskRunner"* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %7, %9
  %13 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 2
  %14 = ptrtoint %"class.base::SingleThreadTaskRunner"* %1 to i64
  %15 = bitcast %class.scoped_refptr* %13 to i64*
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %13, i64 0, i32 0
  %17 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.base::SingleThreadTaskRunner"* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %17, i64 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe"* %25 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %26) #12
  br label %27

27:                                               ; preds = %12, %19, %24
  tail call void @_ZN14ThreadProfiler30ScheduleNextPeriodicCollectionEv(%class.ThreadProfiler* %0)
  br label %28

28:                                               ; preds = %2, %27
  %29 = icmp eq %"class.base::SingleThreadTaskRunner"* %1, null
  br i1 %29, label %38, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %1, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw sub i32* %32, i32 1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %31, i64 -2
  %37 = bitcast %"class.base::RefCountedThreadSafe"* %36 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %37) #12
  br label %38

38:                                               ; preds = %28, %30, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14ThreadProfiler21SetAuxUnwinderFactoryERKN4base17RepeatingCallbackIFNSt3__110unique_ptrINS0_8UnwinderENS2_14default_deleteIS4_EEEEvEEE(%class.ThreadProfiler*, %"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = tail call %class.ThreadProfilerConfiguration* @_ZN27ThreadProfilerConfiguration3GetEv() #12
  %4 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = tail call zeroext i1 @_ZNK27ThreadProfilerConfiguration43IsProfilerEnabledForCurrentProcessAndThreadEN7metrics22CallStackProfileParams6ThreadE(%class.ThreadProfilerConfiguration* %3, i32 %5) #12
  br i1 %6, label %7, label %29

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  %11 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %9, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %10) #12
  %12 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %13 = load %"class.base::StackSamplingProfiler"*, %"class.base::StackSamplingProfiler"** %12, align 8
  %14 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %15, i64 0, i32 1
  %17 = bitcast void ()** %16 to %"class.base::Unwinder"* (%"class.base::internal::BindStateBase"*)**
  %18 = load %"class.base::Unwinder"* (%"class.base::internal::BindStateBase"*)*, %"class.base::Unwinder"* (%"class.base::internal::BindStateBase"*)** %17, align 8
  %19 = tail call %"class.base::Unwinder"* %18(%"class.base::internal::BindStateBase"* %15) #12
  tail call void @_ZN4base21StackSamplingProfiler14AddAuxUnwinderENSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEE(%"class.base::StackSamplingProfiler"* %13, %"class.base::Unwinder"* %19) #12
  %20 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %21 = load %"class.base::StackSamplingProfiler"*, %"class.base::StackSamplingProfiler"** %20, align 8
  %22 = icmp eq %"class.base::StackSamplingProfiler"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %7
  %24 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %14, align 8
  %25 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %24, i64 0, i32 1
  %26 = bitcast void ()** %25 to %"class.base::Unwinder"* (%"class.base::internal::BindStateBase"*)**
  %27 = load %"class.base::Unwinder"* (%"class.base::internal::BindStateBase"*)*, %"class.base::Unwinder"* (%"class.base::internal::BindStateBase"*)** %26, align 8
  %28 = tail call %"class.base::Unwinder"* %27(%"class.base::internal::BindStateBase"* %24) #12
  tail call void @_ZN4base21StackSamplingProfiler14AddAuxUnwinderENSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEE(%"class.base::StackSamplingProfiler"* nonnull %21, %"class.base::Unwinder"* %28) #12
  br label %29

29:                                               ; preds = %7, %2, %23
  ret void
}

declare %class.ThreadProfilerConfiguration* @_ZN27ThreadProfilerConfiguration3GetEv() local_unnamed_addr #5

declare zeroext i1 @_ZNK27ThreadProfilerConfiguration43IsProfilerEnabledForCurrentProcessAndThreadEN7metrics22CallStackProfileParams6ThreadE(%class.ThreadProfilerConfiguration*, i32) local_unnamed_addr #5

declare void @_ZN4base21StackSamplingProfiler14AddAuxUnwinderENSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEE(%"class.base::StackSamplingProfiler"*, %"class.base::Unwinder"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14ThreadProfiler18StartOnChildThreadEN7metrics22CallStackProfileParams6ThreadE(i32) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.base::internal::SequenceLocalStorageMap::ValueDestructorPair", align 8
  %3 = alloca %"class.base::internal::SequenceLocalStorageMap::ValueDestructorPair", align 8
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN14ThreadProfiler18StartOnChildThreadEN7metrics22CallStackProfileParams6ThreadEE44child_thread_profiler_sequence_local_storage to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %11, !prof !3

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN14ThreadProfiler18StartOnChildThreadEN7metrics22CallStackProfileParams6ThreadEE44child_thread_profiler_sequence_local_storage) #12
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @_ZN4base8internal37GetNextSequenceLocalStorageSlotNumberEv() #12
  store i32 %10, i32* bitcast (%"class.base::NoDestructor"* @_ZZN14ThreadProfiler18StartOnChildThreadEN7metrics22CallStackProfileParams6ThreadEE44child_thread_profiler_sequence_local_storage to i32*), align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN14ThreadProfiler18StartOnChildThreadEN7metrics22CallStackProfileParams6ThreadEE44child_thread_profiler_sequence_local_storage) #12
  br label %11

11:                                               ; preds = %6, %9, %1
  %12 = tail call %class.ThreadProfilerConfiguration* @_ZN27ThreadProfilerConfiguration3GetEv() #12
  %13 = tail call zeroext i1 @_ZNK27ThreadProfilerConfiguration43IsProfilerEnabledForCurrentProcessAndThreadEN7metrics22CallStackProfileParams6ThreadE(%class.ThreadProfilerConfiguration* %12, i32 %0) #12
  br i1 %13, label %14, label %32

14:                                               ; preds = %11
  %15 = tail call i8* @_Znwm(i64 72) #11
  %16 = bitcast i8* %15 to %class.ThreadProfiler*
  %17 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #12
  %18 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %17, i64 0, i32 0
  %19 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %18, align 8
  %20 = icmp eq %"class.base::SingleThreadTaskRunner"* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  br label %24

24:                                               ; preds = %14, %21
  tail call void @_ZN14ThreadProfilerC2EN7metrics22CallStackProfileParams6ThreadE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%class.ThreadProfiler* nonnull %16, i32 %0, %"class.base::SingleThreadTaskRunner"* %19)
  %25 = ptrtoint i8* %15 to i64
  %26 = tail call i8* @_Znwm(i64 8) #11
  %27 = bitcast i8* %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.base::internal::SequenceLocalStorageMap::ValueDestructorPair"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #12
  %29 = bitcast %"class.base::internal::SequenceLocalStorageMap::ValueDestructorPair"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false) #12
  call void @_ZN4base8internal23SequenceLocalStorageMap19ValueDestructorPairC1EPvPFvS3_E(%"class.base::internal::SequenceLocalStorageMap::ValueDestructorPair"* nonnull %2, i8* nonnull %26, void (i8*)* nonnull @_ZZN4base24SequenceLocalStorageSlotINSt3__110unique_ptrI14ThreadProfilerNS1_14default_deleteIS3_EEEENS4_IS6_EEE5AdoptEPS6_ENUlPvE_8__invokeESA_) #12
  %30 = call dereferenceable(24) %"class.base::internal::SequenceLocalStorageMap"* @_ZN4base8internal23SequenceLocalStorageMap19GetForCurrentThreadEv() #12
  %31 = load i32, i32* bitcast (%"class.base::NoDestructor"* @_ZZN14ThreadProfiler18StartOnChildThreadEN7metrics22CallStackProfileParams6ThreadEE44child_thread_profiler_sequence_local_storage to i32*), align 4
  call void @_ZN4base8internal23SequenceLocalStorageMap19ValueDestructorPairC1EOS2_(%"class.base::internal::SequenceLocalStorageMap::ValueDestructorPair"* nonnull %3, %"class.base::internal::SequenceLocalStorageMap::ValueDestructorPair"* nonnull dereferenceable(16) %2) #12
  call void @_ZN4base8internal23SequenceLocalStorageMap3SetEiNS1_19ValueDestructorPairE(%"class.base::internal::SequenceLocalStorageMap"* %30, i32 %31, %"class.base::internal::SequenceLocalStorageMap::ValueDestructorPair"* nonnull %3) #12
  call void @_ZN4base8internal23SequenceLocalStorageMap19ValueDestructorPairD1Ev(%"class.base::internal::SequenceLocalStorageMap::ValueDestructorPair"* nonnull %3) #12
  call void @_ZN4base8internal23SequenceLocalStorageMap19ValueDestructorPairD1Ev(%"class.base::internal::SequenceLocalStorageMap::ValueDestructorPair"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #12
  br label %32

32:                                               ; preds = %11, %24
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

declare dereferenceable(8) %class.scoped_refptr* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14ThreadProfiler33SetBrowserProcessReceiverCallbackERKN4base17RepeatingCallbackIFvNS0_9TimeTicksEN7metrics14SampledProfileEEEE(%"class.base::RepeatingCallback.98"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZN7metrics23CallStackProfileBuilder33SetBrowserProcessReceiverCallbackERKN4base17RepeatingCallbackIFvNS1_9TimeTicksENS_14SampledProfileEEEE(%"class.base::RepeatingCallback.98"* %0) #12
  ret void
}

declare void @_ZN7metrics23CallStackProfileBuilder33SetBrowserProcessReceiverCallbackERKN4base17RepeatingCallbackIFvNS1_9TimeTicksENS_14SampledProfileEEEE(%"class.base::RepeatingCallback.98"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14ThreadProfiler27SetCollectorForChildProcessEN4mojo13PendingRemoteIN7metrics5mojom25CallStackProfileCollectorEEE(%"class.mojo::PendingRemote"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.mojo::PendingRemote", align 4
  %3 = tail call %class.ThreadProfilerConfiguration* @_ZN27ThreadProfilerConfiguration3GetEv() #12
  %4 = tail call zeroext i1 @_ZNK27ThreadProfilerConfiguration34IsProfilerEnabledForCurrentProcessEv(%class.ThreadProfilerConfiguration* %3) #12
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %0, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %6, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %7) #12
  call void @_ZN7metrics23CallStackProfileBuilder40SetParentProfileCollectorForChildProcessEN4mojo13PendingRemoteINS_5mojom25CallStackProfileCollectorEEE(%"class.mojo::PendingRemote"* nonnull %2) #12
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %6) #12
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

declare zeroext i1 @_ZNK27ThreadProfilerConfiguration34IsProfilerEnabledForCurrentProcessEv(%class.ThreadProfilerConfiguration*) local_unnamed_addr #5

declare void @_ZN7metrics23CallStackProfileBuilder40SetParentProfileCollectorForChildProcessEN4mojo13PendingRemoteINS_5mojom25CallStackProfileCollectorEEE(%"class.mojo::PendingRemote"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14ThreadProfilerC2EN7metrics22CallStackProfileParams6ThreadE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%class.ThreadProfiler*, i32, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #2 align 2 {
  %4 = alloca %"class.base::OnceCallback.212", align 8
  %5 = alloca %"class.base::RepeatingCallback.213", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"struct.base::StackSamplingProfiler::SamplingParams", align 8
  %9 = alloca %"struct.metrics::CallStackProfileParams", align 4
  %10 = alloca %"class.base::OnceCallback.212", align 8
  %11 = alloca %"class.base::RepeatingCallback.213", align 8
  %12 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 0
  %13 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %14 = tail call i32 @_Z23GetProfileParamsProcessRKN4base11CommandLineE(%"class.base::CommandLine"* dereferenceable(56) %13) #12
  store i32 %14, i32* %12, align 8
  %15 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 1
  store i32 %1, i32* %15, align 4
  %16 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 2, i32 0
  store %"class.base::SingleThreadTaskRunner"* %2, %"class.base::SingleThreadTaskRunner"** %16, align 8
  %17 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic
  br label %21

21:                                               ; preds = %3, %18
  %22 = tail call %"class.base::WorkIdProvider"* @_ZN4base14WorkIdProvider19GetForCurrentThreadEv() #12
  %23 = ptrtoint %"class.base::WorkIdProvider"* %22 to i64
  %24 = tail call i8* @_Znwm(i64 16) #11
  %25 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN14ThreadProfiler14WorkIdRecorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %23, i64* %27, align 8
  %28 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = bitcast %"class.ThreadProfiler::WorkIdRecorder"** %28 to i8**
  store i8* %24, i8** %29, align 8
  %30 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 5
  %32 = bitcast %"class.std::__1::unique_ptr.9"* %31 to i64*
  %33 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 7
  %34 = bitcast %"class.std::__1::unique_ptr.32"* %33 to i64*
  %35 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 8, i32 0
  %36 = ptrtoint %class.ThreadProfiler* %0 to i64
  %37 = bitcast %"class.base::internal::BindStateBase"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 32, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %35, i64 %36) #12
  %38 = tail call %class.ThreadProfilerConfiguration* @_ZN27ThreadProfilerConfiguration3GetEv() #12
  %39 = load i32, i32* %15, align 4
  %40 = tail call zeroext i1 @_ZNK27ThreadProfilerConfiguration43IsProfilerEnabledForCurrentProcessAndThreadEN7metrics22CallStackProfileParams6ThreadE(%class.ThreadProfilerConfiguration* %38, i32 %39) #12
  br i1 %40, label %41, label %190

41:                                               ; preds = %21
  %42 = bitcast %"struct.base::StackSamplingProfiler::SamplingParams"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 24, i1 false)
  %43 = tail call %class.ThreadProfilerConfiguration* @_ZN27ThreadProfilerConfiguration3GetEv() #12
  call void @_ZNK27ThreadProfilerConfiguration17GetSamplingParamsEv(%"struct.base::StackSamplingProfiler::SamplingParams"* nonnull sret %8, %class.ThreadProfilerConfiguration* %43) #12
  %44 = call { i32, i64 } @_ZN4base37GetSamplingProfilerCurrentThreadTokenEv() #12
  %45 = extractvalue { i32, i64 } %44, 0
  %46 = extractvalue { i32, i64 } %44, 1
  %47 = bitcast %"struct.metrics::CallStackProfileParams"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %47) #12
  %48 = load i32, i32* %12, align 8
  %49 = getelementptr inbounds %"struct.metrics::CallStackProfileParams", %"struct.metrics::CallStackProfileParams"* %9, i64 0, i32 0
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds %"struct.metrics::CallStackProfileParams", %"struct.metrics::CallStackProfileParams"* %9, i64 0, i32 1
  store i32 %1, i32* %50, align 4
  %51 = getelementptr inbounds %"struct.metrics::CallStackProfileParams", %"struct.metrics::CallStackProfileParams"* %9, i64 0, i32 2
  store i32 1, i32* %51, align 4
  %52 = bitcast %"class.ThreadProfiler::WorkIdRecorder"** %28 to %"class.metrics::WorkIdRecorder"**
  %53 = load %"class.metrics::WorkIdRecorder"*, %"class.metrics::WorkIdRecorder"** %52, align 8
  %54 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = call i8* @_Znwm(i64 2128) #11
  %56 = bitcast i8* %55 to %"class.metrics::CallStackProfileBuilder"*
  %57 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %57, align 8
  call void @_ZN7metrics23CallStackProfileBuilderC1ERKNS_22CallStackProfileParamsEPKNS_14WorkIdRecorderEN4base12OnceCallbackIFvvEEE(%"class.metrics::CallStackProfileBuilder"* nonnull %56, %"struct.metrics::CallStackProfileParams"* nonnull dereferenceable(12) %9, %"class.metrics::WorkIdRecorder"* %53, %"class.base::OnceCallback"* nonnull %6) #12
  %58 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %58) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  %59 = bitcast %"class.base::OnceCallback.212"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #12
  %60 = getelementptr inbounds %"class.base::OnceCallback.212", %"class.base::OnceCallback.212"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %60, align 8, !alias.scope !4
  %61 = bitcast %"class.base::RepeatingCallback.213"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #12
  %62 = load i32, i32* %12, align 8
  %63 = icmp eq i32 %62, 2
  br i1 %63, label %66, label %64

64:                                               ; preds = %41
  %65 = getelementptr inbounds %"class.base::RepeatingCallback.213", %"class.base::RepeatingCallback.213"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8, !alias.scope !7
  br label %83

66:                                               ; preds = %41
  %67 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE20process_backgrounded to i8*) acquire, align 8, !noalias !7
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %74, !prof !3

69:                                               ; preds = %66
  %70 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE20process_backgrounded) #12, !noalias !7
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %69
  call void @_ZN4base14SampleMetadataC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::SampleMetadata"* nonnull @_ZZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE20process_backgrounded, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i64 19) #12, !noalias !7
  %73 = call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"class.base::SampleMetadata"* @_ZZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE20process_backgrounded to i8*)) #12, !noalias !7
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE20process_backgrounded) #12, !noalias !7
  br label %74

74:                                               ; preds = %72, %69, %66
  %75 = call i8* @_Znwm(i64 48) #11, !noalias !10
  %76 = bitcast i8* %75 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %76, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE3$_0JNS_14SampleMetadataEEEEFvvEE3RunEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE3$_0JNS_14SampleMetadataEEE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !10
  %77 = getelementptr inbounds i8, i8* %75, i64 40
  %78 = bitcast i8* %77 to i64*
  %79 = load i64, i64* getelementptr inbounds (%"class.base::SampleMetadata", %"class.base::SampleMetadata"* @_ZZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE20process_backgrounded, i64 0, i32 0), align 8, !noalias !10
  store i64 %79, i64* %78, align 8, !noalias !10
  %80 = bitcast %"class.base::RepeatingCallback.213"* %11 to i8**
  store i8* %75, i8** %80, align 8, !alias.scope !10
  %81 = bitcast %"class.base::OnceCallback.212"* %10 to i64*
  %82 = load i64, i64* %81, align 8
  br label %83

83:                                               ; preds = %64, %74
  %84 = phi i64 [ 0, %64 ], [ %82, %74 ]
  %85 = bitcast %"class.base::OnceCallback.212"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85)
  %86 = bitcast %"class.base::RepeatingCallback.213"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86)
  %87 = call i8* @_Znwm(i64 80) #11
  %88 = bitcast i8* %87 to %"class.base::StackSamplingProfiler"*
  %89 = bitcast i8* %55 to %"class.base::ProfileBuilder"*
  %90 = bitcast %"class.base::OnceCallback.212"* %4 to i64*
  store i64 %84, i64* %90, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %60, align 8
  %91 = getelementptr inbounds %"class.base::RepeatingCallback.213", %"class.base::RepeatingCallback.213"* %5, i64 0, i32 0
  %92 = getelementptr inbounds %"class.base::RepeatingCallback.213", %"class.base::RepeatingCallback.213"* %11, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %91, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %92) #12
  call void @_ZN4base21StackSamplingProfilerC1ENS_27SamplingProfilerThreadTokenERKNS0_14SamplingParamsENSt3__110unique_ptrINS_14ProfileBuilderENS5_14default_deleteIS7_EEEENS_12OnceCallbackIFNS5_6vectorINS6_INS_8UnwinderENS8_ISD_EEEENS5_9allocatorISF_EEEEvEEENS_17RepeatingCallbackIFvvEEEPNS_24StackSamplerTestDelegateE(%"class.base::StackSamplingProfiler"* nonnull %88, i32 %45, i64 %46, %"struct.base::StackSamplingProfiler::SamplingParams"* nonnull dereferenceable(24) %8, %"class.base::ProfileBuilder"* nonnull %89, %"class.base::OnceCallback.212"* nonnull %4, %"class.base::RepeatingCallback.213"* nonnull %5, %"class.base::StackSamplerTestDelegate"* null) #12
  %93 = getelementptr inbounds %"class.base::RepeatingCallback.213", %"class.base::RepeatingCallback.213"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %93) #12
  %94 = getelementptr inbounds %"class.base::OnceCallback.212", %"class.base::OnceCallback.212"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %94) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86)
  %95 = ptrtoint i8* %87 to i64
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %31, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.base::StackSamplingProfiler"*, %"class.base::StackSamplingProfiler"** %96, align 8
  store i64 %95, i64* %32, align 8
  %98 = icmp eq %"class.base::StackSamplingProfiler"* %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %83
  call void @_ZN4base21StackSamplingProfilerD1Ev(%"class.base::StackSamplingProfiler"* nonnull %97) #12
  %100 = bitcast %"class.base::StackSamplingProfiler"* %97 to i8*
  call void @_ZdlPv(i8* %100) #11
  br label %101

101:                                              ; preds = %83, %99
  %102 = getelementptr inbounds %"class.base::RepeatingCallback.213", %"class.base::RepeatingCallback.213"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %102) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #12
  %103 = getelementptr inbounds %"class.base::OnceCallback.212", %"class.base::OnceCallback.212"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %103) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %47) #12
  %104 = load %"class.base::StackSamplingProfiler"*, %"class.base::StackSamplingProfiler"** %96, align 8
  call void @_ZN4base21StackSamplingProfiler5StartEv(%"class.base::StackSamplingProfiler"* %104) #12
  %105 = call i64 @_ZN4base9TimeTicks3NowEv() #12
  %106 = getelementptr inbounds %"struct.base::StackSamplingProfiler::SamplingParams", %"struct.base::StackSamplingProfiler::SamplingParams"* %8, i64 0, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds %"struct.base::StackSamplingProfiler::SamplingParams", %"struct.base::StackSamplingProfiler::SamplingParams"* %8, i64 0, i32 2, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = sext i32 %107 to i64
  %111 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %109, i64 %110) #12
  %112 = extractvalue { i64, i1 } %111, 1
  %113 = extractvalue { i64, i1 } %111, 0
  br i1 %112, label %114, label %120

114:                                              ; preds = %101
  %115 = lshr i64 %109, 63
  %116 = trunc i64 %115 to i32
  %117 = lshr i32 %107, 31
  %118 = icmp eq i32 %117, %116
  %119 = select i1 %118, i64 9223372036854775807, i64 -9223372036854775808
  br label %120

120:                                              ; preds = %101, %114
  %121 = phi i64 [ %113, %101 ], [ %119, %114 ]
  %122 = add i64 %121, -9223372036854775807
  %123 = icmp ult i64 %122, 2
  br i1 %123, label %131, label %124

124:                                              ; preds = %120
  %125 = icmp slt i64 %121, 0
  %126 = select i1 %125, i64 -9223372036854775808, i64 9223372036854775807
  %127 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %105, i64 %121) #12
  %128 = extractvalue { i64, i1 } %127, 1
  %129 = extractvalue { i64, i1 } %127, 0
  %130 = select i1 %128, i64 %126, i64 %129, !prof !2
  br label %144

131:                                              ; preds = %120
  %132 = add i64 %105, -9223372036854775807
  %133 = icmp ugt i64 %132, 1
  %134 = icmp eq i64 %105, %121
  %135 = or i1 %133, %134
  br i1 %135, label %144, label %136

136:                                              ; preds = %131
  %137 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #12
  %138 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #12
  %139 = load i32, i32* %106, align 8
  %140 = load i64, i64* %108, align 8
  %141 = sext i32 %139 to i64
  %142 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %140, i64 %141) #12
  %143 = extractvalue { i64, i1 } %142, 0
  br label %144

144:                                              ; preds = %124, %131, %136
  %145 = phi i64 [ %113, %124 ], [ %113, %131 ], [ %143, %136 ]
  %146 = phi { i64, i1 } [ %111, %124 ], [ %111, %131 ], [ %142, %136 ]
  %147 = phi i64 [ %109, %124 ], [ %109, %131 ], [ %140, %136 ]
  %148 = phi i32 [ %107, %124 ], [ %107, %131 ], [ %139, %136 ]
  %149 = phi i64 [ %130, %124 ], [ %121, %131 ], [ %121, %136 ]
  %150 = extractvalue { i64, i1 } %146, 1
  br i1 %150, label %151, label %157

151:                                              ; preds = %144
  %152 = lshr i64 %147, 63
  %153 = trunc i64 %152 to i32
  %154 = lshr i32 %148, 31
  %155 = icmp eq i32 %154, %153
  %156 = select i1 %155, i64 9223372036854775807, i64 -9223372036854775808
  br label %157

157:                                              ; preds = %144, %151
  %158 = phi i64 [ %145, %144 ], [ %156, %151 ]
  %159 = call i8* @_Znwm(i64 32) #11
  %160 = bitcast i8* %159 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV25PeriodicSamplingScheduler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %160, align 8
  %161 = sitofp i64 %158 to double
  %162 = fdiv double %161, 2.000000e-02
  %163 = fcmp oge double %162, 0xC3E0000000000000
  %164 = fcmp ole double %162, 0x43DFFFFFFFFFFFFF
  %165 = and i1 %164, %163
  %166 = fptosi double %162 to i64
  %167 = icmp sgt i64 %158, -1
  %168 = select i1 %167, i64 9223372036854775807, i64 -9223372036854775808
  %169 = select i1 %165, i64 %166, i64 %168
  %170 = getelementptr inbounds i8, i8* %159, i64 8
  %171 = bitcast i8* %170 to i64*
  store i64 %169, i64* %171, align 8
  %172 = getelementptr inbounds i8, i8* %159, i64 16
  %173 = bitcast i8* %172 to i64*
  store i64 %158, i64* %173, align 8
  %174 = getelementptr inbounds i8, i8* %159, i64 24
  %175 = bitcast i8* %174 to i64*
  store i64 %149, i64* %175, align 8
  %176 = ptrtoint i8* %159 to i64
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.32"* %33, i64 0, i32 0, i32 0, i32 0
  %178 = load %class.PeriodicSamplingScheduler*, %class.PeriodicSamplingScheduler** %177, align 8
  store i64 %176, i64* %34, align 8
  %179 = icmp eq %class.PeriodicSamplingScheduler* %178, null
  br i1 %179, label %185, label %180

180:                                              ; preds = %157
  %181 = bitcast %class.PeriodicSamplingScheduler* %178 to void (%class.PeriodicSamplingScheduler*)***
  %182 = load void (%class.PeriodicSamplingScheduler*)**, void (%class.PeriodicSamplingScheduler*)*** %181, align 8
  %183 = getelementptr inbounds void (%class.PeriodicSamplingScheduler*)*, void (%class.PeriodicSamplingScheduler*)** %182, i64 1
  %184 = load void (%class.PeriodicSamplingScheduler*)*, void (%class.PeriodicSamplingScheduler*)** %183, align 8
  call void %184(%class.PeriodicSamplingScheduler* nonnull %178) #12
  br label %185

185:                                              ; preds = %180, %157
  %186 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %16, align 8
  %187 = icmp eq %"class.base::SingleThreadTaskRunner"* %186, null
  br i1 %187, label %189, label %188

188:                                              ; preds = %185
  call void @_ZN14ThreadProfiler30ScheduleNextPeriodicCollectionEv(%class.ThreadProfiler* %0)
  br label %189

189:                                              ; preds = %185, %188
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #12
  br label %190

190:                                              ; preds = %21, %189
  br i1 %17, label %199, label %191

191:                                              ; preds = %190
  %192 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %193 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %192, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = atomicrmw sub i32* %193, i32 1 acq_rel
  %195 = icmp eq i32 %194, 1
  br i1 %195, label %196, label %199

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %192, i64 -2
  %198 = bitcast %"class.base::RefCountedThreadSafe"* %197 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %198) #12
  br label %199

199:                                              ; preds = %190, %191, %196
  ret void
}

declare i32 @_Z23GetProfileParamsProcessRKN4base11CommandLineE(%"class.base::CommandLine"* dereferenceable(56)) local_unnamed_addr #5

declare %"class.base::WorkIdProvider"* @_ZN4base14WorkIdProvider19GetForCurrentThreadEv() local_unnamed_addr #5

declare void @_ZNK27ThreadProfilerConfiguration17GetSamplingParamsEv(%"struct.base::StackSamplingProfiler::SamplingParams"* sret, %class.ThreadProfilerConfiguration*) local_unnamed_addr #5

declare { i32, i64 } @_ZN4base37GetSamplingProfilerCurrentThreadTokenEv() local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

declare void @_ZN4base21StackSamplingProfiler5StartEv(%"class.base::StackSamplingProfiler"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14ThreadProfiler30ScheduleNextPeriodicCollectionEv(%class.ThreadProfiler*) #2 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::WeakPtr", align 8
  %6 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 2, i32 0
  %7 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %6, align 8
  %8 = bitcast %"class.base::SingleThreadTaskRunner"* %7 to %"class.base::TaskRunner"*
  %9 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 407) #12
  %10 = bitcast %"class.base::WeakPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12, !noalias !15
  %12 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 8, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %12) #12, !noalias !15
  %13 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 8, i32 0, i32 1
  %14 = load i64, i64* %13, align 8, !noalias !15
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %15, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %14) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12, !noalias !15
  %16 = call i8* @_Znwm(i64 64) #11, !noalias !18
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM14ThreadProfilerFvvEJNS_7WeakPtrIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM14ThreadProfilerFvvEJNS_7WeakPtrIS2_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM14ThreadProfilerFvvEJNS_7WeakPtrIS3_EEEEEEEbPKNS0_13BindStateBaseENS9_21CancellationQueryModeE) #12, !noalias !18
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.ThreadProfiler*)* @_ZN14ThreadProfiler31StartPeriodicSamplingCollectionEv to i64), i64 0>, <2 x i64>* %19, align 8, !noalias !18
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = bitcast i8* %20 to %"class.base::internal::WeakReference"*
  %22 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %21, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %22) #12, !noalias !18
  %23 = getelementptr inbounds i8, i8* %16, i64 56
  %24 = bitcast i8* %23 to i64*
  %25 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8, !noalias !18
  store i64 %26, i64* %24, align 8, !noalias !18
  %27 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %16, i8** %27, align 8, !alias.scope !18
  %28 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %29 = load %class.PeriodicSamplingScheduler*, %class.PeriodicSamplingScheduler** %28, align 8
  %30 = call i64 @_ZN25PeriodicSamplingScheduler23GetTimeToNextCollectionEv(%class.PeriodicSamplingScheduler* %29)
  %31 = bitcast %"class.base::SingleThreadTaskRunner"* %7 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %32 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %31, align 8
  %33 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %32, align 8
  %34 = call zeroext i1 %33(%"class.base::TaskRunner"* %8, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4, i64 %30) #12
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14ThreadProfiler29OnPeriodicCollectionCompletedE13scoped_refptrIN4base22SingleThreadTaskRunnerEENS1_7WeakPtrIS_EE(%"class.base::SingleThreadTaskRunner"*, %"class.base::WeakPtr"*) #2 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.base::SingleThreadTaskRunner"* %0 to %"class.base::TaskRunner"*
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 384) #12
  %7 = call i8* @_Znwm(i64 64) #11, !noalias !23
  %8 = bitcast i8* %7 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %8, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM14ThreadProfilerFvvEJNS_7WeakPtrIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM14ThreadProfilerFvvEJNS_7WeakPtrIS2_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM14ThreadProfilerFvvEJNS_7WeakPtrIS3_EEEEEEEbPKNS0_13BindStateBaseENS9_21CancellationQueryModeE) #12, !noalias !23
  %9 = getelementptr inbounds i8, i8* %7, i64 32
  %10 = bitcast i8* %9 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.ThreadProfiler*)* @_ZN14ThreadProfiler30ScheduleNextPeriodicCollectionEv to i64), i64 0>, <2 x i64>* %10, align 8, !noalias !23
  %11 = getelementptr inbounds i8, i8* %7, i64 48
  %12 = bitcast i8* %11 to %"class.base::internal::WeakReference"*
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %12, %"class.base::internal::WeakReference"* dereferenceable(8) %13) #12, !noalias !23
  %14 = getelementptr inbounds i8, i8* %7, i64 56
  %15 = bitcast i8* %14 to i64*
  %16 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8, !noalias !23
  store i64 %17, i64* %15, align 8, !noalias !23
  %18 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %7, i8** %18, align 8, !alias.scope !23
  %19 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %5, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #12
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  %21 = icmp eq %"class.base::SingleThreadTaskRunner"* %0, null
  br i1 %21, label %30, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %0, i64 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %23, i64 -2
  %29 = bitcast %"class.base::RefCountedThreadSafe"* %28 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %29) #12
  br label %30

30:                                               ; preds = %2, %22, %27
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14ThreadProfiler31StartPeriodicSamplingCollectionEv(%class.ThreadProfiler*) #2 align 2 {
  %2 = alloca %"class.base::OnceCallback.212", align 8
  %3 = alloca %"class.base::RepeatingCallback.213", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::internal::WeakReference", align 8
  %6 = alloca %"struct.base::StackSamplingProfiler::SamplingParams", align 8
  %7 = alloca %"struct.metrics::CallStackProfileParams", align 4
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::WeakPtr", align 8
  %10 = alloca %"class.base::OnceCallback.212", align 8
  %11 = alloca %"class.base::RepeatingCallback.213", align 8
  %12 = tail call { i32, i64 } @_ZN4base37GetSamplingProfilerCurrentThreadTokenEv() #12
  %13 = extractvalue { i32, i64 } %12, 0
  %14 = extractvalue { i32, i64 } %12, 1
  %15 = bitcast %"struct.base::StackSamplingProfiler::SamplingParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = tail call %class.ThreadProfilerConfiguration* @_ZN27ThreadProfilerConfiguration3GetEv() #12
  call void @_ZNK27ThreadProfilerConfiguration17GetSamplingParamsEv(%"struct.base::StackSamplingProfiler::SamplingParams"* nonnull sret %6, %class.ThreadProfilerConfiguration* %16) #12
  %17 = bitcast %"struct.metrics::CallStackProfileParams"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #12
  %18 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.metrics::CallStackProfileParams", %"struct.metrics::CallStackProfileParams"* %7, i64 0, i32 0
  store i32 %19, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.metrics::CallStackProfileParams", %"struct.metrics::CallStackProfileParams"* %7, i64 0, i32 1
  store i32 %21, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.metrics::CallStackProfileParams", %"struct.metrics::CallStackProfileParams"* %7, i64 0, i32 2
  store i32 4, i32* %24, align 4
  %25 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = bitcast %"class.ThreadProfiler::WorkIdRecorder"** %25 to %"class.metrics::WorkIdRecorder"**
  %27 = load %"class.metrics::WorkIdRecorder"*, %"class.metrics::WorkIdRecorder"** %26, align 8
  %28 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  %29 = bitcast %"class.base::WeakPtr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #12
  %30 = bitcast %"class.base::internal::WeakReference"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12, !noalias !28
  %31 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 8, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %5, %"class.base::internal::WeakReferenceOwner"* %31) #12, !noalias !28
  %32 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 8, i32 0, i32 1
  %33 = load i64, i64* %32, align 8, !noalias !28
  %34 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %34, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %5, i64 %33) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12, !noalias !28
  %35 = call i8* @_Znwm(i64 64) #11, !noalias !31
  %36 = bitcast i8* %35 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %36, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrI14ThreadProfilerEEEJS5_S8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFv13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrI14ThreadProfilerEEEJS4_S7_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !31
  %37 = getelementptr inbounds i8, i8* %35, i64 32
  %38 = bitcast i8* %37 to i64*
  store i64 ptrtoint (void (%"class.base::SingleThreadTaskRunner"*, %"class.base::WeakPtr"*)* @_ZN14ThreadProfiler29OnPeriodicCollectionCompletedE13scoped_refptrIN4base22SingleThreadTaskRunnerEENS1_7WeakPtrIS_EE to i64), i64* %38, align 8, !noalias !31
  %39 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 2, i32 0
  %40 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %39, align 8, !noalias !31
  %41 = getelementptr inbounds i8, i8* %35, i64 40
  %42 = bitcast i8* %41 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %40, %"class.base::SingleThreadTaskRunner"** %42, align 8, !noalias !31
  %43 = icmp eq %"class.base::SingleThreadTaskRunner"* %40, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %1
  %45 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %40, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic, !noalias !31
  br label %47

47:                                               ; preds = %1, %44
  %48 = getelementptr inbounds i8, i8* %35, i64 48
  %49 = bitcast i8* %48 to %"class.base::internal::WeakReference"*
  %50 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %49, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %50) #12, !noalias !31
  %51 = getelementptr inbounds i8, i8* %35, i64 56
  %52 = bitcast i8* %51 to i64*
  %53 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8, !noalias !31
  store i64 %54, i64* %52, align 8, !noalias !31
  %55 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55)
  %56 = call i8* @_Znwm(i64 2128) #11
  %57 = bitcast i8* %56 to %"class.metrics::CallStackProfileBuilder"*
  %58 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  %59 = ptrtoint i8* %35 to i64
  %60 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %59, i64* %60, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %58, align 8
  call void @_ZN7metrics23CallStackProfileBuilderC1ERKNS_22CallStackProfileParamsEPKNS_14WorkIdRecorderEN4base12OnceCallbackIFvvEEE(%"class.metrics::CallStackProfileBuilder"* nonnull %57, %"struct.metrics::CallStackProfileParams"* nonnull dereferenceable(12) %7, %"class.metrics::WorkIdRecorder"* %27, %"class.base::OnceCallback"* nonnull %4) #12
  %61 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55)
  %62 = bitcast %"class.base::OnceCallback.212"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #12
  %63 = getelementptr inbounds %"class.base::OnceCallback.212", %"class.base::OnceCallback.212"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %63, align 8, !alias.scope !36
  %64 = bitcast %"class.base::RepeatingCallback.213"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #12
  %65 = load i32, i32* %18, align 8
  %66 = icmp eq i32 %65, 2
  br i1 %66, label %69, label %67

67:                                               ; preds = %47
  %68 = getelementptr inbounds %"class.base::RepeatingCallback.213", %"class.base::RepeatingCallback.213"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %68, align 8, !alias.scope !39
  br label %86

69:                                               ; preds = %47
  %70 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE20process_backgrounded to i8*) acquire, align 8, !noalias !39
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %77, !prof !3

72:                                               ; preds = %69
  %73 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE20process_backgrounded) #12, !noalias !39
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  call void @_ZN4base14SampleMetadataC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::SampleMetadata"* nonnull @_ZZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE20process_backgrounded, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i64 19) #12, !noalias !39
  %76 = call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"class.base::SampleMetadata"* @_ZZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE20process_backgrounded to i8*)) #12, !noalias !39
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE20process_backgrounded) #12, !noalias !39
  br label %77

77:                                               ; preds = %75, %72, %69
  %78 = call i8* @_Znwm(i64 48) #11, !noalias !42
  %79 = bitcast i8* %78 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %79, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE3$_0JNS_14SampleMetadataEEEEFvvEE3RunEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE3$_0JNS_14SampleMetadataEEE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !42
  %80 = getelementptr inbounds i8, i8* %78, i64 40
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* getelementptr inbounds (%"class.base::SampleMetadata", %"class.base::SampleMetadata"* @_ZZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE20process_backgrounded, i64 0, i32 0), align 8, !noalias !42
  store i64 %82, i64* %81, align 8, !noalias !42
  %83 = bitcast %"class.base::RepeatingCallback.213"* %11 to i8**
  store i8* %78, i8** %83, align 8, !alias.scope !42
  %84 = bitcast %"class.base::OnceCallback.212"* %10 to i64*
  %85 = load i64, i64* %84, align 8
  br label %86

86:                                               ; preds = %67, %77
  %87 = phi i64 [ 0, %67 ], [ %85, %77 ]
  %88 = bitcast %"class.base::OnceCallback.212"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88)
  %89 = bitcast %"class.base::RepeatingCallback.213"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89)
  %90 = call i8* @_Znwm(i64 80) #11
  %91 = bitcast i8* %90 to %"class.base::StackSamplingProfiler"*
  %92 = bitcast i8* %56 to %"class.base::ProfileBuilder"*
  %93 = bitcast %"class.base::OnceCallback.212"* %2 to i64*
  store i64 %87, i64* %93, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %63, align 8
  %94 = getelementptr inbounds %"class.base::RepeatingCallback.213", %"class.base::RepeatingCallback.213"* %3, i64 0, i32 0
  %95 = getelementptr inbounds %"class.base::RepeatingCallback.213", %"class.base::RepeatingCallback.213"* %11, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %94, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %95) #12
  call void @_ZN4base21StackSamplingProfilerC1ENS_27SamplingProfilerThreadTokenERKNS0_14SamplingParamsENSt3__110unique_ptrINS_14ProfileBuilderENS5_14default_deleteIS7_EEEENS_12OnceCallbackIFNS5_6vectorINS6_INS_8UnwinderENS8_ISD_EEEENS5_9allocatorISF_EEEEvEEENS_17RepeatingCallbackIFvvEEEPNS_24StackSamplerTestDelegateE(%"class.base::StackSamplingProfiler"* nonnull %91, i32 %13, i64 %14, %"struct.base::StackSamplingProfiler::SamplingParams"* nonnull dereferenceable(24) %6, %"class.base::ProfileBuilder"* nonnull %92, %"class.base::OnceCallback.212"* nonnull %2, %"class.base::RepeatingCallback.213"* nonnull %3, %"class.base::StackSamplerTestDelegate"* null) #12
  %96 = getelementptr inbounds %"class.base::RepeatingCallback.213", %"class.base::RepeatingCallback.213"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %96) #12
  %97 = getelementptr inbounds %"class.base::OnceCallback.212", %"class.base::OnceCallback.212"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %97) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  %98 = ptrtoint i8* %90 to i64
  %99 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 6
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.base::StackSamplingProfiler"*, %"class.base::StackSamplingProfiler"** %100, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.9"* %99 to i64*
  store i64 %98, i64* %102, align 8
  %103 = icmp eq %"class.base::StackSamplingProfiler"* %101, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %86
  call void @_ZN4base21StackSamplingProfilerD1Ev(%"class.base::StackSamplingProfiler"* nonnull %101) #12
  %105 = bitcast %"class.base::StackSamplingProfiler"* %101 to i8*
  call void @_ZdlPv(i8* %105) #11
  br label %106

106:                                              ; preds = %86, %104
  %107 = getelementptr inbounds %"class.base::RepeatingCallback.213", %"class.base::RepeatingCallback.213"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %107) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #12
  %108 = getelementptr inbounds %"class.base::OnceCallback.212", %"class.base::OnceCallback.212"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %108) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #12
  %109 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %109) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  %110 = getelementptr inbounds %class.ThreadProfiler, %class.ThreadProfiler* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %111 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %110, align 8
  %112 = icmp eq %"class.base::internal::BindStateBase"* %111, null
  br i1 %112, label %119, label %113

113:                                              ; preds = %106
  %114 = load %"class.base::StackSamplingProfiler"*, %"class.base::StackSamplingProfiler"** %100, align 8
  %115 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %111, i64 0, i32 1
  %116 = bitcast void ()** %115 to %"class.base::Unwinder"* (%"class.base::internal::BindStateBase"*)**
  %117 = load %"class.base::Unwinder"* (%"class.base::internal::BindStateBase"*)*, %"class.base::Unwinder"* (%"class.base::internal::BindStateBase"*)** %116, align 8
  %118 = call %"class.base::Unwinder"* %117(%"class.base::internal::BindStateBase"* nonnull %111) #12
  call void @_ZN4base21StackSamplingProfiler14AddAuxUnwinderENSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEE(%"class.base::StackSamplingProfiler"* %114, %"class.base::Unwinder"* %118) #12
  br label %119

119:                                              ; preds = %106, %113
  %120 = load %"class.base::StackSamplingProfiler"*, %"class.base::StackSamplingProfiler"** %100, align 8
  call void @_ZN4base21StackSamplingProfiler5StartEv(%"class.base::StackSamplingProfiler"* %120) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #6

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #9

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #9

declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #6

declare void @_ZN4base14SampleMetadataC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::SampleMetadata"*, i8*, i64) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE3$_0JNS_14SampleMetadataEEEEFvvEE3RunEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture readonly) #2 align 2 {
  %2 = alloca %"class.base::Process", align 4
  %3 = alloca %"class.base::SampleMetadata", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.base::SampleMetadata"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.base::SampleMetadata", %"class.base::SampleMetadata"* %3, i64 0, i32 0
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.base::Process"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #12
  call void @_ZN4base7Process7CurrentEv(%"class.base::Process"* nonnull sret %2) #12
  %10 = call zeroext i1 @_ZNK4base7Process21IsProcessBackgroundedEv(%"class.base::Process"* nonnull %2) #12
  call void @_ZN4base7ProcessD1Ev(%"class.base::Process"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #12
  %11 = zext i1 %10 to i64
  call void @_ZN4base14SampleMetadata3SetEl(%"class.base::SampleMetadata"* nonnull %3, i64 %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret void
}

declare void @_ZN4base14SampleMetadata3SetEl(%"class.base::SampleMetadata"*, i64) local_unnamed_addr #5

declare void @_ZN4base7Process7CurrentEv(%"class.base::Process"* sret) local_unnamed_addr #5

declare zeroext i1 @_ZNK4base7Process21IsProcessBackgroundedEv(%"class.base::Process"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7ProcessD1Ev(%"class.base::Process"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE3$_0JNS_14SampleMetadataEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #2 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #9

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #5

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base21StackSamplingProfilerD1Ev(%"class.base::StackSamplingProfiler"*) unnamed_addr #6

declare i32 @_ZN4base8internal37GetNextSequenceLocalStorageSlotNumberEv() local_unnamed_addr #5

declare void @_ZN4base8internal23SequenceLocalStorageMap19ValueDestructorPairC1EPvPFvS3_E(%"class.base::internal::SequenceLocalStorageMap::ValueDestructorPair"*, i8*, void (i8*)*) unnamed_addr #5

declare dereferenceable(24) %"class.base::internal::SequenceLocalStorageMap"* @_ZN4base8internal23SequenceLocalStorageMap19GetForCurrentThreadEv() local_unnamed_addr #5

declare void @_ZN4base8internal23SequenceLocalStorageMap3SetEiNS1_19ValueDestructorPairE(%"class.base::internal::SequenceLocalStorageMap"*, i32, %"class.base::internal::SequenceLocalStorageMap::ValueDestructorPair"*) local_unnamed_addr #5

declare void @_ZN4base8internal23SequenceLocalStorageMap19ValueDestructorPairC1EOS2_(%"class.base::internal::SequenceLocalStorageMap::ValueDestructorPair"*, %"class.base::internal::SequenceLocalStorageMap::ValueDestructorPair"* dereferenceable(16)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal23SequenceLocalStorageMap19ValueDestructorPairD1Ev(%"class.base::internal::SequenceLocalStorageMap::ValueDestructorPair"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN4base24SequenceLocalStorageSlotINSt3__110unique_ptrI14ThreadProfilerNS1_14default_deleteIS3_EEEENS4_IS6_EEE5AdoptEPS6_ENUlPvE_8__invokeESA_(i8*) #10 comdat align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %class.ThreadProfiler**
  %5 = load %class.ThreadProfiler*, %class.ThreadProfiler** %4, align 8
  store %class.ThreadProfiler* null, %class.ThreadProfiler** %4, align 8
  %6 = icmp eq %class.ThreadProfiler* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  tail call void @_ZN14ThreadProfilerD2Ev(%class.ThreadProfiler* nonnull %5) #12
  %8 = bitcast %class.ThreadProfiler* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #11
  br label %9

9:                                                ; preds = %7, %3
  tail call void @_ZdlPv(i8* nonnull %0) #11
  br label %10

10:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7metrics14WorkIdRecorderD2Ev(%"class.metrics::WorkIdRecorder"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14ThreadProfiler14WorkIdRecorderD0Ev(%"class.ThreadProfiler::WorkIdRecorder"*) unnamed_addr #10 comdat align 2 {
  %2 = bitcast %"class.ThreadProfiler::WorkIdRecorder"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK14ThreadProfiler14WorkIdRecorder12RecordWorkIdEv(%"class.ThreadProfiler::WorkIdRecorder"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.ThreadProfiler::WorkIdRecorder", %"class.ThreadProfiler::WorkIdRecorder"* %0, i64 0, i32 1
  %3 = load %"class.base::WorkIdProvider"*, %"class.base::WorkIdProvider"** %2, align 8
  %4 = tail call i32 @_ZN4base14WorkIdProvider9GetWorkIdEv(%"class.base::WorkIdProvider"* %3) #12
  ret i32 %4
}

declare i32 @_ZN4base14WorkIdProvider9GetWorkIdEv(%"class.base::WorkIdProvider"*) local_unnamed_addr #5

declare void @_ZN7metrics23CallStackProfileBuilderC1ERKNS_22CallStackProfileParamsEPKNS_14WorkIdRecorderEN4base12OnceCallbackIFvvEEE(%"class.metrics::CallStackProfileBuilder"*, %"struct.metrics::CallStackProfileParams"* dereferenceable(12), %"class.metrics::WorkIdRecorder"*, %"class.base::OnceCallback"*) unnamed_addr #5

declare void @_ZN4base21StackSamplingProfilerC1ENS_27SamplingProfilerThreadTokenERKNS0_14SamplingParamsENSt3__110unique_ptrINS_14ProfileBuilderENS5_14default_deleteIS7_EEEENS_12OnceCallbackIFNS5_6vectorINS6_INS_8UnwinderENS8_ISD_EEEENS5_9allocatorISF_EEEEvEEENS_17RepeatingCallbackIFvvEEEPNS_24StackSamplerTestDelegateE(%"class.base::StackSamplingProfiler"*, i32, i64, %"struct.base::StackSamplingProfiler::SamplingParams"* dereferenceable(24), %"class.base::ProfileBuilder"*, %"class.base::OnceCallback.212"*, %"class.base::RepeatingCallback.213"*, %"class.base::StackSamplerTestDelegate"*) unnamed_addr #5

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM14ThreadProfilerFvvEJNS_7WeakPtrIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %class.ThreadProfiler**
  %10 = load %class.ThreadProfiler*, %class.ThreadProfiler** %9, align 8
  %11 = icmp eq %class.ThreadProfiler* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0)) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %class.ThreadProfiler*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%class.ThreadProfiler*)**
  %37 = load void (%class.ThreadProfiler*)*, void (%class.ThreadProfiler*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%class.ThreadProfiler*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%class.ThreadProfiler*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%class.ThreadProfiler* %28) #12
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM14ThreadProfilerFvvEJNS_7WeakPtrIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM14ThreadProfilerFvvEJNS_7WeakPtrIS3_EEEEEEEbPKNS0_13BindStateBaseENS9_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #2 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %class.ThreadProfiler**
  %9 = load %class.ThreadProfiler*, %class.ThreadProfiler** %8, align 8
  %10 = icmp ne %class.ThreadProfiler* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #12
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #5

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #5

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #5

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #6

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrI14ThreadProfilerEEEJS5_S8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = alloca %"class.base::WeakPtr", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::SingleThreadTaskRunner"*, %"class.base::WeakPtr"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast %"class.base::WeakPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = load void (%"class.base::SingleThreadTaskRunner"*, %"class.base::WeakPtr"*)*, void (%"class.base::SingleThreadTaskRunner"*, %"class.base::WeakPtr"*)** %4, align 8
  %8 = bitcast void ()** %5 to %"class.base::SingleThreadTaskRunner"**
  %9 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %8, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %8, align 8
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %12 = bitcast void ()** %11 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %10, %"class.base::internal::WeakReference"* dereferenceable(8) %12) #12
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %15 = bitcast void ()** %14 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  call void %7(%"class.base::SingleThreadTaskRunner"* %9, %"class.base::WeakPtr"* nonnull %2) #12
  %17 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFv13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrI14ThreadProfilerEEEJS4_S7_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #12
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::SingleThreadTaskRunner"**
  %8 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %7, align 8
  %9 = icmp eq %"class.base::SingleThreadTaskRunner"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %8, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %16 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %17) #12
  br label %18

18:                                               ; preds = %3, %10, %15
  %19 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %18, %1
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN12_GLOBAL__N_126CreateCoreUnwindersFactoryEv: argument 0"}
!6 = distinct !{!6, !"_ZN12_GLOBAL__N_126CreateCoreUnwindersFactoryEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessE: argument 0"}
!9 = distinct !{!9, !"_ZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessE"}
!10 = !{!11, !13, !8}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE3$_0JRKNS_14SampleMetadataEEEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE3$_0JRKNS_14SampleMetadataEEEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base13BindRepeatingIZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE3$_0JRKNS_14SampleMetadataEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!14 = distinct !{!14, !"_ZN4base13BindRepeatingIZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE3$_0JRKNS_14SampleMetadataEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4base14WeakPtrFactoryI14ThreadProfilerE10GetWeakPtrEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4base14WeakPtrFactoryI14ThreadProfilerE10GetWeakPtrEv"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM14ThreadProfilerFvvEJNS_7WeakPtrIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM14ThreadProfilerFvvEJNS_7WeakPtrIS3_EEEEEDcOT0_DpOT1_"}
!21 = distinct !{!21, !22, !"_ZN4base8BindOnceIM14ThreadProfilerFvvEJNS_7WeakPtrIS1_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8BindOnceIM14ThreadProfilerFvvEJNS_7WeakPtrIS1_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM14ThreadProfilerFvvEJRNS_7WeakPtrIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM14ThreadProfilerFvvEJRNS_7WeakPtrIS3_EEEEEDcOT0_DpOT1_"}
!26 = distinct !{!26, !27, !"_ZN4base8BindOnceIM14ThreadProfilerFvvEJRNS_7WeakPtrIS1_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!27 = distinct !{!27, !"_ZN4base8BindOnceIM14ThreadProfilerFvvEJRNS_7WeakPtrIS1_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK4base14WeakPtrFactoryI14ThreadProfilerE10GetWeakPtrEv: argument 0"}
!30 = distinct !{!30, !"_ZNK4base14WeakPtrFactoryI14ThreadProfilerE10GetWeakPtrEv"}
!31 = !{!32, !34}
!32 = distinct !{!32, !33, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrI14ThreadProfilerEEEJRS5_S8_EEEDcOT0_DpOT1_: argument 0"}
!33 = distinct !{!33, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrI14ThreadProfilerEEEJRS5_S8_EEEDcOT0_DpOT1_"}
!34 = distinct !{!34, !35, !"_ZN4base8BindOnceIPFv13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrI14ThreadProfilerEEEJRS3_S6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!35 = distinct !{!35, !"_ZN4base8BindOnceIPFv13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrI14ThreadProfilerEEEJRS3_S6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN12_GLOBAL__N_126CreateCoreUnwindersFactoryEv: argument 0"}
!38 = distinct !{!38, !"_ZN12_GLOBAL__N_126CreateCoreUnwindersFactoryEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessE: argument 0"}
!41 = distinct !{!41, !"_ZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessE"}
!42 = !{!43, !45, !40}
!43 = distinct !{!43, !44, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE3$_0JRKNS_14SampleMetadataEEEEDcOT0_DpOT1_: argument 0"}
!44 = distinct !{!44, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE3$_0JRKNS_14SampleMetadataEEEEDcOT0_DpOT1_"}
!45 = distinct !{!45, !46, !"_ZN4base13BindRepeatingIZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE3$_0JRKNS_14SampleMetadataEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!46 = distinct !{!46, !"_ZN4base13BindRepeatingIZN12_GLOBAL__N_133GetApplyPerSampleMetadataCallbackEN7metrics22CallStackProfileParams7ProcessEE3$_0JRKNS_14SampleMetadataEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
