; ModuleID = '../../ui/views/layout/fill_layout.cc'
source_filename = "../../ui/views/layout/fill_layout.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.views::FillLayout" = type <{ %"class.views::LayoutManagerBase", i8, i8, [6 x i8] }>
%"class.views::LayoutManagerBase" = type { %"class.views::LayoutManager", %"class.views::View"*, %"class.std::__1::map", %"class.std::__1::vector", %"class.views::LayoutManagerBase"*, i8, %"class.views::SizeBounds", %"class.absl::optional.12", %"class.absl::optional.12", %"class.absl::optional.12", %"class.absl::optional.12", %"struct.views::ProposedLayout" }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.71", i8, [3 x i8], %"class.absl::optional.12", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.78", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.97", %"class.absl::optional.103", i8, [7 x i8], %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.114", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.125", i8, i8, [3 x i8], %"class.std::__1::vector.130", %"class.std::__1::unique_ptr.137", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.143", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.156", %"class.base::ObserverList.162", i32, [4 x i8] }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.24", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.30", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.32" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.37", %"class.std::__1::vector.44", %"class.ui::EventHandler"* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.39" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map.51" }
%"class.std::__1::map.51" = type { %"class.std::__1::__tree.52" }
%"class.std::__1::__tree.52" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.62" }
%"class.std::__1::map.62" = type { %"class.std::__1::__tree.63" }
%"class.std::__1::__tree.63" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.views::View"** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::vector.71"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.87", %"struct.std::__1::atomic.87", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.85, %class.SkTDArray.86, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.84" }
%"struct.std::__1::__atomic_base.84" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.85 = type { i8*, i32, i32 }
%class.SkTDArray.86 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.92 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.87" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.92 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.93", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__cxx_atomic_impl.95" }
%"struct.std::__1::__cxx_atomic_impl.95" = type { %"struct.std::__1::__cxx_atomic_base_impl.96" }
%"struct.std::__1::__cxx_atomic_base_impl.96" = type { i8 }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i8 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.views::LayoutManager"* }
%"class.absl::optional.103" = type { %"class.absl::optional_internal::optional_data.104" }
%"class.absl::optional_internal::optional_data.104" = type { %"class.absl::optional_internal::optional_data_base.105" }
%"class.absl::optional_internal::optional_data_base.105" = type { %"class.absl::optional_internal::optional_data_dtor_base.106" }
%"class.absl::optional_internal::optional_data_dtor_base.106" = type { i8, %union.anon.107 }
%union.anon.107 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.views::Border"* }
%"class.views::Border" = type opaque
%"class.ui::PaintCache" = type <{ %class.sk_sp.120, float, [4 x i8] }>
%class.sk_sp.120 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.121", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { i8* }
%"class.ui::NativeTheme" = type opaque
%"class.absl::optional.125" = type { %"class.absl::optional_internal::optional_data.126" }
%"class.absl::optional_internal::optional_data.126" = type { %"class.absl::optional_internal::optional_data_base.127" }
%"class.absl::optional_internal::optional_data_base.127" = type { %"class.absl::optional_internal::optional_data_dtor_base.128" }
%"class.absl::optional_internal::optional_data_dtor_base.128" = type { i8, %union.anon.129 }
%union.anon.129 = type { i8 }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.std::__1::vector.146"* }
%"class.std::__1::vector.146" = type opaque
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.views::ViewTargeterDelegate" = type opaque
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.162" = type <{ %"class.std::__1::vector.30", %"class.base::LinkedList.163", i64, i32, [4 x i8] }>
%"class.base::LinkedList.163" = type { %"class.base::LinkNode.164" }
%"class.base::LinkNode.164" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.views::LayoutManagerBase"* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::unique_ptr"* }
%"class.views::SizeBounds" = type { %"class.views::SizeBound", %"class.views::SizeBound" }
%"class.views::SizeBound" = type { %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.absl::optional.12" = type { %"class.absl::optional_internal::optional_data.13" }
%"class.absl::optional_internal::optional_data.13" = type { %"class.absl::optional_internal::optional_data_base.14" }
%"class.absl::optional_internal::optional_data_base.14" = type { %"class.absl::optional_internal::optional_data_dtor_base.15" }
%"class.absl::optional_internal::optional_data_dtor_base.15" = type { i8, %union.anon.16 }
%union.anon.16 = type { %"class.gfx::Size" }
%"struct.views::ProposedLayout" = type { %"class.gfx::Size", %"class.std::__1::vector.17" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"struct.views::ChildLayout"*, %"struct.views::ChildLayout"*, %"class.std::__1::__compressed_pair.19" }
%"struct.views::ChildLayout" = type <{ %"class.views::View"*, i8, [3 x i8], %"class.gfx::Rect", %"class.views::SizeBounds", [4 x i8] }>
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.views::ChildLayout"* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZTVN5views10FillLayoutE = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::FillLayout"*)* @_ZN5views10FillLayoutD2Ev to i8*), i8* bitcast (void (%"class.views::FillLayout"*)* @_ZN5views10FillLayoutD0Ev to i8*), i8* bitcast (void (%"class.views::LayoutManagerBase"*, %"class.views::View"*)* @_ZN5views17LayoutManagerBase9InstalledEPNS_4ViewE to i8*), i8* bitcast (void (%"class.views::LayoutManagerBase"*)* @_ZN5views17LayoutManagerBase16InvalidateLayoutEv to i8*), i8* bitcast (void (%"class.views::LayoutManagerBase"*, %"class.views::View"*)* @_ZN5views17LayoutManagerBase6LayoutEPNS_4ViewE to i8*), i8* bitcast (i64 (%"class.views::FillLayout"*, %"class.views::View"*)* @_ZNK5views10FillLayout16GetPreferredSizeEPKNS_4ViewE to i8*), i8* bitcast (i64 (%"class.views::FillLayout"*, %"class.views::View"*)* @_ZNK5views10FillLayout14GetMinimumSizeEPKNS_4ViewE to i8*), i8* bitcast (i32 (%"class.views::FillLayout"*, %"class.views::View"*, i32)* @_ZNK5views10FillLayout26GetPreferredHeightForWidthEPKNS_4ViewEi to i8*), i8* bitcast (void (%"class.views::SizeBounds"*, %"class.views::LayoutManagerBase"*, %"class.views::View"*, %"class.views::View"*)* @_ZNK5views17LayoutManagerBase16GetAvailableSizeEPKNS_4ViewES3_ to i8*), i8* bitcast (void (%"class.views::LayoutManagerBase"*, %"class.views::View"*, %"class.views::View"*)* @_ZN5views17LayoutManagerBase9ViewAddedEPNS_4ViewES2_ to i8*), i8* bitcast (void (%"class.views::LayoutManagerBase"*, %"class.views::View"*, %"class.views::View"*)* @_ZN5views17LayoutManagerBase11ViewRemovedEPNS_4ViewES2_ to i8*), i8* bitcast (void (%"class.views::LayoutManagerBase"*, %"class.views::View"*, %"class.views::View"*, i1, i1)* @_ZN5views17LayoutManagerBase17ViewVisibilitySetEPNS_4ViewES2_bb to i8*), i8* bitcast (void (%"class.std::__1::vector.71"*, %"class.views::LayoutManagerBase"*, %"class.views::View"*)* @_ZNK5views17LayoutManagerBase25GetChildViewsInPaintOrderEPKNS_4ViewE to i8*), i8* bitcast (void (%"struct.views::ProposedLayout"*, %"class.views::FillLayout"*, %"class.views::SizeBounds"*)* @_ZNK5views10FillLayout23CalculateProposedLayoutERKNS_10SizeBoundsE to i8*), i8* bitcast (void (%"class.views::LayoutManagerBase"*)* @_ZN5views17LayoutManagerBase10LayoutImplEv to i8*), i8* bitcast (i1 (%"class.views::LayoutManagerBase"*, %"class.views::View"*, i1)* @_ZN5views17LayoutManagerBase26OnChildViewIgnoredByLayoutEPNS_4ViewEb to i8*), i8* bitcast (i1 (%"class.views::LayoutManagerBase"*, %"class.views::View"*, %"class.views::View"*)* @_ZN5views17LayoutManagerBase11OnViewAddedEPNS_4ViewES2_ to i8*), i8* bitcast (i1 (%"class.views::LayoutManagerBase"*, %"class.views::View"*, %"class.views::View"*)* @_ZN5views17LayoutManagerBase13OnViewRemovedEPNS_4ViewES2_ to i8*), i8* bitcast (i1 (%"class.views::LayoutManagerBase"*, %"class.views::View"*, %"class.views::View"*, i1)* @_ZN5views17LayoutManagerBase19OnViewVisibilitySetEPNS_4ViewES2_b to i8*), i8* bitcast (void (%"class.views::LayoutManagerBase"*, %"class.views::View"*)* @_ZN5views17LayoutManagerBase11OnInstalledEPNS_4ViewE to i8*), i8* bitcast (void (%"class.views::LayoutManagerBase"*)* @_ZN5views17LayoutManagerBase15OnLayoutChangedEv to i8*)] }, align 8

@_ZN5views10FillLayoutC1Ev = hidden unnamed_addr alias void (%"class.views::FillLayout"*), void (%"class.views::FillLayout"*)* @_ZN5views10FillLayoutC2Ev
@_ZN5views10FillLayoutD1Ev = hidden unnamed_addr alias void (%"class.views::FillLayout"*), void (%"class.views::FillLayout"*)* @_ZN5views10FillLayoutD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views10FillLayoutC2Ev(%"class.views::FillLayout"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 0
  tail call void @_ZN5views17LayoutManagerBaseC2Ev(%"class.views::LayoutManagerBase"* %2) #7
  %3 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN5views10FillLayoutE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 1
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 1
  ret void
}

declare void @_ZN5views17LayoutManagerBaseC2Ev(%"class.views::LayoutManagerBase"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5views17LayoutManagerBaseD2Ev(%"class.views::LayoutManagerBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views10FillLayoutD2Ev(%"class.views::FillLayout"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 0
  tail call void @_ZN5views17LayoutManagerBaseD2Ev(%"class.views::LayoutManagerBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views10FillLayoutD0Ev(%"class.views::FillLayout"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 0
  tail call void @_ZN5views17LayoutManagerBaseD2Ev(%"class.views::LayoutManagerBase"* %2) #7
  %3 = bitcast %"class.views::FillLayout"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(192) %"class.views::FillLayout"* @_ZN5views10FillLayout21SetIncludeHiddenViewsEb(%"class.views::FillLayout"* returned, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i32
  %4 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %3, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %4, align 8
  %10 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 0
  tail call void @_ZN5views17LayoutManagerBase14InvalidateHostEb(%"class.views::LayoutManagerBase"* %10, i1 zeroext true) #7
  br label %11

11:                                               ; preds = %2, %8
  ret %"class.views::FillLayout"* %0
}

declare void @_ZN5views17LayoutManagerBase14InvalidateHostEb(%"class.views::LayoutManagerBase"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(192) %"class.views::FillLayout"* @_ZN5views10FillLayout21SetMinimumSizeEnabledEb(%"class.views::FillLayout"* returned, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i32
  %4 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %3, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %4, align 1
  %10 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 0
  tail call void @_ZN5views17LayoutManagerBase14InvalidateHostEb(%"class.views::LayoutManagerBase"* %10, i1 zeroext true) #7
  br label %11

11:                                               ; preds = %2, %8
  ret %"class.views::FillLayout"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views10FillLayout23CalculateProposedLayoutERKNS_10SizeBoundsE(%"struct.views::ProposedLayout"* noalias sret, %"class.views::FillLayout"*, %"class.views::SizeBounds"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca [3 x i8], align 1
  %5 = getelementptr inbounds %"struct.views::ProposedLayout", %"struct.views::ProposedLayout"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.views::ProposedLayout", %"struct.views::ProposedLayout"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.views::ProposedLayout", %"struct.views::ProposedLayout"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"struct.views::ProposedLayout"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 32, i1 false)
  tail call void @_ZN5views14ProposedLayoutC1Ev(%"struct.views::ProposedLayout"* %0) #7
  %9 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %1, i64 0, i32 0
  %10 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %1, i64 0, i32 0, i32 1
  %11 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  %12 = getelementptr inbounds %"class.views::View", %"class.views::View"* %11, i64 0, i32 18, i32 1
  %13 = bitcast %"class.gfx::Size"* %12 to i64*
  %14 = bitcast %"struct.views::ProposedLayout"* %0 to i64*
  %15 = load i64, i64* %13, align 4
  store i64 %15, i64* %14, align 8
  %16 = tail call { i64, i64 } @_ZNK5views4View17GetContentsBoundsEv(%"class.views::View"* %11) #7
  %17 = extractvalue { i64, i64 } %16, 0
  %18 = extractvalue { i64, i64 } %16, 1
  %19 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  %20 = getelementptr inbounds %"class.views::View", %"class.views::View"* %19, i64 0, i32 14, i32 0, i32 0
  %21 = load %"class.views::View"**, %"class.views::View"*** %20, align 8
  %22 = getelementptr inbounds %"class.views::View", %"class.views::View"* %19, i64 0, i32 14, i32 0, i32 1
  %23 = load %"class.views::View"**, %"class.views::View"*** %22, align 8
  %24 = icmp eq %"class.views::View"** %21, %23
  br i1 %24, label %35, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %1, i64 0, i32 1
  %27 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0
  %28 = bitcast %"struct.views::ChildLayout"** %6 to i64*
  %29 = bitcast %"class.std::__1::vector.17"* %5 to i64*
  %30 = bitcast %"struct.views::ChildLayout"** %7 to i64*
  %31 = shl i64 %18, 32
  %32 = or i64 %31, 1
  %33 = and i64 %18, -4294967296
  %34 = or i64 %33, 1
  br label %36

35:                                               ; preds = %138, %3
  ret void

36:                                               ; preds = %25, %138
  %37 = phi %"class.views::View"** [ %21, %25 ], [ %139, %138 ]
  %38 = load %"class.views::View"*, %"class.views::View"** %37, align 8
  %39 = load i8, i8* %26, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  %42 = tail call zeroext i1 @_ZNK5views17LayoutManagerBase26IsChildViewIgnoredByLayoutEPKNS_4ViewE(%"class.views::LayoutManagerBase"* %9, %"class.views::View"* %38) #7
  br i1 %42, label %138, label %45

43:                                               ; preds = %36
  %44 = tail call zeroext i1 @_ZNK5views17LayoutManagerBase23IsChildIncludedInLayoutEPKNS_4ViewEb(%"class.views::LayoutManagerBase"* %9, %"class.views::View"* %38, i1 zeroext false) #7
  br i1 %44, label %45, label %138

45:                                               ; preds = %41, %43
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %27)
  %46 = tail call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %38) #7
  %47 = zext i1 %46 to i8
  %48 = load %"struct.views::ChildLayout"*, %"struct.views::ChildLayout"** %6, align 8
  %49 = load %"struct.views::ChildLayout"*, %"struct.views::ChildLayout"** %7, align 8
  %50 = icmp ult %"struct.views::ChildLayout"* %48, %49
  %51 = ptrtoint %"struct.views::ChildLayout"* %48 to i64
  %52 = ptrtoint %"struct.views::ChildLayout"* %49 to i64
  br i1 %50, label %53, label %67

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %48, i64 0, i32 0
  store %"class.views::View"* %38, %"class.views::View"** %54, align 8
  %55 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %48, i64 0, i32 1
  store i8 %47, i8* %55, align 8
  %56 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %48, i64 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %56, i8* nonnull align 1 %27, i64 3, i1 false)
  %57 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %48, i64 0, i32 3
  %58 = bitcast %"class.gfx::Rect"* %57 to i64*
  store i64 %17, i64* %58, align 1
  %59 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %48, i64 0, i32 3, i32 1
  %60 = bitcast %"class.gfx::Size"* %59 to i64*
  store i64 %18, i64* %60, align 1
  %61 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %48, i64 0, i32 4
  %62 = bitcast %"class.views::SizeBounds"* %61 to i64*
  store i64 %32, i64* %62, align 4
  %63 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %48, i64 0, i32 4, i32 1
  %64 = bitcast %"class.views::SizeBound"* %63 to i64*
  store i64 %34, i64* %64, align 4
  %65 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %48, i64 1
  %66 = ptrtoint %"struct.views::ChildLayout"* %65 to i64
  store i64 %66, i64* %28, align 8
  br label %137

67:                                               ; preds = %45
  %68 = load i64, i64* %29, align 8
  %69 = sub i64 %51, %68
  %70 = sdiv exact i64 %69, 48
  %71 = add nsw i64 %70, 1
  %72 = icmp ugt i64 %71, 384307168202282325
  %73 = inttoptr i64 %68 to %"struct.views::ChildLayout"*
  br i1 %72, label %74, label %76

74:                                               ; preds = %67
  %75 = bitcast %"class.std::__1::vector.17"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %75) #9
  unreachable

76:                                               ; preds = %67
  %77 = sub i64 %52, %68
  %78 = sdiv exact i64 %77, 48
  %79 = icmp ult i64 %78, 192153584101141162
  br i1 %79, label %80, label %85

80:                                               ; preds = %76
  %81 = shl nsw i64 %78, 1
  %82 = icmp ult i64 %81, %71
  %83 = select i1 %82, i64 %71, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %80, %76
  %86 = phi i64 [ %83, %80 ], [ 384307168202282325, %76 ]
  %87 = mul i64 %86, 48
  %88 = tail call i8* @_Znwm(i64 %87) #8
  %89 = bitcast i8* %88 to %"struct.views::ChildLayout"*
  br label %90

90:                                               ; preds = %85, %80
  %91 = phi i64 [ %86, %85 ], [ 0, %80 ]
  %92 = phi %"struct.views::ChildLayout"* [ %89, %85 ], [ null, %80 ]
  %93 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %92, i64 %70
  %94 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %92, i64 %91
  %95 = ptrtoint %"struct.views::ChildLayout"* %94 to i64
  %96 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %93, i64 0, i32 0
  store %"class.views::View"* %38, %"class.views::View"** %96, align 8
  %97 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %92, i64 %70, i32 1
  store i8 %47, i8* %97, align 8
  %98 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %92, i64 %70, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %98, i8* nonnull align 1 %27, i64 3, i1 false)
  %99 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %92, i64 %70, i32 3
  %100 = bitcast %"class.gfx::Rect"* %99 to i64*
  store i64 %17, i64* %100, align 1
  %101 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %92, i64 %70, i32 3, i32 1
  %102 = bitcast %"class.gfx::Size"* %101 to i64*
  store i64 %18, i64* %102, align 1
  %103 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %92, i64 %70, i32 4
  %104 = bitcast %"class.views::SizeBounds"* %103 to i64*
  store i64 %32, i64* %104, align 4
  %105 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %92, i64 %70, i32 4, i32 1
  %106 = bitcast %"class.views::SizeBound"* %105 to i64*
  store i64 %34, i64* %106, align 4
  %107 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %93, i64 1
  %108 = ptrtoint %"struct.views::ChildLayout"* %107 to i64
  %109 = icmp eq %"struct.views::ChildLayout"* %48, %73
  br i1 %109, label %130, label %110

110:                                              ; preds = %90, %110
  %111 = phi %"struct.views::ChildLayout"* [ %113, %110 ], [ %93, %90 ]
  %112 = phi %"struct.views::ChildLayout"* [ %114, %110 ], [ %48, %90 ]
  %113 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %111, i64 -1
  %114 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %112, i64 -1
  %115 = bitcast %"struct.views::ChildLayout"* %113 to i8*
  %116 = bitcast %"struct.views::ChildLayout"* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 28, i1 false) #7
  %117 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %111, i64 -1, i32 4
  %118 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %112, i64 -1, i32 4
  %119 = bitcast %"class.views::SizeBounds"* %118 to i64*
  %120 = bitcast %"class.views::SizeBounds"* %117 to i64*
  %121 = load i64, i64* %119, align 4
  store i64 %121, i64* %120, align 4
  %122 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %111, i64 -1, i32 4, i32 1
  %123 = getelementptr inbounds %"struct.views::ChildLayout", %"struct.views::ChildLayout"* %112, i64 -1, i32 4, i32 1
  %124 = bitcast %"class.views::SizeBound"* %123 to i64*
  %125 = bitcast %"class.views::SizeBound"* %122 to i64*
  %126 = load i64, i64* %124, align 4
  store i64 %126, i64* %125, align 4
  %127 = icmp eq %"struct.views::ChildLayout"* %114, %73
  br i1 %127, label %128, label %110

128:                                              ; preds = %110
  %129 = load i64, i64* %29, align 8
  br label %130

130:                                              ; preds = %90, %128
  %131 = phi %"struct.views::ChildLayout"* [ %113, %128 ], [ %93, %90 ]
  %132 = phi i64 [ %129, %128 ], [ %51, %90 ]
  %133 = ptrtoint %"struct.views::ChildLayout"* %131 to i64
  store i64 %133, i64* %29, align 8
  store i64 %108, i64* %28, align 8
  store i64 %95, i64* %30, align 8
  %134 = icmp eq i64 %132, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %130
  %136 = inttoptr i64 %132 to i8*
  tail call void @_ZdlPv(i8* %136) #8
  br label %137

137:                                              ; preds = %135, %130, %53
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %27)
  br label %138

138:                                              ; preds = %41, %137, %43
  %139 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %37, i64 1
  %140 = icmp eq %"class.views::View"** %139, %23
  br i1 %140, label %35, label %36
}

declare void @_ZN5views14ProposedLayoutC1Ev(%"struct.views::ProposedLayout"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare { i64, i64 } @_ZNK5views4View17GetContentsBoundsEv(%"class.views::View"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views10FillLayout18ShouldIncludeChildEPKNS_4ViewE(%"class.views::FillLayout"*, %"class.views::View"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 0
  br i1 %5, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call zeroext i1 @_ZNK5views17LayoutManagerBase26IsChildViewIgnoredByLayoutEPKNS_4ViewE(%"class.views::LayoutManagerBase"* %6, %"class.views::View"* %1) #7
  %9 = xor i1 %8, true
  br label %12

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @_ZNK5views17LayoutManagerBase23IsChildIncludedInLayoutEPKNS_4ViewEb(%"class.views::LayoutManagerBase"* %6, %"class.views::View"* %1, i1 zeroext false) #7
  br label %12

12:                                               ; preds = %10, %7
  %13 = phi i1 [ %9, %7 ], [ %11, %10 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5views10FillLayout16GetPreferredSizeEPKNS_4ViewE(%"class.views::FillLayout"*, %"class.views::View"*) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::Size"*
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::Size"*
  %7 = bitcast i64* %3 to i32*
  %8 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 1
  store i32 0, i32* %7, align 8
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.views::View", %"class.views::View"* %1, i64 0, i32 14, i32 0, i32 0
  %10 = load %"class.views::View"**, %"class.views::View"*** %9, align 8
  %11 = getelementptr inbounds %"class.views::View", %"class.views::View"* %1, i64 0, i32 14, i32 0, i32 1
  %12 = load %"class.views::View"**, %"class.views::View"*** %11, align 8
  %13 = icmp eq %"class.views::View"** %10, %12
  br i1 %13, label %53, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 0
  %17 = bitcast i64* %5 to i8*
  br label %21

18:                                               ; preds = %33
  %19 = and i8 %34, 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %53, label %37

21:                                               ; preds = %14, %33
  %22 = phi i8 [ 0, %14 ], [ %34, %33 ]
  %23 = phi %"class.views::View"** [ %10, %14 ], [ %35, %33 ]
  %24 = load %"class.views::View"*, %"class.views::View"** %23, align 8
  %25 = load i8, i8* %15, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = call zeroext i1 @_ZNK5views17LayoutManagerBase26IsChildViewIgnoredByLayoutEPKNS_4ViewE(%"class.views::LayoutManagerBase"* %16, %"class.views::View"* %24) #7
  br i1 %28, label %33, label %31

29:                                               ; preds = %21
  %30 = call zeroext i1 @_ZNK5views17LayoutManagerBase23IsChildIncludedInLayoutEPKNS_4ViewEb(%"class.views::LayoutManagerBase"* %16, %"class.views::View"* %24, i1 zeroext false) #7
  br i1 %30, label %31, label %33

31:                                               ; preds = %27, %29
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  %32 = call i64 @_ZNK5views4View16GetPreferredSizeEv(%"class.views::View"* %24) #7
  store i64 %32, i64* %5, align 8
  call void @_ZN3gfx4Size8SetToMaxERKS0_(%"class.gfx::Size"* nonnull %4, %"class.gfx::Size"* nonnull dereferenceable(8) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %33

33:                                               ; preds = %27, %31, %29
  %34 = phi i8 [ 1, %31 ], [ %22, %29 ], [ %22, %27 ]
  %35 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %23, i64 1
  %36 = icmp eq %"class.views::View"** %35, %12
  br i1 %36, label %18, label %21

37:                                               ; preds = %18
  %38 = bitcast %"class.views::View"* %1 to { i64, i64 } (%"class.views::View"*)***
  %39 = load { i64, i64 } (%"class.views::View"*)**, { i64, i64 } (%"class.views::View"*)*** %38, align 8
  %40 = getelementptr inbounds { i64, i64 } (%"class.views::View"*)*, { i64, i64 } (%"class.views::View"*)** %39, i64 14
  %41 = load { i64, i64 } (%"class.views::View"*)*, { i64, i64 } (%"class.views::View"*)** %40, align 8
  %42 = call { i64, i64 } %41(%"class.views::View"* %1) #7
  %43 = extractvalue { i64, i64 } %42, 0
  %44 = trunc i64 %43 to i32
  %45 = lshr i64 %43, 32
  %46 = trunc i64 %45 to i32
  %47 = extractvalue { i64, i64 } %42, 1
  %48 = lshr i64 %47, 32
  %49 = trunc i64 %48 to i32
  %50 = add nsw i32 %49, %46
  %51 = trunc i64 %47 to i32
  %52 = add nsw i32 %51, %44
  call void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"* nonnull %4, i32 %50, i32 %52) #7
  br label %53

53:                                               ; preds = %2, %18, %37
  %54 = load i64, i64* %3, align 8
  ret i64 %54
}

declare void @_ZN3gfx4Size8SetToMaxERKS0_(%"class.gfx::Size"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #1

declare i64 @_ZNK5views4View16GetPreferredSizeEv(%"class.views::View"*) local_unnamed_addr #1

declare void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5views10FillLayout14GetMinimumSizeEPKNS_4ViewE(%"class.views::FillLayout"*, %"class.views::View"*) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::Size"*
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::Size"*
  %7 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = tail call i64 @_ZNK5views4View16GetPreferredSizeEv(%"class.views::View"* %1) #7
  br label %66

12:                                               ; preds = %2
  %13 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = bitcast i64* %3 to i32*
  %15 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 1
  store i32 0, i32* %14, align 8
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.views::View", %"class.views::View"* %1, i64 0, i32 14, i32 0, i32 0
  %17 = load %"class.views::View"**, %"class.views::View"*** %16, align 8
  %18 = getelementptr inbounds %"class.views::View", %"class.views::View"* %1, i64 0, i32 14, i32 0, i32 1
  %19 = load %"class.views::View"**, %"class.views::View"*** %18, align 8
  %20 = icmp eq %"class.views::View"** %17, %19
  br i1 %20, label %64, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 0
  %24 = bitcast i64* %5 to i8*
  br label %28

25:                                               ; preds = %44
  %26 = and i8 %45, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %64, label %48

28:                                               ; preds = %21, %44
  %29 = phi i8 [ 0, %21 ], [ %45, %44 ]
  %30 = phi %"class.views::View"** [ %17, %21 ], [ %46, %44 ]
  %31 = load %"class.views::View"*, %"class.views::View"** %30, align 8
  %32 = load i8, i8* %22, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %28
  %35 = call zeroext i1 @_ZNK5views17LayoutManagerBase26IsChildViewIgnoredByLayoutEPKNS_4ViewE(%"class.views::LayoutManagerBase"* %23, %"class.views::View"* %31) #7
  br i1 %35, label %44, label %38

36:                                               ; preds = %28
  %37 = call zeroext i1 @_ZNK5views17LayoutManagerBase23IsChildIncludedInLayoutEPKNS_4ViewEb(%"class.views::LayoutManagerBase"* %23, %"class.views::View"* %31, i1 zeroext false) #7
  br i1 %37, label %38, label %44

38:                                               ; preds = %34, %36
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  %39 = bitcast %"class.views::View"* %31 to i64 (%"class.views::View"*)***
  %40 = load i64 (%"class.views::View"*)**, i64 (%"class.views::View"*)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.views::View"*)*, i64 (%"class.views::View"*)** %40, i64 17
  %42 = load i64 (%"class.views::View"*)*, i64 (%"class.views::View"*)** %41, align 8
  %43 = call i64 %42(%"class.views::View"* %31) #7
  store i64 %43, i64* %5, align 8
  call void @_ZN3gfx4Size8SetToMaxERKS0_(%"class.gfx::Size"* nonnull %4, %"class.gfx::Size"* nonnull dereferenceable(8) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  br label %44

44:                                               ; preds = %34, %38, %36
  %45 = phi i8 [ 1, %38 ], [ %29, %36 ], [ %29, %34 ]
  %46 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %30, i64 1
  %47 = icmp eq %"class.views::View"** %46, %19
  br i1 %47, label %25, label %28

48:                                               ; preds = %25
  %49 = bitcast %"class.views::View"* %1 to { i64, i64 } (%"class.views::View"*)***
  %50 = load { i64, i64 } (%"class.views::View"*)**, { i64, i64 } (%"class.views::View"*)*** %49, align 8
  %51 = getelementptr inbounds { i64, i64 } (%"class.views::View"*)*, { i64, i64 } (%"class.views::View"*)** %50, i64 14
  %52 = load { i64, i64 } (%"class.views::View"*)*, { i64, i64 } (%"class.views::View"*)** %51, align 8
  %53 = call { i64, i64 } %52(%"class.views::View"* %1) #7
  %54 = extractvalue { i64, i64 } %53, 0
  %55 = trunc i64 %54 to i32
  %56 = lshr i64 %54, 32
  %57 = trunc i64 %56 to i32
  %58 = extractvalue { i64, i64 } %53, 1
  %59 = lshr i64 %58, 32
  %60 = trunc i64 %59 to i32
  %61 = add nsw i32 %60, %57
  %62 = trunc i64 %58 to i32
  %63 = add nsw i32 %62, %55
  call void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"* nonnull %4, i32 %61, i32 %63) #7
  br label %64

64:                                               ; preds = %12, %25, %48
  %65 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  br label %66

66:                                               ; preds = %64, %10
  %67 = phi i64 [ %65, %64 ], [ %11, %10 ]
  ret i64 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5views10FillLayout26GetPreferredHeightForWidthEPKNS_4ViewEi(%"class.views::FillLayout"*, %"class.views::View"*, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.views::View"* %1 to { i64, i64 } (%"class.views::View"*)***
  %5 = load { i64, i64 } (%"class.views::View"*)**, { i64, i64 } (%"class.views::View"*)*** %4, align 8
  %6 = getelementptr inbounds { i64, i64 } (%"class.views::View"*)*, { i64, i64 } (%"class.views::View"*)** %5, i64 14
  %7 = load { i64, i64 } (%"class.views::View"*)*, { i64, i64 } (%"class.views::View"*)** %6, align 8
  %8 = tail call { i64, i64 } %7(%"class.views::View"* %1) #7
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = lshr i64 %9, 32
  %11 = trunc i64 %10 to i32
  %12 = extractvalue { i64, i64 } %8, 1
  %13 = lshr i64 %12, 32
  %14 = trunc i64 %13 to i32
  %15 = sub i32 %2, %11
  %16 = sub i32 %15, %14
  %17 = getelementptr inbounds %"class.views::View", %"class.views::View"* %1, i64 0, i32 14, i32 0, i32 0
  %18 = load %"class.views::View"**, %"class.views::View"*** %17, align 8
  %19 = getelementptr inbounds %"class.views::View", %"class.views::View"* %1, i64 0, i32 14, i32 0, i32 1
  %20 = load %"class.views::View"**, %"class.views::View"*** %19, align 8
  %21 = icmp eq %"class.views::View"** %18, %20
  br i1 %21, label %28, label %22

22:                                               ; preds = %3
  %23 = trunc i64 %9 to i32
  %24 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.views::FillLayout", %"class.views::FillLayout"* %0, i64 0, i32 0
  %26 = trunc i64 %12 to i32
  %27 = add nsw i32 %26, %23
  br label %30

28:                                               ; preds = %49, %3
  %29 = phi i32 [ 0, %3 ], [ %50, %49 ]
  ret i32 %29

30:                                               ; preds = %22, %49
  %31 = phi %"class.views::View"** [ %18, %22 ], [ %51, %49 ]
  %32 = phi i32 [ 0, %22 ], [ %50, %49 ]
  %33 = load %"class.views::View"*, %"class.views::View"** %31, align 8
  %34 = load i8, i8* %24, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  %37 = tail call zeroext i1 @_ZNK5views17LayoutManagerBase26IsChildViewIgnoredByLayoutEPKNS_4ViewE(%"class.views::LayoutManagerBase"* %25, %"class.views::View"* %33) #7
  br i1 %37, label %49, label %40

38:                                               ; preds = %30
  %39 = tail call zeroext i1 @_ZNK5views17LayoutManagerBase23IsChildIncludedInLayoutEPKNS_4ViewEb(%"class.views::LayoutManagerBase"* %25, %"class.views::View"* %33, i1 zeroext false) #7
  br i1 %39, label %40, label %49

40:                                               ; preds = %36, %38
  %41 = bitcast %"class.views::View"* %33 to i32 (%"class.views::View"*, i32)***
  %42 = load i32 (%"class.views::View"*, i32)**, i32 (%"class.views::View"*, i32)*** %41, align 8
  %43 = getelementptr inbounds i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %42, i64 19
  %44 = load i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %43, align 8
  %45 = tail call i32 %44(%"class.views::View"* %33, i32 %16) #7
  %46 = add nsw i32 %27, %45
  %47 = icmp slt i32 %32, %46
  %48 = select i1 %47, i32 %46, i32 %32
  br label %49

49:                                               ; preds = %36, %40, %38
  %50 = phi i32 [ %48, %40 ], [ %32, %38 ], [ %32, %36 ]
  %51 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %31, i64 1
  %52 = icmp eq %"class.views::View"** %51, %20
  br i1 %52, label %28, label %30
}

declare zeroext i1 @_ZNK5views17LayoutManagerBase26IsChildViewIgnoredByLayoutEPKNS_4ViewE(%"class.views::LayoutManagerBase"*, %"class.views::View"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5views17LayoutManagerBase23IsChildIncludedInLayoutEPKNS_4ViewEb(%"class.views::LayoutManagerBase"*, %"class.views::View"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5views17LayoutManagerBase9InstalledEPNS_4ViewE(%"class.views::LayoutManagerBase"*, %"class.views::View"*) unnamed_addr #1

declare void @_ZN5views17LayoutManagerBase16InvalidateLayoutEv(%"class.views::LayoutManagerBase"*) unnamed_addr #1

declare void @_ZN5views17LayoutManagerBase6LayoutEPNS_4ViewE(%"class.views::LayoutManagerBase"*, %"class.views::View"*) unnamed_addr #1

declare void @_ZNK5views17LayoutManagerBase16GetAvailableSizeEPKNS_4ViewES3_(%"class.views::SizeBounds"* sret, %"class.views::LayoutManagerBase"*, %"class.views::View"*, %"class.views::View"*) unnamed_addr #1

declare void @_ZN5views17LayoutManagerBase9ViewAddedEPNS_4ViewES2_(%"class.views::LayoutManagerBase"*, %"class.views::View"*, %"class.views::View"*) unnamed_addr #1

declare void @_ZN5views17LayoutManagerBase11ViewRemovedEPNS_4ViewES2_(%"class.views::LayoutManagerBase"*, %"class.views::View"*, %"class.views::View"*) unnamed_addr #1

declare void @_ZN5views17LayoutManagerBase17ViewVisibilitySetEPNS_4ViewES2_bb(%"class.views::LayoutManagerBase"*, %"class.views::View"*, %"class.views::View"*, i1 zeroext, i1 zeroext) unnamed_addr #1

declare void @_ZNK5views17LayoutManagerBase25GetChildViewsInPaintOrderEPKNS_4ViewE(%"class.std::__1::vector.71"* sret, %"class.views::LayoutManagerBase"*, %"class.views::View"*) unnamed_addr #1

declare void @_ZN5views17LayoutManagerBase10LayoutImplEv(%"class.views::LayoutManagerBase"*) unnamed_addr #1

declare zeroext i1 @_ZN5views17LayoutManagerBase26OnChildViewIgnoredByLayoutEPNS_4ViewEb(%"class.views::LayoutManagerBase"*, %"class.views::View"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN5views17LayoutManagerBase11OnViewAddedEPNS_4ViewES2_(%"class.views::LayoutManagerBase"*, %"class.views::View"*, %"class.views::View"*) unnamed_addr #1

declare zeroext i1 @_ZN5views17LayoutManagerBase13OnViewRemovedEPNS_4ViewES2_(%"class.views::LayoutManagerBase"*, %"class.views::View"*, %"class.views::View"*) unnamed_addr #1

declare zeroext i1 @_ZN5views17LayoutManagerBase19OnViewVisibilitySetEPNS_4ViewES2_b(%"class.views::LayoutManagerBase"*, %"class.views::View"*, %"class.views::View"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5views17LayoutManagerBase11OnInstalledEPNS_4ViewE(%"class.views::LayoutManagerBase"*, %"class.views::View"*) unnamed_addr #1

declare void @_ZN5views17LayoutManagerBase15OnLayoutChangedEv(%"class.views::LayoutManagerBase"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
