; ModuleID = '../../net/cert/ct_signed_certificate_timestamp_log_param.cc'
source_filename = "../../net/cert/ct_signed_certificate_timestamp_log_param.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.7" }
%"union.absl::variant_internal::DestructibleUnionImpl.7" = type { %"union.absl::variant_internal::DestructibleUnionImpl.8" }
%"union.absl::variant_internal::DestructibleUnionImpl.8" = type { %"union.absl::variant_internal::DestructibleUnionImpl.9" }
%"union.absl::variant_internal::DestructibleUnionImpl.9" = type { %"union.absl::variant_internal::DestructibleUnionImpl.10" }
%"union.absl::variant_internal::DestructibleUnionImpl.10" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.2" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr, i32, [4 x i8] }>
%class.scoped_refptr = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [5 x i8] c"scts\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"embedded_scts\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"scts_from_ocsp_response\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"scts_from_tls_extension\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"verification_status\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"log_id\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"timestamp\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"extensions\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"hash_algorithm\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"signature_algorithm\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"signature_data\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net38NetLogSignedCertificateTimestampParamsEPKNSt3__16vectorINS_35SignedCertificateTimestampAndStatusENS0_9allocatorIS2_EEEE(%"class.base::Value"* noalias sret, %"class.std::__1::vector"* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.base::TimeDelta", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.base::Value", align 8
  %16 = alloca %"class.base::Value", align 8
  %17 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #5
  %18 = bitcast %"class.base::Value"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false) #5, !alias.scope !2
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %16, i8 zeroext 7) #5
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %20 = load %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"** %19, align 8, !noalias !2
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %22 = load %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"** %21, align 8, !noalias !2
  %23 = icmp eq %"struct.net::SignedCertificateTimestampAndStatus"* %20, %22
  br i1 %23, label %234, label %24

24:                                               ; preds = %2
  %25 = bitcast %"class.base::Value"* %15 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %32 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  %37 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %38 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = bitcast %"class.base::TimeDelta"* %11 to i8*
  %45 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %11, i64 0, i32 0
  %46 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %47 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  %51 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %52 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %59 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  %69 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %70 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %71 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  br label %76

76:                                               ; preds = %231, %24
  %77 = phi %"struct.net::SignedCertificateTimestampAndStatus"* [ %20, %24 ], [ %232, %231 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #5, !noalias !2
  %78 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %77, i64 0, i32 0, i32 0
  %79 = load %"struct.net::ct::SignedCertificateTimestamp"*, %"struct.net::ct::SignedCertificateTimestamp"** %78, align 8
  %80 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %77, i64 0, i32 1
  %81 = load i32, i32* %80, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false) #5, !alias.scope !5, !noalias !2
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %15, i8 zeroext 6) #5
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #5, !noalias !8
  %82 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %79, i64 0, i32 6
  %83 = load i32, i32* %82, align 8, !noalias !5
  call void @_ZN3net2ct14OriginToStringENS0_26SignedCertificateTimestamp6OriginE(%"class.std::__1::basic_string"* nonnull sret %9, i32 %83) #5
  %84 = load i8, i8* %28, align 1, !noalias !8
  %85 = icmp slt i8 %84, 0
  %86 = load i8*, i8** %29, align 8, !noalias !8
  %87 = select i1 %85, i8* %86, i8* %26
  %88 = load i64, i64* %30, align 8, !noalias !8
  %89 = zext i8 %84 to i64
  %90 = select i1 %85, i64 %88, i64 %89
  %91 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6, i8* %87, i64 %90) #5
  %92 = load i8, i8* %28, align 1, !noalias !8
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %76
  %95 = load i8*, i8** %29, align 8, !noalias !8
  call void @_ZdlPv(i8* %95) #6
  br label %96

96:                                               ; preds = %94, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #5, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #5, !noalias !8
  call void @_ZN3net2ct14StatusToStringENS0_15SCTVerifyStatusE(%"class.std::__1::basic_string"* nonnull sret %10, i32 %81) #5
  %97 = load i8, i8* %33, align 1, !noalias !8
  %98 = icmp slt i8 %97, 0
  %99 = load i8*, i8** %34, align 8, !noalias !8
  %100 = select i1 %98, i8* %99, i8* %31
  %101 = load i64, i64* %35, align 8, !noalias !8
  %102 = zext i8 %97 to i64
  %103 = select i1 %98, i64 %101, i64 %102
  %104 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %15, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i64 19, i8* %100, i64 %103) #5
  %105 = load i8, i8* %33, align 1, !noalias !8
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %96
  %108 = load i8*, i8** %34, align 8, !noalias !8
  call void @_ZdlPv(i8* %108) #6
  br label %109

109:                                              ; preds = %107, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #5, !noalias !8
  %110 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %79, i64 0, i32 1
  %111 = load i32, i32* %110, align 4, !noalias !5
  %112 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 7, i32 %111) #5
  %113 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %79, i64 0, i32 2
  %114 = bitcast %"class.std::__1::basic_string"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1, !noalias !5
  %117 = icmp slt i8 %116, 0
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8, !noalias !5
  %120 = bitcast %"class.std::__1::basic_string"* %113 to i8*
  %121 = select i1 %117, i8* %119, i8* %120
  %122 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8, !noalias !5
  %124 = zext i8 %116 to i64
  %125 = select i1 %117, i64 %123, i64 %124
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #5, !noalias !8
  store i8* %121, i8** %37, align 8, !noalias !8
  store i64 %125, i64* %38, align 8, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #5, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #5, !noalias !8
  call void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5, %"class.std::__1::basic_string"* nonnull %6) #5
  %126 = load i8, i8* %43, align 1, !noalias !8
  %127 = icmp slt i8 %126, 0
  %128 = load i8*, i8** %40, align 8, !noalias !8
  %129 = select i1 %127, i8* %128, i8* %39
  %130 = load i64, i64* %41, align 8, !noalias !8
  %131 = zext i8 %126 to i64
  %132 = select i1 %127, i64 %130, i64 %131
  %133 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i64 6, i8* %129, i64 %132) #5
  %134 = load i8, i8* %43, align 1, !noalias !8
  %135 = icmp slt i8 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %109
  %137 = load i8*, i8** %40, align 8, !noalias !8
  call void @_ZdlPv(i8* %137) #6
  br label %138

138:                                              ; preds = %136, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #5, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #5, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #5, !noalias !8
  %139 = call i64 @_ZN4base4Time9UnixEpochEv() #5
  %140 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %79, i64 0, i32 3, i32 0, i32 0
  %141 = load i64, i64* %140, align 8, !noalias !5
  %142 = sub nsw i64 %141, %139
  store i64 %142, i64* %45, align 8, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #5, !noalias !8
  %143 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %11) #5
  call void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* nonnull sret %12, i64 %143) #5
  %144 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* nonnull %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i64 9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12) #5
  %145 = load i8, i8* %48, align 1, !noalias !8
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %138
  %148 = load i8*, i8** %49, align 8, !noalias !8
  call void @_ZdlPv(i8* %148) #6
  br label %149

149:                                              ; preds = %147, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #5, !noalias !8
  %150 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %79, i64 0, i32 4
  %151 = bitcast %"class.std::__1::basic_string"* %150 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %151, i64 0, i32 1, i32 0
  %153 = load i8, i8* %152, align 1, !noalias !5
  %154 = icmp slt i8 %153, 0
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8, !noalias !5
  %157 = bitcast %"class.std::__1::basic_string"* %150 to i8*
  %158 = select i1 %154, i8* %156, i8* %157
  %159 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %79, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %160 = load i64, i64* %159, align 8, !noalias !5
  %161 = zext i8 %153 to i64
  %162 = select i1 %154, i64 %160, i64 %161
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #5, !noalias !8
  store i8* %158, i8** %51, align 8, !noalias !8
  store i64 %162, i64* %52, align 8, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #5, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #5, !noalias !8
  call void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3, %"class.std::__1::basic_string"* nonnull %4) #5
  %163 = load i8, i8* %57, align 1, !noalias !8
  %164 = icmp slt i8 %163, 0
  %165 = load i8*, i8** %54, align 8, !noalias !8
  %166 = select i1 %164, i8* %165, i8* %53
  %167 = load i64, i64* %55, align 8, !noalias !8
  %168 = zext i8 %163 to i64
  %169 = select i1 %164, i64 %167, i64 %168
  %170 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i64 10, i8* %166, i64 %169) #5
  %171 = load i8, i8* %57, align 1, !noalias !8
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %149
  %174 = load i8*, i8** %54, align 8, !noalias !8
  call void @_ZdlPv(i8* %174) #6
  br label %175

175:                                              ; preds = %173, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #5, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #5, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #5, !noalias !8
  %176 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %79, i64 0, i32 5, i32 0
  %177 = load i32, i32* %176, align 8, !noalias !5
  call void @_ZN3net2ct21HashAlgorithmToStringENS0_15DigitallySigned13HashAlgorithmE(%"class.std::__1::basic_string"* nonnull sret %13, i32 %177) #5
  %178 = load i8, i8* %60, align 1, !noalias !8
  %179 = icmp slt i8 %178, 0
  %180 = load i8*, i8** %61, align 8, !noalias !8
  %181 = select i1 %179, i8* %180, i8* %58
  %182 = load i64, i64* %62, align 8, !noalias !8
  %183 = zext i8 %178 to i64
  %184 = select i1 %179, i64 %182, i64 %183
  %185 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %15, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i64 14, i8* %181, i64 %184) #5
  %186 = load i8, i8* %60, align 1, !noalias !8
  %187 = icmp slt i8 %186, 0
  br i1 %187, label %188, label %190

188:                                              ; preds = %175
  %189 = load i8*, i8** %61, align 8, !noalias !8
  call void @_ZdlPv(i8* %189) #6
  br label %190

190:                                              ; preds = %188, %175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #5, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #5, !noalias !8
  %191 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %79, i64 0, i32 5, i32 1
  %192 = load i32, i32* %191, align 4, !noalias !5
  call void @_ZN3net2ct26SignatureAlgorithmToStringENS0_15DigitallySigned18SignatureAlgorithmE(%"class.std::__1::basic_string"* nonnull sret %14, i32 %192) #5
  %193 = load i8, i8* %65, align 1, !noalias !8
  %194 = icmp slt i8 %193, 0
  %195 = load i8*, i8** %66, align 8, !noalias !8
  %196 = select i1 %194, i8* %195, i8* %63
  %197 = load i64, i64* %67, align 8, !noalias !8
  %198 = zext i8 %193 to i64
  %199 = select i1 %194, i64 %197, i64 %198
  %200 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %15, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), i64 19, i8* %196, i64 %199) #5
  %201 = load i8, i8* %65, align 1, !noalias !8
  %202 = icmp slt i8 %201, 0
  br i1 %202, label %203, label %205

203:                                              ; preds = %190
  %204 = load i8*, i8** %66, align 8, !noalias !8
  call void @_ZdlPv(i8* %204) #6
  br label %205

205:                                              ; preds = %203, %190
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #5, !noalias !8
  %206 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %79, i64 0, i32 5, i32 2
  %207 = bitcast %"class.std::__1::basic_string"* %206 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %207, i64 0, i32 1, i32 0
  %209 = load i8, i8* %208, align 1, !noalias !5
  %210 = icmp slt i8 %209, 0
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %206, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8, !noalias !5
  %213 = bitcast %"class.std::__1::basic_string"* %206 to i8*
  %214 = select i1 %210, i8* %212, i8* %213
  %215 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %79, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %216 = load i64, i64* %215, align 8, !noalias !5
  %217 = zext i8 %209 to i64
  %218 = select i1 %210, i64 %216, i64 %217
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #5, !noalias !8
  store i8* %214, i8** %69, align 8, !noalias !8
  store i64 %218, i64* %70, align 8, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #5, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 24, i1 false) #5, !noalias !8
  call void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7, %"class.std::__1::basic_string"* nonnull %8) #5
  %219 = load i8, i8* %75, align 1, !noalias !8
  %220 = icmp slt i8 %219, 0
  %221 = load i8*, i8** %72, align 8, !noalias !8
  %222 = select i1 %220, i8* %221, i8* %71
  %223 = load i64, i64* %73, align 8, !noalias !8
  %224 = zext i8 %219 to i64
  %225 = select i1 %220, i64 %223, i64 %224
  %226 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %15, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i64 14, i8* %222, i64 %225) #5
  %227 = load i8, i8* %75, align 1, !noalias !8
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %229, label %231

229:                                              ; preds = %205
  %230 = load i8*, i8** %72, align 8, !noalias !8
  call void @_ZdlPv(i8* %230) #6
  br label %231

231:                                              ; preds = %229, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #5, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #5, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #5, !noalias !8
  call void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"* nonnull %16, %"class.base::Value"* nonnull dereferenceable(32) %15) #5
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #5, !noalias !2
  %232 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %77, i64 1
  %233 = icmp eq %"struct.net::SignedCertificateTimestampAndStatus"* %232, %22
  br i1 %233, label %234, label %76

234:                                              ; preds = %231, %2
  %235 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %16) #5
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %16) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #5
  ret void
}

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net41NetLogRawSignedCertificateTimestampParamsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_S5_(%"class.base::Value"* noalias sret, i8*, i64, i8*, i64, %"class.base::BasicStringPiece"* nocapture readonly byval(%"class.base::BasicStringPiece") align 8) local_unnamed_addr #0 {
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"class.base::BasicStringPiece"*
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.base::BasicStringPiece", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.base::BasicStringPiece", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #5
  %15 = bitcast %"class.base::BasicStringPiece"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15)
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 0
  store i8* %1, i8** %16, align 8
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 1
  store i64 %2, i64* %17, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #5
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #5
  call void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %12, %"class.std::__1::basic_string"* nonnull %13) #5
  %21 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = load i8*, i8** %19, align 8
  %26 = select i1 %24, i8* %25, i8* %18
  %27 = load i64, i64* %20, align 8
  %28 = zext i8 %23 to i64
  %29 = select i1 %24, i64 %27, i64 %28
  %30 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i64 13, i8* %26, i64 %29) #5
  %31 = load i8, i8* %22, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %6
  %34 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %34) #6
  br label %35

35:                                               ; preds = %6, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15)
  %36 = bitcast %"class.base::BasicStringPiece"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36)
  %37 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 0
  store i8* %3, i8** %37, align 8
  %38 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 1
  store i64 %4, i64* %38, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #5
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #5
  call void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %10, %"class.std::__1::basic_string"* nonnull %11) #5
  %42 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i8*, i8** %40, align 8
  %47 = select i1 %45, i8* %46, i8* %39
  %48 = load i64, i64* %41, align 8
  %49 = zext i8 %44 to i64
  %50 = select i1 %45, i64 %48, i64 %49
  %51 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i64 23, i8* %47, i64 %50) #5
  %52 = load i8, i8* %43, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %35
  %55 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %55) #6
  br label %56

56:                                               ; preds = %35, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36)
  %57 = bitcast %"class.base::BasicStringPiece"* %5 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8
  %59 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59)
  store <2 x i64> %58, <2 x i64>* %7, align 16
  %60 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #5
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 24, i1 false) #5
  call void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %8, %"class.std::__1::basic_string"* nonnull %9) #5
  %63 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = load i8*, i8** %61, align 8
  %68 = select i1 %66, i8* %67, i8* %60
  %69 = load i64, i64* %62, align 8
  %70 = zext i8 %65 to i64
  %71 = select i1 %66, i64 %69, i64 %70
  %72 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i64 23, i8* %68, i64 %71) #5
  %73 = load i8, i8* %64, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %56
  %76 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %76) #6
  br label %77

77:                                               ; preds = %56, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59)
  ret void
}

declare void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"*, i8*, i64, i8*, i64) local_unnamed_addr #1

declare void @_ZN3net2ct14OriginToStringENS0_26SignedCertificateTimestamp6OriginE(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

declare void @_ZN3net2ct14StatusToStringENS0_15SCTVerifyStatusE(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #1

declare i64 @_ZN4base4Time9UnixEpochEv() local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"*, i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #1

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

declare void @_ZN3net2ct21HashAlgorithmToStringENS0_15DigitallySigned13HashAlgorithmE(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

declare void @_ZN3net2ct26SignatureAlgorithmToStringENS0_15DigitallySigned18SignatureAlgorithmE(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3net12_GLOBAL__N_124SCTListToPrintableValuesERKNSt3__16vectorINS_35SignedCertificateTimestampAndStatusENS1_9allocatorIS3_EEEE: argument 0"}
!4 = distinct !{!4, !"_ZN3net12_GLOBAL__N_124SCTListToPrintableValuesERKNSt3__16vectorINS_35SignedCertificateTimestampAndStatusENS1_9allocatorIS3_EEEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3net12_GLOBAL__N_115SCTToDictionaryERKNS_2ct26SignedCertificateTimestampENS1_15SCTVerifyStatusE: argument 0"}
!7 = distinct !{!7, !"_ZN3net12_GLOBAL__N_115SCTToDictionaryERKNS_2ct26SignedCertificateTimestampENS1_15SCTVerifyStatusE"}
!8 = !{!6, !3}
