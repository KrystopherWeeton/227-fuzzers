; ModuleID = '../../third_party/freetype/src/src/cff/cff.c'
source_filename = "../../third_party/freetype/src/src/cff/cff.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.FT_CMapRec_ = type { %struct.FT_CharMapRec_, %struct.FT_CMap_ClassRec_* }
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i32, [32 x %struct.FT_ModuleRec_*], %struct.FT_ListRec_, %struct.FT_RendererRec_*, %struct.FT_ModuleRec_*, [4 x i32 (i8*)*], [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_RendererRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Renderer_Class_*, i32, %struct.FT_Glyph_Class_, %struct.FT_RasterRec_*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)* }
%struct.FT_ModuleRec_ = type { %struct.FT_Module_Class_*, %struct.FT_LibraryRec_*, %struct.FT_MemoryRec_* }
%struct.FT_Module_Class_ = type { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }
%struct.FT_Renderer_Class_ = type { %struct.FT_Module_Class_, i32, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_RendererRec_*, i64, i8*)*, %struct.FT_Raster_Funcs_* }
%struct.FT_Matrix_ = type { i64, i64, i64, i64 }
%struct.FT_Raster_Funcs_ = type { i32, i32 (i8*, %struct.FT_RasterRec_**)*, void (%struct.FT_RasterRec_*, i8*, i64)*, i32 (%struct.FT_RasterRec_*, i64, i8*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, void (%struct.FT_RasterRec_*)* }
%struct.FT_Glyph_Class_ = type { i64, i32, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphRec_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphRec_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)* }
%struct.FT_GlyphRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_Glyph_Class_*, i32, %struct.FT_Vector_ }
%struct.FT_RasterRec_ = type opaque
%struct.FT_Raster_Params_ = type { %struct.FT_Bitmap_*, i8*, i32, void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i8*)*, i8*, %struct.FT_BBox_ }
%struct.FT_Span_ = type { i16, i16, i8 }
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type { i32, i16, i32, i32, %struct.FT_Matrix_ }
%struct.FT_Slot_InternalRec_ = type { %struct.FT_GlyphLoaderRec_*, i32, i8, %struct.FT_Matrix_, %struct.FT_Vector_, i8*, i32 }
%struct.FT_GlyphLoaderRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i8, %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_, i8* }
%struct.FT_GlyphLoadRec_ = type { %struct.FT_Outline_, %struct.FT_Vector_*, %struct.FT_Vector_*, i32, %struct.FT_SubGlyphRec_* }
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type { i8*, i32, %struct.FT_Size_Metrics_ }
%struct.FT_DriverRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Driver_ClassRec_*, %struct.FT_ListRec_, %struct.FT_GlyphLoaderRec_* }
%struct.FT_Driver_ClassRec_ = type { %struct.FT_Module_Class_, i64, i64, i64, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.FT_FaceRec_*)*, i32 (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, i64)* }
%struct.FT_Parameter_ = type { i64, i8* }
%struct.FT_Size_RequestRec_ = type { i32, i64, i64, i32, i32 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type { %struct.FT_Matrix_, %struct.FT_Vector_, i32, %struct.FT_ServiceCacheRec_, %struct.FT_Incremental_InterfaceRec_*, i8, i32, [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_ServiceCacheRec_ = type { i8*, i8*, i8*, i8*, i8*, i8* }
%struct.FT_Incremental_InterfaceRec_ = type { %struct.FT_Incremental_FuncsRec_*, %struct.FT_IncrementalRec_* }
%struct.FT_Incremental_FuncsRec_ = type { i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* }
%struct.FT_Data_ = type { i8*, i32 }
%struct.FT_Incremental_MetricsRec_ = type { i64, i64, i64, i64 }
%struct.FT_IncrementalRec_ = type opaque
%struct.FT_CMap_ClassRec_ = type { i64, {}*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }
%struct.FT_ServiceDescRec_ = type { i8*, i8* }
%struct.FT_Service_MultiMastersRec_ = type { i32 (%struct.FT_FaceRec_*, %struct.FT_Multi_Master_*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32*, i64*)*, i32 (%struct.FT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)*, void (%struct.FT_FaceRec_*)* }
%struct.FT_Multi_Master_ = type { i32, i32, [4 x %struct.FT_MM_Axis_] }
%struct.FT_MM_Axis_ = type { i8*, i64, i64 }
%struct.FT_MM_Var_ = type { i32, i32, i32, %struct.FT_Var_Axis_*, %struct.FT_Var_Named_Style_* }
%struct.FT_Var_Axis_ = type { i8*, i64, i64, i64, i64, i32 }
%struct.FT_Var_Named_Style_ = type { i64*, i32, i32 }
%struct.FT_Service_MetricsVariationsRec_ = type { i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, void (%struct.FT_FaceRec_*)* }
%struct.FT_Service_PsInfoRec_ = type { i32 (%struct.FT_FaceRec_*, %struct.PS_FontInfoRec_*)*, i32 (%struct.FT_FaceRec_*, %struct.PS_FontExtraRec_*)*, i32 (%struct.FT_FaceRec_*)*, i32 (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*)*, i64 (%struct.FT_FaceRec_*, i32, i32, i8*, i64)* }
%struct.PS_FontInfoRec_ = type { i8*, i8*, i8*, i8*, i8*, i64, i8, i16, i16 }
%struct.PS_FontExtraRec_ = type { i16 }
%struct.PS_PrivateRec_ = type { i32, i32, i8, i8, i8, i8, [14 x i16], [10 x i16], [14 x i16], [10 x i16], i64, i32, i32, [1 x i16], [1 x i16], i8, i8, i8, i8, [13 x i16], [13 x i16], i64, i64, i64, [2 x i16] }
%struct.FT_Service_PsFontNameRec_ = type { i8* (%struct.FT_FaceRec_*)* }
%struct.FT_Service_GlyphDictRec_ = type { i32 (%struct.FT_FaceRec_*, i32, i8*, i32)*, i32 (%struct.FT_FaceRec_*, i8*)* }
%struct.FT_Service_TTCMapsRec_ = type { i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* }
%struct.TT_CMapInfo_ = type { i64, i64 }
%struct.FT_Service_CIDRec_ = type { i32 (%struct.FT_FaceRec_*, i8**, i8**, i32*)*, i32 (%struct.FT_FaceRec_*, i8*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)* }
%struct.FT_Service_PropertiesRec_ = type { i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)*, i32 (%struct.FT_ModuleRec_*, i8*, i8*)* }
%struct.FT_Service_CFFLoadRec_ = type { i16 (i32)*, i32 (%struct.CFF_FontRec_*, %struct.CFF_SubFontRec_*, i32, i64*)*, i8 (%struct.CFF_FDSelectRec_*, i32)*, i8 (%struct.CFF_BlendRec_*, i32, i32, i64*)*, i32 (%struct.CFF_BlendRec_*, i32, i32, i64*)* }
%struct.CFF_FontRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_StreamRec_*, %struct.FT_MemoryRec_*, i64, i32, i32, i8, i8, i8, i32, i8, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, %struct.CFF_EncodingRec_, %struct.CFF_CharsetRec_, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, i8*, i8**, i32, i8**, i8*, i64, %struct.CFF_SubFontRec_, i32, [256 x %struct.CFF_SubFontRec_*], %struct.CFF_FDSelectRec_, %struct.PSHinter_Interface_*, %struct.FT_Service_PsCMapsRec_*, i8*, %struct.PS_FontInfoRec_*, i8*, i8*, %struct.FT_Generic_, %struct.CFF_VStoreRec_, %struct.PS_FontExtraRec_* }
%struct.CFF_EncodingRec_ = type { i32, i64, i32, [256 x i16], [256 x i16] }
%struct.CFF_CharsetRec_ = type { i32, i64, i16*, i16*, i32, i32 }
%struct.CFF_IndexRec_ = type { %struct.FT_StreamRec_*, i64, i32, i32, i8, i64, i64, i64*, i8* }
%struct.CFF_SubFontRec_ = type { %struct.CFF_FontRecDictRec_, %struct.CFF_PrivateRec_, %struct.CFF_BlendRec_, i32, i64*, i8*, i8*, i32, i32, %struct.CFF_IndexRec_, i8**, i32 }
%struct.CFF_FontRecDictRec_ = type { i32, i32, i32, i32, i32, i32, i8, i64, i64, i64, i32, i32, %struct.FT_Matrix_, i8, i64, %struct.FT_Vector_, i64, %struct.FT_BBox_, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i16, i16, i64, i32 }
%struct.CFF_PrivateRec_ = type { i8, i8, i8, i8, [14 x i64], [10 x i64], [14 x i64], [10 x i64], i64, i64, i64, i64, i64, i8, i8, [13 x i64], [13 x i64], i8, i64, i32, i32, i64, i64, i64, i64, i64, i32, %struct.CFF_SubFontRec_* }
%struct.CFF_BlendRec_ = type { i8, i8, %struct.CFF_FontRec_*, i32, i32, i64*, i32, i32* }
%struct.CFF_FDSelectRec_ = type { i8, i32, i8*, i32, i32, i32, i8 }
%struct.PSHinter_Interface_ = type { %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.T1_Hints_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.T2_Hints_FuncsRec_* (%struct.FT_ModuleRec_*)* }
%struct.PSH_Globals_FuncsRec_ = type { i32 (%struct.FT_MemoryRec_*, %struct.PS_PrivateRec_*, %struct.PSH_GlobalsRec_**)*, void (%struct.PSH_GlobalsRec_*, i64, i64, i64, i64)*, void (%struct.PSH_GlobalsRec_*)* }
%struct.PSH_GlobalsRec_ = type opaque
%struct.T1_Hints_FuncsRec_ = type { %struct.T1_HintsRec_*, void (%struct.T1_HintsRec_*)*, i32 (%struct.T1_HintsRec_*, i32)*, void (%struct.T1_HintsRec_*, i32, i64*)*, void (%struct.T1_HintsRec_*, i32, i64*)*, void (%struct.T1_HintsRec_*, i32)*, i32 (%struct.T1_HintsRec_*, %struct.FT_Outline_*, %struct.PSH_GlobalsRec_*, i32)* }
%struct.T1_HintsRec_ = type opaque
%struct.T2_Hints_FuncsRec_ = type { %struct.T2_HintsRec_*, void (%struct.T2_HintsRec_*)*, i32 (%struct.T2_HintsRec_*, i32)*, void (%struct.T2_HintsRec_*, i32, i32, i64*)*, void (%struct.T2_HintsRec_*, i32, i32, i8*)*, void (%struct.T2_HintsRec_*, i32, i8*)*, i32 (%struct.T2_HintsRec_*, %struct.FT_Outline_*, %struct.PSH_GlobalsRec_*, i32)* }
%struct.T2_HintsRec_ = type opaque
%struct.FT_Service_PsCMapsRec_ = type { i32 (i8*)*, i32 (%struct.FT_MemoryRec_*, %struct.PS_UnicodesRec_*, i32, i8* (i8*, i32)*, void (i8*, i8*)*, i8*)*, i32 (%struct.PS_UnicodesRec_*, i32)*, i32 (%struct.PS_UnicodesRec_*, i32*)*, i8* (i32)*, i8* (i32)*, i16*, i16* }
%struct.PS_UnicodesRec_ = type { %struct.FT_CMapRec_, i32, %struct.PS_UniMap_* }
%struct.PS_UniMap_ = type { i32, i32 }
%struct.CFF_VStoreRec_ = type { i32, %struct.CFF_VarData_*, i16, i32, %struct.CFF_VarRegion_* }
%struct.CFF_VarData_ = type { i32, i32* }
%struct.CFF_VarRegion_ = type { %struct.CFF_AxisCoords_* }
%struct.CFF_AxisCoords_ = type { i64, i64, i64 }
%struct.CFF_Field_Handler_ = type { i32, i32, i32, i8, i32 (%struct.CFF_ParserRec_*)*, i32, i32 }
%struct.CFF_ParserRec_ = type { %struct.FT_LibraryRec_*, i8*, i8*, i8*, i8**, i8**, i32, i32, i8*, i16, i16 }
%struct.FT_Frame_Field_ = type { i8, i8, i16 }
%struct.CFF_CMapStdRec_ = type { %struct.FT_CMapRec_, i16* }
%struct.TT_FaceRec_ = type { %struct.FT_FaceRec_, %struct.TTC_HeaderRec_, i64, i16, %struct.TT_TableRec_*, %struct.TT_Header_, %struct.TT_HoriHeader_, %struct.TT_MaxProfile_, i8, %struct.TT_VertHeader_, i16, %struct.TT_NameTableRec_, %struct.TT_OS2_, %struct.TT_Postscript_, i8*, i64, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_LoaderRec_*, i32, i64, i32)*, void (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i8*, i8*, i8*, i8*, i8*, %struct.TT_Gasp_, %struct.TT_PCLT_, i64, %struct.TT_SBit_ScaleRec_*, %struct.TT_Post_NamesRec_, %struct.FT_Palette_Data_, i16, %struct.FT_Color_*, i8, %struct.FT_Color_, i64, i8*, i64, i8*, i64, i32*, i32 (i8*)*, %struct.FT_Generic_, i8*, i64, i64, i8, i8, %struct.GX_BlendRec_*, i32, i8*, i32, i64, i64, i64, i8*, i8*, i64, i32, i64, i8*, i8*, i64, i32, i32, i32*, i8*, i64, i32, i32, i32, i64, i64, i64, i64, i8*, i8* }
%struct.TTC_HeaderRec_ = type { i64, i64, i64, i64* }
%struct.TT_TableRec_ = type { i64, i64, i64, i64 }
%struct.TT_Header_ = type { i64, i64, i64, i64, i16, i16, [2 x i64], [2 x i64], i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_HoriHeader_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i16], i16, i16, i8*, i8* }
%struct.TT_MaxProfile_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_VertHeader_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i16], i16, i16, i8*, i8* }
%struct.TT_NameTableRec_ = type { i16, i32, i32, %struct.TT_NameRec_*, i32, %struct.TT_LangTagRec_*, %struct.FT_StreamRec_* }
%struct.TT_NameRec_ = type { i16, i16, i16, i16, i16, i64, i8* }
%struct.TT_LangTagRec_ = type { i16, i64, i8* }
%struct.TT_OS2_ = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [10 x i8], i64, i64, i64, i64, [4 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i64, i64, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_Postscript_ = type { i64, i64, i16, i16, i64, i64, i64, i64, i64 }
%struct.TT_LoaderRec_ = type { %struct.TT_FaceRec_*, %struct.TT_SizeRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, i64, i32, %struct.FT_StreamRec_*, i32, i16, %struct.FT_BBox_, i32, i32, i32, i8, %struct.FT_Vector_, %struct.FT_Vector_, %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_, %struct.TT_ExecContextRec_*, i8*, i64, i8*, i32, i32, %struct.FT_Vector_, %struct.FT_Vector_, i8*, i8*, %struct.FT_ListRec_ }
%struct.TT_SizeRec_ = type opaque
%struct.TT_GlyphZoneRec_ = type { %struct.FT_MemoryRec_*, i16, i16, i16, i16, %struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*, i16*, i16 }
%struct.TT_ExecContextRec_ = type opaque
%struct.TT_Gasp_ = type { i16, i16, %struct.TT_GaspRangeRec_* }
%struct.TT_GaspRangeRec_ = type { i16, i16 }
%struct.TT_PCLT_ = type { i64, i64, i16, i16, i16, i16, i16, i16, [16 x i8], [8 x i8], [6 x i8], i8, i8, i8, i8 }
%struct.TT_SBit_ScaleRec_ = type { %struct.TT_SBit_LineMetricsRec_, %struct.TT_SBit_LineMetricsRec_, i8, i8, i8, i8 }
%struct.TT_SBit_LineMetricsRec_ = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.TT_Post_NamesRec_ = type { i8, %union.anon }
%union.anon = type { %struct.TT_Post_20Rec_ }
%struct.TT_Post_20Rec_ = type { i16, i16, i16*, i8** }
%struct.FT_Palette_Data_ = type { i16, i16*, i16*, i16, i16* }
%struct.FT_Color_ = type { i8, i8, i8, i8 }
%struct.GX_BlendRec_ = type opaque
%struct.PS_DriverRec_ = type { %struct.FT_DriverRec_, i32, i8, [8 x i32], i32 }
%struct.SFNT_Interface_ = type { i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.TT_FaceRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)*, i32 (%struct.TT_FaceRec_*, i64, i64, i8*, i64*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, void (%struct.TT_FaceRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, i64, i32, i32, %struct.FT_StreamRec_*, %struct.FT_Bitmap_*, %struct.TT_SBit_MetricsRec_*)*, i32 (%struct.TT_FaceRec_*, i32, i8**)*, void (%struct.TT_FaceRec_*)*, i32 (%struct.TT_FaceRec_*, i32, i32)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, void (%struct.TT_FaceRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_Size_RequestRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_Size_Metrics_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, void (%struct.TT_FaceRec_*)*, void (%struct.TT_FaceRec_*)*, i32 (%struct.TT_FaceRec_*, i32)*, i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)*, i8 (%struct.TT_FaceRec_*, i32, i32, %struct.FT_Opaque_Paint_*)*, i8 (%struct.TT_FaceRec_*, %struct.FT_LayerIterator_*, %struct.FT_Opaque_Paint_*)*, i8 (%struct.TT_FaceRec_*, %struct.FT_ColorStop_*, %struct.FT_ColorStopIterator_*)*, i8 (%struct.TT_FaceRec_*, i8*, i8, %struct.FT_COLR_Paint_*)*, i32 (%struct.TT_FaceRec_*, i32, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)*, i32 (%struct.TT_FaceRec_*, i16, i8**)*, i8 (%struct.TT_FaceRec_*, i16, i32*, i32*)* }
%struct.TT_SBit_MetricsRec_ = type { i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.FT_LayerIterator_ = type { i32, i32, i8* }
%struct.FT_Opaque_Paint_ = type { i8*, i8 }
%struct.FT_ColorStop_ = type { i16, %struct.FT_ColorIndex_ }
%struct.FT_ColorIndex_ = type { i16, i16 }
%struct.FT_ColorStopIterator_ = type { i32, i32, i8* }
%struct.FT_COLR_Paint_ = type { i32, %union.anon.0 }
%union.anon.0 = type { %struct.FT_PaintLinearGradient_ }
%struct.FT_PaintLinearGradient_ = type { %struct.FT_ColorLine_, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_Vector_ }
%struct.FT_ColorLine_ = type { i32, %struct.FT_ColorStopIterator_ }
%struct.CFF_InternalRec_ = type { %struct.PSH_GlobalsRec_*, [256 x %struct.PSH_GlobalsRec_*] }
%struct.CFF_Decoder_ = type { %struct.CFF_Builder_, %struct.CFF_FontRec_*, [49 x i64], i64*, [17 x %struct.CFF_Decoder_Zone_], %struct.CFF_Decoder_Zone_*, i32, i32, [7 x %struct.FT_Vector_], i64, i64, i8, i8, i32, [32 x i64], i32, i32, i32, i32, i8**, i8**, i8**, i32, i32, i8, %struct.CFF_SubFontRec_*, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, void (%struct.TT_FaceRec_*, i8**, i64)* }
%struct.CFF_Builder_ = type { %struct.FT_MemoryRec_*, %struct.TT_FaceRec_*, %struct.CFF_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, %struct.FT_Outline_*, %struct.FT_Outline_*, i64, i64, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_BBox_, i8, i8, i8, i8, i8*, i8*, %struct.CFF_Builder_FuncsRec_ }
%struct.CFF_GlyphSlotRec_ = type { %struct.FT_GlyphSlotRec_, i8, i8, i64, i64 }
%struct.CFF_Builder_FuncsRec_ = type { void (%struct.CFF_Builder_*, %struct.TT_FaceRec_*, %struct.CFF_SizeRec_*, %struct.CFF_GlyphSlotRec_*, i8)*, void (%struct.CFF_Builder_*)*, i32 (%struct.CFF_Builder_*, i32)*, void (%struct.CFF_Builder_*, i64, i64, i8)*, i32 (%struct.CFF_Builder_*, i64, i64)*, i32 (%struct.CFF_Builder_*)*, i32 (%struct.CFF_Builder_*, i64, i64)*, void (%struct.CFF_Builder_*)* }
%struct.CFF_SizeRec_ = type { %struct.FT_SizeRec_, i64 }
%struct.CFF_Decoder_Zone_ = type { i8*, i8*, i8* }
%struct.PS_Decoder_ = type { %struct.PS_Builder_, [49 x i64], i64*, [17 x %struct.PS_Decoder_Zone_], %struct.PS_Decoder_Zone_*, i32, i32, [7 x %struct.FT_Vector_], %struct.CFF_FontRec_*, %struct.CFF_SubFontRec_*, %struct.FT_Generic_*, i64*, i8, i32, i32, i32, i32, i32, i8**, i8**, i8**, i32, i32, i8, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, void (%struct.TT_FaceRec_*, i8**, i64)*, %struct.FT_Service_PsCMapsRec_*, i32, i32*, %struct.FT_HashRec_*, %struct.FT_Matrix_, %struct.FT_Vector_, %struct.PS_BlendRec_*, i64*, i32 }
%struct.PS_Builder_ = type { %struct.FT_MemoryRec_*, %struct.FT_FaceRec_*, %struct.CFF_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, %struct.FT_Outline_*, %struct.FT_Outline_*, i64*, i64*, %struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_BBox_*, i8, i8, i8, i8, i8, %struct.PS_Builder_FuncsRec_ }
%struct.PS_Builder_FuncsRec_ = type { void (%struct.PS_Builder_*, i8*, i8)*, void (%struct.PS_Builder_*)* }
%struct.PS_Decoder_Zone_ = type { i8*, i8*, i8* }
%struct.FT_HashRec_ = type { i32, i32, i32, i64 (%union.FT_Hashkey_*)*, i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)*, %struct.FT_HashnodeRec_** }
%union.FT_Hashkey_ = type { i8* }
%struct.FT_HashnodeRec_ = type { %union.FT_Hashkey_, i64 }
%struct.PS_BlendRec_ = type { i32, i32, [4 x i8*], [16 x i64*], [4 x %struct.PS_DesignMap_], i64*, i64*, [17 x %struct.PS_FontInfoRec_*], [17 x %struct.PS_PrivateRec_*], i64, [17 x %struct.FT_BBox_*], [16 x i32], i32 }
%struct.PS_DesignMap_ = type { i8, i64*, i64* }
%struct.PSAux_ServiceRec_ = type { %struct.PS_Table_FuncsRec_*, %struct.PS_Parser_FuncsRec_*, %struct.T1_Builder_FuncsRec_*, %struct.T1_Decoder_FuncsRec_*, void (i8*, i64, i16)*, i32 (i32)*, void (%struct.PS_Decoder_*, i8*, i8)*, void (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*, %struct.CFF_SubFontRec_*)*, %struct.T1_CMap_ClassesRec_*, %struct.AFM_Parser_FuncsRec_*, %struct.CFF_Decoder_FuncsRec_* }
%struct.PS_Table_FuncsRec_ = type { i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)*, void (%struct.PS_TableRec_*)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, void (%struct.PS_TableRec_*)* }
%struct.PS_TableRec_ = type { i8*, i64, i64, i64, i32, i32, i8**, i32*, %struct.FT_MemoryRec_*, %struct.PS_Table_FuncsRec_ }
%struct.PS_Parser_FuncsRec_ = type { void (%struct.PS_ParserRec_*, i8*, i8*, %struct.FT_MemoryRec_*)*, void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*, i32)*, i32 (%struct.PS_ParserRec_*, i8*, i64, i64*, i8)*, i32 (%struct.PS_ParserRec_*, i32, i16*)*, i32 (%struct.PS_ParserRec_*, i32, i64*, i32)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)* }
%struct.PS_ParserRec_ = type { i8*, i8*, i8*, i32, %struct.FT_MemoryRec_*, %struct.PS_Parser_FuncsRec_ }
%struct.T1_TokenRec_ = type { i8*, i8*, i32 }
%struct.T1_FieldRec_ = type { i8*, i32, i32, void (%struct.FT_FaceRec_*, i8*)*, i32, i8, i32, i32, i32 }
%struct.T1_Builder_FuncsRec_ = type { void (%struct.T1_BuilderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8)*, void (%struct.T1_BuilderRec_*)*, i32 (%struct.T1_BuilderRec_*, i32)*, void (%struct.T1_BuilderRec_*, i64, i64, i8)*, i32 (%struct.T1_BuilderRec_*, i64, i64)*, i32 (%struct.T1_BuilderRec_*)*, i32 (%struct.T1_BuilderRec_*, i64, i64)*, void (%struct.T1_BuilderRec_*)* }
%struct.T1_BuilderRec_ = type { %struct.FT_MemoryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, %struct.FT_Outline_*, %struct.FT_Outline_*, i64, i64, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_BBox_, i32, i8, i8, i8, i8*, i8*, %struct.T1_Builder_FuncsRec_ }
%struct.T1_Decoder_FuncsRec_ = type { i32 (%struct.T1_DecoderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8**, %struct.PS_BlendRec_*, i8, i32, i32 (%struct.T1_DecoderRec_*, i32)*)*, void (%struct.T1_DecoderRec_*)*, i32 (%struct.T1_DecoderRec_*, i8*, i32)*, i32 (%struct.PS_Decoder_*, i8*, i64)* }
%struct.T1_DecoderRec_ = type { %struct.T1_BuilderRec_, [512 x i64], i64*, [17 x %struct.T1_Decoder_ZoneRec_], %struct.T1_Decoder_ZoneRec_*, %struct.FT_Service_PsCMapsRec_*, i32, i8**, i32, i32, i8**, i32*, %struct.FT_HashRec_*, %struct.FT_Matrix_, %struct.FT_Vector_, i32, i32, [7 x %struct.FT_Vector_], %struct.PS_BlendRec_*, i32, i32 (%struct.T1_DecoderRec_*, i32)*, %struct.T1_Decoder_FuncsRec_, i64*, i32, i8, %struct.FT_Generic_ }
%struct.T1_Decoder_ZoneRec_ = type { i8*, i8*, i8* }
%struct.T1_CMap_ClassesRec_ = type { %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_* }
%struct.AFM_Parser_FuncsRec_ = type { i32 (%struct.AFM_ParserRec_*, %struct.FT_MemoryRec_*, i8*, i8*)*, void (%struct.AFM_ParserRec_*)*, i32 (%struct.AFM_ParserRec_*)* }
%struct.AFM_ParserRec_ = type { %struct.FT_MemoryRec_*, %struct.AFM_StreamRec_*, %struct.AFM_FontInfoRec_*, i32 (i8*, i64, i8*)*, i8* }
%struct.AFM_StreamRec_ = type opaque
%struct.AFM_FontInfoRec_ = type { i8, %struct.FT_BBox_, i64, i64, %struct.AFM_TrackKernRec_*, i32, %struct.AFM_KernPairRec_*, i32 }
%struct.AFM_TrackKernRec_ = type { i32, i64, i64, i64, i64 }
%struct.AFM_KernPairRec_ = type { i32, i32, i32, i32 }
%struct.CFF_Decoder_FuncsRec_ = type { void (%struct.CFF_Decoder_*, %struct.TT_FaceRec_*, %struct.CFF_SizeRec_*, %struct.CFF_GlyphSlotRec_*, i8, i32, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, void (%struct.TT_FaceRec_*, i8**, i64)*)*, i32 (%struct.CFF_Decoder_*, %struct.CFF_SizeRec_*, i32)*, i32 (%struct.PS_Decoder_*, i8*, i64)* }

@cff_cmap_encoding_class_rec = hidden constant { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* } { i64 32, i32 (%struct.FT_CMapRec_*, i8*)* bitcast (i32 (%struct.CFF_CMapStdRec_*, i8*)* @cff_cmap_encoding_init to i32 (%struct.FT_CMapRec_*, i8*)*), void (%struct.FT_CMapRec_*)* bitcast (void (%struct.CFF_CMapStdRec_*)* @cff_cmap_encoding_done to void (%struct.FT_CMapRec_*)*), i32 (%struct.FT_CMapRec_*, i32)* bitcast (i32 (%struct.CFF_CMapStdRec_*, i32)* @cff_cmap_encoding_char_index to i32 (%struct.FT_CMapRec_*, i32)*), i32 (%struct.FT_CMapRec_*, i32*)* bitcast (i32 (%struct.CFF_CMapStdRec_*, i32*)* @cff_cmap_encoding_char_next to i32 (%struct.FT_CMapRec_*, i32*)*), i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)* null, i32 (%struct.FT_CMapRec_*, i32, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null }, align 8
@cff_cmap_unicode_class_rec = hidden constant { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* } { i64 40, i32 (%struct.FT_CMapRec_*, i8*)* bitcast (i32 (%struct.PS_UnicodesRec_*, i8*)* @cff_cmap_unicode_init to i32 (%struct.FT_CMapRec_*, i8*)*), void (%struct.FT_CMapRec_*)* bitcast (void (%struct.PS_UnicodesRec_*)* @cff_cmap_unicode_done to void (%struct.FT_CMapRec_*)*), i32 (%struct.FT_CMapRec_*, i32)* bitcast (i32 (%struct.PS_UnicodesRec_*, i32)* @cff_cmap_unicode_char_index to i32 (%struct.FT_CMapRec_*, i32)*), i32 (%struct.FT_CMapRec_*, i32*)* bitcast (i32 (%struct.PS_UnicodesRec_*, i32*)* @cff_cmap_unicode_char_next to i32 (%struct.FT_CMapRec_*, i32*)*), i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)* null, i32 (%struct.FT_CMapRec_*, i32, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null }, align 8
@.str = private unnamed_addr constant [4 x i8] c"cff\00", align 1
@cff_driver_class = hidden local_unnamed_addr constant %struct.FT_Driver_ClassRec_ { %struct.FT_Module_Class_ { i64 3329, i64 104, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i64 65536, i64 131072, i8* null, i32 (%struct.FT_ModuleRec_*)* @cff_driver_init, void (%struct.FT_ModuleRec_*)* @cff_driver_done, i8* (%struct.FT_ModuleRec_*, i8*)* @cff_get_interface }, i64 1432, i64 96, i64 328, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)* @cff_face_init, void (%struct.FT_FaceRec_*)* @cff_face_done, i32 (%struct.FT_SizeRec_*)* @cff_size_init, void (%struct.FT_SizeRec_*)* @cff_size_done, i32 (%struct.FT_GlyphSlotRec_*)* @cff_slot_init, void (%struct.FT_GlyphSlotRec_*)* @cff_slot_done, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)* @cff_glyph_load, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)* @cff_get_kerning, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)* null, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)* @cff_get_advances, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)* @cff_size_request, i32 (%struct.FT_SizeRec_*, i64)* @cff_size_select }, align 8
@cff_services = internal constant [11 x %struct.FT_ServiceDescRec_] [%struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.FT_Service_MultiMastersRec_* @cff_service_multi_masters to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i32 0, i32 0), i8* bitcast (%struct.FT_Service_MetricsVariationsRec_* @cff_service_metrics_variations to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.FT_Service_PsInfoRec_* @cff_service_ps_info to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.FT_Service_PsFontNameRec_* @cff_service_ps_name to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), i8* bitcast (%struct.FT_Service_GlyphDictRec_* @cff_service_glyph_dict to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), i8* bitcast (%struct.FT_Service_TTCMapsRec_* @cff_service_get_cmap_info to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8* bitcast (%struct.FT_Service_CIDRec_* @cff_service_cid_info to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i32 0, i32 0), i8* bitcast (%struct.FT_Service_PropertiesRec_* @cff_service_properties to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i8* bitcast (%struct.FT_Service_CFFLoadRec_* @cff_service_cff_load to i8*) }, %struct.FT_ServiceDescRec_ zeroinitializer], align 16
@.str.1 = private unnamed_addr constant [5 x i8] c"sfnt\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"font-format\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"CFF\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"multi-masters\00", align 1
@cff_service_multi_masters = internal constant %struct.FT_Service_MultiMastersRec_ { i32 (%struct.FT_FaceRec_*, %struct.FT_Multi_Master_*)* null, i32 (%struct.FT_FaceRec_*, i32, i64*)* null, i32 (%struct.FT_FaceRec_*, i32, i64*)* bitcast (i32 (%struct.TT_FaceRec_*, i32, i64*)* @cff_set_mm_blend to i32 (%struct.FT_FaceRec_*, i32, i64*)*), i32 (%struct.FT_FaceRec_*, i32, i64*)* bitcast (i32 (%struct.TT_FaceRec_*, i32, i64*)* @cff_get_mm_blend to i32 (%struct.FT_FaceRec_*, i32, i64*)*), i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)* bitcast (i32 (%struct.TT_FaceRec_*, %struct.FT_MM_Var_**)* @cff_get_mm_var to i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)*), i32 (%struct.FT_FaceRec_*, i32, i64*)* bitcast (i32 (%struct.TT_FaceRec_*, i32, i64*)* @cff_set_var_design to i32 (%struct.FT_FaceRec_*, i32, i64*)*), i32 (%struct.FT_FaceRec_*, i32, i64*)* bitcast (i32 (%struct.TT_FaceRec_*, i32, i64*)* @cff_get_var_design to i32 (%struct.FT_FaceRec_*, i32, i64*)*), i32 (%struct.FT_FaceRec_*, i32)* bitcast (i32 (%struct.TT_FaceRec_*, i32)* @cff_set_instance to i32 (%struct.FT_FaceRec_*, i32)*), i32 (%struct.FT_FaceRec_*, i32, i64*)* bitcast (i32 (%struct.TT_FaceRec_*, i32, i64*)* @cff_set_mm_weightvector to i32 (%struct.FT_FaceRec_*, i32, i64*)*), i32 (%struct.FT_FaceRec_*, i32*, i64*)* bitcast (i32 (%struct.TT_FaceRec_*, i32*, i64*)* @cff_get_mm_weightvector to i32 (%struct.FT_FaceRec_*, i32*, i64*)*), i32 (%struct.FT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)* bitcast (i32 (%struct.TT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)* @cff_get_var_blend to i32 (%struct.FT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)*), void (%struct.FT_FaceRec_*)* bitcast (void (%struct.TT_FaceRec_*)* @cff_done_blend to void (%struct.FT_FaceRec_*)*) }, align 8
@.str.5 = private unnamed_addr constant [19 x i8] c"metrics-variations\00", align 1
@cff_service_metrics_variations = internal constant %struct.FT_Service_MetricsVariationsRec_ { i32 (%struct.FT_FaceRec_*, i32, i32*)* bitcast (i32 (%struct.TT_FaceRec_*, i32, i32*)* @cff_hadvance_adjust to i32 (%struct.FT_FaceRec_*, i32, i32*)*), i32 (%struct.FT_FaceRec_*, i32, i32*)* null, i32 (%struct.FT_FaceRec_*, i32, i32*)* null, i32 (%struct.FT_FaceRec_*, i32, i32*)* null, i32 (%struct.FT_FaceRec_*, i32, i32*)* null, i32 (%struct.FT_FaceRec_*, i32, i32*)* null, i32 (%struct.FT_FaceRec_*, i32, i32*)* null, void (%struct.FT_FaceRec_*)* bitcast (void (%struct.TT_FaceRec_*)* @cff_metrics_adjust to void (%struct.FT_FaceRec_*)*) }, align 8
@.str.6 = private unnamed_addr constant [16 x i8] c"postscript-info\00", align 1
@cff_service_ps_info = internal constant %struct.FT_Service_PsInfoRec_ { i32 (%struct.FT_FaceRec_*, %struct.PS_FontInfoRec_*)* bitcast (i32 (%struct.TT_FaceRec_*, %struct.PS_FontInfoRec_*)* @cff_ps_get_font_info to i32 (%struct.FT_FaceRec_*, %struct.PS_FontInfoRec_*)*), i32 (%struct.FT_FaceRec_*, %struct.PS_FontExtraRec_*)* bitcast (i32 (%struct.TT_FaceRec_*, %struct.PS_FontExtraRec_*)* @cff_ps_get_font_extra to i32 (%struct.FT_FaceRec_*, %struct.PS_FontExtraRec_*)*), i32 (%struct.FT_FaceRec_*)* @cff_ps_has_glyph_names, i32 (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*)* null, i64 (%struct.FT_FaceRec_*, i32, i32, i8*, i64)* null }, align 8
@.str.7 = private unnamed_addr constant [21 x i8] c"postscript-font-name\00", align 1
@cff_service_ps_name = internal constant %struct.FT_Service_PsFontNameRec_ { i8* (%struct.FT_FaceRec_*)* bitcast (i8* (%struct.TT_FaceRec_*)* @cff_get_ps_name to i8* (%struct.FT_FaceRec_*)*) }, align 8
@.str.8 = private unnamed_addr constant [11 x i8] c"glyph-dict\00", align 1
@cff_service_glyph_dict = internal constant %struct.FT_Service_GlyphDictRec_ { i32 (%struct.FT_FaceRec_*, i32, i8*, i32)* bitcast (i32 (%struct.TT_FaceRec_*, i32, i8*, i32)* @cff_get_glyph_name to i32 (%struct.FT_FaceRec_*, i32, i8*, i32)*), i32 (%struct.FT_FaceRec_*, i8*)* bitcast (i32 (%struct.TT_FaceRec_*, i8*)* @cff_get_name_index to i32 (%struct.FT_FaceRec_*, i8*)*) }, align 8
@.str.9 = private unnamed_addr constant [9 x i8] c"tt-cmaps\00", align 1
@cff_service_get_cmap_info = internal constant %struct.FT_Service_TTCMapsRec_ { i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* @cff_get_cmap_info }, align 8
@.str.10 = private unnamed_addr constant [4 x i8] c"CID\00", align 1
@cff_service_cid_info = internal constant %struct.FT_Service_CIDRec_ { i32 (%struct.FT_FaceRec_*, i8**, i8**, i32*)* bitcast (i32 (%struct.TT_FaceRec_*, i8**, i8**, i32*)* @cff_get_ros to i32 (%struct.FT_FaceRec_*, i8**, i8**, i32*)*), i32 (%struct.FT_FaceRec_*, i8*)* bitcast (i32 (%struct.TT_FaceRec_*, i8*)* @cff_get_is_cid to i32 (%struct.FT_FaceRec_*, i8*)*), i32 (%struct.FT_FaceRec_*, i32, i32*)* bitcast (i32 (%struct.TT_FaceRec_*, i32, i32*)* @cff_get_cid_from_glyph_index to i32 (%struct.FT_FaceRec_*, i32, i32*)*) }, align 8
@.str.11 = private unnamed_addr constant [11 x i8] c"properties\00", align 1
@cff_service_properties = internal constant %struct.FT_Service_PropertiesRec_ { i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)* @ps_property_set, i32 (%struct.FT_ModuleRec_*, i8*, i8*)* @ps_property_get }, align 8
@.str.12 = private unnamed_addr constant [9 x i8] c"cff-load\00", align 1
@cff_service_cff_load = internal constant %struct.FT_Service_CFFLoadRec_ { i16 (i32)* @cff_get_standard_encoding, i32 (%struct.CFF_FontRec_*, %struct.CFF_SubFontRec_*, i32, i64*)* @cff_load_private_dict, i8 (%struct.CFF_FDSelectRec_*, i32)* @cff_fd_select_get, i8 (%struct.CFF_BlendRec_*, i32, i32, i64*)* @cff_blend_check_vector, i32 (%struct.CFF_BlendRec_*, i32, i32, i64*)* @cff_blend_build_vector }, align 8
@.str.13 = private unnamed_addr constant [8 x i8] c"/FSType\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"def\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"postscript-cmaps\00", align 1
@cff_standard_encoding = internal unnamed_addr constant [256 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 0, i16 111, i16 112, i16 113, i16 114, i16 0, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 0, i16 123, i16 0, i16 124, i16 125, i16 126, i16 127, i16 128, i16 129, i16 130, i16 131, i16 0, i16 132, i16 133, i16 0, i16 134, i16 135, i16 136, i16 137, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 138, i16 0, i16 139, i16 0, i16 0, i16 0, i16 0, i16 140, i16 141, i16 142, i16 143, i16 0, i16 0, i16 0, i16 0, i16 0, i16 144, i16 0, i16 0, i16 0, i16 145, i16 0, i16 0, i16 146, i16 147, i16 148, i16 149, i16 0, i16 0, i16 0, i16 0], align 16
@cff_field_handlers = internal unnamed_addr constant [77 x %struct.CFF_Field_Handler_] [%struct.CFF_Field_Handler_ { i32 4, i32 4096, i32 0, i8 4, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 4, i32 4097, i32 4, i8 4, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 4, i32 4352, i32 8, i8 4, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 4, i32 4098, i32 12, i8 4, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 4, i32 4099, i32 16, i8 4, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 4, i32 4100, i32 20, i8 4, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 5, i32 4353, i32 24, i8 1, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 2, i32 4354, i32 32, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 2, i32 4355, i32 40, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 2, i32 4356, i32 48, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 4357, i32 56, i8 4, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 4358, i32 60, i8 4, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 7, i32 4359, i32 0, i8 0, i32 (%struct.CFF_ParserRec_*)* @cff_parse_font_matrix, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 4109, i32 128, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 7, i32 4101, i32 0, i8 0, i32 (%struct.CFF_ParserRec_*)* @cff_parse_font_bbox, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 4360, i32 168, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 4111, i32 176, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 4112, i32 184, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 4113, i32 192, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 7, i32 4114, i32 0, i8 0, i32 (%struct.CFF_ParserRec_*)* @cff_parse_private_dict, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 4372, i32 216, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 4, i32 4373, i32 224, i8 4, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 7, i32 4376, i32 0, i8 0, i32 (%struct.CFF_ParserRec_*)* @cff_parse_multiple_master, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 7, i32 4382, i32 0, i8 0, i32 (%struct.CFF_ParserRec_*)* @cff_parse_cid_ros, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 4383, i32 248, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 4384, i32 256, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 4385, i32 264, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 4386, i32 272, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 4387, i32 280, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 4388, i32 288, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 4389, i32 296, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 4, i32 4390, i32 304, i8 4, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 6, i32 8198, i32 8, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 14, i32 0 }, %struct.CFF_Field_Handler_ { i32 6, i32 8199, i32 120, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 10, i32 1 }, %struct.CFF_Field_Handler_ { i32 6, i32 8200, i32 200, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 14, i32 2 }, %struct.CFF_Field_Handler_ { i32 6, i32 8201, i32 312, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 10, i32 3 }, %struct.CFF_Field_Handler_ { i32 3, i32 8457, i32 392, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 8458, i32 400, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 8459, i32 408, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 8202, i32 416, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 8203, i32 424, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 6, i32 8460, i32 440, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 13, i32 432 }, %struct.CFF_Field_Handler_ { i32 6, i32 8461, i32 544, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 13, i32 433 }, %struct.CFF_Field_Handler_ { i32 5, i32 8462, i32 648, i8 1, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 2, i32 8463, i32 656, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 8464, i32 664, i8 4, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 8465, i32 668, i8 4, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 2, i32 8466, i32 672, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 8467, i32 680, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 8211, i32 688, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 8212, i32 696, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 8213, i32 704, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 7, i32 12551, i32 0, i8 0, i32 (%struct.CFF_ParserRec_*)* @cff_parse_font_matrix, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 12305, i32 192, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 12580, i32 288, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 12581, i32 296, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 12312, i32 312, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 7, i32 12313, i32 0, i8 0, i32 (%struct.CFF_ParserRec_*)* @cff_parse_maxstack, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 7, i32 16402, i32 0, i8 0, i32 (%struct.CFF_ParserRec_*)* @cff_parse_private_dict, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 7, i32 16647, i32 0, i8 0, i32 (%struct.CFF_ParserRec_*)* @cff_parse_font_matrix, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 6, i32 20486, i32 8, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 14, i32 0 }, %struct.CFF_Field_Handler_ { i32 6, i32 20487, i32 120, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 10, i32 1 }, %struct.CFF_Field_Handler_ { i32 6, i32 20488, i32 200, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 14, i32 2 }, %struct.CFF_Field_Handler_ { i32 6, i32 20489, i32 312, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 10, i32 3 }, %struct.CFF_Field_Handler_ { i32 3, i32 20745, i32 392, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 20746, i32 400, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 20747, i32 408, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 20490, i32 416, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 20491, i32 424, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 6, i32 20748, i32 440, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 13, i32 432 }, %struct.CFF_Field_Handler_ { i32 6, i32 20749, i32 544, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 13, i32 433 }, %struct.CFF_Field_Handler_ { i32 1, i32 20753, i32 668, i8 4, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 2, i32 20754, i32 672, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 7, i32 20502, i32 0, i8 0, i32 (%struct.CFF_ParserRec_*)* @cff_parse_vsindex, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 8, i32 20503, i32 0, i8 0, i32 (%struct.CFF_ParserRec_*)* @cff_parse_blend, i32 0, i32 0 }, %struct.CFF_Field_Handler_ { i32 1, i32 20499, i32 688, i8 8, i32 (%struct.CFF_ParserRec_*)* null, i32 0, i32 0 }, %struct.CFF_Field_Handler_ zeroinitializer], align 16
@power_tens = internal unnamed_addr constant [10 x i64] [i64 1, i64 10, i64 100, i64 1000, i64 10000, i64 100000, i64 1000000, i64 10000000, i64 100000000, i64 1000000000], align 16
@.str.16 = private unnamed_addr constant [9 x i8] c"pshinter\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"psaux\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"Regular\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"Bold\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"Black\00", align 1
@cff_font_load.cff_header_fields = internal constant [5 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 3 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 40 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 41 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 42 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@cff_isoadobe_charset = internal unnamed_addr constant [229 x i16] [i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 141, i16 142, i16 143, i16 144, i16 145, i16 146, i16 147, i16 148, i16 149, i16 150, i16 151, i16 152, i16 153, i16 154, i16 155, i16 156, i16 157, i16 158, i16 159, i16 160, i16 161, i16 162, i16 163, i16 164, i16 165, i16 166, i16 167, i16 168, i16 169, i16 170, i16 171, i16 172, i16 173, i16 174, i16 175, i16 176, i16 177, i16 178, i16 179, i16 180, i16 181, i16 182, i16 183, i16 184, i16 185, i16 186, i16 187, i16 188, i16 189, i16 190, i16 191, i16 192, i16 193, i16 194, i16 195, i16 196, i16 197, i16 198, i16 199, i16 200, i16 201, i16 202, i16 203, i16 204, i16 205, i16 206, i16 207, i16 208, i16 209, i16 210, i16 211, i16 212, i16 213, i16 214, i16 215, i16 216, i16 217, i16 218, i16 219, i16 220, i16 221, i16 222, i16 223, i16 224, i16 225, i16 226, i16 227, i16 228], align 16
@cff_expert_charset = internal unnamed_addr constant [166 x i16] [i16 0, i16 1, i16 229, i16 230, i16 231, i16 232, i16 233, i16 234, i16 235, i16 236, i16 237, i16 238, i16 13, i16 14, i16 15, i16 99, i16 239, i16 240, i16 241, i16 242, i16 243, i16 244, i16 245, i16 246, i16 247, i16 248, i16 27, i16 28, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 109, i16 110, i16 267, i16 268, i16 269, i16 270, i16 271, i16 272, i16 273, i16 274, i16 275, i16 276, i16 277, i16 278, i16 279, i16 280, i16 281, i16 282, i16 283, i16 284, i16 285, i16 286, i16 287, i16 288, i16 289, i16 290, i16 291, i16 292, i16 293, i16 294, i16 295, i16 296, i16 297, i16 298, i16 299, i16 300, i16 301, i16 302, i16 303, i16 304, i16 305, i16 306, i16 307, i16 308, i16 309, i16 310, i16 311, i16 312, i16 313, i16 314, i16 315, i16 316, i16 317, i16 318, i16 158, i16 155, i16 163, i16 319, i16 320, i16 321, i16 322, i16 323, i16 324, i16 325, i16 326, i16 150, i16 164, i16 169, i16 327, i16 328, i16 329, i16 330, i16 331, i16 332, i16 333, i16 334, i16 335, i16 336, i16 337, i16 338, i16 339, i16 340, i16 341, i16 342, i16 343, i16 344, i16 345, i16 346, i16 347, i16 348, i16 349, i16 350, i16 351, i16 352, i16 353, i16 354, i16 355, i16 356, i16 357, i16 358, i16 359, i16 360, i16 361, i16 362, i16 363, i16 364, i16 365, i16 366, i16 367, i16 368, i16 369, i16 370, i16 371, i16 372, i16 373, i16 374, i16 375, i16 376, i16 377, i16 378], align 16
@cff_expertsubset_charset = internal unnamed_addr constant [87 x i16] [i16 0, i16 1, i16 231, i16 232, i16 235, i16 236, i16 237, i16 238, i16 13, i16 14, i16 15, i16 99, i16 239, i16 240, i16 241, i16 242, i16 243, i16 244, i16 245, i16 246, i16 247, i16 248, i16 27, i16 28, i16 249, i16 250, i16 251, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 109, i16 110, i16 267, i16 268, i16 269, i16 270, i16 272, i16 300, i16 301, i16 302, i16 305, i16 314, i16 315, i16 158, i16 155, i16 163, i16 320, i16 321, i16 322, i16 323, i16 324, i16 325, i16 326, i16 150, i16 164, i16 169, i16 327, i16 328, i16 329, i16 330, i16 331, i16 332, i16 333, i16 334, i16 335, i16 336, i16 337, i16 338, i16 339, i16 340, i16 341, i16 342, i16 343, i16 344, i16 345, i16 346], align 16
@cff_expert_encoding = internal unnamed_addr constant [256 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1, i16 229, i16 230, i16 0, i16 231, i16 232, i16 233, i16 234, i16 235, i16 236, i16 237, i16 238, i16 13, i16 14, i16 15, i16 99, i16 239, i16 240, i16 241, i16 242, i16 243, i16 244, i16 245, i16 246, i16 247, i16 248, i16 27, i16 28, i16 249, i16 250, i16 251, i16 252, i16 0, i16 253, i16 254, i16 255, i16 256, i16 257, i16 0, i16 0, i16 0, i16 258, i16 0, i16 0, i16 259, i16 260, i16 261, i16 262, i16 0, i16 0, i16 263, i16 264, i16 265, i16 0, i16 266, i16 109, i16 110, i16 267, i16 268, i16 269, i16 0, i16 270, i16 271, i16 272, i16 273, i16 274, i16 275, i16 276, i16 277, i16 278, i16 279, i16 280, i16 281, i16 282, i16 283, i16 284, i16 285, i16 286, i16 287, i16 288, i16 289, i16 290, i16 291, i16 292, i16 293, i16 294, i16 295, i16 296, i16 297, i16 298, i16 299, i16 300, i16 301, i16 302, i16 303, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 304, i16 305, i16 306, i16 0, i16 0, i16 307, i16 308, i16 309, i16 310, i16 311, i16 0, i16 312, i16 0, i16 0, i16 312, i16 0, i16 0, i16 314, i16 315, i16 0, i16 0, i16 316, i16 317, i16 318, i16 0, i16 0, i16 0, i16 158, i16 155, i16 163, i16 319, i16 320, i16 321, i16 322, i16 323, i16 324, i16 325, i16 0, i16 0, i16 326, i16 150, i16 164, i16 169, i16 327, i16 328, i16 329, i16 330, i16 331, i16 332, i16 333, i16 334, i16 335, i16 336, i16 337, i16 338, i16 339, i16 340, i16 341, i16 342, i16 343, i16 344, i16 345, i16 346, i16 347, i16 348, i16 349, i16 350, i16 351, i16 352, i16 353, i16 354, i16 355, i16 356, i16 357, i16 358, i16 359, i16 360, i16 361, i16 362, i16 363, i16 364, i16 365, i16 366, i16 367, i16 368, i16 369, i16 370, i16 371, i16 372, i16 373, i16 374, i16 375, i16 376, i16 377, i16 378], align 16

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @cff_cmap_encoding_init(%struct.CFF_CMapStdRec_* nocapture, i8* nocapture readnone) #0 {
  %3 = bitcast %struct.CFF_CMapStdRec_* %0 to %struct.TT_FaceRec_**
  %4 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 44, i32 0
  %6 = bitcast i8** %5 to %struct.CFF_FontRec_**
  %7 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %6, align 8
  %8 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 14, i32 4, i64 0
  %9 = getelementptr inbounds %struct.CFF_CMapStdRec_, %struct.CFF_CMapStdRec_* %0, i64 0, i32 1
  store i16* %8, i16** %9, align 8
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @cff_cmap_encoding_done(%struct.CFF_CMapStdRec_* nocapture) #1 {
  %2 = getelementptr inbounds %struct.CFF_CMapStdRec_, %struct.CFF_CMapStdRec_* %0, i64 0, i32 1
  store i16* null, i16** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @cff_cmap_encoding_char_index(%struct.CFF_CMapStdRec_* nocapture readonly, i32) #2 {
  %3 = icmp ult i32 %1, 256
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.CFF_CMapStdRec_, %struct.CFF_CMapStdRec_* %0, i64 0, i32 1
  %6 = load i16*, i16** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds i16, i16* %6, i64 %7
  %9 = load i16, i16* %8, align 2
  %10 = zext i16 %9 to i32
  br label %11

11:                                               ; preds = %4, %2
  %12 = phi i32 [ %10, %4 ], [ 0, %2 ]
  ret i32 %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @cff_cmap_encoding_char_next(%struct.CFF_CMapStdRec_* nocapture readonly, i32* nocapture) #0 {
  %3 = load i32, i32* %1, align 4
  store i32 0, i32* %1, align 4
  %4 = icmp ult i32 %3, 255
  br i1 %4, label %5, label %22

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.CFF_CMapStdRec_, %struct.CFF_CMapStdRec_* %0, i64 0, i32 1
  %7 = zext i32 %3 to i64
  br label %8

8:                                                ; preds = %5, %13
  %9 = phi i64 [ %7, %5 ], [ %19, %13 ]
  %10 = trunc i64 %9 to i32
  %11 = add nsw i32 %10, 1
  %12 = icmp ugt i32 %11, 255
  br i1 %12, label %22, label %13

13:                                               ; preds = %8
  %14 = load i16*, i16** %6, align 8
  %15 = zext i32 %11 to i64
  %16 = getelementptr inbounds i16, i16* %14, i64 %15
  %17 = load i16, i16* %16, align 2
  %18 = icmp eq i16 %17, 0
  %19 = add nuw nsw i64 %9, 1
  br i1 %18, label %8, label %20

20:                                               ; preds = %13
  %21 = zext i16 %17 to i32
  store i32 %11, i32* %1, align 4
  br label %22

22:                                               ; preds = %8, %20, %2
  %23 = phi i32 [ 0, %2 ], [ %21, %20 ], [ 0, %8 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_cmap_unicode_init(%struct.PS_UnicodesRec_*, i8* nocapture readnone) #3 {
  %3 = getelementptr inbounds %struct.PS_UnicodesRec_, %struct.PS_UnicodesRec_* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 0, i32 25
  %6 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 4, i32 24
  %8 = bitcast %struct.FT_DriverRec_** %7 to %struct.CFF_FontRec_**
  %9 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %8, align 8
  %10 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %9, i64 0, i32 15, i32 2
  %11 = load i16*, i16** %10, align 8
  %12 = icmp eq i16* %11, null
  br i1 %12, label %24, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %9, i64 0, i32 31
  %15 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %14, align 8
  %16 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %15, i64 0, i32 1
  %17 = load i32 (%struct.FT_MemoryRec_*, %struct.PS_UnicodesRec_*, i32, i8* (i8*, i32)*, void (i8*, i8*)*, i8*)*, i32 (%struct.FT_MemoryRec_*, %struct.PS_UnicodesRec_*, i32, i8* (i8*, i32)*, void (i8*, i8*)*, i8*)** %16, align 8
  %18 = icmp eq i32 (%struct.FT_MemoryRec_*, %struct.PS_UnicodesRec_*, i32, i8* (i8*, i32)*, void (i8*, i8*)*, i8*)* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %9, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = bitcast %struct.FT_FaceRec_* %4 to i8*
  %23 = tail call i32 %17(%struct.FT_MemoryRec_* %6, %struct.PS_UnicodesRec_* %0, i32 %21, i8* (i8*, i32)* bitcast (i8* (%struct.TT_FaceRec_*, i32)* @cff_sid_to_glyph_name to i8* (i8*, i32)*), void (i8*, i8*)* null, i8* %22) #11
  br label %24

24:                                               ; preds = %13, %2, %19
  %25 = phi i32 [ %23, %19 ], [ 163, %2 ], [ 7, %13 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal void @cff_cmap_unicode_done(%struct.PS_UnicodesRec_* nocapture) #3 {
  %2 = getelementptr inbounds %struct.PS_UnicodesRec_, %struct.PS_UnicodesRec_* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %2, align 8
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3, i64 0, i32 25
  %5 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %4, align 8
  %6 = getelementptr inbounds %struct.PS_UnicodesRec_, %struct.PS_UnicodesRec_* %0, i64 0, i32 2
  %7 = bitcast %struct.PS_UniMap_** %6 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %8) #11
  store %struct.PS_UniMap_* null, %struct.PS_UniMap_** %6, align 8
  %9 = getelementptr inbounds %struct.PS_UnicodesRec_, %struct.PS_UnicodesRec_* %0, i64 0, i32 1
  store i32 0, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_cmap_unicode_char_index(%struct.PS_UnicodesRec_*, i32) #3 {
  %3 = bitcast %struct.PS_UnicodesRec_* %0 to %struct.TT_FaceRec_**
  %4 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 44, i32 0
  %6 = bitcast i8** %5 to %struct.CFF_FontRec_**
  %7 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %6, align 8
  %8 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 31
  %9 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %9, i64 0, i32 2
  %11 = load i32 (%struct.PS_UnicodesRec_*, i32)*, i32 (%struct.PS_UnicodesRec_*, i32)** %10, align 8
  %12 = tail call i32 %11(%struct.PS_UnicodesRec_* %0, i32 %1) #11
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_cmap_unicode_char_next(%struct.PS_UnicodesRec_*, i32*) #3 {
  %3 = bitcast %struct.PS_UnicodesRec_* %0 to %struct.TT_FaceRec_**
  %4 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 44, i32 0
  %6 = bitcast i8** %5 to %struct.CFF_FontRec_**
  %7 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %6, align 8
  %8 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 31
  %9 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %9, i64 0, i32 3
  %11 = load i32 (%struct.PS_UnicodesRec_*, i32*)*, i32 (%struct.PS_UnicodesRec_*, i32*)** %10, align 8
  %12 = tail call i32 %11(%struct.PS_UnicodesRec_* %0, i32* %1) #11
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_driver_init(%struct.FT_ModuleRec_*) #3 {
  %2 = alloca %struct.FT_ModuleRec_*, align 8
  %3 = alloca i32, align 4
  store %struct.FT_ModuleRec_* %0, %struct.FT_ModuleRec_** %2, align 8
  %4 = bitcast %struct.FT_ModuleRec_* %0 to %struct.PS_DriverRec_*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #11
  %6 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 2, i32 1
  %7 = bitcast %struct.FT_LibraryRec_** %6 to i32*
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds %struct.PS_DriverRec_, %struct.PS_DriverRec_* %4, i64 0, i32 2
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 2, i32 2
  %10 = bitcast %struct.FT_MemoryRec_** %9 to <4 x i32>*
  store <4 x i32> <i32 500, i32 400, i32 1000, i32 275>, <4 x i32>* %10, align 8
  %11 = getelementptr inbounds %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %9, i64 2
  %12 = bitcast %struct.FT_MemoryRec_** %11 to <4 x i32>*
  store <4 x i32> <i32 1667, i32 275, i32 2333, i32 0>, <4 x i32>* %12, align 8
  %13 = ptrtoint i32* %3 to i64
  %14 = ptrtoint %struct.FT_ModuleRec_** %2 to i64
  %15 = xor i64 %13, %14
  %16 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 0, i32 2
  %17 = bitcast %struct.FT_MemoryRec_** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = xor i64 %15, %18
  %20 = trunc i64 %19 to i32
  %21 = lshr i32 %20, 10
  %22 = xor i32 %21, %20
  %23 = lshr i32 %20, 20
  %24 = xor i32 %22, %23
  store i32 %24, i32* %3, align 4
  %25 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 4
  %26 = bitcast %struct.FT_ModuleRec_* %25 to i32*
  store i32 %24, i32* %26, align 8
  %27 = icmp slt i32 %24, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %1
  %29 = sub nsw i32 0, %24
  br label %32

30:                                               ; preds = %1
  %31 = icmp eq i32 %24, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ 123456789, %30 ]
  store i32 %33, i32* %26, align 8
  br label %34

34:                                               ; preds = %32, %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #11
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @cff_driver_done(%struct.FT_ModuleRec_* nocapture) #4 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @cff_get_interface(%struct.FT_ModuleRec_* readonly, i8*) #3 {
  %3 = tail call i8* @ft_service_list_lookup(%struct.FT_ServiceDescRec_* getelementptr inbounds ([11 x %struct.FT_ServiceDescRec_], [11 x %struct.FT_ServiceDescRec_]* @cff_services, i64 0, i64 0), i8* %1) #11
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %20

5:                                                ; preds = %2
  %6 = icmp eq %struct.FT_ModuleRec_* %0, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 0, i32 1
  %9 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %8, align 8
  %10 = icmp eq %struct.FT_LibraryRec_* %9, null
  br i1 %10, label %20, label %11

11:                                               ; preds = %7
  %12 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* nonnull %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #11
  %13 = icmp eq %struct.FT_ModuleRec_* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %12, i64 0, i32 0
  %16 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %16, i64 0, i32 8
  %18 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %17, align 8
  %19 = tail call i8* %18(%struct.FT_ModuleRec_* nonnull %12, i8* %1) #11
  br label %20

20:                                               ; preds = %14, %11, %7, %5, %2
  %21 = phi i8* [ %3, %2 ], [ null, %5 ], [ null, %7 ], [ %19, %14 ], [ null, %11 ]
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_face_init(%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*) #3 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %struct.CFF_IndexRec_, align 8
  %24 = alloca %struct.CFF_IndexRec_, align 8
  %25 = alloca i32, align 4
  %26 = alloca %struct.FT_CharMapRec_, align 8
  %27 = bitcast %struct.FT_FaceRec_* %1 to %struct.TT_FaceRec_*
  %28 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #11
  store i32 -1431655766, i32* %25, align 4
  %29 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 24
  %30 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %29, align 8
  %31 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %30, i64 0, i32 0, i32 1
  %32 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %31, align 8
  %33 = tail call i8* @FT_Get_Module_Interface(%struct.FT_LibraryRec_* %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #11
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %5
  store i32 11, i32* %25, align 4
  br label %2357

36:                                               ; preds = %5
  %37 = bitcast %struct.FT_DriverRec_** %29 to %struct.FT_ModuleRec_**
  %38 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %37, align 8
  %39 = tail call i8* @ft_module_get_service(%struct.FT_ModuleRec_* %38, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i8 zeroext 1) #11
  %40 = tail call i8* @FT_Get_Module_Interface(%struct.FT_LibraryRec_* %32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0)) #11
  %41 = tail call i8* @FT_Get_Module_Interface(%struct.FT_LibraryRec_* %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #11
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %44

43:                                               ; preds = %36
  store i32 11, i32* %25, align 4
  br label %2357

44:                                               ; preds = %36
  %45 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 23
  %46 = bitcast %struct.FT_CharMapRec_** %45 to i8**
  store i8* %41, i8** %46, align 8
  %47 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %37, align 8
  %48 = tail call i8* @ft_module_get_service(%struct.FT_ModuleRec_* %47, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i8 zeroext 1) #11
  %49 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %0, i64 0) #11
  store i32 %49, i32* %25, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %2357

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %33, i64 8
  %53 = bitcast i8* %52 to i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)**
  %54 = load i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)** %53, align 8
  %55 = tail call i32 %54(%struct.FT_StreamRec_* %0, %struct.TT_FaceRec_* %27, i32 %2, i32 %3, %struct.FT_Parameter_* %4) #11
  store i32 %55, i32* %25, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %97

57:                                               ; preds = %51
  %58 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 4
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, 1330926671
  br i1 %60, label %62, label %61

61:                                               ; preds = %57
  store i32 2, i32* %25, align 4
  br label %2357

62:                                               ; preds = %57
  %63 = icmp slt i32 %2, 0
  br i1 %63, label %2357, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 11
  %66 = bitcast %struct.FT_Generic_* %65 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %67 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %66, align 8
  %68 = tail call i32 %67(%struct.TT_FaceRec_* %27, i64 1751474532, %struct.FT_StreamRec_* %0, i64* null) #11
  store i32 %68, i32* %25, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %76

70:                                               ; preds = %64
  %71 = getelementptr inbounds i8, i8* %33, i64 16
  %72 = bitcast i8* %71 to i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)**
  %73 = load i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)** %72, align 8
  %74 = tail call i32 %73(%struct.FT_StreamRec_* %0, %struct.TT_FaceRec_* %27, i32 %2, i32 %3, %struct.FT_Parameter_* %4) #11
  store i32 %74, i32* %25, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %82, label %2357

76:                                               ; preds = %64
  %77 = getelementptr inbounds i8, i8* %33, i64 64
  %78 = bitcast i8* %77 to i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)**
  %79 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)** %78, align 8
  %80 = tail call i32 %79(%struct.TT_FaceRec_* %27, %struct.FT_StreamRec_* %0) #11
  store i32 %80, i32* %25, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %2357

82:                                               ; preds = %76, %70
  %83 = phi i8 [ 1, %76 ], [ 0, %70 ]
  %84 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %66, align 8
  %85 = tail call i32 %84(%struct.TT_FaceRec_* %27, i64 1128678962, %struct.FT_StreamRec_* %0, i64* null) #11
  store i32 %85, i32* %25, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 4, i32 28
  %89 = bitcast %struct.FT_Generic_* %88 to i8*
  store i8 1, i8* %89, align 8
  br label %101

90:                                               ; preds = %82
  %91 = and i32 %85, 255
  %92 = icmp eq i32 %91, 142
  br i1 %92, label %93, label %2357

93:                                               ; preds = %90
  %94 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %66, align 8
  %95 = tail call i32 %94(%struct.TT_FaceRec_* %27, i64 1128678944, %struct.FT_StreamRec_* %0, i64* null) #11
  store i32 %95, i32* %25, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %101, label %2357

97:                                               ; preds = %51
  %98 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %0, i64 0) #11
  store i32 %98, i32* %25, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %2357

100:                                              ; preds = %97
  store i32 0, i32* %25, align 4
  br label %101

101:                                              ; preds = %87, %93, %100
  %102 = phi i8 [ 1, %100 ], [ %83, %93 ], [ %83, %87 ]
  %103 = phi i8 [ 0, %100 ], [ 0, %93 ], [ 1, %87 ]
  %104 = phi i8 [ 0, %100 ], [ 1, %93 ], [ 1, %87 ]
  %105 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 25
  %106 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %105, align 8
  %107 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %106, i64 5056, i32* nonnull %25) #11
  %108 = bitcast i8* %107 to %struct.CFF_FontRec_*
  %109 = load i32, i32* %25, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %2357

111:                                              ; preds = %101
  %112 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 4, i32 24
  %113 = bitcast %struct.FT_DriverRec_** %112 to i8**
  store i8* %107, i8** %113, align 8
  %114 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #11
  %115 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 7
  %116 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %115, align 8
  %117 = bitcast %struct.CFF_IndexRec_* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %117) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 5056, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 0, i64 64, i1 false) #11
  %118 = getelementptr inbounds i8, i8* %107, i64 1640
  %119 = bitcast i8* %118 to %struct.CFF_SubFontRec_*
  %120 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %0) #11
  %121 = bitcast i8* %107 to %struct.FT_LibraryRec_**
  store %struct.FT_LibraryRec_* %32, %struct.FT_LibraryRec_** %121, align 8
  %122 = getelementptr inbounds i8, i8* %107, i64 8
  %123 = bitcast i8* %122 to %struct.FT_StreamRec_**
  store %struct.FT_StreamRec_* %0, %struct.FT_StreamRec_** %123, align 8
  %124 = getelementptr inbounds i8, i8* %107, i64 16
  %125 = bitcast i8* %124 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %116, %struct.FT_MemoryRec_** %125, align 8
  %126 = getelementptr inbounds i8, i8* %107, i64 48
  store i8 %103, i8* %126, align 8
  %127 = getelementptr inbounds i8, i8* %107, i64 24
  %128 = bitcast i8* %127 to i64*
  store i64 %120, i64* %128, align 8
  %129 = call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %0, %struct.FT_Frame_Field_* getelementptr inbounds ([5 x %struct.FT_Frame_Field_], [5 x %struct.FT_Frame_Field_]* @cff_font_load.cff_header_fields, i64 0, i64 0), i8* %107) #11
  store i32 %129, i32* %22, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %1522

131:                                              ; preds = %111
  %132 = icmp ne i8 %103, 0
  br i1 %132, label %133, label %151

133:                                              ; preds = %131
  %134 = getelementptr inbounds i8, i8* %107, i64 40
  %135 = load i8, i8* %134, align 8
  %136 = icmp eq i8 %135, 2
  br i1 %136, label %137, label %141

137:                                              ; preds = %133
  %138 = getelementptr inbounds i8, i8* %107, i64 42
  %139 = load i8, i8* %138, align 2
  %140 = icmp ult i8 %139, 5
  br i1 %140, label %141, label %142

141:                                              ; preds = %137, %133
  store i32 2, i32* %22, align 4
  br label %1522

142:                                              ; preds = %137
  %143 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %22) #11
  %144 = zext i16 %143 to i32
  %145 = getelementptr inbounds i8, i8* %107, i64 44
  %146 = bitcast i8* %145 to i32*
  store i32 %144, i32* %146, align 4
  %147 = load i32, i32* %22, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %1522

149:                                              ; preds = %142
  %150 = load i8, i8* %138, align 2
  br label %166

151:                                              ; preds = %131
  %152 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %22) #11
  %153 = load i32, i32* %22, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %1522

155:                                              ; preds = %151
  %156 = getelementptr inbounds i8, i8* %107, i64 40
  %157 = load i8, i8* %156, align 8
  %158 = icmp eq i8 %157, 1
  br i1 %158, label %159, label %165

159:                                              ; preds = %155
  %160 = getelementptr inbounds i8, i8* %107, i64 42
  %161 = load i8, i8* %160, align 2
  %162 = icmp ult i8 %161, 4
  %163 = icmp ugt i8 %152, 4
  %164 = or i1 %163, %162
  br i1 %164, label %165, label %166

165:                                              ; preds = %159, %155
  store i32 2, i32* %22, align 4
  br label %1522

166:                                              ; preds = %159, %149
  %167 = phi i8 [ %150, %149 ], [ %161, %159 ]
  %168 = zext i8 %167 to i64
  %169 = add i64 %120, %168
  %170 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %0, i64 %169) #11
  store i32 %170, i32* %22, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %175, label %172

172:                                              ; preds = %166
  %173 = icmp eq i8 %102, 0
  br i1 %173, label %1522, label %174

174:                                              ; preds = %172
  store i32 2, i32* %22, align 4
  br label %1522

175:                                              ; preds = %166
  br i1 %132, label %176, label %194

176:                                              ; preds = %175
  %177 = getelementptr inbounds i8, i8* %107, i64 1400
  call void @llvm.memset.p0i8.i64(i8* align 8 %177, i8 0, i64 64, i1 false) #11
  %178 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %0) #11
  %179 = getelementptr inbounds i8, i8* %107, i64 1432
  %180 = bitcast i8* %179 to i64*
  store i64 %178, i64* %180, align 8
  %181 = getelementptr inbounds i8, i8* %107, i64 44
  %182 = bitcast i8* %181 to i32*
  %183 = load i32, i32* %182, align 4
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds i8, i8* %107, i64 1440
  %186 = bitcast i8* %185 to i64*
  store i64 %184, i64* %186, align 8
  %187 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %0, i64 %184) #11
  store i32 %187, i32* %22, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %1522

189:                                              ; preds = %176
  %190 = getelementptr inbounds i8, i8* %107, i64 184
  %191 = bitcast i8* %190 to %struct.CFF_IndexRec_*
  %192 = call fastcc i32 @cff_index_init(%struct.CFF_IndexRec_* %191, %struct.FT_StreamRec_* %0, i8 zeroext 1, i8 zeroext %103) #11
  store i32 %192, i32* %22, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %245, label %1522

194:                                              ; preds = %175
  %195 = getelementptr inbounds i8, i8* %107, i64 56
  %196 = bitcast i8* %195 to %struct.CFF_IndexRec_*
  %197 = call fastcc i32 @cff_index_init(%struct.CFF_IndexRec_* %196, %struct.FT_StreamRec_* %0, i8 zeroext 0, i8 zeroext 0) #11
  store i32 %197, i32* %22, align 4
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %202, label %199

199:                                              ; preds = %194
  %200 = icmp eq i8 %102, 0
  br i1 %200, label %1522, label %201

201:                                              ; preds = %199
  store i32 2, i32* %22, align 4
  br label %1522

202:                                              ; preds = %194
  %203 = getelementptr inbounds i8, i8* %107, i64 76
  %204 = bitcast i8* %203 to i32*
  %205 = load i32, i32* %204, align 4
  %206 = icmp ugt i32 %205, 1
  br i1 %206, label %207, label %216

207:                                              ; preds = %202
  %208 = getelementptr inbounds i8, i8* %107, i64 96
  %209 = bitcast i8* %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = zext i32 %205 to i64
  %212 = icmp ult i64 %210, %211
  br i1 %212, label %213, label %216

213:                                              ; preds = %207
  %214 = icmp eq i8 %102, 0
  %215 = select i1 %214, i32 3, i32 2
  store i32 %215, i32* %22, align 4
  br label %1522

216:                                              ; preds = %207, %202
  %217 = getelementptr inbounds i8, i8* %107, i64 1400
  %218 = bitcast i8* %217 to %struct.CFF_IndexRec_*
  %219 = call fastcc i32 @cff_index_init(%struct.CFF_IndexRec_* %218, %struct.FT_StreamRec_* %0, i8 zeroext 0, i8 zeroext 0) #11
  store i32 %219, i32* %22, align 4
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %1522

221:                                              ; preds = %216
  %222 = call fastcc i32 @cff_index_init(%struct.CFF_IndexRec_* nonnull %23, %struct.FT_StreamRec_* %0, i8 zeroext 1, i8 zeroext 0) #11
  store i32 %222, i32* %22, align 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %1522

224:                                              ; preds = %221
  %225 = getelementptr inbounds i8, i8* %107, i64 184
  %226 = bitcast i8* %225 to %struct.CFF_IndexRec_*
  %227 = call fastcc i32 @cff_index_init(%struct.CFF_IndexRec_* %226, %struct.FT_StreamRec_* %0, i8 zeroext 1, i8 zeroext 0) #11
  store i32 %227, i32* %22, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %1522

229:                                              ; preds = %224
  %230 = getelementptr inbounds i8, i8* %107, i64 1616
  %231 = bitcast i8* %230 to i8***
  %232 = getelementptr inbounds i8, i8* %107, i64 1624
  %233 = bitcast i8* %232 to i8**
  %234 = getelementptr inbounds i8, i8* %107, i64 1632
  %235 = bitcast i8* %234 to i64*
  %236 = call fastcc i32 @cff_index_get_pointers(%struct.CFF_IndexRec_* nonnull %23, i8*** %231, i8** %233, i64* %235) #11
  store i32 %236, i32* %22, align 4
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %1522

238:                                              ; preds = %229
  %239 = load i32, i32* %204, align 4
  %240 = getelementptr inbounds i8, i8* %107, i64 1420
  %241 = bitcast i8* %240 to i32*
  %242 = load i32, i32* %241, align 4
  %243 = icmp ugt i32 %239, %242
  br i1 %243, label %244, label %245

244:                                              ; preds = %238
  store i32 3, i32* %22, align 4
  br label %1522

245:                                              ; preds = %238, %189
  %246 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %23, i64 0, i32 3
  %247 = load i32, i32* %246, align 4
  %248 = getelementptr inbounds i8, i8* %107, i64 1608
  %249 = bitcast i8* %248 to i32*
  store i32 %247, i32* %249, align 8
  %250 = icmp eq i8 %102, 0
  br i1 %250, label %263, label %251

251:                                              ; preds = %245
  %252 = and i32 %2, 65535
  %253 = icmp slt i32 %2, 1
  %254 = getelementptr inbounds i8, i8* %107, i64 76
  %255 = bitcast i8* %254 to i32*
  %256 = load i32, i32* %255, align 4
  %257 = icmp ult i32 %252, %256
  %258 = or i1 %253, %257
  br i1 %258, label %260, label %259

259:                                              ; preds = %251
  store i32 6, i32* %22, align 4
  br label %1522

260:                                              ; preds = %251
  %261 = getelementptr inbounds i8, i8* %107, i64 32
  %262 = bitcast i8* %261 to i32*
  store i32 %256, i32* %262, align 8
  br label %269

263:                                              ; preds = %245
  %264 = getelementptr inbounds i8, i8* %107, i64 76
  %265 = bitcast i8* %264 to i32*
  %266 = load i32, i32* %265, align 4
  %267 = icmp ugt i32 %266, 1
  br i1 %267, label %268, label %269

268:                                              ; preds = %263
  store i32 3, i32* %22, align 4
  br label %1522

269:                                              ; preds = %263, %260
  %270 = phi i32 [ %252, %260 ], [ 0, %263 ]
  %271 = icmp slt i32 %2, 0
  br i1 %271, label %1522, label %272

272:                                              ; preds = %269
  %273 = getelementptr inbounds i8, i8* %107, i64 1400
  %274 = bitcast i8* %273 to %struct.CFF_IndexRec_*
  %275 = select i1 %132, i32 12288, i32 4096
  %276 = call fastcc i32 @cff_subfont_load(%struct.CFF_SubFontRec_* %119, %struct.CFF_IndexRec_* %274, i32 %270, %struct.FT_StreamRec_* %0, i64 %120, i32 %275, %struct.CFF_FontRec_* %108, %struct.TT_FaceRec_* %27) #11
  store i32 %276, i32* %22, align 4
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %1522

278:                                              ; preds = %272
  %279 = getelementptr inbounds i8, i8* %107, i64 1832
  %280 = bitcast i8* %279 to i64*
  %281 = load i64, i64* %280, align 8
  %282 = add i64 %281, %120
  %283 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %0, i64 %282) #11
  store i32 %283, i32* %22, align 4
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %1522

285:                                              ; preds = %278
  %286 = getelementptr inbounds i8, i8* %107, i64 1336
  %287 = bitcast i8* %286 to %struct.CFF_IndexRec_*
  %288 = call fastcc i32 @cff_index_init(%struct.CFF_IndexRec_* %287, %struct.FT_StreamRec_* %0, i8 zeroext 0, i8 zeroext %103) #11
  store i32 %288, i32* %22, align 4
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %1522

290:                                              ; preds = %285
  %291 = getelementptr inbounds i8, i8* %107, i64 1868
  %292 = bitcast i8* %291 to i32*
  %293 = load i32, i32* %292, align 4
  %294 = icmp ne i32 %293, 65535
  %295 = or i1 %132, %294
  br i1 %295, label %296, label %685

296:                                              ; preds = %290
  %297 = bitcast %struct.CFF_IndexRec_* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %297) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %297, i8 -86, i64 64, i1 false) #11
  %298 = getelementptr inbounds i8, i8* %107, i64 5016
  %299 = bitcast i8* %298 to %struct.CFF_VStoreRec_*
  %300 = getelementptr inbounds i8, i8* %107, i64 1952
  %301 = bitcast i8* %300 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %115, align 8
  %304 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %304) #11
  store i32 3, i32* %21, align 4
  %305 = icmp eq i64 %302, 0
  br i1 %305, label %510, label %306

306:                                              ; preds = %296
  %307 = add i64 %302, %120
  %308 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %0, i64 %307) #11
  store i32 %308, i32* %21, align 4
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %512

310:                                              ; preds = %306
  %311 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %0, i64 2) #11
  store i32 %311, i32* %21, align 4
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %512

313:                                              ; preds = %310
  %314 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %0) #11
  %315 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %21) #11
  %316 = load i32, i32* %21, align 4
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %512

318:                                              ; preds = %313
  %319 = icmp eq i16 %315, 1
  br i1 %319, label %321, label %320

320:                                              ; preds = %318
  store i32 3, i32* %21, align 4
  br label %512

321:                                              ; preds = %318
  %322 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %0, i32* nonnull %21) #11
  %323 = load i32, i32* %21, align 4
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %512

325:                                              ; preds = %321
  %326 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %21) #11
  %327 = zext i16 %326 to i32
  %328 = bitcast i8* %298 to i32*
  store i32 %327, i32* %328, align 8
  %329 = load i32, i32* %21, align 4
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %512

331:                                              ; preds = %325
  %332 = zext i16 %326 to i64
  %333 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %303, i64 8, i64 0, i64 %332, i8* null, i32* nonnull %21) #11
  %334 = bitcast i8* %333 to i64*
  %335 = load i32, i32* %21, align 4
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %512

337:                                              ; preds = %331
  %338 = load i32, i32* %328, align 8
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %351, label %344

340:                                              ; preds = %344
  %341 = load i32, i32* %328, align 8
  %342 = zext i32 %341 to i64
  %343 = icmp ult i64 %350, %342
  br i1 %343, label %344, label %351

344:                                              ; preds = %337, %340
  %345 = phi i64 [ %350, %340 ], [ 0, %337 ]
  %346 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %0, i32* nonnull %21) #11
  %347 = getelementptr inbounds i64, i64* %334, i64 %345
  store i64 %346, i64* %347, align 8
  %348 = load i32, i32* %21, align 4
  %349 = icmp eq i32 %348, 0
  %350 = add nuw nsw i64 %345, 1
  br i1 %349, label %340, label %512

351:                                              ; preds = %340, %337
  %352 = and i64 %314, 4294967295
  %353 = add i64 %322, %352
  %354 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %0, i64 %353) #11
  store i32 %354, i32* %21, align 4
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %512

356:                                              ; preds = %351
  %357 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %21) #11
  %358 = getelementptr inbounds i8, i8* %107, i64 5032
  %359 = bitcast i8* %358 to i16*
  store i16 %357, i16* %359, align 8
  %360 = load i32, i32* %21, align 4
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %512

362:                                              ; preds = %356
  %363 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %21) #11
  %364 = zext i16 %363 to i32
  %365 = getelementptr inbounds i8, i8* %107, i64 5036
  %366 = bitcast i8* %365 to i32*
  store i32 %364, i32* %366, align 4
  %367 = load i32, i32* %21, align 4
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %512

369:                                              ; preds = %362
  %370 = zext i16 %363 to i64
  %371 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %303, i64 8, i64 0, i64 %370, i8* null, i32* nonnull %21) #11
  %372 = getelementptr inbounds i8, i8* %107, i64 5040
  %373 = bitcast i8* %372 to %struct.CFF_VarRegion_**
  %374 = bitcast i8* %372 to i8**
  store i8* %371, i8** %374, align 8
  %375 = load i32, i32* %21, align 4
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %512

377:                                              ; preds = %369
  %378 = load i32, i32* %366, align 4
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %445, label %380

380:                                              ; preds = %377
  %381 = load i16, i16* %359, align 8
  %382 = zext i16 %381 to i64
  %383 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %303, i64 24, i64 0, i64 %382, i8* null, i32* nonnull %21) #11
  %384 = bitcast i8* %371 to i8**
  store i8* %383, i8** %384, align 8
  %385 = load i32, i32* %21, align 4
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %387, label %512

387:                                              ; preds = %380
  %388 = bitcast i8* %371 to %struct.CFF_AxisCoords_**
  br label %389

389:                                              ; preds = %437, %387
  %390 = phi %struct.CFF_AxisCoords_** [ %441, %437 ], [ %388, %387 ]
  %391 = phi i8* [ %440, %437 ], [ %383, %387 ]
  %392 = phi i64 [ %433, %437 ], [ 0, %387 ]
  %393 = load i16, i16* %359, align 8
  %394 = icmp eq i16 %393, 0
  br i1 %394, label %431, label %395

395:                                              ; preds = %389
  %396 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %21) #11
  %397 = load i32, i32* %21, align 4
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %512

399:                                              ; preds = %395
  %400 = bitcast i8* %391 to %struct.CFF_AxisCoords_*
  br label %401

401:                                              ; preds = %426, %399
  %402 = phi i16 [ %428, %426 ], [ %396, %399 ]
  %403 = phi i64 [ %422, %426 ], [ 0, %399 ]
  %404 = phi %struct.CFF_AxisCoords_* [ %427, %426 ], [ %400, %399 ]
  %405 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %21) #11
  %406 = load i32, i32* %21, align 4
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %408, label %512

408:                                              ; preds = %401
  %409 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %21) #11
  %410 = load i32, i32* %21, align 4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %512

412:                                              ; preds = %408
  %413 = sext i16 %402 to i64
  %414 = shl nsw i64 %413, 2
  %415 = getelementptr inbounds %struct.CFF_AxisCoords_, %struct.CFF_AxisCoords_* %404, i64 %403, i32 0
  store i64 %414, i64* %415, align 8
  %416 = sext i16 %405 to i64
  %417 = shl nsw i64 %416, 2
  %418 = getelementptr inbounds %struct.CFF_AxisCoords_, %struct.CFF_AxisCoords_* %404, i64 %403, i32 1
  store i64 %417, i64* %418, align 8
  %419 = sext i16 %409 to i64
  %420 = shl nsw i64 %419, 2
  %421 = getelementptr inbounds %struct.CFF_AxisCoords_, %struct.CFF_AxisCoords_* %404, i64 %403, i32 2
  store i64 %420, i64* %421, align 8
  %422 = add nuw nsw i64 %403, 1
  %423 = load i16, i16* %359, align 8
  %424 = zext i16 %423 to i64
  %425 = icmp ult i64 %422, %424
  br i1 %425, label %426, label %431

426:                                              ; preds = %412
  %427 = load %struct.CFF_AxisCoords_*, %struct.CFF_AxisCoords_** %390, align 8
  %428 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %21) #11
  %429 = load i32, i32* %21, align 4
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %401, label %512

431:                                              ; preds = %412, %389
  %432 = phi i16 [ 0, %389 ], [ %423, %412 ]
  %433 = add nuw nsw i64 %392, 1
  %434 = load i32, i32* %366, align 4
  %435 = zext i32 %434 to i64
  %436 = icmp ult i64 %433, %435
  br i1 %436, label %437, label %445

437:                                              ; preds = %431
  %438 = load %struct.CFF_VarRegion_*, %struct.CFF_VarRegion_** %373, align 8
  %439 = zext i16 %432 to i64
  %440 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %303, i64 24, i64 0, i64 %439, i8* null, i32* nonnull %21) #11
  %441 = getelementptr inbounds %struct.CFF_VarRegion_, %struct.CFF_VarRegion_* %438, i64 %433, i32 0
  %442 = bitcast %struct.CFF_AxisCoords_** %441 to i8**
  store i8* %440, i8** %442, align 8
  %443 = load i32, i32* %21, align 4
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %389, label %512

445:                                              ; preds = %431, %377
  %446 = load i32, i32* %328, align 8
  %447 = zext i32 %446 to i64
  %448 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %303, i64 16, i64 0, i64 %447, i8* null, i32* nonnull %21) #11
  %449 = getelementptr inbounds i8, i8* %107, i64 5024
  %450 = bitcast i8* %449 to %struct.CFF_VarData_**
  %451 = bitcast i8* %449 to i8**
  store i8* %448, i8** %451, align 8
  %452 = load i32, i32* %21, align 4
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %454, label %512

454:                                              ; preds = %445
  %455 = load i32, i32* %328, align 8
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %510, label %457

457:                                              ; preds = %454
  %458 = load i64, i64* %334, align 8
  %459 = add i64 %458, %352
  %460 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %0, i64 %459) #11
  store i32 %460, i32* %21, align 4
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %462, label %512

462:                                              ; preds = %457
  %463 = bitcast i8* %448 to %struct.CFF_VarData_*
  br label %464

464:                                              ; preds = %503, %462
  %465 = phi i64 [ %499, %503 ], [ 0, %462 ]
  %466 = phi %struct.CFF_VarData_* [ %504, %503 ], [ %463, %462 ]
  %467 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %0, i64 4) #11
  store i32 %467, i32* %21, align 4
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %469, label %512

469:                                              ; preds = %464
  %470 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %21) #11
  %471 = zext i16 %470 to i32
  %472 = getelementptr inbounds %struct.CFF_VarData_, %struct.CFF_VarData_* %466, i64 %465, i32 0
  store i32 %471, i32* %472, align 8
  %473 = load i32, i32* %21, align 4
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %512

475:                                              ; preds = %469
  %476 = zext i16 %470 to i64
  %477 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %303, i64 4, i64 0, i64 %476, i8* null, i32* nonnull %21) #11
  %478 = getelementptr inbounds %struct.CFF_VarData_, %struct.CFF_VarData_* %466, i64 %465, i32 1
  %479 = bitcast i32** %478 to i8**
  store i8* %477, i8** %479, align 8
  %480 = load i32, i32* %21, align 4
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %482, label %512

482:                                              ; preds = %475
  %483 = load i32, i32* %472, align 8
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %498, label %489

485:                                              ; preds = %489
  %486 = load i32, i32* %472, align 8
  %487 = zext i32 %486 to i64
  %488 = icmp ult i64 %497, %487
  br i1 %488, label %489, label %498

489:                                              ; preds = %482, %485
  %490 = phi i64 [ %497, %485 ], [ 0, %482 ]
  %491 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %21) #11
  %492 = zext i16 %491 to i32
  %493 = load i32*, i32** %478, align 8
  %494 = getelementptr inbounds i32, i32* %493, i64 %490
  store i32 %492, i32* %494, align 4
  %495 = load i32, i32* %21, align 4
  %496 = icmp eq i32 %495, 0
  %497 = add nuw nsw i64 %490, 1
  br i1 %496, label %485, label %512

498:                                              ; preds = %485, %482
  %499 = add nuw nsw i64 %465, 1
  %500 = load i32, i32* %328, align 8
  %501 = zext i32 %500 to i64
  %502 = icmp ult i64 %499, %501
  br i1 %502, label %503, label %510

503:                                              ; preds = %498
  %504 = load %struct.CFF_VarData_*, %struct.CFF_VarData_** %450, align 8
  %505 = getelementptr inbounds i64, i64* %334, i64 %499
  %506 = load i64, i64* %505, align 8
  %507 = add i64 %506, %352
  %508 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %0, i64 %507) #11
  store i32 %508, i32* %21, align 4
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %464, label %512

510:                                              ; preds = %498, %454, %296
  %511 = phi i8* [ null, %296 ], [ %333, %454 ], [ %333, %498 ]
  store i32 0, i32* %21, align 4
  br label %512

512:                                              ; preds = %344, %437, %395, %426, %408, %401, %503, %475, %469, %464, %489, %510, %457, %445, %380, %369, %362, %356, %351, %331, %325, %321, %320, %313, %310, %306
  %513 = phi i8* [ %511, %510 ], [ %333, %445 ], [ %333, %369 ], [ %333, %351 ], [ %333, %356 ], [ %333, %362 ], [ %333, %331 ], [ null, %321 ], [ null, %325 ], [ null, %313 ], [ null, %306 ], [ null, %310 ], [ null, %320 ], [ %333, %457 ], [ %333, %380 ], [ %333, %489 ], [ %333, %464 ], [ %333, %469 ], [ %333, %475 ], [ %333, %503 ], [ %333, %401 ], [ %333, %408 ], [ %333, %426 ], [ %333, %395 ], [ %333, %437 ], [ %333, %344 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %303, i8* %513) #11
  %514 = load i32, i32* %21, align 4
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %516, label %517

516:                                              ; preds = %512
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %304) #11
  store i32 0, i32* %22, align 4
  br label %520

517:                                              ; preds = %512
  call fastcc void @cff_vstore_done(%struct.CFF_VStoreRec_* %299, %struct.FT_MemoryRec_* %303) #11
  %518 = load i32, i32* %21, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %304) #11
  store i32 %518, i32* %22, align 4
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %520, label %683

520:                                              ; preds = %517, %516
  %521 = getelementptr inbounds i8, i8* %107, i64 1928
  %522 = bitcast i8* %521 to i64*
  %523 = load i64, i64* %522, align 8
  %524 = add i64 %523, %120
  %525 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %0, i64 %524) #11
  store i32 %525, i32* %22, align 4
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %527, label %683

527:                                              ; preds = %520
  %528 = call fastcc i32 @cff_index_init(%struct.CFF_IndexRec_* nonnull %24, %struct.FT_StreamRec_* %0, i8 zeroext 0, i8 zeroext %103) #11
  store i32 %528, i32* %22, align 4
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %530, label %683

530:                                              ; preds = %527
  %531 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %24, i64 0, i32 3
  %532 = load i32, i32* %531, align 4
  %533 = icmp ugt i32 %532, 256
  br i1 %533, label %663, label %534

534:                                              ; preds = %530
  %535 = getelementptr inbounds i8, i8* %107, i64 2864
  %536 = bitcast i8* %535 to i32*
  store i32 %532, i32* %536, align 8
  %537 = zext i32 %532 to i64
  %538 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %116, i64 1224, i64 0, i64 %537, i8* null, i32* nonnull %22) #11
  %539 = bitcast i8* %538 to %struct.CFF_SubFontRec_*
  %540 = load i32, i32* %22, align 4
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %542, label %663

542:                                              ; preds = %534
  %543 = load i32, i32* %531, align 4
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %617, label %545

545:                                              ; preds = %542
  %546 = zext i32 %543 to i64
  %547 = icmp ult i32 %543, 4
  br i1 %547, label %548, label %550

548:                                              ; preds = %595, %545
  %549 = phi i64 [ 0, %545 ], [ %551, %595 ]
  br label %599

550:                                              ; preds = %545
  %551 = and i64 %546, 4294967292
  %552 = add nsw i64 %551, -4
  %553 = lshr exact i64 %552, 2
  %554 = add nuw nsw i64 %553, 1
  %555 = and i64 %554, 1
  %556 = icmp eq i64 %552, 0
  br i1 %556, label %583, label %557

557:                                              ; preds = %550
  %558 = sub nuw nsw i64 %554, %555
  br label %559

559:                                              ; preds = %559, %557
  %560 = phi i64 [ 0, %557 ], [ %579, %559 ]
  %561 = phi <2 x i64> [ <i64 0, i64 1>, %557 ], [ %580, %559 ]
  %562 = phi i64 [ %558, %557 ], [ %581, %559 ]
  %563 = add <2 x i64> %561, <i64 2, i64 2>
  %564 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %539, <2 x i64> %561
  %565 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %539, <2 x i64> %563
  %566 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 28, i64 %560
  %567 = bitcast %struct.CFF_SubFontRec_** %566 to <2 x %struct.CFF_SubFontRec_*>*
  store <2 x %struct.CFF_SubFontRec_*> %564, <2 x %struct.CFF_SubFontRec_*>* %567, align 8
  %568 = getelementptr inbounds %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %566, i64 2
  %569 = bitcast %struct.CFF_SubFontRec_** %568 to <2 x %struct.CFF_SubFontRec_*>*
  store <2 x %struct.CFF_SubFontRec_*> %565, <2 x %struct.CFF_SubFontRec_*>* %569, align 8
  %570 = or i64 %560, 4
  %571 = add <2 x i64> %561, <i64 4, i64 4>
  %572 = add <2 x i64> %561, <i64 6, i64 6>
  %573 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %539, <2 x i64> %571
  %574 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %539, <2 x i64> %572
  %575 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 28, i64 %570
  %576 = bitcast %struct.CFF_SubFontRec_** %575 to <2 x %struct.CFF_SubFontRec_*>*
  store <2 x %struct.CFF_SubFontRec_*> %573, <2 x %struct.CFF_SubFontRec_*>* %576, align 8
  %577 = getelementptr inbounds %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %575, i64 2
  %578 = bitcast %struct.CFF_SubFontRec_** %577 to <2 x %struct.CFF_SubFontRec_*>*
  store <2 x %struct.CFF_SubFontRec_*> %574, <2 x %struct.CFF_SubFontRec_*>* %578, align 8
  %579 = add i64 %560, 8
  %580 = add <2 x i64> %561, <i64 8, i64 8>
  %581 = add i64 %562, -2
  %582 = icmp eq i64 %581, 0
  br i1 %582, label %583, label %559, !llvm.loop !2

583:                                              ; preds = %559, %550
  %584 = phi i64 [ 0, %550 ], [ %579, %559 ]
  %585 = phi <2 x i64> [ <i64 0, i64 1>, %550 ], [ %580, %559 ]
  %586 = icmp eq i64 %555, 0
  br i1 %586, label %595, label %587

587:                                              ; preds = %583
  %588 = add <2 x i64> %585, <i64 2, i64 2>
  %589 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %539, <2 x i64> %585
  %590 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %539, <2 x i64> %588
  %591 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 28, i64 %584
  %592 = bitcast %struct.CFF_SubFontRec_** %591 to <2 x %struct.CFF_SubFontRec_*>*
  store <2 x %struct.CFF_SubFontRec_*> %589, <2 x %struct.CFF_SubFontRec_*>* %592, align 8
  %593 = getelementptr inbounds %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %591, i64 2
  %594 = bitcast %struct.CFF_SubFontRec_** %593 to <2 x %struct.CFF_SubFontRec_*>*
  store <2 x %struct.CFF_SubFontRec_*> %590, <2 x %struct.CFF_SubFontRec_*>* %594, align 8
  br label %595

595:                                              ; preds = %583, %587
  %596 = icmp eq i64 %551, %546
  br i1 %596, label %597, label %548

597:                                              ; preds = %599, %595
  %598 = select i1 %132, i32 16384, i32 4096
  br label %609

599:                                              ; preds = %548, %599
  %600 = phi i64 [ %603, %599 ], [ %549, %548 ]
  %601 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %539, i64 %600
  %602 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 28, i64 %600
  store %struct.CFF_SubFontRec_* %601, %struct.CFF_SubFontRec_** %602, align 8
  %603 = add nuw nsw i64 %600, 1
  %604 = icmp eq i64 %603, %546
  br i1 %604, label %597, label %599, !llvm.loop !4

605:                                              ; preds = %609
  %606 = load i32, i32* %531, align 4
  %607 = zext i32 %606 to i64
  %608 = icmp ult i64 %616, %607
  br i1 %608, label %609, label %617

609:                                              ; preds = %605, %597
  %610 = phi i64 [ 0, %597 ], [ %616, %605 ]
  %611 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 28, i64 %610
  %612 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %611, align 8
  %613 = trunc i64 %610 to i32
  %614 = call fastcc i32 @cff_subfont_load(%struct.CFF_SubFontRec_* %612, %struct.CFF_IndexRec_* nonnull %24, i32 %613, %struct.FT_StreamRec_* %0, i64 %120, i32 %598, %struct.CFF_FontRec_* %108, %struct.TT_FaceRec_* %27) #11
  store i32 %614, i32* %22, align 4
  %615 = icmp eq i32 %614, 0
  %616 = add nuw nsw i64 %610, 1
  br i1 %615, label %605, label %663

617:                                              ; preds = %605, %542
  %618 = phi i32 [ 0, %542 ], [ %606, %605 ]
  %619 = xor i1 %132, true
  %620 = icmp ugt i32 %618, 1
  %621 = or i1 %620, %619
  br i1 %621, label %622, label %663

622:                                              ; preds = %617
  %623 = getelementptr inbounds i8, i8* %107, i64 1356
  %624 = bitcast i8* %623 to i32*
  %625 = load i32, i32* %624, align 4
  %626 = getelementptr inbounds i8, i8* %107, i64 1936
  %627 = bitcast i8* %626 to i64*
  %628 = load i64, i64* %627, align 8
  %629 = add i64 %628, %120
  %630 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %630) #11
  %631 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %0, i64 %629) #11
  store i32 %631, i32* %20, align 4
  %632 = icmp eq i32 %631, 0
  br i1 %632, label %633, label %661

633:                                              ; preds = %622
  %634 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %20) #11
  %635 = load i32, i32* %20, align 4
  %636 = icmp eq i32 %635, 0
  br i1 %636, label %637, label %661

637:                                              ; preds = %633
  %638 = getelementptr inbounds i8, i8* %107, i64 4920
  store i8 %634, i8* %638, align 8
  %639 = getelementptr inbounds i8, i8* %107, i64 4944
  %640 = bitcast i8* %639 to i32*
  store i32 0, i32* %640, align 8
  switch i8 %634, label %660 [
    i8 0, label %652
    i8 3, label %641
  ]

641:                                              ; preds = %637
  %642 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %20) #11
  %643 = zext i16 %642 to i32
  %644 = load i32, i32* %20, align 4
  %645 = icmp eq i32 %644, 0
  br i1 %645, label %646, label %661

646:                                              ; preds = %641
  %647 = icmp eq i16 %642, 0
  br i1 %647, label %648, label %649

648:                                              ; preds = %646
  store i32 3, i32* %20, align 4
  br label %661

649:                                              ; preds = %646
  %650 = mul nuw nsw i32 %643, 3
  %651 = add nuw nsw i32 %650, 2
  br label %652

652:                                              ; preds = %637, %649
  %653 = phi i32 [ %651, %649 ], [ %625, %637 ]
  %654 = getelementptr inbounds i8, i8* %107, i64 4936
  %655 = bitcast i8* %654 to i32*
  store i32 %653, i32* %655, align 8
  %656 = zext i32 %653 to i64
  %657 = getelementptr inbounds i8, i8* %107, i64 4928
  %658 = bitcast i8* %657 to i8**
  %659 = call i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_* %0, i64 %656, i8** %658) #11
  store i32 %659, i32* %20, align 4
  br label %661

660:                                              ; preds = %637
  store i32 3, i32* %20, align 4
  br label %661

661:                                              ; preds = %660, %652, %648, %641, %633, %622
  %662 = phi i32 [ %644, %641 ], [ %635, %633 ], [ %631, %622 ], [ %659, %652 ], [ 3, %660 ], [ 3, %648 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %630) #11
  store i32 %662, i32* %22, align 4
  br label %663

663:                                              ; preds = %609, %661, %617, %534, %530
  %664 = phi i32 [ 0, %617 ], [ %540, %534 ], [ %662, %661 ], [ 0, %530 ], [ %614, %609 ]
  %665 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %24, i64 0, i32 0
  %666 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %665, align 8
  %667 = icmp eq %struct.FT_StreamRec_* %666, null
  br i1 %667, label %680, label %668

668:                                              ; preds = %663
  %669 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %666, i64 0, i32 7
  %670 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %669, align 8
  %671 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %24, i64 0, i32 8
  %672 = load i8*, i8** %671, align 8
  %673 = icmp eq i8* %672, null
  br i1 %673, label %675, label %674

674:                                              ; preds = %668
  call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* nonnull %666, i8** %671) #11
  br label %675

675:                                              ; preds = %674, %668
  %676 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %24, i64 0, i32 7
  %677 = bitcast i64** %676 to i8**
  %678 = load i8*, i8** %677, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %670, i8* %678) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %297, i8 0, i64 64, i1 false) #11
  %679 = load i32, i32* %22, align 4
  br label %680

680:                                              ; preds = %675, %663
  %681 = phi i32 [ %664, %663 ], [ %679, %675 ]
  %682 = icmp eq i32 %681, 0
  br i1 %682, label %684, label %683

683:                                              ; preds = %680, %527, %520, %517
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %297) #11
  br label %1522

684:                                              ; preds = %680
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %297) #11
  br label %688

685:                                              ; preds = %290
  %686 = getelementptr inbounds i8, i8* %107, i64 2864
  %687 = bitcast i8* %686 to i32*
  store i32 0, i32* %687, align 8
  br label %688

688:                                              ; preds = %685, %684
  %689 = load i64, i64* %280, align 8
  %690 = icmp eq i64 %689, 0
  br i1 %690, label %691, label %692

691:                                              ; preds = %688
  store i32 3, i32* %22, align 4
  br label %1522

692:                                              ; preds = %688
  %693 = getelementptr inbounds i8, i8* %107, i64 1356
  %694 = bitcast i8* %693 to i32*
  %695 = load i32, i32* %694, align 4
  %696 = getelementptr inbounds i8, i8* %107, i64 36
  %697 = bitcast i8* %696 to i32*
  store i32 %695, i32* %697, align 4
  %698 = getelementptr inbounds i8, i8* %107, i64 184
  %699 = bitcast i8* %698 to %struct.CFF_IndexRec_*
  %700 = getelementptr inbounds i8, i8* %107, i64 1600
  %701 = bitcast i8* %700 to i8***
  %702 = call fastcc i32 @cff_index_get_pointers(%struct.CFF_IndexRec_* %699, i8*** %701, i8** null, i64* null) #11
  store i32 %702, i32* %22, align 4
  %703 = icmp eq i32 %702, 0
  br i1 %703, label %704, label %1522

704:                                              ; preds = %692
  br i1 %132, label %1488, label %705

705:                                              ; preds = %704
  %706 = load i32, i32* %697, align 4
  %707 = icmp eq i32 %706, 0
  br i1 %707, label %1488, label %708

708:                                              ; preds = %705
  %709 = load i32, i32* %292, align 4
  %710 = icmp eq i32 %709, 65535
  %711 = getelementptr inbounds i8, i8* %107, i64 1296
  %712 = getelementptr inbounds i8, i8* %107, i64 1816
  %713 = bitcast i8* %712 to i64*
  %714 = load i64, i64* %713, align 8
  %715 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %115, align 8
  %716 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %716) #11
  store i32 0, i32* %19, align 4
  %717 = icmp ugt i64 %714, 2
  br i1 %717, label %718, label %807

718:                                              ; preds = %708
  %719 = add i64 %714, %120
  %720 = getelementptr inbounds i8, i8* %107, i64 1304
  %721 = bitcast i8* %720 to i64*
  store i64 %719, i64* %721, align 8
  %722 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %0, i64 %719) #11
  store i32 %722, i32* %19, align 4
  %723 = icmp eq i32 %722, 0
  br i1 %723, label %724, label %1034

724:                                              ; preds = %718
  %725 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %19) #11
  %726 = zext i8 %725 to i32
  %727 = bitcast i8* %711 to i32*
  store i32 %726, i32* %727, align 8
  %728 = load i32, i32* %19, align 4
  %729 = icmp eq i32 %728, 0
  br i1 %729, label %730, label %1034

730:                                              ; preds = %724
  %731 = zext i32 %706 to i64
  %732 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %715, i64 2, i64 0, i64 %731, i8* null, i32* nonnull %19) #11
  %733 = getelementptr inbounds i8, i8* %107, i64 1312
  %734 = bitcast i8* %733 to i16**
  %735 = bitcast i8* %733 to i8**
  store i8* %732, i8** %735, align 8
  %736 = load i32, i32* %19, align 4
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %738, label %1034

738:                                              ; preds = %730
  %739 = bitcast i8* %732 to i16*
  store i16 0, i16* %739, align 2
  %740 = load i32, i32* %727, align 8
  switch i32 %740, label %806 [
    i32 0, label %741
    i32 1, label %757
    i32 2, label %757
  ]

741:                                              ; preds = %738
  %742 = shl i32 %706, 1
  %743 = add i32 %742, -2
  %744 = zext i32 %743 to i64
  %745 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %0, i64 %744) #11
  store i32 %745, i32* %19, align 4
  %746 = icmp eq i32 %745, 0
  br i1 %746, label %747, label %1034

747:                                              ; preds = %741
  %748 = icmp ugt i32 %706, 1
  br i1 %748, label %749, label %756

749:                                              ; preds = %747, %749
  %750 = phi i64 [ %754, %749 ], [ 1, %747 ]
  %751 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %0) #11
  %752 = load i16*, i16** %734, align 8
  %753 = getelementptr inbounds i16, i16* %752, i64 %750
  store i16 %751, i16* %753, align 2
  %754 = add nuw nsw i64 %750, 1
  %755 = icmp eq i64 %754, %731
  br i1 %755, label %756, label %749

756:                                              ; preds = %749, %747
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %0) #11
  br label %848

757:                                              ; preds = %738, %738
  %758 = icmp ugt i32 %706, 1
  br i1 %758, label %764, label %848

759:                                              ; preds = %794
  %760 = trunc i64 %801 to i32
  br label %761

761:                                              ; preds = %782, %759
  %762 = phi i32 [ %765, %782 ], [ %760, %759 ]
  %763 = icmp ult i32 %762, %706
  br i1 %763, label %764, label %848

764:                                              ; preds = %757, %761
  %765 = phi i32 [ %762, %761 ], [ 1, %757 ]
  %766 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %19) #11
  %767 = load i32, i32* %19, align 4
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %769, label %1034

769:                                              ; preds = %764
  %770 = load i32, i32* %727, align 8
  %771 = icmp eq i32 %770, 2
  br i1 %771, label %772, label %777

772:                                              ; preds = %769
  %773 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %19) #11
  %774 = zext i16 %773 to i32
  %775 = load i32, i32* %19, align 4
  %776 = icmp eq i32 %775, 0
  br i1 %776, label %782, label %1034

777:                                              ; preds = %769
  %778 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %19) #11
  %779 = zext i8 %778 to i32
  %780 = load i32, i32* %19, align 4
  %781 = icmp eq i32 %780, 0
  br i1 %781, label %782, label %1034

782:                                              ; preds = %777, %772
  %783 = phi i32 [ %774, %772 ], [ %779, %777 ]
  %784 = zext i16 %766 to i64
  %785 = xor i32 %783, 65535
  %786 = zext i32 %785 to i64
  %787 = icmp ugt i64 %784, %786
  %788 = xor i16 %766, -1
  %789 = zext i16 %788 to i32
  %790 = select i1 %787, i32 %789, i32 %783
  %791 = icmp ult i32 %765, %706
  br i1 %791, label %792, label %761

792:                                              ; preds = %782
  %793 = zext i32 %765 to i64
  br label %794

794:                                              ; preds = %794, %792
  %795 = phi i64 [ %793, %792 ], [ %801, %794 ]
  %796 = phi i32 [ 0, %792 ], [ %800, %794 ]
  %797 = phi i16 [ %766, %792 ], [ %802, %794 ]
  %798 = load i16*, i16** %734, align 8
  %799 = getelementptr inbounds i16, i16* %798, i64 %795
  store i16 %797, i16* %799, align 2
  %800 = add nuw nsw i32 %796, 1
  %801 = add nuw nsw i64 %795, 1
  %802 = add i16 %797, 1
  %803 = icmp uge i64 %801, %731
  %804 = icmp uge i32 %796, %790
  %805 = or i1 %803, %804
  br i1 %805, label %759, label %794

806:                                              ; preds = %738
  store i32 3, i32* %19, align 4
  br label %1034

807:                                              ; preds = %708
  %808 = getelementptr inbounds i8, i8* %107, i64 1304
  %809 = bitcast i8* %808 to i64*
  store i64 %714, i64* %809, align 8
  %810 = trunc i64 %714 to i32
  switch i32 %810, label %847 [
    i32 0, label %811
    i32 1, label %823
    i32 2, label %835
  ]

811:                                              ; preds = %807
  %812 = icmp ugt i32 %706, 229
  br i1 %812, label %813, label %814

813:                                              ; preds = %811
  store i32 3, i32* %19, align 4
  br label %1034

814:                                              ; preds = %811
  %815 = zext i32 %706 to i64
  %816 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %715, i64 2, i64 0, i64 %815, i8* null, i32* nonnull %19) #11
  %817 = getelementptr inbounds i8, i8* %107, i64 1312
  %818 = bitcast i8* %817 to i8**
  store i8* %816, i8** %818, align 8
  %819 = load i32, i32* %19, align 4
  %820 = icmp eq i32 %819, 0
  br i1 %820, label %821, label %1034

821:                                              ; preds = %814
  %822 = shl nuw nsw i64 %815, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %816, i8* align 16 bitcast ([229 x i16]* @cff_isoadobe_charset to i8*), i64 %822, i1 false) #11
  br label %848

823:                                              ; preds = %807
  %824 = icmp ugt i32 %706, 166
  br i1 %824, label %825, label %826

825:                                              ; preds = %823
  store i32 3, i32* %19, align 4
  br label %1034

826:                                              ; preds = %823
  %827 = zext i32 %706 to i64
  %828 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %715, i64 2, i64 0, i64 %827, i8* null, i32* nonnull %19) #11
  %829 = getelementptr inbounds i8, i8* %107, i64 1312
  %830 = bitcast i8* %829 to i8**
  store i8* %828, i8** %830, align 8
  %831 = load i32, i32* %19, align 4
  %832 = icmp eq i32 %831, 0
  br i1 %832, label %833, label %1034

833:                                              ; preds = %826
  %834 = shl nuw nsw i64 %827, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %828, i8* align 16 bitcast ([166 x i16]* @cff_expert_charset to i8*), i64 %834, i1 false) #11
  br label %848

835:                                              ; preds = %807
  %836 = icmp ugt i32 %706, 87
  br i1 %836, label %837, label %838

837:                                              ; preds = %835
  store i32 3, i32* %19, align 4
  br label %1034

838:                                              ; preds = %835
  %839 = zext i32 %706 to i64
  %840 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %715, i64 2, i64 0, i64 %839, i8* null, i32* nonnull %19) #11
  %841 = getelementptr inbounds i8, i8* %107, i64 1312
  %842 = bitcast i8* %841 to i8**
  store i8* %840, i8** %842, align 8
  %843 = load i32, i32* %19, align 4
  %844 = icmp eq i32 %843, 0
  br i1 %844, label %845, label %1034

845:                                              ; preds = %838
  %846 = shl nuw nsw i64 %839, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %840, i8* align 16 bitcast ([87 x i16]* @cff_expertsubset_charset to i8*), i64 %846, i1 false) #11
  br label %848

847:                                              ; preds = %807
  store i32 3, i32* %19, align 4
  br label %1034

848:                                              ; preds = %761, %845, %833, %821, %757, %756
  %849 = or i1 %250, %710
  br i1 %849, label %850, label %852

850:                                              ; preds = %848
  %851 = load i32, i32* %19, align 4
  br label %1030

852:                                              ; preds = %848
  %853 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %853) #11
  store i32 0, i32* %18, align 4
  %854 = getelementptr inbounds i8, i8* %107, i64 1328
  %855 = bitcast i8* %854 to i32*
  %856 = load i32, i32* %855, align 8
  %857 = icmp eq i32 %856, 0
  br i1 %857, label %858, label %1028

858:                                              ; preds = %852
  %859 = getelementptr inbounds i8, i8* %107, i64 1312
  %860 = bitcast i8* %859 to i16**
  %861 = load i16*, i16** %860, align 8
  %862 = zext i32 %706 to i64
  %863 = icmp ult i32 %706, 16
  br i1 %863, label %936, label %864

864:                                              ; preds = %858
  %865 = and i64 %862, 4294967280
  %866 = add nsw i64 %865, -16
  %867 = lshr exact i64 %866, 4
  %868 = add nuw nsw i64 %867, 1
  %869 = and i64 %868, 1
  %870 = icmp eq i64 %866, 0
  br i1 %870, label %902, label %871

871:                                              ; preds = %864
  %872 = sub nuw nsw i64 %868, %869
  br label %873

873:                                              ; preds = %873, %871
  %874 = phi i64 [ 0, %871 ], [ %899, %873 ]
  %875 = phi <8 x i16> [ zeroinitializer, %871 ], [ %897, %873 ]
  %876 = phi <8 x i16> [ zeroinitializer, %871 ], [ %898, %873 ]
  %877 = phi i64 [ %872, %871 ], [ %900, %873 ]
  %878 = getelementptr inbounds i16, i16* %861, i64 %874
  %879 = bitcast i16* %878 to <8 x i16>*
  %880 = load <8 x i16>, <8 x i16>* %879, align 2
  %881 = getelementptr inbounds i16, i16* %878, i64 8
  %882 = bitcast i16* %881 to <8 x i16>*
  %883 = load <8 x i16>, <8 x i16>* %882, align 2
  %884 = icmp ugt <8 x i16> %880, %875
  %885 = icmp ugt <8 x i16> %883, %876
  %886 = select <8 x i1> %884, <8 x i16> %880, <8 x i16> %875
  %887 = select <8 x i1> %885, <8 x i16> %883, <8 x i16> %876
  %888 = or i64 %874, 16
  %889 = getelementptr inbounds i16, i16* %861, i64 %888
  %890 = bitcast i16* %889 to <8 x i16>*
  %891 = load <8 x i16>, <8 x i16>* %890, align 2
  %892 = getelementptr inbounds i16, i16* %889, i64 8
  %893 = bitcast i16* %892 to <8 x i16>*
  %894 = load <8 x i16>, <8 x i16>* %893, align 2
  %895 = icmp ugt <8 x i16> %891, %886
  %896 = icmp ugt <8 x i16> %894, %887
  %897 = select <8 x i1> %895, <8 x i16> %891, <8 x i16> %886
  %898 = select <8 x i1> %896, <8 x i16> %894, <8 x i16> %887
  %899 = add i64 %874, 32
  %900 = add i64 %877, -2
  %901 = icmp eq i64 %900, 0
  br i1 %901, label %902, label %873, !llvm.loop !6

902:                                              ; preds = %873, %864
  %903 = phi <8 x i16> [ undef, %864 ], [ %897, %873 ]
  %904 = phi <8 x i16> [ undef, %864 ], [ %898, %873 ]
  %905 = phi i64 [ 0, %864 ], [ %899, %873 ]
  %906 = phi <8 x i16> [ zeroinitializer, %864 ], [ %897, %873 ]
  %907 = phi <8 x i16> [ zeroinitializer, %864 ], [ %898, %873 ]
  %908 = icmp eq i64 %869, 0
  br i1 %908, label %920, label %909

909:                                              ; preds = %902
  %910 = getelementptr inbounds i16, i16* %861, i64 %905
  %911 = bitcast i16* %910 to <8 x i16>*
  %912 = load <8 x i16>, <8 x i16>* %911, align 2
  %913 = getelementptr inbounds i16, i16* %910, i64 8
  %914 = bitcast i16* %913 to <8 x i16>*
  %915 = load <8 x i16>, <8 x i16>* %914, align 2
  %916 = icmp ugt <8 x i16> %915, %907
  %917 = select <8 x i1> %916, <8 x i16> %915, <8 x i16> %907
  %918 = icmp ugt <8 x i16> %912, %906
  %919 = select <8 x i1> %918, <8 x i16> %912, <8 x i16> %906
  br label %920

920:                                              ; preds = %902, %909
  %921 = phi <8 x i16> [ %903, %902 ], [ %919, %909 ]
  %922 = phi <8 x i16> [ %904, %902 ], [ %917, %909 ]
  %923 = icmp ugt <8 x i16> %921, %922
  %924 = select <8 x i1> %923, <8 x i16> %921, <8 x i16> %922
  %925 = shufflevector <8 x i16> %924, <8 x i16> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %926 = icmp ugt <8 x i16> %924, %925
  %927 = select <8 x i1> %926, <8 x i16> %924, <8 x i16> %925
  %928 = shufflevector <8 x i16> %927, <8 x i16> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %929 = icmp ugt <8 x i16> %927, %928
  %930 = select <8 x i1> %929, <8 x i16> %927, <8 x i16> %928
  %931 = shufflevector <8 x i16> %930, <8 x i16> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %932 = icmp ugt <8 x i16> %930, %931
  %933 = select <8 x i1> %932, <8 x i16> %930, <8 x i16> %931
  %934 = extractelement <8 x i16> %933, i32 0
  %935 = icmp eq i64 %865, %862
  br i1 %935, label %948, label %936

936:                                              ; preds = %920, %858
  %937 = phi i64 [ 0, %858 ], [ %865, %920 ]
  %938 = phi i16 [ 0, %858 ], [ %934, %920 ]
  br label %939

939:                                              ; preds = %936, %939
  %940 = phi i64 [ %946, %939 ], [ %937, %936 ]
  %941 = phi i16 [ %945, %939 ], [ %938, %936 ]
  %942 = getelementptr inbounds i16, i16* %861, i64 %940
  %943 = load i16, i16* %942, align 2
  %944 = icmp ugt i16 %943, %941
  %945 = select i1 %944, i16 %943, i16 %941
  %946 = add nuw nsw i64 %940, 1
  %947 = icmp eq i64 %946, %862
  br i1 %947, label %948, label %939, !llvm.loop !7

948:                                              ; preds = %939, %920
  %949 = phi i16 [ %934, %920 ], [ %945, %939 ]
  %950 = zext i16 %949 to i64
  %951 = add nuw nsw i64 %950, 1
  %952 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %715, i64 2, i64 0, i64 %951, i8* null, i32* nonnull %18) #11
  %953 = getelementptr inbounds i8, i8* %107, i64 1320
  %954 = bitcast i8* %953 to i16**
  %955 = bitcast i8* %953 to i8**
  store i8* %952, i8** %955, align 8
  %956 = load i32, i32* %18, align 4
  %957 = icmp eq i32 %956, 0
  br i1 %957, label %958, label %1028

958:                                              ; preds = %948
  %959 = bitcast i8* %952 to i16*
  %960 = add nsw i64 %862, -1
  %961 = trunc i64 %960 to i16
  %962 = load i16*, i16** %860, align 8
  %963 = getelementptr inbounds i16, i16* %962, i64 %960
  %964 = load i16, i16* %963, align 2
  %965 = zext i16 %964 to i64
  %966 = getelementptr inbounds i16, i16* %959, i64 %965
  store i16 %961, i16* %966, align 2
  %967 = icmp sgt i64 %960, 0
  br i1 %967, label %968, label %1023

968:                                              ; preds = %958
  %969 = add nsw i64 %862, -2
  %970 = and i64 %960, 3
  %971 = icmp eq i64 %970, 0
  br i1 %971, label %985, label %972

972:                                              ; preds = %968, %972
  %973 = phi i64 [ %976, %972 ], [ %960, %968 ]
  %974 = phi i64 [ %983, %972 ], [ %970, %968 ]
  %975 = load i16*, i16** %954, align 8
  %976 = add nsw i64 %973, -1
  %977 = trunc i64 %976 to i16
  %978 = load i16*, i16** %860, align 8
  %979 = getelementptr inbounds i16, i16* %978, i64 %976
  %980 = load i16, i16* %979, align 2
  %981 = zext i16 %980 to i64
  %982 = getelementptr inbounds i16, i16* %975, i64 %981
  store i16 %977, i16* %982, align 2
  %983 = add i64 %974, -1
  %984 = icmp eq i64 %983, 0
  br i1 %984, label %985, label %972, !llvm.loop !8

985:                                              ; preds = %972, %968
  %986 = phi i64 [ %960, %968 ], [ %976, %972 ]
  %987 = icmp ult i64 %969, 3
  br i1 %987, label %1023, label %988

988:                                              ; preds = %985, %988
  %989 = phi i64 [ %1015, %988 ], [ %986, %985 ]
  %990 = load i16*, i16** %954, align 8
  %991 = add nsw i64 %989, -1
  %992 = trunc i64 %991 to i16
  %993 = load i16*, i16** %860, align 8
  %994 = getelementptr inbounds i16, i16* %993, i64 %991
  %995 = load i16, i16* %994, align 2
  %996 = zext i16 %995 to i64
  %997 = getelementptr inbounds i16, i16* %990, i64 %996
  store i16 %992, i16* %997, align 2
  %998 = load i16*, i16** %954, align 8
  %999 = add nsw i64 %989, -2
  %1000 = trunc i64 %999 to i16
  %1001 = load i16*, i16** %860, align 8
  %1002 = getelementptr inbounds i16, i16* %1001, i64 %999
  %1003 = load i16, i16* %1002, align 2
  %1004 = zext i16 %1003 to i64
  %1005 = getelementptr inbounds i16, i16* %998, i64 %1004
  store i16 %1000, i16* %1005, align 2
  %1006 = load i16*, i16** %954, align 8
  %1007 = add nsw i64 %989, -3
  %1008 = trunc i64 %1007 to i16
  %1009 = load i16*, i16** %860, align 8
  %1010 = getelementptr inbounds i16, i16* %1009, i64 %1007
  %1011 = load i16, i16* %1010, align 2
  %1012 = zext i16 %1011 to i64
  %1013 = getelementptr inbounds i16, i16* %1006, i64 %1012
  store i16 %1008, i16* %1013, align 2
  %1014 = load i16*, i16** %954, align 8
  %1015 = add nsw i64 %989, -4
  %1016 = trunc i64 %1015 to i16
  %1017 = load i16*, i16** %860, align 8
  %1018 = getelementptr inbounds i16, i16* %1017, i64 %1015
  %1019 = load i16, i16* %1018, align 2
  %1020 = zext i16 %1019 to i64
  %1021 = getelementptr inbounds i16, i16* %1014, i64 %1020
  store i16 %1016, i16* %1021, align 2
  %1022 = icmp sgt i64 %1015, 0
  br i1 %1022, label %988, label %1023

1023:                                             ; preds = %985, %988, %958
  %1024 = load i32, i32* %18, align 4
  %1025 = zext i16 %949 to i32
  store i32 %1025, i32* %855, align 8
  %1026 = getelementptr inbounds i8, i8* %107, i64 1332
  %1027 = bitcast i8* %1026 to i32*
  store i32 %706, i32* %1027, align 4
  br label %1028

1028:                                             ; preds = %1023, %948, %852
  %1029 = phi i32 [ %956, %948 ], [ 0, %852 ], [ %1024, %1023 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %853) #11
  store i32 %1029, i32* %19, align 4
  br label %1030

1030:                                             ; preds = %1028, %850
  %1031 = phi i32 [ %1029, %1028 ], [ %851, %850 ]
  %1032 = icmp eq i32 %1031, 0
  br i1 %1032, label %1033, label %1034

1033:                                             ; preds = %1030
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %716) #11
  store i32 0, i32* %22, align 4
  br label %1048

1034:                                             ; preds = %777, %772, %764, %1030, %847, %838, %837, %826, %825, %814, %813, %806, %741, %730, %724, %718
  %1035 = getelementptr inbounds i8, i8* %107, i64 1312
  %1036 = bitcast i8* %1035 to i16**
  %1037 = bitcast i8* %1035 to i8**
  %1038 = load i8*, i8** %1037, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %715, i8* %1038) #11
  store i16* null, i16** %1036, align 8
  %1039 = getelementptr inbounds i8, i8* %107, i64 1320
  %1040 = bitcast i8* %1039 to i16**
  %1041 = bitcast i8* %1039 to i8**
  %1042 = load i8*, i8** %1041, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %715, i8* %1042) #11
  store i16* null, i16** %1040, align 8
  %1043 = bitcast i8* %711 to i32*
  store i32 0, i32* %1043, align 8
  %1044 = getelementptr inbounds i8, i8* %107, i64 1304
  %1045 = bitcast i8* %1044 to i64*
  store i64 0, i64* %1045, align 8
  %1046 = load i32, i32* %19, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %716) #11
  store i32 %1046, i32* %22, align 4
  %1047 = icmp eq i32 %1046, 0
  br i1 %1047, label %1048, label %1522

1048:                                             ; preds = %1034, %1033
  %1049 = load i32, i32* %292, align 4
  %1050 = icmp eq i32 %1049, 65535
  br i1 %1050, label %1051, label %1488

1051:                                             ; preds = %1048
  %1052 = load i32, i32* %697, align 4
  %1053 = getelementptr inbounds i8, i8* %107, i64 1824
  %1054 = bitcast i8* %1053 to i64*
  %1055 = load i64, i64* %1054, align 8
  %1056 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1056) #11
  store i32 0, i32* %17, align 4
  %1057 = getelementptr inbounds i8, i8* %107, i64 1312
  %1058 = bitcast i8* %1057 to i16**
  %1059 = load i16*, i16** %1058, align 8
  %1060 = icmp eq i16* %1059, null
  br i1 %1060, label %1064, label %1061

1061:                                             ; preds = %1051
  %1062 = getelementptr i8, i8* %107, i64 268
  %1063 = icmp ugt i64 %1055, 1
  call void @llvm.memset.p0i8.i64(i8* align 2 %1062, i8 0, i64 1024, i1 false) #11
  br i1 %1063, label %1065, label %1264

1064:                                             ; preds = %1051
  store i32 3, i32* %17, align 4
  br label %1482

1065:                                             ; preds = %1061
  %1066 = add i64 %1055, %120
  %1067 = getelementptr inbounds i8, i8* %107, i64 256
  %1068 = bitcast i8* %1067 to i64*
  store i64 %1066, i64* %1068, align 8
  %1069 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %0, i64 %1066) #11
  store i32 %1069, i32* %17, align 4
  %1070 = icmp eq i32 %1069, 0
  br i1 %1070, label %1071, label %1482

1071:                                             ; preds = %1065
  %1072 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %17) #11
  %1073 = zext i8 %1072 to i32
  %1074 = getelementptr inbounds i8, i8* %107, i64 248
  %1075 = bitcast i8* %1074 to i32*
  store i32 %1073, i32* %1075, align 8
  %1076 = load i32, i32* %17, align 4
  %1077 = icmp eq i32 %1076, 0
  br i1 %1077, label %1078, label %1482

1078:                                             ; preds = %1071
  %1079 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %17) #11
  %1080 = zext i8 %1079 to i32
  %1081 = load i32, i32* %17, align 4
  %1082 = icmp eq i32 %1081, 0
  br i1 %1082, label %1083, label %1482

1083:                                             ; preds = %1078
  %1084 = load i32, i32* %1075, align 8
  %1085 = and i32 %1084, 127
  switch i32 %1085, label %1219 [
    i32 0, label %1086
    i32 1, label %1141
  ]

1086:                                             ; preds = %1083
  %1087 = add nuw nsw i32 %1080, 1
  %1088 = getelementptr inbounds i8, i8* %107, i64 264
  %1089 = bitcast i8* %1088 to i32*
  store i32 %1087, i32* %1089, align 8
  %1090 = zext i8 %1079 to i64
  %1091 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %0, i64 %1090) #11
  store i32 %1091, i32* %17, align 4
  %1092 = icmp eq i32 %1091, 0
  br i1 %1092, label %1093, label %1482

1093:                                             ; preds = %1086
  %1094 = icmp eq i8 %1079, 0
  br i1 %1094, label %1140, label %1095

1095:                                             ; preds = %1093
  %1096 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 8
  %1097 = load i8*, i8** %1096, align 8
  %1098 = zext i32 %1052 to i64
  %1099 = zext i8 %1079 to i64
  %1100 = and i64 %1099, 1
  %1101 = icmp eq i8 %1079, 1
  br i1 %1101, label %1124, label %1102

1102:                                             ; preds = %1095
  %1103 = sub nsw i64 %1099, %1100
  br label %1104

1104:                                             ; preds = %2369, %1102
  %1105 = phi i64 [ 1, %1102 ], [ %2370, %2369 ]
  %1106 = phi i8* [ %1097, %1102 ], [ %1122, %2369 ]
  %1107 = phi i32 [ 1, %1102 ], [ %2371, %2369 ]
  %1108 = phi i64 [ %1103, %1102 ], [ %2372, %2369 ]
  %1109 = getelementptr inbounds i8, i8* %1106, i64 1
  %1110 = icmp ult i64 %1105, %1098
  br i1 %1110, label %1111, label %1120

1111:                                             ; preds = %1104
  %1112 = load i8, i8* %1106, align 1
  %1113 = trunc i32 %1107 to i16
  %1114 = zext i8 %1112 to i64
  %1115 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 4, i64 %1114
  store i16 %1113, i16* %1115, align 2
  %1116 = load i16*, i16** %1058, align 8
  %1117 = getelementptr inbounds i16, i16* %1116, i64 %1105
  %1118 = load i16, i16* %1117, align 2
  %1119 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 3, i64 %1114
  store i16 %1118, i16* %1119, align 2
  br label %1120

1120:                                             ; preds = %1111, %1104
  %1121 = add nuw nsw i64 %1105, 1
  %1122 = getelementptr inbounds i8, i8* %1106, i64 2
  %1123 = icmp ult i64 %1121, %1098
  br i1 %1123, label %2359, label %2369

1124:                                             ; preds = %2369, %1095
  %1125 = phi i64 [ 1, %1095 ], [ %2370, %2369 ]
  %1126 = phi i8* [ %1097, %1095 ], [ %1122, %2369 ]
  %1127 = phi i32 [ 1, %1095 ], [ %2371, %2369 ]
  %1128 = icmp ne i64 %1100, 0
  %1129 = icmp ult i64 %1125, %1098
  %1130 = and i1 %1128, %1129
  br i1 %1130, label %1131, label %1140

1131:                                             ; preds = %1124
  %1132 = load i8, i8* %1126, align 1
  %1133 = trunc i32 %1127 to i16
  %1134 = zext i8 %1132 to i64
  %1135 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 4, i64 %1134
  store i16 %1133, i16* %1135, align 2
  %1136 = load i16*, i16** %1058, align 8
  %1137 = getelementptr inbounds i16, i16* %1136, i64 %1125
  %1138 = load i16, i16* %1137, align 2
  %1139 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 3, i64 %1134
  store i16 %1138, i16* %1139, align 2
  br label %1140

1140:                                             ; preds = %1124, %1131, %1093
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %0) #11
  br label %1220

1141:                                             ; preds = %1083
  %1142 = getelementptr inbounds i8, i8* %107, i64 264
  %1143 = bitcast i8* %1142 to i32*
  store i32 0, i32* %1143, align 8
  %1144 = icmp eq i8 %1079, 0
  br i1 %1144, label %1220, label %1145

1145:                                             ; preds = %1141
  %1146 = zext i32 %1052 to i64
  br label %1147

1147:                                             ; preds = %1213, %1145
  %1148 = phi i32 [ %1166, %1213 ], [ 1, %1145 ]
  %1149 = phi i32 [ %1214, %1213 ], [ 0, %1145 ]
  %1150 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %17) #11
  %1151 = zext i8 %1150 to i32
  %1152 = load i32, i32* %17, align 4
  %1153 = icmp eq i32 %1152, 0
  br i1 %1153, label %1154, label %1482

1154:                                             ; preds = %1147
  %1155 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %17) #11
  %1156 = load i32, i32* %17, align 4
  %1157 = icmp eq i32 %1156, 0
  br i1 %1157, label %1158, label %1482

1158:                                             ; preds = %1154
  %1159 = zext i8 %1155 to i32
  %1160 = add nuw nsw i32 %1159, 1
  %1161 = load i32, i32* %1143, align 8
  %1162 = icmp ugt i32 %1161, %1159
  br i1 %1162, label %1164, label %1163

1163:                                             ; preds = %1158
  store i32 %1160, i32* %1143, align 8
  br label %1164

1164:                                             ; preds = %1163, %1158
  %1165 = phi i32 [ %1161, %1158 ], [ %1160, %1163 ]
  %1166 = add i32 %1160, %1148
  %1167 = icmp ult i32 %1148, %1166
  br i1 %1167, label %1168, label %1213

1168:                                             ; preds = %1164
  %1169 = zext i32 %1148 to i64
  %1170 = zext i32 %1166 to i64
  %1171 = sub nsw i64 %1170, %1169
  %1172 = xor i64 %1169, -1
  %1173 = and i64 %1171, 1
  %1174 = icmp eq i64 %1173, 0
  br i1 %1174, label %1188, label %1175

1175:                                             ; preds = %1168
  %1176 = icmp ult i32 %1148, %1052
  br i1 %1176, label %1177, label %1185

1177:                                             ; preds = %1175
  %1178 = trunc i32 %1148 to i16
  %1179 = zext i8 %1150 to i64
  %1180 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 4, i64 %1179
  store i16 %1178, i16* %1180, align 2
  %1181 = load i16*, i16** %1058, align 8
  %1182 = getelementptr inbounds i16, i16* %1181, i64 %1169
  %1183 = load i16, i16* %1182, align 2
  %1184 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 3, i64 %1179
  store i16 %1183, i16* %1184, align 2
  br label %1185

1185:                                             ; preds = %1177, %1175
  %1186 = add nuw nsw i64 %1169, 1
  %1187 = add nuw nsw i32 %1151, 1
  br label %1188

1188:                                             ; preds = %1185, %1168
  %1189 = phi i64 [ %1186, %1185 ], [ %1169, %1168 ]
  %1190 = phi i32 [ %1187, %1185 ], [ %1151, %1168 ]
  %1191 = sub nsw i64 0, %1170
  %1192 = icmp eq i64 %1172, %1191
  br i1 %1192, label %1213, label %1193

1193:                                             ; preds = %1188, %2382
  %1194 = phi i64 [ %2383, %2382 ], [ %1189, %1188 ]
  %1195 = phi i32 [ %2384, %2382 ], [ %1190, %1188 ]
  %1196 = icmp ult i64 %1194, %1146
  %1197 = icmp ult i32 %1195, 256
  %1198 = and i1 %1196, %1197
  br i1 %1198, label %1199, label %1207

1199:                                             ; preds = %1193
  %1200 = trunc i64 %1194 to i16
  %1201 = zext i32 %1195 to i64
  %1202 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 4, i64 %1201
  store i16 %1200, i16* %1202, align 2
  %1203 = load i16*, i16** %1058, align 8
  %1204 = getelementptr inbounds i16, i16* %1203, i64 %1194
  %1205 = load i16, i16* %1204, align 2
  %1206 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 3, i64 %1201
  store i16 %1205, i16* %1206, align 2
  br label %1207

1207:                                             ; preds = %1199, %1193
  %1208 = add nuw nsw i64 %1194, 1
  %1209 = add i32 %1195, 1
  %1210 = icmp ult i64 %1208, %1146
  %1211 = icmp ult i32 %1209, 256
  %1212 = and i1 %1210, %1211
  br i1 %1212, label %2374, label %2382

1213:                                             ; preds = %1188, %2382, %1164
  %1214 = add nuw nsw i32 %1149, 1
  %1215 = icmp eq i32 %1214, %1080
  br i1 %1215, label %1216, label %1147

1216:                                             ; preds = %1213
  %1217 = icmp ugt i32 %1165, 256
  br i1 %1217, label %1218, label %1220

1218:                                             ; preds = %1216
  store i32 256, i32* %1143, align 8
  br label %1220

1219:                                             ; preds = %1083
  store i32 3, i32* %17, align 4
  br label %1482

1220:                                             ; preds = %1218, %1216, %1141, %1140
  %1221 = load i32, i32* %1075, align 8
  %1222 = trunc i32 %1221 to i8
  %1223 = icmp slt i8 %1222, 0
  br i1 %1223, label %1226, label %1224

1224:                                             ; preds = %1220
  %1225 = load i32, i32* %17, align 4
  br label %1485

1226:                                             ; preds = %1220
  %1227 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %17) #11
  %1228 = zext i8 %1227 to i32
  %1229 = load i32, i32* %17, align 4
  %1230 = icmp eq i32 %1229, 0
  %1231 = icmp ne i8 %1227, 0
  %1232 = and i1 %1231, %1230
  br i1 %1232, label %1233, label %1485

1233:                                             ; preds = %1226
  %1234 = icmp eq i32 %1052, 0
  %1235 = zext i32 %1052 to i64
  br label %1236

1236:                                             ; preds = %1261, %1233
  %1237 = phi i32 [ 0, %1233 ], [ %1262, %1261 ]
  %1238 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %17) #11
  %1239 = load i32, i32* %17, align 4
  %1240 = icmp eq i32 %1239, 0
  br i1 %1240, label %1241, label %1482

1241:                                             ; preds = %1236
  %1242 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %17) #11
  %1243 = load i32, i32* %17, align 4
  %1244 = icmp eq i32 %1243, 0
  br i1 %1244, label %1245, label %1482

1245:                                             ; preds = %1241
  %1246 = zext i8 %1238 to i64
  %1247 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 3, i64 %1246
  store i16 %1242, i16* %1247, align 2
  br i1 %1234, label %1261, label %1248

1248:                                             ; preds = %1245
  %1249 = load i16*, i16** %1058, align 8
  br label %1250

1250:                                             ; preds = %1258, %1248
  %1251 = phi i64 [ 0, %1248 ], [ %1259, %1258 ]
  %1252 = getelementptr inbounds i16, i16* %1249, i64 %1251
  %1253 = load i16, i16* %1252, align 2
  %1254 = icmp eq i16 %1253, %1242
  br i1 %1254, label %1255, label %1258

1255:                                             ; preds = %1250
  %1256 = trunc i64 %1251 to i16
  %1257 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 4, i64 %1246
  store i16 %1256, i16* %1257, align 2
  br label %1261

1258:                                             ; preds = %1250
  %1259 = add nuw nsw i64 %1251, 1
  %1260 = icmp eq i64 %1259, %1235
  br i1 %1260, label %1261, label %1250

1261:                                             ; preds = %1258, %1255, %1245
  %1262 = add nuw nsw i32 %1237, 1
  %1263 = icmp eq i32 %1262, %1228
  br i1 %1263, label %1484, label %1236

1264:                                             ; preds = %1061
  %1265 = trunc i64 %1055 to i32
  switch i32 %1265, label %1481 [
    i32 0, label %1266
    i32 1, label %1267
  ]

1266:                                             ; preds = %1264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1062, i8* align 16 bitcast ([256 x i16]* @cff_standard_encoding to i8*), i64 512, i1 false) #11
  br label %1268

1267:                                             ; preds = %1264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1062, i8* align 16 bitcast ([256 x i16]* @cff_expert_encoding to i8*), i64 512, i1 false) #11
  br label %1268

1268:                                             ; preds = %1267, %1266
  %1269 = getelementptr inbounds i8, i8* %107, i64 264
  %1270 = bitcast i8* %1269 to i32*
  store i32 0, i32* %1270, align 8
  %1271 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %115, align 8
  %1272 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1272) #11
  store i32 0, i32* %16, align 4
  %1273 = getelementptr inbounds i8, i8* %107, i64 1328
  %1274 = bitcast i8* %1273 to i32*
  %1275 = load i32, i32* %1274, align 8
  %1276 = icmp eq i32 %1275, 0
  br i1 %1276, label %1278, label %1277

1277:                                             ; preds = %1268
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1272) #11
  store i32 0, i32* %17, align 4
  br label %1453

1278:                                             ; preds = %1268
  %1279 = icmp eq i32 %1052, 0
  br i1 %1279, label %1367, label %1280

1280:                                             ; preds = %1278
  %1281 = zext i32 %1052 to i64
  %1282 = icmp ult i32 %1052, 16
  br i1 %1282, label %1355, label %1283

1283:                                             ; preds = %1280
  %1284 = and i64 %1281, 4294967280
  %1285 = add nsw i64 %1284, -16
  %1286 = lshr exact i64 %1285, 4
  %1287 = add nuw nsw i64 %1286, 1
  %1288 = and i64 %1287, 1
  %1289 = icmp eq i64 %1285, 0
  br i1 %1289, label %1321, label %1290

1290:                                             ; preds = %1283
  %1291 = sub nuw nsw i64 %1287, %1288
  br label %1292

1292:                                             ; preds = %1292, %1290
  %1293 = phi i64 [ 0, %1290 ], [ %1318, %1292 ]
  %1294 = phi <8 x i16> [ zeroinitializer, %1290 ], [ %1316, %1292 ]
  %1295 = phi <8 x i16> [ zeroinitializer, %1290 ], [ %1317, %1292 ]
  %1296 = phi i64 [ %1291, %1290 ], [ %1319, %1292 ]
  %1297 = getelementptr inbounds i16, i16* %1059, i64 %1293
  %1298 = bitcast i16* %1297 to <8 x i16>*
  %1299 = load <8 x i16>, <8 x i16>* %1298, align 2
  %1300 = getelementptr inbounds i16, i16* %1297, i64 8
  %1301 = bitcast i16* %1300 to <8 x i16>*
  %1302 = load <8 x i16>, <8 x i16>* %1301, align 2
  %1303 = icmp ugt <8 x i16> %1299, %1294
  %1304 = icmp ugt <8 x i16> %1302, %1295
  %1305 = select <8 x i1> %1303, <8 x i16> %1299, <8 x i16> %1294
  %1306 = select <8 x i1> %1304, <8 x i16> %1302, <8 x i16> %1295
  %1307 = or i64 %1293, 16
  %1308 = getelementptr inbounds i16, i16* %1059, i64 %1307
  %1309 = bitcast i16* %1308 to <8 x i16>*
  %1310 = load <8 x i16>, <8 x i16>* %1309, align 2
  %1311 = getelementptr inbounds i16, i16* %1308, i64 8
  %1312 = bitcast i16* %1311 to <8 x i16>*
  %1313 = load <8 x i16>, <8 x i16>* %1312, align 2
  %1314 = icmp ugt <8 x i16> %1310, %1305
  %1315 = icmp ugt <8 x i16> %1313, %1306
  %1316 = select <8 x i1> %1314, <8 x i16> %1310, <8 x i16> %1305
  %1317 = select <8 x i1> %1315, <8 x i16> %1313, <8 x i16> %1306
  %1318 = add i64 %1293, 32
  %1319 = add i64 %1296, -2
  %1320 = icmp eq i64 %1319, 0
  br i1 %1320, label %1321, label %1292, !llvm.loop !10

1321:                                             ; preds = %1292, %1283
  %1322 = phi <8 x i16> [ undef, %1283 ], [ %1316, %1292 ]
  %1323 = phi <8 x i16> [ undef, %1283 ], [ %1317, %1292 ]
  %1324 = phi i64 [ 0, %1283 ], [ %1318, %1292 ]
  %1325 = phi <8 x i16> [ zeroinitializer, %1283 ], [ %1316, %1292 ]
  %1326 = phi <8 x i16> [ zeroinitializer, %1283 ], [ %1317, %1292 ]
  %1327 = icmp eq i64 %1288, 0
  br i1 %1327, label %1339, label %1328

1328:                                             ; preds = %1321
  %1329 = getelementptr inbounds i16, i16* %1059, i64 %1324
  %1330 = bitcast i16* %1329 to <8 x i16>*
  %1331 = load <8 x i16>, <8 x i16>* %1330, align 2
  %1332 = getelementptr inbounds i16, i16* %1329, i64 8
  %1333 = bitcast i16* %1332 to <8 x i16>*
  %1334 = load <8 x i16>, <8 x i16>* %1333, align 2
  %1335 = icmp ugt <8 x i16> %1334, %1326
  %1336 = select <8 x i1> %1335, <8 x i16> %1334, <8 x i16> %1326
  %1337 = icmp ugt <8 x i16> %1331, %1325
  %1338 = select <8 x i1> %1337, <8 x i16> %1331, <8 x i16> %1325
  br label %1339

1339:                                             ; preds = %1321, %1328
  %1340 = phi <8 x i16> [ %1322, %1321 ], [ %1338, %1328 ]
  %1341 = phi <8 x i16> [ %1323, %1321 ], [ %1336, %1328 ]
  %1342 = icmp ugt <8 x i16> %1340, %1341
  %1343 = select <8 x i1> %1342, <8 x i16> %1340, <8 x i16> %1341
  %1344 = shufflevector <8 x i16> %1343, <8 x i16> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %1345 = icmp ugt <8 x i16> %1343, %1344
  %1346 = select <8 x i1> %1345, <8 x i16> %1343, <8 x i16> %1344
  %1347 = shufflevector <8 x i16> %1346, <8 x i16> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1348 = icmp ugt <8 x i16> %1346, %1347
  %1349 = select <8 x i1> %1348, <8 x i16> %1346, <8 x i16> %1347
  %1350 = shufflevector <8 x i16> %1349, <8 x i16> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1351 = icmp ugt <8 x i16> %1349, %1350
  %1352 = select <8 x i1> %1351, <8 x i16> %1349, <8 x i16> %1350
  %1353 = extractelement <8 x i16> %1352, i32 0
  %1354 = icmp eq i64 %1284, %1281
  br i1 %1354, label %1367, label %1355

1355:                                             ; preds = %1339, %1280
  %1356 = phi i64 [ 0, %1280 ], [ %1284, %1339 ]
  %1357 = phi i16 [ 0, %1280 ], [ %1353, %1339 ]
  br label %1358

1358:                                             ; preds = %1355, %1358
  %1359 = phi i64 [ %1365, %1358 ], [ %1356, %1355 ]
  %1360 = phi i16 [ %1364, %1358 ], [ %1357, %1355 ]
  %1361 = getelementptr inbounds i16, i16* %1059, i64 %1359
  %1362 = load i16, i16* %1361, align 2
  %1363 = icmp ugt i16 %1362, %1360
  %1364 = select i1 %1363, i16 %1362, i16 %1360
  %1365 = add nuw nsw i64 %1359, 1
  %1366 = icmp eq i64 %1365, %1281
  br i1 %1366, label %1367, label %1358, !llvm.loop !11

1367:                                             ; preds = %1358, %1339, %1278
  %1368 = phi i16 [ 0, %1278 ], [ %1353, %1339 ], [ %1364, %1358 ]
  %1369 = zext i16 %1368 to i64
  %1370 = add nuw nsw i64 %1369, 1
  %1371 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %1271, i64 2, i64 0, i64 %1370, i8* null, i32* nonnull %16) #11
  %1372 = getelementptr inbounds i8, i8* %107, i64 1320
  %1373 = bitcast i8* %1372 to i16**
  %1374 = bitcast i8* %1372 to i8**
  store i8* %1371, i8** %1374, align 8
  %1375 = load i32, i32* %16, align 4
  %1376 = icmp eq i32 %1375, 0
  %1377 = bitcast i8* %1371 to i16*
  br i1 %1376, label %1379, label %1378

1378:                                             ; preds = %1367
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1272) #11
  store i32 %1375, i32* %17, align 4
  br label %1482

1379:                                             ; preds = %1367
  br i1 %1279, label %1447, label %1380

1380:                                             ; preds = %1379
  %1381 = zext i32 %1052 to i64
  %1382 = add nsw i64 %1381, -1
  %1383 = trunc i64 %1382 to i16
  %1384 = load i16*, i16** %1058, align 8
  %1385 = getelementptr inbounds i16, i16* %1384, i64 %1382
  %1386 = load i16, i16* %1385, align 2
  %1387 = zext i16 %1386 to i64
  %1388 = getelementptr inbounds i16, i16* %1377, i64 %1387
  store i16 %1383, i16* %1388, align 2
  %1389 = icmp sgt i64 %1382, 0
  br i1 %1389, label %1390, label %1445

1390:                                             ; preds = %1380
  %1391 = add nsw i64 %1381, -2
  %1392 = and i64 %1382, 3
  %1393 = icmp eq i64 %1392, 0
  br i1 %1393, label %1407, label %1394

1394:                                             ; preds = %1390, %1394
  %1395 = phi i64 [ %1398, %1394 ], [ %1382, %1390 ]
  %1396 = phi i64 [ %1405, %1394 ], [ %1392, %1390 ]
  %1397 = load i16*, i16** %1373, align 8
  %1398 = add nsw i64 %1395, -1
  %1399 = trunc i64 %1398 to i16
  %1400 = load i16*, i16** %1058, align 8
  %1401 = getelementptr inbounds i16, i16* %1400, i64 %1398
  %1402 = load i16, i16* %1401, align 2
  %1403 = zext i16 %1402 to i64
  %1404 = getelementptr inbounds i16, i16* %1397, i64 %1403
  store i16 %1399, i16* %1404, align 2
  %1405 = add i64 %1396, -1
  %1406 = icmp eq i64 %1405, 0
  br i1 %1406, label %1407, label %1394, !llvm.loop !12

1407:                                             ; preds = %1394, %1390
  %1408 = phi i64 [ %1382, %1390 ], [ %1398, %1394 ]
  %1409 = icmp ult i64 %1391, 3
  br i1 %1409, label %1445, label %1410

1410:                                             ; preds = %1407, %1410
  %1411 = phi i64 [ %1437, %1410 ], [ %1408, %1407 ]
  %1412 = load i16*, i16** %1373, align 8
  %1413 = add nsw i64 %1411, -1
  %1414 = trunc i64 %1413 to i16
  %1415 = load i16*, i16** %1058, align 8
  %1416 = getelementptr inbounds i16, i16* %1415, i64 %1413
  %1417 = load i16, i16* %1416, align 2
  %1418 = zext i16 %1417 to i64
  %1419 = getelementptr inbounds i16, i16* %1412, i64 %1418
  store i16 %1414, i16* %1419, align 2
  %1420 = load i16*, i16** %1373, align 8
  %1421 = add nsw i64 %1411, -2
  %1422 = trunc i64 %1421 to i16
  %1423 = load i16*, i16** %1058, align 8
  %1424 = getelementptr inbounds i16, i16* %1423, i64 %1421
  %1425 = load i16, i16* %1424, align 2
  %1426 = zext i16 %1425 to i64
  %1427 = getelementptr inbounds i16, i16* %1420, i64 %1426
  store i16 %1422, i16* %1427, align 2
  %1428 = load i16*, i16** %1373, align 8
  %1429 = add nsw i64 %1411, -3
  %1430 = trunc i64 %1429 to i16
  %1431 = load i16*, i16** %1058, align 8
  %1432 = getelementptr inbounds i16, i16* %1431, i64 %1429
  %1433 = load i16, i16* %1432, align 2
  %1434 = zext i16 %1433 to i64
  %1435 = getelementptr inbounds i16, i16* %1428, i64 %1434
  store i16 %1430, i16* %1435, align 2
  %1436 = load i16*, i16** %1373, align 8
  %1437 = add nsw i64 %1411, -4
  %1438 = trunc i64 %1437 to i16
  %1439 = load i16*, i16** %1058, align 8
  %1440 = getelementptr inbounds i16, i16* %1439, i64 %1437
  %1441 = load i16, i16* %1440, align 2
  %1442 = zext i16 %1441 to i64
  %1443 = getelementptr inbounds i16, i16* %1436, i64 %1442
  store i16 %1438, i16* %1443, align 2
  %1444 = icmp sgt i64 %1437, 0
  br i1 %1444, label %1410, label %1445

1445:                                             ; preds = %1407, %1410, %1380
  %1446 = load i32, i32* %16, align 4
  br label %1447

1447:                                             ; preds = %1445, %1379
  %1448 = phi i32 [ %1446, %1445 ], [ 0, %1379 ]
  %1449 = zext i16 %1368 to i32
  store i32 %1449, i32* %1274, align 8
  %1450 = getelementptr inbounds i8, i8* %107, i64 1332
  %1451 = bitcast i8* %1450 to i32*
  store i32 %1052, i32* %1451, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1272) #11
  store i32 %1448, i32* %17, align 4
  %1452 = icmp eq i32 %1448, 0
  br i1 %1452, label %1453, label %1482

1453:                                             ; preds = %1447, %1277
  %1454 = getelementptr inbounds i8, i8* %107, i64 1320
  %1455 = bitcast i8* %1454 to i16**
  br label %1456

1456:                                             ; preds = %1478, %1453
  %1457 = phi i64 [ 0, %1453 ], [ %1479, %1478 ]
  %1458 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 3, i64 %1457
  %1459 = load i16, i16* %1458, align 2
  %1460 = icmp eq i16 %1459, 0
  br i1 %1460, label %1475, label %1461

1461:                                             ; preds = %1456
  %1462 = zext i16 %1459 to i32
  %1463 = load i32, i32* %1274, align 8
  %1464 = icmp ult i32 %1463, %1462
  br i1 %1464, label %1475, label %1465

1465:                                             ; preds = %1461
  %1466 = load i16*, i16** %1455, align 8
  %1467 = zext i16 %1459 to i64
  %1468 = getelementptr inbounds i16, i16* %1466, i64 %1467
  %1469 = load i16, i16* %1468, align 2
  %1470 = icmp eq i16 %1469, 0
  br i1 %1470, label %1475, label %1471

1471:                                             ; preds = %1465
  %1472 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 4, i64 %1457
  store i16 %1469, i16* %1472, align 2
  %1473 = add nuw nsw i64 %1457, 1
  %1474 = trunc i64 %1473 to i32
  store i32 %1474, i32* %1270, align 8
  br label %1478

1475:                                             ; preds = %1465, %1461, %1456
  %1476 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 4, i64 %1457
  store i16 0, i16* %1476, align 2
  store i16 0, i16* %1458, align 2
  %1477 = add nuw nsw i64 %1457, 1
  br label %1478

1478:                                             ; preds = %1475, %1471
  %1479 = phi i64 [ %1477, %1475 ], [ %1473, %1471 ]
  %1480 = icmp eq i64 %1479, 256
  br i1 %1480, label %1484, label %1456

1481:                                             ; preds = %1264
  store i32 3, i32* %17, align 4
  br label %1482

1482:                                             ; preds = %1154, %1147, %1241, %1236, %1481, %1447, %1378, %1219, %1086, %1078, %1071, %1065, %1064
  %1483 = phi i32 [ 3, %1064 ], [ 3, %1219 ], [ 3, %1481 ], [ %1448, %1447 ], [ %1069, %1065 ], [ %1076, %1071 ], [ %1081, %1078 ], [ %1091, %1086 ], [ %1375, %1378 ], [ %1239, %1236 ], [ %1243, %1241 ], [ %1156, %1154 ], [ %1152, %1147 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1056) #11
  store i32 %1483, i32* %22, align 4
  br label %1522

1484:                                             ; preds = %1478, %1261
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1056) #11
  store i32 0, i32* %22, align 4
  br label %1488

1485:                                             ; preds = %1226, %1224
  %1486 = phi i32 [ %1225, %1224 ], [ %1229, %1226 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1056) #11
  store i32 %1486, i32* %22, align 4
  %1487 = icmp eq i32 %1486, 0
  br i1 %1487, label %1488, label %1522

1488:                                             ; preds = %1485, %1484, %1048, %705, %704
  %1489 = getelementptr inbounds i8, i8* %107, i64 56
  %1490 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1490) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %13, align 8
  %1491 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1491) #11
  store i64 -6148914691236517206, i64* %14, align 8
  %1492 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1492) #11
  store i32 -1431655766, i32* %15, align 4
  %1493 = bitcast i8* %1489 to %struct.FT_StreamRec_**
  %1494 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %1493, align 8
  %1495 = icmp eq %struct.FT_StreamRec_* %1494, null
  br i1 %1495, label %1518, label %1496

1496:                                             ; preds = %1488
  %1497 = bitcast i8* %1489 to %struct.CFF_IndexRec_*
  %1498 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1494, i64 0, i32 7
  %1499 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %1498, align 8
  %1500 = call fastcc i32 @cff_index_access_element(%struct.CFF_IndexRec_* %1497, i32 %270, i8** nonnull %13, i64* nonnull %14) #11
  store i32 %1500, i32* %15, align 4
  %1501 = icmp eq i32 %1500, 0
  br i1 %1501, label %1502, label %1518

1502:                                             ; preds = %1496
  %1503 = load i64, i64* %14, align 8
  %1504 = add i64 %1503, 1
  %1505 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %1499, i64 %1504, i32* nonnull %15) #11
  %1506 = load i32, i32* %15, align 4
  %1507 = icmp eq i32 %1506, 0
  br i1 %1507, label %1508, label %1511

1508:                                             ; preds = %1502
  %1509 = load i8*, i8** %13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1505, i8* align 1 %1509, i64 %1503, i1 false) #11
  %1510 = getelementptr inbounds i8, i8* %1505, i64 %1503
  store i8 0, i8* %1510, align 1
  br label %1511

1511:                                             ; preds = %1508, %1502
  %1512 = getelementptr inbounds i8, i8* %107, i64 112
  %1513 = bitcast i8* %1512 to i8**
  %1514 = load i8*, i8** %1513, align 8
  %1515 = icmp eq i8* %1514, null
  br i1 %1515, label %1516, label %1518

1516:                                             ; preds = %1511
  %1517 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %1493, align 8
  call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %1517, i8** nonnull %13) #11
  br label %1518

1518:                                             ; preds = %1516, %1511, %1496, %1488
  %1519 = phi i8* [ null, %1496 ], [ null, %1488 ], [ %1505, %1511 ], [ %1505, %1516 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1492) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1491) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1490) #11
  %1520 = getelementptr inbounds i8, i8* %107, i64 1592
  %1521 = bitcast i8* %1520 to i8**
  store i8* %1519, i8** %1521, align 8
  br label %1522

1522:                                             ; preds = %1518, %1485, %1482, %1034, %692, %691, %683, %285, %278, %272, %269, %268, %259, %244, %229, %224, %221, %216, %213, %201, %199, %189, %176, %174, %172, %165, %151, %142, %141, %111
  %1523 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %23, i64 0, i32 0
  %1524 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %1523, align 8
  %1525 = icmp eq %struct.FT_StreamRec_* %1524, null
  br i1 %1525, label %1537, label %1526

1526:                                             ; preds = %1522
  %1527 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1524, i64 0, i32 7
  %1528 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %1527, align 8
  %1529 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %23, i64 0, i32 8
  %1530 = load i8*, i8** %1529, align 8
  %1531 = icmp eq i8* %1530, null
  br i1 %1531, label %1533, label %1532

1532:                                             ; preds = %1526
  call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* nonnull %1524, i8** %1529) #11
  br label %1533

1533:                                             ; preds = %1532, %1526
  %1534 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %23, i64 0, i32 7
  %1535 = bitcast i64** %1534 to i8**
  %1536 = load i8*, i8** %1535, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %1528, i8* %1536) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 0, i64 64, i1 false) #11
  br label %1537

1537:                                             ; preds = %1522, %1533
  %1538 = load i32, i32* %22, align 4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %117) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #11
  store i32 %1538, i32* %25, align 4
  %1539 = icmp eq i32 %1538, 0
  br i1 %1539, label %1540, label %2357

1540:                                             ; preds = %1537
  %1541 = icmp slt i32 %2, 0
  br i1 %1541, label %1542, label %1548

1542:                                             ; preds = %1540
  %1543 = getelementptr inbounds i8, i8* %107, i64 32
  %1544 = bitcast i8* %1543 to i32*
  %1545 = load i32, i32* %1544, align 8
  %1546 = zext i32 %1545 to i64
  %1547 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 0
  store i64 %1546, i64* %1547, align 8
  br label %2357

1548:                                             ; preds = %1540
  %1549 = getelementptr inbounds i8, i8* %107, i64 4952
  %1550 = bitcast i8* %1549 to i8**
  store i8* %40, i8** %1550, align 8
  %1551 = getelementptr inbounds i8, i8* %107, i64 4960
  %1552 = bitcast i8* %1551 to i8**
  store i8* %39, i8** %1552, align 8
  %1553 = getelementptr inbounds i8, i8* %107, i64 4968
  %1554 = bitcast i8* %1553 to i8**
  store i8* %48, i8** %1554, align 8
  %1555 = and i32 %2, 65535
  %1556 = zext i32 %1555 to i64
  %1557 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 1
  store i64 %1556, i64* %1557, align 8
  %1558 = getelementptr inbounds i8, i8* %107, i64 36
  %1559 = bitcast i8* %1558 to i32*
  %1560 = load i32, i32* %1559, align 4
  %1561 = zext i32 %1560 to i64
  %1562 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 4
  store i64 %1561, i64* %1562, align 8
  %1563 = getelementptr inbounds i8, i8* %107, i64 1868
  %1564 = bitcast i8* %1563 to i32*
  %1565 = load i32, i32* %1564, align 4
  %1566 = icmp ne i32 %1565, 65535
  %1567 = icmp ne i8* %39, null
  %1568 = or i1 %1567, %1566
  br i1 %1568, label %1570, label %1569

1569:                                             ; preds = %1548
  store i32 11, i32* %25, align 4
  br label %2357

1570:                                             ; preds = %1548
  %1571 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 21
  %1572 = bitcast %struct.FT_GlyphSlotRec_** %1571 to %struct.FT_Service_MultiMastersRec_**
  %1573 = load %struct.FT_Service_MultiMastersRec_*, %struct.FT_Service_MultiMastersRec_** %1572, align 8
  %1574 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 22
  %1575 = bitcast %struct.FT_SizeRec_** %1574 to %struct.FT_Service_MetricsVariationsRec_**
  %1576 = load %struct.FT_Service_MetricsVariationsRec_*, %struct.FT_Service_MetricsVariationsRec_** %1575, align 8
  %1577 = lshr i32 %2, 16
  %1578 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 2
  %1579 = load i64, i64* %1578, align 8
  %1580 = and i64 %1579, 256
  %1581 = icmp ne i64 %1580, 0
  %1582 = icmp ne %struct.FT_Service_MultiMastersRec_* %1573, null
  %1583 = and i1 %1582, %1581
  %1584 = icmp ne i32 %1577, 0
  %1585 = and i1 %1584, %1583
  br i1 %1585, label %1586, label %1596

1586:                                             ; preds = %1570
  %1587 = getelementptr inbounds %struct.FT_Service_MultiMastersRec_, %struct.FT_Service_MultiMastersRec_* %1573, i64 0, i32 7
  %1588 = load i32 (%struct.FT_FaceRec_*, i32)*, i32 (%struct.FT_FaceRec_*, i32)** %1587, align 8
  %1589 = call i32 %1588(%struct.FT_FaceRec_* %1, i32 %1577) #11
  store i32 %1589, i32* %25, align 4
  %1590 = icmp eq i32 %1589, 0
  br i1 %1590, label %1591, label %2357

1591:                                             ; preds = %1586
  %1592 = icmp eq %struct.FT_Service_MetricsVariationsRec_* %1576, null
  br i1 %1592, label %1596, label %1593

1593:                                             ; preds = %1591
  %1594 = getelementptr inbounds %struct.FT_Service_MetricsVariationsRec_, %struct.FT_Service_MetricsVariationsRec_* %1576, i64 0, i32 7
  %1595 = load void (%struct.FT_FaceRec_*)*, void (%struct.FT_FaceRec_*)** %1594, align 8
  call void %1595(%struct.FT_FaceRec_* %1) #11
  br label %1596

1596:                                             ; preds = %1591, %1593, %1570
  %1597 = getelementptr inbounds i8, i8* %107, i64 1736
  %1598 = load i8, i8* %1597, align 8
  %1599 = icmp eq i8 %1598, 0
  br i1 %1599, label %1600, label %1610

1600:                                             ; preds = %1596
  %1601 = icmp eq i8 %102, 0
  br i1 %1601, label %1602, label %1606

1602:                                             ; preds = %1600
  %1603 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 13
  %1604 = load i16, i16* %1603, align 8
  %1605 = zext i16 %1604 to i64
  br label %1606

1606:                                             ; preds = %1600, %1602
  %1607 = phi i64 [ %1605, %1602 ], [ 1000, %1600 ]
  %1608 = getelementptr inbounds i8, i8* %107, i64 1744
  %1609 = bitcast i8* %1608 to i64*
  store i64 %1607, i64* %1609, align 8
  br label %1610

1610:                                             ; preds = %1596, %1606
  %1611 = getelementptr inbounds i8, i8* %107, i64 1704
  %1612 = bitcast i8* %1611 to %struct.FT_Matrix_*
  %1613 = getelementptr inbounds i8, i8* %107, i64 1752
  %1614 = getelementptr inbounds i8, i8* %107, i64 1744
  %1615 = bitcast i8* %1614 to i64*
  %1616 = getelementptr inbounds i8, i8* %107, i64 1728
  %1617 = bitcast i8* %1616 to i64*
  %1618 = load i64, i64* %1617, align 8
  %1619 = icmp eq i64 %1618, 0
  br i1 %1619, label %1620, label %1624

1620:                                             ; preds = %1610
  %1621 = getelementptr inbounds i8, i8* %107, i64 1720
  %1622 = bitcast i8* %1621 to i64*
  %1623 = load i64, i64* %1622, align 8
  br label %1624

1624:                                             ; preds = %1610, %1620
  %1625 = phi i64 [ %1623, %1620 ], [ %1618, %1610 ]
  %1626 = icmp slt i64 %1625, 0
  %1627 = sub nsw i64 0, %1625
  %1628 = select i1 %1626, i64 %1627, i64 %1625
  %1629 = icmp eq i64 %1628, 65536
  br i1 %1629, label %1630, label %1635

1630:                                             ; preds = %1624
  %1631 = getelementptr inbounds i8, i8* %107, i64 1760
  %1632 = bitcast i8* %1631 to i64*
  %1633 = load i64, i64* %1632, align 8
  %1634 = bitcast i8* %1613 to i64*
  br label %1658

1635:                                             ; preds = %1624
  %1636 = load i64, i64* %1615, align 8
  %1637 = call i64 @FT_DivFix(i64 %1636, i64 %1628) #11
  store i64 %1637, i64* %1615, align 8
  %1638 = bitcast i8* %1611 to i64*
  %1639 = load i64, i64* %1638, align 8
  %1640 = call i64 @FT_DivFix(i64 %1639, i64 %1628) #11
  store i64 %1640, i64* %1638, align 8
  %1641 = getelementptr inbounds i8, i8* %107, i64 1720
  %1642 = bitcast i8* %1641 to i64*
  %1643 = load i64, i64* %1642, align 8
  %1644 = call i64 @FT_DivFix(i64 %1643, i64 %1628) #11
  store i64 %1644, i64* %1642, align 8
  %1645 = getelementptr inbounds i8, i8* %107, i64 1712
  %1646 = bitcast i8* %1645 to i64*
  %1647 = load i64, i64* %1646, align 8
  %1648 = call i64 @FT_DivFix(i64 %1647, i64 %1628) #11
  store i64 %1648, i64* %1646, align 8
  %1649 = load i64, i64* %1617, align 8
  %1650 = call i64 @FT_DivFix(i64 %1649, i64 %1628) #11
  store i64 %1650, i64* %1617, align 8
  %1651 = bitcast i8* %1613 to i64*
  %1652 = load i64, i64* %1651, align 8
  %1653 = call i64 @FT_DivFix(i64 %1652, i64 %1628) #11
  store i64 %1653, i64* %1651, align 8
  %1654 = getelementptr inbounds i8, i8* %107, i64 1760
  %1655 = bitcast i8* %1654 to i64*
  %1656 = load i64, i64* %1655, align 8
  %1657 = call i64 @FT_DivFix(i64 %1656, i64 %1628) #11
  store i64 %1657, i64* %1655, align 8
  br label %1658

1658:                                             ; preds = %1630, %1635
  %1659 = phi i64* [ %1632, %1630 ], [ %1655, %1635 ]
  %1660 = phi i64* [ %1634, %1630 ], [ %1651, %1635 ]
  %1661 = phi i64 [ %1633, %1630 ], [ %1657, %1635 ]
  %1662 = load i64, i64* %1660, align 8
  %1663 = ashr i64 %1662, 16
  store i64 %1663, i64* %1660, align 8
  %1664 = ashr i64 %1661, 16
  store i64 %1664, i64* %1659, align 8
  %1665 = getelementptr inbounds i8, i8* %107, i64 2864
  %1666 = bitcast i8* %1665 to i32*
  %1667 = load i32, i32* %1666, align 8
  %1668 = icmp eq i32 %1667, 0
  br i1 %1668, label %1758, label %1669

1669:                                             ; preds = %1658
  %1670 = getelementptr inbounds i8, i8* %107, i64 2872
  %1671 = bitcast i8* %1670 to [256 x %struct.CFF_SubFontRec_*]*
  %1672 = zext i32 %1667 to i64
  br label %1673

1673:                                             ; preds = %1669, %1749
  %1674 = phi i64 [ %1672, %1669 ], [ %1757, %1749 ]
  %1675 = trunc i64 %1674 to i32
  %1676 = add i32 %1675, -1
  %1677 = zext i32 %1676 to i64
  %1678 = getelementptr inbounds [256 x %struct.CFF_SubFontRec_*], [256 x %struct.CFF_SubFontRec_*]* %1671, i64 0, i64 %1677
  %1679 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %1678, align 8
  %1680 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 13
  %1681 = load i8, i8* %1680, align 8
  %1682 = icmp eq i8 %1681, 0
  br i1 %1682, label %1704, label %1683

1683:                                             ; preds = %1673
  %1684 = load i8, i8* %1597, align 8
  %1685 = icmp eq i8 %1684, 0
  br i1 %1685, label %1711, label %1686

1686:                                             ; preds = %1683
  %1687 = load i64, i64* %1615, align 8
  %1688 = icmp ugt i64 %1687, 1
  br i1 %1688, label %1689, label %1696

1689:                                             ; preds = %1686
  %1690 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 14
  %1691 = load i64, i64* %1690, align 8
  %1692 = icmp ugt i64 %1691, 1
  br i1 %1692, label %1693, label %1696

1693:                                             ; preds = %1689
  %1694 = icmp ult i64 %1687, %1691
  %1695 = select i1 %1694, i64 %1687, i64 %1691
  br label %1696

1696:                                             ; preds = %1686, %1689, %1693
  %1697 = phi i64 [ %1695, %1693 ], [ 1, %1689 ], [ 1, %1686 ]
  %1698 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 12
  call void @FT_Matrix_Multiply_Scaled(%struct.FT_Matrix_* %1612, %struct.FT_Matrix_* %1698, i64 %1697) #11
  %1699 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 15
  call void @FT_Vector_Transform_Scaled(%struct.FT_Vector_* %1699, %struct.FT_Matrix_* %1612, i64 %1697) #11
  %1700 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 14
  %1701 = load i64, i64* %1700, align 8
  %1702 = load i64, i64* %1615, align 8
  %1703 = call i64 @FT_MulDiv(i64 %1701, i64 %1702, i64 %1697) #11
  store i64 %1703, i64* %1700, align 8
  br label %1711

1704:                                             ; preds = %1673
  %1705 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 12
  %1706 = bitcast %struct.FT_Matrix_* %1705 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1706, i8* align 8 %1611, i64 32, i1 false)
  %1707 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 15
  %1708 = bitcast %struct.FT_Vector_* %1707 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1708, i8* align 8 %1613, i64 16, i1 false)
  %1709 = load i64, i64* %1615, align 8
  %1710 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 14
  store i64 %1709, i64* %1710, align 8
  br label %1711

1711:                                             ; preds = %1696, %1683, %1704
  %1712 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 15
  %1713 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 14
  %1714 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 12, i32 3
  %1715 = load i64, i64* %1714, align 8
  %1716 = icmp eq i64 %1715, 0
  br i1 %1716, label %1717, label %1720

1717:                                             ; preds = %1711
  %1718 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 12, i32 2
  %1719 = load i64, i64* %1718, align 8
  br label %1720

1720:                                             ; preds = %1711, %1717
  %1721 = phi i64 [ %1719, %1717 ], [ %1715, %1711 ]
  %1722 = icmp slt i64 %1721, 0
  %1723 = sub nsw i64 0, %1721
  %1724 = select i1 %1722, i64 %1723, i64 %1721
  %1725 = icmp eq i64 %1724, 65536
  br i1 %1725, label %1726, label %1729

1726:                                             ; preds = %1720
  %1727 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 15, i32 1
  %1728 = load i64, i64* %1727, align 8
  br label %1749

1729:                                             ; preds = %1720
  %1730 = load i64, i64* %1713, align 8
  %1731 = call i64 @FT_DivFix(i64 %1730, i64 %1724) #11
  store i64 %1731, i64* %1713, align 8
  %1732 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 12, i32 0
  %1733 = load i64, i64* %1732, align 8
  %1734 = call i64 @FT_DivFix(i64 %1733, i64 %1724) #11
  store i64 %1734, i64* %1732, align 8
  %1735 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 12, i32 2
  %1736 = load i64, i64* %1735, align 8
  %1737 = call i64 @FT_DivFix(i64 %1736, i64 %1724) #11
  store i64 %1737, i64* %1735, align 8
  %1738 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 12, i32 1
  %1739 = load i64, i64* %1738, align 8
  %1740 = call i64 @FT_DivFix(i64 %1739, i64 %1724) #11
  store i64 %1740, i64* %1738, align 8
  %1741 = load i64, i64* %1714, align 8
  %1742 = call i64 @FT_DivFix(i64 %1741, i64 %1724) #11
  store i64 %1742, i64* %1714, align 8
  %1743 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1712, i64 0, i32 0
  %1744 = load i64, i64* %1743, align 8
  %1745 = call i64 @FT_DivFix(i64 %1744, i64 %1724) #11
  store i64 %1745, i64* %1743, align 8
  %1746 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 15, i32 1
  %1747 = load i64, i64* %1746, align 8
  %1748 = call i64 @FT_DivFix(i64 %1747, i64 %1724) #11
  store i64 %1748, i64* %1746, align 8
  br label %1749

1749:                                             ; preds = %1726, %1729
  %1750 = phi i64 [ %1728, %1726 ], [ %1748, %1729 ]
  %1751 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1712, i64 0, i32 0
  %1752 = load i64, i64* %1751, align 8
  %1753 = ashr i64 %1752, 16
  store i64 %1753, i64* %1751, align 8
  %1754 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1679, i64 0, i32 0, i32 15, i32 1
  %1755 = ashr i64 %1750, 16
  store i64 %1755, i64* %1754, align 8
  %1756 = icmp eq i32 %1676, 0
  %1757 = add nsw i64 %1674, -1
  br i1 %1756, label %1758, label %1673

1758:                                             ; preds = %1749, %1658
  %1759 = icmp eq i8 %102, 0
  br i1 %1759, label %2273, label %1760

1760:                                             ; preds = %1758
  %1761 = getelementptr inbounds i8, i8* %107, i64 32
  %1762 = bitcast i8* %1761 to i32*
  %1763 = load i32, i32* %1762, align 8
  %1764 = zext i32 %1763 to i64
  %1765 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 0
  store i64 %1764, i64* %1765, align 8
  %1766 = load i32, i32* %1564, align 4
  %1767 = icmp eq i32 %1766, 65535
  br i1 %1767, label %1773, label %1768

1768:                                             ; preds = %1760
  %1769 = getelementptr inbounds i8, i8* %107, i64 1328
  %1770 = bitcast i8* %1769 to i32*
  %1771 = load i32, i32* %1770, align 8
  %1772 = add i32 %1771, 1
  br label %1777

1773:                                             ; preds = %1760
  %1774 = getelementptr inbounds i8, i8* %107, i64 1356
  %1775 = bitcast i8* %1774 to i32*
  %1776 = load i32, i32* %1775, align 4
  br label %1777

1777:                                             ; preds = %1773, %1768
  %1778 = phi i32 [ %1776, %1773 ], [ %1772, %1768 ]
  %1779 = zext i32 %1778 to i64
  store i64 %1779, i64* %1562, align 8
  %1780 = getelementptr inbounds i8, i8* %107, i64 1776
  %1781 = bitcast i8* %1780 to i64*
  %1782 = load i64, i64* %1781, align 8
  %1783 = ashr i64 %1782, 16
  %1784 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 12, i32 0
  store i64 %1783, i64* %1784, align 8
  %1785 = getelementptr inbounds i8, i8* %107, i64 1784
  %1786 = bitcast i8* %1785 to i64*
  %1787 = load i64, i64* %1786, align 8
  %1788 = ashr i64 %1787, 16
  %1789 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 12, i32 1
  store i64 %1788, i64* %1789, align 8
  %1790 = getelementptr inbounds i8, i8* %107, i64 1792
  %1791 = bitcast i8* %1790 to i64*
  %1792 = load i64, i64* %1791, align 8
  %1793 = add nsw i64 %1792, 65535
  %1794 = ashr i64 %1793, 16
  %1795 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 12, i32 2
  store i64 %1794, i64* %1795, align 8
  %1796 = getelementptr inbounds i8, i8* %107, i64 1800
  %1797 = bitcast i8* %1796 to i64*
  %1798 = load i64, i64* %1797, align 8
  %1799 = add nsw i64 %1798, 65535
  %1800 = ashr i64 %1799, 16
  %1801 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 12, i32 3
  store i64 %1800, i64* %1801, align 8
  %1802 = load i64, i64* %1615, align 8
  %1803 = trunc i64 %1802 to i16
  %1804 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 13
  store i16 %1803, i16* %1804, align 8
  %1805 = trunc i64 %1800 to i16
  %1806 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 14
  store i16 %1805, i16* %1806, align 2
  %1807 = trunc i64 %1788 to i16
  %1808 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 15
  store i16 %1807, i16* %1808, align 4
  %1809 = trunc i64 %1802 to i32
  %1810 = and i32 %1809, 65535
  %1811 = mul nuw nsw i32 %1810, 12
  %1812 = udiv i32 %1811, 10
  %1813 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 16
  %1814 = shl i32 %1812, 16
  %1815 = ashr exact i32 %1814, 16
  %1816 = sext i16 %1805 to i32
  %1817 = sext i16 %1807 to i32
  %1818 = sub nsw i32 %1816, %1817
  %1819 = icmp slt i32 %1815, %1818
  %1820 = select i1 %1819, i32 %1818, i32 %1812
  %1821 = trunc i32 %1820 to i16
  store i16 %1821, i16* %1813, align 2
  %1822 = getelementptr inbounds i8, i8* %107, i64 1680
  %1823 = bitcast i8* %1822 to i64*
  %1824 = load i64, i64* %1823, align 8
  %1825 = lshr i64 %1824, 16
  %1826 = trunc i64 %1825 to i16
  %1827 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 19
  store i16 %1826, i16* %1827, align 4
  %1828 = getelementptr inbounds i8, i8* %107, i64 1688
  %1829 = bitcast i8* %1828 to i64*
  %1830 = load i64, i64* %1829, align 8
  %1831 = lshr i64 %1830, 16
  %1832 = trunc i64 %1831 to i16
  %1833 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 20
  store i16 %1832, i16* %1833, align 2
  %1834 = getelementptr inbounds i8, i8* %107, i64 1656
  %1835 = bitcast i8* %1834 to i32*
  %1836 = load i32, i32* %1835, align 8
  switch i32 %1836, label %1837 [
    i32 0, label %1867
    i32 65535, label %1867
  ]

1837:                                             ; preds = %1777
  %1838 = icmp ugt i32 %1836, 390
  br i1 %1838, label %1839, label %1852

1839:                                             ; preds = %1837
  %1840 = add i32 %1836, -391
  %1841 = getelementptr inbounds i8, i8* %107, i64 1608
  %1842 = bitcast i8* %1841 to i32*
  %1843 = load i32, i32* %1842, align 8
  %1844 = icmp ugt i32 %1843, %1840
  br i1 %1844, label %1845, label %1867

1845:                                             ; preds = %1839
  %1846 = getelementptr inbounds i8, i8* %107, i64 1616
  %1847 = bitcast i8* %1846 to i8***
  %1848 = load i8**, i8*** %1847, align 8
  %1849 = zext i32 %1840 to i64
  %1850 = getelementptr inbounds i8*, i8** %1848, i64 %1849
  %1851 = load i8*, i8** %1850, align 8
  br label %1860

1852:                                             ; preds = %1837
  %1853 = bitcast i8* %1551 to %struct.FT_Service_PsCMapsRec_**
  %1854 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %1853, align 8
  %1855 = icmp eq %struct.FT_Service_PsCMapsRec_* %1854, null
  br i1 %1855, label %1867, label %1856

1856:                                             ; preds = %1852
  %1857 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %1854, i64 0, i32 5
  %1858 = load i8* (i32)*, i8* (i32)** %1857, align 8
  %1859 = call i8* %1858(i32 %1836) #11
  br label %1860

1860:                                             ; preds = %1845, %1856
  %1861 = phi i8* [ %1859, %1856 ], [ %1851, %1845 ]
  %1862 = icmp eq i8* %1861, null
  br i1 %1862, label %1867, label %1863

1863:                                             ; preds = %1860
  %1864 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1864) #11
  store i32 -1431655766, i32* %12, align 4
  %1865 = call i8* @ft_mem_strdup(%struct.FT_MemoryRec_* %106, i8* nonnull %1861, i32* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1864) #11
  %1866 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 5
  store i8* %1865, i8** %1866, align 8
  br label %1867

1867:                                             ; preds = %1777, %1777, %1839, %1852, %1863, %1860
  %1868 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 5
  %1869 = load i8*, i8** %1868, align 8
  %1870 = icmp eq i8* %1869, null
  br i1 %1870, label %1871, label %2051

1871:                                             ; preds = %1867
  %1872 = getelementptr inbounds i8, i8* %107, i64 56
  %1873 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1873) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %1874 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1874) #11
  store i64 -6148914691236517206, i64* %10, align 8
  %1875 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1875) #11
  store i32 -1431655766, i32* %11, align 4
  %1876 = bitcast i8* %1872 to %struct.FT_StreamRec_**
  %1877 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %1876, align 8
  %1878 = icmp eq %struct.FT_StreamRec_* %1877, null
  br i1 %1878, label %1901, label %1879

1879:                                             ; preds = %1871
  %1880 = bitcast i8* %1872 to %struct.CFF_IndexRec_*
  %1881 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1877, i64 0, i32 7
  %1882 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %1881, align 8
  %1883 = call fastcc i32 @cff_index_access_element(%struct.CFF_IndexRec_* %1880, i32 %1555, i8** nonnull %9, i64* nonnull %10) #11
  store i32 %1883, i32* %11, align 4
  %1884 = icmp eq i32 %1883, 0
  br i1 %1884, label %1885, label %1901

1885:                                             ; preds = %1879
  %1886 = load i64, i64* %10, align 8
  %1887 = add i64 %1886, 1
  %1888 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %1882, i64 %1887, i32* nonnull %11) #11
  %1889 = load i32, i32* %11, align 4
  %1890 = icmp eq i32 %1889, 0
  br i1 %1890, label %1891, label %1894

1891:                                             ; preds = %1885
  %1892 = load i8*, i8** %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1888, i8* align 1 %1892, i64 %1886, i1 false) #11
  %1893 = getelementptr inbounds i8, i8* %1888, i64 %1886
  store i8 0, i8* %1893, align 1
  br label %1894

1894:                                             ; preds = %1891, %1885
  %1895 = getelementptr inbounds i8, i8* %107, i64 112
  %1896 = bitcast i8* %1895 to i8**
  %1897 = load i8*, i8** %1896, align 8
  %1898 = icmp eq i8* %1897, null
  br i1 %1898, label %1899, label %1901

1899:                                             ; preds = %1894
  %1900 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %1876, align 8
  call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %1900, i8** nonnull %9) #11
  br label %1901

1901:                                             ; preds = %1899, %1894, %1871, %1879
  %1902 = phi i8* [ null, %1879 ], [ null, %1871 ], [ %1888, %1894 ], [ %1888, %1899 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1875) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1874) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1873) #11
  store i8* %1902, i8** %1868, align 8
  %1903 = icmp eq i8* %1902, null
  br i1 %1903, label %2160, label %1904

1904:                                             ; preds = %1901
  %1905 = call i64 @strlen(i8* nonnull %1902) #12
  %1906 = trunc i64 %1905 to i32
  %1907 = getelementptr inbounds i8, i8* %1902, i64 6
  %1908 = getelementptr inbounds i8, i8* %1902, i64 1
  %1909 = getelementptr inbounds i8, i8* %1902, i64 2
  %1910 = icmp sgt i32 %1906, 5
  br i1 %1910, label %1911, label %2051

1911:                                             ; preds = %1904
  %1912 = add nuw nsw i32 %1906, 1
  %1913 = add i32 %1906, 1
  %1914 = bitcast i8* %1909 to <4 x i8>*
  br label %1915

1915:                                             ; preds = %1911, %2044
  %1916 = phi i32 [ 0, %1911 ], [ %2047, %2044 ]
  %1917 = phi i32 [ %1912, %1911 ], [ %2045, %2044 ]
  %1918 = mul i32 %1916, -7
  %1919 = add i32 %1913, %1918
  %1920 = zext i32 %1919 to i64
  %1921 = add nsw i64 %1920, -39
  %1922 = lshr i64 %1921, 5
  %1923 = add nuw nsw i64 %1922, 1
  %1924 = mul i32 %1916, -7
  %1925 = add i32 %1913, %1924
  %1926 = zext i32 %1925 to i64
  %1927 = add nsw i64 %1926, -7
  %1928 = load i8, i8* %1907, align 1
  %1929 = icmp eq i8 %1928, 43
  br i1 %1929, label %1930, label %2048

1930:                                             ; preds = %1915
  %1931 = load i8, i8* %1902, align 1
  %1932 = add i8 %1931, -65
  %1933 = icmp ult i8 %1932, 26
  %1934 = load i8, i8* %1908, align 1
  %1935 = add i8 %1934, -65
  %1936 = icmp ult i8 %1935, 26
  %1937 = load <4 x i8>, <4 x i8>* %1914, align 1
  %1938 = add <4 x i8> %1937, <i8 -65, i8 -65, i8 -65, i8 -65>
  %1939 = icmp ult <4 x i8> %1938, <i8 26, i8 26, i8 26, i8 26>
  %1940 = shufflevector <4 x i1> %1939, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1941 = and <4 x i1> %1939, %1940
  %1942 = shufflevector <4 x i1> %1941, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1943 = and <4 x i1> %1941, %1942
  %1944 = extractelement <4 x i1> %1943, i32 0
  %1945 = and i1 %1944, %1933
  %1946 = and i1 %1945, %1936
  br i1 %1946, label %1947, label %2048

1947:                                             ; preds = %1930
  %1948 = icmp sgt i32 %1917, 7
  br i1 %1948, label %1949, label %2044

1949:                                             ; preds = %1947
  %1950 = zext i32 %1917 to i64
  %1951 = icmp ult i64 %1927, 32
  br i1 %1951, label %2034, label %1952

1952:                                             ; preds = %1949
  %1953 = and i64 %1927, -32
  %1954 = or i64 %1953, 7
  %1955 = and i64 %1923, 3
  %1956 = icmp ult i64 %1921, 96
  br i1 %1956, label %2012, label %1957

1957:                                             ; preds = %1952
  %1958 = sub nsw i64 %1923, %1955
  br label %1959

1959:                                             ; preds = %1959, %1957
  %1960 = phi i64 [ 0, %1957 ], [ %2009, %1959 ]
  %1961 = phi i64 [ %1958, %1957 ], [ %2010, %1959 ]
  %1962 = or i64 %1960, 7
  %1963 = getelementptr inbounds i8, i8* %1902, i64 %1962
  %1964 = bitcast i8* %1963 to <16 x i8>*
  %1965 = load <16 x i8>, <16 x i8>* %1964, align 1
  %1966 = getelementptr inbounds i8, i8* %1963, i64 16
  %1967 = bitcast i8* %1966 to <16 x i8>*
  %1968 = load <16 x i8>, <16 x i8>* %1967, align 1
  %1969 = getelementptr inbounds i8, i8* %1902, i64 %1960
  %1970 = bitcast i8* %1969 to <16 x i8>*
  store <16 x i8> %1965, <16 x i8>* %1970, align 1
  %1971 = getelementptr inbounds i8, i8* %1969, i64 16
  %1972 = bitcast i8* %1971 to <16 x i8>*
  store <16 x i8> %1968, <16 x i8>* %1972, align 1
  %1973 = or i64 %1960, 32
  %1974 = or i64 %1960, 39
  %1975 = getelementptr inbounds i8, i8* %1902, i64 %1974
  %1976 = bitcast i8* %1975 to <16 x i8>*
  %1977 = load <16 x i8>, <16 x i8>* %1976, align 1
  %1978 = getelementptr inbounds i8, i8* %1975, i64 16
  %1979 = bitcast i8* %1978 to <16 x i8>*
  %1980 = load <16 x i8>, <16 x i8>* %1979, align 1
  %1981 = getelementptr inbounds i8, i8* %1902, i64 %1973
  %1982 = bitcast i8* %1981 to <16 x i8>*
  store <16 x i8> %1977, <16 x i8>* %1982, align 1
  %1983 = getelementptr inbounds i8, i8* %1981, i64 16
  %1984 = bitcast i8* %1983 to <16 x i8>*
  store <16 x i8> %1980, <16 x i8>* %1984, align 1
  %1985 = or i64 %1960, 64
  %1986 = or i64 %1960, 71
  %1987 = getelementptr inbounds i8, i8* %1902, i64 %1986
  %1988 = bitcast i8* %1987 to <16 x i8>*
  %1989 = load <16 x i8>, <16 x i8>* %1988, align 1
  %1990 = getelementptr inbounds i8, i8* %1987, i64 16
  %1991 = bitcast i8* %1990 to <16 x i8>*
  %1992 = load <16 x i8>, <16 x i8>* %1991, align 1
  %1993 = getelementptr inbounds i8, i8* %1902, i64 %1985
  %1994 = bitcast i8* %1993 to <16 x i8>*
  store <16 x i8> %1989, <16 x i8>* %1994, align 1
  %1995 = getelementptr inbounds i8, i8* %1993, i64 16
  %1996 = bitcast i8* %1995 to <16 x i8>*
  store <16 x i8> %1992, <16 x i8>* %1996, align 1
  %1997 = or i64 %1960, 96
  %1998 = or i64 %1960, 103
  %1999 = getelementptr inbounds i8, i8* %1902, i64 %1998
  %2000 = bitcast i8* %1999 to <16 x i8>*
  %2001 = load <16 x i8>, <16 x i8>* %2000, align 1
  %2002 = getelementptr inbounds i8, i8* %1999, i64 16
  %2003 = bitcast i8* %2002 to <16 x i8>*
  %2004 = load <16 x i8>, <16 x i8>* %2003, align 1
  %2005 = getelementptr inbounds i8, i8* %1902, i64 %1997
  %2006 = bitcast i8* %2005 to <16 x i8>*
  store <16 x i8> %2001, <16 x i8>* %2006, align 1
  %2007 = getelementptr inbounds i8, i8* %2005, i64 16
  %2008 = bitcast i8* %2007 to <16 x i8>*
  store <16 x i8> %2004, <16 x i8>* %2008, align 1
  %2009 = add i64 %1960, 128
  %2010 = add i64 %1961, -4
  %2011 = icmp eq i64 %2010, 0
  br i1 %2011, label %2012, label %1959, !llvm.loop !13

2012:                                             ; preds = %1959, %1952
  %2013 = phi i64 [ 0, %1952 ], [ %2009, %1959 ]
  %2014 = icmp eq i64 %1955, 0
  br i1 %2014, label %2032, label %2015

2015:                                             ; preds = %2012, %2015
  %2016 = phi i64 [ %2029, %2015 ], [ %2013, %2012 ]
  %2017 = phi i64 [ %2030, %2015 ], [ %1955, %2012 ]
  %2018 = or i64 %2016, 7
  %2019 = getelementptr inbounds i8, i8* %1902, i64 %2018
  %2020 = bitcast i8* %2019 to <16 x i8>*
  %2021 = load <16 x i8>, <16 x i8>* %2020, align 1
  %2022 = getelementptr inbounds i8, i8* %2019, i64 16
  %2023 = bitcast i8* %2022 to <16 x i8>*
  %2024 = load <16 x i8>, <16 x i8>* %2023, align 1
  %2025 = getelementptr inbounds i8, i8* %1902, i64 %2016
  %2026 = bitcast i8* %2025 to <16 x i8>*
  store <16 x i8> %2021, <16 x i8>* %2026, align 1
  %2027 = getelementptr inbounds i8, i8* %2025, i64 16
  %2028 = bitcast i8* %2027 to <16 x i8>*
  store <16 x i8> %2024, <16 x i8>* %2028, align 1
  %2029 = add i64 %2016, 32
  %2030 = add i64 %2017, -1
  %2031 = icmp eq i64 %2030, 0
  br i1 %2031, label %2032, label %2015, !llvm.loop !14

2032:                                             ; preds = %2015, %2012
  %2033 = icmp eq i64 %1927, %1953
  br i1 %2033, label %2044, label %2034

2034:                                             ; preds = %2032, %1949
  %2035 = phi i64 [ 7, %1949 ], [ %1954, %2032 ]
  br label %2036

2036:                                             ; preds = %2034, %2036
  %2037 = phi i64 [ %2042, %2036 ], [ %2035, %2034 ]
  %2038 = getelementptr inbounds i8, i8* %1902, i64 %2037
  %2039 = load i8, i8* %2038, align 1
  %2040 = add nsw i64 %2037, -7
  %2041 = getelementptr inbounds i8, i8* %1902, i64 %2040
  store i8 %2039, i8* %2041, align 1
  %2042 = add nuw nsw i64 %2037, 1
  %2043 = icmp eq i64 %2042, %1950
  br i1 %2043, label %2044, label %2036, !llvm.loop !15

2044:                                             ; preds = %2036, %2032, %1947
  %2045 = add nsw i32 %1917, -7
  %2046 = icmp sgt i32 %2045, 6
  %2047 = add i32 %1916, 1
  br i1 %2046, label %1915, label %2048

2048:                                             ; preds = %2044, %1915, %1930
  %2049 = load i8*, i8** %1868, align 8
  %2050 = icmp eq i8* %2049, null
  br i1 %2050, label %2160, label %2051

2051:                                             ; preds = %1904, %1867, %2048
  %2052 = phi i8* [ %1869, %1867 ], [ %2049, %2048 ], [ %1902, %1904 ]
  %2053 = getelementptr inbounds i8, i8* %107, i64 1652
  %2054 = bitcast i8* %2053 to i32*
  %2055 = load i32, i32* %2054, align 4
  %2056 = icmp eq i32 %2055, 65535
  br i1 %2056, label %2194, label %2057

2057:                                             ; preds = %2051
  %2058 = icmp ugt i32 %2055, 390
  br i1 %2058, label %2059, label %2072

2059:                                             ; preds = %2057
  %2060 = add i32 %2055, -391
  %2061 = getelementptr inbounds i8, i8* %107, i64 1608
  %2062 = bitcast i8* %2061 to i32*
  %2063 = load i32, i32* %2062, align 8
  %2064 = icmp ugt i32 %2063, %2060
  br i1 %2064, label %2065, label %2194

2065:                                             ; preds = %2059
  %2066 = getelementptr inbounds i8, i8* %107, i64 1616
  %2067 = bitcast i8* %2066 to i8***
  %2068 = load i8**, i8*** %2067, align 8
  %2069 = zext i32 %2060 to i64
  %2070 = getelementptr inbounds i8*, i8** %2068, i64 %2069
  %2071 = load i8*, i8** %2070, align 8
  br label %2081

2072:                                             ; preds = %2057
  %2073 = bitcast i8* %1551 to %struct.FT_Service_PsCMapsRec_**
  %2074 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %2073, align 8
  %2075 = icmp eq %struct.FT_Service_PsCMapsRec_* %2074, null
  br i1 %2075, label %2194, label %2076

2076:                                             ; preds = %2072
  %2077 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %2074, i64 0, i32 5
  %2078 = load i8* (i32)*, i8* (i32)** %2077, align 8
  %2079 = call i8* %2078(i32 %2055) #11
  %2080 = load i8*, i8** %1868, align 8
  br label %2081

2081:                                             ; preds = %2065, %2076
  %2082 = phi i8* [ %2080, %2076 ], [ %2052, %2065 ]
  %2083 = phi i8* [ %2079, %2076 ], [ %2071, %2065 ]
  %2084 = icmp ne i8* %2083, null
  %2085 = icmp ne i8* %2082, null
  %2086 = and i1 %2084, %2085
  br i1 %2086, label %2087, label %2194

2087:                                             ; preds = %2081
  %2088 = load i8, i8* %2083, align 1
  %2089 = icmp eq i8 %2088, 0
  br i1 %2089, label %2194, label %2090

2090:                                             ; preds = %2087, %2101
  %2091 = phi i8 [ %2104, %2101 ], [ %2088, %2087 ]
  %2092 = phi i8* [ %2102, %2101 ], [ %2082, %2087 ]
  %2093 = phi i8* [ %2103, %2101 ], [ %2083, %2087 ]
  %2094 = icmp eq i8 %2091, 0
  br label %2095

2095:                                             ; preds = %2090, %2108
  %2096 = phi i8* [ %2092, %2090 ], [ %2109, %2108 ]
  %2097 = load i8, i8* %2096, align 1
  %2098 = icmp eq i8 %2091, %2097
  br i1 %2098, label %2099, label %2106

2099:                                             ; preds = %2095
  %2100 = getelementptr inbounds i8, i8* %2096, i64 1
  br label %2101

2101:                                             ; preds = %2106, %2106, %2099
  %2102 = phi i8* [ %2100, %2099 ], [ %2096, %2106 ], [ %2096, %2106 ]
  %2103 = getelementptr inbounds i8, i8* %2093, i64 1
  %2104 = load i8, i8* %2103, align 1
  %2105 = icmp eq i8 %2104, 0
  br i1 %2105, label %2194, label %2090

2106:                                             ; preds = %2095
  switch i8 %2091, label %2107 [
    i8 32, label %2101
    i8 45, label %2101
  ]

2107:                                             ; preds = %2106
  switch i8 %2097, label %2194 [
    i8 32, label %2108
    i8 45, label %2108
    i8 0, label %2110
  ]

2108:                                             ; preds = %2107, %2107
  %2109 = getelementptr inbounds i8, i8* %2096, i64 1
  br i1 %2094, label %2194, label %2095

2110:                                             ; preds = %2107
  %2111 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2111) #11
  store i32 -1431655766, i32* %8, align 4
  %2112 = call i8* @ft_mem_strdup(%struct.FT_MemoryRec_* %106, i8* %2093, i32* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2111) #11
  %2113 = icmp eq i8* %2112, null
  br i1 %2113, label %2194, label %2114

2114:                                             ; preds = %2110
  %2115 = load i8*, i8** %1868, align 8
  %2116 = call i64 @strlen(i8* %2115) #12
  %2117 = trunc i64 %2116 to i32
  %2118 = call i64 @strlen(i8* nonnull %2112) #12
  %2119 = trunc i64 %2118 to i32
  %2120 = icmp sgt i32 %2117, %2119
  br i1 %2120, label %2121, label %2197

2121:                                             ; preds = %2114
  %2122 = icmp slt i32 %2119, 1
  br i1 %2122, label %2142, label %2123

2123:                                             ; preds = %2121
  %2124 = shl i64 %2116, 32
  %2125 = ashr exact i64 %2124, 32
  %2126 = shl i64 %2118, 32
  %2127 = ashr exact i64 %2126, 32
  %2128 = add i64 %2118, 1
  %2129 = and i64 %2128, 4294967295
  br label %2133

2130:                                             ; preds = %2133
  %2131 = add nuw nsw i64 %2134, 1
  %2132 = icmp eq i64 %2131, %2129
  br i1 %2132, label %2142, label %2133

2133:                                             ; preds = %2130, %2123
  %2134 = phi i64 [ 1, %2123 ], [ %2131, %2130 ]
  %2135 = sub nsw i64 %2125, %2134
  %2136 = getelementptr inbounds i8, i8* %2115, i64 %2135
  %2137 = load i8, i8* %2136, align 1
  %2138 = sub nsw i64 %2127, %2134
  %2139 = getelementptr inbounds i8, i8* %2112, i64 %2138
  %2140 = load i8, i8* %2139, align 1
  %2141 = icmp eq i8 %2137, %2140
  br i1 %2141, label %2130, label %2197

2142:                                             ; preds = %2130, %2121
  %2143 = xor i32 %2119, -1
  %2144 = add i32 %2143, %2117
  %2145 = icmp sgt i32 %2144, 0
  br i1 %2145, label %2146, label %2197

2146:                                             ; preds = %2142
  %2147 = sext i32 %2144 to i64
  br label %2148

2148:                                             ; preds = %2152, %2146
  %2149 = phi i64 [ %2147, %2146 ], [ %2153, %2152 ]
  %2150 = getelementptr inbounds i8, i8* %2115, i64 %2149
  %2151 = load i8, i8* %2150, align 1
  switch i8 %2151, label %2155 [
    i8 45, label %2152
    i8 32, label %2152
    i8 95, label %2152
    i8 43, label %2152
  ]

2152:                                             ; preds = %2148, %2148, %2148, %2148
  %2153 = add nsw i64 %2149, -1
  %2154 = icmp sgt i64 %2153, 0
  br i1 %2154, label %2148, label %2197

2155:                                             ; preds = %2148
  %2156 = shl i64 %2149, 32
  %2157 = add i64 %2156, 4294967296
  %2158 = ashr exact i64 %2157, 32
  %2159 = getelementptr inbounds i8, i8* %2115, i64 %2158
  store i8 0, i8* %2159, align 1
  br label %2197

2160:                                             ; preds = %1901, %2048
  %2161 = getelementptr inbounds i8, i8* %107, i64 1944
  %2162 = bitcast i8* %2161 to i32*
  %2163 = load i32, i32* %2162, align 8
  %2164 = icmp eq i32 %2163, 65535
  br i1 %2164, label %2194, label %2165

2165:                                             ; preds = %2160
  %2166 = icmp ugt i32 %2163, 390
  br i1 %2166, label %2167, label %2180

2167:                                             ; preds = %2165
  %2168 = add i32 %2163, -391
  %2169 = getelementptr inbounds i8, i8* %107, i64 1608
  %2170 = bitcast i8* %2169 to i32*
  %2171 = load i32, i32* %2170, align 8
  %2172 = icmp ugt i32 %2171, %2168
  br i1 %2172, label %2173, label %2194

2173:                                             ; preds = %2167
  %2174 = getelementptr inbounds i8, i8* %107, i64 1616
  %2175 = bitcast i8* %2174 to i8***
  %2176 = load i8**, i8*** %2175, align 8
  %2177 = zext i32 %2168 to i64
  %2178 = getelementptr inbounds i8*, i8** %2176, i64 %2177
  %2179 = load i8*, i8** %2178, align 8
  br label %2188

2180:                                             ; preds = %2165
  %2181 = bitcast i8* %1551 to %struct.FT_Service_PsCMapsRec_**
  %2182 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %2181, align 8
  %2183 = icmp eq %struct.FT_Service_PsCMapsRec_* %2182, null
  br i1 %2183, label %2194, label %2184

2184:                                             ; preds = %2180
  %2185 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %2182, i64 0, i32 5
  %2186 = load i8* (i32)*, i8* (i32)** %2185, align 8
  %2187 = call i8* %2186(i32 %2163) #11
  br label %2188

2188:                                             ; preds = %2173, %2184
  %2189 = phi i8* [ %2187, %2184 ], [ %2179, %2173 ]
  %2190 = icmp eq i8* %2189, null
  br i1 %2190, label %2194, label %2191

2191:                                             ; preds = %2188
  %2192 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2192) #11
  store i32 -1431655766, i32* %7, align 4
  %2193 = call i8* @ft_mem_strdup(%struct.FT_MemoryRec_* %106, i8* nonnull %2189, i32* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2192) #11
  store i8* %2193, i8** %1868, align 8
  br label %2194

2194:                                             ; preds = %2101, %2108, %2107, %2087, %2167, %2180, %2160, %2059, %2072, %2051, %2191, %2188, %2081, %2110
  %2195 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2195) #11
  store i32 -1431655766, i32* %6, align 4
  %2196 = call i8* @ft_mem_strdup(%struct.FT_MemoryRec_* %106, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i32* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2195) #11
  br label %2197

2197:                                             ; preds = %2133, %2152, %2114, %2155, %2142, %2194
  %2198 = phi i8* [ %2196, %2194 ], [ %2112, %2142 ], [ %2112, %2155 ], [ %2112, %2114 ], [ %2112, %2152 ], [ %2112, %2133 ]
  %2199 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 6
  store i8* %2198, i8** %2199, align 8
  %2200 = icmp eq i8 %104, 0
  %2201 = select i1 %2200, i32 2065, i32 2073
  %2202 = getelementptr inbounds i8, i8* %107, i64 1664
  %2203 = load i8, i8* %2202, align 8
  %2204 = icmp eq i8 %2203, 0
  %2205 = or i32 %2201, 4
  %2206 = select i1 %2204, i32 %2201, i32 %2205
  %2207 = zext i32 %2206 to i64
  %2208 = load i64, i64* %1578, align 8
  %2209 = or i64 %2208, %2207
  store i64 %2209, i64* %1578, align 8
  %2210 = getelementptr inbounds i8, i8* %107, i64 1672
  %2211 = bitcast i8* %2210 to i64*
  %2212 = load i64, i64* %2211, align 8
  %2213 = icmp ne i64 %2212, 0
  %2214 = zext i1 %2213 to i32
  %2215 = getelementptr inbounds i8, i8* %107, i64 1660
  %2216 = bitcast i8* %2215 to i32*
  %2217 = load i32, i32* %2216, align 4
  %2218 = icmp eq i32 %2217, 65535
  br i1 %2218, label %2253, label %2219

2219:                                             ; preds = %2197
  %2220 = icmp ugt i32 %2217, 390
  br i1 %2220, label %2221, label %2234

2221:                                             ; preds = %2219
  %2222 = add i32 %2217, -391
  %2223 = getelementptr inbounds i8, i8* %107, i64 1608
  %2224 = bitcast i8* %2223 to i32*
  %2225 = load i32, i32* %2224, align 8
  %2226 = icmp ugt i32 %2225, %2222
  br i1 %2226, label %2227, label %2253

2227:                                             ; preds = %2221
  %2228 = getelementptr inbounds i8, i8* %107, i64 1616
  %2229 = bitcast i8* %2228 to i8***
  %2230 = load i8**, i8*** %2229, align 8
  %2231 = zext i32 %2222 to i64
  %2232 = getelementptr inbounds i8*, i8** %2230, i64 %2231
  %2233 = load i8*, i8** %2232, align 8
  br label %2242

2234:                                             ; preds = %2219
  %2235 = bitcast i8* %1551 to %struct.FT_Service_PsCMapsRec_**
  %2236 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %2235, align 8
  %2237 = icmp eq %struct.FT_Service_PsCMapsRec_* %2236, null
  br i1 %2237, label %2253, label %2238

2238:                                             ; preds = %2234
  %2239 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %2236, i64 0, i32 5
  %2240 = load i8* (i32)*, i8* (i32)** %2239, align 8
  %2241 = call i8* %2240(i32 %2217) #11
  br label %2242

2242:                                             ; preds = %2227, %2238
  %2243 = phi i8* [ %2241, %2238 ], [ %2233, %2227 ]
  %2244 = icmp eq i8* %2243, null
  br i1 %2244, label %2253, label %2245

2245:                                             ; preds = %2242
  %2246 = call i32 @strcmp(i8* nonnull %2243, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0)) #12
  %2247 = icmp eq i32 %2246, 0
  br i1 %2247, label %2251, label %2248

2248:                                             ; preds = %2245
  %2249 = call i32 @strcmp(i8* nonnull %2243, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0)) #12
  %2250 = icmp eq i32 %2249, 0
  br i1 %2250, label %2251, label %2253

2251:                                             ; preds = %2248, %2245
  %2252 = or i32 %2214, 2
  br label %2253

2253:                                             ; preds = %2221, %2234, %2197, %2248, %2242, %2251
  %2254 = phi i32 [ %2214, %2248 ], [ %2252, %2251 ], [ %2214, %2242 ], [ %2214, %2197 ], [ %2214, %2234 ], [ %2214, %2221 ]
  %2255 = and i32 %2254, 2
  %2256 = icmp eq i32 %2255, 0
  br i1 %2256, label %2257, label %2269

2257:                                             ; preds = %2253
  %2258 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 6
  %2259 = load i8*, i8** %2258, align 8
  %2260 = icmp eq i8* %2259, null
  br i1 %2260, label %2269, label %2261

2261:                                             ; preds = %2257
  %2262 = call i32 @strncmp(i8* nonnull %2259, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0), i64 4) #12
  %2263 = icmp eq i32 %2262, 0
  br i1 %2263, label %2267, label %2264

2264:                                             ; preds = %2261
  %2265 = call i32 @strncmp(i8* nonnull %2259, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), i64 5) #12
  %2266 = icmp eq i32 %2265, 0
  br i1 %2266, label %2267, label %2269

2267:                                             ; preds = %2264, %2261
  %2268 = or i32 %2254, 2
  br label %2269

2269:                                             ; preds = %2264, %2257, %2253, %2267
  %2270 = phi i32 [ %2254, %2253 ], [ %2254, %2264 ], [ %2268, %2267 ], [ %2254, %2257 ]
  %2271 = sext i32 %2270 to i64
  %2272 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 3
  store i64 %2271, i64* %2272, align 8
  br label %2273

2273:                                             ; preds = %1758, %2269
  %2274 = load i32, i32* %1564, align 4
  %2275 = icmp ne i32 %2274, 65535
  %2276 = icmp ne i8 %103, 0
  %2277 = or i1 %2276, %2275
  br i1 %2277, label %2282, label %2278

2278:                                             ; preds = %2273
  %2279 = load i64, i64* %1578, align 8
  %2280 = or i64 %2279, 512
  store i64 %2280, i64* %1578, align 8
  %2281 = load i32, i32* %1564, align 4
  br label %2282

2282:                                             ; preds = %2273, %2278
  %2283 = phi i32 [ %2274, %2273 ], [ %2281, %2278 ]
  %2284 = icmp eq i32 %2283, 65535
  %2285 = or i1 %1759, %2284
  br i1 %2285, label %2289, label %2286

2286:                                             ; preds = %2282
  %2287 = load i64, i64* %1578, align 8
  %2288 = or i64 %2287, 4096
  store i64 %2288, i64* %1578, align 8
  br label %2289

2289:                                             ; preds = %2282, %2286
  %2290 = bitcast %struct.FT_CharMapRec_* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2290) #11
  %2291 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %26, i64 0, i32 0
  %2292 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %26, i64 0, i32 1
  %2293 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %26, i64 0, i32 2
  %2294 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %26, i64 0, i32 3
  %2295 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 9
  %2296 = bitcast %struct.FT_CharMapRec_* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2296, i8 -86, i64 16, i1 false)
  %2297 = load i32, i32* %2295, align 8
  %2298 = icmp eq i32 %2297, 0
  br i1 %2298, label %2316, label %2299

2299:                                             ; preds = %2289
  %2300 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 10
  %2301 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %2300, align 8
  %2302 = zext i32 %2297 to i64
  br label %2303

2303:                                             ; preds = %2299, %2313
  %2304 = phi i64 [ 0, %2299 ], [ %2314, %2313 ]
  %2305 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %2301, i64 %2304
  %2306 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %2305, align 8
  %2307 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %2306, i64 0, i32 2
  %2308 = load i16, i16* %2307, align 4
  switch i16 %2308, label %2313 [
    i16 3, label %2309
    i16 0, label %2340
  ]

2309:                                             ; preds = %2303
  %2310 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %2306, i64 0, i32 3
  %2311 = load i16, i16* %2310, align 2
  %2312 = icmp eq i16 %2311, 1
  br i1 %2312, label %2340, label %2313

2313:                                             ; preds = %2303, %2309
  %2314 = add nuw nsw i64 %2304, 1
  %2315 = icmp ult i64 %2314, %2302
  br i1 %2315, label %2303, label %2316

2316:                                             ; preds = %2313, %2289
  br i1 %1759, label %2320, label %2317

2317:                                             ; preds = %2316
  %2318 = load i32, i32* %1564, align 4
  %2319 = icmp eq i32 %2318, 65535
  br i1 %2319, label %2320, label %2355

2320:                                             ; preds = %2317, %2316
  store %struct.FT_FaceRec_* %1, %struct.FT_FaceRec_** %2291, align 8
  store i16 3, i16* %2293, align 4
  store i16 1, i16* %2294, align 2
  store i32 1970170211, i32* %2292, align 8
  %2321 = call i32 @FT_CMap_New(%struct.FT_CMap_ClassRec_* bitcast ({ i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }* @cff_cmap_unicode_class_rec to %struct.FT_CMap_ClassRec_*), i8* null, %struct.FT_CharMapRec_* nonnull %26, %struct.FT_CMapRec_** null) #11
  store i32 %2321, i32* %25, align 4
  %2322 = icmp eq i32 %2321, 0
  br i1 %2322, label %2325, label %2323

2323:                                             ; preds = %2320
  %2324 = trunc i32 %2321 to i8
  switch i8 %2324, label %2355 [
    i8 -93, label %2325
    i8 7, label %2325
  ]

2325:                                             ; preds = %2323, %2323, %2320
  store i32 0, i32* %25, align 4
  %2326 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 23
  %2327 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %2326, align 8
  %2328 = icmp eq %struct.FT_CharMapRec_* %2327, null
  br i1 %2328, label %2329, label %2340

2329:                                             ; preds = %2325
  %2330 = load i32, i32* %2295, align 8
  %2331 = icmp eq i32 %2297, %2330
  br i1 %2331, label %2340, label %2332

2332:                                             ; preds = %2329
  %2333 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 10
  %2334 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %2333, align 8
  %2335 = zext i32 %2297 to i64
  %2336 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %2334, i64 %2335
  %2337 = bitcast %struct.FT_CharMapRec_** %2336 to i64*
  %2338 = load i64, i64* %2337, align 8
  %2339 = bitcast %struct.FT_CharMapRec_** %2326 to i64*
  store i64 %2338, i64* %2339, align 8
  br label %2340

2340:                                             ; preds = %2303, %2309, %2329, %2325, %2332
  %2341 = getelementptr inbounds i8, i8* %107, i64 264
  %2342 = bitcast i8* %2341 to i32*
  %2343 = load i32, i32* %2342, align 8
  %2344 = icmp eq i32 %2343, 0
  br i1 %2344, label %2355, label %2345

2345:                                             ; preds = %2340
  store %struct.FT_FaceRec_* %1, %struct.FT_FaceRec_** %2291, align 8
  store i16 7, i16* %2293, align 4
  %2346 = getelementptr inbounds i8, i8* %107, i64 256
  %2347 = bitcast i8* %2346 to i64*
  %2348 = load i64, i64* %2347, align 8
  switch i64 %2348, label %2350 [
    i64 0, label %2351
    i64 1, label %2349
  ]

2349:                                             ; preds = %2345
  br label %2351

2350:                                             ; preds = %2345
  br label %2351

2351:                                             ; preds = %2345, %2349, %2350
  %2352 = phi i16 [ 1, %2349 ], [ 2, %2350 ], [ 0, %2345 ]
  %2353 = phi i32 [ 1094992453, %2349 ], [ 1094992451, %2350 ], [ 1094995778, %2345 ]
  store i16 %2352, i16* %2294, align 2
  store i32 %2353, i32* %2292, align 8
  %2354 = call i32 @FT_CMap_New(%struct.FT_CMap_ClassRec_* bitcast ({ i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }* @cff_cmap_encoding_class_rec to %struct.FT_CMap_ClassRec_*), i8* null, %struct.FT_CharMapRec_* nonnull %26, %struct.FT_CMapRec_** null) #11
  store i32 %2354, i32* %25, align 4
  br label %2355

2355:                                             ; preds = %2317, %2323, %2340, %2351
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2290) #11
  %2356 = load i32, i32* %25, align 4
  br label %2357

2357:                                             ; preds = %90, %35, %43, %61, %44, %70, %93, %76, %97, %2355, %1569, %101, %1537, %1586, %1542, %62
  %2358 = phi i32 [ 0, %62 ], [ 0, %1542 ], [ %1589, %1586 ], [ %1538, %1537 ], [ %109, %101 ], [ 11, %1569 ], [ %2356, %2355 ], [ %98, %97 ], [ %80, %76 ], [ %95, %93 ], [ %74, %70 ], [ %49, %44 ], [ 2, %61 ], [ 11, %43 ], [ 11, %35 ], [ %85, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #11
  ret i32 %2358

2359:                                             ; preds = %1120
  %2360 = load i8, i8* %1109, align 1
  %2361 = trunc i32 %1107 to i16
  %2362 = add i16 %2361, 1
  %2363 = zext i8 %2360 to i64
  %2364 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 4, i64 %2363
  store i16 %2362, i16* %2364, align 2
  %2365 = load i16*, i16** %1058, align 8
  %2366 = getelementptr inbounds i16, i16* %2365, i64 %1121
  %2367 = load i16, i16* %2366, align 2
  %2368 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 3, i64 %2363
  store i16 %2367, i16* %2368, align 2
  br label %2369

2369:                                             ; preds = %2359, %1120
  %2370 = add nuw nsw i64 %1105, 2
  %2371 = add nuw nsw i32 %1107, 2
  %2372 = add i64 %1108, -2
  %2373 = icmp eq i64 %2372, 0
  br i1 %2373, label %1124, label %1104

2374:                                             ; preds = %1207
  %2375 = trunc i64 %1208 to i16
  %2376 = zext i32 %1209 to i64
  %2377 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 4, i64 %2376
  store i16 %2375, i16* %2377, align 2
  %2378 = load i16*, i16** %1058, align 8
  %2379 = getelementptr inbounds i16, i16* %2378, i64 %1208
  %2380 = load i16, i16* %2379, align 2
  %2381 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %108, i64 0, i32 14, i32 3, i64 %2376
  store i16 %2380, i16* %2381, align 2
  br label %2382

2382:                                             ; preds = %2374, %1207
  %2383 = add nuw nsw i64 %1194, 2
  %2384 = add i32 %1195, 2
  %2385 = icmp eq i64 %2383, %1170
  br i1 %2385, label %1213, label %1193
}

; Function Attrs: nounwind ssp uwtable
define internal void @cff_face_done(%struct.FT_FaceRec_*) #3 {
  %2 = bitcast %struct.FT_FaceRec_* %0 to %struct.TT_FaceRec_*
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %232, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 25
  %6 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 13
  %8 = bitcast i16* %7 to %struct.SFNT_Interface_**
  %9 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %8, align 8
  %10 = icmp eq %struct.SFNT_Interface_* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %9, i64 0, i32 3
  %13 = load void (%struct.TT_FaceRec_*)*, void (%struct.TT_FaceRec_*)** %12, align 8
  tail call void %13(%struct.TT_FaceRec_* nonnull %2) #11
  br label %14

14:                                               ; preds = %4, %11
  %15 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 24
  %16 = bitcast %struct.FT_DriverRec_** %15 to i8**
  %17 = bitcast %struct.FT_DriverRec_** %15 to %struct.CFF_FontRec_**
  %18 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %17, align 8
  %19 = icmp eq %struct.CFF_FontRec_* %18, null
  br i1 %19, label %221, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 2
  %22 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %21, align 8
  %23 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 13
  %24 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %23, i64 0, i32 0
  %25 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %24, align 8
  %26 = icmp eq %struct.FT_StreamRec_* %25, null
  br i1 %26, label %39, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %25, i64 0, i32 7
  %29 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %28, align 8
  %30 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 13, i32 8
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %27
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* nonnull %25, i8** %30) #11
  br label %34

34:                                               ; preds = %33, %27
  %35 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 13, i32 7
  %36 = bitcast i64** %35 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %29, i8* %37) #11
  %38 = bitcast %struct.CFF_IndexRec_* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 64, i1 false) #11
  br label %39

39:                                               ; preds = %34, %20
  %40 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 17
  %41 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %40, i64 0, i32 0
  %42 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %41, align 8
  %43 = icmp eq %struct.FT_StreamRec_* %42, null
  br i1 %43, label %56, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %42, i64 0, i32 7
  %46 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %45, align 8
  %47 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 17, i32 8
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %44
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* nonnull %42, i8** %47) #11
  br label %51

51:                                               ; preds = %50, %44
  %52 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 17, i32 7
  %53 = bitcast i64** %52 to i8**
  %54 = load i8*, i8** %53, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %46, i8* %54) #11
  %55 = bitcast %struct.CFF_IndexRec_* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 64, i1 false) #11
  br label %56

56:                                               ; preds = %51, %39
  %57 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 11
  %58 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %57, i64 0, i32 0
  %59 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %58, align 8
  %60 = icmp eq %struct.FT_StreamRec_* %59, null
  br i1 %60, label %73, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %59, i64 0, i32 7
  %63 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %62, align 8
  %64 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 11, i32 8
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %61
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* nonnull %59, i8** %64) #11
  br label %68

68:                                               ; preds = %67, %61
  %69 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 11, i32 7
  %70 = bitcast i64** %69 to i8**
  %71 = load i8*, i8** %70, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %63, i8* %71) #11
  %72 = bitcast %struct.CFF_IndexRec_* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 64, i1 false) #11
  br label %73

73:                                               ; preds = %68, %56
  %74 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 16
  %75 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %74, i64 0, i32 0
  %76 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %75, align 8
  %77 = icmp eq %struct.FT_StreamRec_* %76, null
  br i1 %77, label %90, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %76, i64 0, i32 7
  %80 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %79, align 8
  %81 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 16, i32 8
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %85, label %84

84:                                               ; preds = %78
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* nonnull %76, i8** %81) #11
  br label %85

85:                                               ; preds = %84, %78
  %86 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 16, i32 7
  %87 = bitcast i64** %86 to i8**
  %88 = load i8*, i8** %87, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %80, i8* %88) #11
  %89 = bitcast %struct.CFF_IndexRec_* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 64, i1 false) #11
  br label %90

90:                                               ; preds = %85, %73
  %91 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 27
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %140, label %94

94:                                               ; preds = %90, %130
  %95 = phi i32 [ %131, %130 ], [ %92, %90 ]
  %96 = phi i64 [ %132, %130 ], [ 0, %90 ]
  %97 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 28, i64 %96
  %98 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %97, align 8
  %99 = icmp eq %struct.CFF_SubFontRec_* %98, null
  br i1 %99, label %130, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %98, i64 0, i32 9
  %102 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %101, i64 0, i32 0
  %103 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %102, align 8
  %104 = icmp eq %struct.FT_StreamRec_* %103, null
  br i1 %104, label %117, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %103, i64 0, i32 7
  %107 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %106, align 8
  %108 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %98, i64 0, i32 9, i32 8
  %109 = load i8*, i8** %108, align 8
  %110 = icmp eq i8* %109, null
  br i1 %110, label %112, label %111

111:                                              ; preds = %105
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* nonnull %103, i8** %108) #11
  br label %112

112:                                              ; preds = %111, %105
  %113 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %98, i64 0, i32 9, i32 7
  %114 = bitcast i64** %113 to i8**
  %115 = load i8*, i8** %114, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %107, i8* %115) #11
  %116 = bitcast %struct.CFF_IndexRec_* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 64, i1 false) #11
  br label %117

117:                                              ; preds = %112, %100
  %118 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %98, i64 0, i32 10
  %119 = bitcast i8*** %118 to i8**
  %120 = load i8*, i8** %119, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %22, i8* %120) #11
  store i8** null, i8*** %118, align 8
  %121 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %98, i64 0, i32 2, i32 5
  %122 = bitcast i64** %121 to i8**
  %123 = load i8*, i8** %122, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %22, i8* %123) #11
  store i64* null, i64** %121, align 8
  %124 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %98, i64 0, i32 2, i32 7
  %125 = bitcast i32** %124 to i8**
  %126 = load i8*, i8** %125, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %22, i8* %126) #11
  store i32* null, i32** %124, align 8
  %127 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %98, i64 0, i32 5
  %128 = load i8*, i8** %127, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %22, i8* %128) #11
  store i8* null, i8** %127, align 8
  %129 = load i32, i32* %91, align 8
  br label %130

130:                                              ; preds = %117, %94
  %131 = phi i32 [ %95, %94 ], [ %129, %117 ]
  %132 = add nuw nsw i64 %96, 1
  %133 = zext i32 %131 to i64
  %134 = icmp ult i64 %132, %133
  br i1 %134, label %94, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 28
  %137 = getelementptr inbounds [256 x %struct.CFF_SubFontRec_*], [256 x %struct.CFF_SubFontRec_*]* %136, i64 0, i64 0
  %138 = bitcast [256 x %struct.CFF_SubFontRec_*]* %136 to i8**
  %139 = load i8*, i8** %138, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %22, i8* %139) #11
  store %struct.CFF_SubFontRec_* null, %struct.CFF_SubFontRec_** %137, align 8
  br label %140

140:                                              ; preds = %135, %90
  %141 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 14, i32 0
  store i32 0, i32* %141, align 8
  %142 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 14, i32 1
  store i64 0, i64* %142, align 8
  %143 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 14, i32 2
  store i32 0, i32* %143, align 8
  %144 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 1
  %145 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %144, align 8
  %146 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %145, i64 0, i32 7
  %147 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %146, align 8
  %148 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 15, i32 3
  %149 = bitcast i16** %148 to i8**
  %150 = load i8*, i8** %149, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %147, i8* %150) #11
  store i16* null, i16** %148, align 8
  %151 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 15, i32 4
  store i32 0, i32* %151, align 8
  %152 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 15, i32 2
  %153 = bitcast i16** %152 to i8**
  %154 = load i8*, i8** %153, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %147, i8* %154) #11
  %155 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 15, i32 0
  store i32 0, i32* %155, align 8
  %156 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 15, i32 1
  %157 = bitcast i64* %156 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %157, i8 0, i64 16, i1 false) #11
  %158 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 37
  tail call fastcc void @cff_vstore_done(%struct.CFF_VStoreRec_* %158, %struct.FT_MemoryRec_* %22) #11
  %159 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 26, i32 9
  %160 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %159, i64 0, i32 0
  %161 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %160, align 8
  %162 = icmp eq %struct.FT_StreamRec_* %161, null
  br i1 %162, label %175, label %163

163:                                              ; preds = %140
  %164 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %161, i64 0, i32 7
  %165 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %164, align 8
  %166 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 26, i32 9, i32 8
  %167 = load i8*, i8** %166, align 8
  %168 = icmp eq i8* %167, null
  br i1 %168, label %170, label %169

169:                                              ; preds = %163
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* nonnull %161, i8** %166) #11
  br label %170

170:                                              ; preds = %169, %163
  %171 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 26, i32 9, i32 7
  %172 = bitcast i64** %171 to i8**
  %173 = load i8*, i8** %172, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %165, i8* %173) #11
  %174 = bitcast %struct.CFF_IndexRec_* %159 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %174, i8 0, i64 64, i1 false) #11
  br label %175

175:                                              ; preds = %170, %140
  %176 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 26, i32 10
  %177 = bitcast i8*** %176 to i8**
  %178 = load i8*, i8** %177, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %22, i8* %178) #11
  store i8** null, i8*** %176, align 8
  %179 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 26, i32 2, i32 5
  %180 = bitcast i64** %179 to i8**
  %181 = load i8*, i8** %180, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %22, i8* %181) #11
  store i64* null, i64** %179, align 8
  %182 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 26, i32 2, i32 7
  %183 = bitcast i32** %182 to i8**
  %184 = load i8*, i8** %183, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %22, i8* %184) #11
  store i32* null, i32** %182, align 8
  %185 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 26, i32 5
  %186 = load i8*, i8** %185, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %22, i8* %186) #11
  store i8* null, i8** %185, align 8
  %187 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 29, i32 2
  %188 = load i8*, i8** %187, align 8
  %189 = icmp eq i8* %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %175
  %191 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %144, align 8
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %191, i8** %187) #11
  br label %192

192:                                              ; preds = %190, %175
  %193 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 29, i32 3
  store i32 0, i32* %193, align 8
  %194 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 29, i32 0
  store i8 0, i8* %194, align 8
  %195 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 29, i32 1
  store i32 0, i32* %195, align 4
  %196 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 33
  %197 = bitcast %struct.PS_FontInfoRec_** %196 to i8**
  %198 = load i8*, i8** %197, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %22, i8* %198) #11
  store %struct.PS_FontInfoRec_* null, %struct.PS_FontInfoRec_** %196, align 8
  %199 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 20
  %200 = load i8*, i8** %199, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %22, i8* %200) #11
  store i8* null, i8** %199, align 8
  %201 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 21
  %202 = bitcast i8*** %201 to i8**
  %203 = load i8*, i8** %202, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %22, i8* %203) #11
  store i8** null, i8*** %201, align 8
  %204 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 23
  %205 = bitcast i8*** %204 to i8**
  %206 = load i8*, i8** %205, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %22, i8* %206) #11
  store i8** null, i8*** %204, align 8
  %207 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 24
  %208 = load i8*, i8** %207, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %22, i8* %208) #11
  store i8* null, i8** %207, align 8
  %209 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 36, i32 1
  %210 = load void (i8*)*, void (i8*)** %209, align 8
  %211 = icmp eq void (i8*)* %210, null
  br i1 %211, label %216, label %212

212:                                              ; preds = %192
  %213 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 36, i32 0
  %214 = load i8*, i8** %213, align 8
  tail call void %210(i8* %214) #11
  %215 = load i8*, i8** %213, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %22, i8* %215) #11
  store i8* null, i8** %213, align 8
  br label %216

216:                                              ; preds = %192, %212
  %217 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %18, i64 0, i32 38
  %218 = bitcast %struct.PS_FontExtraRec_** %217 to i8**
  %219 = load i8*, i8** %218, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %22, i8* %219) #11
  store %struct.PS_FontExtraRec_* null, %struct.PS_FontExtraRec_** %217, align 8
  %220 = load i8*, i8** %16, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %220) #11
  store i8* null, i8** %16, align 8
  br label %221

221:                                              ; preds = %14, %216
  %222 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 21
  %223 = bitcast %struct.FT_GlyphSlotRec_** %222 to %struct.FT_Service_MultiMastersRec_**
  %224 = load %struct.FT_Service_MultiMastersRec_*, %struct.FT_Service_MultiMastersRec_** %223, align 8
  %225 = icmp eq %struct.FT_Service_MultiMastersRec_* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %struct.FT_Service_MultiMastersRec_, %struct.FT_Service_MultiMastersRec_* %224, i64 0, i32 11
  %228 = load void (%struct.FT_FaceRec_*)*, void (%struct.FT_FaceRec_*)** %227, align 8
  tail call void %228(%struct.FT_FaceRec_* nonnull %0) #11
  br label %229

229:                                              ; preds = %221, %226
  %230 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 28, i32 1
  %231 = bitcast void (i8*)** %230 to %struct.GX_BlendRec_**
  store %struct.GX_BlendRec_* null, %struct.GX_BlendRec_** %231, align 8
  br label %232

232:                                              ; preds = %1, %229
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_size_init(%struct.FT_SizeRec_* nocapture) #3 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.PS_PrivateRec_, align 8
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #11
  store i32 0, i32* %2, align 4
  %5 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 0
  %6 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %6, i64 4, i32 24
  %8 = bitcast %struct.FT_DriverRec_** %7 to %struct.CFF_FontRec_**
  %9 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %8, align 8
  %10 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %9, i64 0, i32 30
  %11 = load %struct.PSHinter_Interface_*, %struct.PSHinter_Interface_** %10, align 8
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %6, i64 0, i32 24
  %13 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %12, align 8
  %14 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %13, i64 0, i32 0, i32 1
  %15 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %14, align 8
  %16 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0)) #11
  %17 = icmp ne %struct.FT_ModuleRec_* %16, null
  %18 = icmp ne %struct.PSHinter_Interface_* %11, null
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %26

20:                                               ; preds = %1
  %21 = getelementptr inbounds %struct.PSHinter_Interface_, %struct.PSHinter_Interface_* %11, i64 0, i32 0
  %22 = load %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)** %21, align 8
  %23 = icmp eq %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = tail call %struct.PSH_Globals_FuncsRec_* %22(%struct.FT_ModuleRec_* nonnull %16) #11
  br label %26

26:                                               ; preds = %1, %20, %24
  %27 = phi %struct.PSH_Globals_FuncsRec_* [ %25, %24 ], [ null, %20 ], [ null, %1 ]
  %28 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %5, align 8
  %29 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %28, i64 0, i32 25
  %30 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %29, align 8
  %31 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %28, i64 4, i32 24
  %32 = bitcast %struct.FT_DriverRec_** %31 to %struct.CFF_FontRec_**
  %33 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %32, align 8
  %34 = bitcast %struct.PS_PrivateRec_* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %34) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 224, i1 false)
  %35 = icmp eq %struct.PSH_Globals_FuncsRec_* %27, null
  br i1 %35, label %103, label %36

36:                                               ; preds = %26
  %37 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %30, i64 2056, i32* nonnull %2) #11
  %38 = bitcast i8* %37 to %struct.CFF_InternalRec_*
  %39 = load i32, i32* %2, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %79

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %33, i64 0, i32 26
  call fastcc void @cff_make_private_dict(%struct.CFF_SubFontRec_* %42, %struct.PS_PrivateRec_* nonnull %3)
  %43 = getelementptr inbounds %struct.PSH_Globals_FuncsRec_, %struct.PSH_Globals_FuncsRec_* %27, i64 0, i32 0
  %44 = load i32 (%struct.FT_MemoryRec_*, %struct.PS_PrivateRec_*, %struct.PSH_GlobalsRec_**)*, i32 (%struct.FT_MemoryRec_*, %struct.PS_PrivateRec_*, %struct.PSH_GlobalsRec_**)** %43, align 8
  %45 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %5, align 8
  %46 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %45, i64 0, i32 25
  %47 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %46, align 8
  %48 = bitcast i8* %37 to %struct.PSH_GlobalsRec_**
  %49 = call i32 %44(%struct.FT_MemoryRec_* %47, %struct.PS_PrivateRec_* nonnull %3, %struct.PSH_GlobalsRec_** %48) #11
  store i32 %49, i32* %2, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %79

51:                                               ; preds = %41
  %52 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %33, i64 0, i32 27
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds i8, i8* %37, i64 8
  %55 = bitcast i8* %54 to [256 x %struct.PSH_GlobalsRec_*]*
  %56 = zext i32 %53 to i64
  br label %57

57:                                               ; preds = %60, %51
  %58 = phi i64 [ %72, %60 ], [ %56, %51 ]
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %73, label %60

60:                                               ; preds = %57
  %61 = add i64 %58, 4294967295
  %62 = and i64 %61, 4294967295
  %63 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %33, i64 0, i32 28, i64 %62
  %64 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %63, align 8
  call fastcc void @cff_make_private_dict(%struct.CFF_SubFontRec_* %64, %struct.PS_PrivateRec_* nonnull %3)
  %65 = load i32 (%struct.FT_MemoryRec_*, %struct.PS_PrivateRec_*, %struct.PSH_GlobalsRec_**)*, i32 (%struct.FT_MemoryRec_*, %struct.PS_PrivateRec_*, %struct.PSH_GlobalsRec_**)** %43, align 8
  %66 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %5, align 8
  %67 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %66, i64 0, i32 25
  %68 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %67, align 8
  %69 = getelementptr inbounds [256 x %struct.PSH_GlobalsRec_*], [256 x %struct.PSH_GlobalsRec_*]* %55, i64 0, i64 %62
  %70 = call i32 %65(%struct.FT_MemoryRec_* %68, %struct.PS_PrivateRec_* nonnull %3, %struct.PSH_GlobalsRec_** %69) #11
  store i32 %70, i32* %2, align 4
  %71 = icmp eq i32 %70, 0
  %72 = add nsw i64 %58, -1
  br i1 %71, label %57, label %79

73:                                               ; preds = %57
  %74 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 3
  %75 = load %struct.FT_Size_InternalRec_*, %struct.FT_Size_InternalRec_** %74, align 8
  %76 = getelementptr inbounds %struct.FT_Size_InternalRec_, %struct.FT_Size_InternalRec_* %75, i64 0, i32 0
  store i8* %37, i8** %76, align 8
  %77 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 1
  %78 = bitcast %struct.FT_SizeRec_* %77 to i64*
  store i64 4294967295, i64* %78, align 8
  br label %103

79:                                               ; preds = %60, %36, %41
  %80 = icmp eq i8* %37, null
  br i1 %80, label %101, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %33, i64 0, i32 27
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %97, label %85

85:                                               ; preds = %81
  %86 = zext i32 %83 to i64
  br label %87

87:                                               ; preds = %85, %87
  %88 = phi i64 [ %86, %85 ], [ %96, %87 ]
  %89 = trunc i64 %88 to i32
  %90 = add i32 %89, -1
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %struct.CFF_InternalRec_, %struct.CFF_InternalRec_* %38, i64 0, i32 1, i64 %91
  %93 = bitcast %struct.PSH_GlobalsRec_** %92 to i8**
  %94 = load i8*, i8** %93, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %30, i8* %94) #11
  store %struct.PSH_GlobalsRec_* null, %struct.PSH_GlobalsRec_** %92, align 8
  %95 = icmp eq i32 %90, 0
  %96 = add nsw i64 %88, -1
  br i1 %95, label %97, label %87

97:                                               ; preds = %87, %81
  %98 = bitcast i8* %37 to %struct.PSH_GlobalsRec_**
  %99 = bitcast i8* %37 to i8**
  %100 = load i8*, i8** %99, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %30, i8* %100) #11
  store %struct.PSH_GlobalsRec_* null, %struct.PSH_GlobalsRec_** %98, align 8
  br label %101

101:                                              ; preds = %79, %97
  call void @ft_mem_free(%struct.FT_MemoryRec_* %30, i8* %37) #11
  %102 = load i32, i32* %2, align 4
  br label %103

103:                                              ; preds = %73, %26, %101
  %104 = phi i32 [ %102, %101 ], [ 0, %26 ], [ 0, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #11
  ret i32 %104
}

; Function Attrs: nounwind ssp uwtable
define internal void @cff_size_done(%struct.FT_SizeRec_* nocapture readonly) #3 {
  %2 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 0
  %3 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %2, align 8
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3, i64 0, i32 25
  %5 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3, i64 4, i32 24
  %7 = bitcast %struct.FT_DriverRec_** %6 to %struct.CFF_FontRec_**
  %8 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 3
  %10 = load %struct.FT_Size_InternalRec_*, %struct.FT_Size_InternalRec_** %9, align 8
  %11 = getelementptr inbounds %struct.FT_Size_InternalRec_, %struct.FT_Size_InternalRec_* %10, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %55, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %8, i64 0, i32 30
  %16 = load %struct.PSHinter_Interface_*, %struct.PSHinter_Interface_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3, i64 0, i32 24
  %18 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %17, align 8
  %19 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %18, i64 0, i32 0, i32 1
  %20 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %19, align 8
  %21 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0)) #11
  %22 = icmp ne %struct.FT_ModuleRec_* %21, null
  %23 = icmp ne %struct.PSHinter_Interface_* %16, null
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %54

25:                                               ; preds = %14
  %26 = getelementptr inbounds %struct.PSHinter_Interface_, %struct.PSHinter_Interface_* %16, i64 0, i32 0
  %27 = load %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)** %26, align 8
  %28 = icmp eq %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)* %27, null
  br i1 %28, label %54, label %29

29:                                               ; preds = %25
  %30 = tail call %struct.PSH_Globals_FuncsRec_* %27(%struct.FT_ModuleRec_* nonnull %21) #11
  %31 = icmp eq %struct.PSH_Globals_FuncsRec_* %30, null
  br i1 %31, label %54, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.PSH_Globals_FuncsRec_, %struct.PSH_Globals_FuncsRec_* %30, i64 0, i32 2
  %34 = load void (%struct.PSH_GlobalsRec_*)*, void (%struct.PSH_GlobalsRec_*)** %33, align 8
  %35 = bitcast i8* %12 to %struct.PSH_GlobalsRec_**
  %36 = load %struct.PSH_GlobalsRec_*, %struct.PSH_GlobalsRec_** %35, align 8
  tail call void %34(%struct.PSH_GlobalsRec_* %36) #11
  %37 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %8, i64 0, i32 27
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %54, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds i8, i8* %12, i64 8
  %42 = bitcast i8* %41 to [256 x %struct.PSH_GlobalsRec_*]*
  %43 = zext i32 %38 to i64
  br label %44

44:                                               ; preds = %40, %44
  %45 = phi i64 [ %43, %40 ], [ %53, %44 ]
  %46 = load void (%struct.PSH_GlobalsRec_*)*, void (%struct.PSH_GlobalsRec_*)** %33, align 8
  %47 = trunc i64 %45 to i32
  %48 = add i32 %47, -1
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [256 x %struct.PSH_GlobalsRec_*], [256 x %struct.PSH_GlobalsRec_*]* %42, i64 0, i64 %49
  %51 = load %struct.PSH_GlobalsRec_*, %struct.PSH_GlobalsRec_** %50, align 8
  tail call void %46(%struct.PSH_GlobalsRec_* %51) #11
  %52 = icmp eq i32 %48, 0
  %53 = add nsw i64 %45, -1
  br i1 %52, label %54, label %44

54:                                               ; preds = %44, %32, %14, %25, %29
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* nonnull %12) #11
  br label %55

55:                                               ; preds = %1, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_slot_init(%struct.FT_GlyphSlotRec_* nocapture readonly) #3 {
  %2 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 1
  %3 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %2, align 8
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3, i64 4, i32 24
  %5 = bitcast %struct.FT_DriverRec_** %4 to %struct.CFF_FontRec_**
  %6 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %5, align 8
  %7 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 30
  %8 = load %struct.PSHinter_Interface_*, %struct.PSHinter_Interface_** %7, align 8
  %9 = icmp eq %struct.PSHinter_Interface_* %8, null
  br i1 %9, label %25, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3, i64 0, i32 24
  %12 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %11, align 8
  %13 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %12, i64 0, i32 0, i32 1
  %14 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %13, align 8
  %15 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0)) #11
  %16 = icmp eq %struct.FT_ModuleRec_* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.PSHinter_Interface_, %struct.PSHinter_Interface_* %8, i64 0, i32 2
  %19 = load %struct.T2_Hints_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.T2_Hints_FuncsRec_* (%struct.FT_ModuleRec_*)** %18, align 8
  %20 = tail call %struct.T2_Hints_FuncsRec_* %19(%struct.FT_ModuleRec_* nonnull %15) #11
  %21 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %22 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %21, align 8
  %23 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %22, i64 0, i32 5
  %24 = bitcast i8** %23 to %struct.T2_Hints_FuncsRec_**
  store %struct.T2_Hints_FuncsRec_* %20, %struct.T2_Hints_FuncsRec_** %24, align 8
  br label %25

25:                                               ; preds = %17, %10, %1
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @cff_slot_done(%struct.FT_GlyphSlotRec_* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %3 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %2, align 8
  %4 = icmp eq %struct.FT_Slot_InternalRec_* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %3, i64 0, i32 5
  store i8* null, i8** %6, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_glyph_load(%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32) #3 {
  %5 = alloca %struct.FT_Data_, align 8
  %6 = alloca %struct.FT_Data_, align 8
  %7 = alloca %struct.CFF_Decoder_, align 8
  %8 = alloca %struct.PS_Decoder_, align 8
  %9 = alloca %struct.FT_Matrix_, align 8
  %10 = alloca %struct.TT_SBit_MetricsRec_, align 4
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %struct.FT_Incremental_MetricsRec_, align 8
  %16 = alloca %struct.FT_BBox_, align 16
  %17 = alloca i16, align 2
  %18 = alloca i16, align 2
  %19 = alloca i16, align 2
  %20 = alloca i16, align 2
  %21 = bitcast %struct.FT_GlyphSlotRec_* %0 to %struct.CFF_GlyphSlotRec_*
  %22 = icmp eq %struct.FT_GlyphSlotRec_* %0, null
  br i1 %22, label %745, label %23

23:                                               ; preds = %4
  %24 = bitcast %struct.FT_SizeRec_* %1 to %struct.CFF_SizeRec_*
  %25 = icmp eq %struct.FT_SizeRec_* %1, null
  %26 = or i32 %3, 3
  %27 = select i1 %25, i32 %26, i32 %3
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = select i1 %29, %struct.CFF_SizeRec_* %24, %struct.CFF_SizeRec_* null
  %31 = icmp eq %struct.CFF_SizeRec_* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %23
  %33 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 1
  %34 = bitcast %struct.FT_FaceRec_** %33 to %struct.TT_FaceRec_**
  %35 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %34, align 8
  br label %44

36:                                               ; preds = %23
  %37 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 0, i32 0
  %38 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %37, align 8
  %39 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 1
  %40 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %39, align 8
  %41 = icmp eq %struct.FT_FaceRec_* %38, %40
  br i1 %41, label %42, label %745

42:                                               ; preds = %36
  %43 = bitcast %struct.FT_FaceRec_* %40 to %struct.TT_FaceRec_*
  br label %44

44:                                               ; preds = %42, %32
  %45 = phi %struct.TT_FaceRec_* [ %35, %32 ], [ %43, %42 ]
  %46 = bitcast %struct.CFF_Decoder_* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1520, i8* nonnull %46) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 1520, i1 false) #11
  %47 = bitcast %struct.PS_Decoder_* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1264, i8* nonnull %47) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 1264, i1 false) #11
  %48 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 44, i32 0
  %49 = bitcast i8** %48 to %struct.CFF_FontRec_**
  %50 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %49, align 8
  %51 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 26
  %52 = bitcast i8** %51 to %struct.PSAux_ServiceRec_**
  %53 = load %struct.PSAux_ServiceRec_*, %struct.PSAux_ServiceRec_** %52, align 8
  %54 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %53, i64 0, i32 10
  %55 = load %struct.CFF_Decoder_FuncsRec_*, %struct.CFF_Decoder_FuncsRec_** %54, align 8
  %56 = bitcast %struct.FT_Matrix_* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #11
  %57 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %9, i64 0, i32 0
  %58 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %9, i64 0, i32 1
  %59 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %9, i64 0, i32 2
  %60 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %9, i64 0, i32 3
  %61 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 26, i32 0, i32 26
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 32, i1 false) #11
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 65535
  br i1 %63, label %80, label %64

64:                                               ; preds = %44
  %65 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 15, i32 3
  %66 = load i16*, i16** %65, align 8
  %67 = icmp eq i16* %66, null
  br i1 %67, label %80, label %68

68:                                               ; preds = %64
  %69 = icmp eq i32 %2, 0
  br i1 %69, label %84, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 15, i32 4
  %72 = load i32, i32* %71, align 8
  %73 = icmp ult i32 %72, %2
  br i1 %73, label %743, label %74

74:                                               ; preds = %70
  %75 = zext i32 %2 to i64
  %76 = getelementptr inbounds i16, i16* %66, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = zext i16 %77 to i32
  %79 = icmp eq i16 %77, 0
  br i1 %79, label %743, label %84

80:                                               ; preds = %64, %44
  %81 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 5
  %82 = load i32, i32* %81, align 4
  %83 = icmp ugt i32 %82, %2
  br i1 %83, label %84, label %743

84:                                               ; preds = %80, %74, %68
  %85 = phi i32 [ %78, %74 ], [ 0, %68 ], [ %2, %80 ]
  %86 = and i32 %27, 1024
  %87 = icmp eq i32 %86, 0
  %88 = select i1 %87, i32 %27, i32 %26
  %89 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 1, i32 1
  %90 = bitcast %struct.FT_FaceRec_** %89 to i64*
  %91 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 1, i32 2
  %92 = bitcast %struct.FT_GlyphSlotRec_** %91 to i64*
  %93 = bitcast %struct.FT_FaceRec_** %89 to <2 x i64>*
  store <2 x i64> <i64 65536, i64 65536>, <2 x i64>* %93, align 8
  %94 = icmp ne %struct.CFF_SizeRec_* %30, null
  br i1 %94, label %95, label %221

95:                                               ; preds = %84
  %96 = getelementptr inbounds %struct.CFF_SizeRec_, %struct.CFF_SizeRec_* %30, i64 0, i32 0, i32 2, i32 2
  %97 = load i64, i64* %96, align 8
  store i64 %97, i64* %90, align 8
  %98 = getelementptr inbounds %struct.CFF_SizeRec_, %struct.CFF_SizeRec_* %30, i64 0, i32 0, i32 2, i32 3
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %92, align 8
  %100 = bitcast %struct.CFF_SizeRec_* %30 to %struct.TT_FaceRec_**
  %101 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %100, align 8
  %102 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %101, i64 0, i32 22
  %103 = bitcast i8** %102 to %struct.SFNT_Interface_**
  %104 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %103, align 8
  %105 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %101, i64 0, i32 0, i32 26
  %106 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %105, align 8
  %107 = getelementptr inbounds %struct.CFF_SizeRec_, %struct.CFF_SizeRec_* %30, i64 0, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 4294967295
  br i1 %109, label %221, label %110

110:                                              ; preds = %95
  %111 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %104, i64 0, i32 24
  %112 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)** %111, align 8
  %113 = icmp eq i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* %112, null
  br i1 %113, label %221, label %114

114:                                              ; preds = %110
  %115 = sext i32 %88 to i64
  %116 = and i64 %115, 8
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %221

118:                                              ; preds = %114
  %119 = bitcast %struct.TT_SBit_MetricsRec_* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #11
  %120 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %104, i64 0, i32 18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %119, i8 -86, i64 16, i1 false) #11
  %121 = load i32 (%struct.TT_FaceRec_*, i64, i32, i32, %struct.FT_StreamRec_*, %struct.FT_Bitmap_*, %struct.TT_SBit_MetricsRec_*)*, i32 (%struct.TT_FaceRec_*, i64, i32, i32, %struct.FT_StreamRec_*, %struct.FT_Bitmap_*, %struct.TT_SBit_MetricsRec_*)** %120, align 8
  %122 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10
  %123 = call i32 %121(%struct.TT_FaceRec_* %45, i64 %108, i32 %85, i32 %88, %struct.FT_StreamRec_* %106, %struct.FT_Bitmap_* %122, %struct.TT_SBit_MetricsRec_* nonnull %10) #11
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %126, label %125

125:                                              ; preds = %118
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #11
  br label %221

126:                                              ; preds = %118
  %127 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %10, i64 0, i32 7
  %128 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %10, i64 0, i32 6
  %129 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %10, i64 0, i32 5
  %130 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %10, i64 0, i32 4
  %131 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %10, i64 0, i32 3
  %132 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %10, i64 0, i32 2
  %133 = bitcast i16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %133) #11
  store i16 -21846, i16* %11, align 2
  %134 = bitcast i16* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %134) #11
  store i16 -21846, i16* %12, align 2
  %135 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13, i32 1
  store i16 0, i16* %135, align 2
  %136 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13, i32 0
  store i16 0, i16* %136, align 8
  %137 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 0
  %138 = bitcast %struct.TT_SBit_MetricsRec_* %10 to <2 x i16>*
  %139 = load <2 x i16>, <2 x i16>* %138, align 4
  %140 = shufflevector <2 x i16> %139, <2 x i16> undef, <2 x i32> <i32 1, i32 0>
  %141 = zext <2 x i16> %140 to <2 x i64>
  %142 = shl nuw nsw <2 x i64> %141, <i64 6, i64 6>
  %143 = bitcast i64* %137 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %143, align 8
  %144 = load i16, i16* %132, align 4
  %145 = sext i16 %144 to i64
  %146 = shl nsw i64 %145, 6
  %147 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 2
  store i64 %146, i64* %147, align 8
  %148 = load i16, i16* %131, align 2
  %149 = sext i16 %148 to i64
  %150 = shl nsw i64 %149, 6
  %151 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 3
  store i64 %150, i64* %151, align 8
  %152 = load i16, i16* %130, align 4
  %153 = zext i16 %152 to i64
  %154 = shl nuw nsw i64 %153, 6
  %155 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 4
  store i64 %154, i64* %155, align 8
  %156 = load i16, i16* %129, align 2
  %157 = sext i16 %156 to i64
  %158 = shl nsw i64 %157, 6
  %159 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 5
  store i64 %158, i64* %159, align 8
  %160 = load i16, i16* %128, align 4
  %161 = sext i16 %160 to i64
  %162 = shl nsw i64 %161, 6
  %163 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 6
  store i64 %162, i64* %163, align 8
  %164 = load i16, i16* %127, align 2
  %165 = zext i16 %164 to i64
  %166 = shl nuw nsw i64 %165, 6
  %167 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 7
  store i64 %166, i64* %167, align 8
  %168 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 9
  store i32 1651078259, i32* %168, align 8
  %169 = and i64 %115, 16
  %170 = icmp eq i64 %169, 0
  %171 = select i1 %170, i16 %144, i16 %156
  %172 = select i1 %170, i16 %148, i16 %160
  %173 = sext i16 %172 to i32
  %174 = sext i16 %171 to i32
  %175 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 11
  store i32 %174, i32* %175, align 8
  %176 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 12
  store i32 %173, i32* %176, align 4
  %177 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 22
  %178 = bitcast i8** %177 to %struct.SFNT_Interface_**
  %179 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %178, align 8
  %180 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %179, i64 0, i32 39
  %181 = load void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)*, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)** %180, align 8
  call void %181(%struct.TT_FaceRec_* %45, i8 zeroext 0, i32 %85, i16* nonnull %12, i16* nonnull %11) #11
  %182 = load i16, i16* %11, align 2
  %183 = zext i16 %182 to i64
  %184 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 6
  store i64 %183, i64* %184, align 8
  %185 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 8
  %186 = load i8, i8* %185, align 8
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %198, label %188

188:                                              ; preds = %126
  %189 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 9, i32 13
  %190 = load i16, i16* %189, align 2
  %191 = icmp eq i16 %190, 0
  br i1 %191, label %198, label %192

192:                                              ; preds = %188
  %193 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %178, align 8
  %194 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %193, i64 0, i32 39
  %195 = load void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)*, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)** %194, align 8
  call void %195(%struct.TT_FaceRec_* %45, i8 zeroext 1, i32 %85, i16* nonnull %12, i16* nonnull %11) #11
  %196 = load i16, i16* %11, align 2
  %197 = zext i16 %196 to i64
  br label %218

198:                                              ; preds = %188, %126
  %199 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 12, i32 0
  %200 = load i16, i16* %199, align 8
  %201 = icmp eq i16 %200, -1
  br i1 %201, label %210, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 12, i32 25
  %204 = load i16, i16* %203, align 2
  %205 = sext i16 %204 to i64
  %206 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 12, i32 26
  %207 = load i16, i16* %206, align 4
  %208 = sext i16 %207 to i64
  %209 = sub nsw i64 %205, %208
  br label %218

210:                                              ; preds = %198
  %211 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 6, i32 1
  %212 = load i16, i16* %211, align 8
  %213 = sext i16 %212 to i64
  %214 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 6, i32 2
  %215 = load i16, i16* %214, align 2
  %216 = sext i16 %215 to i64
  %217 = sub nsw i64 %213, %216
  br label %218

218:                                              ; preds = %210, %202, %192
  %219 = phi i64 [ %217, %210 ], [ %209, %202 ], [ %197, %192 ]
  %220 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 7
  store i64 %219, i64* %220, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %134) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %133) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #11
  br label %743

221:                                              ; preds = %125, %114, %110, %95, %84
  %222 = sext i32 %88 to i64
  %223 = and i64 %222, 16384
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %743

225:                                              ; preds = %221
  %226 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 27
  %227 = load i32, i32* %226, align 8
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %310, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 29, i32 2
  %231 = load i8*, i8** %230, align 8
  %232 = icmp eq i8* %231, null
  br i1 %232, label %284, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 29, i32 0
  %235 = load i8, i8* %234, align 8
  switch i8 %235, label %284 [
    i8 0, label %236
    i8 3, label %240
  ]

236:                                              ; preds = %233
  %237 = zext i32 %85 to i64
  %238 = getelementptr inbounds i8, i8* %231, i64 %237
  %239 = load i8, i8* %238, align 1
  br label %284

240:                                              ; preds = %233
  %241 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 29, i32 4
  %242 = load i32, i32* %241, align 4
  %243 = sub i32 %85, %242
  %244 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 29, i32 5
  %245 = load i32, i32* %244, align 8
  %246 = icmp ult i32 %243, %245
  br i1 %246, label %247, label %250

247:                                              ; preds = %240
  %248 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 29, i32 6
  %249 = load i8, i8* %248, align 4
  br label %284

250:                                              ; preds = %240
  %251 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 29, i32 3
  %252 = load i32, i32* %251, align 8
  %253 = zext i32 %252 to i64
  %254 = getelementptr inbounds i8, i8* %231, i64 %253
  %255 = getelementptr inbounds i8, i8* %231, i64 2
  %256 = load i8, i8* %231, align 1
  %257 = zext i8 %256 to i32
  %258 = shl nuw nsw i32 %257, 8
  %259 = getelementptr inbounds i8, i8* %231, i64 1
  %260 = load i8, i8* %259, align 1
  %261 = zext i8 %260 to i32
  %262 = or i32 %258, %261
  br label %263

263:                                              ; preds = %282, %250
  %264 = phi i8* [ %255, %250 ], [ %268, %282 ]
  %265 = phi i32 [ %262, %250 ], [ %276, %282 ]
  %266 = icmp ugt i32 %265, %85
  br i1 %266, label %284, label %267

267:                                              ; preds = %263
  %268 = getelementptr inbounds i8, i8* %264, i64 3
  %269 = getelementptr inbounds i8, i8* %264, i64 1
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i32
  %272 = shl nuw nsw i32 %271, 8
  %273 = getelementptr inbounds i8, i8* %264, i64 2
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i32
  %276 = or i32 %272, %275
  %277 = icmp ugt i32 %276, %85
  br i1 %277, label %278, label %282

278:                                              ; preds = %267
  %279 = load i8, i8* %264, align 1
  store i32 %265, i32* %241, align 4
  %280 = sub nsw i32 %276, %265
  store i32 %280, i32* %244, align 8
  %281 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 29, i32 6
  store i8 %279, i8* %281, align 4
  br label %284

282:                                              ; preds = %267
  %283 = icmp ult i8* %268, %254
  br i1 %283, label %263, label %284

284:                                              ; preds = %282, %263, %278, %247, %236, %233, %229
  %285 = phi i8 [ 0, %233 ], [ %249, %247 ], [ %239, %236 ], [ 0, %229 ], [ %279, %278 ], [ 0, %263 ], [ 0, %282 ]
  %286 = zext i8 %285 to i32
  %287 = icmp ugt i32 %227, %286
  %288 = trunc i32 %227 to i8
  %289 = add i8 %288, -1
  %290 = select i1 %287, i8 %285, i8 %289
  %291 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 26, i32 0, i32 14
  %292 = load i64, i64* %291, align 8
  %293 = zext i8 %290 to i64
  %294 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 28, i64 %293
  %295 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %294, align 8
  %296 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %295, i64 0, i32 0, i32 14
  %297 = load i64, i64* %296, align 8
  %298 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %295, i64 0, i32 0, i32 12
  %299 = bitcast %struct.FT_Matrix_* %298 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %299, i64 32, i1 false) #11
  %300 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %294, align 8
  %301 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %300, i64 0, i32 0, i32 15, i32 0
  %302 = bitcast i64* %301 to <2 x i64>*
  %303 = load <2 x i64>, <2 x i64>* %302, align 8
  %304 = icmp eq i64 %292, %297
  br i1 %304, label %316, label %305

305:                                              ; preds = %284
  %306 = load i64, i64* %90, align 8
  %307 = call i64 @FT_MulDiv(i64 %306, i64 %292, i64 %297) #11
  store i64 %307, i64* %90, align 8
  %308 = load i64, i64* %92, align 8
  %309 = call i64 @FT_MulDiv(i64 %308, i64 %292, i64 %297) #11
  store i64 %309, i64* %92, align 8
  br label %316

310:                                              ; preds = %225
  %311 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 26, i32 0, i32 12
  %312 = bitcast %struct.FT_Matrix_* %311 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %312, i64 32, i1 false) #11
  %313 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 26, i32 0, i32 15, i32 0
  %314 = bitcast i64* %313 to <2 x i64>*
  %315 = load <2 x i64>, <2 x i64>* %314, align 8
  br label %316

316:                                              ; preds = %310, %305, %284
  %317 = phi i8 [ 0, %310 ], [ 1, %305 ], [ 0, %284 ]
  %318 = phi <2 x i64> [ %315, %310 ], [ %303, %305 ], [ %303, %284 ]
  %319 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13
  %320 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13, i32 1
  store i16 0, i16* %320, align 2
  %321 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %319, i64 0, i32 0
  store i16 0, i16* %321, align 8
  %322 = lshr i64 %222, 1
  %323 = trunc i64 %322 to i8
  %324 = and i8 %323, 1
  %325 = xor i8 %324, 1
  %326 = and i64 %222, 1
  %327 = icmp ne i64 %326, 0
  %328 = trunc i64 %326 to i8
  %329 = xor i8 %328, 1
  %330 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 1
  %331 = bitcast %struct.FT_GlyphSlotRec_* %330 to i8*
  store i8 %325, i8* %331, align 8
  %332 = getelementptr inbounds %struct.CFF_GlyphSlotRec_, %struct.CFF_GlyphSlotRec_* %21, i64 0, i32 2
  store i8 %329, i8* %332, align 1
  %333 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 9
  store i32 1869968492, i32* %333, align 8
  %334 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %334) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %13, align 8
  %335 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %335) #11
  store i64 -6148914691236517206, i64* %14, align 8
  %336 = getelementptr inbounds %struct.CFF_Decoder_FuncsRec_, %struct.CFF_Decoder_FuncsRec_* %55, i64 0, i32 0
  %337 = load void (%struct.CFF_Decoder_*, %struct.TT_FaceRec_*, %struct.CFF_SizeRec_*, %struct.CFF_GlyphSlotRec_*, i8, i32, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, void (%struct.TT_FaceRec_*, i8**, i64)*)*, void (%struct.CFF_Decoder_*, %struct.TT_FaceRec_*, %struct.CFF_SizeRec_*, %struct.CFF_GlyphSlotRec_*, i8, i32, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, void (%struct.TT_FaceRec_*, i8**, i64)*)** %336, align 8
  %338 = lshr i32 %88, 16
  %339 = and i32 %338, 15
  call void %337(%struct.CFF_Decoder_* nonnull %7, %struct.TT_FaceRec_* %45, %struct.CFF_SizeRec_* %30, %struct.CFF_GlyphSlotRec_* nonnull %21, i8 zeroext %325, i32 %339, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)* nonnull @cff_get_glyph_data, void (%struct.TT_FaceRec_*, i8**, i64)* nonnull @cff_free_glyph_data) #11
  %340 = and i64 %222, 256
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %344, label %342

342:                                              ; preds = %316
  %343 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %7, i64 0, i32 12
  store i8 1, i8* %343, align 1
  br label %344

344:                                              ; preds = %342, %316
  %345 = and i64 %222, 1024
  %346 = icmp eq i64 %345, 0
  %347 = lshr exact i64 %345, 10
  %348 = trunc i64 %347 to i8
  %349 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %7, i64 0, i32 0
  %350 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %7, i64 0, i32 0, i32 13
  store i8 %348, i8* %350, align 2
  %351 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 0, i32 30
  %352 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %351, align 8
  %353 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %352, i64 0, i32 4
  %354 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %353, align 8
  %355 = icmp eq %struct.FT_Incremental_InterfaceRec_* %354, null
  br i1 %355, label %371, label %356

356:                                              ; preds = %344
  %357 = bitcast %struct.FT_Data_* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %357) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %357, i8 -86, i64 16, i1 false) #11
  %358 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %354, i64 0, i32 0
  %359 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %358, align 8
  %360 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %359, i64 0, i32 0
  %361 = load i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)** %360, align 8
  %362 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %354, i64 0, i32 1
  %363 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %362, align 8
  %364 = call i32 %361(%struct.FT_IncrementalRec_* %363, i32 %85, %struct.FT_Data_* nonnull %6) #11
  %365 = bitcast %struct.FT_Data_* %6 to i64*
  %366 = load i64, i64* %365, align 8
  %367 = bitcast i8** %13 to i64*
  store i64 %366, i64* %367, align 8
  %368 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %6, i64 0, i32 1
  %369 = load i32, i32* %368, align 8
  %370 = sext i32 %369 to i64
  store i64 %370, i64* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %357) #11
  br label %375

371:                                              ; preds = %344
  %372 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %49, align 8
  %373 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %372, i64 0, i32 16
  %374 = call fastcc i32 @cff_index_access_element(%struct.CFF_IndexRec_* %373, i32 %85, i8** nonnull %13, i64* nonnull %14) #11
  br label %375

375:                                              ; preds = %371, %356
  %376 = phi i32 [ %364, %356 ], [ %374, %371 ]
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %463

378:                                              ; preds = %375
  %379 = getelementptr inbounds %struct.CFF_Decoder_FuncsRec_, %struct.CFF_Decoder_FuncsRec_* %55, i64 0, i32 1
  %380 = load i32 (%struct.CFF_Decoder_*, %struct.CFF_SizeRec_*, i32)*, i32 (%struct.CFF_Decoder_*, %struct.CFF_SizeRec_*, i32)** %379, align 8
  %381 = call i32 %380(%struct.CFF_Decoder_* nonnull %7, %struct.CFF_SizeRec_* %30, i32 %85) #11
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %463

383:                                              ; preds = %378
  %384 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %53, i64 0, i32 6
  %385 = load void (%struct.PS_Decoder_*, i8*, i8)*, void (%struct.PS_Decoder_*, i8*, i8)** %384, align 8
  call void %385(%struct.PS_Decoder_* nonnull %8, i8* nonnull %46, i8 zeroext 0) #11
  %386 = getelementptr inbounds %struct.CFF_Decoder_FuncsRec_, %struct.CFF_Decoder_FuncsRec_* %55, i64 0, i32 2
  %387 = load i32 (%struct.PS_Decoder_*, i8*, i64)*, i32 (%struct.PS_Decoder_*, i8*, i64)** %386, align 8
  %388 = load i8*, i8** %13, align 8
  %389 = load i64, i64* %14, align 8
  %390 = call i32 %387(%struct.PS_Decoder_* nonnull %8, i8* %388, i64 %389) #11
  %391 = and i32 %390, 255
  %392 = icmp eq i32 %391, 164
  br i1 %392, label %393, label %397

393:                                              ; preds = %383
  store i8 0, i8* %331, align 8
  %394 = load i32 (%struct.PS_Decoder_*, i8*, i64)*, i32 (%struct.PS_Decoder_*, i8*, i64)** %386, align 8
  %395 = load i8*, i8** %13, align 8
  %396 = call i32 %394(%struct.PS_Decoder_* nonnull %8, i8* %395, i64 %389) #11
  br label %397

397:                                              ; preds = %393, %383
  %398 = phi i32 [ %396, %393 ], [ %390, %383 ]
  %399 = phi i8 [ 0, %393 ], [ %325, %383 ]
  %400 = phi i8 [ 1, %393 ], [ %317, %383 ]
  %401 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %351, align 8
  %402 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %401, i64 0, i32 4
  %403 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %402, align 8
  %404 = icmp eq %struct.FT_Incremental_InterfaceRec_* %403, null
  br i1 %404, label %418, label %405

405:                                              ; preds = %397
  %406 = bitcast %struct.FT_Data_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %406) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %406, i8 -86, i64 16, i1 false) #11
  %407 = bitcast i8** %13 to i64*
  %408 = load i64, i64* %407, align 8
  %409 = bitcast %struct.FT_Data_* %5 to i64*
  store i64 %408, i64* %409, align 8
  %410 = trunc i64 %389 to i32
  %411 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %5, i64 0, i32 1
  store i32 %410, i32* %411, align 8
  %412 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %403, i64 0, i32 0
  %413 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %412, align 8
  %414 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %413, i64 0, i32 1
  %415 = load void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)** %414, align 8
  %416 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %403, i64 0, i32 1
  %417 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %416, align 8
  call void %415(%struct.FT_IncrementalRec_* %417, %struct.FT_Data_* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %406) #11
  br label %426

418:                                              ; preds = %397
  %419 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %49, align 8
  %420 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %419, i64 0, i32 16, i32 8
  %421 = load i8*, i8** %420, align 8
  %422 = icmp eq i8* %421, null
  br i1 %422, label %423, label %426

423:                                              ; preds = %418
  %424 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %419, i64 0, i32 16, i32 0
  %425 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %424, align 8
  call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %425, i8** nonnull %13) #11
  br label %426

426:                                              ; preds = %423, %418, %405
  %427 = icmp eq i32 %398, 0
  br i1 %427, label %428, label %463

428:                                              ; preds = %426
  %429 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %351, align 8
  %430 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %429, i64 0, i32 4
  %431 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %430, align 8
  %432 = icmp eq %struct.FT_Incremental_InterfaceRec_* %431, null
  br i1 %432, label %436, label %433

433:                                              ; preds = %428
  %434 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 16
  %435 = bitcast i8** %434 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %435, i8 0, i64 16, i1 false) #11
  br label %450

436:                                              ; preds = %428
  %437 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 16, i32 7
  %438 = load i64*, i64** %437, align 8
  %439 = icmp eq i64* %438, null
  br i1 %439, label %450, label %440

440:                                              ; preds = %436
  %441 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %50, i64 0, i32 16, i32 8
  %442 = load i8*, i8** %441, align 8
  %443 = zext i32 %85 to i64
  %444 = getelementptr inbounds i64, i64* %438, i64 %443
  %445 = load i64, i64* %444, align 8
  %446 = getelementptr inbounds i8, i8* %442, i64 %445
  %447 = getelementptr inbounds i8, i8* %446, i64 -1
  %448 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 16
  store i8* %447, i8** %448, align 8
  %449 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 17
  store i64 %389, i64* %449, align 8
  br label %450

450:                                              ; preds = %440, %436, %433
  %451 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %7, i64 0, i32 0, i32 17, i32 1
  %452 = load void (%struct.CFF_Builder_*)*, void (%struct.CFF_Builder_*)** %451, align 8
  call void %452(%struct.CFF_Builder_* nonnull %349) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %335) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %334) #11
  %453 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %351, align 8
  %454 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %453, i64 0, i32 4
  %455 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %454, align 8
  %456 = icmp eq %struct.FT_Incremental_InterfaceRec_* %455, null
  br i1 %456, label %487, label %457

457:                                              ; preds = %450
  %458 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %455, i64 0, i32 0
  %459 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %458, align 8
  %460 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %459, i64 0, i32 2
  %461 = load i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)** %460, align 8
  %462 = icmp eq i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* %461, null
  br i1 %462, label %487, label %465

463:                                              ; preds = %426, %378, %375
  %464 = phi i32 [ %398, %426 ], [ %381, %378 ], [ %376, %375 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %335) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %334) #11
  br label %743

465:                                              ; preds = %457
  %466 = bitcast %struct.FT_Incremental_MetricsRec_* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %466) #11
  %467 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %15, i64 0, i32 0
  %468 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %15, i64 0, i32 1
  %469 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %15, i64 0, i32 2
  %470 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %7, i64 0, i32 0, i32 8, i32 0
  %471 = load i64, i64* %470, align 8
  store i64 %471, i64* %467, align 8
  store i64 0, i64* %468, align 8
  %472 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %7, i64 0, i32 0, i32 9, i32 0
  %473 = bitcast i64* %472 to <2 x i64>*
  %474 = load <2 x i64>, <2 x i64>* %473, align 8
  %475 = bitcast i64* %469 to <2 x i64>*
  store <2 x i64> %474, <2 x i64>* %475, align 8
  %476 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %458, align 8
  %477 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %476, i64 0, i32 2
  %478 = load i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)** %477, align 8
  %479 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %455, i64 0, i32 1
  %480 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %479, align 8
  %481 = call i32 %478(%struct.FT_IncrementalRec_* %480, i32 %85, i8 zeroext 0, %struct.FT_Incremental_MetricsRec_* nonnull %15) #11
  %482 = load i64, i64* %467, align 8
  store i64 %482, i64* %470, align 8
  %483 = bitcast i64* %469 to <2 x i64>*
  %484 = load <2 x i64>, <2 x i64>* %483, align 8
  %485 = bitcast i64* %472 to <2 x i64>*
  store <2 x i64> %484, <2 x i64>* %485, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %466) #11
  %486 = icmp eq i32 %481, 0
  br i1 %486, label %487, label %743

487:                                              ; preds = %465, %457, %450
  br i1 %346, label %502, label %488

488:                                              ; preds = %487
  %489 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %490 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %489, align 8
  %491 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %7, i64 0, i32 0, i32 8, i32 0
  %492 = load i64, i64* %491, align 8
  %493 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 2
  store i64 %492, i64* %493, align 8
  %494 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %7, i64 0, i32 9
  %495 = load i64, i64* %494, align 8
  %496 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 4
  store i64 %495, i64* %496, align 8
  %497 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %490, i64 0, i32 3
  %498 = bitcast %struct.FT_Matrix_* %497 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %498, i8* nonnull align 8 %56, i64 32, i1 false) #11
  %499 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %490, i64 0, i32 4, i32 0
  %500 = bitcast i64* %499 to <2 x i64>*
  store <2 x i64> %318, <2 x i64>* %500, align 8
  %501 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %490, i64 0, i32 2
  store i8 1, i8* %501, align 4
  br label %743

502:                                              ; preds = %487
  %503 = bitcast %struct.FT_BBox_* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %503) #11
  %504 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %16, i64 0, i32 2
  %505 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5
  %506 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 6, i32 13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %503, i8 -86, i64 32, i1 false) #11
  %507 = load i16, i16* %506, align 2
  %508 = icmp eq i16 %507, 0
  br i1 %508, label %522, label %509

509:                                              ; preds = %502
  %510 = bitcast i16* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %510) #11
  store i16 0, i16* %17, align 2
  %511 = bitcast i16* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %511) #11
  store i16 0, i16* %18, align 2
  %512 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 22
  %513 = bitcast i8** %512 to %struct.SFNT_Interface_**
  %514 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %513, align 8
  %515 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %514, i64 0, i32 39
  %516 = load void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)*, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)** %515, align 8
  call void %516(%struct.TT_FaceRec_* %45, i8 zeroext 0, i32 %85, i16* nonnull %17, i16* nonnull %18) #11
  %517 = load i16, i16* %18, align 2
  %518 = zext i16 %517 to i64
  %519 = load i16, i16* %17, align 2
  %520 = sext i16 %519 to i64
  %521 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 2
  store i64 %520, i64* %521, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %511) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %510) #11
  br label %525

522:                                              ; preds = %502
  %523 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %7, i64 0, i32 9
  %524 = load i64, i64* %523, align 8
  br label %525

525:                                              ; preds = %522, %509
  %526 = phi i64 [ %524, %522 ], [ %518, %509 ]
  %527 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 4
  store i64 %526, i64* %527, align 8
  %528 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 6
  store i64 %526, i64* %528, align 8
  %529 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %530 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %529, align 8
  %531 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %530, i64 0, i32 2
  store i8 0, i8* %531, align 4
  %532 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 8
  %533 = load i8, i8* %532, align 8
  %534 = icmp eq i8 %533, 0
  br i1 %534, label %553, label %535

535:                                              ; preds = %525
  %536 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 9, i32 13
  %537 = load i16, i16* %536, align 2
  %538 = icmp eq i16 %537, 0
  br i1 %538, label %553, label %539

539:                                              ; preds = %535
  %540 = bitcast i16* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %540) #11
  store i16 0, i16* %19, align 2
  %541 = bitcast i16* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %541) #11
  store i16 0, i16* %20, align 2
  %542 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 22
  %543 = bitcast i8** %542 to %struct.SFNT_Interface_**
  %544 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %543, align 8
  %545 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %544, i64 0, i32 39
  %546 = load void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)*, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)** %545, align 8
  call void %546(%struct.TT_FaceRec_* %45, i8 zeroext 1, i32 %85, i16* nonnull %19, i16* nonnull %20) #11
  %547 = load i16, i16* %19, align 2
  %548 = sext i16 %547 to i64
  %549 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 6
  store i64 %548, i64* %549, align 8
  %550 = load i16, i16* %20, align 2
  %551 = zext i16 %550 to i64
  %552 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 7
  store i64 %551, i64* %552, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %541) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %540) #11
  br label %575

553:                                              ; preds = %535, %525
  %554 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 12, i32 0
  %555 = load i16, i16* %554, align 8
  %556 = icmp eq i16 %555, -1
  br i1 %556, label %566, label %557

557:                                              ; preds = %553
  %558 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 12, i32 25
  %559 = load i16, i16* %558, align 2
  %560 = sext i16 %559 to i64
  %561 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 12, i32 26
  %562 = load i16, i16* %561, align 4
  %563 = sext i16 %562 to i64
  %564 = sub nsw i64 %560, %563
  %565 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 7
  store i64 %564, i64* %565, align 8
  br label %575

566:                                              ; preds = %553
  %567 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 6, i32 1
  %568 = load i16, i16* %567, align 8
  %569 = sext i16 %568 to i64
  %570 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %45, i64 0, i32 6, i32 2
  %571 = load i16, i16* %570, align 2
  %572 = sext i16 %571 to i64
  %573 = sub nsw i64 %569, %572
  %574 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 7
  store i64 %573, i64* %574, align 8
  br label %575

575:                                              ; preds = %566, %557, %539
  %576 = phi i64 [ %564, %557 ], [ %573, %566 ], [ %551, %539 ]
  %577 = phi i1 [ false, %557 ], [ false, %566 ], [ true, %539 ]
  %578 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 7
  %579 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 7
  store i64 %576, i64* %579, align 8
  store i32 1869968492, i32* %333, align 8
  %580 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13, i32 5
  store i32 0, i32* %580, align 8
  br i1 %94, label %581, label %586

581:                                              ; preds = %575
  %582 = getelementptr inbounds %struct.CFF_SizeRec_, %struct.CFF_SizeRec_* %30, i64 0, i32 0, i32 2, i32 1
  %583 = load i16, i16* %582, align 2
  %584 = icmp ult i16 %583, 24
  br i1 %584, label %585, label %586

585:                                              ; preds = %581
  store i32 256, i32* %580, align 8
  br label %586

586:                                              ; preds = %585, %581, %575
  %587 = phi i32 [ 260, %585 ], [ 4, %581 ], [ 4, %575 ]
  store i32 %587, i32* %580, align 8
  %588 = load i64, i64* %57, align 8
  %589 = icmp eq i64 %588, 65536
  %590 = load i64, i64* %60, align 8
  %591 = icmp eq i64 %590, 65536
  %592 = and i1 %589, %591
  %593 = load i64, i64* %58, align 8
  %594 = load i64, i64* %59, align 8
  %595 = or i64 %594, %593
  %596 = icmp eq i64 %595, 0
  %597 = and i1 %592, %596
  br i1 %597, label %623, label %598

598:                                              ; preds = %586
  call void @FT_Outline_Transform(%struct.FT_Outline_* %319, %struct.FT_Matrix_* nonnull %9) #11
  %599 = load i64, i64* %527, align 8
  %600 = load i64, i64* %57, align 8
  %601 = shl i64 %599, 32
  %602 = ashr exact i64 %601, 32
  %603 = shl i64 %600, 32
  %604 = ashr exact i64 %603, 32
  %605 = mul nsw i64 %604, %602
  %606 = ashr i64 %605, 63
  %607 = add nsw i64 %605, 32768
  %608 = add nsw i64 %607, %606
  %609 = shl i64 %608, 16
  %610 = ashr i64 %609, 32
  store i64 %610, i64* %527, align 8
  %611 = load i64, i64* %578, align 8
  %612 = load i64, i64* %60, align 8
  %613 = shl i64 %611, 32
  %614 = ashr exact i64 %613, 32
  %615 = shl i64 %612, 32
  %616 = ashr exact i64 %615, 32
  %617 = mul nsw i64 %616, %614
  %618 = ashr i64 %617, 63
  %619 = add nsw i64 %617, 32768
  %620 = add nsw i64 %619, %618
  %621 = shl i64 %620, 16
  %622 = ashr i64 %621, 32
  store i64 %622, i64* %578, align 8
  br label %623

623:                                              ; preds = %598, %586
  %624 = phi i64 [ %576, %586 ], [ %622, %598 ]
  %625 = extractelement <2 x i64> %318, i32 0
  %626 = extractelement <2 x i64> %318, i32 1
  %627 = or i64 %625, %626
  %628 = icmp eq i64 %627, 0
  br i1 %628, label %634, label %629

629:                                              ; preds = %623
  call void @FT_Outline_Translate(%struct.FT_Outline_* %319, i64 %625, i64 %626) #11
  %630 = load i64, i64* %527, align 8
  %631 = add nsw i64 %630, %625
  store i64 %631, i64* %527, align 8
  %632 = load i64, i64* %578, align 8
  %633 = add nsw i64 %632, %626
  store i64 %633, i64* %578, align 8
  br label %634

634:                                              ; preds = %629, %623
  %635 = phi i64 [ %624, %623 ], [ %633, %629 ]
  %636 = icmp eq i8 %400, 0
  %637 = and i1 %327, %636
  br i1 %637, label %708, label %638

638:                                              ; preds = %634
  %639 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13, i32 2
  %640 = load %struct.FT_Vector_*, %struct.FT_Vector_** %639, align 8
  %641 = load i64, i64* %90, align 8
  %642 = load i64, i64* %92, align 8
  %643 = icmp eq i8 %399, 0
  br i1 %643, label %648, label %644

644:                                              ; preds = %638
  %645 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %7, i64 0, i32 0, i32 15
  %646 = load i8*, i8** %645, align 8
  %647 = icmp eq i8* %646, null
  br i1 %647, label %648, label %685

648:                                              ; preds = %644, %638
  %649 = load i16, i16* %320, align 2
  %650 = icmp sgt i16 %649, 0
  br i1 %650, label %651, label %685

651:                                              ; preds = %648
  %652 = sext i16 %649 to i32
  %653 = shl i64 %641, 32
  %654 = ashr exact i64 %653, 32
  %655 = shl i64 %642, 32
  %656 = ashr exact i64 %655, 32
  br label %657

657:                                              ; preds = %657, %651
  %658 = phi %struct.FT_Vector_* [ %640, %651 ], [ %681, %657 ]
  %659 = phi i32 [ %652, %651 ], [ %680, %657 ]
  %660 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %658, i64 0, i32 0
  %661 = load i64, i64* %660, align 8
  %662 = shl i64 %661, 32
  %663 = ashr exact i64 %662, 32
  %664 = mul nsw i64 %663, %654
  %665 = ashr i64 %664, 63
  %666 = add nsw i64 %664, 32768
  %667 = add nsw i64 %666, %665
  %668 = shl i64 %667, 16
  %669 = ashr i64 %668, 32
  store i64 %669, i64* %660, align 8
  %670 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %658, i64 0, i32 1
  %671 = load i64, i64* %670, align 8
  %672 = shl i64 %671, 32
  %673 = ashr exact i64 %672, 32
  %674 = mul nsw i64 %673, %656
  %675 = ashr i64 %674, 63
  %676 = add nsw i64 %674, 32768
  %677 = add nsw i64 %676, %675
  %678 = shl i64 %677, 16
  %679 = ashr i64 %678, 32
  store i64 %679, i64* %670, align 8
  %680 = add nsw i32 %659, -1
  %681 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %658, i64 1
  %682 = icmp sgt i32 %680, 0
  br i1 %682, label %657, label %683

683:                                              ; preds = %657
  %684 = load i64, i64* %578, align 8
  br label %685

685:                                              ; preds = %683, %648, %644
  %686 = phi i64 [ %684, %683 ], [ %635, %648 ], [ %635, %644 ]
  %687 = load i64, i64* %527, align 8
  %688 = shl i64 %687, 32
  %689 = ashr exact i64 %688, 32
  %690 = shl i64 %641, 32
  %691 = ashr exact i64 %690, 32
  %692 = mul nsw i64 %689, %691
  %693 = ashr i64 %692, 63
  %694 = add nsw i64 %692, 32768
  %695 = add nsw i64 %694, %693
  %696 = shl i64 %695, 16
  %697 = ashr i64 %696, 32
  store i64 %697, i64* %527, align 8
  %698 = shl i64 %686, 32
  %699 = ashr exact i64 %698, 32
  %700 = shl i64 %642, 32
  %701 = ashr exact i64 %700, 32
  %702 = mul nsw i64 %699, %701
  %703 = ashr i64 %702, 63
  %704 = add nsw i64 %702, 32768
  %705 = add nsw i64 %704, %703
  %706 = shl i64 %705, 16
  %707 = ashr i64 %706, 32
  store i64 %707, i64* %578, align 8
  br label %708

708:                                              ; preds = %685, %634
  call void @FT_Outline_Get_CBox(%struct.FT_Outline_* %319, %struct.FT_BBox_* nonnull %16) #11
  %709 = bitcast i64* %504 to <2 x i64>*
  %710 = load <2 x i64>, <2 x i64>* %709, align 16
  %711 = bitcast %struct.FT_BBox_* %16 to <2 x i64>*
  %712 = load <2 x i64>, <2 x i64>* %711, align 16
  %713 = sub nsw <2 x i64> %710, %712
  %714 = bitcast %struct.FT_Glyph_Metrics_* %505 to <2 x i64>*
  store <2 x i64> %713, <2 x i64>* %714, align 8
  %715 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 2
  %716 = extractelement <2 x i64> %712, i32 0
  store i64 %716, i64* %715, align 8
  %717 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 3
  %718 = extractelement <2 x i64> %710, i32 1
  store i64 %718, i64* %717, align 8
  br i1 %577, label %719, label %737

719:                                              ; preds = %708
  %720 = load i64, i64* %527, align 8
  %721 = sdiv i64 %720, 2
  %722 = sub nsw i64 %716, %721
  %723 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 5
  store i64 %722, i64* %723, align 8
  %724 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 6
  %725 = load i64, i64* %724, align 8
  %726 = load i64, i64* %92, align 8
  %727 = shl i64 %725, 32
  %728 = ashr exact i64 %727, 32
  %729 = shl i64 %726, 32
  %730 = ashr exact i64 %729, 32
  %731 = mul nsw i64 %730, %728
  %732 = ashr i64 %731, 63
  %733 = add nsw i64 %731, 32768
  %734 = add nsw i64 %733, %732
  %735 = shl i64 %734, 16
  %736 = ashr i64 %735, 32
  store i64 %736, i64* %724, align 8
  br label %742

737:                                              ; preds = %708
  %738 = and i64 %222, 16
  %739 = icmp eq i64 %738, 0
  br i1 %739, label %742, label %740

740:                                              ; preds = %737
  %741 = load i64, i64* %578, align 8
  call void @ft_synthesize_vertical_metrics(%struct.FT_Glyph_Metrics_* %505, i64 %741) #11
  br label %742

742:                                              ; preds = %740, %737, %719
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %503) #11
  br label %743

743:                                              ; preds = %70, %74, %80, %218, %221, %463, %465, %488, %742
  %744 = phi i32 [ 0, %218 ], [ 6, %74 ], [ 6, %80 ], [ 6, %221 ], [ %481, %465 ], [ 0, %488 ], [ 0, %742 ], [ %464, %463 ], [ 6, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #11
  call void @llvm.lifetime.end.p0i8(i64 1264, i8* nonnull %47) #11
  call void @llvm.lifetime.end.p0i8(i64 1520, i8* nonnull %46) #11
  br label %745

745:                                              ; preds = %36, %4, %743
  %746 = phi i32 [ %744, %743 ], [ 37, %4 ], [ 35, %36 ]
  ret i32 %746
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_get_kerning(%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_* nocapture) #3 {
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 13
  %6 = bitcast i16* %5 to %struct.SFNT_Interface_**
  %7 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %6, align 8
  %8 = icmp eq %struct.SFNT_Interface_* %7, null
  %9 = bitcast %struct.FT_Vector_* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false)
  br i1 %8, label %17, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3, i64 0, i32 0
  %12 = bitcast %struct.FT_FaceRec_* %0 to %struct.TT_FaceRec_*
  %13 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %7, i64 0, i32 21
  %14 = load i32 (%struct.TT_FaceRec_*, i32, i32)*, i32 (%struct.TT_FaceRec_*, i32, i32)** %13, align 8
  %15 = tail call i32 %14(%struct.TT_FaceRec_* %12, i32 %1, i32 %2) #11
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %11, align 8
  br label %17

17:                                               ; preds = %4, %10
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_get_advances(%struct.FT_FaceRec_*, i32, i32, i32, i64* nocapture) #3 {
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 21
  %10 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %9, align 8
  %11 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %93, label %15

15:                                               ; preds = %5
  %16 = bitcast %struct.FT_FaceRec_* %0 to %struct.TT_FaceRec_*
  %17 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %17) #11
  store i16 -21846, i16* %6, align 2
  %18 = and i32 %3, 16
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 2147418112
  %23 = icmp ne i64 %22, 0
  %24 = trunc i64 %12 to i16
  %25 = icmp slt i16 %24, 0
  %26 = or i1 %25, %23
  br i1 %19, label %58, label %27

27:                                               ; preds = %15
  br i1 %26, label %28, label %34

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 29
  %30 = bitcast i8** %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 16
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %90, label %34

34:                                               ; preds = %27, %28
  %35 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2
  %36 = bitcast %struct.FT_FaceRec_* %35 to i8*
  %37 = load i8, i8* %36, align 8
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %92, label %39

39:                                               ; preds = %34
  %40 = icmp eq i32 %2, 0
  br i1 %40, label %90, label %41

41:                                               ; preds = %39
  %42 = bitcast i16* %7 to i8*
  %43 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 13
  %44 = bitcast i16* %43 to %struct.SFNT_Interface_**
  %45 = zext i32 %2 to i64
  br label %46

46:                                               ; preds = %46, %41
  %47 = phi i64 [ 0, %41 ], [ %56, %46 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %42) #11
  store i16 -21846, i16* %7, align 2
  %48 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %44, align 8
  %49 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %48, i64 0, i32 39
  %50 = load void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)*, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)** %49, align 8
  %51 = trunc i64 %47 to i32
  %52 = add i32 %51, %1
  call void %50(%struct.TT_FaceRec_* %16, i8 zeroext 1, i32 %52, i16* nonnull %6, i16* nonnull %7) #11
  %53 = load i16, i16* %7, align 2
  %54 = zext i16 %53 to i64
  %55 = getelementptr inbounds i64, i64* %4, i64 %47
  store i64 %54, i64* %55, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %42) #11
  %56 = add nuw nsw i64 %47, 1
  %57 = icmp eq i64 %56, %45
  br i1 %57, label %90, label %46

58:                                               ; preds = %15
  br i1 %26, label %59, label %65

59:                                               ; preds = %58
  %60 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 29
  %61 = bitcast i8** %60 to i32*
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %90, label %65

65:                                               ; preds = %58, %59
  %66 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 21
  %67 = bitcast %struct.FT_GlyphSlotRec_** %66 to %struct.TT_HoriHeader_*
  %68 = getelementptr inbounds %struct.TT_HoriHeader_, %struct.TT_HoriHeader_* %67, i64 0, i32 13
  %69 = load i16, i16* %68, align 2
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %92, label %71

71:                                               ; preds = %65
  %72 = icmp eq i32 %2, 0
  br i1 %72, label %90, label %73

73:                                               ; preds = %71
  %74 = bitcast i16* %8 to i8*
  %75 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 13
  %76 = bitcast i16* %75 to %struct.SFNT_Interface_**
  %77 = zext i32 %2 to i64
  br label %78

78:                                               ; preds = %78, %73
  %79 = phi i64 [ 0, %73 ], [ %88, %78 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %74) #11
  store i16 -21846, i16* %8, align 2
  %80 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %76, align 8
  %81 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %80, i64 0, i32 39
  %82 = load void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)*, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)** %81, align 8
  %83 = trunc i64 %79 to i32
  %84 = add i32 %83, %1
  call void %82(%struct.TT_FaceRec_* %16, i8 zeroext 0, i32 %84, i16* nonnull %6, i16* nonnull %8) #11
  %85 = load i16, i16* %8, align 2
  %86 = zext i16 %85 to i64
  %87 = getelementptr inbounds i64, i64* %4, i64 %79
  store i64 %86, i64* %87, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %74) #11
  %88 = add nuw nsw i64 %79, 1
  %89 = icmp eq i64 %88, %77
  br i1 %89, label %90, label %78

90:                                               ; preds = %46, %78, %71, %39, %28, %59
  %91 = phi i32 [ 7, %59 ], [ 7, %28 ], [ 0, %71 ], [ 0, %39 ], [ 0, %78 ], [ 0, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %17) #11
  br label %116

92:                                               ; preds = %65, %34
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %17) #11
  br label %93

93:                                               ; preds = %92, %5
  %94 = or i32 %3, 256
  %95 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 22
  %96 = icmp eq i32 %2, 0
  br i1 %96, label %116, label %97

97:                                               ; preds = %93
  %98 = and i32 %3, 16
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %10, i64 0, i32 7
  %101 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %10, i64 0, i32 6
  %102 = select i1 %99, i64* %101, i64* %100
  %103 = zext i32 %2 to i64
  br label %104

104:                                              ; preds = %111, %97
  %105 = phi i64 [ 0, %97 ], [ %114, %111 ]
  %106 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %95, align 8
  %107 = trunc i64 %105 to i32
  %108 = add i32 %107, %1
  %109 = tail call i32 @cff_glyph_load(%struct.FT_GlyphSlotRec_* %10, %struct.FT_SizeRec_* %106, i32 %108, i32 %94)
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %104
  %112 = load i64, i64* %102, align 8
  %113 = getelementptr inbounds i64, i64* %4, i64 %105
  store i64 %112, i64* %113, align 8
  %114 = add nuw nsw i64 %105, 1
  %115 = icmp eq i64 %114, %103
  br i1 %115, label %116, label %104

116:                                              ; preds = %104, %111, %93, %90
  %117 = phi i32 [ %91, %90 ], [ 0, %93 ], [ %109, %104 ], [ 0, %111 ]
  ret i32 %117
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_size_request(%struct.FT_SizeRec_* nocapture, %struct.FT_Size_RequestRec_*) #3 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 0
  %5 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 2
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = bitcast %struct.FT_FaceRec_* %5 to %struct.TT_FaceRec_*
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 3, i32 13
  %13 = bitcast i16* %12 to %struct.SFNT_Interface_**
  %14 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %13, align 8
  %15 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  store i64 -6148914691236517206, i64* %3, align 8
  %16 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %14, i64 0, i32 26
  %17 = load i32 (%struct.TT_FaceRec_*, %struct.FT_Size_RequestRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_Size_RequestRec_*, i64*)** %16, align 8
  %18 = call i32 %17(%struct.TT_FaceRec_* %11, %struct.FT_Size_RequestRec_* %1, i64* nonnull %3) #11
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 1
  %22 = bitcast %struct.FT_SizeRec_* %21 to i64*
  store i64 4294967295, i64* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %23 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  br label %27

24:                                               ; preds = %10
  %25 = load i64, i64* %3, align 8
  %26 = call i32 @cff_size_select(%struct.FT_SizeRec_* %0, i64 %25)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  br label %100

27:                                               ; preds = %20, %2
  %28 = phi %struct.FT_FaceRec_* [ %23, %20 ], [ %5, %2 ]
  call void @FT_Request_Metrics(%struct.FT_FaceRec_* %28, %struct.FT_Size_RequestRec_* %1) #11
  %29 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %30 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %29, i64 4, i32 24
  %31 = bitcast %struct.FT_DriverRec_** %30 to %struct.CFF_FontRec_**
  %32 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %31, align 8
  %33 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %32, i64 0, i32 30
  %34 = load %struct.PSHinter_Interface_*, %struct.PSHinter_Interface_** %33, align 8
  %35 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %29, i64 0, i32 24
  %36 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %35, align 8
  %37 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %36, i64 0, i32 0, i32 1
  %38 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %37, align 8
  %39 = call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0)) #11
  %40 = icmp ne %struct.FT_ModuleRec_* %39, null
  %41 = icmp ne %struct.PSHinter_Interface_* %34, null
  %42 = and i1 %41, %40
  br i1 %42, label %43, label %100

43:                                               ; preds = %27
  %44 = getelementptr inbounds %struct.PSHinter_Interface_, %struct.PSHinter_Interface_* %34, i64 0, i32 0
  %45 = load %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)** %44, align 8
  %46 = icmp eq %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)* %45, null
  br i1 %46, label %100, label %47

47:                                               ; preds = %43
  %48 = call %struct.PSH_Globals_FuncsRec_* %45(%struct.FT_ModuleRec_* nonnull %39) #11
  %49 = icmp eq %struct.PSH_Globals_FuncsRec_* %48, null
  br i1 %49, label %100, label %50

50:                                               ; preds = %47
  %51 = bitcast %struct.FT_SizeRec_* %0 to %struct.TT_FaceRec_**
  %52 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %51, align 8
  %53 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %52, i64 0, i32 44, i32 0
  %54 = bitcast i8** %53 to %struct.CFF_FontRec_**
  %55 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %54, align 8
  %56 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 3
  %57 = bitcast %struct.FT_Size_InternalRec_** %56 to %struct.CFF_InternalRec_***
  %58 = load %struct.CFF_InternalRec_**, %struct.CFF_InternalRec_*** %57, align 8
  %59 = load %struct.CFF_InternalRec_*, %struct.CFF_InternalRec_** %58, align 8
  %60 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %55, i64 0, i32 26, i32 0, i32 14
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %struct.PSH_Globals_FuncsRec_, %struct.PSH_Globals_FuncsRec_* %48, i64 0, i32 1
  %63 = load void (%struct.PSH_GlobalsRec_*, i64, i64, i64, i64)*, void (%struct.PSH_GlobalsRec_*, i64, i64, i64, i64)** %62, align 8
  %64 = getelementptr inbounds %struct.CFF_InternalRec_, %struct.CFF_InternalRec_* %59, i64 0, i32 0
  %65 = load %struct.PSH_GlobalsRec_*, %struct.PSH_GlobalsRec_** %64, align 8
  %66 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 2, i32 2
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 2, i32 3
  %69 = load i64, i64* %68, align 8
  call void %63(%struct.PSH_GlobalsRec_* %65, i64 %67, i64 %69, i64 0, i64 0) #11
  %70 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %55, i64 0, i32 27
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %100, label %73

73:                                               ; preds = %50
  %74 = zext i32 %71 to i64
  br label %75

75:                                               ; preds = %73, %92
  %76 = phi i64 [ %74, %73 ], [ %99, %92 ]
  %77 = trunc i64 %76 to i32
  %78 = add i32 %77, -1
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %55, i64 0, i32 28, i64 %79
  %81 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %80, align 8
  %82 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %81, i64 0, i32 0, i32 14
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq i64 %61, %83
  %85 = load i64, i64* %66, align 8
  br i1 %84, label %90, label %86

86:                                               ; preds = %75
  %87 = call i64 @FT_MulDiv(i64 %85, i64 %61, i64 %83) #11
  %88 = load i64, i64* %68, align 8
  %89 = call i64 @FT_MulDiv(i64 %88, i64 %61, i64 %83) #11
  br label %92

90:                                               ; preds = %75
  %91 = load i64, i64* %68, align 8
  br label %92

92:                                               ; preds = %90, %86
  %93 = phi i64 [ %87, %86 ], [ %85, %90 ]
  %94 = phi i64 [ %89, %86 ], [ %91, %90 ]
  %95 = load void (%struct.PSH_GlobalsRec_*, i64, i64, i64, i64)*, void (%struct.PSH_GlobalsRec_*, i64, i64, i64, i64)** %62, align 8
  %96 = getelementptr inbounds %struct.CFF_InternalRec_, %struct.CFF_InternalRec_* %59, i64 0, i32 1, i64 %79
  %97 = load %struct.PSH_GlobalsRec_*, %struct.PSH_GlobalsRec_** %96, align 8
  call void %95(%struct.PSH_GlobalsRec_* %97, i64 %93, i64 %94, i64 0, i64 0) #11
  %98 = icmp eq i32 %78, 0
  %99 = add nsw i64 %76, -1
  br i1 %98, label %100, label %75

100:                                              ; preds = %92, %50, %27, %43, %47, %24
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_size_select(%struct.FT_SizeRec_* nocapture, i64) #3 {
  %3 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 1
  %4 = bitcast %struct.FT_SizeRec_* %3 to i64*
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 0
  %6 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %5, align 8
  tail call void @FT_Select_Metrics(%struct.FT_FaceRec_* %6, i64 %1) #11
  %7 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %5, align 8
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %7, i64 4, i32 24
  %9 = bitcast %struct.FT_DriverRec_** %8 to %struct.CFF_FontRec_**
  %10 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %9, align 8
  %11 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %10, i64 0, i32 30
  %12 = load %struct.PSHinter_Interface_*, %struct.PSHinter_Interface_** %11, align 8
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %7, i64 0, i32 24
  %14 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %14, i64 0, i32 0, i32 1
  %16 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %15, align 8
  %17 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0)) #11
  %18 = icmp ne %struct.FT_ModuleRec_* %17, null
  %19 = icmp ne %struct.PSHinter_Interface_* %12, null
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %78

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.PSHinter_Interface_, %struct.PSHinter_Interface_* %12, i64 0, i32 0
  %23 = load %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)** %22, align 8
  %24 = icmp eq %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)* %23, null
  br i1 %24, label %78, label %25

25:                                               ; preds = %21
  %26 = tail call %struct.PSH_Globals_FuncsRec_* %23(%struct.FT_ModuleRec_* nonnull %17) #11
  %27 = icmp eq %struct.PSH_Globals_FuncsRec_* %26, null
  br i1 %27, label %78, label %28

28:                                               ; preds = %25
  %29 = bitcast %struct.FT_SizeRec_* %0 to %struct.TT_FaceRec_**
  %30 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %29, align 8
  %31 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %30, i64 0, i32 44, i32 0
  %32 = bitcast i8** %31 to %struct.CFF_FontRec_**
  %33 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %32, align 8
  %34 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 3
  %35 = bitcast %struct.FT_Size_InternalRec_** %34 to %struct.CFF_InternalRec_***
  %36 = load %struct.CFF_InternalRec_**, %struct.CFF_InternalRec_*** %35, align 8
  %37 = load %struct.CFF_InternalRec_*, %struct.CFF_InternalRec_** %36, align 8
  %38 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %33, i64 0, i32 26, i32 0, i32 14
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %struct.PSH_Globals_FuncsRec_, %struct.PSH_Globals_FuncsRec_* %26, i64 0, i32 1
  %41 = load void (%struct.PSH_GlobalsRec_*, i64, i64, i64, i64)*, void (%struct.PSH_GlobalsRec_*, i64, i64, i64, i64)** %40, align 8
  %42 = getelementptr inbounds %struct.CFF_InternalRec_, %struct.CFF_InternalRec_* %37, i64 0, i32 0
  %43 = load %struct.PSH_GlobalsRec_*, %struct.PSH_GlobalsRec_** %42, align 8
  %44 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 2, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 2, i32 3
  %47 = load i64, i64* %46, align 8
  tail call void %41(%struct.PSH_GlobalsRec_* %43, i64 %45, i64 %47, i64 0, i64 0) #11
  %48 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %33, i64 0, i32 27
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %78, label %51

51:                                               ; preds = %28
  %52 = zext i32 %49 to i64
  br label %53

53:                                               ; preds = %51, %70
  %54 = phi i64 [ %52, %51 ], [ %77, %70 ]
  %55 = trunc i64 %54 to i32
  %56 = add i32 %55, -1
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %33, i64 0, i32 28, i64 %57
  %59 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %58, align 8
  %60 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %59, i64 0, i32 0, i32 14
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %39, %61
  %63 = load i64, i64* %44, align 8
  br i1 %62, label %68, label %64

64:                                               ; preds = %53
  %65 = tail call i64 @FT_MulDiv(i64 %63, i64 %39, i64 %61) #11
  %66 = load i64, i64* %46, align 8
  %67 = tail call i64 @FT_MulDiv(i64 %66, i64 %39, i64 %61) #11
  br label %70

68:                                               ; preds = %53
  %69 = load i64, i64* %46, align 8
  br label %70

70:                                               ; preds = %68, %64
  %71 = phi i64 [ %65, %64 ], [ %63, %68 ]
  %72 = phi i64 [ %67, %64 ], [ %69, %68 ]
  %73 = load void (%struct.PSH_GlobalsRec_*, i64, i64, i64, i64)*, void (%struct.PSH_GlobalsRec_*, i64, i64, i64, i64)** %40, align 8
  %74 = getelementptr inbounds %struct.CFF_InternalRec_, %struct.CFF_InternalRec_* %37, i64 0, i32 1, i64 %57
  %75 = load %struct.PSH_GlobalsRec_*, %struct.PSH_GlobalsRec_** %74, align 8
  tail call void %73(%struct.PSH_GlobalsRec_* %75, i64 %71, i64 %72, i64 0, i64 0) #11
  %76 = icmp eq i32 %56, 0
  %77 = add nsw i64 %54, -1
  br i1 %76, label %78, label %53

78:                                               ; preds = %70, %28, %2, %21, %25
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define internal i8* @cff_sid_to_glyph_name(%struct.TT_FaceRec_* nocapture readonly, i32) #3 {
  %3 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 44, i32 0
  %4 = bitcast i8** %3 to %struct.CFF_FontRec_**
  %5 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %4, align 8
  %6 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %5, i64 0, i32 15, i32 2
  %7 = load i16*, i16** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds i16, i16* %7, i64 %8
  %10 = load i16, i16* %9, align 2
  %11 = zext i16 %10 to i32
  %12 = icmp eq i16 %10, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %2
  %14 = icmp ugt i16 %10, 390
  br i1 %14, label %15, label %26

15:                                               ; preds = %13
  %16 = add nsw i32 %11, -391
  %17 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %5, i64 0, i32 22
  %18 = load i32, i32* %17, align 8
  %19 = icmp ugt i32 %18, %16
  br i1 %19, label %20, label %34

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %5, i64 0, i32 23
  %22 = load i8**, i8*** %21, align 8
  %23 = zext i32 %16 to i64
  %24 = getelementptr inbounds i8*, i8** %22, i64 %23
  %25 = load i8*, i8** %24, align 8
  br label %34

26:                                               ; preds = %13
  %27 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %5, i64 0, i32 31
  %28 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %27, align 8
  %29 = icmp eq %struct.FT_Service_PsCMapsRec_* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %28, i64 0, i32 5
  %32 = load i8* (i32)*, i8* (i32)** %31, align 8
  %33 = tail call i8* %32(i32 %11) #11
  br label %34

34:                                               ; preds = %2, %15, %20, %26, %30
  %35 = phi i8* [ %33, %30 ], [ null, %2 ], [ null, %26 ], [ %25, %20 ], [ null, %15 ]
  ret i8* %35
}

declare hidden void @ft_mem_free(%struct.FT_MemoryRec_*, i8*) local_unnamed_addr #6

declare hidden i8* @ft_service_list_lookup(%struct.FT_ServiceDescRec_*, i8*) local_unnamed_addr #6

declare %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_*, i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_set_mm_blend(%struct.TT_FaceRec_*, i32, i64*) #3 {
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 24
  %5 = bitcast i8** %4 to %struct.FT_Service_MultiMastersRec_**
  %6 = load %struct.FT_Service_MultiMastersRec_*, %struct.FT_Service_MultiMastersRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_Service_MultiMastersRec_, %struct.FT_Service_MultiMastersRec_* %6, i64 0, i32 2
  %8 = load i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)** %7, align 8
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %10 = tail call i32 %8(%struct.FT_FaceRec_* %9, i32 %1, i64* %2) #11
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_get_mm_blend(%struct.TT_FaceRec_*, i32, i64*) #3 {
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 24
  %5 = bitcast i8** %4 to %struct.FT_Service_MultiMastersRec_**
  %6 = load %struct.FT_Service_MultiMastersRec_*, %struct.FT_Service_MultiMastersRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_Service_MultiMastersRec_, %struct.FT_Service_MultiMastersRec_* %6, i64 0, i32 3
  %8 = load i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)** %7, align 8
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %10 = tail call i32 %8(%struct.FT_FaceRec_* %9, i32 %1, i64* %2) #11
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_get_mm_var(%struct.TT_FaceRec_*, %struct.FT_MM_Var_**) #3 {
  %3 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 24
  %4 = bitcast i8** %3 to %struct.FT_Service_MultiMastersRec_**
  %5 = load %struct.FT_Service_MultiMastersRec_*, %struct.FT_Service_MultiMastersRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_Service_MultiMastersRec_, %struct.FT_Service_MultiMastersRec_* %5, i64 0, i32 4
  %7 = load i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)*, i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)** %6, align 8
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %9 = tail call i32 %7(%struct.FT_FaceRec_* %8, %struct.FT_MM_Var_** %1) #11
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_set_var_design(%struct.TT_FaceRec_*, i32, i64*) #3 {
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 24
  %5 = bitcast i8** %4 to %struct.FT_Service_MultiMastersRec_**
  %6 = load %struct.FT_Service_MultiMastersRec_*, %struct.FT_Service_MultiMastersRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_Service_MultiMastersRec_, %struct.FT_Service_MultiMastersRec_* %6, i64 0, i32 5
  %8 = load i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)** %7, align 8
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %10 = tail call i32 %8(%struct.FT_FaceRec_* %9, i32 %1, i64* %2) #11
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_get_var_design(%struct.TT_FaceRec_*, i32, i64*) #3 {
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 24
  %5 = bitcast i8** %4 to %struct.FT_Service_MultiMastersRec_**
  %6 = load %struct.FT_Service_MultiMastersRec_*, %struct.FT_Service_MultiMastersRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_Service_MultiMastersRec_, %struct.FT_Service_MultiMastersRec_* %6, i64 0, i32 6
  %8 = load i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)** %7, align 8
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %10 = tail call i32 %8(%struct.FT_FaceRec_* %9, i32 %1, i64* %2) #11
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_set_instance(%struct.TT_FaceRec_*, i32) #3 {
  %3 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 24
  %4 = bitcast i8** %3 to %struct.FT_Service_MultiMastersRec_**
  %5 = load %struct.FT_Service_MultiMastersRec_*, %struct.FT_Service_MultiMastersRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_Service_MultiMastersRec_, %struct.FT_Service_MultiMastersRec_* %5, i64 0, i32 7
  %7 = load i32 (%struct.FT_FaceRec_*, i32)*, i32 (%struct.FT_FaceRec_*, i32)** %6, align 8
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %9 = tail call i32 %7(%struct.FT_FaceRec_* %8, i32 %1) #11
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_set_mm_weightvector(%struct.TT_FaceRec_*, i32, i64*) #3 {
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 24
  %5 = bitcast i8** %4 to %struct.FT_Service_MultiMastersRec_**
  %6 = load %struct.FT_Service_MultiMastersRec_*, %struct.FT_Service_MultiMastersRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_Service_MultiMastersRec_, %struct.FT_Service_MultiMastersRec_* %6, i64 0, i32 8
  %8 = load i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)** %7, align 8
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %10 = tail call i32 %8(%struct.FT_FaceRec_* %9, i32 %1, i64* %2) #11
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_get_mm_weightvector(%struct.TT_FaceRec_*, i32*, i64*) #3 {
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 24
  %5 = bitcast i8** %4 to %struct.FT_Service_MultiMastersRec_**
  %6 = load %struct.FT_Service_MultiMastersRec_*, %struct.FT_Service_MultiMastersRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_Service_MultiMastersRec_, %struct.FT_Service_MultiMastersRec_* %6, i64 0, i32 9
  %8 = load i32 (%struct.FT_FaceRec_*, i32*, i64*)*, i32 (%struct.FT_FaceRec_*, i32*, i64*)** %7, align 8
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %10 = tail call i32 %8(%struct.FT_FaceRec_* %9, i32* %1, i64* %2) #11
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_get_var_blend(%struct.TT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**) #3 {
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 24
  %7 = bitcast i8** %6 to %struct.FT_Service_MultiMastersRec_**
  %8 = load %struct.FT_Service_MultiMastersRec_*, %struct.FT_Service_MultiMastersRec_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_Service_MultiMastersRec_, %struct.FT_Service_MultiMastersRec_* %8, i64 0, i32 10
  %10 = load i32 (%struct.FT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)*, i32 (%struct.FT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)** %9, align 8
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %12 = tail call i32 %10(%struct.FT_FaceRec_* %11, i32* %1, i64** %2, i64** %3, %struct.FT_MM_Var_** %4) #11
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define internal void @cff_done_blend(%struct.TT_FaceRec_*) #3 {
  %2 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 24
  %3 = bitcast i8** %2 to %struct.FT_Service_MultiMastersRec_**
  %4 = load %struct.FT_Service_MultiMastersRec_*, %struct.FT_Service_MultiMastersRec_** %3, align 8
  %5 = icmp eq %struct.FT_Service_MultiMastersRec_* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.FT_Service_MultiMastersRec_, %struct.FT_Service_MultiMastersRec_* %4, i64 0, i32 11
  %8 = load void (%struct.FT_FaceRec_*)*, void (%struct.FT_FaceRec_*)** %7, align 8
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  tail call void %8(%struct.FT_FaceRec_* %9) #11
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_hadvance_adjust(%struct.TT_FaceRec_*, i32, i32*) #3 {
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 25
  %5 = bitcast i8** %4 to %struct.FT_Service_MetricsVariationsRec_**
  %6 = load %struct.FT_Service_MetricsVariationsRec_*, %struct.FT_Service_MetricsVariationsRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_Service_MetricsVariationsRec_, %struct.FT_Service_MetricsVariationsRec_* %6, i64 0, i32 0
  %8 = load i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)** %7, align 8
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %10 = tail call i32 %8(%struct.FT_FaceRec_* %9, i32 %1, i32* %2) #11
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal void @cff_metrics_adjust(%struct.TT_FaceRec_*) #3 {
  %2 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 25
  %3 = bitcast i8** %2 to %struct.FT_Service_MetricsVariationsRec_**
  %4 = load %struct.FT_Service_MetricsVariationsRec_*, %struct.FT_Service_MetricsVariationsRec_** %3, align 8
  %5 = getelementptr inbounds %struct.FT_Service_MetricsVariationsRec_, %struct.FT_Service_MetricsVariationsRec_* %4, i64 0, i32 7
  %6 = load void (%struct.FT_FaceRec_*)*, void (%struct.FT_FaceRec_*)** %5, align 8
  %7 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  tail call void %6(%struct.FT_FaceRec_* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_ps_get_font_info(%struct.TT_FaceRec_* nocapture readonly, %struct.PS_FontInfoRec_* nocapture) #3 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 44, i32 0
  %5 = bitcast i8** %4 to %struct.CFF_FontRec_**
  %6 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %5, align 8
  %7 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 0, i32* %3, align 4
  %8 = icmp eq %struct.CFF_FontRec_* %6, null
  br i1 %8, label %184, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 33
  %11 = load %struct.PS_FontInfoRec_*, %struct.PS_FontInfoRec_** %10, align 8
  %12 = icmp eq %struct.PS_FontInfoRec_* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = bitcast %struct.PS_FontInfoRec_* %11 to i8*
  br label %180

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %17 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %16, align 8
  %18 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %17, i64 56, i32* nonnull %3) #11
  %19 = load i32, i32* %3, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %184

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 26, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 65535
  br i1 %24, label %46, label %25

25:                                               ; preds = %21
  %26 = icmp ugt i32 %23, 390
  br i1 %26, label %27, label %38

27:                                               ; preds = %25
  %28 = add i32 %23, -391
  %29 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 22
  %30 = load i32, i32* %29, align 8
  %31 = icmp ugt i32 %30, %28
  br i1 %31, label %32, label %46

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 23
  %34 = load i8**, i8*** %33, align 8
  %35 = zext i32 %28 to i64
  %36 = getelementptr inbounds i8*, i8** %34, i64 %35
  %37 = load i8*, i8** %36, align 8
  br label %46

38:                                               ; preds = %25
  %39 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 31
  %40 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %39, align 8
  %41 = icmp eq %struct.FT_Service_PsCMapsRec_* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %40, i64 0, i32 5
  %44 = load i8* (i32)*, i8* (i32)** %43, align 8
  %45 = call i8* %44(i32 %23) #11
  br label %46

46:                                               ; preds = %21, %27, %32, %38, %42
  %47 = phi i8* [ %45, %42 ], [ null, %21 ], [ null, %38 ], [ %37, %32 ], [ null, %27 ]
  %48 = bitcast i8* %18 to i8**
  store i8* %47, i8** %48, align 8
  %49 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 26, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 65535
  br i1 %51, label %73, label %52

52:                                               ; preds = %46
  %53 = icmp ugt i32 %50, 390
  br i1 %53, label %54, label %65

54:                                               ; preds = %52
  %55 = add i32 %50, -391
  %56 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 22
  %57 = load i32, i32* %56, align 8
  %58 = icmp ugt i32 %57, %55
  br i1 %58, label %59, label %73

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 23
  %61 = load i8**, i8*** %60, align 8
  %62 = zext i32 %55 to i64
  %63 = getelementptr inbounds i8*, i8** %61, i64 %62
  %64 = load i8*, i8** %63, align 8
  br label %73

65:                                               ; preds = %52
  %66 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 31
  %67 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %66, align 8
  %68 = icmp eq %struct.FT_Service_PsCMapsRec_* %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %67, i64 0, i32 5
  %71 = load i8* (i32)*, i8* (i32)** %70, align 8
  %72 = call i8* %71(i32 %50) #11
  br label %73

73:                                               ; preds = %46, %54, %59, %65, %69
  %74 = phi i8* [ %72, %69 ], [ null, %46 ], [ null, %65 ], [ %64, %59 ], [ null, %54 ]
  %75 = getelementptr inbounds i8, i8* %18, i64 8
  %76 = bitcast i8* %75 to i8**
  store i8* %74, i8** %76, align 8
  %77 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 26, i32 0, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 65535
  br i1 %79, label %101, label %80

80:                                               ; preds = %73
  %81 = icmp ugt i32 %78, 390
  br i1 %81, label %82, label %93

82:                                               ; preds = %80
  %83 = add i32 %78, -391
  %84 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 22
  %85 = load i32, i32* %84, align 8
  %86 = icmp ugt i32 %85, %83
  br i1 %86, label %87, label %101

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 23
  %89 = load i8**, i8*** %88, align 8
  %90 = zext i32 %83 to i64
  %91 = getelementptr inbounds i8*, i8** %89, i64 %90
  %92 = load i8*, i8** %91, align 8
  br label %101

93:                                               ; preds = %80
  %94 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 31
  %95 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %94, align 8
  %96 = icmp eq %struct.FT_Service_PsCMapsRec_* %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %95, i64 0, i32 5
  %99 = load i8* (i32)*, i8* (i32)** %98, align 8
  %100 = call i8* %99(i32 %78) #11
  br label %101

101:                                              ; preds = %73, %82, %87, %93, %97
  %102 = phi i8* [ %100, %97 ], [ null, %73 ], [ null, %93 ], [ %92, %87 ], [ null, %82 ]
  %103 = getelementptr inbounds i8, i8* %18, i64 16
  %104 = bitcast i8* %103 to i8**
  store i8* %102, i8** %104, align 8
  %105 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 26, i32 0, i32 4
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %106, 65535
  br i1 %107, label %129, label %108

108:                                              ; preds = %101
  %109 = icmp ugt i32 %106, 390
  br i1 %109, label %110, label %121

110:                                              ; preds = %108
  %111 = add i32 %106, -391
  %112 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 22
  %113 = load i32, i32* %112, align 8
  %114 = icmp ugt i32 %113, %111
  br i1 %114, label %115, label %129

115:                                              ; preds = %110
  %116 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 23
  %117 = load i8**, i8*** %116, align 8
  %118 = zext i32 %111 to i64
  %119 = getelementptr inbounds i8*, i8** %117, i64 %118
  %120 = load i8*, i8** %119, align 8
  br label %129

121:                                              ; preds = %108
  %122 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 31
  %123 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %122, align 8
  %124 = icmp eq %struct.FT_Service_PsCMapsRec_* %123, null
  br i1 %124, label %129, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %123, i64 0, i32 5
  %127 = load i8* (i32)*, i8* (i32)** %126, align 8
  %128 = call i8* %127(i32 %106) #11
  br label %129

129:                                              ; preds = %101, %110, %115, %121, %125
  %130 = phi i8* [ %128, %125 ], [ null, %101 ], [ null, %121 ], [ %120, %115 ], [ null, %110 ]
  %131 = getelementptr inbounds i8, i8* %18, i64 24
  %132 = bitcast i8* %131 to i8**
  store i8* %130, i8** %132, align 8
  %133 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 26, i32 0, i32 5
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 65535
  br i1 %135, label %157, label %136

136:                                              ; preds = %129
  %137 = icmp ugt i32 %134, 390
  br i1 %137, label %138, label %149

138:                                              ; preds = %136
  %139 = add i32 %134, -391
  %140 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 22
  %141 = load i32, i32* %140, align 8
  %142 = icmp ugt i32 %141, %139
  br i1 %142, label %143, label %157

143:                                              ; preds = %138
  %144 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 23
  %145 = load i8**, i8*** %144, align 8
  %146 = zext i32 %139 to i64
  %147 = getelementptr inbounds i8*, i8** %145, i64 %146
  %148 = load i8*, i8** %147, align 8
  br label %157

149:                                              ; preds = %136
  %150 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 31
  %151 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %150, align 8
  %152 = icmp eq %struct.FT_Service_PsCMapsRec_* %151, null
  br i1 %152, label %157, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %151, i64 0, i32 5
  %155 = load i8* (i32)*, i8* (i32)** %154, align 8
  %156 = call i8* %155(i32 %134) #11
  br label %157

157:                                              ; preds = %153, %149, %143, %138, %129
  %158 = phi i8* [ %156, %153 ], [ null, %129 ], [ null, %149 ], [ %148, %143 ], [ null, %138 ]
  %159 = getelementptr inbounds i8, i8* %18, i64 32
  %160 = bitcast i8* %159 to i8**
  store i8* %158, i8** %160, align 8
  %161 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 26, i32 0, i32 7
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds i8, i8* %18, i64 40
  %164 = bitcast i8* %163 to i64*
  store i64 %162, i64* %164, align 8
  %165 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 26, i32 0, i32 6
  %166 = load i8, i8* %165, align 8
  %167 = getelementptr inbounds i8, i8* %18, i64 48
  store i8 %166, i8* %167, align 8
  %168 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 26, i32 0, i32 8
  %169 = load i64, i64* %168, align 8
  %170 = trunc i64 %169 to i16
  %171 = getelementptr inbounds i8, i8* %18, i64 50
  %172 = bitcast i8* %171 to i16*
  store i16 %170, i16* %172, align 2
  %173 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 26, i32 0, i32 9
  %174 = load i64, i64* %173, align 8
  %175 = trunc i64 %174 to i16
  %176 = getelementptr inbounds i8, i8* %18, i64 52
  %177 = bitcast i8* %176 to i16*
  store i16 %175, i16* %177, align 4
  %178 = bitcast %struct.PS_FontInfoRec_** %10 to i8**
  store i8* %18, i8** %178, align 8
  %179 = load i32, i32* %3, align 4
  br label %180

180:                                              ; preds = %13, %157
  %181 = phi i32 [ 0, %13 ], [ %179, %157 ]
  %182 = phi i8* [ %14, %13 ], [ %18, %157 ]
  %183 = bitcast %struct.PS_FontInfoRec_* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %182, i64 56, i1 false)
  br label %184

184:                                              ; preds = %2, %15, %180
  %185 = phi i32 [ 0, %2 ], [ %19, %15 ], [ %181, %180 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  ret i32 %185
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_ps_get_font_extra(%struct.TT_FaceRec_* nocapture readonly, %struct.PS_FontExtraRec_* nocapture) #3 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 44, i32 0
  %5 = bitcast i8** %4 to %struct.CFF_FontRec_**
  %6 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %5, align 8
  %7 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 0, i32* %3, align 4
  %8 = icmp eq %struct.CFF_FontRec_* %6, null
  br i1 %8, label %86, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 38
  %11 = load %struct.PS_FontExtraRec_*, %struct.PS_FontExtraRec_** %10, align 8
  %12 = icmp eq %struct.PS_FontExtraRec_* %11, null
  %13 = getelementptr inbounds %struct.PS_FontExtraRec_, %struct.PS_FontExtraRec_* %11, i64 0, i32 0
  br i1 %12, label %14, label %81

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %16 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %15, align 8
  %17 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %16, i64 2, i32* nonnull %3) #11
  %18 = load i32, i32* %3, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %86

20:                                               ; preds = %14
  %21 = bitcast i8* %17 to i16*
  store i16 0, i16* %21, align 2
  %22 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 26, i32 0, i32 25
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 65535
  br i1 %24, label %78, label %25

25:                                               ; preds = %20
  %26 = icmp ugt i32 %23, 390
  br i1 %26, label %27, label %38

27:                                               ; preds = %25
  %28 = add i32 %23, -391
  %29 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 22
  %30 = load i32, i32* %29, align 8
  %31 = icmp ugt i32 %30, %28
  br i1 %31, label %32, label %78

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 23
  %34 = load i8**, i8*** %33, align 8
  %35 = zext i32 %28 to i64
  %36 = getelementptr inbounds i8*, i8** %34, i64 %35
  %37 = load i8*, i8** %36, align 8
  br label %46

38:                                               ; preds = %25
  %39 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 31
  %40 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %39, align 8
  %41 = icmp eq %struct.FT_Service_PsCMapsRec_* %40, null
  br i1 %41, label %78, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %40, i64 0, i32 5
  %44 = load i8* (i32)*, i8* (i32)** %43, align 8
  %45 = call i8* %44(i32 %23) #11
  br label %46

46:                                               ; preds = %32, %42
  %47 = phi i8* [ %45, %42 ], [ %37, %32 ]
  %48 = icmp eq i8* %47, null
  br i1 %48, label %78, label %49

49:                                               ; preds = %46
  %50 = call i8* @strstr(i8* nonnull %47, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0)) #12
  %51 = icmp eq i8* %50, null
  br i1 %51, label %78, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds i8, i8* %50, i64 7
  %54 = call i8* @strstr(i8* %53, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)) #12
  %55 = icmp eq i8* %54, null
  %56 = icmp eq i8* %53, %54
  %57 = or i1 %55, %56
  br i1 %57, label %78, label %58

58:                                               ; preds = %52, %75
  %59 = phi i8* [ %76, %75 ], [ %53, %52 ]
  %60 = load i8, i8* %59, align 1
  %61 = add i8 %60, -48
  %62 = icmp ult i8 %61, 10
  br i1 %62, label %63, label %73

63:                                               ; preds = %58
  %64 = load i16, i16* %21, align 2
  %65 = icmp ugt i16 %64, 6551
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  store i16 0, i16* %21, align 2
  br label %78

67:                                               ; preds = %63
  %68 = mul i16 %64, 10
  store i16 %68, i16* %21, align 2
  %69 = load i8, i8* %59, align 1
  %70 = sext i8 %69 to i16
  %71 = add i16 %68, -48
  %72 = add i16 %71, %70
  store i16 %72, i16* %21, align 2
  br label %75

73:                                               ; preds = %58
  switch i8 %60, label %74 [
    i8 32, label %75
    i8 10, label %75
    i8 13, label %75
  ]

74:                                               ; preds = %73
  store i16 0, i16* %21, align 2
  br label %78

75:                                               ; preds = %73, %73, %73, %67
  %76 = getelementptr inbounds i8, i8* %59, i64 1
  %77 = icmp eq i8* %76, %54
  br i1 %77, label %78, label %58

78:                                               ; preds = %75, %27, %38, %20, %46, %66, %74, %52, %49
  %79 = bitcast %struct.PS_FontExtraRec_** %10 to i8**
  store i8* %17, i8** %79, align 8
  %80 = load i32, i32* %3, align 4
  br label %81

81:                                               ; preds = %9, %78
  %82 = phi i32 [ 0, %9 ], [ %80, %78 ]
  %83 = phi i16* [ %13, %9 ], [ %21, %78 ]
  %84 = getelementptr inbounds %struct.PS_FontExtraRec_, %struct.PS_FontExtraRec_* %1, i64 0, i32 0
  %85 = load i16, i16* %83, align 2
  store i16 %85, i16* %84, align 2
  br label %86

86:                                               ; preds = %2, %14, %81
  %87 = phi i32 [ 0, %2 ], [ %18, %14 ], [ %82, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  ret i32 %87
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @cff_ps_has_glyph_names(%struct.FT_FaceRec_* nocapture readonly) #2 {
  %2 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = lshr i64 %3, 9
  %5 = trunc i64 %4 to i32
  %6 = and i32 %5, 1
  ret i32 %6
}

declare hidden i8* @ft_mem_qalloc(%struct.FT_MemoryRec_*, i64, i32*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare hidden i8* @ft_mem_alloc(%struct.FT_MemoryRec_*, i64, i32*) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal i8* @cff_get_ps_name(%struct.TT_FaceRec_*) #3 {
  %2 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 44, i32 0
  %3 = bitcast i8** %2 to %struct.CFF_FontRec_**
  %4 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %3, align 8
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 22
  %6 = bitcast i8** %5 to %struct.SFNT_Interface_**
  %7 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %6, align 8
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 8
  %12 = icmp ne i64 %11, 0
  %13 = icmp ne %struct.SFNT_Interface_* %7, null
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %29

15:                                               ; preds = %1
  %16 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 24
  %17 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %16, align 8
  %18 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %17, i64 0, i32 0, i32 1
  %19 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %18, align 8
  %20 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #11
  %21 = tail call i8* @ft_module_get_service(%struct.FT_ModuleRec_* %20, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i8 zeroext 0) #11
  %22 = icmp eq i8* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %15
  %24 = bitcast i8* %21 to i8* (%struct.FT_FaceRec_*)**
  %25 = load i8* (%struct.FT_FaceRec_*)*, i8* (%struct.FT_FaceRec_*)** %24, align 8
  %26 = icmp eq i8* (%struct.FT_FaceRec_*)* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = tail call i8* %25(%struct.FT_FaceRec_* %8) #11
  br label %32

29:                                               ; preds = %15, %23, %1
  %30 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %4, i64 0, i32 20
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %27, %29
  %33 = phi i8* [ %31, %29 ], [ %28, %27 ]
  ret i8* %33
}

declare hidden i8* @ft_module_get_service(%struct.FT_ModuleRec_*, i8*, i8 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_get_glyph_name(%struct.TT_FaceRec_*, i32, i8*, i32) #3 {
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 44, i32 0
  %6 = bitcast i8** %5 to %struct.CFF_FontRec_**
  %7 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %6, align 8
  %8 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 6
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 2
  br i1 %10, label %11, label %26

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %13 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 24
  %14 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %14, i64 0, i32 0, i32 1
  %16 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %15, align 8
  %17 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #11
  %18 = tail call i8* @ft_module_get_service(%struct.FT_ModuleRec_* %17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8 zeroext 0) #11
  %19 = icmp eq i8* %18, null
  br i1 %19, label %61, label %20

20:                                               ; preds = %11
  %21 = bitcast i8* %18 to i32 (%struct.FT_FaceRec_*, i32, i8*, i32)**
  %22 = load i32 (%struct.FT_FaceRec_*, i32, i8*, i32)*, i32 (%struct.FT_FaceRec_*, i32, i8*, i32)** %21, align 8
  %23 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i8*, i32)* %22, null
  br i1 %23, label %61, label %24

24:                                               ; preds = %20
  %25 = tail call i32 %22(%struct.FT_FaceRec_* %12, i32 %1, i8* %2, i32 %3) #11
  br label %61

26:                                               ; preds = %4
  %27 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 31
  %28 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %27, align 8
  %29 = icmp eq %struct.FT_Service_PsCMapsRec_* %28, null
  br i1 %29, label %61, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 15, i32 2
  %32 = load i16*, i16** %31, align 8
  %33 = zext i32 %1 to i64
  %34 = getelementptr inbounds i16, i16* %32, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = icmp eq i16 %35, -1
  br i1 %37, label %61, label %38

38:                                               ; preds = %30
  %39 = icmp ugt i16 %35, 390
  br i1 %39, label %40, label %51

40:                                               ; preds = %38
  %41 = add nsw i32 %36, -391
  %42 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 22
  %43 = load i32, i32* %42, align 8
  %44 = icmp ugt i32 %43, %41
  br i1 %44, label %45, label %61

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 23
  %47 = load i8**, i8*** %46, align 8
  %48 = zext i32 %41 to i64
  %49 = getelementptr inbounds i8*, i8** %47, i64 %48
  %50 = load i8*, i8** %49, align 8
  br label %55

51:                                               ; preds = %38
  %52 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %28, i64 0, i32 5
  %53 = load i8* (i32)*, i8* (i32)** %52, align 8
  %54 = tail call i8* %53(i32 %36) #11
  br label %55

55:                                               ; preds = %45, %51
  %56 = phi i8* [ %54, %51 ], [ %50, %45 ]
  %57 = icmp eq i8* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %55
  %59 = zext i32 %3 to i64
  %60 = tail call i32 @ft_mem_strcpyn(i8* %2, i8* nonnull %56, i64 %59) #11
  br label %61

61:                                               ; preds = %40, %30, %11, %20, %26, %55, %58, %24
  %62 = phi i32 [ %25, %24 ], [ 11, %26 ], [ 0, %55 ], [ 0, %58 ], [ 11, %20 ], [ 11, %11 ], [ 0, %30 ], [ 0, %40 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_get_name_index(%struct.TT_FaceRec_*, i8*) #3 {
  %3 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 44, i32 0
  %4 = bitcast i8** %3 to %struct.CFF_FontRec_**
  %5 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %4, align 8
  %6 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %5, i64 0, i32 6
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 2
  br i1 %8, label %9, label %25

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 24
  %12 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %11, align 8
  %13 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %12, i64 0, i32 0, i32 1
  %14 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %13, align 8
  %15 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #11
  %16 = tail call i8* @ft_module_get_service(%struct.FT_ModuleRec_* %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8 zeroext 0) #11
  %17 = icmp eq i8* %16, null
  br i1 %17, label %73, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds i8, i8* %16, i64 8
  %20 = bitcast i8* %19 to i32 (%struct.FT_FaceRec_*, i8*)**
  %21 = load i32 (%struct.FT_FaceRec_*, i8*)*, i32 (%struct.FT_FaceRec_*, i8*)** %20, align 8
  %22 = icmp eq i32 (%struct.FT_FaceRec_*, i8*)* %21, null
  br i1 %22, label %73, label %23

23:                                               ; preds = %18
  %24 = tail call i32 %21(%struct.FT_FaceRec_* %10, i8* %1) #11
  br label %73

25:                                               ; preds = %2
  %26 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 24
  %27 = bitcast %struct.FT_DriverRec_** %26 to %struct.FT_ModuleRec_**
  %28 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %27, align 8
  %29 = tail call i8* @ft_module_get_service(%struct.FT_ModuleRec_* %28, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i8 zeroext 1) #11
  %30 = icmp eq i8* %29, null
  br i1 %30, label %73, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %5, i64 0, i32 5
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %5, i64 0, i32 15, i32 2
  %37 = getelementptr inbounds i8, i8* %29, i64 40
  %38 = bitcast i8* %37 to i8* (i32)**
  %39 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %5, i64 0, i32 22
  %40 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %5, i64 0, i32 23
  br label %41

41:                                               ; preds = %35, %66
  %42 = phi i64 [ 0, %35 ], [ %67, %66 ]
  %43 = load i16*, i16** %36, align 8
  %44 = getelementptr inbounds i16, i16* %43, i64 %42
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = icmp ugt i16 %45, 390
  br i1 %47, label %48, label %57

48:                                               ; preds = %41
  %49 = add nsw i32 %46, -391
  %50 = load i32, i32* %39, align 8
  %51 = icmp ugt i32 %50, %49
  br i1 %51, label %52, label %66

52:                                               ; preds = %48
  %53 = load i8**, i8*** %40, align 8
  %54 = zext i32 %49 to i64
  %55 = getelementptr inbounds i8*, i8** %53, i64 %54
  %56 = load i8*, i8** %55, align 8
  br label %60

57:                                               ; preds = %41
  %58 = load i8* (i32)*, i8* (i32)** %38, align 8
  %59 = tail call i8* %58(i32 %46) #11
  br label %60

60:                                               ; preds = %52, %57
  %61 = phi i8* [ %59, %57 ], [ %56, %52 ]
  %62 = icmp eq i8* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %60
  %64 = tail call i32 @strcmp(i8* %1, i8* nonnull %61) #12
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %48, %63, %60
  %67 = add nuw nsw i64 %42, 1
  %68 = load i32, i32* %32, align 4
  %69 = zext i32 %68 to i64
  %70 = icmp ult i64 %67, %69
  br i1 %70, label %41, label %73

71:                                               ; preds = %63
  %72 = trunc i64 %42 to i32
  br label %73

73:                                               ; preds = %66, %71, %31, %25, %23, %18, %9
  %74 = phi i32 [ %24, %23 ], [ 0, %18 ], [ 0, %9 ], [ 0, %25 ], [ 0, %31 ], [ %72, %71 ], [ 0, %66 ]
  ret i32 %74
}

declare hidden i32 @ft_mem_strcpyn(i8*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_get_cmap_info(%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*) #3 {
  %3 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %0, i64 1
  %4 = bitcast %struct.FT_CharMapRec_* %3 to %struct.FT_CMap_ClassRec_**
  %5 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %4, align 8
  %6 = icmp eq %struct.FT_CMap_ClassRec_* %5, bitcast ({ i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }* @cff_cmap_encoding_class_rec to %struct.FT_CMap_ClassRec_*)
  %7 = icmp eq %struct.FT_CMap_ClassRec_* %5, bitcast ({ i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }* @cff_cmap_unicode_class_rec to %struct.FT_CMap_ClassRec_*)
  %8 = or i1 %6, %7
  br i1 %8, label %25, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %0, i64 0, i32 0
  %11 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %10, align 8
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %11, i64 0, i32 24
  %13 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %12, align 8
  %14 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %13, i64 0, i32 0, i32 1
  %15 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %14, align 8
  %16 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #11
  %17 = tail call i8* @ft_module_get_service(%struct.FT_ModuleRec_* %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i8 zeroext 0) #11
  %18 = icmp eq i8* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %9
  %20 = bitcast i8* %17 to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)**
  %21 = load i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)** %20, align 8
  %22 = icmp eq i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = tail call i32 %21(%struct.FT_CharMapRec_* %0, %struct.TT_CMapInfo_* %1) #11
  br label %25

25:                                               ; preds = %2, %23, %9, %19
  %26 = phi i32 [ %24, %23 ], [ 0, %19 ], [ 0, %9 ], [ 150, %2 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_get_ros(%struct.TT_FaceRec_* nocapture readonly, i8**, i8**, i32*) #3 {
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 44, i32 0
  %6 = bitcast i8** %5 to %struct.CFF_FontRec_**
  %7 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %6, align 8
  %8 = icmp eq %struct.CFF_FontRec_* %7, null
  br i1 %8, label %89, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 26, i32 0, i32 26
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 65535
  br i1 %12, label %89, label %13

13:                                               ; preds = %9
  %14 = icmp eq i8** %1, null
  br i1 %14, label %46, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 34
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %42

19:                                               ; preds = %15
  %20 = icmp ugt i32 %11, 390
  br i1 %20, label %21, label %32

21:                                               ; preds = %19
  %22 = add i32 %11, -391
  %23 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 22
  %24 = load i32, i32* %23, align 8
  %25 = icmp ugt i32 %24, %22
  br i1 %25, label %26, label %40

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 23
  %28 = load i8**, i8*** %27, align 8
  %29 = zext i32 %22 to i64
  %30 = getelementptr inbounds i8*, i8** %28, i64 %29
  %31 = load i8*, i8** %30, align 8
  br label %40

32:                                               ; preds = %19
  %33 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 31
  %34 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %33, align 8
  %35 = icmp eq %struct.FT_Service_PsCMapsRec_* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %34, i64 0, i32 5
  %38 = load i8* (i32)*, i8* (i32)** %37, align 8
  %39 = tail call i8* %38(i32 %11) #11
  br label %40

40:                                               ; preds = %21, %26, %32, %36
  %41 = phi i8* [ %39, %36 ], [ null, %32 ], [ %31, %26 ], [ null, %21 ]
  store i8* %41, i8** %16, align 8
  br label %42

42:                                               ; preds = %15, %40
  %43 = phi i8* [ %17, %15 ], [ %41, %40 ]
  %44 = ptrtoint i8* %43 to i64
  %45 = bitcast i8** %1 to i64*
  store i64 %44, i64* %45, align 8
  br label %46

46:                                               ; preds = %13, %42
  %47 = icmp eq i8** %2, null
  br i1 %47, label %83, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 35
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %52, label %79

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 26, i32 0, i32 27
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 65535
  br i1 %55, label %77, label %56

56:                                               ; preds = %52
  %57 = icmp ugt i32 %54, 390
  br i1 %57, label %58, label %69

58:                                               ; preds = %56
  %59 = add i32 %54, -391
  %60 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 22
  %61 = load i32, i32* %60, align 8
  %62 = icmp ugt i32 %61, %59
  br i1 %62, label %63, label %77

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 23
  %65 = load i8**, i8*** %64, align 8
  %66 = zext i32 %59 to i64
  %67 = getelementptr inbounds i8*, i8** %65, i64 %66
  %68 = load i8*, i8** %67, align 8
  br label %77

69:                                               ; preds = %56
  %70 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 31
  %71 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %70, align 8
  %72 = icmp eq %struct.FT_Service_PsCMapsRec_* %71, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %71, i64 0, i32 5
  %75 = load i8* (i32)*, i8* (i32)** %74, align 8
  %76 = tail call i8* %75(i32 %54) #11
  br label %77

77:                                               ; preds = %52, %58, %63, %69, %73
  %78 = phi i8* [ %76, %73 ], [ null, %52 ], [ null, %69 ], [ %68, %63 ], [ null, %58 ]
  store i8* %78, i8** %49, align 8
  br label %79

79:                                               ; preds = %48, %77
  %80 = phi i8* [ %50, %48 ], [ %78, %77 ]
  %81 = ptrtoint i8* %80 to i64
  %82 = bitcast i8** %2 to i64*
  store i64 %81, i64* %82, align 8
  br label %83

83:                                               ; preds = %46, %79
  %84 = icmp eq i32* %3, null
  br i1 %84, label %89, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %7, i64 0, i32 26, i32 0, i32 28
  %87 = load i64, i64* %86, align 8
  %88 = trunc i64 %87 to i32
  store i32 %88, i32* %3, align 4
  br label %89

89:                                               ; preds = %4, %85, %83, %9
  %90 = phi i32 [ 0, %4 ], [ 6, %9 ], [ 0, %83 ], [ 0, %85 ]
  ret i32 %90
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @cff_get_is_cid(%struct.TT_FaceRec_* nocapture readonly, i8* nocapture) #0 {
  %3 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 44, i32 0
  %4 = bitcast i8** %3 to %struct.CFF_FontRec_**
  %5 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %4, align 8
  store i8 0, i8* %1, align 1
  %6 = icmp eq %struct.CFF_FontRec_* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %5, i64 0, i32 26, i32 0, i32 26
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 65535
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  store i8 1, i8* %1, align 1
  br label %12

12:                                               ; preds = %11, %7, %2
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @cff_get_cid_from_glyph_index(%struct.TT_FaceRec_* nocapture readonly, i32, i32*) #0 {
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 44, i32 0
  %5 = bitcast i8** %4 to %struct.CFF_FontRec_**
  %6 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %5, align 8
  %7 = icmp eq %struct.CFF_FontRec_* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 26, i32 0, i32 26
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 65535
  br i1 %11, label %25, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 5
  %14 = load i32, i32* %13, align 4
  %15 = icmp ugt i32 %14, %1
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = icmp eq i32* %2, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 15, i32 2
  %20 = load i16*, i16** %19, align 8
  %21 = zext i32 %1 to i64
  %22 = getelementptr inbounds i16, i16* %20, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  store i32 %24, i32* %2, align 4
  br label %25

25:                                               ; preds = %3, %18, %16, %12, %8
  %26 = phi i32 [ 0, %3 ], [ 6, %8 ], [ 6, %12 ], [ 0, %16 ], [ 0, %18 ]
  ret i32 %26
}

declare i32 @ps_property_set(%struct.FT_ModuleRec_*, i8*, i8*, i8 zeroext) #6

declare i32 @ps_property_get(%struct.FT_ModuleRec_*, i8*, i8*) #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i16 @cff_get_standard_encoding(i32) #4 {
  %2 = icmp ult i32 %0, 256
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = zext i32 %0 to i64
  %5 = getelementptr inbounds [256 x i16], [256 x i16]* @cff_standard_encoding, i64 0, i64 %4
  %6 = load i16, i16* %5, align 2
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i16 [ %6, %3 ], [ 0, %1 ]
  ret i16 %8
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_load_private_dict(%struct.CFF_FontRec_*, %struct.CFF_SubFontRec_*, i32, i64*) #3 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.CFF_ParserRec_, align 8
  %7 = bitcast %struct.CFF_ParserRec_* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 72, i1 false)
  %8 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %0, i64 0, i32 1
  %9 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %8, align 8
  %10 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 2, i32 2
  store %struct.CFF_FontRec_* %0, %struct.CFF_FontRec_** %10, align 8
  %11 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 0, i32 22
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %120, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 0, i32 23
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %120, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 1, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 720, i1 false)
  %21 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 1, i32 9
  %22 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 1, i32 10
  store i64 1, i64* %22, align 8
  %23 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 1, i32 19
  store i32 -1, i32* %23, align 8
  %24 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 1, i32 21
  store i64 3932, i64* %24, align 8
  %25 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 1, i32 8
  %26 = bitcast i64* %25 to <2 x i64>*
  store <2 x i64> <i64 2596864, i64 7>, <2 x i64>* %26, align 8
  %27 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 1, i32 27
  store %struct.CFF_SubFontRec_* %1, %struct.CFF_SubFontRec_** %27, align 8
  %28 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 3
  store i32 %2, i32* %28, align 8
  %29 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 4
  store i64* %3, i64** %29, align 8
  %30 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %0, i64 0, i32 10
  %31 = load i8, i8* %30, align 8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %19
  %34 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %0, i64 0, i32 26, i32 0, i32 40
  %35 = load i32, i32* %34, align 8
  %36 = add i32 %35, 1
  br label %37

37:                                               ; preds = %19, %33
  %38 = phi i32 [ %36, %33 ], [ 97, %19 ]
  %39 = select i1 %32, i32 8192, i32 20480
  %40 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %0, i64 0, i32 0
  %41 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %40, align 8
  %42 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 0, i32 37
  %43 = load i16, i16* %42, align 4
  %44 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 0, i32 38
  %45 = load i16, i16* %44, align 2
  %46 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %41, i64 0, i32 0
  %47 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %46, align 8
  %48 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #11
  store i32 -1431655766, i32* %5, align 4
  %49 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %6, i64 0, i32 1
  %50 = bitcast i8** %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 64, i1 false) #11
  %51 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %6, i64 0, i32 7
  store i32 %39, i32* %51, align 4
  %52 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %6, i64 0, i32 8
  store i8* %20, i8** %52, align 8
  %53 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %6, i64 0, i32 0
  store %struct.FT_LibraryRec_* %41, %struct.FT_LibraryRec_** %53, align 8
  %54 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %6, i64 0, i32 9
  store i16 %43, i16* %54, align 8
  %55 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %6, i64 0, i32 10
  store i16 %45, i16* %55, align 2
  %56 = zext i32 %38 to i64
  %57 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %47, i64 8, i64 0, i64 %56, i8* null, i32* nonnull %5) #11
  %58 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %6, i64 0, i32 4
  %59 = bitcast i8*** %58 to i8**
  store i8* %57, i8** %59, align 8
  %60 = load i32, i32* %5, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %67

62:                                               ; preds = %37
  %63 = ptrtoint i8* %57 to i64
  %64 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %6, i64 0, i32 6
  store i32 %38, i32* %64, align 8
  %65 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %6, i64 0, i32 5
  %66 = bitcast i8*** %65 to i64*
  store i64 %63, i64* %66, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #11
  br label %70

67:                                               ; preds = %37
  call void @ft_mem_free(%struct.FT_MemoryRec_* %47, i8* %57) #11
  store i8** null, i8*** %58, align 8
  %68 = load i32, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #11
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %108

70:                                               ; preds = %62, %67
  %71 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %0, i64 0, i32 3
  %72 = load i64, i64* %71, align 8
  %73 = load i64, i64* %12, align 8
  %74 = add i64 %73, %72
  %75 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %9, i64 %74) #11
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %108

77:                                               ; preds = %70
  %78 = load i64, i64* %16, align 8
  %79 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %9, i64 %78) #11
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %108

81:                                               ; preds = %77
  %82 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %9, i64 0, i32 8
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %9, i64 0, i32 9
  %85 = load i8*, i8** %84, align 8
  %86 = call fastcc i32 @cff_parser_run(%struct.CFF_ParserRec_* nonnull %6, i8* %83, i8* %85)
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %9) #11
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %108

88:                                               ; preds = %81
  %89 = load i8, i8* %20, align 8
  %90 = and i8 %89, -2
  store i8 %90, i8* %20, align 8
  %91 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 1, i32 22
  %92 = load i64, i64* %91, align 8
  %93 = icmp slt i64 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %88
  %95 = sub nsw i64 0, %92
  br label %98

96:                                               ; preds = %88
  %97 = icmp eq i64 %92, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %96, %94
  %99 = phi i64 [ %95, %94 ], [ 987654321, %96 ]
  store i64 %99, i64* %91, align 8
  br label %100

100:                                              ; preds = %98, %96
  %101 = load i64, i64* %21, align 8
  %102 = icmp ugt i64 %101, 1000
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  store i64 7, i64* %21, align 8
  br label %104

104:                                              ; preds = %100, %103
  %105 = load i64, i64* %22, align 8
  %106 = icmp ugt i64 %105, 1000
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  store i64 1, i64* %22, align 8
  br label %108

108:                                              ; preds = %104, %81, %77, %70, %67, %107
  %109 = phi i32 [ 0, %67 ], [ %75, %70 ], [ %79, %77 ], [ %86, %81 ], [ 0, %107 ], [ 0, %104 ]
  %110 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 5
  %111 = bitcast i8** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 6
  %114 = bitcast i8** %113 to i64*
  store i64 %112, i64* %114, align 8
  %115 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %1, i64 0, i32 7
  store i32 0, i32* %115, align 8
  %116 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %53, align 8
  %117 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %116, i64 0, i32 0
  %118 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %117, align 8
  %119 = load i8*, i8** %59, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %118, i8* %119) #11
  store i8** null, i8*** %58, align 8
  br label %120

120:                                              ; preds = %15, %4, %108
  %121 = phi i32 [ %109, %108 ], [ 0, %15 ], [ 0, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #11
  ret i32 %121
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal zeroext i8 @cff_fd_select_get(%struct.CFF_FDSelectRec_* nocapture, i32) #0 {
  %3 = getelementptr inbounds %struct.CFF_FDSelectRec_, %struct.CFF_FDSelectRec_* %0, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %57, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.CFF_FDSelectRec_, %struct.CFF_FDSelectRec_* %0, i64 0, i32 0
  %8 = load i8, i8* %7, align 8
  switch i8 %8, label %57 [
    i8 0, label %9
    i8 3, label %13
  ]

9:                                                ; preds = %6
  %10 = zext i32 %1 to i64
  %11 = getelementptr inbounds i8, i8* %4, i64 %10
  %12 = load i8, i8* %11, align 1
  br label %57

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.CFF_FDSelectRec_, %struct.CFF_FDSelectRec_* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 4
  %16 = sub i32 %1, %15
  %17 = getelementptr inbounds %struct.CFF_FDSelectRec_, %struct.CFF_FDSelectRec_* %0, i64 0, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = icmp ult i32 %16, %18
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.CFF_FDSelectRec_, %struct.CFF_FDSelectRec_* %0, i64 0, i32 6
  %22 = load i8, i8* %21, align 4
  br label %57

23:                                               ; preds = %13
  %24 = getelementptr inbounds %struct.CFF_FDSelectRec_, %struct.CFF_FDSelectRec_* %0, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %4, i64 %26
  %28 = getelementptr inbounds i8, i8* %4, i64 2
  %29 = load i8, i8* %4, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 8
  %32 = getelementptr inbounds i8, i8* %4, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = or i32 %31, %34
  br label %36

36:                                               ; preds = %55, %23
  %37 = phi i8* [ %28, %23 ], [ %41, %55 ]
  %38 = phi i32 [ %35, %23 ], [ %49, %55 ]
  %39 = icmp ugt i32 %38, %1
  br i1 %39, label %57, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds i8, i8* %37, i64 3
  %42 = getelementptr inbounds i8, i8* %37, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = shl nuw nsw i32 %44, 8
  %46 = getelementptr inbounds i8, i8* %37, i64 2
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = or i32 %45, %48
  %50 = icmp ugt i32 %49, %1
  br i1 %50, label %51, label %55

51:                                               ; preds = %40
  %52 = load i8, i8* %37, align 1
  store i32 %38, i32* %14, align 4
  %53 = sub nsw i32 %49, %38
  store i32 %53, i32* %17, align 8
  %54 = getelementptr inbounds %struct.CFF_FDSelectRec_, %struct.CFF_FDSelectRec_* %0, i64 0, i32 6
  store i8 %52, i8* %54, align 4
  br label %57

55:                                               ; preds = %40
  %56 = icmp ult i8* %41, %27
  br i1 %56, label %36, label %57

57:                                               ; preds = %55, %36, %51, %2, %9, %20, %6
  %58 = phi i8 [ 0, %6 ], [ %22, %20 ], [ %12, %9 ], [ 0, %2 ], [ %52, %51 ], [ 0, %36 ], [ 0, %55 ]
  ret i8 %58
}

; Function Attrs: nounwind readonly ssp uwtable
define internal zeroext i8 @cff_blend_check_vector(%struct.CFF_BlendRec_* nocapture readonly, i32, i32, i64* nocapture readonly) #8 {
  %5 = getelementptr inbounds %struct.CFF_BlendRec_, %struct.CFF_BlendRec_* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %28, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.CFF_BlendRec_, %struct.CFF_BlendRec_* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %12, label %28

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.CFF_BlendRec_, %struct.CFF_BlendRec_* %0, i64 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, %2
  br i1 %15, label %16, label %28

16:                                               ; preds = %12
  %17 = icmp eq i32 %2, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %16
  %19 = bitcast i64* %3 to i8*
  %20 = getelementptr inbounds %struct.CFF_BlendRec_, %struct.CFF_BlendRec_* %0, i64 0, i32 5
  %21 = bitcast i64** %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = zext i32 %2 to i64
  %24 = shl nuw nsw i64 %23, 3
  %25 = tail call i32 @bcmp(i8* %19, i8* %22, i64 %24)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %18, %16
  br label %28

28:                                               ; preds = %4, %8, %12, %18, %27
  %29 = phi i8 [ 0, %27 ], [ 1, %18 ], [ 1, %12 ], [ 1, %8 ], [ 1, %4 ]
  ret i8 %29
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_blend_build_vector(%struct.CFF_BlendRec_* nocapture, i32, i32, i64* readonly) #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #11
  store i32 0, i32* %5, align 4
  %7 = getelementptr inbounds %struct.CFF_BlendRec_, %struct.CFF_BlendRec_* %0, i64 0, i32 2
  %8 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %7, align 8
  %9 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %8, i64 0, i32 2
  %10 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %9, align 8
  %11 = icmp eq i32 %2, 0
  %12 = icmp ne i64* %3, null
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %4
  store i32 3, i32* %5, align 4
  br label %149

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.CFF_BlendRec_, %struct.CFF_BlendRec_* %0, i64 0, i32 0
  store i8 0, i8* %16, align 8
  %17 = icmp ne i32 %2, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %8, i64 0, i32 37, i32 2
  %20 = load i16, i16* %19, align 8
  %21 = zext i16 %20 to i32
  %22 = icmp eq i32 %21, %2
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  store i32 3, i32* %5, align 4
  br label %149

24:                                               ; preds = %18, %15
  %25 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %8, i64 0, i32 37, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp ugt i32 %26, %1
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  store i32 3, i32* %5, align 4
  br label %149

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %8, i64 0, i32 37, i32 1
  %31 = load %struct.CFF_VarData_*, %struct.CFF_VarData_** %30, align 8
  %32 = zext i32 %1 to i64
  %33 = getelementptr inbounds %struct.CFF_VarData_, %struct.CFF_VarData_* %31, i64 %32, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = add i32 %34, 1
  %36 = getelementptr inbounds %struct.CFF_BlendRec_, %struct.CFF_BlendRec_* %0, i64 0, i32 6
  %37 = load i32, i32* %36, align 8
  %38 = zext i32 %37 to i64
  %39 = zext i32 %35 to i64
  %40 = getelementptr inbounds %struct.CFF_BlendRec_, %struct.CFF_BlendRec_* %0, i64 0, i32 7
  %41 = bitcast i32** %40 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %10, i64 4, i64 %38, i64 %39, i8* %42, i32* nonnull %5) #11
  store i8* %43, i8** %41, align 8
  %44 = load i32, i32* %5, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %149

46:                                               ; preds = %29
  store i32 %35, i32* %36, align 8
  %47 = icmp eq i32 %35, 0
  br i1 %47, label %130, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.CFF_VarData_, %struct.CFF_VarData_* %31, i64 %32, i32 1
  %50 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %8, i64 0, i32 37, i32 4
  %51 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %8, i64 0, i32 37, i32 3
  %52 = zext i32 %2 to i64
  br label %53

53:                                               ; preds = %127, %48
  %54 = phi i64 [ 0, %48 ], [ %128, %127 ]
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = load i32*, i32** %40, align 8
  store i32 65536, i32* %57, align 4
  br label %127

58:                                               ; preds = %53
  %59 = load i32*, i32** %49, align 8
  %60 = add nuw i64 %54, 4294967295
  %61 = and i64 %60, 4294967295
  %62 = getelementptr inbounds i32, i32* %59, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = load %struct.CFF_VarRegion_*, %struct.CFF_VarRegion_** %50, align 8
  %65 = zext i32 %63 to i64
  %66 = load i32, i32* %51, align 4
  %67 = icmp ult i32 %63, %66
  br i1 %67, label %68, label %126

68:                                               ; preds = %58
  %69 = load i32*, i32** %40, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %54
  br i1 %17, label %72, label %71

71:                                               ; preds = %68
  store i32 0, i32* %70, align 4
  br label %127

72:                                               ; preds = %68
  store i32 65536, i32* %70, align 4
  %73 = getelementptr inbounds %struct.CFF_VarRegion_, %struct.CFF_VarRegion_* %64, i64 %65, i32 0
  br label %74

74:                                               ; preds = %110, %72
  %75 = phi i64 [ 0, %72 ], [ %124, %110 ]
  %76 = load %struct.CFF_AxisCoords_*, %struct.CFF_AxisCoords_** %73, align 8
  %77 = getelementptr inbounds %struct.CFF_AxisCoords_, %struct.CFF_AxisCoords_* %76, i64 %75, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %struct.CFF_AxisCoords_, %struct.CFF_AxisCoords_* %76, i64 %75, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = icmp slt i64 %80, %78
  br i1 %81, label %110, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %struct.CFF_AxisCoords_, %struct.CFF_AxisCoords_* %76, i64 %75, i32 2
  %84 = load i64, i64* %83, align 8
  %85 = icmp slt i64 %84, %80
  br i1 %85, label %110, label %86

86:                                               ; preds = %82
  %87 = icmp slt i64 %78, 0
  %88 = icmp sgt i64 %84, 0
  %89 = icmp eq i64 %80, 0
  %90 = and i1 %87, %88
  %91 = or i1 %89, %90
  br i1 %91, label %110, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds i64, i64* %3, i64 %75
  %94 = load i64, i64* %93, align 8
  %95 = icmp slt i64 %94, %78
  %96 = icmp slt i64 %84, %94
  %97 = or i1 %95, %96
  br i1 %97, label %110, label %98

98:                                               ; preds = %92
  %99 = icmp eq i64 %94, %80
  br i1 %99, label %110, label %100

100:                                              ; preds = %98
  %101 = icmp slt i64 %94, %80
  br i1 %101, label %102, label %106

102:                                              ; preds = %100
  %103 = sub nsw i64 %94, %78
  %104 = sub nsw i64 %80, %78
  %105 = call i64 @FT_DivFix(i64 %103, i64 %104) #11
  br label %110

106:                                              ; preds = %100
  %107 = sub nsw i64 %84, %94
  %108 = sub nsw i64 %84, %80
  %109 = call i64 @FT_DivFix(i64 %107, i64 %108) #11
  br label %110

110:                                              ; preds = %86, %98, %92, %74, %82, %102, %106
  %111 = phi i64 [ %105, %102 ], [ %109, %106 ], [ 65536, %82 ], [ 65536, %74 ], [ 65536, %86 ], [ 0, %92 ], [ 65536, %98 ]
  %112 = load i32*, i32** %40, align 8
  %113 = getelementptr inbounds i32, i32* %112, i64 %54
  %114 = load i32, i32* %113, align 4
  %115 = sext i32 %114 to i64
  %116 = shl i64 %111, 32
  %117 = ashr exact i64 %116, 32
  %118 = mul nsw i64 %117, %115
  %119 = ashr i64 %118, 63
  %120 = add nsw i64 %118, 32768
  %121 = add nsw i64 %120, %119
  %122 = lshr i64 %121, 16
  %123 = trunc i64 %122 to i32
  store i32 %123, i32* %113, align 4
  %124 = add nuw nsw i64 %75, 1
  %125 = icmp eq i64 %124, %52
  br i1 %125, label %127, label %74

126:                                              ; preds = %58
  store i32 3, i32* %5, align 4
  br label %149

127:                                              ; preds = %110, %56, %71
  %128 = add nuw nsw i64 %54, 1
  %129 = icmp eq i64 %128, %39
  br i1 %129, label %130, label %53

130:                                              ; preds = %127, %46
  %131 = getelementptr inbounds %struct.CFF_BlendRec_, %struct.CFF_BlendRec_* %0, i64 0, i32 3
  store i32 %1, i32* %131, align 8
  br i1 %17, label %132, label %146

132:                                              ; preds = %130
  %133 = getelementptr inbounds %struct.CFF_BlendRec_, %struct.CFF_BlendRec_* %0, i64 0, i32 4
  %134 = load i32, i32* %133, align 4
  %135 = zext i32 %134 to i64
  %136 = zext i32 %2 to i64
  %137 = getelementptr inbounds %struct.CFF_BlendRec_, %struct.CFF_BlendRec_* %0, i64 0, i32 5
  %138 = bitcast i64** %137 to i8**
  %139 = load i8*, i8** %138, align 8
  %140 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %10, i64 8, i64 %135, i64 %136, i8* %139, i32* nonnull %5) #11
  store i8* %140, i8** %138, align 8
  %141 = load i32, i32* %5, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %149

143:                                              ; preds = %132
  %144 = bitcast i64* %3 to i8*
  %145 = shl nuw nsw i64 %136, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 8 %144, i64 %145, i1 false)
  br label %146

146:                                              ; preds = %143, %130
  %147 = getelementptr inbounds %struct.CFF_BlendRec_, %struct.CFF_BlendRec_* %0, i64 0, i32 4
  store i32 %2, i32* %147, align 4
  store i8 1, i8* %16, align 8
  %148 = load i32, i32* %5, align 4
  br label %149

149:                                              ; preds = %14, %23, %28, %146, %29, %132, %126
  %150 = phi i32 [ 3, %14 ], [ 3, %23 ], [ 3, %28 ], [ %148, %146 ], [ %44, %29 ], [ %141, %132 ], [ 3, %126 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #11
  ret i32 %150
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare hidden i32 @FT_Stream_Seek(%struct.FT_StreamRec_*, i64) local_unnamed_addr #6

declare hidden i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @cff_parser_run(%struct.CFF_ParserRec_*, i8*, i8*) unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 4
  %5 = bitcast i8*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 5
  %8 = bitcast i8*** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 1
  store i8* %1, i8** %9, align 8
  %10 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  store i8* %2, i8** %10, align 8
  %11 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 3
  store i8* %1, i8** %11, align 8
  %12 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 6
  %13 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 7
  %14 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 8
  br label %15

15:                                               ; preds = %502, %3
  %16 = phi i8* [ %1, %3 ], [ %503, %502 ]
  %17 = phi i32 [ 0, %3 ], [ %504, %502 ]
  %18 = icmp ult i8* %16, %2
  br i1 %18, label %19, label %509

19:                                               ; preds = %15
  %20 = load i8, i8* %16, align 1
  %21 = zext i8 %20 to i32
  %22 = icmp ugt i8 %20, 26
  br i1 %22, label %23, label %55

23:                                               ; preds = %19
  switch i8 %20, label %24 [
    i8 -1, label %55
    i8 31, label %55
  ]

24:                                               ; preds = %23
  %25 = load i8**, i8*** %7, align 8
  %26 = load i64, i64* %5, align 8
  %27 = ptrtoint i8** %25 to i64
  %28 = sub i64 %27, %26
  %29 = lshr exact i64 %28, 3
  %30 = trunc i64 %29 to i32
  %31 = load i32, i32* %12, align 8
  %32 = icmp ugt i32 %31, %30
  br i1 %32, label %33, label %502

33:                                               ; preds = %24
  %34 = getelementptr inbounds i8*, i8** %25, i64 1
  store i8** %34, i8*** %7, align 8
  store i8* %16, i8** %25, align 8
  switch i8 %20, label %51 [
    i8 30, label %35
    i8 28, label %47
    i8 29, label %49
  ]

35:                                               ; preds = %33, %39
  %36 = phi i8* [ %37, %39 ], [ %16, %33 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 1
  %38 = icmp ult i8* %37, %2
  br i1 %38, label %39, label %502

39:                                               ; preds = %35
  %40 = load i8, i8* %37, align 1
  %41 = zext i8 %40 to i32
  %42 = and i32 %41, 240
  %43 = icmp eq i32 %42, 240
  %44 = and i32 %41, 15
  %45 = icmp eq i32 %44, 15
  %46 = or i1 %43, %45
  br i1 %46, label %498, label %35

47:                                               ; preds = %33
  %48 = getelementptr inbounds i8, i8* %16, i64 2
  br label %498

49:                                               ; preds = %33
  %50 = getelementptr inbounds i8, i8* %16, i64 4
  br label %498

51:                                               ; preds = %33
  %52 = icmp ugt i8 %20, -10
  %53 = getelementptr inbounds i8, i8* %16, i64 1
  %54 = select i1 %52, i8* %53, i8* %16
  br label %498

55:                                               ; preds = %23, %23, %19
  %56 = load i8**, i8*** %7, align 8
  %57 = load i64, i64* %5, align 8
  %58 = ptrtoint i8** %56 to i64
  %59 = sub i64 %58, %57
  %60 = lshr exact i64 %59, 3
  %61 = trunc i64 %60 to i32
  %62 = load i32, i32* %12, align 8
  %63 = icmp ugt i32 %62, %61
  br i1 %63, label %64, label %502

64:                                               ; preds = %55
  store i8* %16, i8** %56, align 8
  %65 = icmp eq i8 %20, 12
  br i1 %65, label %66, label %73

66:                                               ; preds = %64
  %67 = getelementptr inbounds i8, i8* %16, i64 1
  %68 = icmp ult i8* %67, %2
  br i1 %68, label %69, label %502

69:                                               ; preds = %66
  %70 = load i8, i8* %67, align 1
  %71 = zext i8 %70 to i32
  %72 = or i32 %71, 256
  br label %73

73:                                               ; preds = %69, %64
  %74 = phi i8* [ %67, %69 ], [ %16, %64 ]
  %75 = phi i32 [ %72, %69 ], [ %21, %64 ]
  %76 = load i32, i32* %13, align 4
  %77 = or i32 %76, %75
  %78 = icmp eq i32 %77, 4096
  br i1 %78, label %83, label %486

79:                                               ; preds = %486
  %80 = getelementptr inbounds i32, i32* %487, i64 9
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, %77
  br i1 %82, label %83, label %486

83:                                               ; preds = %79, %73
  %84 = phi i32 [ 4, %73 ], [ %489, %79 ]
  %85 = phi i32* [ getelementptr inbounds ([77 x %struct.CFF_Field_Handler_], [77 x %struct.CFF_Field_Handler_]* @cff_field_handlers, i64 0, i64 0, i32 0), %73 ], [ %488, %79 ]
  %86 = load i8*, i8** %14, align 8
  %87 = getelementptr inbounds i32, i32* %85, i64 2
  %88 = load i32, i32* %87, align 8
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %86, i64 %89
  %91 = icmp ne i32 %84, 6
  %92 = icmp eq i32 %61, 0
  %93 = and i1 %92, %91
  br i1 %93, label %502, label %94

94:                                               ; preds = %83
  switch i32 %84, label %480 [
    i32 5, label %95
    i32 4, label %95
    i32 1, label %95
    i32 2, label %182
    i32 3, label %262
    i32 6, label %354
  ]

95:                                               ; preds = %94, %94, %94
  %96 = load i8**, i8*** %4, align 8
  %97 = load i8*, i8** %96, align 8
  %98 = load i8, i8* %97, align 1
  switch i8 %98, label %120 [
    i8 30, label %99
    i8 -1, label %102
  ]

99:                                               ; preds = %95
  %100 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %97, i64 0, i64* null) #11
  %101 = ashr i64 %100, 16
  br label %339

102:                                              ; preds = %95
  %103 = getelementptr inbounds i8, i8* %97, i64 1
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = shl nuw nsw i64 %105, 16
  %107 = getelementptr inbounds i8, i8* %97, i64 2
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i64
  %110 = shl nuw nsw i64 %109, 8
  %111 = or i64 %110, %106
  %112 = getelementptr inbounds i8, i8* %97, i64 3
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i64
  %115 = or i64 %111, %114
  %116 = add nuw nsw i64 %115, 128
  %117 = lshr i64 %116, 8
  %118 = shl i64 %117, 48
  %119 = ashr exact i64 %118, 48
  br label %339

120:                                              ; preds = %95
  %121 = getelementptr inbounds i8, i8* %97, i64 1
  %122 = zext i8 %98 to i32
  switch i8 %98, label %156 [
    i8 28, label %123
    i8 29, label %135
  ]

123:                                              ; preds = %120
  %124 = getelementptr inbounds i8, i8* %97, i64 2
  %125 = load i8*, i8** %10, align 8
  %126 = icmp ugt i8* %125, %124
  br i1 %126, label %127, label %339

127:                                              ; preds = %123
  %128 = load i8, i8* %121, align 1
  %129 = zext i8 %128 to i16
  %130 = shl nuw i16 %129, 8
  %131 = load i8, i8* %124, align 1
  %132 = zext i8 %131 to i16
  %133 = or i16 %130, %132
  %134 = sext i16 %133 to i64
  br label %339

135:                                              ; preds = %120
  %136 = getelementptr inbounds i8, i8* %97, i64 4
  %137 = load i8*, i8** %10, align 8
  %138 = icmp ugt i8* %137, %136
  br i1 %138, label %139, label %339

139:                                              ; preds = %135
  %140 = load i8, i8* %121, align 1
  %141 = zext i8 %140 to i64
  %142 = shl nuw nsw i64 %141, 24
  %143 = getelementptr inbounds i8, i8* %97, i64 2
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i64
  %146 = shl nuw nsw i64 %145, 16
  %147 = or i64 %146, %142
  %148 = getelementptr inbounds i8, i8* %97, i64 3
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i64
  %151 = shl nuw nsw i64 %150, 8
  %152 = or i64 %147, %151
  %153 = load i8, i8* %136, align 1
  %154 = zext i8 %153 to i64
  %155 = or i64 %152, %154
  br label %339

156:                                              ; preds = %120
  %157 = icmp ult i8 %98, -9
  br i1 %157, label %158, label %161

158:                                              ; preds = %156
  %159 = add nsw i32 %122, -139
  %160 = sext i32 %159 to i64
  br label %339

161:                                              ; preds = %156
  %162 = icmp ult i8 %98, -5
  %163 = load i8*, i8** %10, align 8
  %164 = icmp ule i8* %163, %121
  br i1 %162, label %165, label %174

165:                                              ; preds = %161
  br i1 %164, label %339, label %166

166:                                              ; preds = %165
  %167 = shl nuw nsw i32 %122, 8
  %168 = add nsw i32 %167, -63232
  %169 = load i8, i8* %121, align 1
  %170 = zext i8 %169 to i32
  %171 = or i32 %168, %170
  %172 = add nsw i32 %171, 108
  %173 = sext i32 %172 to i64
  br label %339

174:                                              ; preds = %161
  br i1 %164, label %339, label %175

175:                                              ; preds = %174
  %176 = shl nuw nsw i32 %122, 8
  %177 = load i8, i8* %121, align 1
  %178 = zext i8 %177 to i32
  %179 = sub nsw i32 64148, %176
  %180 = sub nsw i32 %179, %178
  %181 = sext i32 %180 to i64
  br label %339

182:                                              ; preds = %94
  %183 = load i8**, i8*** %4, align 8
  %184 = load i8*, i8** %183, align 8
  %185 = load i8, i8* %184, align 1
  %186 = icmp eq i8 %185, 30
  br i1 %186, label %187, label %189

187:                                              ; preds = %182
  %188 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %184, i64 0, i64* null) #11
  br label %339

189:                                              ; preds = %182
  %190 = getelementptr inbounds i8, i8* %184, i64 1
  %191 = zext i8 %185 to i32
  switch i8 %185, label %225 [
    i8 28, label %192
    i8 29, label %204
  ]

192:                                              ; preds = %189
  %193 = getelementptr inbounds i8, i8* %184, i64 2
  %194 = load i8*, i8** %10, align 8
  %195 = icmp ugt i8* %194, %193
  br i1 %195, label %196, label %254

196:                                              ; preds = %192
  %197 = load i8, i8* %190, align 1
  %198 = zext i8 %197 to i16
  %199 = shl nuw i16 %198, 8
  %200 = load i8, i8* %193, align 1
  %201 = zext i8 %200 to i16
  %202 = or i16 %199, %201
  %203 = sext i16 %202 to i64
  br label %257

204:                                              ; preds = %189
  %205 = getelementptr inbounds i8, i8* %184, i64 4
  %206 = load i8*, i8** %10, align 8
  %207 = icmp ugt i8* %206, %205
  br i1 %207, label %208, label %254

208:                                              ; preds = %204
  %209 = load i8, i8* %190, align 1
  %210 = zext i8 %209 to i64
  %211 = shl nuw nsw i64 %210, 24
  %212 = getelementptr inbounds i8, i8* %184, i64 2
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i64
  %215 = shl nuw nsw i64 %214, 16
  %216 = or i64 %215, %211
  %217 = getelementptr inbounds i8, i8* %184, i64 3
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i64
  %220 = shl nuw nsw i64 %219, 8
  %221 = or i64 %216, %220
  %222 = load i8, i8* %205, align 1
  %223 = zext i8 %222 to i64
  %224 = or i64 %221, %223
  br label %251

225:                                              ; preds = %189
  %226 = icmp ult i8 %185, -9
  br i1 %226, label %227, label %230

227:                                              ; preds = %225
  %228 = add nsw i32 %191, -139
  %229 = sext i32 %228 to i64
  br label %254

230:                                              ; preds = %225
  %231 = icmp ult i8 %185, -5
  %232 = load i8*, i8** %10, align 8
  %233 = icmp ule i8* %232, %190
  br i1 %231, label %234, label %243

234:                                              ; preds = %230
  br i1 %233, label %254, label %235

235:                                              ; preds = %234
  %236 = shl nuw nsw i32 %191, 8
  %237 = add nsw i32 %236, -63232
  %238 = load i8, i8* %190, align 1
  %239 = zext i8 %238 to i32
  %240 = or i32 %237, %239
  %241 = add nsw i32 %240, 108
  %242 = sext i32 %241 to i64
  br label %251

243:                                              ; preds = %230
  br i1 %233, label %254, label %244

244:                                              ; preds = %243
  %245 = shl nuw nsw i32 %191, 8
  %246 = load i8, i8* %190, align 1
  %247 = zext i8 %246 to i32
  %248 = sub nsw i32 64148, %245
  %249 = sub nsw i32 %248, %247
  %250 = sext i32 %249 to i64
  br label %251

251:                                              ; preds = %208, %235, %244
  %252 = phi i64 [ %224, %208 ], [ %242, %235 ], [ %250, %244 ]
  %253 = icmp sgt i64 %252, 32767
  br i1 %253, label %339, label %257

254:                                              ; preds = %234, %243, %204, %192, %227
  %255 = phi i64 [ %229, %227 ], [ 0, %192 ], [ 0, %204 ], [ 0, %243 ], [ 0, %234 ]
  %256 = shl i64 %255, 16
  br label %339

257:                                              ; preds = %196, %251
  %258 = phi i64 [ %252, %251 ], [ %203, %196 ]
  %259 = icmp slt i64 %258, -32767
  %260 = shl i64 %258, 16
  %261 = select i1 %259, i64 -2147483647, i64 %260
  br label %339

262:                                              ; preds = %94
  %263 = load i8**, i8*** %4, align 8
  %264 = load i8*, i8** %263, align 8
  %265 = load i8, i8* %264, align 1
  %266 = icmp eq i8 %265, 30
  br i1 %266, label %267, label %269

267:                                              ; preds = %262
  %268 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %264, i64 3, i64* null) #11
  br label %339

269:                                              ; preds = %262
  %270 = getelementptr inbounds i8, i8* %264, i64 1
  %271 = zext i8 %265 to i32
  switch i8 %265, label %288 [
    i8 28, label %272
    i8 29, label %284
  ]

272:                                              ; preds = %269
  %273 = getelementptr inbounds i8, i8* %264, i64 2
  %274 = load i8*, i8** %10, align 8
  %275 = icmp ugt i8* %274, %273
  br i1 %275, label %276, label %339

276:                                              ; preds = %272
  %277 = load i8, i8* %270, align 1
  %278 = zext i8 %277 to i16
  %279 = shl nuw i16 %278, 8
  %280 = load i8, i8* %273, align 1
  %281 = zext i8 %280 to i16
  %282 = or i16 %279, %281
  %283 = sext i16 %282 to i64
  br label %331

284:                                              ; preds = %269
  %285 = getelementptr inbounds i8, i8* %264, i64 4
  %286 = load i8*, i8** %10, align 8
  %287 = icmp ugt i8* %286, %285
  br i1 %287, label %314, label %339

288:                                              ; preds = %269
  %289 = icmp ult i8 %265, -9
  br i1 %289, label %290, label %293

290:                                              ; preds = %288
  %291 = add nsw i32 %271, -139
  %292 = sext i32 %291 to i64
  br label %331

293:                                              ; preds = %288
  %294 = icmp ult i8 %265, -5
  %295 = load i8*, i8** %10, align 8
  %296 = icmp ule i8* %295, %270
  br i1 %294, label %297, label %306

297:                                              ; preds = %293
  br i1 %296, label %339, label %298

298:                                              ; preds = %297
  %299 = shl nuw nsw i32 %271, 8
  %300 = add nsw i32 %299, -63232
  %301 = load i8, i8* %270, align 1
  %302 = zext i8 %301 to i32
  %303 = or i32 %300, %302
  %304 = add nsw i32 %303, 108
  %305 = sext i32 %304 to i64
  br label %331

306:                                              ; preds = %293
  br i1 %296, label %339, label %307

307:                                              ; preds = %306
  %308 = shl nuw nsw i32 %271, 8
  %309 = load i8, i8* %270, align 1
  %310 = zext i8 %309 to i32
  %311 = sub nsw i32 64148, %308
  %312 = sub nsw i32 %311, %310
  %313 = sext i32 %312 to i64
  br label %331

314:                                              ; preds = %284
  %315 = load i8, i8* %270, align 1
  %316 = zext i8 %315 to i64
  %317 = shl nuw nsw i64 %316, 24
  %318 = getelementptr inbounds i8, i8* %264, i64 2
  %319 = load i8, i8* %318, align 1
  %320 = zext i8 %319 to i64
  %321 = shl nuw nsw i64 %320, 16
  %322 = or i64 %321, %317
  %323 = getelementptr inbounds i8, i8* %264, i64 3
  %324 = load i8, i8* %323, align 1
  %325 = zext i8 %324 to i64
  %326 = shl nuw nsw i64 %325, 8
  %327 = or i64 %322, %326
  %328 = load i8, i8* %285, align 1
  %329 = zext i8 %328 to i64
  %330 = or i64 %327, %329
  br label %331

331:                                              ; preds = %314, %307, %298, %290, %276
  %332 = phi i64 [ %330, %314 ], [ %283, %276 ], [ %292, %290 ], [ %305, %298 ], [ %313, %307 ]
  %333 = mul nsw i64 %332, 1000
  %334 = icmp sgt i64 %333, 32767
  br i1 %334, label %339, label %335

335:                                              ; preds = %331
  %336 = icmp slt i64 %333, -32767
  %337 = mul i64 %332, 65536000
  %338 = select i1 %336, i64 -2147483647, i64 %337
  br label %339

339:                                              ; preds = %257, %254, %335, %331, %306, %297, %284, %272, %267, %251, %187, %102, %99, %123, %127, %135, %139, %158, %165, %166, %174, %175
  %340 = phi i64 [ %101, %99 ], [ %119, %102 ], [ %134, %127 ], [ %155, %139 ], [ %160, %158 ], [ %173, %166 ], [ %181, %175 ], [ 0, %123 ], [ 0, %135 ], [ 0, %174 ], [ 0, %165 ], [ %188, %187 ], [ 2147483647, %251 ], [ %338, %335 ], [ %268, %267 ], [ 2147483647, %331 ], [ 0, %272 ], [ 0, %284 ], [ 0, %306 ], [ 0, %297 ], [ %256, %254 ], [ %261, %257 ]
  %341 = getelementptr inbounds i32, i32* %85, i64 3
  %342 = bitcast i32* %341 to i8*
  %343 = load i8, i8* %342, align 4
  switch i8 %343, label %352 [
    i8 1, label %344
    i8 2, label %346
    i8 4, label %349
  ]

344:                                              ; preds = %339
  %345 = trunc i64 %340 to i8
  store i8 %345, i8* %90, align 1
  br label %491

346:                                              ; preds = %339
  %347 = trunc i64 %340 to i16
  %348 = bitcast i8* %90 to i16*
  store i16 %347, i16* %348, align 2
  br label %491

349:                                              ; preds = %339
  %350 = trunc i64 %340 to i32
  %351 = bitcast i8* %90 to i32*
  store i32 %350, i32* %351, align 4
  br label %491

352:                                              ; preds = %339
  %353 = bitcast i8* %90 to i64*
  store i64 %340, i64* %353, align 8
  br label %491

354:                                              ; preds = %94
  %355 = getelementptr inbounds i32, i32* %85, i64 7
  %356 = load i32, i32* %355, align 4
  %357 = zext i32 %356 to i64
  %358 = getelementptr inbounds i8, i8* %86, i64 %357
  %359 = load i8**, i8*** %4, align 8
  %360 = getelementptr inbounds i32, i32* %85, i64 6
  %361 = load i32, i32* %360, align 8
  %362 = icmp ult i32 %361, %61
  %363 = select i1 %362, i32 %361, i32 %61
  %364 = trunc i32 %363 to i8
  store i8 %364, i8* %358, align 1
  %365 = icmp eq i32 %363, 0
  br i1 %365, label %491, label %366

366:                                              ; preds = %354
  %367 = getelementptr inbounds i32, i32* %85, i64 3
  %368 = bitcast i32* %367 to i8*
  br label %369

369:                                              ; preds = %366, %474
  %370 = phi i8** [ %359, %366 ], [ %374, %474 ]
  %371 = phi i8* [ %90, %366 ], [ %477, %474 ]
  %372 = phi i64 [ 0, %366 ], [ %462, %474 ]
  %373 = phi i32 [ %363, %366 ], [ %478, %474 ]
  %374 = getelementptr inbounds i8*, i8** %370, i64 1
  %375 = load i8*, i8** %370, align 8
  %376 = load i8, i8* %375, align 1
  switch i8 %376, label %398 [
    i8 30, label %377
    i8 -1, label %380
  ]

377:                                              ; preds = %369
  %378 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %375, i64 0, i64* null) #11
  %379 = ashr i64 %378, 16
  br label %460

380:                                              ; preds = %369
  %381 = getelementptr inbounds i8, i8* %375, i64 1
  %382 = load i8, i8* %381, align 1
  %383 = zext i8 %382 to i64
  %384 = shl nuw nsw i64 %383, 16
  %385 = getelementptr inbounds i8, i8* %375, i64 2
  %386 = load i8, i8* %385, align 1
  %387 = zext i8 %386 to i64
  %388 = shl nuw nsw i64 %387, 8
  %389 = or i64 %388, %384
  %390 = getelementptr inbounds i8, i8* %375, i64 3
  %391 = load i8, i8* %390, align 1
  %392 = zext i8 %391 to i64
  %393 = or i64 %389, %392
  %394 = add nuw nsw i64 %393, 128
  %395 = lshr i64 %394, 8
  %396 = shl i64 %395, 48
  %397 = ashr exact i64 %396, 48
  br label %460

398:                                              ; preds = %369
  %399 = getelementptr inbounds i8, i8* %375, i64 1
  %400 = zext i8 %376 to i32
  switch i8 %376, label %434 [
    i8 28, label %401
    i8 29, label %413
  ]

401:                                              ; preds = %398
  %402 = getelementptr inbounds i8, i8* %375, i64 2
  %403 = load i8*, i8** %10, align 8
  %404 = icmp ugt i8* %403, %402
  br i1 %404, label %405, label %460

405:                                              ; preds = %401
  %406 = load i8, i8* %399, align 1
  %407 = zext i8 %406 to i16
  %408 = shl nuw i16 %407, 8
  %409 = load i8, i8* %402, align 1
  %410 = zext i8 %409 to i16
  %411 = or i16 %408, %410
  %412 = sext i16 %411 to i64
  br label %460

413:                                              ; preds = %398
  %414 = getelementptr inbounds i8, i8* %375, i64 4
  %415 = load i8*, i8** %10, align 8
  %416 = icmp ugt i8* %415, %414
  br i1 %416, label %417, label %460

417:                                              ; preds = %413
  %418 = load i8, i8* %399, align 1
  %419 = zext i8 %418 to i64
  %420 = shl nuw nsw i64 %419, 24
  %421 = getelementptr inbounds i8, i8* %375, i64 2
  %422 = load i8, i8* %421, align 1
  %423 = zext i8 %422 to i64
  %424 = shl nuw nsw i64 %423, 16
  %425 = or i64 %424, %420
  %426 = getelementptr inbounds i8, i8* %375, i64 3
  %427 = load i8, i8* %426, align 1
  %428 = zext i8 %427 to i64
  %429 = shl nuw nsw i64 %428, 8
  %430 = or i64 %425, %429
  %431 = load i8, i8* %414, align 1
  %432 = zext i8 %431 to i64
  %433 = or i64 %430, %432
  br label %460

434:                                              ; preds = %398
  %435 = icmp ult i8 %376, -9
  br i1 %435, label %436, label %439

436:                                              ; preds = %434
  %437 = add nsw i32 %400, -139
  %438 = sext i32 %437 to i64
  br label %460

439:                                              ; preds = %434
  %440 = icmp ult i8 %376, -5
  %441 = load i8*, i8** %10, align 8
  %442 = icmp ule i8* %441, %399
  br i1 %440, label %443, label %452

443:                                              ; preds = %439
  br i1 %442, label %460, label %444

444:                                              ; preds = %443
  %445 = shl nuw nsw i32 %400, 8
  %446 = add nsw i32 %445, -63232
  %447 = load i8, i8* %399, align 1
  %448 = zext i8 %447 to i32
  %449 = or i32 %446, %448
  %450 = add nsw i32 %449, 108
  %451 = sext i32 %450 to i64
  br label %460

452:                                              ; preds = %439
  br i1 %442, label %460, label %453

453:                                              ; preds = %452
  %454 = shl nuw nsw i32 %400, 8
  %455 = load i8, i8* %399, align 1
  %456 = zext i8 %455 to i32
  %457 = sub nsw i32 64148, %454
  %458 = sub nsw i32 %457, %456
  %459 = sext i32 %458 to i64
  br label %460

460:                                              ; preds = %453, %452, %444, %443, %436, %417, %413, %405, %401, %377, %380
  %461 = phi i64 [ %379, %377 ], [ %397, %380 ], [ %412, %405 ], [ %433, %417 ], [ %438, %436 ], [ %451, %444 ], [ %459, %453 ], [ 0, %401 ], [ 0, %413 ], [ 0, %452 ], [ 0, %443 ]
  %462 = add i64 %461, %372
  %463 = load i8, i8* %368, align 4
  switch i8 %463, label %472 [
    i8 1, label %464
    i8 2, label %466
    i8 4, label %469
  ]

464:                                              ; preds = %460
  %465 = trunc i64 %462 to i8
  store i8 %465, i8* %371, align 1
  br label %474

466:                                              ; preds = %460
  %467 = trunc i64 %462 to i16
  %468 = bitcast i8* %371 to i16*
  store i16 %467, i16* %468, align 2
  br label %474

469:                                              ; preds = %460
  %470 = trunc i64 %462 to i32
  %471 = bitcast i8* %371 to i32*
  store i32 %470, i32* %471, align 4
  br label %474

472:                                              ; preds = %460
  %473 = bitcast i8* %371 to i64*
  store i64 %462, i64* %473, align 8
  br label %474

474:                                              ; preds = %464, %466, %469, %472
  %475 = load i8, i8* %368, align 4
  %476 = zext i8 %475 to i64
  %477 = getelementptr inbounds i8, i8* %371, i64 %476
  %478 = add i32 %373, -1
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %491, label %369

480:                                              ; preds = %94
  %481 = getelementptr inbounds i32, i32* %85, i64 4
  %482 = bitcast i32* %481 to i32 (%struct.CFF_ParserRec_*)**
  %483 = load i32 (%struct.CFF_ParserRec_*)*, i32 (%struct.CFF_ParserRec_*)** %482, align 8
  %484 = tail call i32 %483(%struct.CFF_ParserRec_* %0) #11
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %491, label %502

486:                                              ; preds = %73, %79
  %487 = phi i32* [ %488, %79 ], [ getelementptr inbounds ([77 x %struct.CFF_Field_Handler_], [77 x %struct.CFF_Field_Handler_]* @cff_field_handlers, i64 0, i64 0, i32 0), %73 ]
  %488 = getelementptr inbounds i32, i32* %487, i64 8
  %489 = load i32, i32* %488, align 8
  %490 = icmp eq i32 %489, 0
  br i1 %490, label %495, label %79

491:                                              ; preds = %474, %354, %480, %344, %346, %349, %352
  %492 = phi i32 [ %17, %344 ], [ %17, %346 ], [ %17, %349 ], [ %17, %352 ], [ 0, %480 ], [ %17, %354 ], [ %17, %474 ]
  %493 = load i32, i32* %85, align 8
  %494 = icmp eq i32 %493, 8
  br i1 %494, label %498, label %495

495:                                              ; preds = %486, %491
  %496 = phi i32 [ %492, %491 ], [ %17, %486 ]
  %497 = load i64, i64* %5, align 8
  store i64 %497, i64* %8, align 8
  br label %498

498:                                              ; preds = %39, %491, %495, %51, %49, %47
  %499 = phi i8* [ %48, %47 ], [ %50, %49 ], [ %54, %51 ], [ %74, %491 ], [ %74, %495 ], [ %37, %39 ]
  %500 = phi i32 [ %17, %47 ], [ %17, %49 ], [ %17, %51 ], [ %492, %491 ], [ %496, %495 ], [ %17, %39 ]
  %501 = getelementptr inbounds i8, i8* %499, i64 1
  br label %502

502:                                              ; preds = %35, %480, %83, %66, %55, %24, %498
  %503 = phi i8* [ %501, %498 ], [ %16, %24 ], [ %67, %66 ], [ %16, %55 ], [ %74, %83 ], [ %74, %480 ], [ %37, %35 ]
  %504 = phi i32 [ %500, %498 ], [ %17, %24 ], [ %17, %66 ], [ %17, %55 ], [ %17, %83 ], [ %484, %480 ], [ %17, %35 ]
  %505 = phi i32 [ 0, %498 ], [ 4, %24 ], [ 8, %66 ], [ 4, %55 ], [ 12, %83 ], [ 7, %480 ], [ 7, %35 ]
  %506 = lshr i32 %505, 2
  %507 = shl i32 %505, 30
  %508 = or i32 %506, %507
  switch i32 %508, label %509 [
    i32 0, label %15
    i32 2, label %511
    i32 1, label %511
    i32 3, label %511
  ]

509:                                              ; preds = %502, %15
  %510 = phi i32 [ %17, %15 ], [ %504, %502 ]
  br label %511

511:                                              ; preds = %502, %502, %502, %509
  %512 = phi i32 [ %510, %509 ], [ 6, %502 ], [ 6, %502 ], [ 6, %502 ]
  ret i32 %512
}

declare hidden void @FT_Stream_ExitFrame(%struct.FT_StreamRec_*) local_unnamed_addr #6

declare hidden i8* @ft_mem_realloc(%struct.FT_MemoryRec_*, i64, i64, i64, i8*, i32*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_parse_font_matrix(%struct.CFF_ParserRec_* nocapture readonly) #3 {
  %2 = alloca [6 x i64], align 16
  %3 = alloca [6 x i64], align 16
  %4 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 8
  %5 = bitcast i8** %4 to %struct.CFF_FontRecDictRec_**
  %6 = load %struct.CFF_FontRecDictRec_*, %struct.CFF_FontRecDictRec_** %5, align 8
  %7 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %6, i64 0, i32 12
  %8 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %6, i64 0, i32 15
  %9 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %6, i64 0, i32 14
  %10 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 4
  %11 = load i8**, i8*** %10, align 8
  %12 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 5
  %13 = load i8**, i8*** %12, align 8
  %14 = getelementptr inbounds i8*, i8** %11, i64 6
  %15 = icmp ult i8** %13, %14
  br i1 %15, label %191, label %16

16:                                               ; preds = %1
  %17 = bitcast [6 x i64]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #11
  %18 = getelementptr inbounds [6 x i64], [6 x i64]* %2, i64 0, i64 0
  %19 = getelementptr inbounds [6 x i64], [6 x i64]* %2, i64 0, i64 1
  %20 = getelementptr inbounds [6 x i64], [6 x i64]* %2, i64 0, i64 3
  %21 = getelementptr inbounds [6 x i64], [6 x i64]* %2, i64 0, i64 4
  %22 = bitcast [6 x i64]* %3 to i8*
  %23 = bitcast [6 x i64]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 -86, i64 48, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %22) #11
  %24 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %6, i64 0, i32 13
  %25 = bitcast [6 x i64]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 -86, i64 48, i1 false)
  store i8 1, i8* %24, align 8
  %26 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  br label %27

27:                                               ; preds = %144, %16
  %28 = phi i64 [ 0, %16 ], [ %147, %144 ]
  %29 = phi i64 [ -9223372036854775808, %16 ], [ %146, %144 ]
  %30 = phi i64 [ 9223372036854775807, %16 ], [ %145, %144 ]
  %31 = phi i8** [ %11, %16 ], [ %32, %144 ]
  %32 = getelementptr inbounds i8*, i8** %31, i64 1
  %33 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 %28
  %34 = load i8*, i8** %31, align 8
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 30
  br i1 %36, label %37, label %39

37:                                               ; preds = %27
  %38 = call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %34, i64 0, i64* %33) #11
  br label %134

39:                                               ; preds = %27
  %40 = getelementptr inbounds i8, i8* %34, i64 1
  %41 = zext i8 %35 to i32
  switch i8 %35, label %75 [
    i8 28, label %42
    i8 29, label %54
  ]

42:                                               ; preds = %39
  %43 = getelementptr inbounds i8, i8* %34, i64 2
  %44 = load i8*, i8** %26, align 8
  %45 = icmp ugt i8* %44, %43
  br i1 %45, label %46, label %124

46:                                               ; preds = %42
  %47 = load i8, i8* %40, align 1
  %48 = zext i8 %47 to i16
  %49 = shl nuw i16 %48, 8
  %50 = load i8, i8* %43, align 1
  %51 = zext i8 %50 to i16
  %52 = or i16 %49, %51
  %53 = sext i16 %52 to i64
  br label %124

54:                                               ; preds = %39
  %55 = getelementptr inbounds i8, i8* %34, i64 4
  %56 = load i8*, i8** %26, align 8
  %57 = icmp ugt i8* %56, %55
  br i1 %57, label %58, label %124

58:                                               ; preds = %54
  %59 = load i8, i8* %40, align 1
  %60 = zext i8 %59 to i64
  %61 = shl nuw nsw i64 %60, 24
  %62 = getelementptr inbounds i8, i8* %34, i64 2
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i64
  %65 = shl nuw nsw i64 %64, 16
  %66 = or i64 %65, %61
  %67 = getelementptr inbounds i8, i8* %34, i64 3
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i64
  %70 = shl nuw nsw i64 %69, 8
  %71 = or i64 %66, %70
  %72 = load i8, i8* %55, align 1
  %73 = zext i8 %72 to i64
  %74 = or i64 %71, %73
  br label %101

75:                                               ; preds = %39
  %76 = icmp ult i8 %35, -9
  br i1 %76, label %77, label %80

77:                                               ; preds = %75
  %78 = add nsw i32 %41, -139
  %79 = sext i32 %78 to i64
  br label %124

80:                                               ; preds = %75
  %81 = icmp ult i8 %35, -5
  %82 = load i8*, i8** %26, align 8
  %83 = icmp ule i8* %82, %40
  br i1 %81, label %84, label %93

84:                                               ; preds = %80
  br i1 %83, label %124, label %85

85:                                               ; preds = %84
  %86 = shl nuw nsw i32 %41, 8
  %87 = add nsw i32 %86, -63232
  %88 = load i8, i8* %40, align 1
  %89 = zext i8 %88 to i32
  %90 = or i32 %87, %89
  %91 = add nsw i32 %90, 108
  %92 = sext i32 %91 to i64
  br label %101

93:                                               ; preds = %80
  br i1 %83, label %124, label %94

94:                                               ; preds = %93
  %95 = shl nuw nsw i32 %41, 8
  %96 = load i8, i8* %40, align 1
  %97 = zext i8 %96 to i32
  %98 = sub nsw i32 64148, %95
  %99 = sub nsw i32 %98, %97
  %100 = sext i32 %99 to i64
  br label %101

101:                                              ; preds = %94, %85, %58
  %102 = phi i64 [ %74, %58 ], [ %92, %85 ], [ %100, %94 ]
  %103 = icmp sgt i64 %102, 32767
  br i1 %103, label %104, label %124

104:                                              ; preds = %101
  %105 = icmp slt i64 %102, 100000
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = icmp slt i64 %102, 1000000
  br i1 %107, label %108, label %127

108:                                              ; preds = %131, %129, %127, %106, %104
  %109 = phi i32 [ 5, %104 ], [ 6, %106 ], [ 7, %127 ], [ 8, %129 ], [ %133, %131 ]
  %110 = add nsw i32 %109, -5
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [10 x i64], [10 x i64]* @power_tens, i64 0, i64 %111
  %113 = load i64, i64* %112, align 8
  %114 = sdiv i64 %102, %113
  %115 = icmp sgt i64 %114, 32767
  br i1 %115, label %116, label %122

116:                                              ; preds = %108
  %117 = add nsw i32 %109, -4
  %118 = sext i32 %117 to i64
  store i64 %118, i64* %33, align 8
  %119 = getelementptr inbounds [10 x i64], [10 x i64]* @power_tens, i64 0, i64 %118
  %120 = load i64, i64* %119, align 8
  %121 = call i64 @FT_DivFix(i64 %102, i64 %120) #11
  br label %134

122:                                              ; preds = %108
  store i64 %111, i64* %33, align 8
  %123 = call i64 @FT_DivFix(i64 %102, i64 %113) #11
  br label %134

124:                                              ; preds = %101, %93, %84, %77, %54, %46, %42
  %125 = phi i64 [ %102, %101 ], [ 0, %84 ], [ 0, %93 ], [ 0, %54 ], [ 0, %42 ], [ %79, %77 ], [ %53, %46 ]
  store i64 0, i64* %33, align 8
  %126 = shl i64 %125, 16
  br label %134

127:                                              ; preds = %106
  %128 = icmp slt i64 %102, 10000000
  br i1 %128, label %108, label %129

129:                                              ; preds = %127
  %130 = icmp slt i64 %102, 100000000
  br i1 %130, label %108, label %131

131:                                              ; preds = %129
  %132 = icmp slt i64 %102, 1000000000
  %133 = select i1 %132, i32 9, i32 10
  br label %108

134:                                              ; preds = %37, %116, %122, %124
  %135 = phi i64 [ %38, %37 ], [ %121, %116 ], [ %123, %122 ], [ %126, %124 ]
  %136 = getelementptr inbounds [6 x i64], [6 x i64]* %2, i64 0, i64 %28
  store i64 %135, i64* %136, align 8
  %137 = icmp eq i64 %135, 0
  br i1 %137, label %144, label %138

138:                                              ; preds = %134
  %139 = load i64, i64* %33, align 8
  %140 = icmp sgt i64 %139, %29
  %141 = select i1 %140, i64 %139, i64 %29
  %142 = icmp slt i64 %139, %30
  %143 = select i1 %142, i64 %139, i64 %30
  br label %144

144:                                              ; preds = %138, %134
  %145 = phi i64 [ %30, %134 ], [ %143, %138 ]
  %146 = phi i64 [ %29, %134 ], [ %141, %138 ]
  %147 = add nuw nsw i64 %28, 1
  %148 = icmp eq i64 %147, 6
  br i1 %148, label %149, label %27

149:                                              ; preds = %144
  %150 = add i64 %146, 9
  %151 = icmp ugt i64 %150, 9
  %152 = sub nsw i64 %146, %145
  %153 = icmp ugt i64 %152, 9
  %154 = or i1 %151, %153
  br i1 %154, label %184, label %155

155:                                              ; preds = %149
  %156 = getelementptr inbounds [6 x i64], [6 x i64]* %2, i64 0, i64 0
  %157 = load i64, i64* %156, align 16
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %180, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 0
  %161 = load i64, i64* %160, align 16
  %162 = sub nsw i64 %146, %161
  %163 = getelementptr inbounds [10 x i64], [10 x i64]* @power_tens, i64 0, i64 %162
  %164 = load i64, i64* %163, align 8
  %165 = ashr i64 %164, 1
  %166 = icmp slt i64 %157, 0
  br i1 %166, label %167, label %172

167:                                              ; preds = %159
  %168 = or i64 %165, -9223372036854775808
  %169 = icmp slt i64 %168, %157
  %170 = sub nsw i64 %157, %165
  %171 = select i1 %169, i64 %170, i64 -9223372036854775808
  br label %177

172:                                              ; preds = %159
  %173 = sub nsw i64 9223372036854775807, %165
  %174 = icmp sgt i64 %173, %157
  %175 = add nsw i64 %165, %157
  %176 = select i1 %174, i64 %175, i64 9223372036854775807
  br label %177

177:                                              ; preds = %172, %167
  %178 = phi i64 [ %171, %167 ], [ %176, %172 ]
  %179 = sdiv i64 %178, %164
  store i64 %179, i64* %156, align 16
  br label %180

180:                                              ; preds = %177, %155
  %181 = getelementptr inbounds [6 x i64], [6 x i64]* %2, i64 0, i64 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %214, label %193

184:                                              ; preds = %149
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #11
  br label %185

185:                                              ; preds = %184, %314
  %186 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %7, i64 0, i32 0
  store i64 65536, i64* %186, align 8
  %187 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %6, i64 0, i32 12, i32 1
  %188 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %6, i64 0, i32 12, i32 3
  %189 = bitcast i64* %187 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 16, i1 false)
  store i64 65536, i64* %188, align 8
  %190 = bitcast %struct.FT_Vector_* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 16, i1 false)
  store i64 1, i64* %9, align 8
  br label %191

191:                                              ; preds = %1, %314, %185
  %192 = phi i32 [ 0, %185 ], [ 0, %314 ], [ 161, %1 ]
  ret i32 %192

193:                                              ; preds = %180
  %194 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 1
  %195 = load i64, i64* %194, align 8
  %196 = sub nsw i64 %146, %195
  %197 = getelementptr inbounds [10 x i64], [10 x i64]* @power_tens, i64 0, i64 %196
  %198 = load i64, i64* %197, align 8
  %199 = ashr i64 %198, 1
  %200 = icmp slt i64 %182, 0
  br i1 %200, label %206, label %201

201:                                              ; preds = %193
  %202 = sub nsw i64 9223372036854775807, %199
  %203 = icmp sgt i64 %202, %182
  %204 = add nsw i64 %199, %182
  %205 = select i1 %203, i64 %204, i64 9223372036854775807
  br label %211

206:                                              ; preds = %193
  %207 = or i64 %199, -9223372036854775808
  %208 = icmp slt i64 %207, %182
  %209 = sub nsw i64 %182, %199
  %210 = select i1 %208, i64 %209, i64 -9223372036854775808
  br label %211

211:                                              ; preds = %206, %201
  %212 = phi i64 [ %210, %206 ], [ %205, %201 ]
  %213 = sdiv i64 %212, %198
  store i64 %213, i64* %181, align 8
  br label %214

214:                                              ; preds = %211, %180
  %215 = getelementptr inbounds [6 x i64], [6 x i64]* %2, i64 0, i64 2
  %216 = load i64, i64* %215, align 16
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %239, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 2
  %220 = load i64, i64* %219, align 16
  %221 = sub nsw i64 %146, %220
  %222 = getelementptr inbounds [10 x i64], [10 x i64]* @power_tens, i64 0, i64 %221
  %223 = load i64, i64* %222, align 8
  %224 = ashr i64 %223, 1
  %225 = icmp slt i64 %216, 0
  br i1 %225, label %231, label %226

226:                                              ; preds = %218
  %227 = sub nsw i64 9223372036854775807, %224
  %228 = icmp sgt i64 %227, %216
  %229 = add nsw i64 %224, %216
  %230 = select i1 %228, i64 %229, i64 9223372036854775807
  br label %236

231:                                              ; preds = %218
  %232 = or i64 %224, -9223372036854775808
  %233 = icmp slt i64 %232, %216
  %234 = sub nsw i64 %216, %224
  %235 = select i1 %233, i64 %234, i64 -9223372036854775808
  br label %236

236:                                              ; preds = %231, %226
  %237 = phi i64 [ %235, %231 ], [ %230, %226 ]
  %238 = sdiv i64 %237, %223
  store i64 %238, i64* %215, align 16
  br label %239

239:                                              ; preds = %236, %214
  %240 = getelementptr inbounds [6 x i64], [6 x i64]* %2, i64 0, i64 3
  %241 = load i64, i64* %240, align 8
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %264, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 3
  %245 = load i64, i64* %244, align 8
  %246 = sub nsw i64 %146, %245
  %247 = getelementptr inbounds [10 x i64], [10 x i64]* @power_tens, i64 0, i64 %246
  %248 = load i64, i64* %247, align 8
  %249 = ashr i64 %248, 1
  %250 = icmp slt i64 %241, 0
  br i1 %250, label %256, label %251

251:                                              ; preds = %243
  %252 = sub nsw i64 9223372036854775807, %249
  %253 = icmp sgt i64 %252, %241
  %254 = add nsw i64 %249, %241
  %255 = select i1 %253, i64 %254, i64 9223372036854775807
  br label %261

256:                                              ; preds = %243
  %257 = or i64 %249, -9223372036854775808
  %258 = icmp slt i64 %257, %241
  %259 = sub nsw i64 %241, %249
  %260 = select i1 %258, i64 %259, i64 -9223372036854775808
  br label %261

261:                                              ; preds = %256, %251
  %262 = phi i64 [ %260, %256 ], [ %255, %251 ]
  %263 = sdiv i64 %262, %248
  store i64 %263, i64* %240, align 8
  br label %264

264:                                              ; preds = %261, %239
  %265 = getelementptr inbounds [6 x i64], [6 x i64]* %2, i64 0, i64 4
  %266 = load i64, i64* %265, align 16
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %289, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 4
  %270 = load i64, i64* %269, align 16
  %271 = sub nsw i64 %146, %270
  %272 = getelementptr inbounds [10 x i64], [10 x i64]* @power_tens, i64 0, i64 %271
  %273 = load i64, i64* %272, align 8
  %274 = ashr i64 %273, 1
  %275 = icmp slt i64 %266, 0
  br i1 %275, label %281, label %276

276:                                              ; preds = %268
  %277 = sub nsw i64 9223372036854775807, %274
  %278 = icmp sgt i64 %277, %266
  %279 = add nsw i64 %274, %266
  %280 = select i1 %278, i64 %279, i64 9223372036854775807
  br label %286

281:                                              ; preds = %268
  %282 = or i64 %274, -9223372036854775808
  %283 = icmp slt i64 %282, %266
  %284 = sub nsw i64 %266, %274
  %285 = select i1 %283, i64 %284, i64 -9223372036854775808
  br label %286

286:                                              ; preds = %281, %276
  %287 = phi i64 [ %285, %281 ], [ %280, %276 ]
  %288 = sdiv i64 %287, %273
  store i64 %288, i64* %265, align 16
  br label %289

289:                                              ; preds = %286, %264
  %290 = getelementptr inbounds [6 x i64], [6 x i64]* %2, i64 0, i64 5
  %291 = load i64, i64* %290, align 8
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %314, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 5
  %295 = load i64, i64* %294, align 8
  %296 = sub nsw i64 %146, %295
  %297 = getelementptr inbounds [10 x i64], [10 x i64]* @power_tens, i64 0, i64 %296
  %298 = load i64, i64* %297, align 8
  %299 = ashr i64 %298, 1
  %300 = icmp slt i64 %291, 0
  br i1 %300, label %306, label %301

301:                                              ; preds = %293
  %302 = sub nsw i64 9223372036854775807, %299
  %303 = icmp sgt i64 %302, %291
  %304 = add nsw i64 %299, %291
  %305 = select i1 %303, i64 %304, i64 9223372036854775807
  br label %311

306:                                              ; preds = %293
  %307 = or i64 %299, -9223372036854775808
  %308 = icmp slt i64 %307, %291
  %309 = sub nsw i64 %291, %299
  %310 = select i1 %308, i64 %309, i64 -9223372036854775808
  br label %311

311:                                              ; preds = %306, %301
  %312 = phi i64 [ %310, %306 ], [ %305, %301 ]
  %313 = sdiv i64 %312, %298
  store i64 %313, i64* %290, align 8
  br label %314

314:                                              ; preds = %311, %289
  %315 = load i64, i64* %18, align 16
  %316 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %7, i64 0, i32 0
  store i64 %315, i64* %316, align 8
  %317 = bitcast i64* %19 to <2 x i64>*
  %318 = load <2 x i64>, <2 x i64>* %317, align 8
  %319 = shufflevector <2 x i64> %318, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %320 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %6, i64 0, i32 12, i32 1
  %321 = bitcast i64* %320 to <2 x i64>*
  store <2 x i64> %319, <2 x i64>* %321, align 8
  %322 = load i64, i64* %20, align 8
  %323 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %6, i64 0, i32 12, i32 3
  store i64 %322, i64* %323, align 8
  %324 = bitcast i64* %21 to <2 x i64>*
  %325 = load <2 x i64>, <2 x i64>* %324, align 16
  %326 = bitcast %struct.FT_Vector_* %8 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %326, align 8
  %327 = sub nsw i64 0, %146
  %328 = getelementptr inbounds [10 x i64], [10 x i64]* @power_tens, i64 0, i64 %327
  %329 = load i64, i64* %328, align 8
  store i64 %329, i64* %9, align 8
  %330 = call zeroext i8 @FT_Matrix_Check(%struct.FT_Matrix_* %7) #11
  %331 = icmp eq i8 %330, 0
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #11
  br i1 %331, label %185, label %191
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_parse_font_bbox(%struct.CFF_ParserRec_* nocapture readonly) #3 {
  %2 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 8
  %3 = bitcast i8** %2 to %struct.CFF_FontRecDictRec_**
  %4 = load %struct.CFF_FontRecDictRec_*, %struct.CFF_FontRecDictRec_** %3, align 8
  %5 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 4
  %6 = load i8**, i8*** %5, align 8
  %7 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 5
  %8 = load i8**, i8*** %7, align 8
  %9 = getelementptr inbounds i8*, i8** %6, i64 4
  %10 = icmp ult i8** %8, %9
  br i1 %10, label %351, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds i8*, i8** %6, i64 1
  %13 = load i8*, i8** %6, align 8
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 30
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  %17 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %13, i64 0, i64* null) #11
  br label %94

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %13, i64 1
  %20 = zext i8 %14 to i32
  switch i8 %14, label %56 [
    i8 28, label %21
    i8 29, label %34
  ]

21:                                               ; preds = %18
  %22 = getelementptr inbounds i8, i8* %13, i64 2
  %23 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %24 = load i8*, i8** %23, align 8
  %25 = icmp ugt i8* %24, %22
  br i1 %25, label %26, label %86

26:                                               ; preds = %21
  %27 = load i8, i8* %19, align 1
  %28 = zext i8 %27 to i16
  %29 = shl nuw i16 %28, 8
  %30 = load i8, i8* %22, align 1
  %31 = zext i8 %30 to i16
  %32 = or i16 %29, %31
  %33 = sext i16 %32 to i64
  br label %89

34:                                               ; preds = %18
  %35 = getelementptr inbounds i8, i8* %13, i64 4
  %36 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %37 = load i8*, i8** %36, align 8
  %38 = icmp ugt i8* %37, %35
  br i1 %38, label %39, label %86

39:                                               ; preds = %34
  %40 = load i8, i8* %19, align 1
  %41 = zext i8 %40 to i64
  %42 = shl nuw nsw i64 %41, 24
  %43 = getelementptr inbounds i8, i8* %13, i64 2
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i64
  %46 = shl nuw nsw i64 %45, 16
  %47 = or i64 %46, %42
  %48 = getelementptr inbounds i8, i8* %13, i64 3
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i64
  %51 = shl nuw nsw i64 %50, 8
  %52 = or i64 %47, %51
  %53 = load i8, i8* %35, align 1
  %54 = zext i8 %53 to i64
  %55 = or i64 %52, %54
  br label %83

56:                                               ; preds = %18
  %57 = icmp ult i8 %14, -9
  br i1 %57, label %58, label %61

58:                                               ; preds = %56
  %59 = add nsw i32 %20, -139
  %60 = sext i32 %59 to i64
  br label %86

61:                                               ; preds = %56
  %62 = icmp ult i8 %14, -5
  %63 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %64 = load i8*, i8** %63, align 8
  %65 = icmp ule i8* %64, %19
  br i1 %62, label %66, label %75

66:                                               ; preds = %61
  br i1 %65, label %86, label %67

67:                                               ; preds = %66
  %68 = shl nuw nsw i32 %20, 8
  %69 = add nsw i32 %68, -63232
  %70 = load i8, i8* %19, align 1
  %71 = zext i8 %70 to i32
  %72 = or i32 %69, %71
  %73 = add nsw i32 %72, 108
  %74 = sext i32 %73 to i64
  br label %83

75:                                               ; preds = %61
  br i1 %65, label %86, label %76

76:                                               ; preds = %75
  %77 = shl nuw nsw i32 %20, 8
  %78 = load i8, i8* %19, align 1
  %79 = zext i8 %78 to i32
  %80 = sub nsw i32 64148, %77
  %81 = sub nsw i32 %80, %79
  %82 = sext i32 %81 to i64
  br label %83

83:                                               ; preds = %39, %67, %76
  %84 = phi i64 [ %55, %39 ], [ %74, %67 ], [ %82, %76 ]
  %85 = icmp sgt i64 %84, 32767
  br i1 %85, label %94, label %89

86:                                               ; preds = %66, %75, %34, %21, %58
  %87 = phi i64 [ %60, %58 ], [ 0, %21 ], [ 0, %34 ], [ 0, %75 ], [ 0, %66 ]
  %88 = shl i64 %87, 16
  br label %94

89:                                               ; preds = %26, %83
  %90 = phi i64 [ %84, %83 ], [ %33, %26 ]
  %91 = icmp slt i64 %90, -32767
  %92 = shl i64 %90, 16
  %93 = select i1 %91, i64 -2147483647, i64 %92
  br label %94

94:                                               ; preds = %89, %86, %16, %83
  %95 = phi i64 [ %17, %16 ], [ 2147483647, %83 ], [ %88, %86 ], [ %93, %89 ]
  %96 = tail call i64 @FT_RoundFix(i64 %95) #11
  %97 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %4, i64 0, i32 17, i32 0
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds i8*, i8** %6, i64 2
  %99 = load i8*, i8** %12, align 8
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 30
  br i1 %101, label %102, label %104

102:                                              ; preds = %94
  %103 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %99, i64 0, i64* null) #11
  br label %180

104:                                              ; preds = %94
  %105 = getelementptr inbounds i8, i8* %99, i64 1
  %106 = zext i8 %100 to i32
  switch i8 %100, label %142 [
    i8 28, label %107
    i8 29, label %120
  ]

107:                                              ; preds = %104
  %108 = getelementptr inbounds i8, i8* %99, i64 2
  %109 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %110 = load i8*, i8** %109, align 8
  %111 = icmp ugt i8* %110, %108
  br i1 %111, label %112, label %172

112:                                              ; preds = %107
  %113 = load i8, i8* %105, align 1
  %114 = zext i8 %113 to i16
  %115 = shl nuw i16 %114, 8
  %116 = load i8, i8* %108, align 1
  %117 = zext i8 %116 to i16
  %118 = or i16 %115, %117
  %119 = sext i16 %118 to i64
  br label %175

120:                                              ; preds = %104
  %121 = getelementptr inbounds i8, i8* %99, i64 4
  %122 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %123 = load i8*, i8** %122, align 8
  %124 = icmp ugt i8* %123, %121
  br i1 %124, label %125, label %172

125:                                              ; preds = %120
  %126 = load i8, i8* %105, align 1
  %127 = zext i8 %126 to i64
  %128 = shl nuw nsw i64 %127, 24
  %129 = getelementptr inbounds i8, i8* %99, i64 2
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i64
  %132 = shl nuw nsw i64 %131, 16
  %133 = or i64 %132, %128
  %134 = getelementptr inbounds i8, i8* %99, i64 3
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = shl nuw nsw i64 %136, 8
  %138 = or i64 %133, %137
  %139 = load i8, i8* %121, align 1
  %140 = zext i8 %139 to i64
  %141 = or i64 %138, %140
  br label %169

142:                                              ; preds = %104
  %143 = icmp ult i8 %100, -9
  br i1 %143, label %144, label %147

144:                                              ; preds = %142
  %145 = add nsw i32 %106, -139
  %146 = sext i32 %145 to i64
  br label %172

147:                                              ; preds = %142
  %148 = icmp ult i8 %100, -5
  %149 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %150 = load i8*, i8** %149, align 8
  %151 = icmp ule i8* %150, %105
  br i1 %148, label %152, label %161

152:                                              ; preds = %147
  br i1 %151, label %172, label %153

153:                                              ; preds = %152
  %154 = shl nuw nsw i32 %106, 8
  %155 = add nsw i32 %154, -63232
  %156 = load i8, i8* %105, align 1
  %157 = zext i8 %156 to i32
  %158 = or i32 %155, %157
  %159 = add nsw i32 %158, 108
  %160 = sext i32 %159 to i64
  br label %169

161:                                              ; preds = %147
  br i1 %151, label %172, label %162

162:                                              ; preds = %161
  %163 = shl nuw nsw i32 %106, 8
  %164 = load i8, i8* %105, align 1
  %165 = zext i8 %164 to i32
  %166 = sub nsw i32 64148, %163
  %167 = sub nsw i32 %166, %165
  %168 = sext i32 %167 to i64
  br label %169

169:                                              ; preds = %125, %153, %162
  %170 = phi i64 [ %141, %125 ], [ %160, %153 ], [ %168, %162 ]
  %171 = icmp sgt i64 %170, 32767
  br i1 %171, label %180, label %175

172:                                              ; preds = %152, %161, %120, %107, %144
  %173 = phi i64 [ %146, %144 ], [ 0, %107 ], [ 0, %120 ], [ 0, %161 ], [ 0, %152 ]
  %174 = shl i64 %173, 16
  br label %180

175:                                              ; preds = %112, %169
  %176 = phi i64 [ %170, %169 ], [ %119, %112 ]
  %177 = icmp slt i64 %176, -32767
  %178 = shl i64 %176, 16
  %179 = select i1 %177, i64 -2147483647, i64 %178
  br label %180

180:                                              ; preds = %175, %172, %102, %169
  %181 = phi i64 [ %103, %102 ], [ 2147483647, %169 ], [ %174, %172 ], [ %179, %175 ]
  %182 = tail call i64 @FT_RoundFix(i64 %181) #11
  %183 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %4, i64 0, i32 17, i32 1
  store i64 %182, i64* %183, align 8
  %184 = getelementptr inbounds i8*, i8** %6, i64 3
  %185 = load i8*, i8** %98, align 8
  %186 = load i8, i8* %185, align 1
  %187 = icmp eq i8 %186, 30
  br i1 %187, label %188, label %190

188:                                              ; preds = %180
  %189 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %185, i64 0, i64* null) #11
  br label %264

190:                                              ; preds = %180
  %191 = getelementptr inbounds i8, i8* %185, i64 1
  %192 = zext i8 %186 to i32
  switch i8 %186, label %228 [
    i8 28, label %193
    i8 29, label %206
  ]

193:                                              ; preds = %190
  %194 = getelementptr inbounds i8, i8* %185, i64 2
  %195 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %196 = load i8*, i8** %195, align 8
  %197 = icmp ugt i8* %196, %194
  br i1 %197, label %198, label %264

198:                                              ; preds = %193
  %199 = load i8, i8* %191, align 1
  %200 = zext i8 %199 to i16
  %201 = shl nuw i16 %200, 8
  %202 = load i8, i8* %194, align 1
  %203 = zext i8 %202 to i16
  %204 = or i16 %201, %203
  %205 = sext i16 %204 to i64
  br label %259

206:                                              ; preds = %190
  %207 = getelementptr inbounds i8, i8* %185, i64 4
  %208 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %209 = load i8*, i8** %208, align 8
  %210 = icmp ugt i8* %209, %207
  br i1 %210, label %211, label %264

211:                                              ; preds = %206
  %212 = load i8, i8* %191, align 1
  %213 = zext i8 %212 to i64
  %214 = shl nuw nsw i64 %213, 24
  %215 = getelementptr inbounds i8, i8* %185, i64 2
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i64
  %218 = shl nuw nsw i64 %217, 16
  %219 = or i64 %218, %214
  %220 = getelementptr inbounds i8, i8* %185, i64 3
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = shl nuw nsw i64 %222, 8
  %224 = or i64 %219, %223
  %225 = load i8, i8* %207, align 1
  %226 = zext i8 %225 to i64
  %227 = or i64 %224, %226
  br label %256

228:                                              ; preds = %190
  %229 = icmp ult i8 %186, -9
  br i1 %229, label %230, label %234

230:                                              ; preds = %228
  %231 = add nsw i32 %192, -139
  %232 = sext i32 %231 to i64
  %233 = shl nsw i64 %232, 16
  br label %264

234:                                              ; preds = %228
  %235 = icmp ult i8 %186, -5
  %236 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %237 = load i8*, i8** %236, align 8
  %238 = icmp ule i8* %237, %191
  br i1 %235, label %239, label %248

239:                                              ; preds = %234
  br i1 %238, label %264, label %240

240:                                              ; preds = %239
  %241 = shl nuw nsw i32 %192, 8
  %242 = add nsw i32 %241, -63232
  %243 = load i8, i8* %191, align 1
  %244 = zext i8 %243 to i32
  %245 = or i32 %242, %244
  %246 = add nsw i32 %245, 108
  %247 = sext i32 %246 to i64
  br label %256

248:                                              ; preds = %234
  br i1 %238, label %264, label %249

249:                                              ; preds = %248
  %250 = shl nuw nsw i32 %192, 8
  %251 = load i8, i8* %191, align 1
  %252 = zext i8 %251 to i32
  %253 = sub nsw i32 64148, %250
  %254 = sub nsw i32 %253, %252
  %255 = sext i32 %254 to i64
  br label %256

256:                                              ; preds = %211, %240, %249
  %257 = phi i64 [ %227, %211 ], [ %247, %240 ], [ %255, %249 ]
  %258 = icmp sgt i64 %257, 32767
  br i1 %258, label %264, label %259

259:                                              ; preds = %198, %256
  %260 = phi i64 [ %257, %256 ], [ %205, %198 ]
  %261 = icmp slt i64 %260, -32767
  %262 = shl i64 %260, 16
  %263 = select i1 %261, i64 -2147483647, i64 %262
  br label %264

264:                                              ; preds = %230, %193, %206, %248, %239, %259, %188, %256
  %265 = phi i64 [ %189, %188 ], [ 2147483647, %256 ], [ %263, %259 ], [ %233, %230 ], [ 0, %193 ], [ 0, %206 ], [ 0, %248 ], [ 0, %239 ]
  %266 = tail call i64 @FT_RoundFix(i64 %265) #11
  %267 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %4, i64 0, i32 17, i32 2
  store i64 %266, i64* %267, align 8
  %268 = load i8*, i8** %184, align 8
  %269 = load i8, i8* %268, align 1
  %270 = icmp eq i8 %269, 30
  br i1 %270, label %271, label %273

271:                                              ; preds = %264
  %272 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %268, i64 0, i64* null) #11
  br label %347

273:                                              ; preds = %264
  %274 = getelementptr inbounds i8, i8* %268, i64 1
  %275 = zext i8 %269 to i32
  switch i8 %269, label %311 [
    i8 28, label %276
    i8 29, label %289
  ]

276:                                              ; preds = %273
  %277 = getelementptr inbounds i8, i8* %268, i64 2
  %278 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %279 = load i8*, i8** %278, align 8
  %280 = icmp ugt i8* %279, %277
  br i1 %280, label %281, label %347

281:                                              ; preds = %276
  %282 = load i8, i8* %274, align 1
  %283 = zext i8 %282 to i16
  %284 = shl nuw i16 %283, 8
  %285 = load i8, i8* %277, align 1
  %286 = zext i8 %285 to i16
  %287 = or i16 %284, %286
  %288 = sext i16 %287 to i64
  br label %342

289:                                              ; preds = %273
  %290 = getelementptr inbounds i8, i8* %268, i64 4
  %291 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %292 = load i8*, i8** %291, align 8
  %293 = icmp ugt i8* %292, %290
  br i1 %293, label %294, label %347

294:                                              ; preds = %289
  %295 = load i8, i8* %274, align 1
  %296 = zext i8 %295 to i64
  %297 = shl nuw nsw i64 %296, 24
  %298 = getelementptr inbounds i8, i8* %268, i64 2
  %299 = load i8, i8* %298, align 1
  %300 = zext i8 %299 to i64
  %301 = shl nuw nsw i64 %300, 16
  %302 = or i64 %301, %297
  %303 = getelementptr inbounds i8, i8* %268, i64 3
  %304 = load i8, i8* %303, align 1
  %305 = zext i8 %304 to i64
  %306 = shl nuw nsw i64 %305, 8
  %307 = or i64 %302, %306
  %308 = load i8, i8* %290, align 1
  %309 = zext i8 %308 to i64
  %310 = or i64 %307, %309
  br label %339

311:                                              ; preds = %273
  %312 = icmp ult i8 %269, -9
  br i1 %312, label %313, label %317

313:                                              ; preds = %311
  %314 = add nsw i32 %275, -139
  %315 = sext i32 %314 to i64
  %316 = shl nsw i64 %315, 16
  br label %347

317:                                              ; preds = %311
  %318 = icmp ult i8 %269, -5
  %319 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %320 = load i8*, i8** %319, align 8
  %321 = icmp ule i8* %320, %274
  br i1 %318, label %322, label %331

322:                                              ; preds = %317
  br i1 %321, label %347, label %323

323:                                              ; preds = %322
  %324 = shl nuw nsw i32 %275, 8
  %325 = add nsw i32 %324, -63232
  %326 = load i8, i8* %274, align 1
  %327 = zext i8 %326 to i32
  %328 = or i32 %325, %327
  %329 = add nsw i32 %328, 108
  %330 = sext i32 %329 to i64
  br label %339

331:                                              ; preds = %317
  br i1 %321, label %347, label %332

332:                                              ; preds = %331
  %333 = shl nuw nsw i32 %275, 8
  %334 = load i8, i8* %274, align 1
  %335 = zext i8 %334 to i32
  %336 = sub nsw i32 64148, %333
  %337 = sub nsw i32 %336, %335
  %338 = sext i32 %337 to i64
  br label %339

339:                                              ; preds = %294, %323, %332
  %340 = phi i64 [ %310, %294 ], [ %330, %323 ], [ %338, %332 ]
  %341 = icmp sgt i64 %340, 32767
  br i1 %341, label %347, label %342

342:                                              ; preds = %281, %339
  %343 = phi i64 [ %340, %339 ], [ %288, %281 ]
  %344 = icmp slt i64 %343, -32767
  %345 = shl i64 %343, 16
  %346 = select i1 %344, i64 -2147483647, i64 %345
  br label %347

347:                                              ; preds = %313, %276, %289, %331, %322, %342, %271, %339
  %348 = phi i64 [ %272, %271 ], [ 2147483647, %339 ], [ %346, %342 ], [ %316, %313 ], [ 0, %276 ], [ 0, %289 ], [ 0, %331 ], [ 0, %322 ]
  %349 = tail call i64 @FT_RoundFix(i64 %348) #11
  %350 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %4, i64 0, i32 17, i32 3
  store i64 %349, i64* %350, align 8
  br label %351

351:                                              ; preds = %1, %347
  %352 = phi i32 [ 0, %347 ], [ 161, %1 ]
  ret i32 %352
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_parse_private_dict(%struct.CFF_ParserRec_* nocapture readonly) #3 {
  %2 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 8
  %3 = bitcast i8** %2 to %struct.CFF_FontRecDictRec_**
  %4 = load %struct.CFF_FontRecDictRec_*, %struct.CFF_FontRecDictRec_** %3, align 8
  %5 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 4
  %6 = load i8**, i8*** %5, align 8
  %7 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 5
  %8 = load i8**, i8*** %7, align 8
  %9 = getelementptr inbounds i8*, i8** %6, i64 2
  %10 = icmp ult i8** %8, %9
  br i1 %10, label %201, label %11

11:                                               ; preds = %1
  %12 = load i8*, i8** %6, align 8
  %13 = load i8, i8* %12, align 1
  switch i8 %13, label %35 [
    i8 30, label %14
    i8 -1, label %17
  ]

14:                                               ; preds = %11
  %15 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %12, i64 0, i64* null) #11
  %16 = ashr i64 %15, 16
  br label %100

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %12, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = shl nuw nsw i64 %20, 16
  %22 = getelementptr inbounds i8, i8* %12, i64 2
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i64
  %25 = shl nuw nsw i64 %24, 8
  %26 = or i64 %25, %21
  %27 = getelementptr inbounds i8, i8* %12, i64 3
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  %30 = or i64 %26, %29
  %31 = add nuw nsw i64 %30, 128
  %32 = lshr i64 %31, 8
  %33 = shl i64 %32, 48
  %34 = ashr exact i64 %33, 48
  br label %100

35:                                               ; preds = %11
  %36 = getelementptr inbounds i8, i8* %12, i64 1
  %37 = zext i8 %13 to i32
  switch i8 %13, label %73 [
    i8 28, label %38
    i8 29, label %51
  ]

38:                                               ; preds = %35
  %39 = getelementptr inbounds i8, i8* %12, i64 2
  %40 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %41 = load i8*, i8** %40, align 8
  %42 = icmp ugt i8* %41, %39
  br i1 %42, label %43, label %103

43:                                               ; preds = %38
  %44 = load i8, i8* %36, align 1
  %45 = zext i8 %44 to i16
  %46 = shl nuw i16 %45, 8
  %47 = load i8, i8* %39, align 1
  %48 = zext i8 %47 to i16
  %49 = or i16 %46, %48
  %50 = sext i16 %49 to i64
  br label %100

51:                                               ; preds = %35
  %52 = getelementptr inbounds i8, i8* %12, i64 4
  %53 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ugt i8* %54, %52
  br i1 %55, label %56, label %103

56:                                               ; preds = %51
  %57 = load i8, i8* %36, align 1
  %58 = zext i8 %57 to i64
  %59 = shl nuw nsw i64 %58, 24
  %60 = getelementptr inbounds i8, i8* %12, i64 2
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i64
  %63 = shl nuw nsw i64 %62, 16
  %64 = or i64 %63, %59
  %65 = getelementptr inbounds i8, i8* %12, i64 3
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  %68 = shl nuw nsw i64 %67, 8
  %69 = or i64 %64, %68
  %70 = load i8, i8* %52, align 1
  %71 = zext i8 %70 to i64
  %72 = or i64 %69, %71
  br label %103

73:                                               ; preds = %35
  %74 = icmp ult i8 %13, -9
  br i1 %74, label %75, label %78

75:                                               ; preds = %73
  %76 = add nsw i32 %37, -139
  %77 = sext i32 %76 to i64
  br label %100

78:                                               ; preds = %73
  %79 = icmp ult i8 %13, -5
  %80 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %81 = load i8*, i8** %80, align 8
  %82 = icmp ule i8* %81, %36
  br i1 %79, label %83, label %92

83:                                               ; preds = %78
  br i1 %82, label %103, label %84

84:                                               ; preds = %83
  %85 = shl nuw nsw i32 %37, 8
  %86 = add nsw i32 %85, -63232
  %87 = load i8, i8* %36, align 1
  %88 = zext i8 %87 to i32
  %89 = or i32 %86, %88
  %90 = add nsw i32 %89, 108
  %91 = sext i32 %90 to i64
  br label %100

92:                                               ; preds = %78
  br i1 %82, label %103, label %93

93:                                               ; preds = %92
  %94 = shl nuw nsw i32 %37, 8
  %95 = load i8, i8* %36, align 1
  %96 = zext i8 %95 to i32
  %97 = sub nsw i32 64148, %94
  %98 = sub nsw i32 %97, %96
  %99 = sext i32 %98 to i64
  br label %100

100:                                              ; preds = %93, %84, %75, %43, %14, %17
  %101 = phi i64 [ %16, %14 ], [ %34, %17 ], [ %50, %43 ], [ %77, %75 ], [ %91, %84 ], [ %99, %93 ]
  %102 = icmp slt i64 %101, 0
  br i1 %102, label %201, label %103

103:                                              ; preds = %83, %92, %51, %38, %56, %100
  %104 = phi i64 [ %101, %100 ], [ 0, %83 ], [ 0, %92 ], [ 0, %51 ], [ 0, %38 ], [ %72, %56 ]
  %105 = getelementptr inbounds i8*, i8** %6, i64 1
  %106 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %4, i64 0, i32 23
  store i64 %104, i64* %106, align 8
  %107 = load i8*, i8** %105, align 8
  %108 = load i8, i8* %107, align 1
  switch i8 %108, label %130 [
    i8 30, label %109
    i8 -1, label %112
  ]

109:                                              ; preds = %103
  %110 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %107, i64 0, i64* null) #11
  %111 = ashr i64 %110, 16
  br label %195

112:                                              ; preds = %103
  %113 = getelementptr inbounds i8, i8* %107, i64 1
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i64
  %116 = shl nuw nsw i64 %115, 16
  %117 = getelementptr inbounds i8, i8* %107, i64 2
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i64
  %120 = shl nuw nsw i64 %119, 8
  %121 = or i64 %120, %116
  %122 = getelementptr inbounds i8, i8* %107, i64 3
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i64
  %125 = or i64 %121, %124
  %126 = add nuw nsw i64 %125, 128
  %127 = lshr i64 %126, 8
  %128 = shl i64 %127, 48
  %129 = ashr exact i64 %128, 48
  br label %195

130:                                              ; preds = %103
  %131 = getelementptr inbounds i8, i8* %107, i64 1
  %132 = zext i8 %108 to i32
  switch i8 %108, label %168 [
    i8 28, label %133
    i8 29, label %146
  ]

133:                                              ; preds = %130
  %134 = getelementptr inbounds i8, i8* %107, i64 2
  %135 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %136 = load i8*, i8** %135, align 8
  %137 = icmp ugt i8* %136, %134
  br i1 %137, label %138, label %198

138:                                              ; preds = %133
  %139 = load i8, i8* %131, align 1
  %140 = zext i8 %139 to i16
  %141 = shl nuw i16 %140, 8
  %142 = load i8, i8* %134, align 1
  %143 = zext i8 %142 to i16
  %144 = or i16 %141, %143
  %145 = sext i16 %144 to i64
  br label %195

146:                                              ; preds = %130
  %147 = getelementptr inbounds i8, i8* %107, i64 4
  %148 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %149 = load i8*, i8** %148, align 8
  %150 = icmp ugt i8* %149, %147
  br i1 %150, label %151, label %198

151:                                              ; preds = %146
  %152 = load i8, i8* %131, align 1
  %153 = zext i8 %152 to i64
  %154 = shl nuw nsw i64 %153, 24
  %155 = getelementptr inbounds i8, i8* %107, i64 2
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i64
  %158 = shl nuw nsw i64 %157, 16
  %159 = or i64 %158, %154
  %160 = getelementptr inbounds i8, i8* %107, i64 3
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = shl nuw nsw i64 %162, 8
  %164 = or i64 %159, %163
  %165 = load i8, i8* %147, align 1
  %166 = zext i8 %165 to i64
  %167 = or i64 %164, %166
  br label %198

168:                                              ; preds = %130
  %169 = icmp ult i8 %108, -9
  br i1 %169, label %170, label %173

170:                                              ; preds = %168
  %171 = add nsw i32 %132, -139
  %172 = sext i32 %171 to i64
  br label %195

173:                                              ; preds = %168
  %174 = icmp ult i8 %108, -5
  %175 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %176 = load i8*, i8** %175, align 8
  %177 = icmp ule i8* %176, %131
  br i1 %174, label %178, label %187

178:                                              ; preds = %173
  br i1 %177, label %198, label %179

179:                                              ; preds = %178
  %180 = shl nuw nsw i32 %132, 8
  %181 = add nsw i32 %180, -63232
  %182 = load i8, i8* %131, align 1
  %183 = zext i8 %182 to i32
  %184 = or i32 %181, %183
  %185 = add nsw i32 %184, 108
  %186 = sext i32 %185 to i64
  br label %195

187:                                              ; preds = %173
  br i1 %177, label %198, label %188

188:                                              ; preds = %187
  %189 = shl nuw nsw i32 %132, 8
  %190 = load i8, i8* %131, align 1
  %191 = zext i8 %190 to i32
  %192 = sub nsw i32 64148, %189
  %193 = sub nsw i32 %192, %191
  %194 = sext i32 %193 to i64
  br label %195

195:                                              ; preds = %188, %179, %170, %138, %109, %112
  %196 = phi i64 [ %111, %109 ], [ %129, %112 ], [ %145, %138 ], [ %172, %170 ], [ %186, %179 ], [ %194, %188 ]
  %197 = icmp slt i64 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %178, %187, %146, %133, %151, %195
  %199 = phi i64 [ %196, %195 ], [ 0, %178 ], [ 0, %187 ], [ 0, %146 ], [ 0, %133 ], [ %167, %151 ]
  %200 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %4, i64 0, i32 22
  store i64 %199, i64* %200, align 8
  br label %201

201:                                              ; preds = %1, %195, %100, %198
  %202 = phi i32 [ 161, %1 ], [ 0, %198 ], [ 3, %100 ], [ 3, %195 ]
  ret i32 %202
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_parse_multiple_master(%struct.CFF_ParserRec_* nocapture) #3 {
  %2 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 8
  %3 = bitcast i8** %2 to %struct.CFF_FontRecDictRec_**
  %4 = load %struct.CFF_FontRecDictRec_*, %struct.CFF_FontRecDictRec_** %3, align 8
  %5 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 5
  %6 = load i8**, i8*** %5, align 8
  %7 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 4
  %8 = load i8**, i8*** %7, align 8
  %9 = getelementptr inbounds i8*, i8** %8, i64 5
  %10 = icmp ult i8** %6, %9
  br i1 %10, label %119, label %11

11:                                               ; preds = %1
  %12 = load i8*, i8** %8, align 8
  %13 = load i8, i8* %12, align 1
  switch i8 %13, label %35 [
    i8 30, label %14
    i8 -1, label %17
  ]

14:                                               ; preds = %11
  %15 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %12, i64 0, i64* null) #11
  %16 = ashr i64 %15, 16
  br label %100

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %12, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = shl nuw nsw i64 %20, 16
  %22 = getelementptr inbounds i8, i8* %12, i64 2
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i64
  %25 = shl nuw nsw i64 %24, 8
  %26 = or i64 %25, %21
  %27 = getelementptr inbounds i8, i8* %12, i64 3
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  %30 = or i64 %26, %29
  %31 = add nuw nsw i64 %30, 128
  %32 = lshr i64 %31, 8
  %33 = shl i64 %32, 48
  %34 = ashr exact i64 %33, 48
  br label %100

35:                                               ; preds = %11
  %36 = getelementptr inbounds i8, i8* %12, i64 1
  %37 = zext i8 %13 to i32
  switch i8 %13, label %73 [
    i8 28, label %38
    i8 29, label %51
  ]

38:                                               ; preds = %35
  %39 = getelementptr inbounds i8, i8* %12, i64 2
  %40 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %41 = load i8*, i8** %40, align 8
  %42 = icmp ugt i8* %41, %39
  br i1 %42, label %43, label %119

43:                                               ; preds = %38
  %44 = load i8, i8* %36, align 1
  %45 = zext i8 %44 to i16
  %46 = shl nuw i16 %45, 8
  %47 = load i8, i8* %39, align 1
  %48 = zext i8 %47 to i16
  %49 = or i16 %46, %48
  %50 = sext i16 %49 to i64
  br label %100

51:                                               ; preds = %35
  %52 = getelementptr inbounds i8, i8* %12, i64 4
  %53 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ugt i8* %54, %52
  br i1 %55, label %56, label %119

56:                                               ; preds = %51
  %57 = load i8, i8* %36, align 1
  %58 = zext i8 %57 to i64
  %59 = shl nuw nsw i64 %58, 24
  %60 = getelementptr inbounds i8, i8* %12, i64 2
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i64
  %63 = shl nuw nsw i64 %62, 16
  %64 = or i64 %63, %59
  %65 = getelementptr inbounds i8, i8* %12, i64 3
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  %68 = shl nuw nsw i64 %67, 8
  %69 = or i64 %64, %68
  %70 = load i8, i8* %52, align 1
  %71 = zext i8 %70 to i64
  %72 = or i64 %69, %71
  br label %100

73:                                               ; preds = %35
  %74 = icmp ult i8 %13, -9
  br i1 %74, label %75, label %78

75:                                               ; preds = %73
  %76 = add nsw i32 %37, -139
  %77 = sext i32 %76 to i64
  br label %100

78:                                               ; preds = %73
  %79 = icmp ult i8 %13, -5
  %80 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %81 = load i8*, i8** %80, align 8
  %82 = icmp ule i8* %81, %36
  br i1 %79, label %83, label %92

83:                                               ; preds = %78
  br i1 %82, label %119, label %84

84:                                               ; preds = %83
  %85 = shl nuw nsw i32 %37, 8
  %86 = add nsw i32 %85, -63232
  %87 = load i8, i8* %36, align 1
  %88 = zext i8 %87 to i32
  %89 = or i32 %86, %88
  %90 = add nsw i32 %89, 108
  %91 = sext i32 %90 to i64
  br label %100

92:                                               ; preds = %78
  br i1 %82, label %119, label %93

93:                                               ; preds = %92
  %94 = shl nuw nsw i32 %37, 8
  %95 = load i8, i8* %36, align 1
  %96 = zext i8 %95 to i32
  %97 = sub nsw i32 64148, %94
  %98 = sub nsw i32 %97, %96
  %99 = sext i32 %98 to i64
  br label %100

100:                                              ; preds = %93, %84, %75, %56, %43, %14, %17
  %101 = phi i64 [ %16, %14 ], [ %34, %17 ], [ %50, %43 ], [ %72, %56 ], [ %77, %75 ], [ %91, %84 ], [ %99, %93 ]
  %102 = add i64 %101, -2
  %103 = icmp ugt i64 %102, 14
  br i1 %103, label %119, label %104

104:                                              ; preds = %100
  %105 = trunc i64 %101 to i16
  %106 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %4, i64 0, i32 37
  store i16 %105, i16* %106, align 4
  %107 = bitcast i8*** %5 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i8*** %7 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = sub i64 %108, %110
  %112 = lshr exact i64 %111, 3
  %113 = trunc i64 %112 to i16
  %114 = add i16 %113, -4
  %115 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %4, i64 0, i32 38
  store i16 %114, i16* %115, align 2
  %116 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 9
  store i16 %105, i16* %116, align 8
  %117 = load i16, i16* %115, align 2
  %118 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 10
  store i16 %117, i16* %118, align 2
  br label %119

119:                                              ; preds = %83, %92, %51, %38, %104, %100, %1
  %120 = phi i32 [ 161, %1 ], [ 0, %104 ], [ 3, %100 ], [ 3, %38 ], [ 3, %51 ], [ 3, %92 ], [ 3, %83 ]
  ret i32 %120
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_parse_cid_ros(%struct.CFF_ParserRec_* nocapture readonly) #3 {
  %2 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 8
  %3 = bitcast i8** %2 to %struct.CFF_FontRecDictRec_**
  %4 = load %struct.CFF_FontRecDictRec_*, %struct.CFF_FontRecDictRec_** %3, align 8
  %5 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 4
  %6 = load i8**, i8*** %5, align 8
  %7 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 5
  %8 = load i8**, i8*** %7, align 8
  %9 = getelementptr inbounds i8*, i8** %6, i64 3
  %10 = icmp ult i8** %8, %9
  br i1 %10, label %289, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds i8*, i8** %6, i64 1
  %13 = load i8*, i8** %6, align 8
  %14 = load i8, i8* %13, align 1
  switch i8 %14, label %36 [
    i8 30, label %15
    i8 -1, label %18
  ]

15:                                               ; preds = %11
  %16 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %13, i64 0, i64* null) #11
  %17 = ashr i64 %16, 16
  br label %101

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %13, i64 1
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = shl nuw nsw i64 %21, 16
  %23 = getelementptr inbounds i8, i8* %13, i64 2
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i64
  %26 = shl nuw nsw i64 %25, 8
  %27 = or i64 %26, %22
  %28 = getelementptr inbounds i8, i8* %13, i64 3
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = or i64 %27, %30
  %32 = add nuw nsw i64 %31, 128
  %33 = lshr i64 %32, 8
  %34 = shl i64 %33, 48
  %35 = ashr exact i64 %34, 48
  br label %101

36:                                               ; preds = %11
  %37 = getelementptr inbounds i8, i8* %13, i64 1
  %38 = zext i8 %14 to i32
  switch i8 %14, label %74 [
    i8 28, label %39
    i8 29, label %52
  ]

39:                                               ; preds = %36
  %40 = getelementptr inbounds i8, i8* %13, i64 2
  %41 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %42 = load i8*, i8** %41, align 8
  %43 = icmp ugt i8* %42, %40
  br i1 %43, label %44, label %101

44:                                               ; preds = %39
  %45 = load i8, i8* %37, align 1
  %46 = zext i8 %45 to i16
  %47 = shl nuw i16 %46, 8
  %48 = load i8, i8* %40, align 1
  %49 = zext i8 %48 to i16
  %50 = or i16 %47, %49
  %51 = sext i16 %50 to i64
  br label %101

52:                                               ; preds = %36
  %53 = getelementptr inbounds i8, i8* %13, i64 4
  %54 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %55 = load i8*, i8** %54, align 8
  %56 = icmp ugt i8* %55, %53
  br i1 %56, label %57, label %101

57:                                               ; preds = %52
  %58 = load i8, i8* %37, align 1
  %59 = zext i8 %58 to i64
  %60 = shl nuw nsw i64 %59, 24
  %61 = getelementptr inbounds i8, i8* %13, i64 2
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i64
  %64 = shl nuw nsw i64 %63, 16
  %65 = or i64 %64, %60
  %66 = getelementptr inbounds i8, i8* %13, i64 3
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = shl nuw nsw i64 %68, 8
  %70 = or i64 %65, %69
  %71 = load i8, i8* %53, align 1
  %72 = zext i8 %71 to i64
  %73 = or i64 %70, %72
  br label %101

74:                                               ; preds = %36
  %75 = icmp ult i8 %14, -9
  br i1 %75, label %76, label %79

76:                                               ; preds = %74
  %77 = add nsw i32 %38, -139
  %78 = sext i32 %77 to i64
  br label %101

79:                                               ; preds = %74
  %80 = icmp ult i8 %14, -5
  %81 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %82 = load i8*, i8** %81, align 8
  %83 = icmp ule i8* %82, %37
  br i1 %80, label %84, label %93

84:                                               ; preds = %79
  br i1 %83, label %101, label %85

85:                                               ; preds = %84
  %86 = shl nuw nsw i32 %38, 8
  %87 = add nsw i32 %86, -63232
  %88 = load i8, i8* %37, align 1
  %89 = zext i8 %88 to i32
  %90 = or i32 %87, %89
  %91 = add nsw i32 %90, 108
  %92 = sext i32 %91 to i64
  br label %101

93:                                               ; preds = %79
  br i1 %83, label %101, label %94

94:                                               ; preds = %93
  %95 = shl nuw nsw i32 %38, 8
  %96 = load i8, i8* %37, align 1
  %97 = zext i8 %96 to i32
  %98 = sub nsw i32 64148, %95
  %99 = sub nsw i32 %98, %97
  %100 = sext i32 %99 to i64
  br label %101

101:                                              ; preds = %94, %93, %85, %84, %76, %57, %52, %44, %39, %15, %18
  %102 = phi i64 [ %17, %15 ], [ %35, %18 ], [ %51, %44 ], [ %73, %57 ], [ %78, %76 ], [ %92, %85 ], [ %100, %94 ], [ 0, %39 ], [ 0, %52 ], [ 0, %93 ], [ 0, %84 ]
  %103 = trunc i64 %102 to i32
  %104 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %4, i64 0, i32 26
  store i32 %103, i32* %104, align 4
  %105 = getelementptr inbounds i8*, i8** %6, i64 2
  %106 = load i8*, i8** %12, align 8
  %107 = load i8, i8* %106, align 1
  switch i8 %107, label %129 [
    i8 30, label %108
    i8 -1, label %111
  ]

108:                                              ; preds = %101
  %109 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %106, i64 0, i64* null) #11
  %110 = ashr i64 %109, 16
  br label %194

111:                                              ; preds = %101
  %112 = getelementptr inbounds i8, i8* %106, i64 1
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i64
  %115 = shl nuw nsw i64 %114, 16
  %116 = getelementptr inbounds i8, i8* %106, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = shl nuw nsw i64 %118, 8
  %120 = or i64 %119, %115
  %121 = getelementptr inbounds i8, i8* %106, i64 3
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i64
  %124 = or i64 %120, %123
  %125 = add nuw nsw i64 %124, 128
  %126 = lshr i64 %125, 8
  %127 = shl i64 %126, 48
  %128 = ashr exact i64 %127, 48
  br label %194

129:                                              ; preds = %101
  %130 = getelementptr inbounds i8, i8* %106, i64 1
  %131 = zext i8 %107 to i32
  switch i8 %107, label %167 [
    i8 28, label %132
    i8 29, label %145
  ]

132:                                              ; preds = %129
  %133 = getelementptr inbounds i8, i8* %106, i64 2
  %134 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %135 = load i8*, i8** %134, align 8
  %136 = icmp ugt i8* %135, %133
  br i1 %136, label %137, label %194

137:                                              ; preds = %132
  %138 = load i8, i8* %130, align 1
  %139 = zext i8 %138 to i16
  %140 = shl nuw i16 %139, 8
  %141 = load i8, i8* %133, align 1
  %142 = zext i8 %141 to i16
  %143 = or i16 %140, %142
  %144 = sext i16 %143 to i64
  br label %194

145:                                              ; preds = %129
  %146 = getelementptr inbounds i8, i8* %106, i64 4
  %147 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %148 = load i8*, i8** %147, align 8
  %149 = icmp ugt i8* %148, %146
  br i1 %149, label %150, label %194

150:                                              ; preds = %145
  %151 = load i8, i8* %130, align 1
  %152 = zext i8 %151 to i64
  %153 = shl nuw nsw i64 %152, 24
  %154 = getelementptr inbounds i8, i8* %106, i64 2
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i64
  %157 = shl nuw nsw i64 %156, 16
  %158 = or i64 %157, %153
  %159 = getelementptr inbounds i8, i8* %106, i64 3
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i64
  %162 = shl nuw nsw i64 %161, 8
  %163 = or i64 %158, %162
  %164 = load i8, i8* %146, align 1
  %165 = zext i8 %164 to i64
  %166 = or i64 %163, %165
  br label %194

167:                                              ; preds = %129
  %168 = icmp ult i8 %107, -9
  br i1 %168, label %169, label %172

169:                                              ; preds = %167
  %170 = add nsw i32 %131, -139
  %171 = sext i32 %170 to i64
  br label %194

172:                                              ; preds = %167
  %173 = icmp ult i8 %107, -5
  %174 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %175 = load i8*, i8** %174, align 8
  %176 = icmp ule i8* %175, %130
  br i1 %173, label %177, label %186

177:                                              ; preds = %172
  br i1 %176, label %194, label %178

178:                                              ; preds = %177
  %179 = shl nuw nsw i32 %131, 8
  %180 = add nsw i32 %179, -63232
  %181 = load i8, i8* %130, align 1
  %182 = zext i8 %181 to i32
  %183 = or i32 %180, %182
  %184 = add nsw i32 %183, 108
  %185 = sext i32 %184 to i64
  br label %194

186:                                              ; preds = %172
  br i1 %176, label %194, label %187

187:                                              ; preds = %186
  %188 = shl nuw nsw i32 %131, 8
  %189 = load i8, i8* %130, align 1
  %190 = zext i8 %189 to i32
  %191 = sub nsw i32 64148, %188
  %192 = sub nsw i32 %191, %190
  %193 = sext i32 %192 to i64
  br label %194

194:                                              ; preds = %187, %186, %178, %177, %169, %150, %145, %137, %132, %108, %111
  %195 = phi i64 [ %110, %108 ], [ %128, %111 ], [ %144, %137 ], [ %166, %150 ], [ %171, %169 ], [ %185, %178 ], [ %193, %187 ], [ 0, %132 ], [ 0, %145 ], [ 0, %186 ], [ 0, %177 ]
  %196 = trunc i64 %195 to i32
  %197 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %4, i64 0, i32 27
  store i32 %196, i32* %197, align 8
  %198 = load i8*, i8** %105, align 8
  %199 = load i8, i8* %198, align 1
  switch i8 %199, label %221 [
    i8 30, label %200
    i8 -1, label %203
  ]

200:                                              ; preds = %194
  %201 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %198, i64 0, i64* null) #11
  %202 = ashr i64 %201, 16
  br label %286

203:                                              ; preds = %194
  %204 = getelementptr inbounds i8, i8* %198, i64 1
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i64
  %207 = shl nuw nsw i64 %206, 16
  %208 = getelementptr inbounds i8, i8* %198, i64 2
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = shl nuw nsw i64 %210, 8
  %212 = or i64 %211, %207
  %213 = getelementptr inbounds i8, i8* %198, i64 3
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i64
  %216 = or i64 %212, %215
  %217 = add nuw nsw i64 %216, 128
  %218 = lshr i64 %217, 8
  %219 = shl i64 %218, 48
  %220 = ashr exact i64 %219, 48
  br label %286

221:                                              ; preds = %194
  %222 = getelementptr inbounds i8, i8* %198, i64 1
  %223 = zext i8 %199 to i32
  switch i8 %199, label %259 [
    i8 28, label %224
    i8 29, label %237
  ]

224:                                              ; preds = %221
  %225 = getelementptr inbounds i8, i8* %198, i64 2
  %226 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %227 = load i8*, i8** %226, align 8
  %228 = icmp ugt i8* %227, %225
  br i1 %228, label %229, label %286

229:                                              ; preds = %224
  %230 = load i8, i8* %222, align 1
  %231 = zext i8 %230 to i16
  %232 = shl nuw i16 %231, 8
  %233 = load i8, i8* %225, align 1
  %234 = zext i8 %233 to i16
  %235 = or i16 %232, %234
  %236 = sext i16 %235 to i64
  br label %286

237:                                              ; preds = %221
  %238 = getelementptr inbounds i8, i8* %198, i64 4
  %239 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %240 = load i8*, i8** %239, align 8
  %241 = icmp ugt i8* %240, %238
  br i1 %241, label %242, label %286

242:                                              ; preds = %237
  %243 = load i8, i8* %222, align 1
  %244 = zext i8 %243 to i64
  %245 = shl nuw nsw i64 %244, 24
  %246 = getelementptr inbounds i8, i8* %198, i64 2
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = shl nuw nsw i64 %248, 16
  %250 = or i64 %249, %245
  %251 = getelementptr inbounds i8, i8* %198, i64 3
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i64
  %254 = shl nuw nsw i64 %253, 8
  %255 = or i64 %250, %254
  %256 = load i8, i8* %238, align 1
  %257 = zext i8 %256 to i64
  %258 = or i64 %255, %257
  br label %286

259:                                              ; preds = %221
  %260 = icmp ult i8 %199, -9
  br i1 %260, label %261, label %264

261:                                              ; preds = %259
  %262 = add nsw i32 %223, -139
  %263 = sext i32 %262 to i64
  br label %286

264:                                              ; preds = %259
  %265 = icmp ult i8 %199, -5
  %266 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %267 = load i8*, i8** %266, align 8
  %268 = icmp ule i8* %267, %222
  br i1 %265, label %269, label %278

269:                                              ; preds = %264
  br i1 %268, label %286, label %270

270:                                              ; preds = %269
  %271 = shl nuw nsw i32 %223, 8
  %272 = add nsw i32 %271, -63232
  %273 = load i8, i8* %222, align 1
  %274 = zext i8 %273 to i32
  %275 = or i32 %272, %274
  %276 = add nsw i32 %275, 108
  %277 = sext i32 %276 to i64
  br label %286

278:                                              ; preds = %264
  br i1 %268, label %286, label %279

279:                                              ; preds = %278
  %280 = shl nuw nsw i32 %223, 8
  %281 = load i8, i8* %222, align 1
  %282 = zext i8 %281 to i32
  %283 = sub nsw i32 64148, %280
  %284 = sub nsw i32 %283, %282
  %285 = sext i32 %284 to i64
  br label %286

286:                                              ; preds = %279, %278, %270, %269, %261, %242, %237, %229, %224, %200, %203
  %287 = phi i64 [ %202, %200 ], [ %220, %203 ], [ %236, %229 ], [ %258, %242 ], [ %263, %261 ], [ %277, %270 ], [ %285, %279 ], [ 0, %224 ], [ 0, %237 ], [ 0, %278 ], [ 0, %269 ]
  %288 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %4, i64 0, i32 28
  store i64 %287, i64* %288, align 8
  br label %289

289:                                              ; preds = %1, %286
  %290 = phi i32 [ 0, %286 ], [ 161, %1 ]
  ret i32 %290
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_parse_maxstack(%struct.CFF_ParserRec_* nocapture readonly) #3 {
  %2 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 8
  %3 = bitcast i8** %2 to %struct.CFF_FontRecDictRec_**
  %4 = load %struct.CFF_FontRecDictRec_*, %struct.CFF_FontRecDictRec_** %3, align 8
  %5 = icmp eq %struct.CFF_FontRecDictRec_* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 4
  %8 = load i8**, i8*** %7, align 8
  %9 = load i8*, i8** %8, align 8
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 30
  br i1 %11, label %12, label %14

12:                                               ; preds = %6
  %13 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %9, i64 0, i64* null) #11
  br label %14

14:                                               ; preds = %6, %12
  %15 = getelementptr inbounds %struct.CFF_FontRecDictRec_, %struct.CFF_FontRecDictRec_* %4, i64 0, i32 40
  store i32 513, i32* %15, align 8
  ret i32 0

16:                                               ; preds = %1
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_parse_vsindex(%struct.CFF_ParserRec_* nocapture readonly) #3 {
  %2 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 8
  %3 = bitcast i8** %2 to %struct.CFF_PrivateRec_**
  %4 = load %struct.CFF_PrivateRec_*, %struct.CFF_PrivateRec_** %3, align 8
  %5 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 4
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq %struct.CFF_PrivateRec_* %4, null
  br i1 %7, label %109, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.CFF_PrivateRec_, %struct.CFF_PrivateRec_* %4, i64 0, i32 27
  %10 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %9, align 8
  %11 = icmp eq %struct.CFF_SubFontRec_* %10, null
  br i1 %11, label %109, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %10, i64 0, i32 2, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %109

16:                                               ; preds = %12
  %17 = load i8*, i8** %6, align 8
  %18 = load i8, i8* %17, align 1
  switch i8 %18, label %40 [
    i8 30, label %19
    i8 -1, label %22
  ]

19:                                               ; preds = %16
  %20 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %17, i64 0, i64* null) #11
  %21 = ashr i64 %20, 16
  br label %105

22:                                               ; preds = %16
  %23 = getelementptr inbounds i8, i8* %17, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i64
  %26 = shl nuw nsw i64 %25, 16
  %27 = getelementptr inbounds i8, i8* %17, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  %30 = shl nuw nsw i64 %29, 8
  %31 = or i64 %30, %26
  %32 = getelementptr inbounds i8, i8* %17, i64 3
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i64
  %35 = or i64 %31, %34
  %36 = add nuw nsw i64 %35, 128
  %37 = lshr i64 %36, 8
  %38 = shl i64 %37, 48
  %39 = ashr exact i64 %38, 48
  br label %105

40:                                               ; preds = %16
  %41 = getelementptr inbounds i8, i8* %17, i64 1
  %42 = zext i8 %18 to i32
  switch i8 %18, label %78 [
    i8 28, label %43
    i8 29, label %56
  ]

43:                                               ; preds = %40
  %44 = getelementptr inbounds i8, i8* %17, i64 2
  %45 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %46 = load i8*, i8** %45, align 8
  %47 = icmp ugt i8* %46, %44
  br i1 %47, label %48, label %105

48:                                               ; preds = %43
  %49 = load i8, i8* %41, align 1
  %50 = zext i8 %49 to i16
  %51 = shl nuw i16 %50, 8
  %52 = load i8, i8* %44, align 1
  %53 = zext i8 %52 to i16
  %54 = or i16 %51, %53
  %55 = sext i16 %54 to i64
  br label %105

56:                                               ; preds = %40
  %57 = getelementptr inbounds i8, i8* %17, i64 4
  %58 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %59 = load i8*, i8** %58, align 8
  %60 = icmp ugt i8* %59, %57
  br i1 %60, label %61, label %105

61:                                               ; preds = %56
  %62 = load i8, i8* %41, align 1
  %63 = zext i8 %62 to i64
  %64 = shl nuw nsw i64 %63, 24
  %65 = getelementptr inbounds i8, i8* %17, i64 2
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  %68 = shl nuw nsw i64 %67, 16
  %69 = or i64 %68, %64
  %70 = getelementptr inbounds i8, i8* %17, i64 3
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i64
  %73 = shl nuw nsw i64 %72, 8
  %74 = or i64 %69, %73
  %75 = load i8, i8* %57, align 1
  %76 = zext i8 %75 to i64
  %77 = or i64 %74, %76
  br label %105

78:                                               ; preds = %40
  %79 = icmp ult i8 %18, -9
  br i1 %79, label %80, label %83

80:                                               ; preds = %78
  %81 = add nsw i32 %42, -139
  %82 = sext i32 %81 to i64
  br label %105

83:                                               ; preds = %78
  %84 = icmp ult i8 %18, -5
  %85 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %86 = load i8*, i8** %85, align 8
  %87 = icmp ule i8* %86, %41
  br i1 %84, label %88, label %97

88:                                               ; preds = %83
  br i1 %87, label %105, label %89

89:                                               ; preds = %88
  %90 = shl nuw nsw i32 %42, 8
  %91 = add nsw i32 %90, -63232
  %92 = load i8, i8* %41, align 1
  %93 = zext i8 %92 to i32
  %94 = or i32 %91, %93
  %95 = add nsw i32 %94, 108
  %96 = sext i32 %95 to i64
  br label %105

97:                                               ; preds = %83
  br i1 %87, label %105, label %98

98:                                               ; preds = %97
  %99 = shl nuw nsw i32 %42, 8
  %100 = load i8, i8* %41, align 1
  %101 = zext i8 %100 to i32
  %102 = sub nsw i32 64148, %99
  %103 = sub nsw i32 %102, %101
  %104 = sext i32 %103 to i64
  br label %105

105:                                              ; preds = %98, %97, %89, %88, %80, %61, %56, %48, %43, %19, %22
  %106 = phi i64 [ %21, %19 ], [ %39, %22 ], [ %55, %48 ], [ %77, %61 ], [ %82, %80 ], [ %96, %89 ], [ %104, %98 ], [ 0, %43 ], [ 0, %56 ], [ 0, %97 ], [ 0, %88 ]
  %107 = trunc i64 %106 to i32
  %108 = getelementptr inbounds %struct.CFF_PrivateRec_, %struct.CFF_PrivateRec_* %4, i64 0, i32 26
  store i32 %107, i32* %108, align 8
  br label %109

109:                                              ; preds = %12, %1, %8, %105
  %110 = phi i32 [ 0, %105 ], [ 3, %8 ], [ 3, %1 ], [ 160, %12 ]
  ret i32 %110
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_parse_blend(%struct.CFF_ParserRec_* nocapture) #3 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 8
  %4 = bitcast i8** %3 to %struct.CFF_PrivateRec_**
  %5 = load %struct.CFF_PrivateRec_*, %struct.CFF_PrivateRec_** %4, align 8
  %6 = icmp eq %struct.CFF_PrivateRec_* %5, null
  br i1 %6, label %458, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.CFF_PrivateRec_, %struct.CFF_PrivateRec_* %5, i64 0, i32 27
  %9 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %8, align 8
  %10 = icmp eq %struct.CFF_SubFontRec_* %9, null
  br i1 %10, label %458, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %9, i64 0, i32 2
  %13 = getelementptr inbounds %struct.CFF_PrivateRec_, %struct.CFF_PrivateRec_* %5, i64 0, i32 26
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %9, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %9, i64 0, i32 4
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %struct.CFF_BlendRec_, %struct.CFF_BlendRec_* %12, i64 0, i32 0
  %20 = load i8, i8* %19, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %41, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %9, i64 0, i32 2, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, %14
  br i1 %25, label %26, label %41

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %9, i64 0, i32 2, i32 4
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %16
  br i1 %29, label %30, label %41

30:                                               ; preds = %26
  %31 = icmp eq i32 %16, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %30
  %33 = bitcast i64* %18 to i8*
  %34 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %9, i64 0, i32 2, i32 5
  %35 = bitcast i64** %34 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = zext i32 %16 to i64
  %38 = shl nuw nsw i64 %37, 3
  %39 = tail call i32 @bcmp(i8* %33, i8* %36, i64 %38) #11
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %32, %26, %22, %11
  %42 = tail call i32 @cff_blend_build_vector(%struct.CFF_BlendRec_* %12, i32 %14, i32 %16, i64* %18)
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %458

44:                                               ; preds = %32, %30, %41
  %45 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 5
  %46 = load i8**, i8*** %45, align 8
  %47 = getelementptr inbounds i8*, i8** %46, i64 -1
  %48 = load i8*, i8** %47, align 8
  %49 = load i8, i8* %48, align 1
  switch i8 %49, label %71 [
    i8 30, label %50
    i8 -1, label %53
  ]

50:                                               ; preds = %44
  %51 = tail call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %48, i64 0, i64* null) #11
  %52 = ashr i64 %51, 16
  br label %136

53:                                               ; preds = %44
  %54 = getelementptr inbounds i8, i8* %48, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = shl nuw nsw i64 %56, 16
  %58 = getelementptr inbounds i8, i8* %48, i64 2
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i64
  %61 = shl nuw nsw i64 %60, 8
  %62 = or i64 %61, %57
  %63 = getelementptr inbounds i8, i8* %48, i64 3
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i64
  %66 = or i64 %62, %65
  %67 = add nuw nsw i64 %66, 128
  %68 = lshr i64 %67, 8
  %69 = shl i64 %68, 48
  %70 = ashr exact i64 %69, 48
  br label %136

71:                                               ; preds = %44
  %72 = getelementptr inbounds i8, i8* %48, i64 1
  %73 = zext i8 %49 to i32
  switch i8 %49, label %109 [
    i8 28, label %74
    i8 29, label %87
  ]

74:                                               ; preds = %71
  %75 = getelementptr inbounds i8, i8* %48, i64 2
  %76 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %77 = load i8*, i8** %76, align 8
  %78 = icmp ugt i8* %77, %75
  br i1 %78, label %79, label %136

79:                                               ; preds = %74
  %80 = load i8, i8* %72, align 1
  %81 = zext i8 %80 to i16
  %82 = shl nuw i16 %81, 8
  %83 = load i8, i8* %75, align 1
  %84 = zext i8 %83 to i16
  %85 = or i16 %82, %84
  %86 = sext i16 %85 to i64
  br label %136

87:                                               ; preds = %71
  %88 = getelementptr inbounds i8, i8* %48, i64 4
  %89 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %90 = load i8*, i8** %89, align 8
  %91 = icmp ugt i8* %90, %88
  br i1 %91, label %92, label %136

92:                                               ; preds = %87
  %93 = load i8, i8* %72, align 1
  %94 = zext i8 %93 to i64
  %95 = shl nuw nsw i64 %94, 24
  %96 = getelementptr inbounds i8, i8* %48, i64 2
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = shl nuw nsw i64 %98, 16
  %100 = or i64 %99, %95
  %101 = getelementptr inbounds i8, i8* %48, i64 3
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i64
  %104 = shl nuw nsw i64 %103, 8
  %105 = or i64 %100, %104
  %106 = load i8, i8* %88, align 1
  %107 = zext i8 %106 to i64
  %108 = or i64 %105, %107
  br label %136

109:                                              ; preds = %71
  %110 = icmp ult i8 %49, -9
  br i1 %110, label %111, label %114

111:                                              ; preds = %109
  %112 = add nsw i32 %73, -139
  %113 = sext i32 %112 to i64
  br label %136

114:                                              ; preds = %109
  %115 = icmp ult i8 %49, -5
  %116 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %117 = load i8*, i8** %116, align 8
  %118 = icmp ule i8* %117, %72
  br i1 %115, label %119, label %128

119:                                              ; preds = %114
  br i1 %118, label %136, label %120

120:                                              ; preds = %119
  %121 = shl nuw nsw i32 %73, 8
  %122 = add nsw i32 %121, -63232
  %123 = load i8, i8* %72, align 1
  %124 = zext i8 %123 to i32
  %125 = or i32 %122, %124
  %126 = add nsw i32 %125, 108
  %127 = sext i32 %126 to i64
  br label %136

128:                                              ; preds = %114
  br i1 %118, label %136, label %129

129:                                              ; preds = %128
  %130 = shl nuw nsw i32 %73, 8
  %131 = load i8, i8* %72, align 1
  %132 = zext i8 %131 to i32
  %133 = sub nsw i32 64148, %130
  %134 = sub nsw i32 %133, %132
  %135 = sext i32 %134 to i64
  br label %136

136:                                              ; preds = %129, %128, %120, %119, %111, %92, %87, %79, %74, %50, %53
  %137 = phi i64 [ %52, %50 ], [ %70, %53 ], [ %86, %79 ], [ %108, %92 ], [ %113, %111 ], [ %127, %120 ], [ %135, %129 ], [ 0, %74 ], [ 0, %87 ], [ 0, %128 ], [ 0, %119 ]
  %138 = trunc i64 %137 to i32
  %139 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 6
  %140 = load i32, i32* %139, align 8
  %141 = icmp ult i32 %140, %138
  br i1 %141, label %458, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %9, i64 0, i32 2, i32 2
  %144 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %143, align 8
  %145 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %144, i64 0, i32 2
  %146 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %145, align 8
  %147 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %147) #11
  store i32 0, i32* %2, align 4
  %148 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %9, i64 0, i32 2, i32 6
  %149 = load i32, i32* %148, align 8
  %150 = mul i32 %149, %138
  %151 = load i8**, i8*** %45, align 8
  %152 = getelementptr inbounds i8*, i8** %151, i64 -1
  %153 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 4
  %154 = bitcast i8*** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = ptrtoint i8** %152 to i64
  %157 = sub i64 %156, %155
  %158 = lshr exact i64 %157, 3
  %159 = trunc i64 %158 to i32
  %160 = icmp ugt i32 %150, %159
  br i1 %160, label %161, label %162

161:                                              ; preds = %142
  store i32 161, i32* %2, align 4
  br label %455

162:                                              ; preds = %142
  %163 = mul i32 %138, 5
  %164 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %9, i64 0, i32 7
  %165 = load i32, i32* %164, align 8
  %166 = add i32 %165, %163
  %167 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %9, i64 0, i32 8
  %168 = load i32, i32* %167, align 4
  %169 = icmp ugt i32 %166, %168
  br i1 %169, label %170, label %213

170:                                              ; preds = %162
  %171 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %9, i64 0, i32 5
  %172 = load i8*, i8** %171, align 8
  %173 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %9, i64 0, i32 6
  %174 = load i8*, i8** %173, align 8
  %175 = zext i32 %168 to i64
  %176 = add i32 %168, %163
  %177 = zext i32 %176 to i64
  %178 = call i8* @ft_mem_qrealloc(%struct.FT_MemoryRec_* %146, i64 1, i64 %175, i64 %177, i8* %172, i32* nonnull %2) #11
  store i8* %178, i8** %171, align 8
  %179 = load i32, i32* %2, align 4
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %455

181:                                              ; preds = %170
  %182 = load i32, i32* %164, align 8
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds i8, i8* %178, i64 %183
  store i8* %184, i8** %173, align 8
  %185 = load i32, i32* %167, align 4
  %186 = add i32 %185, %163
  store i32 %186, i32* %167, align 4
  %187 = icmp eq i8* %172, null
  %188 = icmp eq i8* %178, %172
  %189 = or i1 %187, %188
  br i1 %189, label %213, label %190

190:                                              ; preds = %181
  %191 = ptrtoint i8* %178 to i64
  %192 = ptrtoint i8* %172 to i64
  %193 = sub i64 %191, %192
  %194 = load i8**, i8*** %153, align 8
  %195 = load i8**, i8*** %45, align 8
  %196 = icmp ult i8** %194, %195
  br i1 %196, label %197, label %213

197:                                              ; preds = %190, %207
  %198 = phi i8** [ %208, %207 ], [ %195, %190 ]
  %199 = phi i8** [ %209, %207 ], [ %194, %190 ]
  %200 = load i8*, i8** %199, align 8
  %201 = icmp uge i8* %200, %172
  %202 = icmp ult i8* %200, %174
  %203 = and i1 %201, %202
  br i1 %203, label %204, label %207

204:                                              ; preds = %197
  %205 = getelementptr inbounds i8, i8* %200, i64 %193
  store i8* %205, i8** %199, align 8
  %206 = load i8**, i8*** %45, align 8
  br label %207

207:                                              ; preds = %204, %197
  %208 = phi i8** [ %198, %197 ], [ %206, %204 ]
  %209 = getelementptr inbounds i8*, i8** %199, i64 1
  %210 = icmp ult i8** %209, %208
  br i1 %210, label %197, label %211

211:                                              ; preds = %207
  %212 = load i32, i32* %164, align 8
  br label %213

213:                                              ; preds = %211, %190, %181, %162
  %214 = phi i32 [ %212, %211 ], [ %182, %190 ], [ %182, %181 ], [ %165, %162 ]
  %215 = add i32 %214, %163
  store i32 %215, i32* %164, align 8
  %216 = sub i32 %159, %150
  %217 = add i32 %216, %138
  %218 = icmp eq i32 %138, 0
  br i1 %218, label %450, label %219

219:                                              ; preds = %213
  %220 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %9, i64 0, i32 2, i32 7
  %221 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  %222 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %9, i64 0, i32 6
  %223 = bitcast i8** %222 to i64*
  %224 = and i64 %137, 4294967295
  br label %225

225:                                              ; preds = %422, %219
  %226 = phi i64 [ 0, %219 ], [ %446, %422 ]
  %227 = phi i32 [ %217, %219 ], [ %423, %422 ]
  %228 = load i32*, i32** %220, align 8
  %229 = load i8**, i8*** %153, align 8
  %230 = trunc i64 %226 to i32
  %231 = add i32 %216, %230
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds i8*, i8** %229, i64 %232
  %234 = load i8*, i8** %233, align 8
  %235 = load i8, i8* %234, align 1
  switch i8 %235, label %257 [
    i8 30, label %236
    i8 -1, label %239
  ]

236:                                              ; preds = %225
  %237 = call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %234, i64 0, i64* null) #11
  %238 = ashr i64 %237, 16
  br label %310

239:                                              ; preds = %225
  %240 = getelementptr inbounds i8, i8* %234, i64 1
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i64
  %243 = shl nuw nsw i64 %242, 16
  %244 = getelementptr inbounds i8, i8* %234, i64 2
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = shl nuw nsw i64 %246, 8
  %248 = or i64 %247, %243
  %249 = getelementptr inbounds i8, i8* %234, i64 3
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i64
  %252 = or i64 %248, %251
  %253 = add nuw nsw i64 %252, 128
  %254 = lshr i64 %253, 8
  %255 = shl i64 %254, 48
  %256 = ashr exact i64 %255, 48
  br label %310

257:                                              ; preds = %225
  %258 = getelementptr inbounds i8, i8* %234, i64 1
  %259 = zext i8 %235 to i32
  switch i8 %235, label %284 [
    i8 28, label %260
    i8 29, label %272
  ]

260:                                              ; preds = %257
  %261 = getelementptr inbounds i8, i8* %234, i64 2
  %262 = load i8*, i8** %221, align 8
  %263 = icmp ugt i8* %262, %261
  br i1 %263, label %264, label %310

264:                                              ; preds = %260
  %265 = load i8, i8* %258, align 1
  %266 = zext i8 %265 to i16
  %267 = shl nuw i16 %266, 8
  %268 = load i8, i8* %261, align 1
  %269 = zext i8 %268 to i16
  %270 = or i16 %267, %269
  %271 = sext i16 %270 to i64
  br label %310

272:                                              ; preds = %257
  %273 = getelementptr inbounds i8, i8* %234, i64 4
  %274 = load i8*, i8** %221, align 8
  %275 = icmp ugt i8* %274, %273
  br i1 %275, label %276, label %310

276:                                              ; preds = %272
  %277 = getelementptr inbounds i8, i8* %234, i64 3
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i64
  %280 = shl nuw nsw i64 %279, 8
  %281 = load i8, i8* %273, align 1
  %282 = zext i8 %281 to i64
  %283 = or i64 %280, %282
  br label %310

284:                                              ; preds = %257
  %285 = icmp ult i8 %235, -9
  br i1 %285, label %286, label %289

286:                                              ; preds = %284
  %287 = add nsw i32 %259, -139
  %288 = sext i32 %287 to i64
  br label %310

289:                                              ; preds = %284
  %290 = icmp ult i8 %235, -5
  %291 = load i8*, i8** %221, align 8
  %292 = icmp ule i8* %291, %258
  br i1 %290, label %293, label %302

293:                                              ; preds = %289
  br i1 %292, label %310, label %294

294:                                              ; preds = %293
  %295 = shl nuw nsw i32 %259, 8
  %296 = add nsw i32 %295, -63232
  %297 = load i8, i8* %258, align 1
  %298 = zext i8 %297 to i32
  %299 = or i32 %296, %298
  %300 = add nsw i32 %299, 108
  %301 = sext i32 %300 to i64
  br label %310

302:                                              ; preds = %289
  br i1 %292, label %310, label %303

303:                                              ; preds = %302
  %304 = shl nuw nsw i32 %259, 8
  %305 = load i8, i8* %258, align 1
  %306 = zext i8 %305 to i32
  %307 = sub nsw i32 64148, %304
  %308 = sub nsw i32 %307, %306
  %309 = sext i32 %308 to i64
  br label %310

310:                                              ; preds = %303, %302, %294, %293, %286, %276, %272, %264, %260, %239, %236
  %311 = phi i64 [ %238, %236 ], [ %256, %239 ], [ %271, %264 ], [ %283, %276 ], [ %288, %286 ], [ %301, %294 ], [ %309, %303 ], [ 0, %260 ], [ 0, %272 ], [ 0, %302 ], [ 0, %293 ]
  %312 = trunc i64 %311 to i32
  %313 = shl i32 %312, 16
  %314 = load i32, i32* %148, align 8
  %315 = icmp ugt i32 %314, 1
  br i1 %315, label %316, label %422

316:                                              ; preds = %310, %413
  %317 = phi i32 [ %414, %413 ], [ %314, %310 ]
  %318 = phi i32* [ %322, %413 ], [ %228, %310 ]
  %319 = phi i32 [ %419, %413 ], [ %313, %310 ]
  %320 = phi i32 [ %420, %413 ], [ 1, %310 ]
  %321 = phi i32 [ %324, %413 ], [ %227, %310 ]
  %322 = getelementptr inbounds i32, i32* %318, i64 1
  %323 = load i8**, i8*** %153, align 8
  %324 = add i32 %321, 1
  %325 = zext i32 %321 to i64
  %326 = getelementptr inbounds i8*, i8** %323, i64 %325
  %327 = load i8*, i8** %326, align 8
  %328 = load i8, i8* %327, align 1
  switch i8 %328, label %351 [
    i8 30, label %329
    i8 -1, label %333
  ]

329:                                              ; preds = %316
  %330 = call fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* %0, i8* %327, i64 0, i64* null) #11
  %331 = ashr i64 %330, 16
  %332 = load i32, i32* %148, align 8
  br label %413

333:                                              ; preds = %316
  %334 = getelementptr inbounds i8, i8* %327, i64 1
  %335 = load i8, i8* %334, align 1
  %336 = zext i8 %335 to i64
  %337 = shl nuw nsw i64 %336, 16
  %338 = getelementptr inbounds i8, i8* %327, i64 2
  %339 = load i8, i8* %338, align 1
  %340 = zext i8 %339 to i64
  %341 = shl nuw nsw i64 %340, 8
  %342 = or i64 %341, %337
  %343 = getelementptr inbounds i8, i8* %327, i64 3
  %344 = load i8, i8* %343, align 1
  %345 = zext i8 %344 to i64
  %346 = or i64 %342, %345
  %347 = add nuw nsw i64 %346, 128
  %348 = lshr i64 %347, 8
  %349 = shl i64 %348, 48
  %350 = ashr exact i64 %349, 48
  br label %413

351:                                              ; preds = %316
  %352 = getelementptr inbounds i8, i8* %327, i64 1
  %353 = zext i8 %328 to i32
  switch i8 %328, label %387 [
    i8 28, label %354
    i8 29, label %366
  ]

354:                                              ; preds = %351
  %355 = getelementptr inbounds i8, i8* %327, i64 2
  %356 = load i8*, i8** %221, align 8
  %357 = icmp ugt i8* %356, %355
  br i1 %357, label %358, label %413

358:                                              ; preds = %354
  %359 = load i8, i8* %352, align 1
  %360 = zext i8 %359 to i16
  %361 = shl nuw i16 %360, 8
  %362 = load i8, i8* %355, align 1
  %363 = zext i8 %362 to i16
  %364 = or i16 %361, %363
  %365 = sext i16 %364 to i64
  br label %413

366:                                              ; preds = %351
  %367 = getelementptr inbounds i8, i8* %327, i64 4
  %368 = load i8*, i8** %221, align 8
  %369 = icmp ugt i8* %368, %367
  br i1 %369, label %370, label %413

370:                                              ; preds = %366
  %371 = load i8, i8* %352, align 1
  %372 = zext i8 %371 to i64
  %373 = shl nuw nsw i64 %372, 24
  %374 = getelementptr inbounds i8, i8* %327, i64 2
  %375 = load i8, i8* %374, align 1
  %376 = zext i8 %375 to i64
  %377 = shl nuw nsw i64 %376, 16
  %378 = or i64 %377, %373
  %379 = getelementptr inbounds i8, i8* %327, i64 3
  %380 = load i8, i8* %379, align 1
  %381 = zext i8 %380 to i64
  %382 = shl nuw nsw i64 %381, 8
  %383 = or i64 %378, %382
  %384 = load i8, i8* %367, align 1
  %385 = zext i8 %384 to i64
  %386 = or i64 %383, %385
  br label %413

387:                                              ; preds = %351
  %388 = icmp ult i8 %328, -9
  br i1 %388, label %389, label %392

389:                                              ; preds = %387
  %390 = add nsw i32 %353, -139
  %391 = sext i32 %390 to i64
  br label %413

392:                                              ; preds = %387
  %393 = icmp ult i8 %328, -5
  %394 = load i8*, i8** %221, align 8
  %395 = icmp ule i8* %394, %352
  br i1 %393, label %396, label %405

396:                                              ; preds = %392
  br i1 %395, label %413, label %397

397:                                              ; preds = %396
  %398 = shl nuw nsw i32 %353, 8
  %399 = add nsw i32 %398, -63232
  %400 = load i8, i8* %352, align 1
  %401 = zext i8 %400 to i32
  %402 = or i32 %399, %401
  %403 = add nsw i32 %402, 108
  %404 = sext i32 %403 to i64
  br label %413

405:                                              ; preds = %392
  br i1 %395, label %413, label %406

406:                                              ; preds = %405
  %407 = shl nuw nsw i32 %353, 8
  %408 = load i8, i8* %352, align 1
  %409 = zext i8 %408 to i32
  %410 = sub nsw i32 64148, %407
  %411 = sub nsw i32 %410, %409
  %412 = sext i32 %411 to i64
  br label %413

413:                                              ; preds = %406, %405, %397, %396, %389, %370, %366, %358, %354, %333, %329
  %414 = phi i32 [ %332, %329 ], [ %317, %333 ], [ %317, %358 ], [ %317, %370 ], [ %317, %389 ], [ %317, %397 ], [ %317, %406 ], [ %317, %354 ], [ %317, %366 ], [ %317, %405 ], [ %317, %396 ]
  %415 = phi i64 [ %331, %329 ], [ %350, %333 ], [ %365, %358 ], [ %386, %370 ], [ %391, %389 ], [ %404, %397 ], [ %412, %406 ], [ 0, %354 ], [ 0, %366 ], [ 0, %405 ], [ 0, %396 ]
  %416 = load i32, i32* %322, align 4
  %417 = trunc i64 %415 to i32
  %418 = mul i32 %416, %417
  %419 = add i32 %418, %319
  %420 = add nuw i32 %320, 1
  %421 = icmp ult i32 %420, %414
  br i1 %421, label %316, label %422

422:                                              ; preds = %413, %310
  %423 = phi i32 [ %227, %310 ], [ %324, %413 ]
  %424 = phi i32 [ %313, %310 ], [ %419, %413 ]
  %425 = load i64, i64* %223, align 8
  %426 = load i8**, i8*** %153, align 8
  %427 = getelementptr inbounds i8*, i8** %426, i64 %232
  %428 = bitcast i8** %427 to i64*
  store i64 %425, i64* %428, align 8
  %429 = load i8*, i8** %222, align 8
  %430 = getelementptr inbounds i8, i8* %429, i64 1
  store i8* %430, i8** %222, align 8
  store i8 -1, i8* %429, align 1
  %431 = lshr i32 %424, 24
  %432 = trunc i32 %431 to i8
  %433 = load i8*, i8** %222, align 8
  %434 = getelementptr inbounds i8, i8* %433, i64 1
  store i8* %434, i8** %222, align 8
  store i8 %432, i8* %433, align 1
  %435 = lshr i32 %424, 16
  %436 = trunc i32 %435 to i8
  %437 = load i8*, i8** %222, align 8
  %438 = getelementptr inbounds i8, i8* %437, i64 1
  store i8* %438, i8** %222, align 8
  store i8 %436, i8* %437, align 1
  %439 = lshr i32 %424, 8
  %440 = trunc i32 %439 to i8
  %441 = load i8*, i8** %222, align 8
  %442 = getelementptr inbounds i8, i8* %441, i64 1
  store i8* %442, i8** %222, align 8
  store i8 %440, i8* %441, align 1
  %443 = trunc i32 %424 to i8
  %444 = load i8*, i8** %222, align 8
  %445 = getelementptr inbounds i8, i8* %444, i64 1
  store i8* %445, i8** %222, align 8
  store i8 %443, i8* %444, align 1
  %446 = add nuw nsw i64 %226, 1
  %447 = icmp eq i64 %446, %224
  br i1 %447, label %448, label %225

448:                                              ; preds = %422
  %449 = load i32, i32* %2, align 4
  br label %450

450:                                              ; preds = %448, %213
  %451 = phi i32 [ %449, %448 ], [ 0, %213 ]
  %452 = load i8**, i8*** %153, align 8
  %453 = zext i32 %217 to i64
  %454 = getelementptr inbounds i8*, i8** %452, i64 %453
  store i8** %454, i8*** %45, align 8
  br label %455

455:                                              ; preds = %161, %170, %450
  %456 = phi i32 [ %179, %170 ], [ %451, %450 ], [ 161, %161 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %147) #11
  %457 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %9, i64 0, i32 2, i32 1
  store i8 1, i8* %457, align 1
  br label %458

458:                                              ; preds = %136, %1, %7, %41, %455
  %459 = phi i32 [ %42, %41 ], [ %456, %455 ], [ 3, %7 ], [ 3, %1 ], [ 3, %136 ]
  ret i32 %459
}

declare hidden zeroext i8 @FT_Matrix_Check(%struct.FT_Matrix_*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @cff_parse_real(%struct.CFF_ParserRec_* nocapture readonly, i8* readonly, i64, i64*) unnamed_addr #3 {
  %5 = icmp ne i64* %3, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  store i64 0, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %4
  %8 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %0, i64 0, i32 2
  br label %9

9:                                                ; preds = %7, %54
  %10 = phi i8* [ %1, %7 ], [ %38, %54 ]
  %11 = phi i32 [ 4, %7 ], [ %43, %54 ]
  %12 = phi i64 [ 0, %7 ], [ %58, %54 ]
  %13 = phi i32 [ 0, %7 ], [ %26, %54 ]
  %14 = phi i64 [ 0, %7 ], [ %31, %54 ]
  %15 = phi i64 [ 0, %7 ], [ %55, %54 ]
  br label %16

16:                                               ; preds = %9, %50
  %17 = phi i8* [ %38, %50 ], [ %10, %9 ]
  %18 = phi i32 [ %43, %50 ], [ %11, %9 ]
  %19 = phi i64 [ 0, %50 ], [ %12, %9 ]
  %20 = phi i32 [ %26, %50 ], [ %13, %9 ]
  %21 = phi i64 [ %31, %50 ], [ %14, %9 ]
  %22 = icmp sgt i64 %19, 214748363
  br label %23

23:                                               ; preds = %37, %16
  %24 = phi i8* [ %17, %16 ], [ %38, %37 ]
  %25 = phi i32 [ %18, %16 ], [ %43, %37 ]
  %26 = phi i32 [ %20, %16 ], [ 1, %37 ]
  %27 = phi i64 [ %21, %16 ], [ %31, %37 ]
  br label %28

28:                                               ; preds = %23, %48
  %29 = phi i8* [ %38, %48 ], [ %24, %23 ]
  %30 = phi i32 [ %43, %48 ], [ %25, %23 ]
  %31 = phi i64 [ %49, %48 ], [ %27, %23 ]
  %32 = icmp eq i32 %30, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds i8, i8* %29, i64 1
  %35 = load i8*, i8** %8, align 8
  %36 = icmp ugt i8* %35, %34
  br i1 %36, label %37, label %246

37:                                               ; preds = %33, %28
  %38 = phi i8* [ %34, %33 ], [ %29, %28 ]
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = lshr i32 %40, %30
  %42 = and i32 %41, 15
  %43 = sub i32 4, %30
  %44 = icmp eq i32 %42, 14
  br i1 %44, label %23, label %45

45:                                               ; preds = %37
  %46 = icmp ugt i32 %42, 9
  br i1 %46, label %59, label %47

47:                                               ; preds = %45
  br i1 %22, label %48, label %50

48:                                               ; preds = %47
  %49 = add nsw i64 %31, 1
  br label %28

50:                                               ; preds = %47
  %51 = icmp ne i32 %42, 0
  %52 = icmp ne i64 %19, 0
  %53 = or i1 %52, %51
  br i1 %53, label %54, label %16

54:                                               ; preds = %50
  %55 = add nuw nsw i64 %15, 1
  %56 = mul nsw i64 %19, 10
  %57 = zext i32 %42 to i64
  %58 = add nsw i64 %56, %57
  br label %9

59:                                               ; preds = %45
  %60 = icmp eq i32 %42, 10
  br i1 %60, label %61, label %108

61:                                               ; preds = %59, %100
  %62 = phi i8 [ %90, %100 ], [ %39, %59 ]
  %63 = phi i8* [ %91, %100 ], [ %38, %59 ]
  %64 = phi i32 [ %95, %100 ], [ %43, %59 ]
  %65 = phi i64 [ 0, %100 ], [ %19, %59 ]
  %66 = phi i64 [ %101, %100 ], [ %31, %59 ]
  %67 = phi i64 [ %73, %100 ], [ 0, %59 ]
  br label %68

68:                                               ; preds = %61, %103
  %69 = phi i8 [ %90, %103 ], [ %62, %61 ]
  %70 = phi i8* [ %91, %103 ], [ %63, %61 ]
  %71 = phi i32 [ %95, %103 ], [ %64, %61 ]
  %72 = phi i64 [ %107, %103 ], [ %65, %61 ]
  %73 = phi i64 [ %104, %103 ], [ %67, %61 ]
  %74 = icmp ne i64 %72, 0
  %75 = icmp slt i64 %72, 214748364
  %76 = icmp slt i64 %73, 9
  %77 = and i1 %75, %76
  br label %78

78:                                               ; preds = %68, %102
  %79 = phi i8 [ %90, %102 ], [ %69, %68 ]
  %80 = phi i8* [ %91, %102 ], [ %70, %68 ]
  %81 = phi i32 [ %95, %102 ], [ %71, %68 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds i8, i8* %80, i64 1
  %85 = load i8*, i8** %8, align 8
  %86 = icmp ugt i8* %85, %84
  br i1 %86, label %87, label %246

87:                                               ; preds = %83
  %88 = load i8, i8* %84, align 1
  br label %89

89:                                               ; preds = %87, %78
  %90 = phi i8 [ %88, %87 ], [ %79, %78 ]
  %91 = phi i8* [ %84, %87 ], [ %80, %78 ]
  %92 = zext i8 %90 to i32
  %93 = lshr i32 %92, %81
  %94 = and i32 %93, 15
  %95 = sub i32 4, %81
  %96 = icmp ugt i32 %94, 9
  br i1 %96, label %108, label %97

97:                                               ; preds = %89
  %98 = icmp ne i32 %94, 0
  %99 = or i1 %74, %98
  br i1 %99, label %102, label %100

100:                                              ; preds = %97
  %101 = add nsw i64 %66, -1
  br label %61

102:                                              ; preds = %97
  br i1 %77, label %103, label %78

103:                                              ; preds = %102
  %104 = add nsw i64 %73, 1
  %105 = mul nsw i64 %72, 10
  %106 = zext i32 %94 to i64
  %107 = add nsw i64 %105, %106
  br label %68

108:                                              ; preds = %89, %59
  %109 = phi i8 [ %39, %59 ], [ %90, %89 ]
  %110 = phi i8* [ %38, %59 ], [ %91, %89 ]
  %111 = phi i32 [ %42, %59 ], [ %94, %89 ]
  %112 = phi i32 [ %43, %59 ], [ %95, %89 ]
  %113 = phi i64 [ %19, %59 ], [ %72, %89 ]
  %114 = phi i64 [ %31, %59 ], [ %66, %89 ]
  %115 = phi i64 [ 0, %59 ], [ %73, %89 ]
  %116 = icmp eq i32 %111, 12
  %117 = add nsw i32 %111, -11
  %118 = icmp ult i32 %117, 2
  br i1 %118, label %119, label %150

119:                                              ; preds = %108, %139
  %120 = phi i8 [ %133, %139 ], [ %109, %108 ]
  %121 = phi i8* [ %134, %139 ], [ %110, %108 ]
  %122 = phi i32 [ %140, %139 ], [ %112, %108 ]
  %123 = phi i64 [ %145, %139 ], [ 0, %108 ]
  %124 = phi i32 [ %146, %139 ], [ 0, %108 ]
  %125 = icmp eq i32 %122, 0
  br i1 %125, label %132, label %126

126:                                              ; preds = %119
  %127 = getelementptr inbounds i8, i8* %121, i64 1
  %128 = load i8*, i8** %8, align 8
  %129 = icmp ugt i8* %128, %127
  br i1 %129, label %130, label %246

130:                                              ; preds = %126
  %131 = load i8, i8* %127, align 1
  br label %132

132:                                              ; preds = %130, %119
  %133 = phi i8 [ %131, %130 ], [ %120, %119 ]
  %134 = phi i8* [ %127, %130 ], [ %121, %119 ]
  %135 = zext i8 %133 to i32
  %136 = lshr i32 %135, %122
  %137 = and i32 %136, 15
  %138 = icmp ugt i32 %137, 9
  br i1 %138, label %147, label %139

139:                                              ; preds = %132
  %140 = sub i32 4, %122
  %141 = icmp sgt i64 %123, 1000
  %142 = mul nsw i64 %123, 10
  %143 = zext i32 %137 to i64
  %144 = add nsw i64 %142, %143
  %145 = select i1 %141, i64 %123, i64 %144
  %146 = select i1 %141, i32 1, i32 %124
  br label %119

147:                                              ; preds = %132
  %148 = sub nsw i64 0, %123
  %149 = select i1 %116, i64 %148, i64 %123
  br label %150

150:                                              ; preds = %147, %108
  %151 = phi i64 [ 0, %108 ], [ %149, %147 ]
  %152 = phi i32 [ 0, %108 ], [ %124, %147 ]
  %153 = icmp eq i64 %113, 0
  br i1 %153, label %246, label %154

154:                                              ; preds = %150
  %155 = icmp eq i32 %152, 0
  br i1 %155, label %157, label %156

156:                                              ; preds = %154
  br i1 %116, label %251, label %246

157:                                              ; preds = %154
  %158 = add nsw i64 %114, %2
  %159 = add nsw i64 %158, %151
  br i1 %5, label %160, label %209

160:                                              ; preds = %157
  %161 = add nsw i64 %115, %15
  %162 = add nsw i64 %159, %15
  %163 = icmp slt i64 %161, 6
  br i1 %163, label %164, label %194

164:                                              ; preds = %160
  %165 = icmp sgt i64 %113, 32767
  br i1 %165, label %166, label %170

166:                                              ; preds = %164
  %167 = tail call i64 @FT_DivFix(i64 %113, i64 10) #11
  %168 = sub i64 1, %161
  %169 = add i64 %168, %162
  store i64 %169, i64* %3, align 8
  br label %246

170:                                              ; preds = %164
  %171 = icmp sgt i64 %162, 0
  br i1 %171, label %172, label %188

172:                                              ; preds = %170
  %173 = icmp slt i64 %162, 5
  %174 = select i1 %173, i64 %162, i64 5
  %175 = sub nsw i64 %174, %161
  %176 = icmp sgt i64 %175, 0
  br i1 %176, label %177, label %186

177:                                              ; preds = %172
  %178 = sub nsw i64 %162, %174
  %179 = getelementptr inbounds [10 x i64], [10 x i64]* @power_tens, i64 0, i64 %175
  %180 = load i64, i64* %179, align 8
  %181 = mul nsw i64 %180, %113
  %182 = icmp sgt i64 %181, 32767
  br i1 %182, label %183, label %190

183:                                              ; preds = %177
  %184 = udiv i64 %181, 10
  %185 = add nsw i64 %178, 1
  br label %190

186:                                              ; preds = %172
  %187 = sub nsw i64 %162, %161
  br label %190

188:                                              ; preds = %170
  %189 = sub nsw i64 %162, %161
  br label %190

190:                                              ; preds = %186, %183, %177, %188
  %191 = phi i64 [ %113, %188 ], [ %184, %183 ], [ %181, %177 ], [ %113, %186 ]
  %192 = phi i64 [ %189, %188 ], [ %185, %183 ], [ %178, %177 ], [ %187, %186 ]
  %193 = shl i64 %191, 16
  store i64 %192, i64* %3, align 8
  br label %246

194:                                              ; preds = %160
  %195 = add nsw i64 %161, -5
  %196 = getelementptr inbounds [10 x i64], [10 x i64]* @power_tens, i64 0, i64 %195
  %197 = load i64, i64* %196, align 8
  %198 = sdiv i64 %113, %197
  %199 = icmp sgt i64 %198, 32767
  br i1 %199, label %200, label %206

200:                                              ; preds = %194
  %201 = add nsw i64 %161, -4
  %202 = getelementptr inbounds [10 x i64], [10 x i64]* @power_tens, i64 0, i64 %201
  %203 = load i64, i64* %202, align 8
  %204 = tail call i64 @FT_DivFix(i64 %113, i64 %203) #11
  %205 = add nsw i64 %162, -4
  store i64 %205, i64* %3, align 8
  br label %246

206:                                              ; preds = %194
  %207 = tail call i64 @FT_DivFix(i64 %113, i64 %197) #11
  %208 = add nsw i64 %162, -5
  store i64 %208, i64* %3, align 8
  br label %246

209:                                              ; preds = %157
  %210 = add nsw i64 %159, %15
  %211 = sub nsw i64 %115, %159
  %212 = icmp sgt i64 %210, 5
  br i1 %212, label %246, label %213

213:                                              ; preds = %209
  %214 = icmp slt i64 %210, -5
  br i1 %214, label %251, label %215

215:                                              ; preds = %213
  %216 = icmp slt i64 %210, 0
  br i1 %216, label %217, label %223

217:                                              ; preds = %215
  %218 = sub nsw i64 0, %210
  %219 = getelementptr inbounds [10 x i64], [10 x i64]* @power_tens, i64 0, i64 %218
  %220 = load i64, i64* %219, align 8
  %221 = sdiv i64 %113, %220
  %222 = add i64 %115, %15
  br label %223

223:                                              ; preds = %217, %215
  %224 = phi i64 [ %221, %217 ], [ %113, %215 ]
  %225 = phi i64 [ %222, %217 ], [ %211, %215 ]
  %226 = icmp eq i64 %225, 10
  %227 = sdiv i64 %224, 10
  %228 = select i1 %226, i64 %227, i64 %224
  %229 = select i1 %226, i64 9, i64 %225
  %230 = icmp sgt i64 %229, 0
  br i1 %230, label %231, label %238

231:                                              ; preds = %223
  %232 = getelementptr inbounds [10 x i64], [10 x i64]* @power_tens, i64 0, i64 %229
  %233 = load i64, i64* %232, align 8
  %234 = sdiv i64 %228, %233
  %235 = icmp sgt i64 %234, 32767
  br i1 %235, label %246, label %236

236:                                              ; preds = %231
  %237 = tail call i64 @FT_DivFix(i64 %228, i64 %233) #11
  br label %246

238:                                              ; preds = %223
  %239 = sub nsw i64 0, %229
  %240 = getelementptr inbounds [10 x i64], [10 x i64]* @power_tens, i64 0, i64 %239
  %241 = load i64, i64* %240, align 8
  %242 = mul nsw i64 %241, %228
  %243 = icmp sgt i64 %242, 32767
  %244 = shl i64 %242, 16
  %245 = select i1 %243, i64 2147483647, i64 %244
  br label %246

246:                                              ; preds = %33, %83, %126, %156, %238, %209, %150, %200, %206, %166, %190, %236, %231, %251
  %247 = phi i64 [ 0, %251 ], [ %167, %166 ], [ %193, %190 ], [ %204, %200 ], [ %207, %206 ], [ 0, %231 ], [ %237, %236 ], [ 0, %150 ], [ 2147483647, %156 ], [ 2147483647, %209 ], [ %245, %238 ], [ 0, %126 ], [ 0, %83 ], [ 0, %33 ]
  %248 = icmp eq i32 %26, 0
  %249 = sub nsw i64 0, %247
  %250 = select i1 %248, i64 %247, i64 %249
  ret i64 %250

251:                                              ; preds = %156, %213
  br label %246
}

declare i64 @FT_DivFix(i64, i64) local_unnamed_addr #6

declare i64 @FT_RoundFix(i64) local_unnamed_addr #6

declare hidden i8* @ft_mem_qrealloc(%struct.FT_MemoryRec_*, i64, i64, i64, i8*, i32*) local_unnamed_addr #6

declare i64 @FT_MulDiv(i64, i64, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_get_glyph_data(%struct.TT_FaceRec_* nocapture readonly, i32, i8**, i64* nocapture) #3 {
  %5 = alloca %struct.FT_Data_, align 8
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 30
  %7 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %7, i64 0, i32 4
  %9 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %8, align 8
  %10 = icmp eq %struct.FT_Incremental_InterfaceRec_* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %4
  %12 = bitcast %struct.FT_Data_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %9, i64 0, i32 0
  %14 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %14, i64 0, i32 0
  %16 = load i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)** %15, align 8
  %17 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %9, i64 0, i32 1
  %18 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %17, align 8
  %19 = call i32 %16(%struct.FT_IncrementalRec_* %18, i32 %1, %struct.FT_Data_* nonnull %5) #11
  %20 = bitcast %struct.FT_Data_* %5 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast i8** %2 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %5, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = sext i32 %24 to i64
  store i64 %25, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  br label %32

26:                                               ; preds = %4
  %27 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 44, i32 0
  %28 = bitcast i8** %27 to %struct.CFF_FontRec_**
  %29 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %28, align 8
  %30 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %29, i64 0, i32 16
  %31 = tail call fastcc i32 @cff_index_access_element(%struct.CFF_IndexRec_* %30, i32 %1, i8** %2, i64* %3)
  br label %32

32:                                               ; preds = %26, %11
  %33 = phi i32 [ %19, %11 ], [ %31, %26 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define internal void @cff_free_glyph_data(%struct.TT_FaceRec_* nocapture readonly, i8**, i64) #3 {
  %4 = alloca %struct.FT_Data_, align 8
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 30
  %6 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %6, i64 0, i32 4
  %8 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %7, align 8
  %9 = icmp eq %struct.FT_Incremental_InterfaceRec_* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %3
  %11 = bitcast %struct.FT_Data_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  %12 = bitcast i8** %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %struct.FT_Data_* %4 to i64*
  store i64 %13, i64* %14, align 8
  %15 = trunc i64 %2 to i32
  %16 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %4, i64 0, i32 1
  store i32 %15, i32* %16, align 8
  %17 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %8, i64 0, i32 0
  %18 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %17, align 8
  %19 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %18, i64 0, i32 1
  %20 = load void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)** %19, align 8
  %21 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %8, i64 0, i32 1
  %22 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %21, align 8
  call void %20(%struct.FT_IncrementalRec_* %22, %struct.FT_Data_* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  br label %33

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 44, i32 0
  %25 = bitcast i8** %24 to %struct.CFF_FontRec_**
  %26 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %25, align 8
  %27 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %26, i64 0, i32 16, i32 8
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %33

30:                                               ; preds = %23
  %31 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %26, i64 0, i32 16, i32 0
  %32 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %31, align 8
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %32, i8** %1) #11
  br label %33

33:                                               ; preds = %30, %23, %10
  ret void
}

declare void @FT_Outline_Transform(%struct.FT_Outline_*, %struct.FT_Matrix_*) local_unnamed_addr #6

declare void @FT_Outline_Translate(%struct.FT_Outline_*, i64, i64) local_unnamed_addr #6

declare void @FT_Outline_Get_CBox(%struct.FT_Outline_*, %struct.FT_BBox_*) local_unnamed_addr #6

declare hidden void @ft_synthesize_vertical_metrics(%struct.FT_Glyph_Metrics_*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @cff_index_access_element(%struct.CFF_IndexRec_* readonly, i32, i8**, i64* nocapture) unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = icmp eq %struct.CFF_IndexRec_* %0, null
  br i1 %7, label %250, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp ugt i32 %10, %1
  br i1 %11, label %12, label %250

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 0
  %14 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %13, align 8
  %15 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 7
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %16, null
  br i1 %17, label %18, label %180

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 4
  %20 = load i8, i8* %19, align 8
  %21 = zext i8 %20 to i32
  %22 = mul i32 %21, %1
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = zext i32 %27 to i64
  %29 = add i64 %25, %28
  %30 = add i64 %29, %23
  %31 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %14, i64 %30) #11
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %250

33:                                               ; preds = %18
  %34 = bitcast i32* %6 to [4 x i8]*
  %35 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %13, align 8
  %36 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #11
  store i32 -1431655766, i32* %6, align 4
  %37 = load i8, i8* %19, align 8
  %38 = zext i8 %37 to i64
  %39 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %35, i8* nonnull %36, i64 %38) #11
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #11
  br label %250

42:                                               ; preds = %33
  %43 = load i8, i8* %19, align 8
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #11
  br label %204

46:                                               ; preds = %42
  %47 = zext i8 %43 to i64
  %48 = add nsw i64 %47, -1
  %49 = and i64 %47, 3
  %50 = icmp ult i64 %48, 3
  br i1 %50, label %83, label %51

51:                                               ; preds = %46
  %52 = sub nsw i64 %47, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %80, %53 ]
  %55 = phi i64 [ 0, %51 ], [ %79, %53 ]
  %56 = phi i64 [ %52, %51 ], [ %81, %53 ]
  %57 = shl i64 %55, 8
  %58 = getelementptr inbounds [4 x i8], [4 x i8]* %34, i64 0, i64 %54
  %59 = load i8, i8* %58, align 4
  %60 = zext i8 %59 to i64
  %61 = or i64 %57, %60
  %62 = or i64 %54, 1
  %63 = shl i64 %61, 8
  %64 = getelementptr inbounds [4 x i8], [4 x i8]* %34, i64 0, i64 %62
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i64
  %67 = or i64 %63, %66
  %68 = or i64 %54, 2
  %69 = shl i64 %67, 8
  %70 = getelementptr inbounds [4 x i8], [4 x i8]* %34, i64 0, i64 %68
  %71 = load i8, i8* %70, align 2
  %72 = zext i8 %71 to i64
  %73 = or i64 %69, %72
  %74 = or i64 %54, 3
  %75 = shl i64 %73, 8
  %76 = getelementptr inbounds [4 x i8], [4 x i8]* %34, i64 0, i64 %74
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i64
  %79 = or i64 %75, %78
  %80 = add nuw nsw i64 %54, 4
  %81 = add i64 %56, -4
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %46
  %84 = phi i64 [ undef, %46 ], [ %79, %53 ]
  %85 = phi i64 [ 0, %46 ], [ %80, %53 ]
  %86 = phi i64 [ 0, %46 ], [ %79, %53 ]
  %87 = icmp eq i64 %49, 0
  br i1 %87, label %100, label %88

88:                                               ; preds = %83, %88
  %89 = phi i64 [ %97, %88 ], [ %85, %83 ]
  %90 = phi i64 [ %96, %88 ], [ %86, %83 ]
  %91 = phi i64 [ %98, %88 ], [ %49, %83 ]
  %92 = shl i64 %90, 8
  %93 = getelementptr inbounds [4 x i8], [4 x i8]* %34, i64 0, i64 %89
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i64
  %96 = or i64 %92, %95
  %97 = add nuw nsw i64 %89, 1
  %98 = add i64 %91, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %88, !llvm.loop !16

100:                                              ; preds = %88, %83
  %101 = phi i64 [ %84, %83 ], [ %96, %88 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #11
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %204, label %103

103:                                              ; preds = %100
  %104 = bitcast i32* %5 to [4 x i8]*
  %105 = bitcast i32* %5 to i8*
  br label %106

106:                                              ; preds = %178, %103
  %107 = phi i8 [ %179, %178 ], [ %43, %103 ]
  %108 = phi i32 [ %109, %178 ], [ %1, %103 ]
  %109 = add nuw i32 %108, 1
  %110 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105) #11
  store i32 -1431655766, i32* %5, align 4
  %111 = zext i8 %107 to i64
  %112 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %110, i8* nonnull %105, i64 %111) #11
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %154

114:                                              ; preds = %106
  %115 = load i8, i8* %19, align 8
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %154, label %117

117:                                              ; preds = %114
  %118 = zext i8 %115 to i64
  %119 = add nsw i64 %118, -1
  %120 = and i64 %118, 3
  %121 = icmp ult i64 %119, 3
  br i1 %121, label %155, label %122

122:                                              ; preds = %117
  %123 = sub nsw i64 %118, %120
  br label %124

124:                                              ; preds = %124, %122
  %125 = phi i64 [ 0, %122 ], [ %151, %124 ]
  %126 = phi i64 [ 0, %122 ], [ %150, %124 ]
  %127 = phi i64 [ %123, %122 ], [ %152, %124 ]
  %128 = shl i64 %126, 8
  %129 = getelementptr inbounds [4 x i8], [4 x i8]* %104, i64 0, i64 %125
  %130 = load i8, i8* %129, align 4
  %131 = zext i8 %130 to i64
  %132 = or i64 %128, %131
  %133 = or i64 %125, 1
  %134 = shl i64 %132, 8
  %135 = getelementptr inbounds [4 x i8], [4 x i8]* %104, i64 0, i64 %133
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i64
  %138 = or i64 %134, %137
  %139 = or i64 %125, 2
  %140 = shl i64 %138, 8
  %141 = getelementptr inbounds [4 x i8], [4 x i8]* %104, i64 0, i64 %139
  %142 = load i8, i8* %141, align 2
  %143 = zext i8 %142 to i64
  %144 = or i64 %140, %143
  %145 = or i64 %125, 3
  %146 = shl i64 %144, 8
  %147 = getelementptr inbounds [4 x i8], [4 x i8]* %104, i64 0, i64 %145
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i64
  %150 = or i64 %146, %149
  %151 = add nuw nsw i64 %125, 4
  %152 = add i64 %127, -4
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %155, label %124

154:                                              ; preds = %106, %114
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #11
  br label %175

155:                                              ; preds = %124, %117
  %156 = phi i64 [ undef, %117 ], [ %150, %124 ]
  %157 = phi i64 [ 0, %117 ], [ %151, %124 ]
  %158 = phi i64 [ 0, %117 ], [ %150, %124 ]
  %159 = icmp eq i64 %120, 0
  br i1 %159, label %172, label %160

160:                                              ; preds = %155, %160
  %161 = phi i64 [ %169, %160 ], [ %157, %155 ]
  %162 = phi i64 [ %168, %160 ], [ %158, %155 ]
  %163 = phi i64 [ %170, %160 ], [ %120, %155 ]
  %164 = shl i64 %162, 8
  %165 = getelementptr inbounds [4 x i8], [4 x i8]* %104, i64 0, i64 %161
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i64
  %168 = or i64 %164, %167
  %169 = add nuw nsw i64 %161, 1
  %170 = add i64 %163, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %160, !llvm.loop !17

172:                                              ; preds = %160, %155
  %173 = phi i64 [ %156, %155 ], [ %168, %160 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #11
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %194

175:                                              ; preds = %154, %172
  %176 = load i32, i32* %9, align 4
  %177 = icmp ult i32 %109, %176
  br i1 %177, label %178, label %204

178:                                              ; preds = %175
  %179 = load i8, i8* %19, align 8
  br label %106

180:                                              ; preds = %12
  %181 = zext i32 %1 to i64
  %182 = getelementptr inbounds i64, i64* %16, i64 %181
  %183 = load i64, i64* %182, align 8
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %204, label %185

185:                                              ; preds = %180, %191
  %186 = phi i64 [ %187, %191 ], [ %181, %180 ]
  %187 = add nuw nsw i64 %186, 1
  %188 = getelementptr inbounds i64, i64* %16, i64 %187
  %189 = load i64, i64* %188, align 8
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %191, label %194

191:                                              ; preds = %185
  %192 = trunc i64 %187 to i32
  %193 = icmp eq i32 %10, %192
  br i1 %193, label %204, label %185

194:                                              ; preds = %185, %172
  %195 = phi i64 [ %101, %172 ], [ %183, %185 ]
  %196 = phi i64 [ %173, %172 ], [ %189, %185 ]
  %197 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %14, i64 0, i32 1
  %198 = load i64, i64* %197, align 8
  %199 = add i64 %198, 1
  %200 = icmp ugt i64 %196, %199
  br i1 %200, label %201, label %209

201:                                              ; preds = %194
  %202 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 5
  %203 = load i64, i64* %202, align 8
  br label %219

204:                                              ; preds = %191, %175, %100, %45, %180
  %205 = phi i64 [ %183, %180 ], [ 0, %100 ], [ 0, %45 ], [ %101, %175 ], [ %183, %191 ]
  %206 = phi i32 [ 0, %180 ], [ 0, %100 ], [ 0, %45 ], [ %112, %175 ], [ 0, %191 ]
  %207 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %14, i64 0, i32 1
  %208 = load i64, i64* %207, align 8
  br label %209

209:                                              ; preds = %204, %194
  %210 = phi i64 [ %198, %194 ], [ %208, %204 ]
  %211 = phi i64 [ %196, %194 ], [ 0, %204 ]
  %212 = phi i64 [ %195, %194 ], [ %205, %204 ]
  %213 = phi i32 [ 0, %194 ], [ %206, %204 ]
  %214 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 5
  %215 = load i64, i64* %214, align 8
  %216 = add i64 %210, 1
  %217 = sub i64 %216, %211
  %218 = icmp ugt i64 %215, %217
  br i1 %218, label %219, label %225

219:                                              ; preds = %201, %209
  %220 = phi i64 [ %199, %201 ], [ %216, %209 ]
  %221 = phi i64 [ %203, %201 ], [ %215, %209 ]
  %222 = phi i64 [ %195, %201 ], [ %212, %209 ]
  %223 = phi i32 [ 0, %201 ], [ %213, %209 ]
  %224 = sub i64 %220, %221
  br label %225

225:                                              ; preds = %219, %209
  %226 = phi i64 [ %222, %219 ], [ %212, %209 ]
  %227 = phi i32 [ %223, %219 ], [ %213, %209 ]
  %228 = phi i64 [ %224, %219 ], [ %211, %209 ]
  %229 = icmp ne i64 %226, 0
  %230 = icmp ugt i64 %228, %226
  %231 = and i1 %229, %230
  br i1 %231, label %232, label %249

232:                                              ; preds = %225
  %233 = sub i64 %228, %226
  store i64 %233, i64* %3, align 8
  %234 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 8
  %235 = load i8*, i8** %234, align 8
  %236 = icmp eq i8* %235, null
  br i1 %236, label %240, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds i8, i8* %235, i64 %226
  %239 = getelementptr inbounds i8, i8* %238, i64 -1
  store i8* %239, i8** %2, align 8
  br label %250

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 5
  %242 = load i64, i64* %241, align 8
  %243 = add i64 %226, -1
  %244 = add i64 %243, %242
  %245 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %14, i64 %244) #11
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %250

247:                                              ; preds = %240
  %248 = call i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_* %14, i64 %233, i8** %2) #11
  br label %250

249:                                              ; preds = %225
  store i8* null, i8** %2, align 8
  store i64 0, i64* %3, align 8
  br label %250

250:                                              ; preds = %247, %249, %237, %18, %41, %240, %4, %8
  %251 = phi i32 [ %245, %240 ], [ %31, %18 ], [ %39, %41 ], [ 6, %4 ], [ 6, %8 ], [ %248, %247 ], [ %227, %237 ], [ %227, %249 ]
  ret i32 %251
}

declare hidden i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_*, i64, i8**) local_unnamed_addr #6

declare hidden i32 @FT_Stream_Read(%struct.FT_StreamRec_*, i8*, i64) local_unnamed_addr #6

declare hidden void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_*, i8**) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @cff_make_private_dict(%struct.CFF_SubFontRec_* nocapture readonly, %struct.PS_PrivateRec_*) unnamed_addr #3 {
  %3 = bitcast %struct.PS_PrivateRec_* %1 to i8*
  %4 = bitcast %struct.CFF_SubFontRec_* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 224, i1 false)
  %5 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 2
  store i8 %6, i8* %7, align 8
  %8 = icmp eq i8 %6, 0
  br i1 %8, label %126, label %9

9:                                                ; preds = %2
  %10 = zext i8 %6 to i64
  %11 = icmp ult i8 %6, 4
  br i1 %11, label %84, label %12

12:                                               ; preds = %9
  %13 = getelementptr %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 0
  %14 = bitcast i16* %13 to i8*
  %15 = shl nuw nsw i64 %10, 1
  %16 = add nuw nsw i64 %15, 12
  %17 = getelementptr i8, i8* %3, i64 %16
  %18 = getelementptr %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 4, i64 0
  %19 = bitcast i64* %18 to i8*
  %20 = shl nuw nsw i64 %10, 3
  %21 = add nuw nsw i64 %20, 336
  %22 = getelementptr i8, i8* %4, i64 %21
  %23 = icmp ugt i8* %22, %14
  %24 = icmp ugt i8* %17, %19
  %25 = and i1 %23, %24
  br i1 %25, label %84, label %26

26:                                               ; preds = %12
  %27 = and i64 %10, 252
  %28 = add nsw i64 %27, -4
  %29 = lshr exact i64 %28, 2
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, 1
  %32 = icmp eq i64 %28, 0
  br i1 %32, label %66, label %33

33:                                               ; preds = %26
  %34 = sub nuw nsw i64 %30, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %63, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %64, %35 ]
  %38 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 4, i64 %36
  %39 = bitcast i64* %38 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 8, !alias.scope !18
  %41 = getelementptr inbounds i64, i64* %38, i64 2
  %42 = bitcast i64* %41 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 8, !alias.scope !18
  %44 = trunc <2 x i64> %40 to <2 x i16>
  %45 = trunc <2 x i64> %43 to <2 x i16>
  %46 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 %36
  %47 = bitcast i16* %46 to <2 x i16>*
  store <2 x i16> %44, <2 x i16>* %47, align 2, !alias.scope !21, !noalias !18
  %48 = getelementptr inbounds i16, i16* %46, i64 2
  %49 = bitcast i16* %48 to <2 x i16>*
  store <2 x i16> %45, <2 x i16>* %49, align 2, !alias.scope !21, !noalias !18
  %50 = or i64 %36, 4
  %51 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 4, i64 %50
  %52 = bitcast i64* %51 to <2 x i64>*
  %53 = load <2 x i64>, <2 x i64>* %52, align 8, !alias.scope !18
  %54 = getelementptr inbounds i64, i64* %51, i64 2
  %55 = bitcast i64* %54 to <2 x i64>*
  %56 = load <2 x i64>, <2 x i64>* %55, align 8, !alias.scope !18
  %57 = trunc <2 x i64> %53 to <2 x i16>
  %58 = trunc <2 x i64> %56 to <2 x i16>
  %59 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 %50
  %60 = bitcast i16* %59 to <2 x i16>*
  store <2 x i16> %57, <2 x i16>* %60, align 2, !alias.scope !21, !noalias !18
  %61 = getelementptr inbounds i16, i16* %59, i64 2
  %62 = bitcast i16* %61 to <2 x i16>*
  store <2 x i16> %58, <2 x i16>* %62, align 2, !alias.scope !21, !noalias !18
  %63 = add i64 %36, 8
  %64 = add i64 %37, -2
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %35, !llvm.loop !23

66:                                               ; preds = %35, %26
  %67 = phi i64 [ 0, %26 ], [ %63, %35 ]
  %68 = icmp eq i64 %31, 0
  br i1 %68, label %82, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 4, i64 %67
  %71 = bitcast i64* %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !18
  %73 = getelementptr inbounds i64, i64* %70, i64 2
  %74 = bitcast i64* %73 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8, !alias.scope !18
  %76 = trunc <2 x i64> %72 to <2 x i16>
  %77 = trunc <2 x i64> %75 to <2 x i16>
  %78 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 %67
  %79 = bitcast i16* %78 to <2 x i16>*
  store <2 x i16> %76, <2 x i16>* %79, align 2, !alias.scope !21, !noalias !18
  %80 = getelementptr inbounds i16, i16* %78, i64 2
  %81 = bitcast i16* %80 to <2 x i16>*
  store <2 x i16> %77, <2 x i16>* %81, align 2, !alias.scope !21, !noalias !18
  br label %82

82:                                               ; preds = %66, %69
  %83 = icmp eq i64 %27, %10
  br i1 %83, label %126, label %84

84:                                               ; preds = %82, %12, %9
  %85 = phi i64 [ 0, %12 ], [ 0, %9 ], [ %27, %82 ]
  %86 = xor i64 %85, -1
  %87 = add nsw i64 %86, %10
  %88 = and i64 %10, 3
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %100, label %90

90:                                               ; preds = %84, %90
  %91 = phi i64 [ %97, %90 ], [ %85, %84 ]
  %92 = phi i64 [ %98, %90 ], [ %88, %84 ]
  %93 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 4, i64 %91
  %94 = load i64, i64* %93, align 8
  %95 = trunc i64 %94 to i16
  %96 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 %91
  store i16 %95, i16* %96, align 2
  %97 = add nuw nsw i64 %91, 1
  %98 = add i64 %92, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %90, !llvm.loop !24

100:                                              ; preds = %90, %84
  %101 = phi i64 [ %85, %84 ], [ %97, %90 ]
  %102 = icmp ult i64 %87, 3
  br i1 %102, label %126, label %103

103:                                              ; preds = %100, %103
  %104 = phi i64 [ %124, %103 ], [ %101, %100 ]
  %105 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 4, i64 %104
  %106 = load i64, i64* %105, align 8
  %107 = trunc i64 %106 to i16
  %108 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 %104
  store i16 %107, i16* %108, align 2
  %109 = add nuw nsw i64 %104, 1
  %110 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 4, i64 %109
  %111 = load i64, i64* %110, align 8
  %112 = trunc i64 %111 to i16
  %113 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 %109
  store i16 %112, i16* %113, align 2
  %114 = add nuw nsw i64 %104, 2
  %115 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 4, i64 %114
  %116 = load i64, i64* %115, align 8
  %117 = trunc i64 %116 to i16
  %118 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 %114
  store i16 %117, i16* %118, align 2
  %119 = add nuw nsw i64 %104, 3
  %120 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 4, i64 %119
  %121 = load i64, i64* %120, align 8
  %122 = trunc i64 %121 to i16
  %123 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 %119
  store i16 %122, i16* %123, align 2
  %124 = add nuw nsw i64 %104, 4
  %125 = icmp eq i64 %124, %10
  br i1 %125, label %126, label %103, !llvm.loop !25

126:                                              ; preds = %100, %103, %82, %2
  %127 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 1
  %128 = load i8, i8* %127, align 1
  %129 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 3
  store i8 %128, i8* %129, align 1
  %130 = icmp eq i8 %128, 0
  br i1 %130, label %248, label %131

131:                                              ; preds = %126
  %132 = zext i8 %128 to i64
  %133 = icmp ult i8 %128, 4
  br i1 %133, label %206, label %134

134:                                              ; preds = %131
  %135 = getelementptr %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 0
  %136 = bitcast i16* %135 to i8*
  %137 = shl nuw nsw i64 %132, 1
  %138 = add nuw nsw i64 %137, 40
  %139 = getelementptr i8, i8* %3, i64 %138
  %140 = getelementptr %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 5, i64 0
  %141 = bitcast i64* %140 to i8*
  %142 = shl nuw nsw i64 %132, 3
  %143 = add nuw nsw i64 %142, 448
  %144 = getelementptr i8, i8* %4, i64 %143
  %145 = icmp ugt i8* %144, %136
  %146 = icmp ugt i8* %139, %141
  %147 = and i1 %145, %146
  br i1 %147, label %206, label %148

148:                                              ; preds = %134
  %149 = and i64 %132, 252
  %150 = add nsw i64 %149, -4
  %151 = lshr exact i64 %150, 2
  %152 = add nuw nsw i64 %151, 1
  %153 = and i64 %152, 1
  %154 = icmp eq i64 %150, 0
  br i1 %154, label %188, label %155

155:                                              ; preds = %148
  %156 = sub nuw nsw i64 %152, %153
  br label %157

157:                                              ; preds = %157, %155
  %158 = phi i64 [ 0, %155 ], [ %185, %157 ]
  %159 = phi i64 [ %156, %155 ], [ %186, %157 ]
  %160 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 5, i64 %158
  %161 = bitcast i64* %160 to <2 x i64>*
  %162 = load <2 x i64>, <2 x i64>* %161, align 8, !alias.scope !26
  %163 = getelementptr inbounds i64, i64* %160, i64 2
  %164 = bitcast i64* %163 to <2 x i64>*
  %165 = load <2 x i64>, <2 x i64>* %164, align 8, !alias.scope !26
  %166 = trunc <2 x i64> %162 to <2 x i16>
  %167 = trunc <2 x i64> %165 to <2 x i16>
  %168 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 %158
  %169 = bitcast i16* %168 to <2 x i16>*
  store <2 x i16> %166, <2 x i16>* %169, align 2, !alias.scope !29, !noalias !26
  %170 = getelementptr inbounds i16, i16* %168, i64 2
  %171 = bitcast i16* %170 to <2 x i16>*
  store <2 x i16> %167, <2 x i16>* %171, align 2, !alias.scope !29, !noalias !26
  %172 = or i64 %158, 4
  %173 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 5, i64 %172
  %174 = bitcast i64* %173 to <2 x i64>*
  %175 = load <2 x i64>, <2 x i64>* %174, align 8, !alias.scope !26
  %176 = getelementptr inbounds i64, i64* %173, i64 2
  %177 = bitcast i64* %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 8, !alias.scope !26
  %179 = trunc <2 x i64> %175 to <2 x i16>
  %180 = trunc <2 x i64> %178 to <2 x i16>
  %181 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 %172
  %182 = bitcast i16* %181 to <2 x i16>*
  store <2 x i16> %179, <2 x i16>* %182, align 2, !alias.scope !29, !noalias !26
  %183 = getelementptr inbounds i16, i16* %181, i64 2
  %184 = bitcast i16* %183 to <2 x i16>*
  store <2 x i16> %180, <2 x i16>* %184, align 2, !alias.scope !29, !noalias !26
  %185 = add i64 %158, 8
  %186 = add i64 %159, -2
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %157, !llvm.loop !31

188:                                              ; preds = %157, %148
  %189 = phi i64 [ 0, %148 ], [ %185, %157 ]
  %190 = icmp eq i64 %153, 0
  br i1 %190, label %204, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 5, i64 %189
  %193 = bitcast i64* %192 to <2 x i64>*
  %194 = load <2 x i64>, <2 x i64>* %193, align 8, !alias.scope !26
  %195 = getelementptr inbounds i64, i64* %192, i64 2
  %196 = bitcast i64* %195 to <2 x i64>*
  %197 = load <2 x i64>, <2 x i64>* %196, align 8, !alias.scope !26
  %198 = trunc <2 x i64> %194 to <2 x i16>
  %199 = trunc <2 x i64> %197 to <2 x i16>
  %200 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 %189
  %201 = bitcast i16* %200 to <2 x i16>*
  store <2 x i16> %198, <2 x i16>* %201, align 2, !alias.scope !29, !noalias !26
  %202 = getelementptr inbounds i16, i16* %200, i64 2
  %203 = bitcast i16* %202 to <2 x i16>*
  store <2 x i16> %199, <2 x i16>* %203, align 2, !alias.scope !29, !noalias !26
  br label %204

204:                                              ; preds = %188, %191
  %205 = icmp eq i64 %149, %132
  br i1 %205, label %248, label %206

206:                                              ; preds = %204, %134, %131
  %207 = phi i64 [ 0, %134 ], [ 0, %131 ], [ %149, %204 ]
  %208 = xor i64 %207, -1
  %209 = add nsw i64 %208, %132
  %210 = and i64 %132, 3
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %222, label %212

212:                                              ; preds = %206, %212
  %213 = phi i64 [ %219, %212 ], [ %207, %206 ]
  %214 = phi i64 [ %220, %212 ], [ %210, %206 ]
  %215 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 5, i64 %213
  %216 = load i64, i64* %215, align 8
  %217 = trunc i64 %216 to i16
  %218 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 %213
  store i16 %217, i16* %218, align 2
  %219 = add nuw nsw i64 %213, 1
  %220 = add i64 %214, -1
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %222, label %212, !llvm.loop !32

222:                                              ; preds = %212, %206
  %223 = phi i64 [ %207, %206 ], [ %219, %212 ]
  %224 = icmp ult i64 %209, 3
  br i1 %224, label %248, label %225

225:                                              ; preds = %222, %225
  %226 = phi i64 [ %246, %225 ], [ %223, %222 ]
  %227 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 5, i64 %226
  %228 = load i64, i64* %227, align 8
  %229 = trunc i64 %228 to i16
  %230 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 %226
  store i16 %229, i16* %230, align 2
  %231 = add nuw nsw i64 %226, 1
  %232 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 5, i64 %231
  %233 = load i64, i64* %232, align 8
  %234 = trunc i64 %233 to i16
  %235 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 %231
  store i16 %234, i16* %235, align 2
  %236 = add nuw nsw i64 %226, 2
  %237 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 5, i64 %236
  %238 = load i64, i64* %237, align 8
  %239 = trunc i64 %238 to i16
  %240 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 %236
  store i16 %239, i16* %240, align 2
  %241 = add nuw nsw i64 %226, 3
  %242 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 5, i64 %241
  %243 = load i64, i64* %242, align 8
  %244 = trunc i64 %243 to i16
  %245 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 %241
  store i16 %244, i16* %245, align 2
  %246 = add nuw nsw i64 %226, 4
  %247 = icmp eq i64 %246, %132
  br i1 %247, label %248, label %225, !llvm.loop !33

248:                                              ; preds = %222, %225, %204, %126
  %249 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 2
  %250 = load i8, i8* %249, align 2
  %251 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 4
  store i8 %250, i8* %251, align 2
  %252 = icmp eq i8 %250, 0
  br i1 %252, label %370, label %253

253:                                              ; preds = %248
  %254 = zext i8 %250 to i64
  %255 = icmp ult i8 %250, 4
  br i1 %255, label %328, label %256

256:                                              ; preds = %253
  %257 = getelementptr %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 0
  %258 = bitcast i16* %257 to i8*
  %259 = shl nuw nsw i64 %254, 1
  %260 = add nuw nsw i64 %259, 60
  %261 = getelementptr i8, i8* %3, i64 %260
  %262 = getelementptr %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 6, i64 0
  %263 = bitcast i64* %262 to i8*
  %264 = shl nuw nsw i64 %254, 3
  %265 = add nuw nsw i64 %264, 528
  %266 = getelementptr i8, i8* %4, i64 %265
  %267 = icmp ugt i8* %266, %258
  %268 = icmp ugt i8* %261, %263
  %269 = and i1 %267, %268
  br i1 %269, label %328, label %270

270:                                              ; preds = %256
  %271 = and i64 %254, 252
  %272 = add nsw i64 %271, -4
  %273 = lshr exact i64 %272, 2
  %274 = add nuw nsw i64 %273, 1
  %275 = and i64 %274, 1
  %276 = icmp eq i64 %272, 0
  br i1 %276, label %310, label %277

277:                                              ; preds = %270
  %278 = sub nuw nsw i64 %274, %275
  br label %279

279:                                              ; preds = %279, %277
  %280 = phi i64 [ 0, %277 ], [ %307, %279 ]
  %281 = phi i64 [ %278, %277 ], [ %308, %279 ]
  %282 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 6, i64 %280
  %283 = bitcast i64* %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !alias.scope !34
  %285 = getelementptr inbounds i64, i64* %282, i64 2
  %286 = bitcast i64* %285 to <2 x i64>*
  %287 = load <2 x i64>, <2 x i64>* %286, align 8, !alias.scope !34
  %288 = trunc <2 x i64> %284 to <2 x i16>
  %289 = trunc <2 x i64> %287 to <2 x i16>
  %290 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 %280
  %291 = bitcast i16* %290 to <2 x i16>*
  store <2 x i16> %288, <2 x i16>* %291, align 2, !alias.scope !37, !noalias !34
  %292 = getelementptr inbounds i16, i16* %290, i64 2
  %293 = bitcast i16* %292 to <2 x i16>*
  store <2 x i16> %289, <2 x i16>* %293, align 2, !alias.scope !37, !noalias !34
  %294 = or i64 %280, 4
  %295 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 6, i64 %294
  %296 = bitcast i64* %295 to <2 x i64>*
  %297 = load <2 x i64>, <2 x i64>* %296, align 8, !alias.scope !34
  %298 = getelementptr inbounds i64, i64* %295, i64 2
  %299 = bitcast i64* %298 to <2 x i64>*
  %300 = load <2 x i64>, <2 x i64>* %299, align 8, !alias.scope !34
  %301 = trunc <2 x i64> %297 to <2 x i16>
  %302 = trunc <2 x i64> %300 to <2 x i16>
  %303 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 %294
  %304 = bitcast i16* %303 to <2 x i16>*
  store <2 x i16> %301, <2 x i16>* %304, align 2, !alias.scope !37, !noalias !34
  %305 = getelementptr inbounds i16, i16* %303, i64 2
  %306 = bitcast i16* %305 to <2 x i16>*
  store <2 x i16> %302, <2 x i16>* %306, align 2, !alias.scope !37, !noalias !34
  %307 = add i64 %280, 8
  %308 = add i64 %281, -2
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %310, label %279, !llvm.loop !39

310:                                              ; preds = %279, %270
  %311 = phi i64 [ 0, %270 ], [ %307, %279 ]
  %312 = icmp eq i64 %275, 0
  br i1 %312, label %326, label %313

313:                                              ; preds = %310
  %314 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 6, i64 %311
  %315 = bitcast i64* %314 to <2 x i64>*
  %316 = load <2 x i64>, <2 x i64>* %315, align 8, !alias.scope !34
  %317 = getelementptr inbounds i64, i64* %314, i64 2
  %318 = bitcast i64* %317 to <2 x i64>*
  %319 = load <2 x i64>, <2 x i64>* %318, align 8, !alias.scope !34
  %320 = trunc <2 x i64> %316 to <2 x i16>
  %321 = trunc <2 x i64> %319 to <2 x i16>
  %322 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 %311
  %323 = bitcast i16* %322 to <2 x i16>*
  store <2 x i16> %320, <2 x i16>* %323, align 2, !alias.scope !37, !noalias !34
  %324 = getelementptr inbounds i16, i16* %322, i64 2
  %325 = bitcast i16* %324 to <2 x i16>*
  store <2 x i16> %321, <2 x i16>* %325, align 2, !alias.scope !37, !noalias !34
  br label %326

326:                                              ; preds = %310, %313
  %327 = icmp eq i64 %271, %254
  br i1 %327, label %370, label %328

328:                                              ; preds = %326, %256, %253
  %329 = phi i64 [ 0, %256 ], [ 0, %253 ], [ %271, %326 ]
  %330 = xor i64 %329, -1
  %331 = add nsw i64 %330, %254
  %332 = and i64 %254, 3
  %333 = icmp eq i64 %332, 0
  br i1 %333, label %344, label %334

334:                                              ; preds = %328, %334
  %335 = phi i64 [ %341, %334 ], [ %329, %328 ]
  %336 = phi i64 [ %342, %334 ], [ %332, %328 ]
  %337 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 6, i64 %335
  %338 = load i64, i64* %337, align 8
  %339 = trunc i64 %338 to i16
  %340 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 %335
  store i16 %339, i16* %340, align 2
  %341 = add nuw nsw i64 %335, 1
  %342 = add i64 %336, -1
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %344, label %334, !llvm.loop !40

344:                                              ; preds = %334, %328
  %345 = phi i64 [ %329, %328 ], [ %341, %334 ]
  %346 = icmp ult i64 %331, 3
  br i1 %346, label %370, label %347

347:                                              ; preds = %344, %347
  %348 = phi i64 [ %368, %347 ], [ %345, %344 ]
  %349 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 6, i64 %348
  %350 = load i64, i64* %349, align 8
  %351 = trunc i64 %350 to i16
  %352 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 %348
  store i16 %351, i16* %352, align 2
  %353 = add nuw nsw i64 %348, 1
  %354 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 6, i64 %353
  %355 = load i64, i64* %354, align 8
  %356 = trunc i64 %355 to i16
  %357 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 %353
  store i16 %356, i16* %357, align 2
  %358 = add nuw nsw i64 %348, 2
  %359 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 6, i64 %358
  %360 = load i64, i64* %359, align 8
  %361 = trunc i64 %360 to i16
  %362 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 %358
  store i16 %361, i16* %362, align 2
  %363 = add nuw nsw i64 %348, 3
  %364 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 6, i64 %363
  %365 = load i64, i64* %364, align 8
  %366 = trunc i64 %365 to i16
  %367 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 %363
  store i16 %366, i16* %367, align 2
  %368 = add nuw nsw i64 %348, 4
  %369 = icmp eq i64 %368, %254
  br i1 %369, label %370, label %347, !llvm.loop !41

370:                                              ; preds = %344, %347, %326, %248
  %371 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 3
  %372 = load i8, i8* %371, align 1
  %373 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 5
  store i8 %372, i8* %373, align 1
  %374 = icmp eq i8 %372, 0
  br i1 %374, label %492, label %375

375:                                              ; preds = %370
  %376 = zext i8 %372 to i64
  %377 = icmp ult i8 %372, 4
  br i1 %377, label %450, label %378

378:                                              ; preds = %375
  %379 = getelementptr %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 0
  %380 = bitcast i16* %379 to i8*
  %381 = shl nuw nsw i64 %376, 1
  %382 = add nuw nsw i64 %381, 88
  %383 = getelementptr i8, i8* %3, i64 %382
  %384 = getelementptr %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 7, i64 0
  %385 = bitcast i64* %384 to i8*
  %386 = shl nuw nsw i64 %376, 3
  %387 = add nuw nsw i64 %386, 640
  %388 = getelementptr i8, i8* %4, i64 %387
  %389 = icmp ugt i8* %388, %380
  %390 = icmp ugt i8* %383, %385
  %391 = and i1 %389, %390
  br i1 %391, label %450, label %392

392:                                              ; preds = %378
  %393 = and i64 %376, 252
  %394 = add nsw i64 %393, -4
  %395 = lshr exact i64 %394, 2
  %396 = add nuw nsw i64 %395, 1
  %397 = and i64 %396, 1
  %398 = icmp eq i64 %394, 0
  br i1 %398, label %432, label %399

399:                                              ; preds = %392
  %400 = sub nuw nsw i64 %396, %397
  br label %401

401:                                              ; preds = %401, %399
  %402 = phi i64 [ 0, %399 ], [ %429, %401 ]
  %403 = phi i64 [ %400, %399 ], [ %430, %401 ]
  %404 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 7, i64 %402
  %405 = bitcast i64* %404 to <2 x i64>*
  %406 = load <2 x i64>, <2 x i64>* %405, align 8, !alias.scope !42
  %407 = getelementptr inbounds i64, i64* %404, i64 2
  %408 = bitcast i64* %407 to <2 x i64>*
  %409 = load <2 x i64>, <2 x i64>* %408, align 8, !alias.scope !42
  %410 = trunc <2 x i64> %406 to <2 x i16>
  %411 = trunc <2 x i64> %409 to <2 x i16>
  %412 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 %402
  %413 = bitcast i16* %412 to <2 x i16>*
  store <2 x i16> %410, <2 x i16>* %413, align 2, !alias.scope !45, !noalias !42
  %414 = getelementptr inbounds i16, i16* %412, i64 2
  %415 = bitcast i16* %414 to <2 x i16>*
  store <2 x i16> %411, <2 x i16>* %415, align 2, !alias.scope !45, !noalias !42
  %416 = or i64 %402, 4
  %417 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 7, i64 %416
  %418 = bitcast i64* %417 to <2 x i64>*
  %419 = load <2 x i64>, <2 x i64>* %418, align 8, !alias.scope !42
  %420 = getelementptr inbounds i64, i64* %417, i64 2
  %421 = bitcast i64* %420 to <2 x i64>*
  %422 = load <2 x i64>, <2 x i64>* %421, align 8, !alias.scope !42
  %423 = trunc <2 x i64> %419 to <2 x i16>
  %424 = trunc <2 x i64> %422 to <2 x i16>
  %425 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 %416
  %426 = bitcast i16* %425 to <2 x i16>*
  store <2 x i16> %423, <2 x i16>* %426, align 2, !alias.scope !45, !noalias !42
  %427 = getelementptr inbounds i16, i16* %425, i64 2
  %428 = bitcast i16* %427 to <2 x i16>*
  store <2 x i16> %424, <2 x i16>* %428, align 2, !alias.scope !45, !noalias !42
  %429 = add i64 %402, 8
  %430 = add i64 %403, -2
  %431 = icmp eq i64 %430, 0
  br i1 %431, label %432, label %401, !llvm.loop !47

432:                                              ; preds = %401, %392
  %433 = phi i64 [ 0, %392 ], [ %429, %401 ]
  %434 = icmp eq i64 %397, 0
  br i1 %434, label %448, label %435

435:                                              ; preds = %432
  %436 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 7, i64 %433
  %437 = bitcast i64* %436 to <2 x i64>*
  %438 = load <2 x i64>, <2 x i64>* %437, align 8, !alias.scope !42
  %439 = getelementptr inbounds i64, i64* %436, i64 2
  %440 = bitcast i64* %439 to <2 x i64>*
  %441 = load <2 x i64>, <2 x i64>* %440, align 8, !alias.scope !42
  %442 = trunc <2 x i64> %438 to <2 x i16>
  %443 = trunc <2 x i64> %441 to <2 x i16>
  %444 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 %433
  %445 = bitcast i16* %444 to <2 x i16>*
  store <2 x i16> %442, <2 x i16>* %445, align 2, !alias.scope !45, !noalias !42
  %446 = getelementptr inbounds i16, i16* %444, i64 2
  %447 = bitcast i16* %446 to <2 x i16>*
  store <2 x i16> %443, <2 x i16>* %447, align 2, !alias.scope !45, !noalias !42
  br label %448

448:                                              ; preds = %432, %435
  %449 = icmp eq i64 %393, %376
  br i1 %449, label %492, label %450

450:                                              ; preds = %448, %378, %375
  %451 = phi i64 [ 0, %378 ], [ 0, %375 ], [ %393, %448 ]
  %452 = xor i64 %451, -1
  %453 = add nsw i64 %452, %376
  %454 = and i64 %376, 3
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %466, label %456

456:                                              ; preds = %450, %456
  %457 = phi i64 [ %463, %456 ], [ %451, %450 ]
  %458 = phi i64 [ %464, %456 ], [ %454, %450 ]
  %459 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 7, i64 %457
  %460 = load i64, i64* %459, align 8
  %461 = trunc i64 %460 to i16
  %462 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 %457
  store i16 %461, i16* %462, align 2
  %463 = add nuw nsw i64 %457, 1
  %464 = add i64 %458, -1
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %466, label %456, !llvm.loop !48

466:                                              ; preds = %456, %450
  %467 = phi i64 [ %451, %450 ], [ %463, %456 ]
  %468 = icmp ult i64 %453, 3
  br i1 %468, label %492, label %469

469:                                              ; preds = %466, %469
  %470 = phi i64 [ %490, %469 ], [ %467, %466 ]
  %471 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 7, i64 %470
  %472 = load i64, i64* %471, align 8
  %473 = trunc i64 %472 to i16
  %474 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 %470
  store i16 %473, i16* %474, align 2
  %475 = add nuw nsw i64 %470, 1
  %476 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 7, i64 %475
  %477 = load i64, i64* %476, align 8
  %478 = trunc i64 %477 to i16
  %479 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 %475
  store i16 %478, i16* %479, align 2
  %480 = add nuw nsw i64 %470, 2
  %481 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 7, i64 %480
  %482 = load i64, i64* %481, align 8
  %483 = trunc i64 %482 to i16
  %484 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 %480
  store i16 %483, i16* %484, align 2
  %485 = add nuw nsw i64 %470, 3
  %486 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 7, i64 %485
  %487 = load i64, i64* %486, align 8
  %488 = trunc i64 %487 to i16
  %489 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 %485
  store i16 %488, i16* %489, align 2
  %490 = add nuw nsw i64 %470, 4
  %491 = icmp eq i64 %490, %376
  br i1 %491, label %492, label %469, !llvm.loop !49

492:                                              ; preds = %466, %469, %448, %370
  %493 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 8
  %494 = load i64, i64* %493, align 8
  %495 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 10
  store i64 %494, i64* %495, align 8
  %496 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 9
  %497 = load i64, i64* %496, align 8
  %498 = trunc i64 %497 to i32
  %499 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 11
  store i32 %498, i32* %499, align 8
  %500 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 10
  %501 = load i64, i64* %500, align 8
  %502 = trunc i64 %501 to i32
  %503 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 12
  store i32 %502, i32* %503, align 4
  %504 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 11
  %505 = load i64, i64* %504, align 8
  %506 = trunc i64 %505 to i16
  %507 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 13, i64 0
  store i16 %506, i16* %507, align 8
  %508 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 12
  %509 = load i64, i64* %508, align 8
  %510 = trunc i64 %509 to i16
  %511 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 14, i64 0
  store i16 %510, i16* %511, align 2
  %512 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 13
  %513 = load i8, i8* %512, align 8
  %514 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 15
  store i8 %513, i8* %514, align 4
  %515 = icmp eq i8 %513, 0
  br i1 %515, label %633, label %516

516:                                              ; preds = %492
  %517 = zext i8 %513 to i64
  %518 = icmp ult i8 %513, 4
  br i1 %518, label %591, label %519

519:                                              ; preds = %516
  %520 = getelementptr %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 0
  %521 = bitcast i16* %520 to i8*
  %522 = shl nuw nsw i64 %517, 1
  %523 = add nuw nsw i64 %522, 136
  %524 = getelementptr i8, i8* %3, i64 %523
  %525 = getelementptr %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 15, i64 0
  %526 = bitcast i64* %525 to i8*
  %527 = shl nuw nsw i64 %517, 3
  %528 = add nuw nsw i64 %527, 768
  %529 = getelementptr i8, i8* %4, i64 %528
  %530 = icmp ugt i8* %529, %521
  %531 = icmp ugt i8* %524, %526
  %532 = and i1 %530, %531
  br i1 %532, label %591, label %533

533:                                              ; preds = %519
  %534 = and i64 %517, 252
  %535 = add nsw i64 %534, -4
  %536 = lshr exact i64 %535, 2
  %537 = add nuw nsw i64 %536, 1
  %538 = and i64 %537, 1
  %539 = icmp eq i64 %535, 0
  br i1 %539, label %573, label %540

540:                                              ; preds = %533
  %541 = sub nuw nsw i64 %537, %538
  br label %542

542:                                              ; preds = %542, %540
  %543 = phi i64 [ 0, %540 ], [ %570, %542 ]
  %544 = phi i64 [ %541, %540 ], [ %571, %542 ]
  %545 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 15, i64 %543
  %546 = bitcast i64* %545 to <2 x i64>*
  %547 = load <2 x i64>, <2 x i64>* %546, align 8, !alias.scope !50
  %548 = getelementptr inbounds i64, i64* %545, i64 2
  %549 = bitcast i64* %548 to <2 x i64>*
  %550 = load <2 x i64>, <2 x i64>* %549, align 8, !alias.scope !50
  %551 = trunc <2 x i64> %547 to <2 x i16>
  %552 = trunc <2 x i64> %550 to <2 x i16>
  %553 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 %543
  %554 = bitcast i16* %553 to <2 x i16>*
  store <2 x i16> %551, <2 x i16>* %554, align 2, !alias.scope !53, !noalias !50
  %555 = getelementptr inbounds i16, i16* %553, i64 2
  %556 = bitcast i16* %555 to <2 x i16>*
  store <2 x i16> %552, <2 x i16>* %556, align 2, !alias.scope !53, !noalias !50
  %557 = or i64 %543, 4
  %558 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 15, i64 %557
  %559 = bitcast i64* %558 to <2 x i64>*
  %560 = load <2 x i64>, <2 x i64>* %559, align 8, !alias.scope !50
  %561 = getelementptr inbounds i64, i64* %558, i64 2
  %562 = bitcast i64* %561 to <2 x i64>*
  %563 = load <2 x i64>, <2 x i64>* %562, align 8, !alias.scope !50
  %564 = trunc <2 x i64> %560 to <2 x i16>
  %565 = trunc <2 x i64> %563 to <2 x i16>
  %566 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 %557
  %567 = bitcast i16* %566 to <2 x i16>*
  store <2 x i16> %564, <2 x i16>* %567, align 2, !alias.scope !53, !noalias !50
  %568 = getelementptr inbounds i16, i16* %566, i64 2
  %569 = bitcast i16* %568 to <2 x i16>*
  store <2 x i16> %565, <2 x i16>* %569, align 2, !alias.scope !53, !noalias !50
  %570 = add i64 %543, 8
  %571 = add i64 %544, -2
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %542, !llvm.loop !55

573:                                              ; preds = %542, %533
  %574 = phi i64 [ 0, %533 ], [ %570, %542 ]
  %575 = icmp eq i64 %538, 0
  br i1 %575, label %589, label %576

576:                                              ; preds = %573
  %577 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 15, i64 %574
  %578 = bitcast i64* %577 to <2 x i64>*
  %579 = load <2 x i64>, <2 x i64>* %578, align 8, !alias.scope !50
  %580 = getelementptr inbounds i64, i64* %577, i64 2
  %581 = bitcast i64* %580 to <2 x i64>*
  %582 = load <2 x i64>, <2 x i64>* %581, align 8, !alias.scope !50
  %583 = trunc <2 x i64> %579 to <2 x i16>
  %584 = trunc <2 x i64> %582 to <2 x i16>
  %585 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 %574
  %586 = bitcast i16* %585 to <2 x i16>*
  store <2 x i16> %583, <2 x i16>* %586, align 2, !alias.scope !53, !noalias !50
  %587 = getelementptr inbounds i16, i16* %585, i64 2
  %588 = bitcast i16* %587 to <2 x i16>*
  store <2 x i16> %584, <2 x i16>* %588, align 2, !alias.scope !53, !noalias !50
  br label %589

589:                                              ; preds = %573, %576
  %590 = icmp eq i64 %534, %517
  br i1 %590, label %633, label %591

591:                                              ; preds = %589, %519, %516
  %592 = phi i64 [ 0, %519 ], [ 0, %516 ], [ %534, %589 ]
  %593 = xor i64 %592, -1
  %594 = add nsw i64 %593, %517
  %595 = and i64 %517, 3
  %596 = icmp eq i64 %595, 0
  br i1 %596, label %607, label %597

597:                                              ; preds = %591, %597
  %598 = phi i64 [ %604, %597 ], [ %592, %591 ]
  %599 = phi i64 [ %605, %597 ], [ %595, %591 ]
  %600 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 15, i64 %598
  %601 = load i64, i64* %600, align 8
  %602 = trunc i64 %601 to i16
  %603 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 %598
  store i16 %602, i16* %603, align 2
  %604 = add nuw nsw i64 %598, 1
  %605 = add i64 %599, -1
  %606 = icmp eq i64 %605, 0
  br i1 %606, label %607, label %597, !llvm.loop !56

607:                                              ; preds = %597, %591
  %608 = phi i64 [ %592, %591 ], [ %604, %597 ]
  %609 = icmp ult i64 %594, 3
  br i1 %609, label %633, label %610

610:                                              ; preds = %607, %610
  %611 = phi i64 [ %631, %610 ], [ %608, %607 ]
  %612 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 15, i64 %611
  %613 = load i64, i64* %612, align 8
  %614 = trunc i64 %613 to i16
  %615 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 %611
  store i16 %614, i16* %615, align 2
  %616 = add nuw nsw i64 %611, 1
  %617 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 15, i64 %616
  %618 = load i64, i64* %617, align 8
  %619 = trunc i64 %618 to i16
  %620 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 %616
  store i16 %619, i16* %620, align 2
  %621 = add nuw nsw i64 %611, 2
  %622 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 15, i64 %621
  %623 = load i64, i64* %622, align 8
  %624 = trunc i64 %623 to i16
  %625 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 %621
  store i16 %624, i16* %625, align 2
  %626 = add nuw nsw i64 %611, 3
  %627 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 15, i64 %626
  %628 = load i64, i64* %627, align 8
  %629 = trunc i64 %628 to i16
  %630 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 %626
  store i16 %629, i16* %630, align 2
  %631 = add nuw nsw i64 %611, 4
  %632 = icmp eq i64 %631, %517
  br i1 %632, label %633, label %610, !llvm.loop !57

633:                                              ; preds = %607, %610, %589, %492
  %634 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 14
  %635 = load i8, i8* %634, align 1
  %636 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 16
  store i8 %635, i8* %636, align 1
  %637 = icmp eq i8 %635, 0
  br i1 %637, label %755, label %638

638:                                              ; preds = %633
  %639 = zext i8 %635 to i64
  %640 = icmp ult i8 %635, 4
  br i1 %640, label %713, label %641

641:                                              ; preds = %638
  %642 = getelementptr %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 0
  %643 = bitcast i16* %642 to i8*
  %644 = shl nuw nsw i64 %639, 1
  %645 = add nuw nsw i64 %644, 162
  %646 = getelementptr i8, i8* %3, i64 %645
  %647 = getelementptr %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 16, i64 0
  %648 = bitcast i64* %647 to i8*
  %649 = shl nuw nsw i64 %639, 3
  %650 = add nuw nsw i64 %649, 872
  %651 = getelementptr i8, i8* %4, i64 %650
  %652 = icmp ugt i8* %651, %643
  %653 = icmp ugt i8* %646, %648
  %654 = and i1 %652, %653
  br i1 %654, label %713, label %655

655:                                              ; preds = %641
  %656 = and i64 %639, 252
  %657 = add nsw i64 %656, -4
  %658 = lshr exact i64 %657, 2
  %659 = add nuw nsw i64 %658, 1
  %660 = and i64 %659, 1
  %661 = icmp eq i64 %657, 0
  br i1 %661, label %695, label %662

662:                                              ; preds = %655
  %663 = sub nuw nsw i64 %659, %660
  br label %664

664:                                              ; preds = %664, %662
  %665 = phi i64 [ 0, %662 ], [ %692, %664 ]
  %666 = phi i64 [ %663, %662 ], [ %693, %664 ]
  %667 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 16, i64 %665
  %668 = bitcast i64* %667 to <2 x i64>*
  %669 = load <2 x i64>, <2 x i64>* %668, align 8, !alias.scope !58
  %670 = getelementptr inbounds i64, i64* %667, i64 2
  %671 = bitcast i64* %670 to <2 x i64>*
  %672 = load <2 x i64>, <2 x i64>* %671, align 8, !alias.scope !58
  %673 = trunc <2 x i64> %669 to <2 x i16>
  %674 = trunc <2 x i64> %672 to <2 x i16>
  %675 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 %665
  %676 = bitcast i16* %675 to <2 x i16>*
  store <2 x i16> %673, <2 x i16>* %676, align 2, !alias.scope !61, !noalias !58
  %677 = getelementptr inbounds i16, i16* %675, i64 2
  %678 = bitcast i16* %677 to <2 x i16>*
  store <2 x i16> %674, <2 x i16>* %678, align 2, !alias.scope !61, !noalias !58
  %679 = or i64 %665, 4
  %680 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 16, i64 %679
  %681 = bitcast i64* %680 to <2 x i64>*
  %682 = load <2 x i64>, <2 x i64>* %681, align 8, !alias.scope !58
  %683 = getelementptr inbounds i64, i64* %680, i64 2
  %684 = bitcast i64* %683 to <2 x i64>*
  %685 = load <2 x i64>, <2 x i64>* %684, align 8, !alias.scope !58
  %686 = trunc <2 x i64> %682 to <2 x i16>
  %687 = trunc <2 x i64> %685 to <2 x i16>
  %688 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 %679
  %689 = bitcast i16* %688 to <2 x i16>*
  store <2 x i16> %686, <2 x i16>* %689, align 2, !alias.scope !61, !noalias !58
  %690 = getelementptr inbounds i16, i16* %688, i64 2
  %691 = bitcast i16* %690 to <2 x i16>*
  store <2 x i16> %687, <2 x i16>* %691, align 2, !alias.scope !61, !noalias !58
  %692 = add i64 %665, 8
  %693 = add i64 %666, -2
  %694 = icmp eq i64 %693, 0
  br i1 %694, label %695, label %664, !llvm.loop !63

695:                                              ; preds = %664, %655
  %696 = phi i64 [ 0, %655 ], [ %692, %664 ]
  %697 = icmp eq i64 %660, 0
  br i1 %697, label %711, label %698

698:                                              ; preds = %695
  %699 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 16, i64 %696
  %700 = bitcast i64* %699 to <2 x i64>*
  %701 = load <2 x i64>, <2 x i64>* %700, align 8, !alias.scope !58
  %702 = getelementptr inbounds i64, i64* %699, i64 2
  %703 = bitcast i64* %702 to <2 x i64>*
  %704 = load <2 x i64>, <2 x i64>* %703, align 8, !alias.scope !58
  %705 = trunc <2 x i64> %701 to <2 x i16>
  %706 = trunc <2 x i64> %704 to <2 x i16>
  %707 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 %696
  %708 = bitcast i16* %707 to <2 x i16>*
  store <2 x i16> %705, <2 x i16>* %708, align 2, !alias.scope !61, !noalias !58
  %709 = getelementptr inbounds i16, i16* %707, i64 2
  %710 = bitcast i16* %709 to <2 x i16>*
  store <2 x i16> %706, <2 x i16>* %710, align 2, !alias.scope !61, !noalias !58
  br label %711

711:                                              ; preds = %695, %698
  %712 = icmp eq i64 %656, %639
  br i1 %712, label %755, label %713

713:                                              ; preds = %711, %641, %638
  %714 = phi i64 [ 0, %641 ], [ 0, %638 ], [ %656, %711 ]
  %715 = xor i64 %714, -1
  %716 = add nsw i64 %715, %639
  %717 = and i64 %639, 3
  %718 = icmp eq i64 %717, 0
  br i1 %718, label %729, label %719

719:                                              ; preds = %713, %719
  %720 = phi i64 [ %726, %719 ], [ %714, %713 ]
  %721 = phi i64 [ %727, %719 ], [ %717, %713 ]
  %722 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 16, i64 %720
  %723 = load i64, i64* %722, align 8
  %724 = trunc i64 %723 to i16
  %725 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 %720
  store i16 %724, i16* %725, align 2
  %726 = add nuw nsw i64 %720, 1
  %727 = add i64 %721, -1
  %728 = icmp eq i64 %727, 0
  br i1 %728, label %729, label %719, !llvm.loop !64

729:                                              ; preds = %719, %713
  %730 = phi i64 [ %714, %713 ], [ %726, %719 ]
  %731 = icmp ult i64 %716, 3
  br i1 %731, label %755, label %732

732:                                              ; preds = %729, %732
  %733 = phi i64 [ %753, %732 ], [ %730, %729 ]
  %734 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 16, i64 %733
  %735 = load i64, i64* %734, align 8
  %736 = trunc i64 %735 to i16
  %737 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 %733
  store i16 %736, i16* %737, align 2
  %738 = add nuw nsw i64 %733, 1
  %739 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 16, i64 %738
  %740 = load i64, i64* %739, align 8
  %741 = trunc i64 %740 to i16
  %742 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 %738
  store i16 %741, i16* %742, align 2
  %743 = add nuw nsw i64 %733, 2
  %744 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 16, i64 %743
  %745 = load i64, i64* %744, align 8
  %746 = trunc i64 %745 to i16
  %747 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 %743
  store i16 %746, i16* %747, align 2
  %748 = add nuw nsw i64 %733, 3
  %749 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 16, i64 %748
  %750 = load i64, i64* %749, align 8
  %751 = trunc i64 %750 to i16
  %752 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 %748
  store i16 %751, i16* %752, align 2
  %753 = add nuw nsw i64 %733, 4
  %754 = icmp eq i64 %753, %639
  br i1 %754, label %755, label %732, !llvm.loop !65

755:                                              ; preds = %729, %732, %711, %633
  %756 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 17
  %757 = load i8, i8* %756, align 8
  %758 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 17
  store i8 %757, i8* %758, align 2
  %759 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 20
  %760 = load i32, i32* %759, align 4
  %761 = sext i32 %760 to i64
  %762 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 22
  store i64 %761, i64* %762, align 8
  %763 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 19
  %764 = load i32, i32* %763, align 8
  %765 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 1
  store i32 %764, i32* %765, align 4
  ret void
}

declare hidden void @FT_Select_Metrics(%struct.FT_FaceRec_*, i64) local_unnamed_addr #6

declare hidden void @FT_Request_Metrics(%struct.FT_FaceRec_*, %struct.FT_Size_RequestRec_*) local_unnamed_addr #6

declare hidden i8* @FT_Get_Module_Interface(%struct.FT_LibraryRec_*, i8*) local_unnamed_addr #6

declare hidden void @FT_Matrix_Multiply_Scaled(%struct.FT_Matrix_*, %struct.FT_Matrix_*, i64) local_unnamed_addr #6

declare hidden void @FT_Vector_Transform_Scaled(%struct.FT_Vector_*, %struct.FT_Matrix_*, i64) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

declare hidden i32 @FT_CMap_New(%struct.FT_CMap_ClassRec_*, i8*, %struct.FT_CharMapRec_*, %struct.FT_CMapRec_**) local_unnamed_addr #6

declare hidden i64 @FT_Stream_Pos(%struct.FT_StreamRec_*) local_unnamed_addr #6

declare hidden i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_*, %struct.FT_Frame_Field_*, i8*) local_unnamed_addr #6

declare hidden zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_*, i32*) local_unnamed_addr #6

declare hidden signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_*, i32*) local_unnamed_addr #6

declare hidden i32 @FT_Stream_Skip(%struct.FT_StreamRec_*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @cff_index_init(%struct.CFF_IndexRec_*, %struct.FT_StreamRec_*, i8 zeroext, i8 zeroext) unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 -1431655766, i32* %6, align 4
  %8 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 7
  %9 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %8, align 8
  %10 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 1
  %11 = bitcast i64* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 56, i1 false)
  %12 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 0
  store %struct.FT_StreamRec_* %1, %struct.FT_StreamRec_** %12, align 8
  %13 = tail call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %1) #11
  %14 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 1
  store i64 %13, i64* %14, align 8
  %15 = icmp eq i8 %3, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %4
  %17 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %1, i32* nonnull %6) #11
  %18 = load i32, i32* %6, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %141

20:                                               ; preds = %16
  %21 = trunc i64 %17 to i32
  br label %28

22:                                               ; preds = %4
  %23 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1, i32* nonnull %6) #11
  %24 = load i32, i32* %6, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %141

26:                                               ; preds = %22
  %27 = zext i16 %23 to i32
  br label %28

28:                                               ; preds = %26, %20
  %29 = phi i32 [ 3, %26 ], [ 5, %20 ]
  %30 = phi i32 [ %27, %26 ], [ %21, %20 ]
  %31 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 2
  store i32 %29, i32* %31, align 8
  %32 = icmp eq i32 %30, 0
  br i1 %32, label %146, label %33

33:                                               ; preds = %28
  %34 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %1, i32* nonnull %6) #11
  %35 = load i32, i32* %6, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %141

37:                                               ; preds = %33
  %38 = add i8 %34, -1
  %39 = icmp ugt i8 %38, 3
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  store i32 8, i32* %6, align 4
  br label %141

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 3
  store i32 %30, i32* %42, align 4
  %43 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 4
  store i8 %34, i8* %43, align 8
  %44 = add i32 %30, 1
  %45 = zext i32 %44 to i64
  %46 = zext i8 %34 to i64
  %47 = mul nuw nsw i64 %46, %45
  %48 = load i64, i64* %14, align 8
  %49 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = zext i32 %50 to i64
  %52 = add i64 %48, %47
  %53 = add i64 %52, %51
  %54 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 5
  store i64 %53, i64* %54, align 8
  %55 = sub nsw i64 %47, %46
  %56 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %1, i64 %55) #11
  store i32 %56, i32* %6, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %141

58:                                               ; preds = %41
  %59 = bitcast i32* %5 to [4 x i8]*
  %60 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %12, align 8
  %61 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #11
  store i32 -1431655766, i32* %5, align 4
  %62 = load i8, i8* %43, align 8
  %63 = zext i8 %62 to i64
  %64 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %60, i8* nonnull %61, i64 %63) #11
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %58
  store i32 %64, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #11
  br label %141

67:                                               ; preds = %58
  %68 = load i8, i8* %43, align 8
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  store i32 0, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #11
  br label %128

71:                                               ; preds = %67
  %72 = zext i8 %68 to i64
  %73 = add nsw i64 %72, -1
  %74 = and i64 %72, 3
  %75 = icmp ult i64 %73, 3
  br i1 %75, label %108, label %76

76:                                               ; preds = %71
  %77 = sub nsw i64 %72, %74
  br label %78

78:                                               ; preds = %78, %76
  %79 = phi i64 [ 0, %76 ], [ %105, %78 ]
  %80 = phi i64 [ 0, %76 ], [ %104, %78 ]
  %81 = phi i64 [ %77, %76 ], [ %106, %78 ]
  %82 = shl i64 %80, 8
  %83 = getelementptr inbounds [4 x i8], [4 x i8]* %59, i64 0, i64 %79
  %84 = load i8, i8* %83, align 4
  %85 = zext i8 %84 to i64
  %86 = or i64 %82, %85
  %87 = or i64 %79, 1
  %88 = shl i64 %86, 8
  %89 = getelementptr inbounds [4 x i8], [4 x i8]* %59, i64 0, i64 %87
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = or i64 %88, %91
  %93 = or i64 %79, 2
  %94 = shl i64 %92, 8
  %95 = getelementptr inbounds [4 x i8], [4 x i8]* %59, i64 0, i64 %93
  %96 = load i8, i8* %95, align 2
  %97 = zext i8 %96 to i64
  %98 = or i64 %94, %97
  %99 = or i64 %79, 3
  %100 = shl i64 %98, 8
  %101 = getelementptr inbounds [4 x i8], [4 x i8]* %59, i64 0, i64 %99
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i64
  %104 = or i64 %100, %103
  %105 = add nuw nsw i64 %79, 4
  %106 = add i64 %81, -4
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %78

108:                                              ; preds = %78, %71
  %109 = phi i64 [ undef, %71 ], [ %104, %78 ]
  %110 = phi i64 [ 0, %71 ], [ %105, %78 ]
  %111 = phi i64 [ 0, %71 ], [ %104, %78 ]
  %112 = icmp eq i64 %74, 0
  br i1 %112, label %125, label %113

113:                                              ; preds = %108, %113
  %114 = phi i64 [ %122, %113 ], [ %110, %108 ]
  %115 = phi i64 [ %121, %113 ], [ %111, %108 ]
  %116 = phi i64 [ %123, %113 ], [ %74, %108 ]
  %117 = shl i64 %115, 8
  %118 = getelementptr inbounds [4 x i8], [4 x i8]* %59, i64 0, i64 %114
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = or i64 %117, %120
  %122 = add nuw nsw i64 %114, 1
  %123 = add i64 %116, -1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %113, !llvm.loop !66

125:                                              ; preds = %113, %108
  %126 = phi i64 [ %109, %108 ], [ %121, %113 ]
  store i32 0, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #11
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %70, %125
  store i32 8, i32* %6, align 4
  br label %141

129:                                              ; preds = %125
  %130 = add i64 %126, -1
  %131 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 6
  store i64 %130, i64* %131, align 8
  %132 = icmp eq i8 %2, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 8
  %135 = call i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_* %1, i64 %130, i8** %134) #11
  br label %138

136:                                              ; preds = %129
  %137 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %1, i64 %130) #11
  br label %138

138:                                              ; preds = %136, %133
  %139 = phi i32 [ %135, %133 ], [ %137, %136 ]
  store i32 %139, i32* %6, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %146, label %141

141:                                              ; preds = %22, %16, %41, %33, %128, %40, %66, %138
  %142 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 7
  %143 = bitcast i64** %142 to i8**
  %144 = load i8*, i8** %143, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %9, i8* %144) #11
  store i64* null, i64** %142, align 8
  %145 = load i32, i32* %6, align 4
  br label %146

146:                                              ; preds = %28, %138, %141
  %147 = phi i32 [ 0, %138 ], [ %145, %141 ], [ 0, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  ret i32 %147
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @cff_index_get_pointers(%struct.CFF_IndexRec_* nocapture, i8*** nocapture, i8**, i64*) unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 0, i32* %6, align 4
  %8 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 0
  %9 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %9, i64 0, i32 7
  %11 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %10, align 8
  store i8** null, i8*** %1, align 8
  %12 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 7
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %15, label %212

15:                                               ; preds = %4
  %16 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #11
  store i32 0, i32* %5, align 4
  %17 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %8, align 8
  %18 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %17, i64 0, i32 7
  %19 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %18, align 8
  %20 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %207, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 4
  %25 = load i8, i8* %24, align 8
  %26 = add i32 %21, 1
  %27 = zext i32 %26 to i64
  %28 = zext i8 %25 to i64
  %29 = mul nuw nsw i64 %28, %27
  %30 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %19, i64 8, i64 0, i64 %27, i8* null, i32* nonnull %5) #11
  %31 = bitcast i64** %12 to i8**
  store i8* %30, i8** %31, align 8
  %32 = load i32, i32* %5, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %208

34:                                               ; preds = %23
  %35 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = zext i32 %38 to i64
  %40 = add i64 %36, %39
  %41 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %17, i64 %40) #11
  store i32 %41, i32* %5, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %208

43:                                               ; preds = %34
  %44 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %17, i64 %29) #11
  store i32 %44, i32* %5, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %208

46:                                               ; preds = %43
  %47 = load i64*, i64** %12, align 8
  %48 = bitcast i64* %47 to i8*
  %49 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %17, i64 0, i32 8
  %50 = load i8*, i8** %49, align 8
  %51 = ptrtoint i8* %50 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %29
  switch i8 %25, label %140 [
    i8 1, label %57
    i8 2, label %55
    i8 3, label %53
  ]

53:                                               ; preds = %46
  %54 = icmp eq i64 %29, 0
  br i1 %54, label %204, label %163

55:                                               ; preds = %46
  %56 = icmp eq i64 %29, 0
  br i1 %56, label %204, label %150

57:                                               ; preds = %46
  %58 = icmp eq i64 %29, 0
  br i1 %58, label %204, label %59

59:                                               ; preds = %57
  %60 = getelementptr i8, i8* %50, i64 1
  %61 = icmp ugt i8* %52, %60
  %62 = select i1 %61, i8* %52, i8* %60
  %63 = ptrtoint i8* %62 to i64
  %64 = sub i64 %63, %51
  %65 = icmp ult i64 %64, 4
  br i1 %65, label %66, label %69

66:                                               ; preds = %138, %69, %59
  %67 = phi i64* [ %47, %69 ], [ %47, %59 ], [ %82, %138 ]
  %68 = phi i8* [ %50, %69 ], [ %50, %59 ], [ %83, %138 ]
  br label %142

69:                                               ; preds = %59
  %70 = getelementptr i8, i8* %50, i64 1
  %71 = icmp ugt i8* %52, %70
  %72 = select i1 %71, i8* %52, i8* %70
  %73 = ptrtoint i8* %72 to i64
  %74 = sub i64 %73, %51
  %75 = getelementptr i64, i64* %47, i64 %74
  %76 = bitcast i64* %75 to i8*
  %77 = icmp ugt i8* %72, %48
  %78 = icmp ult i8* %50, %76
  %79 = and i1 %77, %78
  br i1 %79, label %66, label %80

80:                                               ; preds = %69
  %81 = and i64 %64, -4
  %82 = getelementptr i64, i64* %47, i64 %81
  %83 = getelementptr i8, i8* %50, i64 %81
  %84 = add i64 %81, -4
  %85 = lshr exact i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 1
  %88 = icmp eq i64 %84, 0
  br i1 %88, label %122, label %89

89:                                               ; preds = %80
  %90 = sub nuw nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %119, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %120, %91 ]
  %94 = getelementptr i64, i64* %47, i64 %92
  %95 = getelementptr i8, i8* %50, i64 %92
  %96 = bitcast i8* %95 to <2 x i8>*
  %97 = load <2 x i8>, <2 x i8>* %96, align 1, !alias.scope !67
  %98 = getelementptr i8, i8* %95, i64 2
  %99 = bitcast i8* %98 to <2 x i8>*
  %100 = load <2 x i8>, <2 x i8>* %99, align 1, !alias.scope !67
  %101 = zext <2 x i8> %97 to <2 x i64>
  %102 = zext <2 x i8> %100 to <2 x i64>
  %103 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %101, <2 x i64>* %103, align 8, !alias.scope !70, !noalias !67
  %104 = getelementptr i64, i64* %94, i64 2
  %105 = bitcast i64* %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !70, !noalias !67
  %106 = or i64 %92, 4
  %107 = getelementptr i64, i64* %47, i64 %106
  %108 = getelementptr i8, i8* %50, i64 %106
  %109 = bitcast i8* %108 to <2 x i8>*
  %110 = load <2 x i8>, <2 x i8>* %109, align 1, !alias.scope !67
  %111 = getelementptr i8, i8* %108, i64 2
  %112 = bitcast i8* %111 to <2 x i8>*
  %113 = load <2 x i8>, <2 x i8>* %112, align 1, !alias.scope !67
  %114 = zext <2 x i8> %110 to <2 x i64>
  %115 = zext <2 x i8> %113 to <2 x i64>
  %116 = bitcast i64* %107 to <2 x i64>*
  store <2 x i64> %114, <2 x i64>* %116, align 8, !alias.scope !70, !noalias !67
  %117 = getelementptr i64, i64* %107, i64 2
  %118 = bitcast i64* %117 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %118, align 8, !alias.scope !70, !noalias !67
  %119 = add i64 %92, 8
  %120 = add i64 %93, -2
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %91, !llvm.loop !72

122:                                              ; preds = %91, %80
  %123 = phi i64 [ 0, %80 ], [ %119, %91 ]
  %124 = icmp eq i64 %87, 0
  br i1 %124, label %138, label %125

125:                                              ; preds = %122
  %126 = getelementptr i64, i64* %47, i64 %123
  %127 = getelementptr i8, i8* %50, i64 %123
  %128 = bitcast i8* %127 to <2 x i8>*
  %129 = load <2 x i8>, <2 x i8>* %128, align 1, !alias.scope !67
  %130 = getelementptr i8, i8* %127, i64 2
  %131 = bitcast i8* %130 to <2 x i8>*
  %132 = load <2 x i8>, <2 x i8>* %131, align 1, !alias.scope !67
  %133 = zext <2 x i8> %129 to <2 x i64>
  %134 = zext <2 x i8> %132 to <2 x i64>
  %135 = bitcast i64* %126 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %135, align 8, !alias.scope !70, !noalias !67
  %136 = getelementptr i64, i64* %126, i64 2
  %137 = bitcast i64* %136 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %137, align 8, !alias.scope !70, !noalias !67
  br label %138

138:                                              ; preds = %122, %125
  %139 = icmp eq i64 %64, %81
  br i1 %139, label %204, label %66

140:                                              ; preds = %46
  %141 = icmp eq i64 %29, 0
  br i1 %141, label %204, label %181

142:                                              ; preds = %66, %142
  %143 = phi i64* [ %148, %142 ], [ %67, %66 ]
  %144 = phi i8* [ %147, %142 ], [ %68, %66 ]
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i64
  store i64 %146, i64* %143, align 8
  %147 = getelementptr inbounds i8, i8* %144, i64 1
  %148 = getelementptr inbounds i64, i64* %143, i64 1
  %149 = icmp ult i8* %147, %52
  br i1 %149, label %142, label %204, !llvm.loop !73

150:                                              ; preds = %55, %150
  %151 = phi i64* [ %161, %150 ], [ %47, %55 ]
  %152 = phi i8* [ %160, %150 ], [ %50, %55 ]
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i64
  %155 = shl nuw nsw i64 %154, 8
  %156 = getelementptr inbounds i8, i8* %152, i64 1
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i64
  %159 = or i64 %155, %158
  store i64 %159, i64* %151, align 8
  %160 = getelementptr inbounds i8, i8* %152, i64 2
  %161 = getelementptr inbounds i64, i64* %151, i64 1
  %162 = icmp ult i8* %160, %52
  br i1 %162, label %150, label %204

163:                                              ; preds = %53, %163
  %164 = phi i64* [ %179, %163 ], [ %47, %53 ]
  %165 = phi i8* [ %178, %163 ], [ %50, %53 ]
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i64
  %168 = shl nuw nsw i64 %167, 16
  %169 = getelementptr inbounds i8, i8* %165, i64 1
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i64
  %172 = shl nuw nsw i64 %171, 8
  %173 = or i64 %172, %168
  %174 = getelementptr inbounds i8, i8* %165, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i64
  %177 = or i64 %173, %176
  store i64 %177, i64* %164, align 8
  %178 = getelementptr inbounds i8, i8* %165, i64 3
  %179 = getelementptr inbounds i64, i64* %164, i64 1
  %180 = icmp ult i8* %178, %52
  br i1 %180, label %163, label %204

181:                                              ; preds = %140, %181
  %182 = phi i64* [ %202, %181 ], [ %47, %140 ]
  %183 = phi i8* [ %201, %181 ], [ %50, %140 ]
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i64
  %186 = shl nuw nsw i64 %185, 24
  %187 = getelementptr inbounds i8, i8* %183, i64 1
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i64
  %190 = shl nuw nsw i64 %189, 16
  %191 = or i64 %190, %186
  %192 = getelementptr inbounds i8, i8* %183, i64 2
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i64
  %195 = shl nuw nsw i64 %194, 8
  %196 = or i64 %191, %195
  %197 = getelementptr inbounds i8, i8* %183, i64 3
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i64
  %200 = or i64 %196, %199
  store i64 %200, i64* %182, align 8
  %201 = getelementptr inbounds i8, i8* %183, i64 4
  %202 = getelementptr inbounds i64, i64* %182, i64 1
  %203 = icmp ult i8* %201, %52
  br i1 %203, label %181, label %204

204:                                              ; preds = %163, %150, %142, %181, %138, %140, %57, %55, %53
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %17) #11
  %205 = load i32, i32* %5, align 4
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204, %15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #11
  store i32 0, i32* %6, align 4
  br label %212

208:                                              ; preds = %23, %34, %43, %204
  %209 = load i8*, i8** %31, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %19, i8* %209) #11
  store i64* null, i64** %12, align 8
  %210 = load i32, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #11
  store i32 %210, i32* %6, align 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %302

212:                                              ; preds = %207, %208, %4
  %213 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 6
  %214 = load i64, i64* %213, align 8
  %215 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = zext i32 %216 to i64
  %218 = add i64 %214, %217
  %219 = icmp eq i32 %216, 0
  br i1 %219, label %302, label %220

220:                                              ; preds = %212
  %221 = add i32 %216, 1
  %222 = zext i32 %221 to i64
  %223 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %11, i64 8, i64 0, i64 %222, i8* null, i32* nonnull %6) #11
  %224 = bitcast i8* %223 to i8**
  %225 = load i32, i32* %6, align 4
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %295

227:                                              ; preds = %220
  %228 = icmp ne i8** %2, null
  br i1 %228, label %229, label %233

229:                                              ; preds = %227
  %230 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %11, i64 %218, i32* nonnull %6) #11
  %231 = load i32, i32* %6, align 4
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %287

233:                                              ; preds = %229, %227
  %234 = phi i8* [ %230, %229 ], [ null, %227 ]
  %235 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %0, i64 0, i32 8
  %236 = load i8*, i8** %235, align 8
  %237 = select i1 %228, i8* %234, i8* %236
  store i8* %237, i8** %224, align 8
  %238 = load i32, i32* %215, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %281, label %240

240:                                              ; preds = %233, %275
  %241 = phi i64 [ %276, %275 ], [ 0, %233 ]
  %242 = phi i64 [ %254, %275 ], [ 0, %233 ]
  %243 = phi i64 [ %277, %275 ], [ 1, %233 ]
  %244 = load i64*, i64** %12, align 8
  %245 = getelementptr inbounds i64, i64* %244, i64 %243
  %246 = load i64, i64* %245, align 8
  %247 = add i64 %246, -1
  %248 = icmp ult i64 %247, %242
  br i1 %248, label %253, label %249

249:                                              ; preds = %240
  %250 = load i64, i64* %213, align 8
  %251 = icmp ugt i64 %247, %250
  %252 = select i1 %251, i64 %250, i64 %247
  br label %253

253:                                              ; preds = %249, %240
  %254 = phi i64 [ %242, %240 ], [ %252, %249 ]
  br i1 %228, label %258, label %255

255:                                              ; preds = %253
  %256 = getelementptr inbounds i8, i8* %236, i64 %254
  %257 = getelementptr inbounds i8*, i8** %224, i64 %243
  store i8* %256, i8** %257, align 8
  br label %275

258:                                              ; preds = %253
  %259 = getelementptr inbounds i8, i8* %234, i64 %254
  %260 = getelementptr inbounds i8, i8* %259, i64 %241
  %261 = getelementptr inbounds i8*, i8** %224, i64 %243
  store i8* %260, i8** %261, align 8
  %262 = icmp eq i64 %254, %242
  br i1 %262, label %275, label %263

263:                                              ; preds = %258
  %264 = add nsw i64 %243, -1
  %265 = getelementptr inbounds i8*, i8** %224, i64 %264
  %266 = load i8*, i8** %265, align 8
  %267 = getelementptr inbounds i8, i8* %236, i64 %242
  %268 = ptrtoint i8* %260 to i64
  %269 = ptrtoint i8* %266 to i64
  %270 = sub i64 %268, %269
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %266, i8* align 1 %267, i64 %270, i1 false)
  %271 = load i8*, i8** %261, align 8
  store i8 0, i8* %271, align 1
  %272 = load i8*, i8** %261, align 8
  %273 = getelementptr inbounds i8, i8* %272, i64 1
  store i8* %273, i8** %261, align 8
  %274 = add i64 %241, 1
  br label %275

275:                                              ; preds = %258, %263, %255
  %276 = phi i64 [ %274, %263 ], [ %241, %258 ], [ %241, %255 ]
  %277 = add nuw nsw i64 %243, 1
  %278 = load i32, i32* %215, align 4
  %279 = zext i32 %278 to i64
  %280 = icmp ult i64 %243, %279
  br i1 %280, label %240, label %281

281:                                              ; preds = %275, %233
  %282 = bitcast i8*** %1 to i8**
  store i8* %223, i8** %282, align 8
  br i1 %228, label %283, label %284

283:                                              ; preds = %281
  store i8* %234, i8** %2, align 8
  br label %284

284:                                              ; preds = %283, %281
  %285 = icmp eq i64* %3, null
  br i1 %285, label %287, label %286

286:                                              ; preds = %284
  store i64 %218, i64* %3, align 8
  br label %287

287:                                              ; preds = %286, %284, %229
  %288 = phi i8* [ %230, %229 ], [ %234, %284 ], [ %234, %286 ]
  %289 = load i32, i32* %6, align 4
  %290 = icmp ne i32 %289, 0
  %291 = icmp ne i8* %288, null
  %292 = and i1 %291, %290
  br i1 %292, label %293, label %295

293:                                              ; preds = %287
  call void @ft_mem_free(%struct.FT_MemoryRec_* %11, i8* nonnull %288) #11
  %294 = load i32, i32* %6, align 4
  br label %295

295:                                              ; preds = %220, %293, %287
  %296 = phi i32 [ %225, %220 ], [ %294, %293 ], [ %289, %287 ]
  %297 = icmp ne i32 %296, 0
  %298 = icmp ne i8* %223, null
  %299 = and i1 %298, %297
  br i1 %299, label %300, label %302

300:                                              ; preds = %295
  call void @ft_mem_free(%struct.FT_MemoryRec_* %11, i8* nonnull %223) #11
  %301 = load i32, i32* %6, align 4
  br label %302

302:                                              ; preds = %212, %208, %300, %295
  %303 = phi i32 [ 0, %212 ], [ %210, %208 ], [ %301, %300 ], [ %296, %295 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  ret i32 %303
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @cff_subfont_load(%struct.CFF_SubFontRec_*, %struct.CFF_IndexRec_* readonly, i32, %struct.FT_StreamRec_*, i64, i32, %struct.CFF_FontRec_*, %struct.TT_FaceRec_* nocapture readonly) unnamed_addr #3 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.CFF_ParserRec_, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = bitcast %struct.CFF_ParserRec_* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 72, i1 false)
  %14 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  store i8* null, i8** %11, align 8
  %15 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  store i64 -6148914691236517206, i64* %12, align 8
  %16 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %7, i64 0, i32 26
  %17 = bitcast i8** %16 to %struct.PSAux_ServiceRec_**
  %18 = load %struct.PSAux_ServiceRec_*, %struct.PSAux_ServiceRec_** %17, align 8
  %19 = icmp eq i32 %5, 12288
  %20 = icmp eq i32 %5, 16384
  %21 = or i1 %19, %20
  %22 = zext i1 %21 to i8
  %23 = select i1 %21, i32 513, i32 96
  %24 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %6, i64 0, i32 0
  %25 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %24, align 8
  %26 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %25, i64 0, i32 0
  %27 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %26, align 8
  %28 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #11
  store i32 -1431655766, i32* %9, align 4
  %29 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %10, i64 0, i32 1
  %30 = bitcast i8** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 64, i1 false) #11
  %31 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %10, i64 0, i32 7
  store i32 %5, i32* %31, align 4
  %32 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %10, i64 0, i32 8
  %33 = bitcast i8** %32 to %struct.CFF_SubFontRec_**
  store %struct.CFF_SubFontRec_* %0, %struct.CFF_SubFontRec_** %33, align 8
  %34 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %10, i64 0, i32 0
  store %struct.FT_LibraryRec_* %25, %struct.FT_LibraryRec_** %34, align 8
  %35 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %10, i64 0, i32 9
  store i16 0, i16* %35, align 8
  %36 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %10, i64 0, i32 10
  store i16 0, i16* %36, align 2
  %37 = zext i32 %23 to i64
  %38 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %27, i64 8, i64 0, i64 %37, i8* null, i32* nonnull %9) #11
  %39 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %10, i64 0, i32 4
  %40 = bitcast i8*** %39 to i8**
  store i8* %38, i8** %40, align 8
  %41 = load i32, i32* %9, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %8
  %44 = ptrtoint i8* %38 to i64
  %45 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %10, i64 0, i32 6
  store i32 %23, i32* %45, align 8
  %46 = getelementptr inbounds %struct.CFF_ParserRec_, %struct.CFF_ParserRec_* %10, i64 0, i32 5
  %47 = bitcast i8*** %46 to i64*
  store i64 %44, i64* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #11
  br label %51

48:                                               ; preds = %8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %27, i8* %38) #11
  store i8** null, i8*** %39, align 8
  %49 = load i32, i32* %9, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #11
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %183

51:                                               ; preds = %43, %48
  %52 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 304, i1 false)
  %53 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 0, i32 8
  %54 = bitcast i64* %53 to <2 x i64>*
  store <2 x i64> <i64 -6553600, i64 3276800>, <2 x i64>* %54, align 8
  %55 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 0, i32 11
  store i32 2, i32* %55, align 4
  %56 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 0, i32 12, i32 0
  store i64 65536, i64* %56, align 8
  %57 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 0, i32 12, i32 3
  store i64 65536, i64* %57, align 8
  %58 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 0, i32 32
  store i64 8720, i64* %58, align 8
  %59 = bitcast %struct.CFF_SubFontRec_* %0 to <4 x i32>*
  store <4 x i32> <i32 65535, i32 65535, i32 65535, i32 65535>, <4 x i32>* %59, align 8
  %60 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 0, i32 4
  store i32 65535, i32* %60, align 8
  %61 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 0, i32 5
  store i32 65535, i32* %61, align 4
  %62 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 0, i32 25
  store i32 65535, i32* %62, align 8
  %63 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 0, i32 26
  store i32 65535, i32* %63, align 4
  %64 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 0, i32 27
  store i32 65535, i32* %64, align 8
  %65 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 0, i32 36
  store i32 65535, i32* %65, align 8
  %66 = select i1 %21, i32 513, i32 48
  %67 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 0, i32 40
  store i32 %66, i32* %67, align 8
  %68 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %1, i64 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %51
  %72 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %1, i64 0, i32 5
  %73 = load i64, i64* %72, align 8
  %74 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %3, i64 %73) #11
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %183

76:                                               ; preds = %71
  %77 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %1, i64 0, i32 6
  %78 = load i64, i64* %77, align 8
  %79 = call i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_* %3, i64 %78, i8** nonnull %11) #11
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %183

81:                                               ; preds = %76
  %82 = load i64, i64* %77, align 8
  store i64 %82, i64* %12, align 8
  br label %88

83:                                               ; preds = %51
  %84 = call fastcc i32 @cff_index_access_element(%struct.CFF_IndexRec_* %1, i32 %2, i8** nonnull %11, i64* nonnull %12)
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %95

86:                                               ; preds = %83
  %87 = load i64, i64* %12, align 8
  br label %88

88:                                               ; preds = %86, %81
  %89 = phi i64 [ %87, %86 ], [ %82, %81 ]
  %90 = load i8*, i8** %11, align 8
  %91 = icmp eq i8* %90, null
  %92 = getelementptr inbounds i8, i8* %90, i64 %89
  %93 = select i1 %91, i8* null, i8* %92
  %94 = call fastcc i32 @cff_parser_run(%struct.CFF_ParserRec_* nonnull %10, i8* %90, i8* %93)
  br label %95

95:                                               ; preds = %83, %88
  %96 = phi i32 [ %84, %83 ], [ %94, %88 ]
  %97 = load i32, i32* %68, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %106, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %1, i64 0, i32 8
  %101 = load i8*, i8** %100, align 8
  %102 = icmp eq i8* %101, null
  br i1 %102, label %103, label %108

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct.CFF_IndexRec_, %struct.CFF_IndexRec_* %1, i64 0, i32 0
  %105 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %104, align 8
  br label %106

106:                                              ; preds = %95, %103
  %107 = phi %struct.FT_StreamRec_* [ %105, %103 ], [ %3, %95 ]
  call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %107, i8** nonnull %11) #11
  br label %108

108:                                              ; preds = %106, %99
  %109 = icmp eq i32 %96, 0
  br i1 %109, label %110, label %183

110:                                              ; preds = %108
  %111 = load i32, i32* %63, align 4
  %112 = icmp eq i32 %111, 65535
  br i1 %112, label %113, label %183

113:                                              ; preds = %110
  %114 = call i32 @cff_load_private_dict(%struct.CFF_FontRec_* %6, %struct.CFF_SubFontRec_* %0, i32 0, i64* null)
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %183

116:                                              ; preds = %113
  switch i32 %5, label %117 [
    i32 16384, label %165
    i32 12288, label %165
  ]

117:                                              ; preds = %116
  %118 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %7, i64 0, i32 0, i32 30
  %119 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %118, align 8
  %120 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %119, i64 0, i32 6
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, -1
  br i1 %122, label %123, label %139

123:                                              ; preds = %117
  %124 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %7, i64 0, i32 0, i32 24
  %125 = bitcast %struct.FT_DriverRec_** %124 to %struct.PS_DriverRec_**
  %126 = load %struct.PS_DriverRec_*, %struct.PS_DriverRec_** %125, align 8
  %127 = getelementptr inbounds %struct.PS_DriverRec_, %struct.PS_DriverRec_* %126, i64 0, i32 4
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 11
  store i32 %128, i32* %129, align 8
  %130 = load i32, i32* %127, align 8
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %157, label %132

132:                                              ; preds = %123
  %133 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %18, i64 0, i32 5
  br label %134

134:                                              ; preds = %132, %134
  %135 = phi i32 [ %130, %132 ], [ %137, %134 ]
  %136 = load i32 (i32)*, i32 (i32)** %133, align 8
  %137 = call i32 %136(i32 %135) #11
  store i32 %137, i32* %127, align 8
  %138 = icmp slt i32 %137, 0
  br i1 %138, label %134, label %157

139:                                              ; preds = %117
  %140 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 11
  store i32 %121, i32* %140, align 8
  %141 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %118, align 8
  %142 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %141, i64 0, i32 6
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %18, i64 0, i32 5
  br label %147

147:                                              ; preds = %145, %147
  %148 = phi i32 [ %143, %145 ], [ %155, %147 ]
  %149 = load i32 (i32)*, i32 (i32)** %146, align 8
  %150 = call i32 %149(i32 %148) #11
  %151 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %118, align 8
  %152 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %151, i64 0, i32 6
  store i32 %150, i32* %152, align 4
  %153 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %118, align 8
  %154 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %153, i64 0, i32 6
  %155 = load i32, i32* %154, align 4
  %156 = icmp slt i32 %155, 0
  br i1 %156, label %147, label %157

157:                                              ; preds = %147, %134, %123, %139
  %158 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 11
  %159 = load i32, i32* %158, align 8
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %165

161:                                              ; preds = %157
  %162 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 22
  %163 = load i64, i64* %162, align 8
  %164 = trunc i64 %163 to i32
  store i32 %164, i32* %158, align 8
  br label %165

165:                                              ; preds = %116, %116, %157, %161
  %166 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 1, i32 23
  %167 = load i64, i64* %166, align 8
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %183, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 0, i32 22
  %171 = load i64, i64* %170, align 8
  %172 = add i64 %167, %4
  %173 = add i64 %172, %171
  %174 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %3, i64 %173) #11
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %183

176:                                              ; preds = %169
  %177 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 9
  %178 = call fastcc i32 @cff_index_init(%struct.CFF_IndexRec_* %177, %struct.FT_StreamRec_* %3, i8 zeroext 1, i8 zeroext %22)
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %176
  %181 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %0, i64 0, i32 10
  %182 = call fastcc i32 @cff_index_get_pointers(%struct.CFF_IndexRec_* %177, i8*** %181, i8** null, i64* null)
  br label %183

183:                                              ; preds = %176, %169, %165, %113, %110, %108, %76, %71, %48, %180
  %184 = phi i32 [ %49, %48 ], [ %96, %108 ], [ 0, %110 ], [ %114, %113 ], [ %174, %169 ], [ %178, %176 ], [ %182, %180 ], [ 0, %165 ], [ %74, %71 ], [ %79, %76 ]
  %185 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %34, align 8
  %186 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %185, i64 0, i32 0
  %187 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %186, align 8
  %188 = load i8*, i8** %40, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %187, i8* %188) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %13) #11
  ret i32 %184
}

declare hidden i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_*, i32*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @cff_vstore_done(%struct.CFF_VStoreRec_* nocapture, %struct.FT_MemoryRec_*) unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.CFF_VStoreRec_, %struct.CFF_VStoreRec_* %0, i64 0, i32 4
  %4 = load %struct.CFF_VarRegion_*, %struct.CFF_VarRegion_** %3, align 8
  %5 = icmp eq %struct.CFF_VarRegion_* %4, null
  %6 = bitcast %struct.CFF_VarRegion_* %4 to i8*
  br i1 %5, label %33, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.CFF_VStoreRec_, %struct.CFF_VStoreRec_* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %33, label %11

11:                                               ; preds = %7
  %12 = bitcast %struct.CFF_VarRegion_* %4 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %1, i8* %13) #11
  %14 = load %struct.CFF_VarRegion_*, %struct.CFF_VarRegion_** %3, align 8
  %15 = getelementptr inbounds %struct.CFF_VarRegion_, %struct.CFF_VarRegion_* %14, i64 0, i32 0
  store %struct.CFF_AxisCoords_* null, %struct.CFF_AxisCoords_** %15, align 8
  %16 = load i32, i32* %8, align 4
  %17 = icmp ugt i32 %16, 1
  br i1 %17, label %18, label %30

18:                                               ; preds = %11, %18
  %19 = phi i64 [ %26, %18 ], [ 1, %11 ]
  %20 = load %struct.CFF_VarRegion_*, %struct.CFF_VarRegion_** %3, align 8
  %21 = getelementptr inbounds %struct.CFF_VarRegion_, %struct.CFF_VarRegion_* %20, i64 %19, i32 0
  %22 = bitcast %struct.CFF_AxisCoords_** %21 to i8**
  %23 = load i8*, i8** %22, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %1, i8* %23) #11
  %24 = load %struct.CFF_VarRegion_*, %struct.CFF_VarRegion_** %3, align 8
  %25 = getelementptr inbounds %struct.CFF_VarRegion_, %struct.CFF_VarRegion_* %24, i64 %19, i32 0
  store %struct.CFF_AxisCoords_* null, %struct.CFF_AxisCoords_** %25, align 8
  %26 = add nuw nsw i64 %19, 1
  %27 = load i32, i32* %8, align 4
  %28 = zext i32 %27 to i64
  %29 = icmp ult i64 %26, %28
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %11
  %31 = bitcast %struct.CFF_VarRegion_** %3 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %7, %2
  %34 = phi i8* [ %32, %30 ], [ %6, %7 ], [ %6, %2 ]
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %1, i8* %34) #11
  store %struct.CFF_VarRegion_* null, %struct.CFF_VarRegion_** %3, align 8
  %35 = getelementptr inbounds %struct.CFF_VStoreRec_, %struct.CFF_VStoreRec_* %0, i64 0, i32 1
  %36 = load %struct.CFF_VarData_*, %struct.CFF_VarData_** %35, align 8
  %37 = icmp eq %struct.CFF_VarData_* %36, null
  %38 = bitcast %struct.CFF_VarData_* %36 to i8*
  br i1 %37, label %66, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.CFF_VStoreRec_, %struct.CFF_VStoreRec_* %0, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %66, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.CFF_VarData_, %struct.CFF_VarData_* %36, i64 0, i32 1
  %45 = bitcast i32** %44 to i8**
  %46 = load i8*, i8** %45, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %1, i8* %46) #11
  %47 = load %struct.CFF_VarData_*, %struct.CFF_VarData_** %35, align 8
  %48 = getelementptr inbounds %struct.CFF_VarData_, %struct.CFF_VarData_* %47, i64 0, i32 1
  store i32* null, i32** %48, align 8
  %49 = load i32, i32* %40, align 8
  %50 = icmp ugt i32 %49, 1
  br i1 %50, label %51, label %63

51:                                               ; preds = %43, %51
  %52 = phi i64 [ %59, %51 ], [ 1, %43 ]
  %53 = load %struct.CFF_VarData_*, %struct.CFF_VarData_** %35, align 8
  %54 = getelementptr inbounds %struct.CFF_VarData_, %struct.CFF_VarData_* %53, i64 %52, i32 1
  %55 = bitcast i32** %54 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %1, i8* %56) #11
  %57 = load %struct.CFF_VarData_*, %struct.CFF_VarData_** %35, align 8
  %58 = getelementptr inbounds %struct.CFF_VarData_, %struct.CFF_VarData_* %57, i64 %52, i32 1
  store i32* null, i32** %58, align 8
  %59 = add nuw nsw i64 %52, 1
  %60 = load i32, i32* %40, align 8
  %61 = zext i32 %60 to i64
  %62 = icmp ult i64 %59, %61
  br i1 %62, label %51, label %63

63:                                               ; preds = %51, %43
  %64 = bitcast %struct.CFF_VarData_** %35 to i8**
  %65 = load i8*, i8** %64, align 8
  br label %66

66:                                               ; preds = %63, %39, %33
  %67 = phi i8* [ %65, %63 ], [ %38, %39 ], [ %38, %33 ]
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %1, i8* %67) #11
  store %struct.CFF_VarData_* null, %struct.CFF_VarData_** %35, align 8
  ret void
}

declare hidden zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_*) local_unnamed_addr #6

declare hidden i8* @ft_mem_strdup(%struct.FT_MemoryRec_*, i8*, i32*) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !5, !3}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !5, !3}
!12 = distinct !{!12, !9}
!13 = distinct !{!13, !3}
!14 = distinct !{!14, !9}
!15 = distinct !{!15, !5, !3}
!16 = distinct !{!16, !9}
!17 = distinct !{!17, !9}
!18 = !{!19}
!19 = distinct !{!19, !20}
!20 = distinct !{!20, !"LVerDomain"}
!21 = !{!22}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !3}
!24 = distinct !{!24, !9}
!25 = distinct !{!25, !3}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !3}
!32 = distinct !{!32, !9}
!33 = distinct !{!33, !3}
!34 = !{!35}
!35 = distinct !{!35, !36}
!36 = distinct !{!36, !"LVerDomain"}
!37 = !{!38}
!38 = distinct !{!38, !36}
!39 = distinct !{!39, !3}
!40 = distinct !{!40, !9}
!41 = distinct !{!41, !3}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !3}
!48 = distinct !{!48, !9}
!49 = distinct !{!49, !3}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !3}
!56 = distinct !{!56, !9}
!57 = distinct !{!57, !3}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = distinct !{!63, !3}
!64 = distinct !{!64, !9}
!65 = distinct !{!65, !3}
!66 = distinct !{!66, !9}
!67 = !{!68}
!68 = distinct !{!68, !69}
!69 = distinct !{!69, !"LVerDomain"}
!70 = !{!71}
!71 = distinct !{!71, !69}
!72 = distinct !{!72, !3}
!73 = distinct !{!73, !3}
