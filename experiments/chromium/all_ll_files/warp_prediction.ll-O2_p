; ModuleID = '../../third_party/libgav1/src/src/warp_prediction.cc'
source_filename = "../../third_party/libgav1/src/src/warp_prediction.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.libgav1::GlobalMotion" = type { i8, [6 x i32], i16, i16, i16, i16 }
%"struct.libgav1::MotionVector" = type { %union.anon }
%union.anon = type { i32 }

@_ZN7libgav112_GLOBAL__N_114kDivisorLookupE = internal unnamed_addr constant [257 x i16] [i16 16384, i16 16320, i16 16257, i16 16194, i16 16132, i16 16070, i16 16009, i16 15948, i16 15888, i16 15828, i16 15768, i16 15709, i16 15650, i16 15592, i16 15534, i16 15477, i16 15420, i16 15364, i16 15308, i16 15252, i16 15197, i16 15142, i16 15087, i16 15033, i16 14980, i16 14926, i16 14873, i16 14821, i16 14769, i16 14717, i16 14665, i16 14614, i16 14564, i16 14513, i16 14463, i16 14413, i16 14364, i16 14315, i16 14266, i16 14218, i16 14170, i16 14122, i16 14075, i16 14028, i16 13981, i16 13935, i16 13888, i16 13843, i16 13797, i16 13752, i16 13707, i16 13662, i16 13618, i16 13574, i16 13530, i16 13487, i16 13443, i16 13400, i16 13358, i16 13315, i16 13273, i16 13231, i16 13190, i16 13148, i16 13107, i16 13066, i16 13026, i16 12985, i16 12945, i16 12906, i16 12866, i16 12827, i16 12788, i16 12749, i16 12710, i16 12672, i16 12633, i16 12596, i16 12558, i16 12520, i16 12483, i16 12446, i16 12409, i16 12373, i16 12336, i16 12300, i16 12264, i16 12228, i16 12193, i16 12157, i16 12122, i16 12087, i16 12053, i16 12018, i16 11984, i16 11950, i16 11916, i16 11882, i16 11848, i16 11815, i16 11782, i16 11749, i16 11716, i16 11683, i16 11651, i16 11619, i16 11586, i16 11555, i16 11523, i16 11491, i16 11460, i16 11429, i16 11398, i16 11367, i16 11336, i16 11305, i16 11275, i16 11245, i16 11215, i16 11185, i16 11155, i16 11125, i16 11096, i16 11067, i16 11038, i16 11009, i16 10980, i16 10951, i16 10923, i16 10894, i16 10866, i16 10838, i16 10810, i16 10782, i16 10755, i16 10727, i16 10700, i16 10673, i16 10645, i16 10618, i16 10592, i16 10565, i16 10538, i16 10512, i16 10486, i16 10460, i16 10434, i16 10408, i16 10382, i16 10356, i16 10331, i16 10305, i16 10280, i16 10255, i16 10230, i16 10205, i16 10180, i16 10156, i16 10131, i16 10107, i16 10082, i16 10058, i16 10034, i16 10010, i16 9986, i16 9963, i16 9939, i16 9916, i16 9892, i16 9869, i16 9846, i16 9823, i16 9800, i16 9777, i16 9754, i16 9732, i16 9709, i16 9687, i16 9664, i16 9642, i16 9620, i16 9598, i16 9576, i16 9554, i16 9533, i16 9511, i16 9489, i16 9468, i16 9447, i16 9425, i16 9404, i16 9383, i16 9362, i16 9341, i16 9321, i16 9300, i16 9279, i16 9259, i16 9239, i16 9218, i16 9198, i16 9178, i16 9158, i16 9138, i16 9118, i16 9098, i16 9079, i16 9059, i16 9039, i16 9020, i16 9001, i16 8981, i16 8962, i16 8943, i16 8924, i16 8905, i16 8886, i16 8867, i16 8849, i16 8830, i16 8812, i16 8793, i16 8775, i16 8756, i16 8738, i16 8720, i16 8702, i16 8684, i16 8666, i16 8648, i16 8630, i16 8613, i16 8595, i16 8577, i16 8560, i16 8542, i16 8525, i16 8508, i16 8490, i16 8473, i16 8456, i16 8439, i16 8422, i16 8405, i16 8389, i16 8372, i16 8355, i16 8339, i16 8322, i16 8306, i16 8289, i16 8273, i16 8257, i16 8240, i16 8224, i16 8208, i16 8192], align 16

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav110SetupShearEPNS_12GlobalMotionE(%"struct.libgav1::GlobalMotion"* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %0, i64 0, i32 1, i64 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 0
  %5 = sub nsw i32 0, %3
  %6 = select i1 %4, i32 %5, i32 %3
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 true) #2, !range !2
  %8 = xor i32 %7, 31
  %9 = shl i32 1, %8
  %10 = sub nsw i32 %6, %9
  %11 = icmp ugt i32 %8, 8
  br i1 %11, label %12, label %18

12:                                               ; preds = %1
  %13 = add nsw i32 %8, -8
  %14 = shl i32 1, %13
  %15 = ashr i32 %14, 1
  %16 = add nsw i32 %15, %10
  %17 = ashr i32 %16, %13
  br label %21

18:                                               ; preds = %1
  %19 = sub nuw nsw i32 8, %8
  %20 = shl i32 %10, %19
  br label %21

21:                                               ; preds = %12, %18
  %22 = phi i32 [ %17, %12 ], [ %20, %18 ]
  %23 = add nuw nsw i32 %8, 14
  %24 = sext i32 %22 to i64
  %25 = getelementptr inbounds [257 x i16], [257 x i16]* @_ZN7libgav112_GLOBAL__N_114kDivisorLookupE, i64 0, i64 %24
  %26 = load i16, i16* %25, align 2
  %27 = sub i16 0, %26
  %28 = select i1 %4, i16 %27, i16 %26
  %29 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %0, i64 0, i32 1, i64 3
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %0, i64 0, i32 1, i64 4
  %32 = load i32, i32* %31, align 4
  %33 = shl i32 %32, 16
  %34 = sext i32 %33 to i64
  %35 = sext i16 %28 to i64
  %36 = mul nsw i64 %34, %35
  %37 = ashr i64 %36, 63
  %38 = zext i32 %23 to i64
  %39 = shl i64 1, %38
  %40 = ashr exact i64 %39, 1
  %41 = add nsw i64 %36, %40
  %42 = add nsw i64 %41, %37
  %43 = ashr i64 %42, %38
  %44 = trunc i64 %43 to i32
  %45 = sext i32 %30 to i64
  %46 = sext i32 %32 to i64
  %47 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %0, i64 0, i32 1, i64 5
  %48 = load i32, i32* %47, align 4
  %49 = mul nsw i64 %35, %45
  %50 = mul i64 %49, %46
  %51 = ashr i64 %50, 63
  %52 = add i64 %50, %40
  %53 = add i64 %52, %51
  %54 = ashr i64 %53, %38
  %55 = trunc i64 %54 to i32
  %56 = sub nsw i32 %48, %55
  %57 = icmp slt i32 %3, 98303
  %58 = select i1 %57, i32 %3, i32 98303
  %59 = icmp sgt i32 %58, 32768
  %60 = select i1 %59, i32 %58, i32 32768
  %61 = add nsw i32 %60, -65536
  %62 = ashr i32 %61, 31
  %63 = add nsw i32 %62, %61
  %64 = trunc i32 %63 to i16
  %65 = add i16 %64, 32
  %66 = and i16 %65, -64
  %67 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %0, i64 0, i32 2
  store i16 %66, i16* %67, align 4
  %68 = icmp slt i32 %30, 32767
  %69 = select i1 %68, i32 %30, i32 32767
  %70 = icmp sgt i32 %69, -32768
  %71 = select i1 %70, i32 %69, i32 -32768
  %72 = ashr i32 %71, 31
  %73 = add nsw i32 %72, %71
  %74 = trunc i32 %73 to i16
  %75 = add i16 %74, 32
  %76 = and i16 %75, -64
  %77 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %0, i64 0, i32 3
  store i16 %76, i16* %77, align 2
  %78 = icmp slt i32 %44, 32767
  %79 = select i1 %78, i32 %44, i32 32767
  %80 = icmp sgt i32 %79, -32768
  %81 = select i1 %80, i32 %79, i32 -32768
  %82 = ashr i32 %81, 31
  %83 = add nsw i32 %82, %81
  %84 = trunc i32 %83 to i16
  %85 = add i16 %84, 32
  %86 = and i16 %85, -64
  %87 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %0, i64 0, i32 4
  store i16 %86, i16* %87, align 4
  %88 = icmp slt i32 %56, 98303
  %89 = select i1 %88, i32 %56, i32 98303
  %90 = icmp sgt i32 %89, 32768
  %91 = select i1 %90, i32 %89, i32 32768
  %92 = add nsw i32 %91, -65536
  %93 = ashr i32 %92, 31
  %94 = add nsw i32 %93, %92
  %95 = trunc i32 %94 to i16
  %96 = add i16 %95, 32
  %97 = and i16 %96, -64
  %98 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %0, i64 0, i32 5
  store i16 %97, i16* %98, align 2
  %99 = sext i16 %66 to i32
  %100 = icmp slt i32 %99, 0
  %101 = sub nsw i32 0, %99
  %102 = select i1 %100, i32 %101, i32 %99
  %103 = shl nsw i32 %102, 2
  %104 = sext i16 %76 to i32
  %105 = icmp slt i32 %104, 0
  %106 = sub nsw i32 0, %104
  %107 = select i1 %105, i32 %106, i32 %104
  %108 = mul nsw i32 %107, 7
  %109 = add nuw nsw i32 %108, %103
  %110 = icmp sgt i32 %109, 65535
  br i1 %110, label %122, label %111

111:                                              ; preds = %21
  %112 = sext i16 %86 to i32
  %113 = icmp slt i32 %112, 0
  %114 = sub nsw i32 0, %112
  %115 = select i1 %113, i32 %114, i32 %112
  %116 = sext i16 %97 to i32
  %117 = icmp slt i32 %116, 0
  %118 = sub nsw i32 0, %116
  %119 = select i1 %117, i32 %118, i32 %116
  %120 = add nuw nsw i32 %119, %115
  %121 = icmp slt i32 %120, 16384
  br label %122

122:                                              ; preds = %111, %21
  %123 = phi i1 [ false, %21 ], [ %121, %111 ]
  ret i1 %123
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav114WarpEstimationEiiiiiRKNS_12MotionVectorEPA4_KiPNS_12GlobalMotionE(i32, i32, i32, i32, i32, %"struct.libgav1::MotionVector"* nocapture readonly dereferenceable(4), [4 x i32]* nocapture readonly, %"struct.libgav1::GlobalMotion"* nocapture) local_unnamed_addr #0 {
  %9 = shl i32 %3, 2
  %10 = shl i32 %2, 1
  %11 = add i32 %10, -1
  %12 = add i32 %11, %9
  %13 = shl i32 %4, 2
  %14 = shl i32 %1, 1
  %15 = add i32 %14, -1
  %16 = add i32 %15, %13
  %17 = shl i32 %12, 3
  %18 = shl i32 %16, 3
  %19 = bitcast %"struct.libgav1::MotionVector"* %5 to [2 x i16]*
  %20 = bitcast %"struct.libgav1::MotionVector"* %5 to i16*
  %21 = getelementptr inbounds [2 x i16], [2 x i16]* %19, i64 0, i64 1
  %22 = icmp sgt i32 %0, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %8
  %24 = load i16, i16* %21, align 2
  %25 = sext i16 %24 to i32
  %26 = load i16, i16* %20, align 4
  %27 = sext i16 %26 to i32
  %28 = add i32 %17, %27
  %29 = add i32 %18, %25
  %30 = zext i32 %0 to i64
  br label %43

31:                                               ; preds = %120, %8
  %32 = phi i64 [ 0, %8 ], [ %121, %120 ]
  %33 = phi i64 [ 0, %8 ], [ %122, %120 ]
  %34 = phi i32 [ 0, %8 ], [ %123, %120 ]
  %35 = phi i32 [ 0, %8 ], [ %124, %120 ]
  %36 = phi i32 [ 0, %8 ], [ %125, %120 ]
  %37 = phi i32 [ 0, %8 ], [ %126, %120 ]
  %38 = phi i64 [ 0, %8 ], [ %127, %120 ]
  %39 = mul nsw i64 %38, %33
  %40 = mul nsw i64 %32, %32
  %41 = sub nsw i64 %39, %40
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %277, label %130

43:                                               ; preds = %120, %23
  %44 = phi i64 [ 0, %23 ], [ %128, %120 ]
  %45 = phi i64 [ 0, %23 ], [ %127, %120 ]
  %46 = phi i32 [ 0, %23 ], [ %126, %120 ]
  %47 = phi i32 [ 0, %23 ], [ %125, %120 ]
  %48 = phi i32 [ 0, %23 ], [ %124, %120 ]
  %49 = phi i32 [ 0, %23 ], [ %123, %120 ]
  %50 = phi i64 [ 0, %23 ], [ %122, %120 ]
  %51 = phi i64 [ 0, %23 ], [ %121, %120 ]
  %52 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 %44, i64 0
  %53 = load i32, i32* %52, align 4
  %54 = sub nsw i32 %53, %17
  %55 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 %44, i64 1
  %56 = load i32, i32* %55, align 4
  %57 = sub nsw i32 %56, %18
  %58 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 %44, i64 2
  %59 = load i32, i32* %58, align 4
  %60 = sub i32 %59, %28
  %61 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 %44, i64 3
  %62 = load i32, i32* %61, align 4
  %63 = sub i32 %62, %29
  %64 = sub nsw i32 %57, %63
  %65 = icmp slt i32 %64, 0
  %66 = sub nsw i32 0, %64
  %67 = select i1 %65, i32 %66, i32 %64
  %68 = icmp slt i32 %67, 256
  br i1 %68, label %69, label %120

69:                                               ; preds = %43
  %70 = sub nsw i32 %54, %60
  %71 = icmp slt i32 %70, 0
  %72 = sub nsw i32 0, %70
  %73 = select i1 %71, i32 %72, i32 %70
  %74 = icmp slt i32 %73, 256
  br i1 %74, label %75, label %120

75:                                               ; preds = %69
  %76 = mul nsw i32 %57, %57
  %77 = lshr i32 %76, 2
  %78 = shl i32 %57, 1
  %79 = add i32 %78, 8
  %80 = add i32 %79, %77
  %81 = sext i32 %80 to i64
  %82 = add nsw i64 %45, %81
  %83 = mul nsw i32 %57, %54
  %84 = ashr i32 %83, 2
  %85 = add i32 %54, 4
  %86 = add i32 %85, %57
  %87 = add i32 %86, %84
  %88 = sext i32 %87 to i64
  %89 = add nsw i64 %51, %88
  %90 = mul nsw i32 %54, %54
  %91 = lshr i32 %90, 2
  %92 = shl i32 %54, 1
  %93 = add i32 %92, 8
  %94 = add i32 %93, %91
  %95 = sext i32 %94 to i64
  %96 = add nsw i64 %50, %95
  %97 = mul nsw i32 %63, %57
  %98 = ashr i32 %97, 2
  %99 = add i32 %49, 8
  %100 = add i32 %99, %57
  %101 = add i32 %100, %63
  %102 = add i32 %101, %98
  %103 = mul nsw i32 %63, %54
  %104 = ashr i32 %103, 2
  %105 = add i32 %85, %48
  %106 = add i32 %105, %63
  %107 = add i32 %106, %104
  %108 = mul nsw i32 %60, %57
  %109 = ashr i32 %108, 2
  %110 = add i32 %57, 4
  %111 = add i32 %110, %47
  %112 = add i32 %111, %60
  %113 = add i32 %112, %109
  %114 = mul nsw i32 %60, %54
  %115 = ashr i32 %114, 2
  %116 = add i32 %46, 8
  %117 = add i32 %116, %54
  %118 = add i32 %117, %60
  %119 = add i32 %118, %115
  br label %120

120:                                              ; preds = %75, %69, %43
  %121 = phi i64 [ %89, %75 ], [ %51, %69 ], [ %51, %43 ]
  %122 = phi i64 [ %96, %75 ], [ %50, %69 ], [ %50, %43 ]
  %123 = phi i32 [ %102, %75 ], [ %49, %69 ], [ %49, %43 ]
  %124 = phi i32 [ %107, %75 ], [ %48, %69 ], [ %48, %43 ]
  %125 = phi i32 [ %113, %75 ], [ %47, %69 ], [ %47, %43 ]
  %126 = phi i32 [ %119, %75 ], [ %46, %69 ], [ %46, %43 ]
  %127 = phi i64 [ %82, %75 ], [ %45, %69 ], [ %45, %43 ]
  %128 = add nuw nsw i64 %44, 1
  %129 = icmp eq i64 %128, %30
  br i1 %129, label %31, label %43

130:                                              ; preds = %31
  %131 = sub nsw i64 0, %41
  %132 = icmp slt i64 %41, 0
  %133 = select i1 %132, i64 %131, i64 %41
  %134 = tail call i64 @llvm.ctlz.i64(i64 %133, i1 true) #2, !range !3
  %135 = trunc i64 %134 to i32
  %136 = xor i32 %135, 63
  %137 = zext i32 %136 to i64
  %138 = shl i64 1, %137
  %139 = sub nsw i64 %133, %138
  %140 = icmp ugt i32 %136, 8
  br i1 %140, label %141, label %148

141:                                              ; preds = %130
  %142 = add nsw i32 %136, -8
  %143 = zext i32 %142 to i64
  %144 = shl i64 1, %143
  %145 = ashr i64 %144, 1
  %146 = add nsw i64 %145, %139
  %147 = ashr i64 %146, %143
  br label %152

148:                                              ; preds = %130
  %149 = sub nuw nsw i32 8, %136
  %150 = zext i32 %149 to i64
  %151 = shl i64 %139, %150
  br label %152

152:                                              ; preds = %141, %148
  %153 = phi i64 [ %147, %141 ], [ %151, %148 ]
  %154 = trunc i32 %136 to i16
  %155 = shl i64 %153, 32
  %156 = ashr exact i64 %155, 32
  %157 = getelementptr inbounds [257 x i16], [257 x i16]* @_ZN7libgav112_GLOBAL__N_114kDivisorLookupE, i64 0, i64 %156
  %158 = load i16, i16* %157, align 2
  %159 = sub i16 0, %158
  %160 = select i1 %132, i16 %159, i16 %158
  %161 = add nsw i16 %154, -2
  %162 = sext i32 %34 to i64
  %163 = mul nsw i64 %33, %162
  %164 = sext i32 %35 to i64
  %165 = mul nsw i64 %32, %164
  %166 = sub nsw i64 %163, %165
  %167 = sub nsw i64 0, %32
  %168 = mul nsw i64 %162, %167
  %169 = mul nsw i64 %38, %164
  %170 = add nsw i64 %169, %168
  %171 = sext i32 %36 to i64
  %172 = mul nsw i64 %33, %171
  %173 = sext i32 %37 to i64
  %174 = mul nsw i64 %32, %173
  %175 = sub nsw i64 %172, %174
  %176 = mul nsw i64 %171, %167
  %177 = mul nsw i64 %38, %173
  %178 = add nsw i64 %177, %176
  %179 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %7, i64 0, i32 1, i64 0
  %180 = sext i16 %161 to i32
  %181 = icmp slt i16 %161, 1
  br i1 %181, label %182, label %196

182:                                              ; preds = %152
  %183 = sub nsw i32 0, %180
  %184 = sext i16 %160 to i32
  %185 = shl i32 %184, %183
  %186 = trunc i64 %166 to i32
  %187 = shl i32 %185, 16
  %188 = ashr exact i32 %187, 16
  %189 = mul nsw i32 %188, %186
  %190 = trunc i64 %170 to i32
  %191 = mul nsw i32 %188, %190
  %192 = trunc i64 %175 to i32
  %193 = mul nsw i32 %188, %192
  %194 = trunc i64 %178 to i32
  %195 = mul nsw i32 %188, %194
  br label %225

196:                                              ; preds = %152
  %197 = sext i16 %160 to i64
  %198 = mul nsw i64 %166, %197
  %199 = ashr i64 %198, 63
  %200 = zext i32 %180 to i64
  %201 = shl i64 1, %200
  %202 = ashr i64 %201, 1
  %203 = add i64 %198, %202
  %204 = add i64 %203, %199
  %205 = ashr i64 %204, %200
  %206 = trunc i64 %205 to i32
  %207 = mul nsw i64 %170, %197
  %208 = ashr i64 %207, 63
  %209 = add i64 %207, %202
  %210 = add i64 %209, %208
  %211 = ashr i64 %210, %200
  %212 = trunc i64 %211 to i32
  %213 = mul nsw i64 %175, %197
  %214 = ashr i64 %213, 63
  %215 = add i64 %213, %202
  %216 = add i64 %215, %214
  %217 = ashr i64 %216, %200
  %218 = trunc i64 %217 to i32
  %219 = mul nsw i64 %178, %197
  %220 = ashr i64 %219, 63
  %221 = add i64 %219, %202
  %222 = add i64 %221, %220
  %223 = ashr i64 %222, %200
  %224 = trunc i64 %223 to i32
  br label %225

225:                                              ; preds = %196, %182
  %226 = phi i32 [ %206, %196 ], [ %189, %182 ]
  %227 = phi i32 [ %212, %196 ], [ %191, %182 ]
  %228 = phi i32 [ %218, %196 ], [ %193, %182 ]
  %229 = phi i32 [ %224, %196 ], [ %195, %182 ]
  %230 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %7, i64 0, i32 1, i64 2
  %231 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %7, i64 0, i32 1, i64 3
  %232 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %7, i64 0, i32 1, i64 4
  %233 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %7, i64 0, i32 1, i64 5
  %234 = icmp slt i32 %226, 73727
  %235 = select i1 %234, i32 %226, i32 73727
  %236 = icmp sgt i32 %235, 57345
  %237 = select i1 %236, i32 %235, i32 57345
  store i32 %237, i32* %230, align 4
  %238 = icmp slt i32 %227, 8191
  %239 = select i1 %238, i32 %227, i32 8191
  %240 = icmp sgt i32 %239, -8191
  %241 = select i1 %240, i32 %239, i32 -8191
  store i32 %241, i32* %231, align 4
  %242 = icmp slt i32 %228, 8191
  %243 = select i1 %242, i32 %228, i32 8191
  %244 = icmp sgt i32 %243, -8191
  %245 = select i1 %244, i32 %243, i32 -8191
  store i32 %245, i32* %232, align 4
  %246 = icmp slt i32 %229, 73727
  %247 = select i1 %246, i32 %229, i32 73727
  %248 = icmp sgt i32 %247, 57345
  %249 = select i1 %248, i32 %247, i32 57345
  store i32 %249, i32* %233, align 4
  %250 = load i16, i16* %21, align 2
  %251 = sext i16 %250 to i32
  %252 = shl nsw i32 %251, 13
  %253 = add nsw i32 %237, -65536
  %254 = mul i32 %253, %16
  %255 = mul i32 %241, %12
  %256 = add i32 %255, %254
  %257 = sub i32 %252, %256
  %258 = load i16, i16* %20, align 4
  %259 = sext i16 %258 to i32
  %260 = shl nsw i32 %259, 13
  %261 = add nsw i32 %249, -65536
  %262 = mul i32 %245, %16
  %263 = mul i32 %261, %12
  %264 = add i32 %263, %262
  %265 = sub i32 %260, %264
  %266 = icmp slt i32 %257, 8388607
  %267 = select i1 %266, i32 %257, i32 8388607
  %268 = icmp sgt i32 %267, -8388608
  %269 = select i1 %268, i32 %267, i32 -8388608
  store i32 %269, i32* %179, align 4
  %270 = icmp slt i32 %265, 8388607
  %271 = select i1 %270, i32 %265, i32 8388607
  %272 = icmp sgt i32 %271, -8388608
  %273 = select i1 %272, i32 %271, i32 -8388608
  %274 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %7, i64 0, i32 1, i64 1
  store i32 %273, i32* %274, align 4
  %275 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %7, i64 0, i32 1, i64 6
  store i32 0, i32* %275, align 4
  %276 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %7, i64 0, i32 1, i64 7
  store i32 0, i32* %276, align 4
  br label %277

277:                                              ; preds = %31, %225
  %278 = phi i1 [ true, %225 ], [ false, %31 ]
  ret i1 %278
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = !{i64 0, i64 65}
