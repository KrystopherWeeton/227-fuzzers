; ModuleID = '../../net/proxy_resolution/proxy_list.cc'
source_filename = "../../net/proxy_resolution/proxy_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.net::ProxyList" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::ProxyServer"*, %"class.net::ProxyServer"*, %"class.std::__1::__compressed_pair.1" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.net::ProxyServer"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::StringTokenizerT" = type <{ %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__wrap_iter" = type { i8* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.16" }
%"union.absl::variant_internal::DestructibleUnionImpl.16" = type { %"union.absl::variant_internal::DestructibleUnionImpl.17" }
%"union.absl::variant_internal::DestructibleUnionImpl.17" = type { %"union.absl::variant_internal::DestructibleUnionImpl.18" }
%"union.absl::variant_internal::DestructibleUnionImpl.18" = type { %"union.absl::variant_internal::DestructibleUnionImpl.19" }
%"union.absl::variant_internal::DestructibleUnionImpl.19" = type { %"class.std::__1::basic_string" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.46", %"class.std::__1::vector.53" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.48" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.55" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::tuple.64" = type { i8 }
%"struct.net::ProxyRetryInfo" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", i8, i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"struct.net::ProxyRetryInfo" }

$_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEEC2ERKS5_ = comdat any

$_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueES9_E4typeENS7_IPKS2_EESB_SB_ = comdat any

$_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv = comdat any

$_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net14ProxyRetryInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_ = comdat any

$_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net14ProxyRetryInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net14ProxyRetryInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net14ProxyRetryInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"../../net/proxy_resolution/proxy_list.cc\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"!proxies_.empty()\00", align 1
@__const._ZNK3net9ProxyList19AddProxyToRetryListEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_14ProxyRetryInfoENS1_4lessIS8_EENS6_INS1_4pairIKS8_S9_EEEEEEN4base9TimeDeltaEbRKNS_11ProxyServerEiRKNS_16NetLogWithSourceE.retry_info = private unnamed_addr constant { %"class.base::TimeTicks", %"class.base::TimeDelta", i8, [3 x i8], i32 } { %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, align 8
@.str.3 = private unnamed_addr constant [10 x i8] c"bad_proxy\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN3net9ProxyListC1Ev = hidden unnamed_addr alias void (%"class.net::ProxyList"*), void (%"class.net::ProxyList"*)* @_ZN3net9ProxyListC2Ev
@_ZN3net9ProxyListC1ERKS0_ = hidden unnamed_addr alias void (%"class.net::ProxyList"*, %"class.net::ProxyList"*), void (%"class.net::ProxyList"*, %"class.net::ProxyList"*)* @_ZN3net9ProxyListC2ERKS0_
@_ZN3net9ProxyListC1EOS0_ = hidden unnamed_addr alias void (%"class.net::ProxyList"*, %"class.net::ProxyList"*), void (%"class.net::ProxyList"*, %"class.net::ProxyList"*)* @_ZN3net9ProxyListC2EOS0_
@_ZN3net9ProxyListD1Ev = hidden unnamed_addr alias void (%"class.net::ProxyList"*), void (%"class.net::ProxyList"*)* @_ZN3net9ProxyListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9ProxyListC2Ev(%"class.net::ProxyList"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.net::ProxyList"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9ProxyListC2ERKS0_(%"class.net::ProxyList"*, %"class.net::ProxyList"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %1, i64 0, i32 0
  tail call void @_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector"* %3, %"class.std::__1::vector"* dereferenceable(24) %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #14
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"class.net::ProxyServer"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 40
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %64, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 461168601842738790
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #15
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #16
  %18 = bitcast i8* %17 to %"class.net::ProxyServer"*
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"class.net::ProxyServer"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.net::ProxyServer"* %22, %"class.net::ProxyServer"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %25 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %24, align 8
  %26 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %4, align 8
  %27 = bitcast %"class.net::ProxyServer"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.net::ProxyServer"* %25, %26
  br i1 %29, label %62, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"class.net::ProxyServer"*
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"class.net::ProxyServer"* [ %58, %53 ], [ %31, %30 ]
  %34 = phi %"class.net::ProxyServer"* [ %57, %53 ], [ %25, %30 ]
  %35 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 0, i32 0
  %36 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %34, i64 0, i32 0
  %37 = load i32, i32* %36, align 8
  store i32 %37, i32* %35, align 8
  %38 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 0, i32 2
  %39 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %34, i64 0, i32 2
  %40 = bitcast %"class.net::HostPortPair"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %32
  %45 = bitcast %"class.net::HostPortPair"* %38 to i8*
  %46 = bitcast %"class.net::HostPortPair"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #14
  br label %53

47:                                               ; preds = %32
  %48 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %38, i64 0, i32 0
  %49 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %48, i8* %50, i64 %52) #14
  br label %53

53:                                               ; preds = %47, %44
  %54 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 0, i32 2, i32 1
  %55 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %34, i64 0, i32 2, i32 1
  %56 = load i16, i16* %55, align 8
  store i16 %56, i16* %54, align 8
  %57 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %34, i64 1
  %58 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 1
  %59 = icmp eq %"class.net::ProxyServer"* %57, %26
  br i1 %59, label %60, label %32

60:                                               ; preds = %53
  %61 = ptrtoint %"class.net::ProxyServer"* %58 to i64
  br label %62

62:                                               ; preds = %16, %60
  %63 = phi i64 [ %28, %16 ], [ %61, %60 ]
  store i64 %63, i64* %27, align 8
  br label %64

64:                                               ; preds = %2, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9ProxyListC2EOS0_(%"class.net::ProxyList"* nocapture, %"class.net::ProxyList"* nocapture dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::ProxyList"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #14
  %4 = bitcast %"class.net::ProxyList"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.net::ProxyList"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.net::ProxyServer"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.net::ProxyServer"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.net::ProxyServer"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::ProxyServer"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.net::ProxyList"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.net::ProxyList"* @_ZN3net9ProxyListaSERKS0_(%"class.net::ProxyList"* returned, %"class.net::ProxyList"* readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.net::ProxyList"* %0, %1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %6, align 8
  %8 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %8, align 8
  tail call void @_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %5, %"class.net::ProxyServer"* %7, %"class.net::ProxyServer"* %9) #14
  br label %10

10:                                               ; preds = %2, %4
  ret %"class.net::ProxyList"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.net::ProxyList"* @_ZN3net9ProxyListaSEOS0_(%"class.net::ProxyList"* returned, %"class.net::ProxyList"* nocapture dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %3, align 8
  %5 = icmp eq %"class.net::ProxyServer"* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.net::ProxyServer"* %4 to i8*
  %8 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %8, align 8
  %10 = icmp eq %"class.net::ProxyServer"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.net::ProxyServer"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %12, i64 -1
  %14 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %12, i64 -1, i32 2
  %15 = bitcast %"class.net::HostPortPair"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #16
  br label %22

22:                                               ; preds = %19, %11
  %23 = icmp eq %"class.net::ProxyServer"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.net::ProxyList"* %0 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.net::ProxyServer"* %4, %"class.net::ProxyServer"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #16
  %29 = bitcast %"class.net::ProxyList"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #14
  br label %30

30:                                               ; preds = %2, %27
  %31 = bitcast %"class.net::ProxyList"* %1 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.net::ProxyList"* %0 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %1, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.net::ProxyServer"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %38 = bitcast %"class.net::ProxyServer"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"class.net::ProxyServer"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast %"class.net::ProxyServer"** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = bitcast %"class.net::ProxyList"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #14
  ret %"class.net::ProxyList"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9ProxyListD2Ev(%"class.net::ProxyList"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %2, align 8
  %4 = icmp eq %"class.net::ProxyServer"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.net::ProxyServer"* %3 to i8*
  %7 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %7, align 8
  %9 = icmp eq %"class.net::ProxyServer"* %8, %3
  br i1 %9, label %26, label %10

10:                                               ; preds = %5, %21
  %11 = phi %"class.net::ProxyServer"* [ %12, %21 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %11, i64 -1
  %13 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %11, i64 -1, i32 2
  %14 = bitcast %"class.net::HostPortPair"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #16
  br label %21

21:                                               ; preds = %18, %10
  %22 = icmp eq %"class.net::ProxyServer"* %12, %3
  br i1 %22, label %23, label %10

23:                                               ; preds = %21
  %24 = bitcast %"class.net::ProxyList"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %5
  %27 = phi i8* [ %25, %23 ], [ %6, %5 ]
  store %"class.net::ProxyServer"* %3, %"class.net::ProxyServer"** %7, align 8
  tail call void @_ZdlPv(i8* %27) #16
  br label %28

28:                                               ; preds = %1, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9ProxyList3SetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::ProxyList"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::StringTokenizerT", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.net::ProxyServer", align 8
  %6 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %7, align 8
  %9 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %9, align 8
  %11 = icmp eq %"class.net::ProxyServer"* %10, %8
  br i1 %11, label %25, label %12

12:                                               ; preds = %2, %23
  %13 = phi %"class.net::ProxyServer"* [ %14, %23 ], [ %10, %2 ]
  %14 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %13, i64 -1
  %15 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %13, i64 -1, i32 2
  %16 = bitcast %"class.net::HostPortPair"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #16
  br label %23

23:                                               ; preds = %20, %12
  %24 = icmp eq %"class.net::ProxyServer"* %14, %8
  br i1 %24, label %25, label %12

25:                                               ; preds = %23, %2
  store %"class.net::ProxyServer"* %8, %"class.net::ProxyServer"** %9, align 8
  %26 = bitcast %"class.base::StringTokenizerT"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %26) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 96, i1 false)
  %27 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #14
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 1, i8* %29, align 1
  store i8 59, i8* %27, align 8
  %30 = getelementptr inbounds i8, i8* %27, i64 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 2, i32 0
  %34 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 3, i32 0
  %35 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 4
  %36 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 5
  %39 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #14
  %40 = load i8, i8* %37, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %47 = zext i8 %40 to i64
  %48 = select i1 %41, i8* %43, i8* %46
  %49 = select i1 %41, i64 %45, i64 %47
  %50 = getelementptr inbounds i8, i8* %48, i64 %49
  store i8* %48, i8** %31, align 8
  store i8* %48, i8** %32, align 8
  store i8* %48, i8** %33, align 8
  store i8* %50, i8** %34, align 8
  %51 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* nonnull align 8 %27, i64 24, i1 false) #14
  %52 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 6
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 7
  store i8 1, i8* %53, align 4
  %54 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 9
  store i32 0, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #14
  %55 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 5
  %56 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast %"class.net::ProxyServer"* %5 to i8*
  %60 = bitcast i8** %33 to i64*
  %61 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %5, i64 0, i32 0
  %62 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %63 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %5, i64 0, i32 2
  %64 = bitcast %"class.net::HostPortPair"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = bitcast %"class.net::HostPortPair"* %63 to i8*
  %67 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %5, i64 0, i32 2, i32 1
  %70 = bitcast %"class.net::ProxyServer"** %9 to i64*
  br label %71

71:                                               ; preds = %118, %25
  %72 = phi i32 [ %121, %118 ], [ 0, %25 ]
  %73 = phi i64 [ %120, %118 ], [ 0, %25 ]
  %74 = phi i8 [ %119, %118 ], [ 0, %25 ]
  %75 = icmp slt i8 %74, 0
  %76 = zext i8 %74 to i64
  %77 = select i1 %75, i64 %73, i64 %76
  %78 = icmp eq i64 %77, 0
  %79 = icmp eq i32 %72, 0
  %80 = and i1 %78, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %71
  %82 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %3) #14
  br i1 %82, label %85, label %122

83:                                               ; preds = %71
  %84 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %3) #14
  br i1 %84, label %85, label %122

85:                                               ; preds = %81, %83
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 40, i1 false)
  %86 = load i8*, i8** %32, align 8
  %87 = load i64, i64* %60, align 8
  %88 = ptrtoint i8* %86 to i64
  %89 = sub i64 %87, %88
  call void @_ZN3net11ProxyServer7FromURIEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_6SchemeE(%"class.net::ProxyServer"* nonnull sret %5, i8* %86, i64 %89, i32 4) #14
  %90 = load i32, i32* %61, align 8
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %113, label %92

92:                                               ; preds = %85
  %93 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %9, align 8
  %94 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %62, align 8
  %95 = icmp eq %"class.net::ProxyServer"* %93, %94
  br i1 %95, label %112, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %93, i64 0, i32 0
  store i32 %90, i32* %97, align 8
  %98 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %93, i64 0, i32 2
  %99 = load i8, i8* %65, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %96
  %102 = bitcast %"class.net::HostPortPair"* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %66, i64 24, i1 false) #14
  br label %107

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %98, i64 0, i32 0
  %105 = load i8*, i8** %67, align 8
  %106 = load i64, i64* %68, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %104, i8* %105, i64 %106) #14
  br label %107

107:                                              ; preds = %103, %101
  %108 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %93, i64 0, i32 2, i32 1
  %109 = load i16, i16* %69, align 8
  store i16 %109, i16* %108, align 8
  %110 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %93, i64 1
  %111 = ptrtoint %"class.net::ProxyServer"* %110 to i64
  store i64 %111, i64* %70, align 8
  br label %113

112:                                              ; preds = %92
  call void @_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %6, %"class.net::ProxyServer"* nonnull dereferenceable(40) %5) #14
  br label %113

113:                                              ; preds = %85, %112, %107
  %114 = load i8, i8* %65, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %113
  %117 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %117) #16
  br label %118

118:                                              ; preds = %113, %116
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59) #14
  %119 = load i8, i8* %57, align 1
  %120 = load i64, i64* %58, align 8
  %121 = load i32, i32* %52, align 8
  br label %71

122:                                              ; preds = %81, %83
  %123 = load i8, i8* %57, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %127) #16
  br label %128

128:                                              ; preds = %125, %122
  %129 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %135) #16
  br label %136

136:                                              ; preds = %128, %133
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %26) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net11ProxyServer7FromURIEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_6SchemeE(%"class.net::ProxyServer"* sret, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9ProxyList20SetSingleProxyServerERKNS_11ProxyServerE(%"class.net::ProxyList"*, %"class.net::ProxyServer"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %4, align 8
  %6 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %6, align 8
  %8 = icmp eq %"class.net::ProxyServer"* %7, %5
  br i1 %8, label %22, label %9

9:                                                ; preds = %2, %20
  %10 = phi %"class.net::ProxyServer"* [ %11, %20 ], [ %7, %2 ]
  %11 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %10, i64 -1
  %12 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %10, i64 -1, i32 2
  %13 = bitcast %"class.net::HostPortPair"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %17, %9
  %21 = icmp eq %"class.net::ProxyServer"* %11, %5
  br i1 %21, label %22, label %9

22:                                               ; preds = %20, %2
  store %"class.net::ProxyServer"* %5, %"class.net::ProxyServer"** %6, align 8
  %23 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %55, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %28 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %27, align 8
  %29 = icmp eq %"class.net::ProxyServer"* %5, %28
  br i1 %29, label %54, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %5, i64 0, i32 0
  store i32 %24, i32* %31, align 8
  %32 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %5, i64 0, i32 2
  %33 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2
  %34 = bitcast %"class.net::HostPortPair"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30
  %39 = bitcast %"class.net::HostPortPair"* %32 to i8*
  %40 = bitcast %"class.net::HostPortPair"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false) #14
  br label %47

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %32, i64 0, i32 0
  %43 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %42, i8* %44, i64 %46) #14
  br label %47

47:                                               ; preds = %41, %38
  %48 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %5, i64 0, i32 2, i32 1
  %49 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2, i32 1
  %50 = load i16, i16* %49, align 8
  store i16 %50, i16* %48, align 8
  %51 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %5, i64 1
  %52 = ptrtoint %"class.net::ProxyServer"* %51 to i64
  %53 = bitcast %"class.net::ProxyServer"** %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %55

54:                                               ; preds = %26
  tail call void @_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %3, %"class.net::ProxyServer"* dereferenceable(40) %1) #14
  br label %55

55:                                               ; preds = %22, %47, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9ProxyList14AddProxyServerERKNS_11ProxyServerE(%"class.net::ProxyList"*, %"class.net::ProxyServer"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %38, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %7, align 8
  %9 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %9, align 8
  %11 = icmp eq %"class.net::ProxyServer"* %8, %10
  br i1 %11, label %36, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %8, i64 0, i32 0
  store i32 %4, i32* %13, align 8
  %14 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %8, i64 0, i32 2
  %15 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2
  %16 = bitcast %"class.net::HostPortPair"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %12
  %21 = bitcast %"class.net::HostPortPair"* %14 to i8*
  %22 = bitcast %"class.net::HostPortPair"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #14
  br label %29

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %14, i64 0, i32 0
  %25 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %24, i8* %26, i64 %28) #14
  br label %29

29:                                               ; preds = %23, %20
  %30 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %8, i64 0, i32 2, i32 1
  %31 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2, i32 1
  %32 = load i16, i16* %31, align 8
  store i16 %32, i16* %30, align 8
  %33 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %8, i64 1
  %34 = ptrtoint %"class.net::ProxyServer"* %33 to i64
  %35 = bitcast %"class.net::ProxyServer"** %7 to i64*
  store i64 %34, i64* %35, align 8
  br label %38

36:                                               ; preds = %6
  %37 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0
  tail call void @_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %37, %"class.net::ProxyServer"* dereferenceable(40) %1) #14
  br label %38

38:                                               ; preds = %2, %36, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9ProxyList22DeprioritizeBadProxiesERKNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_14ProxyRetryInfoENS1_4lessIS8_EENS6_INS1_4pairIKS8_S9_EEEEEE(%"class.net::ProxyList"*, %"class.std::__1::map"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #14
  %10 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #14
  %14 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %15, align 8
  %17 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %18 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %17, align 8
  %19 = icmp eq %"class.net::ProxyServer"* %16, %18
  br i1 %19, label %20, label %25

20:                                               ; preds = %2
  %21 = ptrtoint %"class.net::ProxyServer"* %16 to i64
  %22 = bitcast %"class.net::ProxyList"* %0 to i64*
  %23 = bitcast %"class.std::__1::vector"* %3 to i64*
  %24 = bitcast %"class.net::ProxyServer"** %8 to i64*
  br label %127

25:                                               ; preds = %2
  %26 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %27 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %32 = bitcast %"class.net::ProxyServer"** %12 to i64*
  %33 = bitcast %"class.net::ProxyServer"** %8 to i64*
  br label %34

34:                                               ; preds = %25, %114
  %35 = phi %"class.net::ProxyServer"* [ %16, %25 ], [ %115, %114 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #14
  call void @_ZNK3net11ProxyServer5ToURIEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.net::ProxyServer"* %35) #14
  %36 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net14ProxyRetryInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree"* %27, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #14
  %37 = load i8, i8* %29, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  %40 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %40) #16
  br label %41

41:                                               ; preds = %34, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #14
  %42 = icmp eq %"class.std::__1::__tree_end_node"* %36, %31
  br i1 %42, label %84, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 7
  %45 = call i64 @_ZN4base9TimeTicks3NowEv() #14
  %46 = bitcast %"class.std::__1::__tree_end_node"* %44 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp slt i64 %47, %45
  br i1 %48, label %84, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 9
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to i8*
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %114, label %54

54:                                               ; preds = %49
  %55 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %12, align 8
  %56 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %13, align 8
  %57 = icmp eq %"class.net::ProxyServer"* %55, %56
  br i1 %57, label %83, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %55, i64 0, i32 0
  %60 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %35, i64 0, i32 0
  %61 = load i32, i32* %60, align 8
  store i32 %61, i32* %59, align 8
  %62 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %55, i64 0, i32 2
  %63 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %35, i64 0, i32 2
  %64 = bitcast %"class.net::HostPortPair"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %58
  %69 = bitcast %"class.net::HostPortPair"* %62 to i8*
  %70 = bitcast %"class.net::HostPortPair"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 24, i1 false) #14
  br label %77

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %72, i8* %74, i64 %76) #14
  br label %77

77:                                               ; preds = %71, %68
  %78 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %55, i64 0, i32 2, i32 1
  %79 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %35, i64 0, i32 2, i32 1
  %80 = load i16, i16* %79, align 8
  store i16 %80, i16* %78, align 8
  %81 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %55, i64 1
  %82 = ptrtoint %"class.net::ProxyServer"* %81 to i64
  store i64 %82, i64* %32, align 8
  br label %114

83:                                               ; preds = %54
  call void @_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"class.net::ProxyServer"* dereferenceable(40) %35) #14
  br label %114

84:                                               ; preds = %43, %41
  %85 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %8, align 8
  %86 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %9, align 8
  %87 = icmp eq %"class.net::ProxyServer"* %85, %86
  br i1 %87, label %113, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %85, i64 0, i32 0
  %90 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %35, i64 0, i32 0
  %91 = load i32, i32* %90, align 8
  store i32 %91, i32* %89, align 8
  %92 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %85, i64 0, i32 2
  %93 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %35, i64 0, i32 2
  %94 = bitcast %"class.net::HostPortPair"* %93 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %88
  %99 = bitcast %"class.net::HostPortPair"* %92 to i8*
  %100 = bitcast %"class.net::HostPortPair"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 24, i1 false) #14
  br label %107

101:                                              ; preds = %88
  %102 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %92, i64 0, i32 0
  %103 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %102, i8* %104, i64 %106) #14
  br label %107

107:                                              ; preds = %101, %98
  %108 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %85, i64 0, i32 2, i32 1
  %109 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %35, i64 0, i32 2, i32 1
  %110 = load i16, i16* %109, align 8
  store i16 %110, i16* %108, align 8
  %111 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %85, i64 1
  %112 = ptrtoint %"class.net::ProxyServer"* %111 to i64
  store i64 %112, i64* %33, align 8
  br label %114

113:                                              ; preds = %84
  call void @_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* nonnull %3, %"class.net::ProxyServer"* dereferenceable(40) %35) #14
  br label %114

114:                                              ; preds = %113, %107, %83, %77, %49
  %115 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %35, i64 1
  %116 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %17, align 8
  %117 = icmp eq %"class.net::ProxyServer"* %115, %116
  br i1 %117, label %118, label %34

118:                                              ; preds = %114
  %119 = bitcast %"class.net::ProxyList"* %0 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.std::__1::vector"* %3 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.net::ProxyServer"** %8 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8
  %125 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %11, align 8
  %126 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %12, align 8
  br label %127

127:                                              ; preds = %20, %118
  %128 = phi i64* [ %24, %20 ], [ %33, %118 ]
  %129 = phi i64* [ %23, %20 ], [ %121, %118 ]
  %130 = phi i64* [ %22, %20 ], [ %119, %118 ]
  %131 = phi %"class.net::ProxyServer"* [ null, %20 ], [ %126, %118 ]
  %132 = phi %"class.net::ProxyServer"* [ null, %20 ], [ %125, %118 ]
  %133 = phi %"class.net::ProxyServer"* [ %18, %20 ], [ %116, %118 ]
  %134 = phi i64 [ 0, %20 ], [ %122, %118 ]
  %135 = phi i64 [ %21, %20 ], [ %120, %118 ]
  %136 = phi <2 x i64> [ zeroinitializer, %20 ], [ %124, %118 ]
  %137 = bitcast %"class.net::ProxyServer"** %9 to i64*
  %138 = ptrtoint %"class.net::ProxyServer"* %133 to i64
  store i64 %134, i64* %130, align 8
  store i64 %135, i64* %129, align 8
  store i64 %138, i64* %128, align 8
  %139 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %140 = bitcast %"class.net::ProxyServer"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.net::ProxyServer"** %17 to <2 x i64>*
  store <2 x i64> %136, <2 x i64>* %142, align 8
  store i64 %141, i64* %137, align 8
  %143 = extractelement <2 x i64> %136, i32 0
  %144 = inttoptr i64 %143 to %"class.net::ProxyServer"*
  %145 = call %"class.net::ProxyServer"* @_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueES9_E4typeENS7_IPKS2_EESB_SB_(%"class.std::__1::vector"* %14, %"class.net::ProxyServer"* %144, %"class.net::ProxyServer"* %132, %"class.net::ProxyServer"* %131)
  %146 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %11, align 8
  %147 = icmp eq %"class.net::ProxyServer"* %146, null
  br i1 %147, label %170, label %148

148:                                              ; preds = %127
  %149 = bitcast %"class.net::ProxyServer"* %146 to i8*
  %150 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %12, align 8
  %151 = icmp eq %"class.net::ProxyServer"* %150, %146
  br i1 %151, label %168, label %152

152:                                              ; preds = %148, %163
  %153 = phi %"class.net::ProxyServer"* [ %154, %163 ], [ %150, %148 ]
  %154 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %153, i64 -1
  %155 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %153, i64 -1, i32 2
  %156 = bitcast %"class.net::HostPortPair"* %155 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %152
  %161 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #16
  br label %163

163:                                              ; preds = %160, %152
  %164 = icmp eq %"class.net::ProxyServer"* %154, %146
  br i1 %164, label %165, label %152

165:                                              ; preds = %163
  %166 = bitcast %"class.std::__1::vector"* %4 to i8**
  %167 = load i8*, i8** %166, align 8
  br label %168

168:                                              ; preds = %165, %148
  %169 = phi i8* [ %167, %165 ], [ %149, %148 ]
  store %"class.net::ProxyServer"* %146, %"class.net::ProxyServer"** %12, align 8
  call void @_ZdlPv(i8* %169) #16
  br label %170

170:                                              ; preds = %127, %168
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #14
  %171 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %7, align 8
  %172 = icmp eq %"class.net::ProxyServer"* %171, null
  br i1 %172, label %195, label %173

173:                                              ; preds = %170
  %174 = bitcast %"class.net::ProxyServer"* %171 to i8*
  %175 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %8, align 8
  %176 = icmp eq %"class.net::ProxyServer"* %175, %171
  br i1 %176, label %193, label %177

177:                                              ; preds = %173, %188
  %178 = phi %"class.net::ProxyServer"* [ %179, %188 ], [ %175, %173 ]
  %179 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %178, i64 -1
  %180 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %178, i64 -1, i32 2
  %181 = bitcast %"class.net::HostPortPair"* %180 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %177
  %186 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %187) #16
  br label %188

188:                                              ; preds = %185, %177
  %189 = icmp eq %"class.net::ProxyServer"* %179, %171
  br i1 %189, label %190, label %177

190:                                              ; preds = %188
  %191 = bitcast %"class.std::__1::vector"* %3 to i8**
  %192 = load i8*, i8** %191, align 8
  br label %193

193:                                              ; preds = %190, %173
  %194 = phi i8* [ %192, %190 ], [ %174, %173 ]
  store %"class.net::ProxyServer"* %171, %"class.net::ProxyServer"** %8, align 8
  call void @_ZdlPv(i8* %194) #16
  br label %195

195:                                              ; preds = %170, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret void
}

declare void @_ZNK3net11ProxyServer5ToURIEv(%"class.std::__1::basic_string"* sret, %"class.net::ProxyServer"*) local_unnamed_addr #2

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.net::ProxyServer"* @_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueES9_E4typeENS7_IPKS2_EESB_SB_(%"class.std::__1::vector"*, %"class.net::ProxyServer"*, %"class.net::ProxyServer"*, %"class.net::ProxyServer"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.net::ProxyServer"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"class.net::ProxyServer"* %2 to i64
  %8 = ptrtoint %"class.net::ProxyServer"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 40
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %300

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.net::ProxyServer"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %16, align 8
  %18 = ptrtoint %"class.net::ProxyServer"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 40
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.net::ProxyServer"** %16 to i64*
  br i1 %21, label %170, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 40
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %65

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %2, i64 %25
  %29 = icmp eq %"class.net::ProxyServer"* %28, %3
  br i1 %29, label %60, label %30

30:                                               ; preds = %27, %51
  %31 = phi %"class.net::ProxyServer"* [ %56, %51 ], [ %17, %27 ]
  %32 = phi %"class.net::ProxyServer"* [ %55, %51 ], [ %28, %27 ]
  %33 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %31, i64 0, i32 0
  %34 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %32, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %31, i64 0, i32 2
  %37 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %32, i64 0, i32 2
  %38 = bitcast %"class.net::HostPortPair"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %30
  %43 = bitcast %"class.net::HostPortPair"* %36 to i8*
  %44 = bitcast %"class.net::HostPortPair"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #14
  br label %51

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %36, i64 0, i32 0
  %47 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %46, i8* %48, i64 %50) #14
  br label %51

51:                                               ; preds = %45, %42
  %52 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %31, i64 0, i32 2, i32 1
  %53 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %32, i64 0, i32 2, i32 1
  %54 = load i16, i16* %53, align 8
  store i16 %54, i16* %52, align 8
  %55 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %32, i64 1
  %56 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %31, i64 1
  %57 = icmp eq %"class.net::ProxyServer"* %55, %3
  br i1 %57, label %58, label %30

58:                                               ; preds = %51
  %59 = ptrtoint %"class.net::ProxyServer"* %56 to i64
  br label %60

60:                                               ; preds = %58, %27
  %61 = phi i64 [ %18, %27 ], [ %59, %58 ]
  store i64 %61, i64* %22, align 8
  %62 = icmp sgt i64 %24, 0
  br i1 %62, label %63, label %300

63:                                               ; preds = %60
  %64 = inttoptr i64 %61 to %"class.net::ProxyServer"*
  br label %65

65:                                               ; preds = %63, %23
  %66 = phi i64 [ %61, %63 ], [ %18, %23 ]
  %67 = phi %"class.net::ProxyServer"* [ %64, %63 ], [ %17, %23 ]
  %68 = phi %"class.net::ProxyServer"* [ %28, %63 ], [ %3, %23 ]
  %69 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 %10
  %70 = ptrtoint %"class.net::ProxyServer"* %69 to i64
  %71 = sub i64 %66, %70
  %72 = sdiv exact i64 %71, 40
  %73 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 %72
  %74 = icmp ult %"class.net::ProxyServer"* %73, %17
  br i1 %74, label %106, label %77

75:                                               ; preds = %106
  %76 = ptrtoint %"class.net::ProxyServer"* %120 to i64
  br label %77

77:                                               ; preds = %75, %65
  %78 = phi i64 [ %76, %75 ], [ %66, %65 ]
  store i64 %78, i64* %22, align 8
  %79 = icmp eq i64 %71, 0
  br i1 %79, label %122, label %80

80:                                               ; preds = %77, %97
  %81 = phi %"class.net::ProxyServer"* [ %84, %97 ], [ %67, %77 ]
  %82 = phi %"class.net::ProxyServer"* [ %83, %97 ], [ %73, %77 ]
  %83 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %82, i64 -1
  %84 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %81, i64 -1
  %85 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %83, i64 0, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %84, i64 0, i32 0
  store i32 %86, i32* %87, align 8
  %88 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %81, i64 -1, i32 2
  %89 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %82, i64 -1, i32 2
  %90 = bitcast %"class.net::HostPortPair"* %88 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %80
  %95 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  tail call void @_ZdlPv(i8* %96) #16
  br label %97

97:                                               ; preds = %94, %80
  %98 = bitcast %"class.net::HostPortPair"* %88 to i8*
  %99 = bitcast %"class.net::HostPortPair"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 24, i1 false) #14
  %100 = bitcast %"class.net::HostPortPair"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  store i8 0, i8* %101, align 1
  store i8 0, i8* %99, align 1
  %102 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %82, i64 -1, i32 2, i32 1
  %103 = load i16, i16* %102, align 8
  %104 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %81, i64 -1, i32 2, i32 1
  store i16 %103, i16* %104, align 8
  %105 = icmp eq %"class.net::ProxyServer"* %83, %1
  br i1 %105, label %122, label %80

106:                                              ; preds = %65, %106
  %107 = phi %"class.net::ProxyServer"* [ %120, %106 ], [ %67, %65 ]
  %108 = phi %"class.net::ProxyServer"* [ %119, %106 ], [ %73, %65 ]
  %109 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %107, i64 0, i32 0
  %110 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %108, i64 0, i32 0
  %111 = load i32, i32* %110, align 8
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %107, i64 0, i32 2
  %113 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %108, i64 0, i32 2
  %114 = bitcast %"class.net::HostPortPair"* %112 to i8*
  %115 = bitcast %"class.net::HostPortPair"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 24, i1 false) #14
  %116 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %107, i64 0, i32 2, i32 1
  %117 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %108, i64 0, i32 2, i32 1
  %118 = load i16, i16* %117, align 8
  store i16 %118, i16* %116, align 8
  %119 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %108, i64 1
  %120 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %107, i64 1
  %121 = icmp ult %"class.net::ProxyServer"* %119, %17
  br i1 %121, label %106, label %75

122:                                              ; preds = %97, %77
  %123 = icmp eq %"class.net::ProxyServer"* %68, %2
  br i1 %123, label %300, label %124

124:                                              ; preds = %122, %163
  %125 = phi %"class.net::ProxyServer"* [ %168, %163 ], [ %1, %122 ]
  %126 = phi %"class.net::ProxyServer"* [ %167, %163 ], [ %2, %122 ]
  %127 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %126, i64 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %125, i64 0, i32 0
  store i32 %128, i32* %129, align 8
  %130 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %125, i64 0, i32 2
  %131 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %126, i64 0, i32 2
  %132 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %130, i64 0, i32 0
  %133 = icmp eq %"class.net::ProxyServer"* %125, %126
  br i1 %133, label %163, label %134

134:                                              ; preds = %124
  %135 = bitcast %"class.net::HostPortPair"* %130 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  %139 = bitcast %"class.net::HostPortPair"* %131 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %138, label %153, label %143

143:                                              ; preds = %134
  br i1 %142, label %147, label %144

144:                                              ; preds = %143
  %145 = bitcast %"class.net::HostPortPair"* %130 to i8*
  %146 = bitcast %"class.net::HostPortPair"* %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %145, i8* align 8 %146, i64 24, i1 false) #14
  br label %163

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  %150 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %132, i8* %149, i64 %151) #14
  br label %163

153:                                              ; preds = %134
  %154 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i8*, i8** %154, align 8
  %156 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.net::HostPortPair"* %131 to i8*
  %159 = zext i8 %141 to i64
  %160 = select i1 %142, i8* %155, i8* %158
  %161 = select i1 %142, i64 %157, i64 %159
  %162 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %132, i8* %160, i64 %161) #14
  br label %163

163:                                              ; preds = %153, %147, %144, %124
  %164 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %126, i64 0, i32 2, i32 1
  %165 = load i16, i16* %164, align 8
  %166 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %125, i64 0, i32 2, i32 1
  store i16 %165, i16* %166, align 8
  %167 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %126, i64 1
  %168 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %125, i64 1
  %169 = icmp eq %"class.net::ProxyServer"* %167, %68
  br i1 %169, label %300, label %124

170:                                              ; preds = %12
  %171 = bitcast %"class.std::__1::vector"* %0 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = sub i64 %18, %172
  %174 = sdiv exact i64 %173, 40
  %175 = add nsw i64 %174, %10
  %176 = icmp ugt i64 %175, 461168601842738790
  br i1 %176, label %177, label %179

177:                                              ; preds = %170
  %178 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %178) #15
  unreachable

179:                                              ; preds = %170
  %180 = sub i64 %15, %172
  %181 = sdiv exact i64 %180, 40
  %182 = icmp ult i64 %181, 230584300921369395
  br i1 %182, label %186, label %183

183:                                              ; preds = %179
  %184 = sub i64 %5, %172
  %185 = sdiv exact i64 %184, 40
  br label %193

186:                                              ; preds = %179
  %187 = shl nsw i64 %181, 1
  %188 = icmp ult i64 %187, %175
  %189 = select i1 %188, i64 %175, i64 %187
  %190 = sub i64 %5, %172
  %191 = sdiv exact i64 %190, 40
  %192 = icmp eq i64 %189, 0
  br i1 %192, label %199, label %193

193:                                              ; preds = %186, %183
  %194 = phi i64 [ %185, %183 ], [ %191, %186 ]
  %195 = phi i64 [ 461168601842738790, %183 ], [ %189, %186 ]
  %196 = mul i64 %195, 40
  %197 = tail call i8* @_Znwm(i64 %196) #16
  %198 = bitcast i8* %197 to %"class.net::ProxyServer"*
  br label %199

199:                                              ; preds = %193, %186
  %200 = phi i64 [ %194, %193 ], [ %191, %186 ]
  %201 = phi i64 [ %195, %193 ], [ 0, %186 ]
  %202 = phi %"class.net::ProxyServer"* [ %198, %193 ], [ null, %186 ]
  %203 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %202, i64 %200
  %204 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %202, i64 %201
  %205 = ptrtoint %"class.net::ProxyServer"* %204 to i64
  %206 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %203, i64 %10
  br label %207

207:                                              ; preds = %199, %228
  %208 = phi %"class.net::ProxyServer"* [ %232, %228 ], [ %203, %199 ]
  %209 = phi %"class.net::ProxyServer"* [ %233, %228 ], [ %2, %199 ]
  %210 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %208, i64 0, i32 0
  %211 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %209, i64 0, i32 0
  %212 = load i32, i32* %211, align 8
  store i32 %212, i32* %210, align 8
  %213 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %208, i64 0, i32 2
  %214 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %209, i64 0, i32 2
  %215 = bitcast %"class.net::HostPortPair"* %214 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %215, i64 0, i32 1, i32 0
  %217 = load i8, i8* %216, align 1
  %218 = icmp slt i8 %217, 0
  br i1 %218, label %222, label %219

219:                                              ; preds = %207
  %220 = bitcast %"class.net::HostPortPair"* %213 to i8*
  %221 = bitcast %"class.net::HostPortPair"* %214 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %220, i8* align 8 %221, i64 24, i1 false) #14
  br label %228

222:                                              ; preds = %207
  %223 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %213, i64 0, i32 0
  %224 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %214, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %227 = load i64, i64* %226, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %223, i8* %225, i64 %227) #14
  br label %228

228:                                              ; preds = %222, %219
  %229 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %208, i64 0, i32 2, i32 1
  %230 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %209, i64 0, i32 2, i32 1
  %231 = load i16, i16* %230, align 8
  store i16 %231, i16* %229, align 8
  %232 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %208, i64 1
  %233 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %209, i64 1
  %234 = icmp eq %"class.net::ProxyServer"* %206, %232
  br i1 %234, label %235, label %207

235:                                              ; preds = %228
  %236 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %6, align 8
  %237 = icmp eq %"class.net::ProxyServer"* %236, %1
  br i1 %237, label %254, label %238

238:                                              ; preds = %235, %238
  %239 = phi %"class.net::ProxyServer"* [ %252, %238 ], [ %203, %235 ]
  %240 = phi %"class.net::ProxyServer"* [ %241, %238 ], [ %1, %235 ]
  %241 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %240, i64 -1
  %242 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %239, i64 -1, i32 0
  %243 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %241, i64 0, i32 0
  %244 = load i32, i32* %243, align 8
  store i32 %244, i32* %242, align 8
  %245 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %239, i64 -1, i32 2
  %246 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %240, i64 -1, i32 2
  %247 = bitcast %"class.net::HostPortPair"* %245 to i8*
  %248 = bitcast %"class.net::HostPortPair"* %246 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %248, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %248, i8 0, i64 24, i1 false) #14
  %249 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %239, i64 -1, i32 2, i32 1
  %250 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %240, i64 -1, i32 2, i32 1
  %251 = load i16, i16* %250, align 8
  store i16 %251, i16* %249, align 8
  %252 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %239, i64 -1
  %253 = icmp eq %"class.net::ProxyServer"* %241, %236
  br i1 %253, label %254, label %238

254:                                              ; preds = %238, %235
  %255 = phi %"class.net::ProxyServer"* [ %203, %235 ], [ %252, %238 ]
  %256 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %16, align 8
  %257 = icmp eq %"class.net::ProxyServer"* %256, %1
  br i1 %257, label %276, label %258

258:                                              ; preds = %254, %258
  %259 = phi %"class.net::ProxyServer"* [ %272, %258 ], [ %206, %254 ]
  %260 = phi %"class.net::ProxyServer"* [ %271, %258 ], [ %1, %254 ]
  %261 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %259, i64 0, i32 0
  %262 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %260, i64 0, i32 0
  %263 = load i32, i32* %262, align 8
  store i32 %263, i32* %261, align 8
  %264 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %259, i64 0, i32 2
  %265 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %260, i64 0, i32 2
  %266 = bitcast %"class.net::HostPortPair"* %264 to i8*
  %267 = bitcast %"class.net::HostPortPair"* %265 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %266, i8* align 8 %267, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %267, i8 0, i64 24, i1 false) #14
  %268 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %259, i64 0, i32 2, i32 1
  %269 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %260, i64 0, i32 2, i32 1
  %270 = load i16, i16* %269, align 8
  store i16 %270, i16* %268, align 8
  %271 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %260, i64 1
  %272 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %259, i64 1
  %273 = icmp eq %"class.net::ProxyServer"* %271, %256
  br i1 %273, label %274, label %258

274:                                              ; preds = %258
  %275 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %16, align 8
  br label %276

276:                                              ; preds = %254, %274
  %277 = phi %"class.net::ProxyServer"* [ %275, %274 ], [ %1, %254 ]
  %278 = phi %"class.net::ProxyServer"* [ %272, %274 ], [ %206, %254 ]
  %279 = ptrtoint %"class.net::ProxyServer"* %255 to i64
  %280 = ptrtoint %"class.net::ProxyServer"* %278 to i64
  %281 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %6, align 8
  store i64 %279, i64* %171, align 8
  store i64 %280, i64* %22, align 8
  store i64 %205, i64* %14, align 8
  %282 = icmp eq %"class.net::ProxyServer"* %277, %281
  br i1 %282, label %296, label %283

283:                                              ; preds = %276, %294
  %284 = phi %"class.net::ProxyServer"* [ %285, %294 ], [ %277, %276 ]
  %285 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %284, i64 -1
  %286 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %284, i64 -1, i32 2
  %287 = bitcast %"class.net::HostPortPair"* %286 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %288 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %287, i64 0, i32 1, i32 0
  %289 = load i8, i8* %288, align 1
  %290 = icmp slt i8 %289, 0
  br i1 %290, label %291, label %294

291:                                              ; preds = %283
  %292 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %286, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load i8*, i8** %292, align 8
  tail call void @_ZdlPv(i8* %293) #16
  br label %294

294:                                              ; preds = %291, %283
  %295 = icmp eq %"class.net::ProxyServer"* %285, %281
  br i1 %295, label %296, label %283

296:                                              ; preds = %294, %276
  %297 = icmp eq %"class.net::ProxyServer"* %281, null
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = bitcast %"class.net::ProxyServer"* %281 to i8*
  tail call void @_ZdlPv(i8* %299) #16
  br label %300

300:                                              ; preds = %163, %298, %296, %60, %122, %4
  %301 = phi %"class.net::ProxyServer"* [ %1, %4 ], [ %1, %122 ], [ %1, %60 ], [ %203, %296 ], [ %203, %298 ], [ %1, %163 ]
  ret %"class.net::ProxyServer"* %301
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9ProxyList26RemoveProxiesWithoutSchemeEi(%"class.net::ProxyList"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %3, align 8
  %5 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %5, align 8
  %7 = icmp eq %"class.net::ProxyServer"* %6, %4
  br i1 %7, label %13, label %8

8:                                                ; preds = %2, %69
  %9 = phi %"class.net::ProxyServer"* [ %15, %69 ], [ %6, %2 ]
  %10 = phi %"class.net::ProxyServer"* [ %12, %69 ], [ %4, %2 ]
  %11 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %10, i64 1
  br label %14

13:                                               ; preds = %69, %66, %2
  ret void

14:                                               ; preds = %8, %66
  %15 = phi %"class.net::ProxyServer"* [ %9, %8 ], [ %67, %66 ]
  %16 = load i32, i32* %11, align 8
  %17 = and i32 %16, %1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %69

19:                                               ; preds = %14
  %20 = icmp eq %"class.net::ProxyServer"* %12, %15
  br i1 %20, label %50, label %21

21:                                               ; preds = %19, %36
  %22 = phi %"class.net::ProxyServer"* [ %45, %36 ], [ %10, %19 ]
  %23 = phi %"class.net::ProxyServer"* [ %44, %36 ], [ %12, %19 ]
  %24 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %22, i64 0, i32 0
  store i32 %25, i32* %26, align 8
  %27 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %22, i64 0, i32 2
  %28 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %23, i64 0, i32 2
  %29 = bitcast %"class.net::HostPortPair"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #16
  br label %36

36:                                               ; preds = %33, %21
  %37 = bitcast %"class.net::HostPortPair"* %27 to i8*
  %38 = bitcast %"class.net::HostPortPair"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #14
  %39 = bitcast %"class.net::HostPortPair"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 0, i8* %40, align 1
  store i8 0, i8* %38, align 1
  %41 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %23, i64 0, i32 2, i32 1
  %42 = load i16, i16* %41, align 8
  %43 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %22, i64 0, i32 2, i32 1
  store i16 %42, i16* %43, align 8
  %44 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %23, i64 1
  %45 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %22, i64 1
  %46 = icmp eq %"class.net::ProxyServer"* %44, %15
  br i1 %46, label %47, label %21

47:                                               ; preds = %36
  %48 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %5, align 8
  %49 = icmp eq %"class.net::ProxyServer"* %48, %45
  br i1 %49, label %66, label %50

50:                                               ; preds = %47, %19
  %51 = phi %"class.net::ProxyServer"* [ %45, %47 ], [ %10, %19 ]
  %52 = phi %"class.net::ProxyServer"* [ %48, %47 ], [ %12, %19 ]
  br label %53

53:                                               ; preds = %64, %50
  %54 = phi %"class.net::ProxyServer"* [ %55, %64 ], [ %52, %50 ]
  %55 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %54, i64 -1
  %56 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %54, i64 -1, i32 2
  %57 = bitcast %"class.net::HostPortPair"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  tail call void @_ZdlPv(i8* %63) #16
  br label %64

64:                                               ; preds = %61, %53
  %65 = icmp eq %"class.net::ProxyServer"* %55, %51
  br i1 %65, label %66, label %53

66:                                               ; preds = %64, %47
  %67 = phi %"class.net::ProxyServer"* [ %45, %47 ], [ %51, %64 ]
  store %"class.net::ProxyServer"* %67, %"class.net::ProxyServer"** %5, align 8
  %68 = icmp eq %"class.net::ProxyServer"* %67, %10
  br i1 %68, label %13, label %14

69:                                               ; preds = %14
  %70 = icmp eq %"class.net::ProxyServer"* %15, %12
  br i1 %70, label %13, label %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9ProxyList5ClearEv(%"class.net::ProxyList"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %2, align 8
  %4 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %4, align 8
  %6 = icmp eq %"class.net::ProxyServer"* %5, %3
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"class.net::ProxyServer"* [ %9, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %8, i64 -1
  %10 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %8, i64 -1, i32 2
  %11 = bitcast %"class.net::HostPortPair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #16
  br label %18

18:                                               ; preds = %15, %7
  %19 = icmp eq %"class.net::ProxyServer"* %9, %3
  br i1 %19, label %20, label %7

20:                                               ; preds = %18, %1
  store %"class.net::ProxyServer"* %3, %"class.net::ProxyServer"** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %2, align 8
  %4 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %4, align 8
  %6 = icmp eq %"class.net::ProxyServer"* %3, %5
  ret i1 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net9ProxyList4sizeEv(%"class.net::ProxyList"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.net::ProxyServer"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.net::ProxyList"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = sdiv exact i64 %7, 40
  ret i64 %8
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net9ProxyList6EqualsERKS0_(%"class.net::ProxyList"* nocapture readonly, %"class.net::ProxyList"* nocapture readonly dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.net::ProxyServer"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.net::ProxyList"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.net::ProxyServer"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.net::ProxyList"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp eq i64 %8, %14
  br i1 %15, label %16, label %92

16:                                               ; preds = %2
  %17 = inttoptr i64 %7 to %"class.net::ProxyServer"*
  %18 = inttoptr i64 %5 to %"class.net::ProxyServer"*
  %19 = icmp eq %"class.net::ProxyServer"* %17, %18
  br i1 %19, label %92, label %20

20:                                               ; preds = %16
  %21 = inttoptr i64 %13 to %"class.net::ProxyServer"*
  br label %22

22:                                               ; preds = %20, %88
  %23 = phi %"class.net::ProxyServer"* [ %90, %88 ], [ %21, %20 ]
  %24 = phi %"class.net::ProxyServer"* [ %89, %88 ], [ %17, %20 ]
  %25 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %23, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %92

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %24, i64 0, i32 2
  %32 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %23, i64 0, i32 2
  %33 = bitcast %"class.net::HostPortPair"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %35 to i64
  %40 = select i1 %36, i64 %38, i64 %39
  %41 = bitcast %"class.net::HostPortPair"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i64 %46, i64 %47
  %49 = icmp eq i64 %40, %48
  br i1 %49, label %50, label %92

50:                                               ; preds = %30
  %51 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.net::HostPortPair"* %31 to i8*
  %54 = select i1 %36, i8* %52, i8* %53
  %55 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = bitcast %"class.net::HostPortPair"* %32 to i8*
  %58 = select i1 %44, i8* %56, i8* %57
  %59 = icmp eq i64 %40, 0
  br i1 %36, label %66, label %60

60:                                               ; preds = %50
  br i1 %59, label %82, label %61

61:                                               ; preds = %60
  %62 = ptrtoint i8* %52 to i64
  %63 = trunc i64 %62 to i8
  %64 = load i8, i8* %58, align 1
  %65 = icmp eq i8 %64, %63
  br i1 %65, label %67, label %92

66:                                               ; preds = %50
  br i1 %59, label %82, label %79

67:                                               ; preds = %61, %74
  %68 = phi i64 [ %71, %74 ], [ %39, %61 ]
  %69 = phi i8* [ %72, %74 ], [ %53, %61 ]
  %70 = phi i8* [ %75, %74 ], [ %58, %61 ]
  %71 = add i64 %68, -1
  %72 = getelementptr inbounds i8, i8* %69, i64 1
  %73 = icmp eq i64 %71, 0
  br i1 %73, label %82, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds i8, i8* %70, i64 1
  %76 = load i8, i8* %72, align 1
  %77 = load i8, i8* %75, align 1
  %78 = icmp eq i8 %76, %77
  br i1 %78, label %67, label %92

79:                                               ; preds = %66
  %80 = tail call i32 @bcmp(i8* %54, i8* %58, i64 %40) #14
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %92

82:                                               ; preds = %67, %79, %66, %60
  %83 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %24, i64 0, i32 2, i32 1
  %84 = load i16, i16* %83, align 8
  %85 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %23, i64 0, i32 2, i32 1
  %86 = load i16, i16* %85, align 8
  %87 = icmp eq i16 %84, %86
  br i1 %87, label %88, label %92

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %24, i64 1
  %90 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %23, i64 1
  %91 = icmp eq %"class.net::ProxyServer"* %89, %18
  br i1 %91, label %92, label %22

92:                                               ; preds = %88, %82, %79, %61, %30, %22, %74, %16, %2
  %93 = phi i1 [ false, %2 ], [ true, %16 ], [ false, %74 ], [ true, %88 ], [ false, %61 ], [ false, %30 ], [ false, %79 ], [ false, %22 ], [ false, %82 ]
  ret i1 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.net::ProxyServer"* @_ZNK3net9ProxyList3GetEv(%"class.net::ProxyList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %3, align 8
  %5 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %5, align 8
  %7 = icmp eq %"class.net::ProxyServer"* %4, %6
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 116, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0)) #14
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %11 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %3, align 8
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi %"class.net::ProxyServer"* [ %4, %1 ], [ %11, %8 ]
  ret %"class.net::ProxyServer"* %13
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZNK3net9ProxyList6GetAllEv(%"class.net::ProxyList"* readnone) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0
  ret %"class.std::__1::vector"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9ProxyList16SetFromPacStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::ProxyList"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.net::HostPortPair", align 8
  %4 = alloca %"class.base::StringTokenizerT", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.net::ProxyServer", align 8
  %7 = alloca %"class.net::ProxyServer", align 8
  %8 = bitcast %"class.base::StringTokenizerT"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %8) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 96, i1 false)
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 1, i8* %11, align 1
  store i8 59, i8* %9, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 1
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 2, i32 0
  %16 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 3, i32 0
  %17 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 4
  %18 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 5
  %21 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #14
  %22 = load i8, i8* %19, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %29 = zext i8 %22 to i64
  %30 = select i1 %23, i8* %25, i8* %28
  %31 = select i1 %23, i64 %27, i64 %29
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  store i8* %30, i8** %13, align 8
  store i8* %30, i8** %14, align 8
  store i8* %30, i8** %15, align 8
  store i8* %32, i8** %16, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* nonnull align 8 %9, i64 24, i1 false) #14
  %34 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 6
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 7
  store i8 1, i8* %35, align 4
  %36 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 9
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %37, align 8
  %39 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %40 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #14
  %41 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0
  %42 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %44 = icmp eq %"class.net::ProxyServer"* %40, %38
  br i1 %44, label %58, label %45

45:                                               ; preds = %2, %56
  %46 = phi %"class.net::ProxyServer"* [ %47, %56 ], [ %40, %2 ]
  %47 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %46, i64 -1
  %48 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %46, i64 -1, i32 2
  %49 = bitcast %"class.net::HostPortPair"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #16
  br label %56

56:                                               ; preds = %53, %45
  %57 = icmp eq %"class.net::ProxyServer"* %47, %38
  br i1 %57, label %58, label %45

58:                                               ; preds = %56, %2
  store %"class.net::ProxyServer"* %38, %"class.net::ProxyServer"** %43, align 8
  %59 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 5
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast %"class.net::ProxyServer"* %6 to i8*
  %64 = bitcast i8** %15 to i64*
  %65 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %6, i64 0, i32 0
  %66 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %6, i64 0, i32 2
  %68 = bitcast %"class.net::HostPortPair"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = bitcast %"class.net::HostPortPair"* %67 to i8*
  %71 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %6, i64 0, i32 2, i32 1
  %74 = bitcast %"class.net::ProxyServer"** %43 to i64*
  br label %75

75:                                               ; preds = %122, %58
  %76 = load i8, i8* %61, align 1
  %77 = icmp slt i8 %76, 0
  %78 = load i64, i64* %62, align 8
  %79 = zext i8 %76 to i64
  %80 = select i1 %77, i64 %78, i64 %79
  %81 = icmp eq i64 %80, 0
  %82 = load i32, i32* %34, align 8
  %83 = icmp eq i32 %82, 0
  %84 = and i1 %81, %83
  br i1 %84, label %85, label %87

85:                                               ; preds = %75
  %86 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %4) #14
  br i1 %86, label %89, label %123

87:                                               ; preds = %75
  %88 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %4) #14
  br i1 %88, label %89, label %123

89:                                               ; preds = %85, %87
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 40, i1 false)
  %90 = load i8*, i8** %14, align 8
  %91 = load i64, i64* %64, align 8
  %92 = ptrtoint i8* %90 to i64
  %93 = sub i64 %91, %92
  call void @_ZN3net11ProxyServer13FromPacStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::ProxyServer"* nonnull sret %6, i8* %90, i64 %93) #14
  %94 = load i32, i32* %65, align 8
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %117, label %96

96:                                               ; preds = %89
  %97 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %43, align 8
  %98 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %66, align 8
  %99 = icmp eq %"class.net::ProxyServer"* %97, %98
  br i1 %99, label %116, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %97, i64 0, i32 0
  store i32 %94, i32* %101, align 8
  %102 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %97, i64 0, i32 2
  %103 = load i8, i8* %69, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %100
  %106 = bitcast %"class.net::HostPortPair"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %70, i64 24, i1 false) #14
  br label %111

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %102, i64 0, i32 0
  %109 = load i8*, i8** %71, align 8
  %110 = load i64, i64* %72, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %108, i8* %109, i64 %110) #14
  br label %111

111:                                              ; preds = %107, %105
  %112 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %97, i64 0, i32 2, i32 1
  %113 = load i16, i16* %73, align 8
  store i16 %113, i16* %112, align 8
  %114 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %97, i64 1
  %115 = ptrtoint %"class.net::ProxyServer"* %114 to i64
  store i64 %115, i64* %74, align 8
  br label %117

116:                                              ; preds = %96
  call void @_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %41, %"class.net::ProxyServer"* nonnull dereferenceable(40) %6) #14
  br label %117

117:                                              ; preds = %89, %116, %111
  %118 = load i8, i8* %69, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %122

120:                                              ; preds = %117
  %121 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %121) #16
  br label %122

122:                                              ; preds = %117, %120
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #14
  br label %75

123:                                              ; preds = %85, %87
  %124 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %42, align 8
  %125 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %43, align 8
  %126 = icmp eq %"class.net::ProxyServer"* %124, %125
  br i1 %126, label %127, label %164

127:                                              ; preds = %123
  %128 = bitcast %"class.net::ProxyServer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %128) #14
  %129 = bitcast %"class.net::HostPortPair"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %129) #14, !noalias !3
  call void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"* nonnull %3) #14, !noalias !3
  call void @_ZN3net11ProxyServerC1ENS0_6SchemeERKNS_12HostPortPairE(%"class.net::ProxyServer"* nonnull %7, i32 2, %"class.net::HostPortPair"* nonnull dereferenceable(32) %3) #14
  %130 = bitcast %"class.net::HostPortPair"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1, !noalias !3
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8, !noalias !3
  call void @_ZdlPv(i8* %136) #16
  br label %137

137:                                              ; preds = %127, %134
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %129) #14, !noalias !3
  %138 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %43, align 8
  %139 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %66, align 8
  %140 = icmp ult %"class.net::ProxyServer"* %138, %139
  br i1 %140, label %141, label %154

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %138, i64 0, i32 0
  %143 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %7, i64 0, i32 0
  %144 = load i32, i32* %143, align 8
  store i32 %144, i32* %142, align 8
  %145 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %138, i64 0, i32 2
  %146 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %7, i64 0, i32 2
  %147 = bitcast %"class.net::HostPortPair"* %145 to i8*
  %148 = bitcast %"class.net::HostPortPair"* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 24, i1 false) #14
  %149 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %138, i64 0, i32 2, i32 1
  %150 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %7, i64 0, i32 2, i32 1
  %151 = load i16, i16* %150, align 8
  store i16 %151, i16* %149, align 8
  %152 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %138, i64 1
  %153 = ptrtoint %"class.net::ProxyServer"* %152 to i64
  store i64 %153, i64* %74, align 8
  br label %163

154:                                              ; preds = %137
  call void @_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %41, %"class.net::ProxyServer"* nonnull dereferenceable(40) %7) #14
  %155 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %7, i64 0, i32 2
  %156 = bitcast %"class.net::HostPortPair"* %155 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %154
  %161 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #16
  br label %163

163:                                              ; preds = %141, %154, %160
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %128) #14
  br label %164

164:                                              ; preds = %163, %123
  %165 = load i8, i8* %61, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  call void @_ZdlPv(i8* %169) #16
  br label %170

170:                                              ; preds = %167, %164
  %171 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %173 = load i8, i8* %172, align 1
  %174 = icmp slt i8 %173, 0
  br i1 %174, label %175, label %178

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load i8*, i8** %176, align 8
  call void @_ZdlPv(i8* %177) #16
  br label %178

178:                                              ; preds = %170, %175
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %8) #14
  ret void
}

declare void @_ZN3net11ProxyServer13FromPacStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::ProxyServer"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net9ProxyList11ToPacStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::ProxyList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #14
  %8 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %8, align 8
  %10 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %10, align 8
  %12 = icmp eq %"class.net::ProxyServer"* %9, %11
  %13 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  br i1 %12, label %50, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %21

21:                                               ; preds = %15, %39
  %22 = phi i1 [ true, %15 ], [ %48, %39 ]
  %23 = phi %"class.net::ProxyServer"* [ %9, %15 ], [ %40, %39 ]
  br i1 %22, label %26, label %24

24:                                               ; preds = %21
  %25 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #14
  br label %26

26:                                               ; preds = %24, %21
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #14
  call void @_ZNK3net11ProxyServer11ToPacStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.net::ProxyServer"* %23) #14
  %27 = load i8, i8* %18, align 1
  %28 = icmp slt i8 %27, 0
  %29 = load i8*, i8** %19, align 8
  %30 = load i64, i64* %20, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i8* %29, i8* %16
  %33 = select i1 %28, i64 %30, i64 %31
  %34 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %32, i64 %33) #14
  %35 = load i8, i8* %18, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %26
  %38 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %38) #16
  br label %39

39:                                               ; preds = %26, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #14
  %40 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %23, i64 1
  %41 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %10, align 8
  %42 = icmp eq %"class.net::ProxyServer"* %40, %41
  %43 = load i8, i8* %14, align 1
  %44 = icmp slt i8 %43, 0
  %45 = load i64, i64* %7, align 8
  %46 = zext i8 %43 to i64
  %47 = select i1 %44, i64 %45, i64 %46
  %48 = icmp eq i64 %47, 0
  br i1 %42, label %49, label %21

49:                                               ; preds = %39
  br i1 %48, label %50, label %53

50:                                               ; preds = %2, %49
  %51 = phi i8 [ %43, %49 ], [ 0, %2 ]
  %52 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #14
  br label %59

53:                                               ; preds = %49
  br i1 %44, label %56, label %54

54:                                               ; preds = %53
  %55 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* nonnull align 8 %5, i64 24, i1 false) #14
  br label %59

56:                                               ; preds = %53
  %57 = load i8*, i8** %6, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %57, i64 %45) #14
  %58 = load i8, i8* %14, align 1
  br label %59

59:                                               ; preds = %56, %54, %50
  %60 = phi i8 [ %58, %56 ], [ %43, %54 ], [ %51, %50 ]
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %59
  %63 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %63) #16
  br label %64

64:                                               ; preds = %59, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret void
}

declare void @_ZNK3net11ProxyServer11ToPacStringEv(%"class.std::__1::basic_string"* sret, %"class.net::ProxyServer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net9ProxyList7ToValueEv(%"class.base::Value"* noalias sret, %"class.net::ProxyList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 7) #14
  %5 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %5, align 8
  %7 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %7, align 8
  %9 = icmp eq %"class.net::ProxyServer"* %6, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %16

15:                                               ; preds = %22, %2
  ret void

16:                                               ; preds = %10, %22
  %17 = phi %"class.net::ProxyServer"* [ %6, %10 ], [ %23, %22 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  call void @_ZNK3net11ProxyServer5ToURIEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.net::ProxyServer"* %17) #14
  call void @_ZN4base5Value6AppendEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %18 = load i8, i8* %13, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %21) #16
  br label %22

22:                                               ; preds = %16, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  %23 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %17, i64 1
  %24 = icmp eq %"class.net::ProxyServer"* %23, %8
  br i1 %24, label %15, label %16
}

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #2

declare void @_ZN4base5Value6AppendEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net9ProxyList8FallbackEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_14ProxyRetryInfoENS1_4lessIS8_EENS6_INS1_4pairIKS8_S9_EEEEEEiRKNS_16NetLogWithSourceE(%"class.net::ProxyList"* nocapture, %"class.std::__1::map"*, i32, %"class.net::NetLogWithSource"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %5, align 8
  %7 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %7, align 8
  %9 = icmp eq %"class.net::ProxyServer"* %6, %8
  br i1 %9, label %71, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %6, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  tail call void @_ZNK3net9ProxyList19AddProxyToRetryListEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_14ProxyRetryInfoENS1_4lessIS8_EENS6_INS1_4pairIKS8_S9_EEEEEEN4base9TimeDeltaEbRKNS_11ProxyServerEiRKNS_16NetLogWithSourceE(%"class.net::ProxyList"* undef, %"class.std::__1::map"* %1, i64 300000000, i1 zeroext true, %"class.net::ProxyServer"* dereferenceable(40) %6, i32 %2, %"class.net::NetLogWithSource"* dereferenceable(24) %3) #14
  %15 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %5, align 8
  %16 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %7, align 8
  br label %17

17:                                               ; preds = %10, %14
  %18 = phi %"class.net::ProxyServer"* [ %8, %10 ], [ %16, %14 ]
  %19 = phi %"class.net::ProxyServer"* [ %6, %10 ], [ %15, %14 ]
  %20 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %19, i64 1
  %21 = icmp eq %"class.net::ProxyServer"* %20, %18
  br i1 %21, label %51, label %22

22:                                               ; preds = %17, %37
  %23 = phi %"class.net::ProxyServer"* [ %46, %37 ], [ %19, %17 ]
  %24 = phi %"class.net::ProxyServer"* [ %45, %37 ], [ %20, %17 ]
  %25 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %23, i64 0, i32 0
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %23, i64 0, i32 2
  %29 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %24, i64 0, i32 2
  %30 = bitcast %"class.net::HostPortPair"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #16
  br label %37

37:                                               ; preds = %34, %22
  %38 = bitcast %"class.net::HostPortPair"* %28 to i8*
  %39 = bitcast %"class.net::HostPortPair"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #14
  %40 = bitcast %"class.net::HostPortPair"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  store i8 0, i8* %41, align 1
  store i8 0, i8* %39, align 1
  %42 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %24, i64 0, i32 2, i32 1
  %43 = load i16, i16* %42, align 8
  %44 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %23, i64 0, i32 2, i32 1
  store i16 %43, i16* %44, align 8
  %45 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %24, i64 1
  %46 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %23, i64 1
  %47 = icmp eq %"class.net::ProxyServer"* %45, %18
  br i1 %47, label %48, label %22

48:                                               ; preds = %37
  %49 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %7, align 8
  %50 = icmp eq %"class.net::ProxyServer"* %49, %46
  br i1 %50, label %67, label %51

51:                                               ; preds = %48, %17
  %52 = phi %"class.net::ProxyServer"* [ %46, %48 ], [ %19, %17 ]
  %53 = phi %"class.net::ProxyServer"* [ %49, %48 ], [ %18, %17 ]
  br label %54

54:                                               ; preds = %65, %51
  %55 = phi %"class.net::ProxyServer"* [ %56, %65 ], [ %53, %51 ]
  %56 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %55, i64 -1
  %57 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %55, i64 -1, i32 2
  %58 = bitcast %"class.net::HostPortPair"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  tail call void @_ZdlPv(i8* %64) #16
  br label %65

65:                                               ; preds = %62, %54
  %66 = icmp eq %"class.net::ProxyServer"* %56, %52
  br i1 %66, label %67, label %54

67:                                               ; preds = %65, %48
  %68 = phi %"class.net::ProxyServer"* [ %46, %48 ], [ %52, %65 ]
  store %"class.net::ProxyServer"* %68, %"class.net::ProxyServer"** %7, align 8
  %69 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %5, align 8
  %70 = icmp ne %"class.net::ProxyServer"* %69, %68
  br label %71

71:                                               ; preds = %4, %67
  %72 = phi i1 [ %70, %67 ], [ false, %4 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net9ProxyList25UpdateRetryInfoOnFallbackEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_14ProxyRetryInfoENS1_4lessIS8_EENS6_INS1_4pairIKS8_S9_EEEEEEN4base9TimeDeltaEbRKNS1_6vectorINS_11ProxyServerENS6_ISL_EEEEiRKNS_16NetLogWithSourceE(%"class.net::ProxyList"* nocapture readonly, %"class.std::__1::map"*, i64, i1 zeroext, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i32, %"class.net::NetLogWithSource"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %8, align 8
  %10 = getelementptr inbounds %"class.net::ProxyList", %"class.net::ProxyList"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %10, align 8
  %12 = icmp eq %"class.net::ProxyServer"* %9, %11
  br i1 %12, label %27, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %9, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  tail call void @_ZNK3net9ProxyList19AddProxyToRetryListEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_14ProxyRetryInfoENS1_4lessIS8_EENS6_INS1_4pairIKS8_S9_EEEEEEN4base9TimeDeltaEbRKNS_11ProxyServerEiRKNS_16NetLogWithSourceE(%"class.net::ProxyList"* undef, %"class.std::__1::map"* %1, i64 %2, i1 zeroext %3, %"class.net::ProxyServer"* dereferenceable(40) %9, i32 %5, %"class.net::NetLogWithSource"* dereferenceable(24) %6)
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %19 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %21 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %20, align 8
  %22 = icmp eq %"class.net::ProxyServer"* %19, %21
  br i1 %22, label %27, label %23

23:                                               ; preds = %17, %23
  %24 = phi %"class.net::ProxyServer"* [ %25, %23 ], [ %19, %17 ]
  tail call void @_ZNK3net9ProxyList19AddProxyToRetryListEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_14ProxyRetryInfoENS1_4lessIS8_EENS6_INS1_4pairIKS8_S9_EEEEEEN4base9TimeDeltaEbRKNS_11ProxyServerEiRKNS_16NetLogWithSourceE(%"class.net::ProxyList"* undef, %"class.std::__1::map"* %1, i64 %2, i1 zeroext %3, %"class.net::ProxyServer"* dereferenceable(40) %24, i32 %5, %"class.net::NetLogWithSource"* dereferenceable(24) %6)
  %25 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %24, i64 1
  %26 = icmp eq %"class.net::ProxyServer"* %25, %21
  br i1 %26, label %27, label %23

27:                                               ; preds = %23, %17, %7, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net9ProxyList19AddProxyToRetryListEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_14ProxyRetryInfoENS1_4lessIS8_EENS6_INS1_4pairIKS8_S9_EEEEEEN4base9TimeDeltaEbRKNS_11ProxyServerEiRKNS_16NetLogWithSourceE(%"class.net::ProxyList"* nocapture readnone, %"class.std::__1::map"*, i64, i1 zeroext, %"class.net::ProxyServer"* dereferenceable(40), i32, %"class.net::NetLogWithSource"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"class.std::__1::tuple.64", align 1
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = zext i1 %3 to i8
  %13 = tail call i64 @_ZN4base9TimeTicks3NowEv() #14
  %14 = add i64 %2, -9223372036854775807
  %15 = icmp ult i64 %14, 2
  br i1 %15, label %23, label %16

16:                                               ; preds = %7
  %17 = icmp slt i64 %2, 0
  %18 = select i1 %17, i64 -9223372036854775808, i64 9223372036854775807
  %19 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %13, i64 %2) #14
  %20 = extractvalue { i64, i1 } %19, 1
  %21 = extractvalue { i64, i1 } %19, 0
  %22 = select i1 %20, i64 %18, i64 %21, !prof !6
  br label %31

23:                                               ; preds = %7
  %24 = add i64 %13, -9223372036854775807
  %25 = icmp ugt i64 %24, 1
  %26 = icmp eq i64 %13, %2
  %27 = or i1 %26, %25
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #14
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  br label %31

31:                                               ; preds = %16, %23, %28
  %32 = phi i64 [ %22, %16 ], [ %2, %23 ], [ %2, %28 ]
  %33 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #14
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  call void @_ZNK3net11ProxyServer5ToURIEv(%"class.std::__1::basic_string"* nonnull sret %11, %"class.net::ProxyServer"* %4) #14
  %37 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0
  %38 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net14ProxyRetryInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree"* %37, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #14
  %39 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = icmp eq %"class.std::__1::__tree_end_node"* %38, %39
  br i1 %40, label %46, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 7
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = icmp sgt i64 %32, %44
  br i1 %45, label %46, label %62

46:                                               ; preds = %31, %41
  %47 = bitcast %"class.std::__1::tuple"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #14
  %48 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %11, %"class.std::__1::basic_string"** %48, align 8
  %49 = getelementptr inbounds %"class.std::__1::tuple.64", %"class.std::__1::tuple.64"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %49) #14
  %50 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net14ProxyRetryInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %37, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.64"* nonnull dereferenceable(1) %9) #14
  %51 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %50, 0
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 7
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"struct.net::ProxyRetryInfo"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %49) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  %54 = bitcast %"class.std::__1::__tree_end_node"* %52 to i64*
  store i64 %32, i64* %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 8
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to i64*
  store i64 %2, i64* %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 9
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to i8*
  store i8 %12, i8* %58, align 8
  %59 = bitcast %"class.std::__1::__tree_end_node"* %51 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 73
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* nonnull align 1 getelementptr inbounds ({ %"class.base::TimeTicks", %"class.base::TimeDelta", i8, [3 x i8], i32 }, { %"class.base::TimeTicks", %"class.base::TimeDelta", i8, [3 x i8], i32 }* @__const._ZNK3net9ProxyList19AddProxyToRetryListEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_14ProxyRetryInfoENS1_4lessIS8_EENS6_INS1_4pairIKS8_S9_EEEEEEN4base9TimeDeltaEbRKNS_11ProxyServerEiRKNS_16NetLogWithSourceE.retry_info, i64 0, i32 3, i64 0), i64 3, i1 false)
  %61 = getelementptr inbounds %"struct.net::ProxyRetryInfo", %"struct.net::ProxyRetryInfo"* %53, i64 0, i32 3
  store i32 %5, i32* %61, align 4
  br label %62

62:                                               ; preds = %46, %41
  %63 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = load i8*, i8** %34, align 8
  %68 = select i1 %66, i8* %67, i8* %33
  %69 = load i64, i64* %35, align 8
  %70 = zext i8 %65 to i64
  %71 = select i1 %66, i64 %69, i64 %70
  call void @_ZNK3net16NetLogWithSource24AddEventWithStringParamsENS_15NetLogEventTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES7_(%"class.net::NetLogWithSource"* %6, i32 29, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 9, i8* %68, i64 %71) #14
  %72 = load i8, i8* %64, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %62
  %75 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %75) #16
  br label %76

76:                                               ; preds = %62, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #14
  ret void
}

declare void @_ZNK3net16NetLogWithSource24AddEventWithStringParamsENS_15NetLogEventTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES7_(%"class.net::NetLogWithSource"*, i32, i8*, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"*) unnamed_addr #2

declare void @_ZN3net11ProxyServerC1ENS0_6SchemeERKNS_12HostPortPairE(%"class.net::ProxyServer"*, i32, %"class.net::HostPortPair"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"class.net::ProxyServer"*, %"class.net::ProxyServer"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.net::ProxyServer"* %2 to i64
  %5 = ptrtoint %"class.net::ProxyServer"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 40
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.net::ProxyServer"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 40
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.net::ProxyServer"*
  br i1 %15, label %129, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.net::ProxyServer"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 40
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 %22
  %25 = select i1 %23, %"class.net::ProxyServer"* %24, %"class.net::ProxyServer"* %2
  %26 = icmp eq %"class.net::ProxyServer"* %25, %1
  br i1 %26, label %73, label %27

27:                                               ; preds = %17, %66
  %28 = phi %"class.net::ProxyServer"* [ %71, %66 ], [ %16, %17 ]
  %29 = phi %"class.net::ProxyServer"* [ %70, %66 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %29, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %28, i64 0, i32 0
  store i32 %31, i32* %32, align 8
  %33 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %28, i64 0, i32 2
  %34 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %29, i64 0, i32 2
  %35 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %33, i64 0, i32 0
  %36 = icmp eq %"class.net::ProxyServer"* %28, %29
  br i1 %36, label %66, label %37

37:                                               ; preds = %27
  %38 = bitcast %"class.net::HostPortPair"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = bitcast %"class.net::HostPortPair"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %41, label %56, label %46

46:                                               ; preds = %37
  br i1 %45, label %50, label %47

47:                                               ; preds = %46
  %48 = bitcast %"class.net::HostPortPair"* %33 to i8*
  %49 = bitcast %"class.net::HostPortPair"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #14
  br label %66

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %35, i8* %52, i64 %54) #14
  br label %66

56:                                               ; preds = %37
  %57 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.net::HostPortPair"* %34 to i8*
  %62 = zext i8 %44 to i64
  %63 = select i1 %45, i8* %58, i8* %61
  %64 = select i1 %45, i64 %60, i64 %62
  %65 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %35, i8* %63, i64 %64) #14
  br label %66

66:                                               ; preds = %56, %50, %47, %27
  %67 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %29, i64 0, i32 2, i32 1
  %68 = load i16, i16* %67, align 8
  %69 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %28, i64 0, i32 2, i32 1
  store i16 %68, i16* %69, align 8
  %70 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %29, i64 1
  %71 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %28, i64 1
  %72 = icmp eq %"class.net::ProxyServer"* %70, %25
  br i1 %72, label %73, label %27

73:                                               ; preds = %66, %17
  %74 = phi %"class.net::ProxyServer"* [ %16, %17 ], [ %71, %66 ]
  br i1 %23, label %75, label %112

75:                                               ; preds = %73
  %76 = load i64, i64* %19, align 8
  %77 = icmp eq %"class.net::ProxyServer"* %25, %2
  br i1 %77, label %110, label %78

78:                                               ; preds = %75
  %79 = inttoptr i64 %76 to %"class.net::ProxyServer"*
  br label %80

80:                                               ; preds = %101, %78
  %81 = phi %"class.net::ProxyServer"* [ %106, %101 ], [ %79, %78 ]
  %82 = phi %"class.net::ProxyServer"* [ %105, %101 ], [ %24, %78 ]
  %83 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %81, i64 0, i32 0
  %84 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %82, i64 0, i32 0
  %85 = load i32, i32* %84, align 8
  store i32 %85, i32* %83, align 8
  %86 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %81, i64 0, i32 2
  %87 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %82, i64 0, i32 2
  %88 = bitcast %"class.net::HostPortPair"* %87 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %80
  %93 = bitcast %"class.net::HostPortPair"* %86 to i8*
  %94 = bitcast %"class.net::HostPortPair"* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 24, i1 false) #14
  br label %101

95:                                               ; preds = %80
  %96 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %86, i64 0, i32 0
  %97 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %96, i8* %98, i64 %100) #14
  br label %101

101:                                              ; preds = %95, %92
  %102 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %81, i64 0, i32 2, i32 1
  %103 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %82, i64 0, i32 2, i32 1
  %104 = load i16, i16* %103, align 8
  store i16 %104, i16* %102, align 8
  %105 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %82, i64 1
  %106 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %81, i64 1
  %107 = icmp eq %"class.net::ProxyServer"* %105, %2
  br i1 %107, label %108, label %80

108:                                              ; preds = %101
  %109 = ptrtoint %"class.net::ProxyServer"* %106 to i64
  br label %110

110:                                              ; preds = %75, %108
  %111 = phi i64 [ %76, %75 ], [ %109, %108 ]
  store i64 %111, i64* %19, align 8
  br label %211

112:                                              ; preds = %73
  %113 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %18, align 8
  %114 = icmp eq %"class.net::ProxyServer"* %113, %74
  br i1 %114, label %128, label %115

115:                                              ; preds = %112, %126
  %116 = phi %"class.net::ProxyServer"* [ %117, %126 ], [ %113, %112 ]
  %117 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %116, i64 -1
  %118 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %116, i64 -1, i32 2
  %119 = bitcast %"class.net::HostPortPair"* %118 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  tail call void @_ZdlPv(i8* %125) #16
  br label %126

126:                                              ; preds = %123, %115
  %127 = icmp eq %"class.net::ProxyServer"* %117, %74
  br i1 %127, label %128, label %115

128:                                              ; preds = %126, %112
  store %"class.net::ProxyServer"* %74, %"class.net::ProxyServer"** %18, align 8
  br label %211

129:                                              ; preds = %3
  %130 = icmp eq i64 %12, 0
  br i1 %130, label %155, label %131

131:                                              ; preds = %129
  %132 = inttoptr i64 %12 to i8*
  %133 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %134 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %133, align 8
  %135 = icmp eq %"class.net::ProxyServer"* %134, %16
  br i1 %135, label %152, label %136

136:                                              ; preds = %131, %147
  %137 = phi %"class.net::ProxyServer"* [ %138, %147 ], [ %134, %131 ]
  %138 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %137, i64 -1
  %139 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %137, i64 -1, i32 2
  %140 = bitcast %"class.net::HostPortPair"* %139 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %140, i64 0, i32 1, i32 0
  %142 = load i8, i8* %141, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %136
  %145 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %139, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8
  tail call void @_ZdlPv(i8* %146) #16
  br label %147

147:                                              ; preds = %144, %136
  %148 = icmp eq %"class.net::ProxyServer"* %138, %16
  br i1 %148, label %149, label %136

149:                                              ; preds = %147
  %150 = bitcast %"class.std::__1::vector"* %0 to i8**
  %151 = load i8*, i8** %150, align 8
  br label %152

152:                                              ; preds = %149, %131
  %153 = phi i8* [ %151, %149 ], [ %132, %131 ]
  store %"class.net::ProxyServer"* %16, %"class.net::ProxyServer"** %133, align 8
  tail call void @_ZdlPv(i8* %153) #16
  %154 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 24, i1 false) #14
  br label %155

155:                                              ; preds = %129, %152
  %156 = phi i64 [ %10, %129 ], [ 0, %152 ]
  %157 = icmp ugt i64 %7, 461168601842738790
  br i1 %157, label %158, label %160

158:                                              ; preds = %155
  %159 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %159) #15
  unreachable

160:                                              ; preds = %155
  %161 = sdiv exact i64 %156, 40
  %162 = icmp ult i64 %161, 230584300921369395
  br i1 %162, label %163, label %167

163:                                              ; preds = %160
  %164 = shl nsw i64 %161, 1
  %165 = icmp ult i64 %164, %7
  %166 = select i1 %165, i64 %7, i64 %164
  br label %167

167:                                              ; preds = %163, %160
  %168 = phi i64 [ %166, %163 ], [ 461168601842738790, %160 ]
  %169 = mul i64 %168, 40
  %170 = tail call i8* @_Znwm(i64 %169) #16
  %171 = bitcast i8* %170 to %"class.net::ProxyServer"*
  %172 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %173 = bitcast %"class.net::ProxyServer"** %172 to i8**
  store i8* %170, i8** %173, align 8
  %174 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %170, i8** %174, align 8
  %175 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %171, i64 %168
  store %"class.net::ProxyServer"* %175, %"class.net::ProxyServer"** %8, align 8
  %176 = bitcast %"class.net::ProxyServer"** %172 to i64*
  %177 = ptrtoint i8* %170 to i64
  %178 = icmp eq %"class.net::ProxyServer"* %1, %2
  br i1 %178, label %209, label %179

179:                                              ; preds = %167, %200
  %180 = phi %"class.net::ProxyServer"* [ %205, %200 ], [ %171, %167 ]
  %181 = phi %"class.net::ProxyServer"* [ %204, %200 ], [ %1, %167 ]
  %182 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %180, i64 0, i32 0
  %183 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %181, i64 0, i32 0
  %184 = load i32, i32* %183, align 8
  store i32 %184, i32* %182, align 8
  %185 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %180, i64 0, i32 2
  %186 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %181, i64 0, i32 2
  %187 = bitcast %"class.net::HostPortPair"* %186 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %188 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %187, i64 0, i32 1, i32 0
  %189 = load i8, i8* %188, align 1
  %190 = icmp slt i8 %189, 0
  br i1 %190, label %194, label %191

191:                                              ; preds = %179
  %192 = bitcast %"class.net::HostPortPair"* %185 to i8*
  %193 = bitcast %"class.net::HostPortPair"* %186 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %192, i8* align 8 %193, i64 24, i1 false) #14
  br label %200

194:                                              ; preds = %179
  %195 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %185, i64 0, i32 0
  %196 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %195, i8* %197, i64 %199) #14
  br label %200

200:                                              ; preds = %194, %191
  %201 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %180, i64 0, i32 2, i32 1
  %202 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %181, i64 0, i32 2, i32 1
  %203 = load i16, i16* %202, align 8
  store i16 %203, i16* %201, align 8
  %204 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %181, i64 1
  %205 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %180, i64 1
  %206 = icmp eq %"class.net::ProxyServer"* %204, %2
  br i1 %206, label %207, label %179

207:                                              ; preds = %200
  %208 = ptrtoint %"class.net::ProxyServer"* %205 to i64
  br label %209

209:                                              ; preds = %167, %207
  %210 = phi i64 [ %177, %167 ], [ %208, %207 ]
  store i64 %210, i64* %176, align 8
  br label %211

211:                                              ; preds = %110, %128, %209
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::__wrap_iter"* %3 to i64*
  %6 = bitcast %"class.std::__1::__wrap_iter"* %4 to i64*
  %7 = load i64, i64* %5, align 8
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %3, i64 0, i32 0
  %9 = inttoptr i64 %7 to i8*
  %10 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, %9
  br i1 %12, label %17, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  br label %18

17:                                               ; preds = %34, %1
  store i8 1, i8* %2, align 4
  br label %61

18:                                               ; preds = %13, %34
  %19 = phi i8* [ %9, %13 ], [ %36, %34 ]
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  store i8* %20, i8** %8, align 8
  %21 = load i8, i8* %19, align 1
  %22 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %14, i8 signext %21, i64 0) #14
  %23 = icmp eq i64 %22, -1
  br i1 %23, label %24, label %34

24:                                               ; preds = %18
  %25 = load i32, i32* %16, align 8
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i8*, i8** %15, align 8
  %29 = load i8, i8* %28, align 1
  switch i8 %29, label %30 [
    i8 32, label %34
    i8 13, label %34
    i8 10, label %34
    i8 9, label %34
    i8 12, label %34
  ]

30:                                               ; preds = %27, %24
  %31 = load i8*, i8** %8, align 8
  %32 = load i8*, i8** %10, align 8
  %33 = icmp eq i8* %31, %32
  br i1 %33, label %61, label %39

34:                                               ; preds = %27, %27, %27, %27, %27, %18
  %35 = load i64, i64* %5, align 8
  store i64 %35, i64* %6, align 8
  %36 = inttoptr i64 %35 to i8*
  %37 = load i8*, i8** %10, align 8
  %38 = icmp eq i8* %37, %36
  br i1 %38, label %17, label %18

39:                                               ; preds = %30, %52
  %40 = phi i8* [ %53, %52 ], [ %31, %30 ]
  %41 = load i8, i8* %40, align 1
  %42 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %14, i8 signext %41, i64 0) #14
  %43 = icmp eq i64 %42, -1
  br i1 %43, label %44, label %61

44:                                               ; preds = %39
  %45 = load i8*, i8** %8, align 8
  %46 = load i32, i32* %16, align 8
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = load i8, i8* %45, align 1
  %50 = add i8 %49, -9
  %51 = icmp ult i8 %50, 24
  br i1 %51, label %56, label %52

52:                                               ; preds = %56, %48, %44
  %53 = getelementptr inbounds i8, i8* %45, i64 1
  store i8* %53, i8** %8, align 8
  %54 = load i8*, i8** %10, align 8
  %55 = icmp eq i8* %53, %54
  br i1 %55, label %61, label %39

56:                                               ; preds = %48
  %57 = zext i8 %50 to i32
  %58 = lshr i32 8388635, %57
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %52, label %61

61:                                               ; preds = %17, %30, %52, %39, %56
  %62 = phi i1 [ true, %56 ], [ false, %17 ], [ true, %30 ], [ true, %52 ], [ true, %39 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  %7 = ptrtoint i8* %3 to i64
  br i1 %6, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %22

12:                                               ; preds = %8, %16
  %13 = phi i64 [ %19, %16 ], [ %7, %8 ]
  %14 = phi i8* [ %17, %16 ], [ %3, %8 ]
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %22 [
    i8 32, label %16
    i8 13, label %16
    i8 10, label %16
    i8 9, label %16
    i8 12, label %16
  ]

16:                                               ; preds = %12, %12, %12, %12, %12
  %17 = getelementptr inbounds i8, i8* %14, i64 1
  store i8* %17, i8** %2, align 8
  %18 = icmp eq i8* %17, %5
  %19 = ptrtoint i8* %17 to i64
  br i1 %18, label %20, label %12

20:                                               ; preds = %16
  %21 = ptrtoint i8* %17 to i64
  br label %22

22:                                               ; preds = %12, %20, %8, %1
  %23 = phi i64 [ %7, %8 ], [ %7, %1 ], [ %21, %20 ], [ %13, %12 ]
  %24 = phi i8* [ %3, %8 ], [ %3, %1 ], [ %5, %20 ], [ %14, %12 ]
  %25 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %27 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  %28 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %29 = bitcast %"class.std::__1::__wrap_iter"* %28 to i64*
  %30 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %32 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 5
  %33 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %28, i64 0, i32 0
  %34 = load i8, i8* %27, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  br label %36

36:                                               ; preds = %113, %22
  %37 = phi i8* [ %5, %22 ], [ %106, %113 ]
  %38 = phi i64 [ %23, %22 ], [ %118, %113 ]
  %39 = phi i8* [ %24, %22 ], [ %114, %113 ]
  %40 = phi i1 [ %35, %22 ], [ false, %113 ]
  %41 = phi i8 [ 0, %22 ], [ %108, %113 ]
  %42 = phi i8 [ 0, %22 ], [ %109, %113 ]
  %43 = phi i8 [ 0, %22 ], [ %110, %113 ]
  br i1 %40, label %105, label %44

44:                                               ; preds = %36
  store i8 0, i8* %27, align 4
  store i64 %38, i64* %29, align 8
  %45 = inttoptr i64 %38 to i8*
  %46 = icmp eq i8* %37, %45
  br i1 %46, label %91, label %47

47:                                               ; preds = %44, %76
  %48 = phi i8* [ %77, %76 ], [ %37, %44 ]
  %49 = phi i8* [ %82, %76 ], [ %39, %44 ]
  %50 = phi i8* [ %82, %76 ], [ %45, %44 ]
  %51 = phi i8 [ %81, %76 ], [ %43, %44 ]
  %52 = phi i8 [ %80, %76 ], [ %42, %44 ]
  %53 = phi i8 [ %79, %76 ], [ %41, %44 ]
  %54 = load i8, i8* %50, align 1
  %55 = icmp eq i8 %51, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %47
  %57 = icmp eq i8 %52, 0
  br i1 %57, label %58, label %76

58:                                               ; preds = %56
  %59 = icmp eq i8 %54, 92
  br i1 %59, label %76, label %60

60:                                               ; preds = %58
  %61 = icmp eq i8 %53, %54
  %62 = select i1 %61, i8 0, i8 %51
  br label %76

63:                                               ; preds = %47
  %64 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %30, i8 signext %54, i64 0) #14
  %65 = icmp eq i64 %64, -1
  br i1 %65, label %66, label %84

66:                                               ; preds = %63
  %67 = load i32, i32* %31, align 8
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  switch i8 %54, label %70 [
    i8 32, label %84
    i8 13, label %84
    i8 10, label %84
    i8 9, label %84
    i8 12, label %84
  ]

70:                                               ; preds = %69, %66
  %71 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %32, i8 signext %54, i64 0) #14
  %72 = icmp ne i64 %71, -1
  %73 = zext i1 %72 to i8
  %74 = load i8*, i8** %26, align 8
  %75 = load i8*, i8** %4, align 8
  br label %76

76:                                               ; preds = %60, %70, %56, %58
  %77 = phi i8* [ %48, %58 ], [ %48, %56 ], [ %75, %70 ], [ %48, %60 ]
  %78 = phi i8* [ %49, %58 ], [ %49, %56 ], [ %74, %70 ], [ %49, %60 ]
  %79 = phi i8 [ %53, %58 ], [ %53, %56 ], [ %54, %70 ], [ %53, %60 ]
  %80 = phi i8 [ 1, %58 ], [ 0, %56 ], [ %52, %70 ], [ 0, %60 ]
  %81 = phi i8 [ %51, %58 ], [ %51, %56 ], [ %73, %70 ], [ %62, %60 ]
  %82 = getelementptr inbounds i8, i8* %78, i64 1
  store i8* %82, i8** %26, align 8
  %83 = icmp eq i8* %82, %77
  br i1 %83, label %84, label %47

84:                                               ; preds = %76, %69, %69, %69, %69, %69, %63
  %85 = phi i8 [ %53, %63 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %79, %76 ]
  %86 = phi i8 [ %52, %63 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %80, %76 ]
  %87 = phi i8 [ 0, %63 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ %81, %76 ]
  %88 = load i8*, i8** %33, align 8
  %89 = load i8*, i8** %26, align 8
  %90 = ptrtoint i8* %89 to i64
  br label %91

91:                                               ; preds = %84, %44
  %92 = phi i64 [ %38, %44 ], [ %90, %84 ]
  %93 = phi i8* [ %39, %44 ], [ %89, %84 ]
  %94 = phi i8* [ %37, %44 ], [ %88, %84 ]
  %95 = phi i8 [ %41, %44 ], [ %85, %84 ]
  %96 = phi i8 [ %42, %44 ], [ %86, %84 ]
  %97 = phi i8 [ %43, %44 ], [ %87, %84 ]
  %98 = icmp eq i8* %94, %93
  br i1 %98, label %99, label %119

99:                                               ; preds = %91
  %100 = load i32, i32* %25, align 8
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %119

103:                                              ; preds = %99
  %104 = load i8*, i8** %4, align 8
  br label %105

105:                                              ; preds = %103, %36
  %106 = phi i8* [ %37, %36 ], [ %104, %103 ]
  %107 = phi i64 [ %38, %36 ], [ %92, %103 ]
  %108 = phi i8 [ %41, %36 ], [ %95, %103 ]
  %109 = phi i8 [ %42, %36 ], [ %96, %103 ]
  %110 = phi i8 [ %43, %36 ], [ %97, %103 ]
  store i8 1, i8* %27, align 4
  store i64 %107, i64* %29, align 8
  %111 = inttoptr i64 %107 to i8*
  %112 = icmp eq i8* %106, %111
  br i1 %112, label %119, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds i8, i8* %111, i64 1
  store i8* %114, i8** %26, align 8
  %115 = load i32, i32* %25, align 8
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = ptrtoint i8* %114 to i64
  br i1 %117, label %36, label %119

119:                                              ; preds = %91, %113, %105, %99
  %120 = phi i1 [ true, %99 ], [ true, %91 ], [ false, %105 ], [ true, %113 ]
  ret i1 %120
}

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"*, %"class.net::ProxyServer"* dereferenceable(40)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.net::ProxyServer"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::ProxyServer"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #16
  %30 = bitcast i8* %29 to %"class.net::ProxyServer"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.net::ProxyServer"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 %9
  %35 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 %32
  %36 = ptrtoint %"class.net::ProxyServer"* %35 to i64
  %37 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 %9, i32 2
  %41 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2
  %42 = bitcast %"class.net::HostPortPair"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %31
  %47 = bitcast %"class.net::HostPortPair"* %40 to i8*
  %48 = bitcast %"class.net::HostPortPair"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #14
  br label %55

49:                                               ; preds = %31
  %50 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %40, i64 0, i32 0
  %51 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %50, i8* %52, i64 %54) #14
  br label %55

55:                                               ; preds = %46, %49
  %56 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 %9, i32 2, i32 1
  %57 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2, i32 1
  %58 = load i16, i16* %57, align 8
  store i16 %58, i16* %56, align 8
  %59 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %34, i64 1
  %60 = ptrtoint %"class.net::ProxyServer"* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %62 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %61, align 8
  %63 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %3, align 8
  %64 = icmp eq %"class.net::ProxyServer"* %63, %62
  br i1 %64, label %65, label %67

65:                                               ; preds = %55
  %66 = ptrtoint %"class.net::ProxyServer"* %62 to i64
  br label %86

67:                                               ; preds = %55, %67
  %68 = phi %"class.net::ProxyServer"* [ %81, %67 ], [ %34, %55 ]
  %69 = phi %"class.net::ProxyServer"* [ %70, %67 ], [ %63, %55 ]
  %70 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %69, i64 -1
  %71 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %68, i64 -1, i32 0
  %72 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %70, i64 0, i32 0
  %73 = load i32, i32* %72, align 8
  store i32 %73, i32* %71, align 8
  %74 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %68, i64 -1, i32 2
  %75 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %69, i64 -1, i32 2
  %76 = bitcast %"class.net::HostPortPair"* %74 to i8*
  %77 = bitcast %"class.net::HostPortPair"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #14
  %78 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %68, i64 -1, i32 2, i32 1
  %79 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %69, i64 -1, i32 2, i32 1
  %80 = load i16, i16* %79, align 8
  store i16 %80, i16* %78, align 8
  %81 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %68, i64 -1
  %82 = icmp eq %"class.net::ProxyServer"* %70, %62
  br i1 %82, label %83, label %67

83:                                               ; preds = %67
  %84 = load i64, i64* %6, align 8
  %85 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %3, align 8
  br label %86

86:                                               ; preds = %65, %83
  %87 = phi %"class.net::ProxyServer"* [ %62, %65 ], [ %85, %83 ]
  %88 = phi %"class.net::ProxyServer"* [ %34, %65 ], [ %81, %83 ]
  %89 = phi i64 [ %66, %65 ], [ %84, %83 ]
  %90 = ptrtoint %"class.net::ProxyServer"* %88 to i64
  store i64 %90, i64* %6, align 8
  store i64 %60, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %91 = inttoptr i64 %89 to %"class.net::ProxyServer"*
  %92 = icmp eq %"class.net::ProxyServer"* %87, %91
  br i1 %92, label %106, label %93

93:                                               ; preds = %86, %104
  %94 = phi %"class.net::ProxyServer"* [ %95, %104 ], [ %87, %86 ]
  %95 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %94, i64 -1
  %96 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %94, i64 -1, i32 2
  %97 = bitcast %"class.net::HostPortPair"* %96 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %93
  %102 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  tail call void @_ZdlPv(i8* %103) #16
  br label %104

104:                                              ; preds = %101, %93
  %105 = icmp eq %"class.net::ProxyServer"* %95, %91
  br i1 %105, label %106, label %93

106:                                              ; preds = %104, %86
  %107 = icmp eq i64 %89, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %106
  %109 = inttoptr i64 %89 to i8*
  tail call void @_ZdlPv(i8* %109) #16
  br label %110

110:                                              ; preds = %106, %108
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net14ProxyRetryInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #14
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #14
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net11ProxyServerENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"class.net::ProxyServer"* dereferenceable(40)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.net::ProxyServer"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::ProxyServer"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #16
  %30 = bitcast i8* %29 to %"class.net::ProxyServer"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.net::ProxyServer"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 %9
  %35 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 %32
  %36 = ptrtoint %"class.net::ProxyServer"* %35 to i64
  %37 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 %9, i32 2
  %41 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2
  %42 = bitcast %"class.net::HostPortPair"* %40 to i8*
  %43 = bitcast %"class.net::HostPortPair"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #14
  %44 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 %9, i32 2, i32 1
  %45 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2, i32 1
  %46 = load i16, i16* %45, align 8
  store i16 %46, i16* %44, align 8
  %47 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %34, i64 1
  %48 = ptrtoint %"class.net::ProxyServer"* %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %50 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %49, align 8
  %51 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %3, align 8
  %52 = icmp eq %"class.net::ProxyServer"* %51, %50
  br i1 %52, label %53, label %55

53:                                               ; preds = %31
  %54 = ptrtoint %"class.net::ProxyServer"* %50 to i64
  br label %74

55:                                               ; preds = %31, %55
  %56 = phi %"class.net::ProxyServer"* [ %69, %55 ], [ %34, %31 ]
  %57 = phi %"class.net::ProxyServer"* [ %58, %55 ], [ %51, %31 ]
  %58 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %57, i64 -1
  %59 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %56, i64 -1, i32 0
  %60 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %58, i64 0, i32 0
  %61 = load i32, i32* %60, align 8
  store i32 %61, i32* %59, align 8
  %62 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %56, i64 -1, i32 2
  %63 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %57, i64 -1, i32 2
  %64 = bitcast %"class.net::HostPortPair"* %62 to i8*
  %65 = bitcast %"class.net::HostPortPair"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #14
  %66 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %56, i64 -1, i32 2, i32 1
  %67 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %57, i64 -1, i32 2, i32 1
  %68 = load i16, i16* %67, align 8
  store i16 %68, i16* %66, align 8
  %69 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %56, i64 -1
  %70 = icmp eq %"class.net::ProxyServer"* %58, %50
  br i1 %70, label %71, label %55

71:                                               ; preds = %55
  %72 = load i64, i64* %6, align 8
  %73 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %3, align 8
  br label %74

74:                                               ; preds = %53, %71
  %75 = phi %"class.net::ProxyServer"* [ %50, %53 ], [ %73, %71 ]
  %76 = phi %"class.net::ProxyServer"* [ %34, %53 ], [ %69, %71 ]
  %77 = phi i64 [ %54, %53 ], [ %72, %71 ]
  %78 = ptrtoint %"class.net::ProxyServer"* %76 to i64
  store i64 %78, i64* %6, align 8
  store i64 %48, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %79 = inttoptr i64 %77 to %"class.net::ProxyServer"*
  %80 = icmp eq %"class.net::ProxyServer"* %75, %79
  br i1 %80, label %94, label %81

81:                                               ; preds = %74, %92
  %82 = phi %"class.net::ProxyServer"* [ %83, %92 ], [ %75, %74 ]
  %83 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %82, i64 -1
  %84 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %82, i64 -1, i32 2
  %85 = bitcast %"class.net::HostPortPair"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  tail call void @_ZdlPv(i8* %91) #16
  br label %92

92:                                               ; preds = %89, %81
  %93 = icmp eq %"class.net::ProxyServer"* %83, %79
  br i1 %93, label %94, label %81

94:                                               ; preds = %92, %74
  %95 = icmp eq i64 %77, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = inttoptr i64 %77 to i8*
  tail call void @_ZdlPv(i8* %97) #16
  br label %98

98:                                               ; preds = %94, %96
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net14ProxyRetryInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #14
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #14
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net14ProxyRetryInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.64"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net14ProxyRetryInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %6, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %57

12:                                               ; preds = %5
  %13 = call i8* @_Znwm(i64 80) #16, !noalias !7
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8, !noalias !7
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1, !noalias !7
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %12
  %22 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %22, i64 24, i1 false) #14, !noalias !7
  br label %29

23:                                               ; preds = %12
  %24 = bitcast i8* %14 to %"class.std::__1::basic_string"*
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8, !noalias !7
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !7
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %24, i8* %26, i64 %28) #14, !noalias !7
  br label %29

29:                                               ; preds = %21, %23
  %30 = getelementptr inbounds i8, i8* %13, i64 56
  %31 = getelementptr inbounds i8, i8* %13, i64 72
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #14, !noalias !7
  store i8 1, i8* %31, align 8, !noalias !7
  %32 = getelementptr inbounds i8, i8* %13, i64 76
  %33 = bitcast i8* %32 to i32*
  store i32 0, i32* %33, align 4, !noalias !7
  %34 = bitcast %"class.std::__1::__tree_end_node"** %6 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast i8* %13 to %"class.std::__1::__tree_node"*
  %37 = bitcast i8* %13 to %"class.std::__1::__tree_node_base"*
  %38 = getelementptr inbounds i8, i8* %13, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #14
  %39 = bitcast i8* %38 to i64*
  store i64 %35, i64* %39, align 8
  %40 = bitcast %"class.std::__1::__tree_node_base"** %8 to i8**
  store i8* %13, i8** %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 0, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %29
  %47 = ptrtoint %"class.std::__1::__tree_node_base"* %44 to i64
  %48 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %47, i64* %48, align 8
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %8, align 8
  br label %50

50:                                               ; preds = %46, %29
  %51 = phi %"class.std::__1::__tree_node_base"* [ %37, %29 ], [ %49, %46 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %53, %"class.std::__1::__tree_node_base"* %51) #14
  %54 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %54, align 8
  br label %57

57:                                               ; preds = %50, %5
  %58 = phi i8 [ 1, %50 ], [ 0, %5 ]
  %59 = phi %"class.std::__1::__tree_node"* [ %36, %50 ], [ %10, %5 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %59, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  %61 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %60, 0
  %62 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %61, i8 %58, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net14ProxyRetryInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #14
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #14
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3net11ProxyServer6DirectEv: argument 0"}
!5 = distinct !{!5, !"_ZN3net11ProxyServer6DirectEv"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net14ProxyRetryInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_IST_EEEEEEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net14ProxyRetryInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_IST_EEEEEEDpOT_"}
